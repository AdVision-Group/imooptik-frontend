{"version":3,"sources":["pages/reset-password/reset.password.styles.jsx","pages/reset-password/reset-password.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx"],"names":["Center","styled","div","FormContainer","form","SubmitButton","CustomButton","ResetPassword","useContext","AuthContext","isLoading","isWaitingForResponse","setIsLoading","errMessage","handleCreatingNewPassword","push","useHistory","token","useParams","useState","password","setPassword","Fragment","loading","title","close","onSubmit","e","preventDefault","label","type","name","value","handleChange","target","required","shrinkLabel","css","InputGroup","CustomInput","otherProps","className","onChange","htmlFor","length"],"mappings":"07BAGO,IAAMA,EAASC,IAAOC,IAAV,KAQNC,EAAgBF,IAAOG,KAAV,KAuBbC,EAAeJ,YAAOK,IAAPL,CAAH,KCuBVM,UA3CO,WAAO,IAAD,EACyEC,qBAAWC,KAApGC,EADgB,EAChBA,UAAWC,EADK,EACLA,qBAAsBC,EADjB,EACiBA,aAAcC,EAD/B,EAC+BA,WAAYC,EAD3C,EAC2CA,0BAC3DC,EAASC,cAATD,KACAE,EAAUC,cAAVD,MAHgB,EAKQE,mBAAS,IALjB,mBAKjBC,EALiB,KAKPC,EALO,KAkBxB,OACI,eAAC,IAAMC,SAAP,WACKZ,GAAa,cAAC,IAAD,CAAOa,QAASZ,EAAsBa,MAAOX,EAAYY,MAPzD,WAClBb,GAAa,GACbG,EAAK,QAMD,cAACf,EAAD,UAEI,eAACG,EAAD,CAAeuB,SAhBN,SAAAC,GACjBA,EAAEC,iBAEFd,EAA0BG,EAAOG,IAazB,UACI,6DAEA,cAAC,IAAD,CACIS,MAAM,gBACNC,KAAK,WACLC,KAAK,WACLC,MAAOZ,EACPa,aAAc,SAACN,GAAD,OAAON,EAAYM,EAAEO,OAAOF,QAC1CG,UAAQ,IAGZ,cAAC9B,EAAD,qC,03CC/CpB,IAAM+B,EAAcC,YAAH,KAMJC,EAAarC,IAAOC,IAAV,IAuBTkC,EAmBAA,GC3BCG,IAnBK,SAAC,GAAkD,IAAhDN,EAA+C,EAA/CA,aAAcJ,EAAiC,EAAjCA,MAAOE,EAA0B,EAA1BA,KAASS,EAAiB,+CAClE,OACI,eAACF,EAAD,WACI,mCACIG,UAAU,aACVV,KAAMA,EACNW,SAAUT,GACNO,IAEPX,EACG,uBAAOc,QAASZ,EAAMU,UAAS,UAAKD,EAAWR,MAAMY,OAAS,SAAW,GAA1C,qBAA/B,SACKf,IAEL","file":"static/js/18.56a242b1.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nexport const Center = styled.div`\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const FormContainer = styled.form`\n    display: block;\n    height: initial;\n    width: 100%;\n    max-width: 35rem;\n    padding: 3rem 4rem;\n    border-radius: .5rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n\n    margin: 0 1rem 3rem;\n\n\n    h2 {\n        font-size: 2.8rem;\n        text-align: center;\n        margin-bottom: 5rem;\n\n        @media all and (max-width: 500px) {\n            font-size: 2.5rem;\n        }\n    }\n`\n\nexport const SubmitButton = styled(CustomButton)`\n    width: 100%;\n`","import React, { useState, useContext } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { useHistory, useParams } from 'react-router-dom'\n\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport PopUp from '../../components/popup/pop-up.component'\n\nimport {\n    FormContainer,\n    SubmitButton,\n    Center\n} from './reset.password.styles'\n\n\nconst ResetPassword = () => {\n    const { isLoading, isWaitingForResponse, setIsLoading, errMessage, handleCreatingNewPassword } = useContext(AuthContext)\n    const { push } = useHistory()\n    const { token } = useParams()\n\n    const [password, setPassword] = useState(\"\")\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        handleCreatingNewPassword(token, password)\n    }\n\n    const handleOnClose = () => {\n        setIsLoading(false)\n        push('/')\n    }\n\n    return (\n        <React.Fragment>\n            {isLoading && <PopUp loading={isWaitingForResponse} title={errMessage} close={handleOnClose} />}\n            <Center>\n\n                <FormContainer onSubmit={handleSubmit}>\n                    <h2>Vytvoriť nové heslo</h2>\n\n                    <CustomInput\n                        label=\"Nové heslo\"\n                        type='password'\n                        name='password'\n                        value={password}\n                        handleChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n\n                    <SubmitButton>Odoslať</SubmitButton>\n                </FormContainer>\n            </Center>\n\n        </React.Fragment>\n    )\n}\n\nexport default ResetPassword\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput"],"sourceRoot":""}
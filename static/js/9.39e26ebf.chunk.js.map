{"version":3,"sources":["sections/customer-profile/customer-profile.styles.jsx","sections/customer-profile/customer-profile.section.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","components/order-overview/order-overview.styles.jsx","components/order-overview/order-overview.component.jsx"],"names":["Header","styled","div","paddingStyles","Profile","DeleteProfileButton","CustomButton","GridContainer","ZeroMargin","GridRow","ThreeColRow","Row","SaveButton","Title","h2","Container","CustomerProfile","useContext","UserContext","user","getUser","closeModal","isLoading","showModal","message","id","useParams","useState","fName","setFName","lName","setLName","email","setEmail","phoneNumber","setPhoneNumber","street","setStreet","psc","setPsc","city","setCity","state","setState","dLeftEye","setDLeftEye","dRightEye","setDRightEye","rLeftEye","setRLeftEye","rRightEye","setRRightEye","cLeftEye","setCLeftEye","cRightEye","setCRightEye","ocLeftEye","setOcLeftEye","ocRightEye","setOcRightEye","console","log","useEffect","name","split","phone","address","country","lenses","diopters","length","distance","cylinder","cylinderAxes","loading","title","close","label","type","value","handleChange","e","target","date","totalPrice","ScrollContainer","children","OrderContainer","OrderContent","OrderId","p","Date","Price","Options","UpdateButton","DeleteButton","OrderOverview","props"],"mappings":"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","file":"static/js/9.39e26ebf.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nimport { paddingStyles } from '../../global.styles'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n`\n\nexport const Profile = styled.div`\n    /* padding: 2rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08); */\n    margin-right: 2rem;\n\n`\n\nexport const Name = styled.div`\n    font-size: 4.5rem;\n    font-weight: 700;\n`\n\nexport const DeleteProfileButton = styled(CustomButton)`\n    background-color: #DD4C4C;\n    font-size: 1.4rem;\n`\n\nexport const GridContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: start;\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n    }\n`\n\nexport const ZeroMargin = styled.div`\n    input {\n        margin-bottom: 0 !important;\n    }\n`\n\nexport const GridRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n`\n\nexport const ThreeColRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-items: center;\n\n    input {\n        margin-bottom: 0 !important;\n    }\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr 1fr;\n        grid-template-areas:\n            \"a a\"\n            \"b c\";\n\n        div:nth-child(1){\n            grid-area: a;\n            margin-bottom: 0;\n        }\n        div:nth-child(2){\n            grid-area: b;\n            margin-bottom: 2rem;\n\n        }\n        div:nth-child(3){\n            grid-area: c;\n            margin-bottom: 2rem;\n        }\n    }\n`\n\nexport const Row = styled.div`\n    width: 75%;\n`\n\nexport const SaveButton = styled(CustomButton)`\n    margin-left: 2rem;\n    font-size: 1.4rem;\n`\n\nexport const Title = styled.h2`\n    margin-bottom: 2rem;\n`\n\nexport const Container = styled.div`\n    margin-top: 2rem;\n`","import React, { useState, useContext, useEffect } from 'react'\nimport { UserContext } from '../../context/user/user.context'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport OrderOverview from '../../components/order-overview/order-overview.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    Profile,\n    DeleteProfileButton,\n    // Name,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    SaveButton,\n    Title,\n    Container\n} from './customer-profile.styles'\n\nconst CustomerProfile = () => {\n    const {\n        user,\n        getUser,\n        closeModal,\n        isLoading,\n        showModal,\n        message\n    } = useContext(UserContext)\n    const { id } = useParams()\n    // const { push } = useHistory()\n\n    const [fName, setFName] = useState('')\n    const [lName, setLName] = useState('')\n\n    const [email, setEmail] = useState('')\n    const [phoneNumber, setPhoneNumber] = useState('')\n\n    const [street, setStreet] = useState('')\n    const [psc, setPsc] = useState('')\n    const [city, setCity] = useState('')\n    const [state, setState] = useState('')\n\n    const [dLeftEye, setDLeftEye] = useState('')\n    const [dRightEye, setDRightEye] = useState('')\n\n    const [rLeftEye, setRLeftEye] = useState('')\n    const [rRightEye, setRRightEye] = useState('')\n\n    const [cLeftEye, setCLeftEye] = useState('')\n    const [cRightEye, setCRightEye] = useState('')\n\n    const [ocLeftEye, setOcLeftEye] = useState('')\n    const [ocRightEye, setOcRightEye] = useState('')\n\n    console.log(id)\n    console.log(user)\n\n    useEffect(() => {\n        if (id === 'novy-zakaznik') return\n        getUser(id)\n    }, [id])\n\n    useEffect(() => {\n        if (user) {\n            if (user.name) {\n                setFName(user.name.split(\" \")[0] || '')\n                setLName(user.name.split(\" \")[1] || '')\n            }\n            setEmail(user.email || '')\n            setPhoneNumber(user.phone || '')\n            setStreet(user.address || '')\n            setPsc(user.psc || '')\n            setCity(user.city || '')\n            setState(user.country || '')\n\n            if (user.lenses.diopters.length > 0) {\n                setDLeftEye(user.lenses.diopters[0] || '')\n                setDRightEye(user.lenses.diopters[1] || '')\n            }\n            if (user.lenses.distance.length > 0) {\n                setRLeftEye(user.lenses.distance[0] || '')\n                setRRightEye(user.lenses.distance[1] || '')\n\n            }\n            if (user.lenses.cylinder.length > 0) {\n                setCLeftEye(user.lenses.cylinder[0] || '')\n                setCRightEye(user.lenses.cylinder[1] || '')\n            }\n            if (user.lenses.cylinderAxes.length > 0) {\n                setOcLeftEye(user.lenses.cylinderAxes[0] || '')\n                setOcRightEye(user.lenses.cylinderAxes[1] || '')\n            }\n        }\n        return () => {\n            setFName('')\n            setLName('')\n\n            setEmail('')\n            setPhoneNumber('')\n\n            setStreet('')\n            setPsc('')\n            setCity('')\n            setState('')\n\n            setDLeftEye('')\n            setDRightEye('')\n\n            setRLeftEye('')\n            setRRightEye('')\n\n            setCLeftEye('')\n            setCRightEye('')\n\n            setOcLeftEye('')\n            setOcRightEye('')\n        }\n    }, [user])\n\n    useEffect(() => {\n        if (id === 'novy-zakaznik') {\n            setFName('')\n            setLName('')\n\n            setEmail('')\n            setPhoneNumber('')\n\n            setStreet('')\n            setPsc('')\n            setCity('')\n            setState('')\n\n            setDLeftEye('')\n            setDRightEye('')\n\n            setRLeftEye('')\n            setRRightEye('')\n\n            setCLeftEye('')\n            setCRightEye('')\n\n            setOcLeftEye('')\n            setOcRightEye('')\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n\n            <Header>\n                <h1>Profil</h1>\n                <div>\n                    <DeleteProfileButton>Vymazať</DeleteProfileButton>\n                    <SaveButton>\n                        Uložiť zmeny\n                    </SaveButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                <GridContainer>\n                    <Profile>\n                        <div>\n                            <h2>Informácie</h2>\n                            <GridRow>\n                                <div>\n                                    <CustomInput\n                                        label=\"Meno\"\n                                        type='text'\n                                        name='fname'\n                                        value={fName}\n                                        handleChange={(e) => setFName(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Priezvisko\"\n                                        type='text'\n                                        name='lname'\n                                        value={lName}\n                                        handleChange={(e) => setLName(e.target.value)}\n                                    />\n                                </div>\n                            </GridRow>\n                        </div>\n\n                        <Container>\n                            <h2>Kontaktné údaje</h2>\n                            <Row>\n                                <div>\n                                    <CustomInput\n                                        label=\"E-mail\"\n                                        type='email'\n                                        name='email'\n                                        value={email}\n                                        handleChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Telefónne číslo\"\n                                        type='text'\n                                        name='phone'\n                                        value={phoneNumber}\n                                        handleChange={(e) => setPhoneNumber(e.target.value)}\n                                    />\n                                </div>\n                            </Row>\n                        </Container>\n\n                        <Container>\n                            <h2>Fakturačné údaje</h2>\n                            <GridRow>\n                                <ZeroMargin>\n                                    <CustomInput\n                                        label=\"Ulica a čislo domu\"\n                                        type='text'\n                                        name='street'\n                                        value={street}\n                                        handleChange={(e) => setStreet(e.target.value)}\n                                    />\n                                </ZeroMargin>\n                                <ZeroMargin>\n                                    <CustomInput\n                                        label=\"PSČ\"\n                                        type='text'\n                                        name='psc'\n                                        value={psc}\n                                        handleChange={(e) => setPsc(e.target.value)}\n                                    />\n                                </ZeroMargin>\n                            </GridRow>\n                            <GridRow>\n                                <div>\n                                    <CustomInput\n                                        label=\"Mesto\"\n                                        type='text'\n                                        name='city'\n                                        value={city}\n                                        handleChange={(e) => setCity(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Krajina\"\n                                        type='text'\n                                        name='state'\n                                        value={state}\n                                        handleChange={(e) => setState(e.target.value)}\n                                    />\n                                </div>\n                            </GridRow>\n                        </Container>\n\n                        <Container>\n                            <h2>Parametre</h2>\n\n                            <ThreeColRow>\n                                <div>\n                                    Dioptrie\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Ľavé oko\"\n                                        type='text'\n                                        name='city'\n                                        value={dLeftEye}\n                                        handleChange={(e) => setDLeftEye(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Pravé oko\"\n                                        type='text'\n                                        name='state'\n                                        value={dRightEye}\n                                        handleChange={(e) => setDRightEye(e.target.value)}\n                                    />\n                                </div>\n                            </ThreeColRow>\n\n                            <ThreeColRow>\n                                <div>\n                                    Vzdialenosť\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Ľavé oko\"\n                                        type='text'\n                                        name='city'\n                                        value={rLeftEye}\n                                        handleChange={(e) => setRLeftEye(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Pravé oko\"\n                                        type='text'\n                                        name='state'\n                                        value={rRightEye}\n                                        handleChange={(e) => setRRightEye(e.target.value)}\n                                    />\n                                </div>\n                            </ThreeColRow>\n\n                            <ThreeColRow>\n                                <div>\n                                    Cylinder\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Ľavé oko\"\n                                        type='text'\n                                        name='city'\n                                        value={cLeftEye}\n                                        handleChange={(e) => setCLeftEye(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Pravé oko\"\n                                        type='text'\n                                        name='state'\n                                        value={cRightEye}\n                                        handleChange={(e) => setCRightEye(e.target.value)}\n                                    />\n                                </div>\n                            </ThreeColRow>\n\n                            <ThreeColRow>\n                                <div>\n                                    Os cylindrov\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Ľavé oko\"\n                                        type='text'\n                                        name='city'\n                                        value={ocLeftEye}\n                                        handleChange={(e) => setOcLeftEye(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Pravé oko\"\n                                        type='text'\n                                        name='state'\n                                        value={ocRightEye}\n                                        handleChange={(e) => setOcRightEye(e.target.value)}\n                                    />\n                                </div>\n                            </ThreeColRow>\n                        </Container>\n\n\n                    </Profile>\n\n                    <div>\n                        <Title>\n                            Objednávky\n                        </Title>\n\n                        <div>\n                            <OrderOverview\n                                name='Product name'\n                                id='[Product ID]'\n                                date='28. November 2020'\n                                totalPrice='99.99'\n                            />\n                            <OrderOverview\n                                name='Product name'\n                                id='[Product ID]'\n                                date='28. November 2020'\n                                totalPrice='99.99'\n                            />\n                            <OrderOverview\n                                name='Product name'\n                                id='[Product ID]'\n                                date='28. November 2020'\n                                totalPrice='99.99'\n                            />\n                        </div>\n                    </div>\n                </GridContainer>\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CustomerProfile\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`","import React from 'react'\nimport { Container } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            {children}\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const OrderContainer = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 25rem;\n\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    padding: 2rem;\n\n    &:not(:last-child) {\n        margin-bottom: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n\n    }\n`\n\nexport const OrderContent = styled.div`\n    h2 {\n        font-size: 1.6rem;\n    }\n`\n\nexport const OrderId = styled.p`\n    font-size: 1.2rem;\n    color: gray;\n    margin-bottom: 2rem;\n`\n\nexport const Date = styled.p`\n    font-size: 1.4rem;\n    /* font-weight: 700; */\n    color: gray;\n    margin-bottom: 2rem;\n`\n\nexport const Price = styled.p`\n    font-weight: 700;\n    font-size: 1.8rem;\n`\n\nexport const Options = styled.div`\n    align-self: end;\n    justify-self: end;\n`\n\nexport const UpdateButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    margin-right: 1rem;\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    background-color: rgb(235, 172, 1);\n`","import React from 'react'\n\nimport {\n    OrderContainer,\n    OrderContent,\n    Options,\n    OrderId,\n    Date,\n    DeleteButton,\n    Price,\n    UpdateButton\n} from './order-overview.styles'\n\nconst OrderOverview = (props) => {\n    const { name, id, date, totalPrice } = props\n\n    return (\n        <OrderContainer>\n\n            <OrderContent>\n                <h2>{name}</h2>\n                <OrderId>{id}</OrderId>\n                <Date>{date}</Date>\n                <Price>{totalPrice}€</Price>\n            </OrderContent>\n\n            <Options>\n                <UpdateButton>\n                    Upraviť\n                </UpdateButton>\n                <DeleteButton>\n                    Vymazať\n                </DeleteButton>\n            </Options>\n\n        </OrderContainer>\n    )\n}\n\nexport default OrderOverview\n"],"sourceRoot":""}
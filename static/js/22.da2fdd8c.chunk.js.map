{"version":3,"sources":["context/user/user.utils.jsx","context/user/user.queries.jsx","context/user/user.context.jsx"],"names":["initUserObj","address","admin","premises","boughtProducts","city","country","date","email","finishedRegistration","company","ico","dic","icdph","psc","lenses","cylinder","cylinderAxes","diopters","distance","addition","basis","prism","name","orders","phone","tempUser","totalSpent","watchList","fName","lName","password","confirmPassword","birthDate","Date","now","optometrist","fetchUser","token","id","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","process","patchUser","user","body","JSON","stringify","postUser","postAdmin","console","log","Number","UserContext","createContext","isUpdating","activeIndex","handleChangeFilterItem","filterItems","totalCount","users","getUser","handleChange","handleCompanyChange","updateUser","resetUser","formToShow","switchFormButtons","toggleUserForm","createUser","getFilteredUsers","getUserByQuery","UserProvider","children","push","useHistory","useContext","AuthContext","LoadingModalContext","closeModal","getMessage","setIsLoading","setShowModal","useState","setUser","setUsers","setIsUpdating","setActiveIndex","setFormToShow","useEffect","a","response","json","data","split","message","error","includes","filters","_id","type","filter","raw","query","Provider","value","itemIndex","e","target","handleParameterChange","idx","arr","preventDefault"],"mappings":"sGAAA,kCAAO,IAAMA,EAAc,CACvBC,QAAS,GACTC,MAAO,EACPC,SAAU,EACVC,eAAgB,GAChBC,KAAM,GACNC,QAAS,GACTC,KAAM,GACNC,MAAO,GACPC,sBAAsB,EACtBC,QAAS,CACLC,IAAK,GACLC,IAAK,GACLC,MAAO,GACPZ,QAAS,GACTa,IAAK,GACLR,QAAS,IAEbS,OAAQ,CACJC,SAAU,GACVC,aAAc,GACdC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,MAAO,IAEXC,KAAM,GACNC,OAAQ,GACRC,MAAO,GACPX,IAAK,GACLY,UAAU,EACVC,WAAY,EACZC,UAAW,GACXC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,UAAWC,KAAKC,MAChBC,aAAa,I,4KCxBJC,EAAY,SAACC,EAAOC,GAC7B,IAAMC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAcJ,GAC/BE,EAAUE,OAAO,eAAgB,oBAGjC,IAAMC,EAAiB,CACnBC,OAAQ,MACRC,QAASL,EACTM,SAAU,UAGd,OAAOC,MAAM,GAAD,OAAIC,6BAAJ,4BAA8DT,GAAMI,IAGvEM,EAAY,SAACX,EAAOY,EAAMX,GAuBnC,IAAMC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAcJ,GAC/BE,EAAUE,OAAO,eAAgB,oBAGjC,IAsBMC,EAAiB,CACnBC,OAAQ,QACRC,QAASL,EACTW,KAzBQC,KAAKC,UAAL,eACLH,IAyBHJ,SAAU,UAGd,OAAOC,MAAM,GAAD,OAAIC,6BAAJ,4BAA8DT,GAAMI,IAGvEW,EAAW,SAAChB,EAAOY,GAAU,IAElC3B,EAEA2B,EAFA3B,KACAf,EACA0C,EADA1C,MAIEgC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAcJ,GAC/BE,EAAUE,OAAO,eAAgB,oBAGjC,IAKMC,EAAiB,CACnBC,OAAQ,OACRC,QAASL,EACTW,KARQC,KAAKC,UAAU,CACvB7C,MAAOA,EACPe,KAAMA,IAONuB,SAAU,UAGd,OAAOC,MAAM,GAAD,OAAIC,6BAAJ,sBAAgEL,IAGnEY,EAAY,SAACjB,EAAOY,GAC7BM,QAAQC,IAAIP,GAD0B,IAIlC3B,EAKA2B,EALA3B,KACAf,EAIA0C,EAJA1C,MACAuB,EAGAmB,EAHAnB,SACA5B,EAEA+C,EAFA/C,SACAD,EACAgD,EADAhD,MAGEsC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAcJ,GAC/BE,EAAUE,OAAO,eAAgB,oBAGjC,IAQMC,EAAiB,CACnBC,OAAQ,OACRC,QAASL,EACTW,KAXQC,KAAKC,UAAU,CACvBnD,MAAOwD,OAAOxD,GACdM,MAAOA,EACPe,KAAMA,EACNpB,SAAUuD,OAAOvD,GACjB4B,aAOAe,SAAU,UAGd,OAAOC,MAAM,GAAD,OAAIC,6BAAJ,sBAAgEL,I,QCnInEgB,EAAcC,wBAAc,CACrCC,YAAY,EACZC,YAAa,EACbC,uBAAwB,aACxBC,YAAa,GACbC,WAAY,EACZC,MAAO,KACPhB,KAAM,KAENiB,QAAS,aACTC,aAAc,aACdC,oBAAqB,aACrBC,WAAY,aACZC,UAAW,aACXC,WAAY,EACZC,kBAAmB,GACnBC,eAAgB,aAChBC,WAAY,aACZC,iBAAkB,aAClBC,eAAgB,eA4ZLC,UAzZM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACZC,EAASC,cAATD,KACA1C,EAAU4C,qBAAWC,KAArB7C,MAF2B,EAQ/B4C,qBAAWE,KAJXC,EAJ+B,EAI/BA,WACAC,EAL+B,EAK/BA,WACAC,EAN+B,EAM/BA,aACAC,EAP+B,EAO/BA,aAP+B,EAYXC,mBAASzF,KAZE,mBAY5BkD,EAZ4B,KAYtBwC,EAZsB,OAaTD,mBAAS,MAbA,mBAa5BvB,EAb4B,KAarByB,EAbqB,OAcCF,mBAAS,GAdV,mBAc5BxB,EAd4B,aAkBCwB,oBAAS,IAlBV,mBAkB5B5B,EAlB4B,KAkBhB+B,EAlBgB,OAmBGH,mBAAS,GAnBZ,mBAmB5B3B,EAnB4B,KAmBf+B,EAnBe,OA6CCJ,mBAAS,GA7CV,mBA6C5BjB,EA7C4B,KA6ChBsB,EA7CgB,KAqGnCC,qBAAU,WACNL,EAAQ,2BACDxC,GADA,IAEH3B,KAAM2B,EAAKrB,MAAQ,IAAMqB,EAAKpB,WAEnC,CAACoB,EAAKrB,MAAOqB,EAAKpB,QAErB,IAwCMqC,EAAO,uCAAG,WAAO5B,GAAP,iBAAAyD,EAAA,6DACZT,GAAa,GACbC,GAAa,GACbI,GAAc,GAHF,kBAMevD,EAAUC,EAAOC,GANhC,cAMF0D,EANE,gBAOWA,EAASC,OAPpB,QAOFC,EAPE,QASCjD,MACLwC,EAAQ,uCACDxC,GACAiD,EAAKjD,MAFL,IAGHrB,MAAOsE,EAAKjD,KAAK3B,KAAO4E,EAAKjD,KAAK3B,KAAK6E,MAAM,KAAK,GAAK,GACvDtE,MAAOqE,EAAKjD,KAAK3B,KAAO4E,EAAKjD,KAAK3B,KAAK6E,MAAM,KAAK,GAAK,MAE3Db,GAAa,GACbF,MAGAC,EAAWa,EAAKE,SAChBd,GAAa,IArBT,kDAwBR/B,QAAQC,IAAR,MACA6B,EAAW,qBACXC,GAAa,GA1BL,0DAAH,sDA+BPjB,EAAU,uCAAG,WAAOpB,EAAMX,GAAb,iBAAAyD,EAAA,6DACfT,GAAa,GACbC,GAAa,GAEbhC,QAAQC,IAAIP,GAJG,kBAOYD,EAAUX,EAAOY,EAAMX,GAPnC,cAOL0D,EAPK,gBAQQA,EAASC,OARjB,UAQLC,EARK,OAUX3C,QAAQC,IAAI0C,IAERA,EAAKG,MAZE,wBAaPhB,EAAWa,EAAKE,SACG,WAAfF,EAAKG,OAAsBH,EAAKE,QAAQE,SAAS,wBACjDjB,EAAW,wDAEI,iBAAfa,EAAKG,OACLhB,EAAW,6DAEfC,GAAa,GApBN,2BAyBXA,GAAa,GACbF,IACAL,EAAK,wBACLJ,EAAiB,CACb4B,QAAS,CACLtG,MAAO4D,KA9BJ,kDAqCXN,QAAQC,IAAR,MACA6B,EAAW,qBACXC,GAAa,GAvCF,0DAAH,wDA2CVZ,EAAU,uCAAG,WAAOzB,GAAP,qBAAA8C,EAAA,yDACfT,GAAa,GACbC,GAAa,GAFE,SAKQ,IAAfhB,EALO,oBAMH2B,EAAO,GACNjD,EAAKuD,IAPH,wBAQHjD,QAAQC,IAAI,qBART,SASoBH,EAAShB,EAAOY,GATpC,cASG+C,EATH,iBAWUA,EAASC,OAXnB,WAWHC,EAXG,OAaH3C,QAAQC,IAAI0C,IAERA,EAAKG,MAfN,wBAgBChB,EAAWa,EAAKE,SAEE,UAAdF,EAAKO,MACLpB,EAAW,kBAEI,WAAfa,EAAKG,OAAsBH,EAAKE,QAAQE,SAAS,UACjDjB,EAAW,+BAEfC,GAAa,GAxBd,2BA4BHG,EAAQ,2BACDxC,GADA,IAEHuD,IAAKN,EAAKjD,KAAKuD,OA9BhB,QAkCPnC,EAAW,CACPmC,IAAKN,EAAKjD,KAAOiD,EAAKjD,KAAKuD,IAAMvD,EAAKuD,IACtC1F,OAAO,eACAmC,EAAKnC,QAEZd,QAASiD,EAAK7C,KACdA,KAAM6C,EAAK7C,KACXC,QAAS4C,EAAK5C,QACdmB,MAAOyB,EAAKzB,MACZX,IAAKoC,EAAKzB,QA3CP,yCAmDgB8B,EAAUjB,EAAOY,GAnDjC,eAmDD+C,EAnDC,iBAoDYA,EAASC,OApDrB,WAoDDC,EApDC,OAsDP3C,QAAQC,IAAI0C,IAERA,EAAKG,MAxDF,wBAyDHhB,EAAWa,EAAKE,SAChBd,GAAa,GA1DV,2BA8DPA,GAAa,GACbX,EAAiB,CACb4B,QAAS,CACLtG,MAAO4D,KAGfkB,EAAK,wBACLK,IArEO,0DAyEX7B,QAAQC,IAAR,MACA6B,EAAW,qBACXC,GAAa,GA3EF,0DAAH,sDAmFV/C,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAcJ,GAC/BE,EAAUE,OAAO,eAAgB,oBAEjC,IAAMkC,EAAgB,uCAAG,WAAO+B,GAAP,qBAAAX,EAAA,6DACrBT,GAAa,GACbC,GAAa,GAEbhC,QAAQC,IAAIkD,GACNC,EAAMxD,KAAKC,UAAUsD,GAErBhE,EAAiB,CACnBC,OAAQ,OACRC,QAASL,EACTW,KAAMyD,EACN9D,SAAU,UAXO,kBAeMC,MAAM,GAAD,OAAIC,6BAAJ,2BAAqEL,GAfhF,cAeXsD,EAfW,iBAgBEA,EAASC,OAhBX,WAgBXC,EAhBW,OAkBjB3C,QAAQC,IAAI0C,IACRA,EAAKjC,MAnBQ,wBAoBbyB,EAASQ,EAAKjC,OACdmB,IArBa,2BAyBjBC,EAAWa,EAAKE,SAChBd,GAAa,GA1BI,kDA6BjB/B,QAAQC,IAAR,MACA6B,EAAW,qBACXC,GAAa,GA/BI,0DAAH,sDAmChBV,EAAc,uCAAG,WAAOgC,GAAP,qBAAAb,EAAA,6DACnBT,GAAa,GACbC,GAAa,GAEbhC,QAAQC,IAAIoD,GACND,EAAMxD,KAAKC,UAAUwD,GAErBlE,EAAiB,CACnBC,OAAQ,OACRC,QAASL,EACTW,KAAMyD,EACN9D,SAAU,UAXK,kBAeQC,MAAM,GAAD,OAAIC,6BAAJ,2BAAqEL,GAflF,cAeTsD,EAfS,iBAgBIA,EAASC,OAhBb,WAgBTC,EAhBS,OAkBf3C,QAAQC,IAAI0C,IACRA,EAAKjC,MAnBM,wBAoBXyB,EAASQ,EAAKjC,OACdmB,IArBW,2BAyBfC,EAAWa,EAAKE,SAChBd,GAAa,GA1BE,kDA6Bf/B,QAAQC,IAAR,MACA6B,EAAW,qBACXC,GAAa,GA/BE,0DAAH,sDAmCpB,OACI,cAAC5B,EAAYmD,SAAb,CACIC,MAAO,CACHlD,aACAC,cACAC,uBAjUmB,SAACiD,GAC5BnB,EAAemB,IAiUPhD,YA7WQ,CAChB,CACIzB,GAAI,EACJhB,KAAM,eACNoF,OAAQ,GAEZ,CACIpE,GAAI,EACJhB,KAAM,cACNoF,OAAQ,GAEZ,CACIpE,GAAI,EACJhB,KAAM,YACNoF,OAAQ,IAgWJzC,QACAhB,OACAe,aAEAE,UACAC,aApUS,SAAC6C,GAAO,IAAD,EACAA,EAAEC,OAAlB3F,EADgB,EAChBA,KAAMwF,EADU,EACVA,MAEdvD,QAAQC,IAAIlC,EAAMwF,GAClBrB,EAAQ,2BACDxC,GADA,kBAEF3B,EAAOwF,MA+TJI,sBA3TkB,SAACF,EAAGG,GAAS,IAAD,EACdH,EAAEC,OAAlB3F,EAD8B,EAC9BA,KAAMwF,EADwB,EACxBA,MACVM,EAAMnE,EAAKnC,OAAOQ,GACtB8F,EAAID,GAAO1D,OAAOqD,GAClBrB,EAAQ,2BACDxC,GADA,IAEHnC,OAAO,2BACAmC,EAAKnC,QADN,kBAEDQ,EAAO8F,QAoTRhD,oBA/SgB,SAAC4C,GAAO,IAAD,EACPA,EAAEC,OAAlB3F,EADuB,EACvBA,KAAMwF,EADiB,EACjBA,MACdrB,EAAQ,2BACDxC,GADA,IAEHxC,QAAQ,2BACDwC,EAAKxC,SADL,kBAEFa,EAAOwF,QA0SRzC,aACAC,UA/RM,WACdmB,EAAQ,eACD1F,MAEP4F,GAAc,GACdE,EAAc,IA2RNtB,aACAC,kBA/Vc,CACtB,CACIlD,KAAM,kBAEV,CACIA,KAAM,UA2VFmD,eAvVW,SAACuC,EAAGG,GACvBH,EAAEK,iBACFxB,EAAcsB,IAsVNzC,aACAC,mBACAC,kBArBR,SAwBKE","file":"static/js/22.da2fdd8c.chunk.js","sourcesContent":["export const initUserObj = {\n    address: \"\",\n    admin: 0,\n    premises: 0,\n    boughtProducts: {},\n    city: \"\",\n    country: \"\",\n    date: \"\",\n    email: \"\",\n    finishedRegistration: false,\n    company: {\n        ico: \"\",\n        dic: \"\",\n        icdph: \"\",\n        address: '',\n        psc: '',\n        country: '',\n    },\n    lenses: {\n        cylinder: [],\n        cylinderAxes: [],\n        diopters: [],\n        distance: [],\n        addition: [],\n        basis: [],\n        prism: [],\n    },\n    name: \"\",\n    orders: [],\n    phone: \"\",\n    psc: \"\",\n    tempUser: false,\n    totalSpent: 0,\n    watchList: [],\n    fName: \"\",\n    lName: \"\",\n    password: '',\n    confirmPassword: \"\",\n    birthDate: Date.now(),\n    optometrist: false\n\n}","export const fetchUsers = (token) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users`, requestOptions)\n\n}\n\nexport const fetchUser = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\n}\n\nexport const patchUser = (token, user, id) => {\n    // const {\n    //     _id: id,\n    //     address,\n    //     admin,\n    //     city,\n    //     country,\n    //     email,\n    //     lenses: {\n    //         cylinder,\n    //         cylinderAxes,\n    //         diopters,\n    //         distance,\n    //         addition,\n    //         basis,\n    //         prism,\n    //     },\n    //     name,\n    //     phone,\n    //     psc,\n    //     premises\n    // } = user\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        ...user\n        // address: address || undefined,\n        // admin: admin,\n        // premises: Number(premises) === 0 ? undefined : premises,\n        // city: city || undefined,\n        // country: country || undefined,\n        // email: email || undefined,\n        // lenses: {\n        //     cylinder: cylinder,\n        //     cylinderAxes: cylinderAxes,\n        //     diopters: diopters,\n        //     distance: distance,\n        //     addition: addition,\n        //     basis: basis,\n        //     prism: prism,\n        // },\n        // name: name,\n        // phone: phone || undefined,\n        // psc: psc || undefined,\n    })\n\n    const requestOptions = {\n        method: 'PATCH',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\n}\n\nexport const postUser = (token, user) => {\n    const {\n        name,\n        email,\n    } = user\n\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        email: email,\n        name: name,\n    })\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\n}\n\nexport const postAdmin = (token, user) => {\n    console.log(user)\n\n    const {\n        name,\n        email,\n        password,\n        premises,\n        admin\n    } = user\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        admin: Number(admin),\n        email: email,\n        name: name,\n        premises: Number(premises),\n        password\n    })\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\n}","import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\n\nimport {\n    fetchUsers,\n    fetchUser,\n    patchUser,\n    postAdmin,\n    postUser,\n} from './user.queries'\n\nimport {\n    initUserObj\n} from './user.utils'\n\nexport const UserContext = createContext({\n    isUpdating: false,\n    activeIndex: 0,\n    handleChangeFilterItem: () => { },\n    filterItems: [],\n    totalCount: 0,\n    users: null,\n    user: null,\n    // getUsers: () => { },\n    getUser: () => { },\n    handleChange: () => { },\n    handleCompanyChange: () => { },\n    updateUser: () => { },\n    resetUser: () => { },\n    formToShow: 0,\n    switchFormButtons: [],\n    toggleUserForm: () => { },\n    createUser: () => { },\n    getFilteredUsers: () => { },\n    getUserByQuery: () => { }\n})\n\nconst UserProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token } = useContext(AuthContext)\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    // ------------------------\n\n    const [user, setUser] = useState(initUserObj)\n    const [users, setUsers] = useState(null)\n    const [totalCount, setTotalCount] = useState(0)\n\n    // ------------------------\n\n    const [isUpdating, setIsUpdating] = useState(false)\n    const [activeIndex, setActiveIndex] = useState(0)\n    const filterItems = [\n        {\n            id: 0,\n            name: \"Zákaznici\",\n            filter: 0,\n        },\n        {\n            id: 1,\n            name: \"Zamestnanci\",\n            filter: 1,\n        },\n        {\n            id: 2,\n            name: \"Vedúci\",\n            filter: 2,\n        },\n        // {\n        //     id: 3,\n        //     name: \"Velký brat\",\n        //     filter: 3,\n        // }\n    ]\n\n    // ------------------------\n\n    const [formToShow, setFormToShow] = useState(0)\n    const switchFormButtons = [\n        {\n            name: \"Zákazník\"\n        },\n        {\n            name: \"Admin\"\n        }\n    ]\n\n    const toggleUserForm = (e, idx) => {\n        e.preventDefault()\n        setFormToShow(idx)\n    }\n\n    // ------------------------\n\n\n    const handleChangeFilterItem = (itemIndex) => {\n        setActiveIndex(itemIndex)\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n\n        console.log(name, value)\n        setUser({\n            ...user,\n            [name]: value\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = user.lenses[name]\n        arr[idx] = Number(value)\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleCompanyChange = (e) => {\n        const { name, value } = e.target\n        setUser({\n            ...user,\n            company: {\n                ...user.company,\n                [name]: value\n            }\n        })\n    }\n\n    useEffect(() => {\n        setUser({\n            ...user,\n            name: user.fName + \" \" + user.lName\n        })\n    }, [user.fName, user.lName])\n\n    const resetUser = () => {\n        setUser({\n            ...initUserObj\n        })\n        setIsUpdating(false)\n        setFormToShow(0)\n    }\n\n    // ------------------------\n    // USER ACTIONS\n    // ------------------------\n\n    // Get all users\n    // const getUsers = async () => {\n    //     setIsLoading(true)\n    //     setShowModal(true)\n\n    //     try {\n    //         const response = await fetchUsers(token)\n    //         const data = await response.json()\n\n    //         console.log(data)\n    //         if (data.users) {\n    //             setUsers(data.users)\n    //             setTotalCount(data.count)\n    //             setIsLoading(false)\n    //             closeModal()\n\n    //         } else {\n    //             getMessage(data.message)\n    //             setIsLoading(false)\n    //         }\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n    // }\n\n    // Get single user\n    const getUser = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n        setIsUpdating(true)\n\n        try {\n            const response = await fetchUser(token, id)\n            const data = await response.json()\n\n            if (data.user) {\n                setUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n                setIsLoading(false)\n                closeModal()\n\n            } else {\n                getMessage(data.message)\n                setIsLoading(false)\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Update user\n    const updateUser = async (user, id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(user)\n\n        try {\n            const response = await patchUser(token, user, id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.message)\n                if (data.error === 'format' && data.message.includes('lenses.cylinderAxes')) {\n                    getMessage(\"Osa musí byt väčšia alebo rovná 0\")\n                }\n                if (data.error === 'phone-exists') {\n                    getMessage(\"Telefónne číslo už v databázy existuje\")\n                }\n                setIsLoading(false)\n                return\n            }\n\n\n            setIsLoading(false)\n            closeModal()\n            push('/dashboard/zakaznici')\n            getFilteredUsers({\n                filters: {\n                    admin: activeIndex\n                }\n            })\n            // http://localhost:1000/#/dashboard/zakaznici\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createUser = async (user) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            if (formToShow === 0) {\n                let data = {}\n                if (!user._id) {\n                    console.log('creating new user')\n                    const response = await postUser(token, user)\n\n                    data = await response.json()\n\n                    console.log(data)\n\n                    if (data.error) {\n                        getMessage(data.message)\n\n                        if (data.type === 'email') {\n                            getMessage(\"Email existuje\")\n                        }\n                        if (data.error === 'format' && data.message.includes('email')) {\n                            getMessage(\"Email musi byt platny email\")\n                        }\n                        setIsLoading(false)\n                        return\n                    }\n\n                    setUser({\n                        ...user,\n                        _id: data.user._id\n                    })\n                }\n\n                updateUser({\n                    _id: data.user ? data.user._id : user._id,\n                    lenses: {\n                        ...user.lenses\n                    },\n                    address: user.city,\n                    city: user.city,\n                    country: user.country,\n                    phone: user.phone,\n                    psc: user.phone,\n                })\n                // setIsLoading(false)\n                // getUsers()\n                // push('/dashboard/zakaznici')\n                // closeModal()\n\n            } else {\n                const response = await postAdmin(token, user)\n                const data = await response.json()\n\n                console.log(data)\n\n                if (data.error) {\n                    getMessage(data.message)\n                    setIsLoading(false)\n                    return\n                }\n\n                setIsLoading(false)\n                getFilteredUsers({\n                    filters: {\n                        admin: activeIndex\n                    }\n                })\n                push('/dashboard/zakaznici')\n                closeModal()\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // ----------------------------------------------\n    // ----------------------------------------------\n    // ----------------------------------------------\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const getFilteredUsers = async (filter) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(filter)\n        const raw = JSON.stringify(filter)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getUserByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(query)\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <UserContext.Provider\n            value={{\n                isUpdating,\n                activeIndex,\n                handleChangeFilterItem,\n                filterItems,\n                users,\n                user,\n                totalCount,\n                // getUsers,\n                getUser,\n                handleChange,\n                handleParameterChange,\n                handleCompanyChange,\n                updateUser,\n                resetUser,\n                formToShow,\n                switchFormButtons,\n                toggleUserForm,\n                createUser,\n                getFilteredUsers,\n                getUserByQuery\n            }}\n        >\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserProvider"],"sourceRoot":""}
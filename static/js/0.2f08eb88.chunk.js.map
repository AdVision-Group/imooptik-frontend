{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","context/warehouse/warehouse.utils.jsx","context/warehouse/warehouse.context.jsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","initProductObj","name","description","price","type","brand","soldAmount","available","eanCode","image","eshop","link","category","initGlassesObj","colorCode","specs","frameColor","frameMaterial","frameStyle","lensColor","sex","size","initContactLensesObj","allowedCurves","allowedDiameters","dioptersRange","initLensesObj","id","cylinderRange","retailNames","productCategories","value","premisesTabs","premises","categoryTabs","formatPrice","includes","split","length","Number","formatfloatNumber","number","formatAvailable","activePremisesTab","undefined","style","color","Math","abs","reduce","acc","currValue","checkParameter","parameter","idx","toString","dia","diaConvert","text","convertText","i","indexOf","charAt","formatLink","replaceAll","toLowerCase","trim","WarehouseContext","createContext","product","lenses","contactLensesParameters","glassesParameters","totalProducts","totalLenses","activeCategoryTypeTab","retailPremisesTabs","productCategoryTypeTabs","products","lensesProducts","handleChangeCategoryTypeTab","handleChangePremisesTab","getProductsByQuery","handleProductChange","handleProductAvailableChange","getSingleProduct","createProduct","updateProduct","deleteProduct","getSingleLenses","getLenses","createLenses","updateLenses","deleteLenses","handleLensesChange","handleLensesParameterChange","resetProduct","resetLenses","resetContactLenses","resetGlassesParameters","getEanCode","handleAddNewParameter","handleContactLensesParameterChange","handleGlassesParameterChange","handleGlassesParameterSpecsChange","handleGlassesSizeChange","WarehouseProvider","children","push","useHistory","useContext","AuthContext","token","isAdmin","currentUser","stats","LoadingModalContext","closeModal","setIsLoading","setShowModal","getMessage","useState","setTotalProducts","setTotalLenses","setEanCode","setProduct","setLenses","setContactLensesParameters","setGlassesParameters","setProducts","setLensesProducts","setActivePremisesTab","setRetailPremisesTabs","setActiveCategoryTypeTab","myHeaders","Headers","append","a","requestOptions","method","headers","redirect","fetch","process","response","json","data","messageSK","console","log","query","raw","JSON","stringify","body","message","error","toFixed","contactLenses","map","productToAdd","slug","modifiedProduct","limit","productToUpdate","_id","lensesToAdd","lensesToUpdate","modifiedLenses","useEffect","filter","tab","Provider","e","target"],"mappings":"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","file":"static/js/0.2f08eb88.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const initProductObj = {\n    name: \"\",\n    description: \"\",\n    price: 0,\n    type: 0,\n    brand: \"\",\n    soldAmount: 0,\n    available: [0, 1001, 1001, 1001, 1001],\n    eanCode: \"\",\n    image: \"\",\n    eshop: true,\n    link: '',\n    category: ''\n}\n\nexport const initGlassesObj = {\n    colorCode: \"\",\n    specs: {\n        frameColor: \"\",\n        frameMaterial: \"\",\n        frameStyle: \"\",\n        lensColor: \"\",\n        sex: \"\",\n        size: [1001, 1001, 1001, 1001],\n    }\n}\n\nexport const initContactLensesObj = {\n    allowedCurves: [1001],\n    allowedDiameters: [1001],\n    dioptersRange: [1001, 1001]\n}\n\nexport const initLensesObj = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    dioptersRange: [1001, 1001],\n    cylinderRange: [1001, 1001],\n    price: 0,\n    brand: \"\",\n    image: ''\n}\n\nexport const retailNames = [\n    \"Obchodná 57, Bratislava\",\n    \"Miletičova 38, Bratislava\",\n    \"Vajnory, Bratislava\",\n    \"Senica, OC Branč\",\n    \"Trnava, City Aréna\"\n]\n\n// Category variables\nexport const productCategories = [\n    {\n        name: \"Dioptrické\",\n        value: 1\n    },\n    {\n        name: \"Slnečné\",\n        value: 2\n    },\n    {\n        name: \"Kontaktné Šošovky\",\n        value: 3\n    },\n    {\n        name: \"Športové\",\n        value: 4\n    },\n    {\n        name: \"Doplnky\",\n        value: 5\n    },\n    {\n        name: \"Služby\",\n        value: 6\n    },\n    {\n        name: \"Šošovky\",\n        value: 0\n    },\n]\n\nexport const premisesTabs = [\n    {\n        id: 0,\n        name: \"Všetko\",\n        premises: 0,\n\n    },\n    {\n        id: 1,\n        name: \"Obchodná 57, Bratislava\",\n        premises: 1,\n    },\n    {\n        id: 2,\n        name: \"Miletičova 38, Bratislava\",\n        premises: 2,\n    },\n    {\n        id: 3,\n        name: \"Vajnory, Bratislava\",\n        premises: 3,\n    },\n    {\n        id: 4,\n        name: \"Senica, OC Branč\",\n        premises: 4,\n    },\n\n    // {\n    //     id: 5,\n    //     name: \"Trnava, City Aréna\",\n    //     permission: 5,\n    // },\n]\n\nexport const categoryTabs = [\n    {\n        id: 0,\n        name: \"Okuliare\",\n    },\n    {\n        id: 1,\n        name: \"Šosovky\",\n    },\n]\n\nexport const lensesBrands = [\n    \"Acuvue\",\n    \"Adore\",\n    \"Air Optix\",\n    \"Biofinity\",\n    \"Biomedics\",\n    \"Clariti\",\n    \"ColourVue\",\n    \"Comfilcon A\",\n    \"Dailies\",\n    \"Freshlook\",\n    \"Lenjoy\",\n    \"Proclear\",\n    \"Purevision\",\n    \"Soflens\",\n]\n\nexport const brands = [\n    \"Adidas\",\n    \"Armani Exchange\",\n    \"Arnette\",\n    \"Blackfin\",\n    \"Blumarine\",\n    \"Burberry\",\n    \"Bvlgari\",\n    \"Calvin Klein\",\n    \"Carolina Herrera\",\n    \"Carrera\",\n    \"David Beckham\",\n    \"Dior\",\n    \"Dolce & Gabbana\",\n    \"Elle\",\n    \"Emporio Armani\",\n    \"Esprit\",\n    \"Etnia Barcelona\",\n    \"Fendi\",\n    \"Fossil\",\n    \"Furla\",\n    \"Giorgio Armani\",\n    \"Givenchy\",\n    \"Gucci\",\n    \"Guess\",\n    \"H.I.S\",\n    \"Hawkers\",\n    \"Hugo Boss\",\n    \"Jaguar\",\n    \"Jimmy Choo\",\n    \"Lacoste\",\n    \"Liu Jo\",\n    \"Marc Jacobs\",\n    \"Max Mara\",\n    \"Max&Co\",\n    \"Meller\",\n    \"Mexx\",\n    \"Michael Kors\",\n    \"Moschino\",\n    \"Oakley\",\n    \"Persol\",\n    \"Polaroid\",\n    \"Police\",\n    \"Polo Ralph Lauren\",\n    \"Prada\",\n    \"Prada Linea Rossa\",\n    \"Ralph\",\n    \"Ralph Lauren\",\n    \"Ray-Ban\",\n    \"Salvatore Ferragamo\",\n    \"Smith\",\n    \"Strellson\",\n    \"Tiffany&Co.\",\n    \"Tom Ford\",\n    \"Tommy Hilfiger\",\n    \"Versace\",\n    \"Vogue\"\n]\n\nexport const formatPrice = price => {\n    let value = 0\n    if (price.includes(',')) {\n        if (price.split(',')[1].length === 1) {\n            value = price.split(',')[0] + price.split(',')[1] + \"0\"\n            return Number(value)\n        } else {\n            value = price.split(',')[0] + price.split(',')[1]\n            return Number(value)\n        }\n    } else {\n        return Number(price * 100)\n    }\n}\n\nexport const formatfloatNumber = number => {\n    let value = 0\n    if (number.includes(',')) {\n        value = number.split(',')[0] + '.' + number.split(',')[1]\n        return Number(value)\n    } else {\n        return Number(number)\n\n    }\n}\n\nexport const formatAvailable = (available, activePremisesTab) => {\n    if (available === undefined) return \"Šosovka\"\n    if (typeof available === \"number\") {\n        if (available < 0) {\n            return <>\n                <p style={{ color: \"var(--color-red)\" }}>0 ks</p>\n                <p style={{ color: \"var(--color-red)\" }}>Chýba {Math.abs(available)}</p>\n            </>\n        } else if (available === 0) {\n            return <p style={{ color: \"var(--color-red)\" }}>0 ks</p>\n        } else {\n            return `${available} ks`\n        }\n    } else {\n        if (activePremisesTab === 0) {\n            if (available.reduce((acc, currValue) => acc + currValue) < 0) {\n                return <p style={{ color: \"var(--color-red)\" }}>Všetky: 0 ks</p>\n            } else if (available.reduce((acc, currValue) => acc + currValue) === 0) {\n                return <p style={{ color: \"var(--color-red)\" }}>Všetky: 0 ks</p>\n            } else {\n                return `Všetky: ${available.reduce((acc, currValue) => acc + currValue)} ks`\n            }\n        } else {\n            if (available[activePremisesTab] < 0) {\n                return <>\n                    <p style={{ color: \"var(--color-red)\" }}>0 ks</p>\n                    <p style={{ color: \"var(--color-red)\" }}>Chýba {Math.abs(available[activePremisesTab])}</p>\n                </>\n            } else if (available[activePremisesTab] === 0) {\n                return <p style={{ color: \"var(--color-red)\" }}>0 ks</p>\n            } else {\n                return `${available[activePremisesTab]} ks`\n            }\n        }\n    }\n}\n\nexport const checkParameter = (parameter, idx) => {\n    if (parameter === undefined) return\n    if (parameter.length === 0) {\n        return \"\"\n    }\n    if (parameter[idx] === 1001) {\n        return \"\"\n    }\n\n    return parameter[idx].toString()\n}\n\nconst dia = \"áäčďéíľĺňóôŕšťúýžÁČĎÉÍĽĹŇÓŠŤÚÝŽ\";\nconst nodia = \"aacdeillnoorstuyzACDEILLNOSTUYZ\";\n\nexport const diaConvert = (text) => {\n    let convertText = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (dia.indexOf(text.charAt(i)) !== -1) {\n            convertText += nodia.charAt(dia.indexOf(text.charAt(i)));\n        }\n        else {\n            convertText += text.charAt(i);\n        }\n    }\n    return convertText;\n}\n\nexport const formatLink = (text) => {\n    return diaConvert(text).replaceAll(\" \", \"-\").toLowerCase().trim()\n}","import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\n\nimport {\n    premisesTabs,\n    categoryTabs,\n    initLensesObj,\n    initProductObj,\n    formatPrice,\n    diaConvert,\n    initContactLensesObj,\n    initGlassesObj,\n    formatfloatNumber,\n    formatLink\n} from './warehouse.utils'\n\nexport const WarehouseContext = createContext({\n    eanCode: null,\n    product: {},\n    lenses: {},\n    contactLensesParameters: {},\n    glassesParameters: {},\n    totalProducts: 0,\n    totalLenses: 0,\n    activePremisesTab: 0,\n    activeCategoryTypeTab: 0,\n    retailPremisesTabs: [],\n    productCategoryTypeTabs: [],\n    products: null,\n    lensesProducts: null,\n    handleChangeCategoryTypeTab: () => { },\n    handleChangePremisesTab: () => { },\n    getProductsByQuery: () => { },\n    handleProductChange: () => { },\n    handleProductAvailableChange: () => { },\n    getSingleProduct: () => { },\n    createProduct: () => { },\n    updateProduct: () => { },\n    deleteProduct: () => { },\n    getSingleLenses: () => { },\n    getLenses: () => { },\n    createLenses: () => { },\n    updateLenses: () => { },\n    deleteLenses: () => { },\n    handleLensesChange: () => { },\n    handleLensesParameterChange: () => { },\n    resetProduct: () => { },\n    resetLenses: () => { },\n    resetContactLenses: () => { },\n    resetGlassesParameters: () => { },\n    getEanCode: () => { },\n    handleAddNewParameter: () => { },\n    handleContactLensesParameterChange: () => { },\n    handleGlassesParameterChange: () => { },\n    handleGlassesParameterSpecsChange: () => { },\n    handleGlassesSizeChange: () => { },\n})\n\nconst WarehouseProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token, isAdmin, currentUser, stats } = useContext(AuthContext)\n    const { closeModal, setIsLoading, setShowModal, getMessage } = useContext(LoadingModalContext)\n\n    const [totalProducts, setTotalProducts] = useState(0)\n    const [totalLenses, setTotalLenses] = useState(0)\n    const [eanCode, setEanCode] = useState(null)\n\n    const [product, setProduct] = useState({ ...initProductObj })\n    const [lenses, setLenses] = useState({ ...initLensesObj })\n    const [contactLensesParameters, setContactLensesParameters] = useState({ ...initContactLensesObj })\n    const [glassesParameters, setGlassesParameters] = useState({ ...initGlassesObj })\n\n    const [products, setProducts] = useState(null)\n    const [lensesProducts, setLensesProducts] = useState(null)\n    const [activePremisesTab, setActivePremisesTab] = useState(0)\n    const [retailPremisesTabs, setRetailPremisesTabs] = useState([])\n\n    const [productCategoryTypeTabs] = useState(categoryTabs)\n    const [activeCategoryTypeTab, setActiveCategoryTypeTab] = useState(0)\n\n    const handleGlassesParameterChange = e => {\n        const { name, value } = e.target\n        setGlassesParameters({\n            ...glassesParameters,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParameterSpecsChange = e => {\n        const { name, value } = e.target\n        setGlassesParameters({\n            ...glassesParameters,\n            specs: {\n                ...glassesParameters.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n        setGlassesParameters({\n            ...glassesParameters,\n            specs: {\n                ...glassesParameters.specs,\n                [name]: arr\n            }\n        })\n\n    }\n\n    const handleAddNewParameter = e => {\n        const { name } = e.target\n        setContactLensesParameters({\n            ...contactLensesParameters,\n            [name]: [...contactLensesParameters[name], 1001]\n        })\n    }\n\n    const handleContactLensesParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n        setContactLensesParameters({\n            ...contactLensesParameters,\n            [name]: arr\n        })\n    }\n\n    const handleProductChange = e => {\n        const { name, value } = e.target\n\n        setProduct({\n            ...product,\n            [name]: value\n        })\n    }\n\n    const handleProductAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setProduct({\n            ...product,\n            [name]: arr\n        })\n    }\n\n    const handleLensesChange = e => {\n        const { name, value } = e.target\n\n        setLenses({\n            ...lenses,\n            [name]: value\n        })\n    }\n\n    const handleLensesParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setLenses({\n            ...lenses,\n            [name]: arr\n        })\n    }\n\n    const resetProduct = () => {\n        setProduct({\n            ...initProductObj,\n            available: [0, 1001, 1001, 1001, 1001],\n        })\n        setEanCode(null)\n    }\n\n    const resetLenses = () => {\n        // setLenses({ ...initLensesObj })\n        setLenses({\n            ...initLensesObj,\n            dioptersRange: [1001, 1001],\n            cylinderRange: [1001, 1001],\n        })\n    }\n\n    const resetContactLenses = () => {\n        setContactLensesParameters({\n            ...initContactLensesObj,\n            allowedCurves: [1001],\n            allowedDiameters: [1001],\n            dioptersRange: [1001, 1001]\n        })\n    }\n\n    const resetGlassesParameters = () => {\n        setGlassesParameters({\n            ...initGlassesObj,\n            specs: {\n                ...initGlassesObj.specs,\n                size: [1001, 1001, 1001, 1001]\n            }\n        })\n    }\n\n    const handleChangePremisesTab = (idx) => {\n        setActivePremisesTab(idx)\n    }\n\n    const handleChangeCategoryTypeTab = (idx) => {\n        setActiveCategoryTypeTab(idx)\n    }\n\n\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const getEanCode = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/nextEanCode`, requestOptions)\n            const data = await response.json()\n\n            if (data.eanCode) {\n                setEanCode(data.eanCode)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getProductsByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/filter`, requestOptions)\n            const data = await response.json()\n\n            if (data.products) {\n                setProducts(data.products)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getLenses = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses`, requestOptions)\n            const data = await response.json()\n\n            if (data.lenses) {\n                setProducts(data.lenses)\n                setLensesProducts(data.lenses)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getSingleProduct = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/products/${id}`)\n            const data = await response.json()\n\n            if (data.error === 'not-found') {\n                getSingleLenses(id)\n            }\n\n            if (data.product) {\n                setProduct({\n                    ...data.product,\n                    price: (data.product.price / 100).toFixed(2)\n                })\n                if (data.product.type === 3) {\n                    setContactLensesParameters({\n                        ...data.product.contactLenses\n                    })\n                } else {\n                    setGlassesParameters({\n                        colorCode: data.product.colorCode ?? \"\",\n                        specs: {\n                            ...data.product.specs,\n                            size: [...Array(4)].map((value, idx) => data.product.specs.size[idx] ? data.product.specs.size[idx] : 0)\n                        }\n                    })\n                }\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createProduct = async (productToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const slug = diaConvert(productToAdd.name).replaceAll(\" \", \"-\").toLowerCase().trim()\n\n        let modifiedProduct = {\n            ...productToAdd,\n            price: formatPrice(productToAdd.price.toString()),\n            link: slug,\n        }\n\n        if (productToAdd.specs) {\n            if (productToAdd.specs.size) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    specs: {\n                        ...modifiedProduct.specs,\n                        size: productToAdd.specs.size.map(value => value === 1001 ? 0 : formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        if (productToAdd.contactLenses) {\n            if (productToAdd.contactLenses.allowedCurves) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: productToAdd.contactLenses.allowedCurves.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n            if (productToAdd.contactLenses.allowedDiameters) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: productToAdd.contactLenses.allowedDiameters.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n            if (productToAdd.contactLenses.dioptersRange) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: productToAdd.contactLenses.dioptersRange.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedProduct,\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products`, requestOptions)\n            const data = await response.json()\n\n            if (data.product) {\n                push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10\n                })\n                setEanCode(null)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateProduct = async (productToUpdate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let modifiedProduct = {\n            ...productToUpdate,\n        }\n\n        if (modifiedProduct.price) {\n            modifiedProduct = {\n                ...modifiedProduct,\n                price: formatPrice(productToUpdate.price.toString()),\n            }\n        }\n\n        if (modifiedProduct.available) {\n            if (typeof modifiedProduct.available === \"number\") {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    available: productToUpdate.available\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    available: productToUpdate.available ? productToUpdate.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0]\n                }\n            }\n        }\n\n        if (productToUpdate.link) {\n            const slug = diaConvert(productToUpdate.link).replaceAll(\" \", \"-\").toLowerCase().trim()\n            modifiedProduct = {\n                ...modifiedProduct,\n                link: slug\n            }\n        }\n\n        if (productToUpdate.specs) {\n            if (productToUpdate.specs.size) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    specs: {\n                        ...modifiedProduct.specs,\n                        size: productToUpdate.specs.size.map(value => value === 1001 ? 0 : formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        if (productToUpdate.contactLenses) {\n            if (productToUpdate.contactLenses.allowedCurves) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: productToUpdate.contactLenses.allowedCurves.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: contactLensesParameters.allowedCurves\n                    }\n                }\n            }\n\n            if (productToUpdate.contactLenses.allowedDiameters) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: productToUpdate.contactLenses.allowedDiameters.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: contactLensesParameters.allowedDiameters\n                    }\n                }\n            }\n            if (productToUpdate.contactLenses.dioptersRange) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: productToUpdate.contactLenses.dioptersRange.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: contactLensesParameters.dioptersRange\n                    }\n                }\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedProduct,\n        })\n\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/${product._id}`, requestOptions)\n            const data = await response.json()\n\n            if (data.error) {\n                getMessage(data.messageSK)\n                setIsLoading(false)\n                return\n\n            }\n\n            if (data.product) {\n                push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteProduct = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/${id}`, requestOptions)\n            const data = await response.json()\n\n            if (data.product) {\n                // push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getSingleLenses = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/lenses/${id}`)\n            const data = await response.json()\n\n            if (data.lenses) {\n                setLenses(data.lenses)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createLenses = async (lensesToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify({\n            ...lensesToAdd,\n            price: formatPrice(lensesToAdd.price.toString())\n        });\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses`, requestOptions)\n            const data = await response.json()\n\n            if (data.lenses) {\n                push('/dashboard/obchod')\n                getLenses()\n                closeModal()\n                return\n            }\n\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateLenses = async (lensesToUpdate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let modifiedLenses = {\n            ...lensesToUpdate\n        }\n\n        if (modifiedLenses.price) {\n            modifiedLenses = {\n                ...modifiedLenses,\n                price: formatPrice(lensesToUpdate.price.toString()),\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedLenses,\n        });\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/${lenses._id}`, requestOptions)\n            const data = await response.json()\n\n            if (data.lenses) {\n                push('/dashboard/obchod')\n                getLenses()\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteLenses = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/${id}`, requestOptions)\n            const data = await response.json()\n\n            if (data.lenses) {\n                getLenses()\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (products) {\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    limit: 10\n                })\n            } else {\n                getLenses()\n            }\n        }\n    }, [activeCategoryTypeTab])\n\n    useEffect(() => {\n        if (currentUser) {\n            if (isAdmin) {\n                setRetailPremisesTabs(premisesTabs)\n                setActivePremisesTab(0)\n            } else {\n                setRetailPremisesTabs(premisesTabs.filter(tab => tab.premises === currentUser.premises))\n                setActivePremisesTab(0)\n            }\n        }\n    }, [currentUser, isAdmin])\n\n    useEffect(() => {\n        if (stats) {\n            setTotalProducts(stats.products)\n            setTotalLenses(stats.lenses)\n        }\n    }, [stats])\n\n    useEffect(() => {\n        if (product.name !== '') {\n            setProduct({\n                ...product,\n                link: formatLink(product.name)\n            })\n        }\n    }, [product.name])\n\n    return (\n        <WarehouseContext.Provider\n            value={{\n                eanCode,\n                product,\n                lenses,\n                contactLensesParameters,\n                glassesParameters,\n                totalProducts,\n                totalLenses,\n                activePremisesTab,\n                activeCategoryTypeTab,\n                retailPremisesTabs,\n                productCategoryTypeTabs,\n                products,\n                lensesProducts,\n                handleChangeCategoryTypeTab,\n                handleChangePremisesTab,\n                getProductsByQuery,\n                handleProductChange,\n                handleProductAvailableChange,\n                getLenses,\n                getSingleProduct,\n                createProduct,\n                updateProduct,\n                deleteProduct,\n                getSingleLenses,\n                createLenses,\n                updateLenses,\n                deleteLenses,\n                handleLensesChange,\n                handleLensesParameterChange,\n                resetProduct,\n                resetLenses,\n                resetContactLenses,\n                resetGlassesParameters,\n                getEanCode,\n                handleAddNewParameter,\n                handleContactLensesParameterChange,\n                handleGlassesParameterChange,\n                handleGlassesParameterSpecsChange,\n                handleGlassesSizeChange,\n            }}\n        >\n            {children}\n        </WarehouseContext.Provider>\n    )\n}\n\nexport default WarehouseProvider"],"sourceRoot":""}
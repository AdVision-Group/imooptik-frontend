{"version":3,"sources":["context/image/image.queries.jsx","context/image/image.context.jsx"],"names":["uploadImage","token","img","imgName","imgAlt","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","redirect","fetch","process","fetchFilteredImages","limit","skip","sortBy","dateCreated","deleteImage","id","ImageContext","createContext","isDisabled","images","selectedImage","getImages","handleImage","handleDeleteImage","setSelectedImage","getNextImages","getPrevImage","ImageProvider","children","useContext","LoadingModalContext","getMessage","setIsLoading","setShowModal","closeModal","AuthContext","useState","setIsDisabled","setImages","setSkip","setImage","close","a","response","json","data","image","_id","console","log","addToSkip","length","message","e","preventDefault","respone","Provider","value"],"mappings":"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","file":"static/js/30.dcc6cf75.chunk.js","sourcesContent":["export const uploadImage = (token, img, imgName, imgAlt) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", token);\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n\r\n    const raw = JSON.stringify({ \"name\": imgName || \" \", \"alt\": imgAlt || \" \", 'image': img });\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/images/upload`, requestOptions)\r\n}\r\n\r\nexport const fetchImages = () => {\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/images`)\r\n}\r\n\r\nexport const fetchFilteredImages = (token, limit, skip) => {\r\n    const myHeaders = new Headers();\r\n    // myHeaders.append(\"auth-token\", token);\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n\r\n    const raw = JSON.stringify({\r\n        sortBy: {\r\n            dateCreated: -1\r\n        },\r\n        limit,\r\n        skip\r\n    });\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/images/filter`, requestOptions)\r\n}\r\n\r\nexport const deleteImage = (token, id) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", token);\r\n\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/images/${id}`, requestOptions)\r\n}","import React, { createContext, useState, useContext } from 'react'\r\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\r\nimport { AuthContext } from '../auth/auth.context'\r\nimport {\r\n    deleteImage,\r\n    // fetchImages, \r\n    uploadImage,\r\n    fetchFilteredImages\r\n} from './image.queries'\r\n\r\nexport const ImageContext = createContext({\r\n    isDisabled: false,\r\n    images: null,\r\n    selectedImage: null,\r\n    getImages: () => { },\r\n    handleImage: () => { },\r\n    handleDeleteImage: () => { },\r\n    setSelectedImage: () => { },\r\n    getNextImages: () => { },\r\n    getPrevImage: () => { }\r\n})\r\n\r\nconst ImageProvider = ({ children }) => {\r\n    const {\r\n        getMessage,\r\n        setIsLoading,\r\n        setShowModal,\r\n        closeModal\r\n    } = useContext(LoadingModalContext)\r\n\r\n    const { token } = useContext(AuthContext)\r\n\r\n    const [isDisabled, setIsDisabled] = useState(false)\r\n    const [images, setImages] = useState(null)\r\n    const [selectedImage, setSelectedImage] = useState(null)\r\n    const [limit] = useState(4)\r\n    const [skip, setSkip] = useState(0)\r\n\r\n    const handleImage = async (img, imgName, imgAlt, setImage, close) => {\r\n        setShowModal(true)\r\n        setIsLoading(true)\r\n        setIsDisabled(true)\r\n\r\n        try {\r\n            const response = await uploadImage(token, img, imgName, imgAlt)\r\n            const data = await response.json()\r\n            if (data.image) {\r\n                setSelectedImage(data.image)\r\n                setImage(data.image._id)\r\n                getImages()\r\n                close()\r\n            }\r\n\r\n            setShowModal(false)\r\n            setIsLoading(false)\r\n            setIsDisabled(false)\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n            setIsDisabled(false)\r\n        }\r\n    }\r\n\r\n    const getNextImages = async (addToSkip) => {\r\n        try {\r\n            if (images.length !== limit) return\r\n\r\n            const response = await fetchFilteredImages(token, limit, skip + addToSkip)\r\n            const data = await response.json()\r\n\r\n            if (data.images) {\r\n                setImages(data.images)\r\n\r\n                setSkip(skip + addToSkip)\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const getPrevImage = async (addToSkip) => {\r\n        if (skip === 0) return\r\n        try {\r\n            const response = await fetchFilteredImages(token, limit, skip - addToSkip)\r\n            const data = await response.json()\r\n\r\n            if (data.images) {\r\n                setImages(data.images)\r\n\r\n                setSkip(skip - addToSkip)\r\n\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const getImages = async () => {\r\n        setShowModal(true)\r\n        setIsLoading(true)\r\n\r\n        try {\r\n            // const response = await fetchImages()\r\n            const response = await fetchFilteredImages(token, limit, skip)\r\n\r\n            const data = await response.json()\r\n\r\n            if (data.images) {\r\n                setImages(data.images)\r\n            }\r\n\r\n            getMessage(data.message)\r\n            setIsLoading(false)\r\n            closeModal()\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleDeleteImage = async (id, e) => {\r\n        e.preventDefault()\r\n        setShowModal(true)\r\n        setIsLoading(true)\r\n\r\n        try {\r\n            const respone = await deleteImage(token, id)\r\n            const data = await respone.json()\r\n\r\n            getMessage(data.message)\r\n            setIsLoading(false)\r\n            getImages()\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ImageContext.Provider\r\n            value={{\r\n                isDisabled,\r\n                images,\r\n                selectedImage,\r\n                getImages,\r\n                handleImage,\r\n                handleDeleteImage,\r\n                setSelectedImage,\r\n                getNextImages,\r\n                getPrevImage\r\n            }}\r\n        >\r\n            {children}\r\n        </ImageContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ImageProvider"],"sourceRoot":""}
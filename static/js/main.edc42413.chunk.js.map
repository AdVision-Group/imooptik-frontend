{"version":3,"sources":["global.styles.jsx","context/loading-modal/loading-modal.contenxt.jsx","context/auth/auth.queries.jsx","context/auth/auth.context.jsx","components/custom-button/custom-button.styles.jsx","components/custom-button/custom-button.component.jsx","components/spinner/spinner.styles.jsx","components/spinner/spinner.component.jsx","components/popup/pop.up.styles.jsx","components/popup/pop-up.component.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["DefaultThemeColors","createGlobalStyle","DarkThemeColors","GlobalStyles","paddingStyles","css","SwitchButton","styled","button","LoadingModalContext","createContext","isLoading","showModal","message","closeModal","getMessage","setIsLoading","setShowModal","LoadingModalProvider","children","useState","setMessage","Provider","value","string","getUser","credentials","email","password","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","redirect","fetch","process","createNewUser","name","resetPassword","setNewPassword","resetSecret","fetchUser","token","AuthContext","currentUser","isAdmin","isOptometrist","stats","logIn","logOut","register","handleResetPassword","handleCreatingNewPassword","AuthProvider","useContext","setCurrentUser","setToken","setIsAdmin","setIsOptometrist","setStats","checkIfAdmin","user","admin","a","console","log","response","json","authToken","localStorage","setItem","confirmPassword","data","getStats","useEffect","getItem","optometrist","getUserProfile","removeItem","ButtonContainer","CustomButton","otherprops","SpinnerContainer","div","Spinner","PopupContainer","Panel","Message","Popup","props","loading","title","close","ReactDOM","createPortal","onClick","document","getElementById","SignInAndSignUpPage","lazy","DashboardPage","ResetPasswordPage","App","currentTheme","setCurrentTheme","Fragment","fallback","basename","path","render","to","component","prevValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.edc42413.chunk.js","sourcesContent":["import styled, { createGlobalStyle, css } from 'styled-components'\n\n/* --primary-color: #ebac01;\n--secondary-color: #000;\n--primary-text-color: #251919;\n--secondary-text-color: #fff;\n--body-background-primary-color: #f5f5f5;\n--background-primary-color: #fff; */\n\nexport const DefaultThemeColors = createGlobalStyle`\n    :root {\n        --primary-color: #ebac01;\n        --secondary-color: #000;\n        --primary-text-color: #000000;\n        --secondary-text-color: rgba(0, 0, 0, 0.822);\n        --body-background-primary-color: #f5f5f5;\n        --background-primary-color: #fff;\n\n        --container-shadow: 0 0 1.5rem 0 rgba(0,0,0,.08);\n\n        --backbutton-color: #ebac01;\n        --dropdownbutton-background-color: #f5f5f5;\n        --dropdownbutton-color: #ebac01;\n        --dropdown-background-color: #fff;\n        --dropdown-hover-background-color: #f5f5f5;\n\n        --input-background-color: #f5f5f5;\n        --input-color: #000;\n\n        --image-background-color: none;\n\n        --button-font-color: #fff;\n        --secondary-button-font-color: #000;\n\n        --color-red: #DD4C4C;\n        --color-green: #32AA5F;\n\n    }\n`\n\nexport const DarkThemeColors = createGlobalStyle`\n    :root {\n        --primary-color: #a57f16;\n        --secondary-color: #000;\n        --primary-text-color: #eee;\n        --secondary-text-color: #ddd;\n        --body-background-primary-color: #252525;\n        --background-primary-color: #2c2c2c;\n\n        --container-shadow: 0 0 1.5rem 0 rgba(0,0,0,.15);\n\n        --backbutton-color: #a57f16;\n        --dropdownbutton-background-color: #121212;\n        --dropdownbutton-color: #a57f116;\n        --dropdown-background-color: #121212;\n        --dropdown-hover-background-color: #181818;\n\n        --input-background-color: #121212;\n        --input-color: #eee;\n\n        --image-background-color: #252525;\n\n\n        --button-font-color: #fff;\n        --secondary-button-font-color: #a57f116;\n\n        --color-red: #DD4C4C;\n        --color-green: #32AA5F;\n    }\n`\n\n\nexport const GlobalStyles = createGlobalStyle`\n    *, *::before, *::after {\n        padding: 0;\n        margin: 0;\n        box-sizing: border-box;\n        font-family: 'Titillium Web', sans-serif;\n    }\n\n    html {\n        font-size: 62.5%;\n    }\n\n    body {\n        font-size: 1.6rem;\n        overflow: hidden;\n        background-color: var(--body-background-primary-color);\n    }\n\n    section, form {\n        display: flex;\n        flex-direction: column;\n        height: 100vh;\n        background-color: var(--background-primary-color);\n    }\n\n    input {\n        outline: none;\n\n        &:focus {\n            outline: none;\n        }\n    }\n\n    a {\n        text-decoration: none;\n        color: #000;\n        display:block;\n    }\n\n    button {\n        font-size: inherit;\n        font-family: inherit;\n        border: none;\n        background-color: transparent;\n    }\n\n`\nexport const paddingStyles = css`\n    padding: 0 3rem;\n\n    @media all and (max-width: 800px) {\n        padding: 0 2rem;\n        @media all and (max-width: 500px) {\n            padding: 0 1.5rem;\n        }\n    }\n`\n\nexport const SwitchButton = styled.button`\n    cursor: pointer;\n    position: absolute;\n    z-index: 9999;\n    bottom: 3rem;\n    right: 3rem; \n    width: 5rem;\n    height: 5rem;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    background-color: var(--primary-color);\n    font-size: 3rem;\n    color: var(--button-font-color);\n    border-radius: 50%;\n`","import React, { createContext, useState } from 'react'\n\nexport const LoadingModalContext = createContext({\n    isLoading: false,\n    showModal: false,\n    message: '',\n    closeModal: () => { },\n    getMessage: () => { },\n    setIsLoading: () => { },\n    setShowModal: () => { }\n})\n\nconst LoadingModalProvider = ({ children }) => {\n    const [isLoading, setIsLoading] = useState(false)\n    const [showModal, setShowModal] = useState(false)\n    const [message, setMessage] = useState('')\n\n\n    const closeModal = () => {\n        setIsLoading(false)\n        setShowModal(false)\n        setMessage('')\n    }\n\n    const getMessage = (string) => {\n        setMessage(string)\n    }\n\n    return (\n        <LoadingModalContext.Provider\n            value={{\n                isLoading,\n                showModal,\n                message,\n                closeModal,\n                getMessage,\n                setIsLoading,\n                setShowModal,\n            }}\n        >\n            {children}\n        </LoadingModalContext.Provider>\n    )\n}\n\nexport default LoadingModalProvider","\n\nexport const getUser = (credentials) => {\n    const { email, password } = credentials\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify({ \"email\": email, \"password\": password });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/login`, requestOptions)\n}\n\nexport const createNewUser = (credentials) => {\n    const { name, email, password } = credentials\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify({ \"email\": email, \"password\": password, \"name\": name });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\n}\n\nexport const resetPassword = (email) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify({ \"email\": email });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/forgot`, requestOptions)\n}\n\nexport const setNewPassword = (resetSecret, password) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify({ \"resetSecret\": resetSecret, \"password\": password });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/reset`, requestOptions)\n}\n\nexport const fetchUser = (token) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/user/profile`, requestOptions)\n}","import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { getUser, createNewUser, resetPassword, setNewPassword, fetchUser } from './auth.queries'\n\nexport const AuthContext = createContext({\n    currentUser: null,\n    isAdmin: false,\n    isOptometrist: false,\n    token: null,\n    stats: null,\n    logIn: () => { },\n    logOut: () => { },\n    register: () => { },\n    handleResetPassword: () => { },\n    handleCreatingNewPassword: () => { }\n})\n\nconst AuthProvider = ({ children }) => {\n    const { setShowModal, setIsLoading, getMessage, closeModal } = useContext(LoadingModalContext)\n    const [currentUser, setCurrentUser] = useState(null)\n    const [token, setToken] = useState(null)\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [isOptometrist, setIsOptometrist] = useState(false)\n    const [stats, setStats] = useState(null)\n\n    const checkIfOptometrist = user => {\n        if (user.optometrist) {\n            setIsOptometrist(true)\n        } else {\n            setIsOptometrist(false)\n        }\n    }\n\n    const checkIfAdmin = (user) => {\n        if (user.admin > 1) {\n            setIsAdmin(true)\n        } else {\n            setIsAdmin(false)\n        }\n    }\n\n    const logIn = async (email, password) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await getUser({ email, password })\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n            if (user.user) {\n                setCurrentUser(user.user)\n                setToken(user.authToken)\n                localStorage.setItem(process.env.REACT_APP_ADMIN_TOKEN, user.authToken)\n                checkIfAdmin(user.user)\n\n                closeModal()\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const logOut = () => {\n        localStorage.removeItem(process.env.REACT_APP_ADMIN_TOKEN)\n        setCurrentUser(null)\n        setToken(null)\n    }\n\n    const register = async (name, email, password, confirmPassword) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!name) {\n            console.log(\"Ziadne meno\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n\n        if (password !== confirmPassword) {\n            console.log(\"hesla sa nezhoduju\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await createNewUser({ name, email, password })\n            const data = await response.json()\n\n            setIsLoading(false)\n            getMessage(data.message)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleResetPassword = async (email) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await resetPassword(email)\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleCreatingNewPassword = async (resetSecret, password) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        console.log(resetSecret)\n\n        if (!resetSecret) {\n            console.log(\"Ziadny reset token\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await setNewPassword(resetSecret, password)\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const getStats = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/stats/collectionCounts`, requestOptions)\n            const data = await response.json()\n\n            setStats(data)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN)) {\n            setToken(localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (token) {\n            const getUserProfile = async () => {\n                const response = await fetchUser(token)\n                const data = await response.json()\n                if (data.user) {\n                    setCurrentUser(data.user)\n                    checkIfAdmin(data.user)\n                    checkIfOptometrist(data.user)\n                }\n            }\n            getUserProfile()\n            getStats()\n        }\n    }, [token])\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token,\n                currentUser,\n                isAdmin,\n                isOptometrist,\n                stats,\n                logIn,\n                logOut,\n                register,\n                handleResetPassword,\n                handleCreatingNewPassword\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthProvider","import styled from 'styled-components'\n\nexport const ButtonContainer = styled.button`\n    cursor: pointer;\n    background-color: #000;\n    color: #fff;\n    padding: .8rem 3rem;\n    font-size: inherit;\n    font-family: inherit;\n    border-radius: .2rem;\n    border: none;\n    outline: none;\n\n    &:focus {\n        outline: none\n    }\n\n    @media all and (max-width: 500px) {\n        padding: 0.5rem 1.5rem;\n        font-size: 1.4rem;\n    }\n`","import React from 'react'\n\nimport { ButtonContainer } from './custom-button.styles'\n\nconst CustomButton = ({ children, ...otherprops }) => {\n    return (\n        <ButtonContainer {...otherprops}>\n            {children}\n        </ButtonContainer>\n    )\n}\n\nexport default CustomButton\n","import styled from 'styled-components'\n\nexport const SpinnerContainer = styled.div`\n    border: 5px solid transparent;\n    border-top: 5px solid rgb(256,172,1);\n    border-radius: 50%;\n    width: 38px;\n    height: 38px;\n    animation: spin 800ms linear infinite;\n\n    @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n    }\n`","import React from 'react'\n\nimport { SpinnerContainer } from './spinner.styles'\n\nconst Spinner = () => {\n    return (\n        <SpinnerContainer />\n    )\n}\n\nexport default Spinner\n","import styled from 'styled-components'\n\nexport const PopupContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 999999;\n    min-height: 100vh;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Panel = styled.div`\n    max-width: 50rem;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    padding: 2rem;\n\n    border-radius: .5rem;\n\n    background-color: var(--background-primary-color);\n`\n\nexport const Message = styled.div`\n    color: var(--primary-text-color);\n    font-size: 2.1rem;\n    font-weight: 700;\n    text-align: center;\n\n    margin-bottom: 2rem;\n`","import React from \"react\";\nimport ReactDOM from 'react-dom'\n\nimport CustomButton from '../custom-button/custom-button.component'\nimport Spinner from \"../spinner/spinner.component\";\n\nimport {\n    PopupContainer,\n    Panel,\n    Message\n} from './pop.up.styles'\n\nexport default function Popup(props) {\n    const { loading, title, close } = props;\n\n    return ReactDOM.createPortal((\n        <PopupContainer>\n            {loading ? <Panel><Spinner /></Panel> : (\n                <Panel>\n                    <Message>{title}</Message>\n                    <CustomButton onClick={close}>Zavrieť</CustomButton>\n                </Panel>\n            )}\n        </PopupContainer>\n    ), document.getElementById(\"portal\"))\n}\n","import React, { useContext, Suspense, lazy, useState } from 'react'\nimport { AuthContext } from './context/auth/auth.context'\nimport { GlobalStyles, DarkThemeColors, DefaultThemeColors, SwitchButton } from './global.styles'\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom'\n\nimport Popup from './components/popup/pop-up.component'\nimport { CgDarkMode } from 'react-icons/cg'\n\nconst SignInAndSignUpPage = lazy(() => import('./pages/sign-in-and-sign-up/sign-in-and-sign-up'))\nconst DashboardPage = lazy(() => import('./pages/dashboard/dashboard'))\nconst ResetPasswordPage = lazy(() => import('./pages/reset-password/reset-password'))\n\nconst App = () => {\n  console.log(\"RENDER APP\")\n  const { currentUser } = useContext(AuthContext)\n  const [currentTheme, setCurrentTheme] = useState('dark')\n\n  return (\n    <React.Fragment>\n      {currentTheme === 'dark' ? <DarkThemeColors /> : <DefaultThemeColors />}\n      <GlobalStyles />\n      <Suspense fallback={<Popup loading={true} />}>\n        <HashRouter basename='/'>\n          <Switch>\n            <Route path='/prihlasenie' render={() => currentUser ? <Redirect to='/dashboard' /> : <SignInAndSignUpPage />} />\n            <Route path='/dashboard' render={() => currentUser ? <DashboardPage /> : <Redirect to='/prihlasenie' />} />\n            <Route path='/reset/:token' component={ResetPasswordPage} />\n            {currentUser ? <Redirect to='/dashboard/zakaznici' /> : <Redirect to='/prihlasenie' />}\n          </Switch>\n        </HashRouter>\n      </Suspense>\n      <SwitchButton onClick={() => setCurrentTheme(prevValue => prevValue === \"dark\" ? \"light\" : \"dark\")}><CgDarkMode /></SwitchButton>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport AuthProvider from './context/auth/auth.context'\nimport LoadingModalProvider from './context/loading-modal/loading-modal.contenxt'\n\nReactDOM.render(\n  <React.StrictMode>\n    <LoadingModalProvider>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </LoadingModalProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["pages/reset-password/reset.password.styles.jsx","pages/reset-password/reset-password.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx"],"names":["Center","styled","div","FormContainer","form","SubmitButton","CustomButton","ResetPassword","useContext","AuthContext","isLoading","isWaitingForResponse","setIsLoading","errMessage","handleCreatingNewPassword","push","useHistory","token","useParams","useState","password","setPassword","Fragment","loading","title","close","onSubmit","e","preventDefault","label","type","name","value","handleChange","target","required","shrinkLabel","css","InputGroup","CustomInput","otherProps","className","onChange","htmlFor","length"],"mappings":"07BAGO,IAAMA,EAASC,IAAOC,IAAV,KAQNC,EAAgBF,IAAOG,KAAV,KAuBbC,EAAeJ,YAAOK,IAAPL,CAAH,KCuBVM,UA3CO,WAAO,IAAD,EACyEC,qBAAWC,KAApGC,EADgB,EAChBA,UAAWC,EADK,EACLA,qBAAsBC,EADjB,EACiBA,aAAcC,EAD/B,EAC+BA,WAAYC,EAD3C,EAC2CA,0BAC3DC,EAASC,cAATD,KACAE,EAAUC,cAAVD,MAHgB,EAKQE,mBAAS,IALjB,mBAKjBC,EALiB,KAKPC,EALO,KAkBxB,OACI,eAAC,IAAMC,SAAP,WACKZ,GAAa,cAAC,IAAD,CAAOa,QAASZ,EAAsBa,MAAOX,EAAYY,MAPzD,WAClBb,GAAa,GACbG,EAAK,QAMD,cAACf,EAAD,UAEI,eAACG,EAAD,CAAeuB,SAhBN,SAAAC,GACjBA,EAAEC,iBAEFd,EAA0BG,EAAOG,IAazB,UACI,6DAEA,cAAC,IAAD,CACIS,MAAM,gBACNC,KAAK,WACLC,KAAK,WACLC,MAAOZ,EACPa,aAAc,SAACN,GAAD,OAAON,EAAYM,EAAEO,OAAOF,QAC1CG,UAAQ,IAGZ,cAAC9B,EAAD,qC,+7CC/CpB,IAAM+B,EAAcC,YAAH,KAMJC,EAAarC,IAAOC,IAAV,IAwBTkC,EAmBAA,GC5BCG,IAnBK,SAAC,GAAkD,IAAhDN,EAA+C,EAA/CA,aAAcJ,EAAiC,EAAjCA,MAAOE,EAA0B,EAA1BA,KAASS,EAAiB,+CAClE,OACI,eAACF,EAAD,WACI,mCACIG,UAAU,aACVV,KAAMA,EACNW,SAAUT,GACNO,IAEPX,EACG,uBAAOc,QAASZ,EAAMU,UAAS,UAAKD,EAAWR,MAAMY,OAAS,SAAW,GAA1C,qBAA/B,SACKf,IAEL","file":"static/js/19.5e763b32.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport CustomButton from '../../components/custom-button/custom-button.component'\r\n\r\nexport const Center = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nexport const FormContainer = styled.form`\r\n    display: block;\r\n    height: initial;\r\n    width: 100%;\r\n    max-width: 35rem;\r\n    padding: 3rem 4rem;\r\n    border-radius: .5rem;\r\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\r\n\r\n    margin: 0 1rem 3rem;\r\n\r\n\r\n    h2 {\r\n        font-size: 2.8rem;\r\n        text-align: center;\r\n        margin-bottom: 5rem;\r\n\r\n        @media all and (max-width: 500px) {\r\n            font-size: 2.5rem;\r\n        }\r\n    }\r\n`\r\n\r\nexport const SubmitButton = styled(CustomButton)`\r\n    width: 100%;\r\n`","import React, { useState, useContext } from 'react'\r\nimport { AuthContext } from '../../context/auth/auth.context'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nimport CustomInput from '../../components/custom-input/custom-input.component'\r\nimport PopUp from '../../components/popup/pop-up.component'\r\n\r\nimport {\r\n    FormContainer,\r\n    SubmitButton,\r\n    Center\r\n} from './reset.password.styles'\r\n\r\n\r\nconst ResetPassword = () => {\r\n    const { isLoading, isWaitingForResponse, setIsLoading, errMessage, handleCreatingNewPassword } = useContext(AuthContext)\r\n    const { push } = useHistory()\r\n    const { token } = useParams()\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        handleCreatingNewPassword(token, password)\r\n    }\r\n\r\n    const handleOnClose = () => {\r\n        setIsLoading(false)\r\n        push('/')\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading && <PopUp loading={isWaitingForResponse} title={errMessage} close={handleOnClose} />}\r\n            <Center>\r\n\r\n                <FormContainer onSubmit={handleSubmit}>\r\n                    <h2>Vytvoriť nové heslo</h2>\r\n\r\n                    <CustomInput\r\n                        label=\"Nové heslo\"\r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        handleChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n\r\n                    <SubmitButton>Odoslať</SubmitButton>\r\n                </FormContainer>\r\n            </Center>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ResetPassword\r\n","import styled, { css } from \"styled-components\"\r\n\r\nconst shrinkLabel = css`\r\n    left: .5rem;\r\n    top: -14px;\r\n    font-size: 12px;\r\n    color: var(--input-color);\r\n`\r\nexport const InputGroup = styled.div`\r\n    position: relative;\r\n\r\n    /* margin: 45px 0; */\r\n\r\n    .form-input {\r\n        /* background: none; */\r\n        background-color: var(--input-background-color);\r\n        color: var(--input-color);\r\n        font-size: 1.5rem;\r\n        padding: 1rem .5rem 1rem 2rem;\r\n        display: block;\r\n        width: 100%;\r\n        border: none;\r\n        border-radius: .5rem;\r\n        /* border-bottom: 1px solid #000; */\r\n        margin: 2rem 0 0;\r\n        font-family: inherit;\r\n\r\n        &:focus {\r\n        outline: none;\r\n        }\r\n\r\n        &:focus ~ .form-input-label {\r\n            ${shrinkLabel}\r\n        }\r\n    }\r\n\r\n    input[type = 'password'] {\r\n        letter-spacing: 0.3em;\r\n    }\r\n\r\n    .form-input-label {\r\n        color: var(--input-color);\r\n        font-size: 1.4rem;\r\n        font-weight: normal;\r\n        position: absolute;\r\n        pointer-events: none;\r\n        left: 1.5rem;\r\n        top: 1rem;\r\n        transition: 300ms ease all;\r\n\r\n        &.shrink {\r\n            ${shrinkLabel}\r\n        }\r\n    }\r\n\r\n    @media all and (max-width: 500px) {\r\n        .form-input {\r\n            font-size: 1.4rem;\r\n        }\r\n        /* padding: 1rem .5rem 1rem 2rem; */\r\n    }\r\n`\r\n","import React from 'react'\r\n\r\nimport { InputGroup } from './custom-input.styles'\r\n\r\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\r\n    return (\r\n        <InputGroup>\r\n            <input\r\n                className='form-input'\r\n                name={name}\r\n                onChange={handleChange}\r\n                {...otherProps}\r\n            />\r\n            {label ? (\r\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\r\n                    {label}\r\n                </label>\r\n            ) : null\r\n            }\r\n        </InputGroup>\r\n    )\r\n}\r\n\r\nexport default CustomInput"],"sourceRoot":""}
{"version":3,"sources":["components/product-input-row/product-input-row.styles.jsx","components/product-input-row/product-input-row.component.jsx","components/product-glasses-form/product-glasses-form.styles.jsx","components/product-glasses-form/product-glasses-form.component.jsx","components/product-lenses-form/product-lenses-form.styles.jsx","components/product-lenses-form/product-lenses-form.component.jsx","sections/product/product.styles.jsx","sections/product/product.section.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","components/custom-textarea/custom-textarea.styles.jsx","components/custom-textarea/custom-textarea.component.jsx","components/custom-checkbox/custom-checkbox.styles.jsx","components/custom-checkbox/custom-checkbox.component.jsx","components/modal-images/modal-images.styles.jsx","components/modal-images/modal-images.component.jsx"],"names":["InputRow","styled","div","ProductInputRow","children","label","example","otherprops","CategoryTitle","h3","CategoryContainer","CategoryCheckbox","CustomCheckbox","TextareaRow","CustomSelect","select","Title","ProductGlassesForm","product","handleChange","handleSizeChange","handleSpecsChange","handleAvailableChange","categories","handleCategoryChange","activeCategoryIndex","Fragment","map","category","idx","name","value","isActive","handleClick","type","eanCode","e","required","brand","list","autoComplete","id","brands","price","toString","rows","description","colorCode","specs","sex","onChange","frameColor","frameMaterial","frameStyle","lensColor","size","available","length","ProductLensesForm","lense","handleLensesCylinderRangeChange","handleLensesDioptersRangeChange","dioptersRange","cylinderRange","Header","paddingStyles","DeleteButton","CustomButton","AddButton","ImageContainer","ProductImage","hasImage","DraftCheckBox","ToggleOptionsContainer","ToggleFormButton","ProductSection","useState","showImageModal","setImageModal","useParams","warData","useContext","WarehouseContext","formToShow","toggleProductForms","isUpdating","toggleDraft","selectImage","createNewProduct","updateProduct","handleProductDelete","resetProduct","lenses","handleLensesChange","getSigleLenses","createNewLenses","updateLenses","deleteLenses","getSingleProduct","LoadingModalContext","closeModal","isLoading","showModal","message","selectedImage","ImageContext","useEffect","console","log","onSubmit","preventDefault","imagePath","alert","handleSubmit","loading","title","close","setImage","eshop","onClick","_id","src","process","alt","Container","ScrollContainer","shrinkLabel","css","InputGroup","CustomTextarea","otherProps","className","htmlFor","CheckboxContainer","ModalContainer","Modal","UploadButton","CloseButton","button","FlexContainer","ImagePreviewContainer","TabOptions","TabButton","CropButton","ButtonOptions","FetchButtons","toDataUrl","url","callback","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","str","result","lastPos","indexOf","cuttedstr","slice","readAsDataURL","response","open","responseType","send","ModalImages","isDisabled","getImages","handleDeleteImage","handleImage","images","setSelectedImage","getNextImages","getPrevImage","getMessage","setIsLoading","setShowModal","showTab","setShowTab","imageToUpload","setImageToUpload","imgUrl","setImgUrl","imageName","setImageName","imageAlt","setImageAlt","tab","URL","createObjectURL","ReactDOM","createPortal","accept","target","files","imgData","disabled","img","document","getElementById"],"mappings":"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","file":"static/js/5.33ba16cd.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const InputRow = styled.div`\n    display:flex;\n    align-items: center;\n\n    p {\n        margin-top: 1.8rem;\n        margin-left: 2rem;\n            opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n    @media all and (max-width: 800px) {\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n    }\n`","import React from 'react'\n\nimport { InputRow } from './product-input-row.styles'\n\nconst ProductInputRow = ({ children, label, example, ...otherprops }) => {\n    return (\n        <InputRow {...otherprops}>\n            <div>\n                {children}\n            </div>\n            <div>\n                <p>{label + \" \"}<span>{example}</span></p>\n            </div>\n        </InputRow>\n    )\n}\n\nexport default ProductInputRow\n","import styled from 'styled-components'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\nexport const CategoryTitle = styled.h3`\n    margin-bottom: 2rem;\n`\n\nexport const CategoryContainer = styled.div`\n    width:100%;\n    display: flex;\n    justify-content: space-evenly;\n    margin-bottom: 1rem;\n    flex-wrap: wrap;\n\n`\n\nexport const CategoryCheckbox = styled(CustomCheckbox)`\n    margin: 0 1rem 2rem;\n`\n\n\nexport const TextareaRow = styled.div`\n    display: grid;\n    grid-template-columns: 35rem 1fr;\n    /* align-items: center; */\n    /* max-width: 45rem; */\n\n    p {\n        margin-top: 2.5rem;\n        margin-left: 2rem;\n        opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n    @media all and (max-width: 800px) {\n        display: flex;\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n\n        div {\n            width: 100%;\n        }\n    }\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: #F5F5F5;\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`\n\nexport const Title = styled.h3`\n    margin-top: 2rem;\n`\n\n","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport ProductInputRow from '../product-input-row/product-input-row.component'\n\nimport {\n    TextareaRow,\n    CustomSelect,\n    Title,\n    CategoryContainer,\n    CategoryCheckbox,\n    CategoryTitle,\n} from './product-glasses-form.styles.jsx'\n\nimport { brands } from '../../context/warehouse/warehouse.utils'\n\nconst ProductGlassesForm = ({ product, handleChange, handleSizeChange, handleSpecsChange, handleAvailableChange, categories, handleCategoryChange, activeCategoryIndex }) => {\n\n    return (\n        <React.Fragment>\n\n            <div>\n                <CategoryTitle>Kategória</CategoryTitle>\n                <CategoryContainer>\n                    {\n                        categories.map((category, idx) => {\n                            return (\n                                <CategoryCheckbox\n                                    key={idx}\n                                    label={category.name}\n                                    value={category.value}\n                                    name='type'\n                                    isActive={category.value === activeCategoryIndex}\n                                    handleClick={() => handleCategoryChange(category.value)}\n                                />\n                            )\n                        })\n                    }\n                </CategoryContainer>\n            </div>\n            <div>\n\n                <h3>Základné informacie</h3>\n                <ProductInputRow\n                    label=\"Unikátny kód produktu\"\n                    example=\"napr: TH1590807\"\n                >\n                    <CustomInput\n                        label=\"Ean kód*\"\n                        type='text'\n                        name='eanCode'\n                        value={product.eanCode}\n                        handleChange={(e) => handleChange(e)}\n                        required\n                    />\n                </ProductInputRow>\n                <ProductInputRow\n                    label=\"Názov produktu\"\n                    example=\"napr: Tommy Hilfiger\"\n                >\n                    <CustomInput\n                        label=\"Názov*\"\n                        type='text'\n                        name='name'\n                        value={product.name}\n                        handleChange={(e) => handleChange(e)}\n                        required\n\n                    />\n                </ProductInputRow>\n                <ProductInputRow\n                    label=\"Značka\"\n                    example=\"napr: Tommy Hilfiger\"\n                >\n                    <CustomInput\n                        label=\"Značka\"\n                        type='text'\n                        name='brand'\n                        value={product.brand}\n                        handleChange={(e) => handleChange(e)}\n                        list={\"brands\"}\n                        autoComplete='off'\n                    />\n                    <datalist id=\"brands\">\n                        {brands.map(brand => (\n                            <option key={brand} value={brand} />\n                        ))}\n                    </datalist>\n                </ProductInputRow>\n                <ProductInputRow\n                    label=\"Cena v centoch\"\n                    example=\"napr: 1055 = 10,55€\"\n                >\n                    <CustomInput\n                        label=\"Cena*\"\n                        type='number'\n                        name='price'\n                        value={product.price.toString()}\n                        handleChange={(e) => handleChange(e)}\n                        required\n\n                    />\n                </ProductInputRow>\n                <TextareaRow>\n                    <div>\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={product.description}\n                            handleChange={(e) => handleChange(e)}\n                        />\n                    </div>\n                    <div>\n                        <p>Popis produktu</p>\n                    </div>\n                </TextareaRow>\n\n\n\n                {\n                    !(product.type === 5 || product.type === 4) && (\n                        <React.Fragment>\n                            <h3>Špecifikacie</h3>\n                            <ProductInputRow\n                                label=\"Farebný kód produktu\"\n                                example=\"napr: #000000\"\n                            >\n                                <CustomInput\n                                    label=\"Color code\"\n                                    type='text'\n                                    name='colorCode'\n                                    value={product.colorCode}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Pohlavie pre ktoré je produkt určený\"\n                                example=\"\"\n                            >\n                                <CustomSelect name='sex' value={product.specs.sex} onChange={e => handleSpecsChange(e)}>\n                                    <option value='M'>Muži</option>\n                                    <option value='W'>Ženy</option>\n                                    <option value='U'>Nezáleží</option>\n                                </CustomSelect>\n                            </ProductInputRow>\n\n                            <ProductInputRow\n                                label=\"Farba\"\n                                example=\"napr: Čierna\"\n                            >\n                                <CustomInput\n                                    label=\"Farba rámu\"\n                                    type='text'\n                                    name='frameColor'\n                                    value={product.specs.frameColor}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Materiál\"\n                                example=\"napr: Titán\"\n                            >\n                                <CustomInput\n                                    label=\"Materiál rámu\"\n                                    type='text'\n                                    name='frameMaterial'\n                                    value={product.specs.frameMaterial}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Tvar\"\n                                example=\"napr: Okruhlý\"\n                            >\n                                <CustomInput\n                                    label=\"Tvar rámu\"\n                                    type='text'\n                                    name='frameStyle'\n                                    value={product.specs.frameStyle}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Farba skla\"\n                                example=\"napr: Priehľadná\"\n                            >\n                                <CustomInput\n                                    label=\"Farba\"\n                                    type='text'\n                                    name='lensColor'\n                                    value={product.specs.lensColor}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n\n                            <Title>Velikosť</Title>\n\n                            {product.specs.size.map((value, idx) => {\n                                return (\n                                    <ProductInputRow\n                                        key={idx}\n                                        label={`Velkosť`}\n                                        example=\"napr: 0\"\n                                    >\n                                        <CustomInput\n                                            label={`${idx}`}\n                                            type='number'\n                                            // name={store.name}\n                                            value={value.toString()}\n                                            handleChange={e => handleSizeChange(e, idx)}\n                                        />\n                                    </ProductInputRow>\n                                )\n                            })}\n                        </React.Fragment>\n                    )\n                }\n\n                <Title>Skladové zásoby</Title>\n                {product && product.available.map((value, idx) => {\n                    if (product.available.length - 1 === idx) return\n\n                    return (\n                        <ProductInputRow\n                            key={idx}\n                            label={`Počet kusov na predajni ${idx}`}\n                            example=\"napr: 0\"\n                        >\n                            <CustomInput\n                                label={`Predajna ${idx}`}\n                                type='number'\n                                // name={store.name}\n                                value={value.toString()}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        </ProductInputRow>\n                    )\n                })}\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default ProductGlassesForm\n","import styled from 'styled-components'\n\nexport const TextareaRow = styled.div`\n    display: grid;\n    grid-template-columns: 35rem 1fr;\n    /* align-items: center; */\n    /* max-width: 45rem; */\n\n    p {\n        margin-top: 2.5rem;\n        margin-left: 2rem;\n        opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n        @media all and (max-width: 800px) {\n        display: flex;\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n\n        div {\n            width: 100%;\n        }\n    }\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport ProductInputRow from '../product-input-row/product-input-row.component'\n\nimport {\n    TextareaRow\n} from './product-lenses-form.styles'\n\nconst ProductLensesForm = ({ lense, handleChange, handleLensesCylinderRangeChange, handleLensesDioptersRangeChange }) => {\n    return (\n        <div>\n            <h3>Základné informacie</h3>\n            <ProductInputRow\n                label=\"Názov šošoviek\"\n                example=\"napr: Smile\"\n            >\n                <CustomInput\n                    label=\"Názov*\"\n                    type='text'\n                    name='name'\n                    value={lense.name}\n                    handleChange={(e) => handleChange(e)}\n                    required\n\n                />\n            </ProductInputRow>\n            <ProductInputRow\n                label=\"Značka\"\n                example=\"napr: Zeiss\"\n            >\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={lense.brand}\n                    handleChange={(e) => handleChange(e)}\n                />\n            </ProductInputRow>\n            <ProductInputRow\n                label=\"Cena v centoch\"\n                example=\"napr: 1055 = 10,55€\"\n            >\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={lense.price.toString()}\n                    handleChange={(e) => handleChange(e)}\n                    required\n\n                />\n            </ProductInputRow>\n            <TextareaRow>\n                <div>\n                    <CustomTextarea\n                        label=\"Popis*\"\n                        name='description'\n                        rows='5'\n                        value={lense.description}\n                        handleChange={(e) => handleChange(e)}\n                        required\n                    />\n                </div>\n                <div>\n                    <p>Popis produktu</p>\n                </div>\n            </TextareaRow>\n\n            <h3>Špecifikacie</h3>\n\n            {lense && lense.dioptersRange.map((value, idx) => {\n                return (\n                    <ProductInputRow\n                        key={idx}\n                        label={`Dioptrie`}\n                        example=\"napr: 0\"\n                    >\n                        <CustomInput\n                            label={idx === 0 ? \"minimum\" : \"maximum\"}\n                            type='number'\n                            // name={store.name}\n                            value={value.toString()}\n                            handleChange={e => handleLensesDioptersRangeChange(e, idx)}\n                        />\n                    </ProductInputRow>\n                )\n            })}\n\n            {lense && lense.cylinderRange.map((value, idx) => {\n                return (\n                    <ProductInputRow\n                        key={idx}\n                        label={`Cylinder`}\n                        example=\"napr: 0\"\n                    >\n                        <CustomInput\n                            label={idx === 0 ? \"minimum\" : \"maximum\"}\n                            type='number'\n                            // name={store.name}\n                            value={value.toString()}\n                            handleChange={e => handleLensesCylinderRangeChange(e, idx)}\n                        />\n                    </ProductInputRow>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProductLensesForm\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\nimport CustomButton from '../../components/custom-button/custom-button.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n\n    @media all and (max-width: 800px) {\n        flex-wrap: wrap;\n\n        div:nth-child(2) {\n            margin-bottom: 2rem;\n        }\n    }\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    margin: 0 2rem 0 0;\n    background-color: #DD4C4C;\n`\nexport const AddButton = styled(CustomButton)`\n    font-size: 1.4rem;\n`\n\nexport const Title = styled.h3`\n    margin-top: 2rem;\n    /* margin-bottom: 2rem; */\n`\n\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"#eee\"};\n    margin-top: 3rem;\n    padding: 6rem;\n    position: relative;\n    max-width: 45rem;\n\n    img {\n        position: absolute;\n        width: 100%;\n        /* max-height: 40rem; */\n        object-fit:cover;\n        object-position:center;\n\n        /* height: 100%; */\n        left: 0;\n        top: 0;\n\n    }\n`\n\nexport const DraftCheckBox = styled(CustomCheckbox)`\n    margin-right: 2rem;\n`\n\nexport const ToggleOptionsContainer = styled.div`\n    display: flex;\n    width: 25rem;\n    justify-content: space-between;\n    margin: 2rem auto;\n`\n\nexport const ToggleFormButton = styled(CustomButton)`\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"#000\"};\n    font-weight: 700;\n`","import React, { useState, useContext, useEffect } from 'react'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\n\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\n\nimport {\n    Header,\n    AddButton,\n    DeleteButton,\n    Title,\n    ProductImage,\n    DraftCheckBox,\n    ImageContainer,\n    ToggleFormButton,\n    ToggleOptionsContainer\n} from './product.styles'\n\nconst ProductSection = () => {\n    const [showImageModal, setImageModal] = useState(false)\n\n    const { id } = useParams()\n    const warData = useContext(WarehouseContext)\n    const {\n        formToShow,\n        toggleProductForms,\n        isUpdating,\n        activeCategoryIndex,\n        categories,\n        toggleDraft,\n        handleCategoryChange,\n        handleAvailableChange,\n        handleSizeChange,\n        selectImage,\n        product,\n        createNewProduct,\n        updateProduct,\n        handleProductDelete,\n        resetProduct,\n        lenses,\n        handleLensesChange,\n        handleLensesDioptersRangeChange,\n        handleLensesCylinderRangeChange,\n        getSigleLenses,\n        createNewLenses,\n        updateLenses,\n        deleteLenses,\n        getSingleProduct,\n        handleChange,\n        handleSpecsChange\n    } = warData\n\n    const {\n        closeModal,\n        isLoading,\n        showModal,\n        message\n    } = useContext(LoadingModalContext)\n\n    const { selectedImage } = useContext(ImageContext)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n\n\n\n        if (formToShow === 'glasses') {\n            if (!product.imagePath) {\n                alert(\"Žiaden obrazok!\")\n                return\n            }\n\n            if (id === 'novy-produkt') {\n                createNewProduct(product)\n                resetProduct()\n            } else {\n                updateProduct(product)\n                resetProduct()\n            }\n        } else {\n            if (!lenses.imagePath) {\n                alert(\"Žiaden obrazok!\")\n                return\n            }\n\n            if (id === 'novy-produkt') {\n                createNewLenses(lenses)\n            } else {\n                updateLenses(lenses)\n            }\n\n        }\n\n    }\n\n    useEffect(() => {\n        if (id !== \"novy-produkt\") {\n            if (formToShow === \"glasses\") {\n                getSingleProduct(id)\n            } else {\n                getSigleLenses(id)\n            }\n        }\n    }, [id])\n\n    useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            resetProduct()\n        }\n    }, [])\n\n    return (\n        <form onSubmit={e => handleSubmit(e)}>\n            { showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={selectImage} />}\n            <Header>\n                <div>\n                    <h1>{isUpdating ? \"Upraviť produkt\" : \"Pridať nový produkt\"}</h1>\n                </div>\n                <div>\n                    <DraftCheckBox\n                        label='Verejný'\n                        isActive={formToShow === 'glasses' ? product.eshop : lenses.eshop}\n                        handleClick={() => toggleDraft()}\n                    />\n                    {isUpdating && <DeleteButton onClick={formToShow === 'glasses' ? () => handleProductDelete(product._id) : () => deleteLenses(lenses._id)}>Vymazať</DeleteButton>}\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť produkt\" : \"Pridať product\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating &&\n                    <React.Fragment>\n                        <Title>Aký produkt chcete pridať?</Title>\n                        <ToggleOptionsContainer>\n                            <ToggleFormButton isActive={formToShow === 'glasses'} onClick={(e) => toggleProductForms(e, 'glasses')}>Okuliare a i.</ToggleFormButton>\n                            <ToggleFormButton isActive={formToShow === 'lenses'} onClick={(e) => toggleProductForms(e, 'lenses')}>Sklá</ToggleFormButton>\n                        </ToggleOptionsContainer>\n                    </React.Fragment>\n                }\n\n\n\n                {formToShow === 'glasses' ? (\n                    <ProductGlassesForm\n                        activeCategoryIndex={activeCategoryIndex}\n                        categories={categories}\n                        product={product}\n                        handleChange={handleChange}\n                        handleSizeChange={handleSizeChange}\n                        handleSpecsChange={handleSpecsChange}\n                        handleCategoryChange={handleCategoryChange}\n                        handleAvailableChange={handleAvailableChange}\n                    />\n                ) : (\n                        <ProductLensesForm\n                            lense={lenses}\n                            handleChange={handleLensesChange}\n                            handleLensesDioptersRangeChange={handleLensesDioptersRangeChange}\n                            handleLensesCylinderRangeChange={handleLensesCylinderRangeChange}\n                        />\n                    )\n                }\n\n\n\n                <div>\n                    <div>\n\n                    </div>\n\n                    <ImageContainer>\n\n                        <Title>Obrázok</Title>\n\n                        <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </ProductImage>\n                    </ImageContainer>\n                </div>\n            </ScrollContainer>\n\n        </form >\n    )\n}\n\nexport default ProductSection\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`","import React from 'react'\nimport { Container } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            {children}\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: .5rem .5rem .5rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 25px 0;\n        font-family: inherit;\n        resize: none;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: .6rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-textarea.styles'\n\nconst CustomTextarea = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <textarea\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomTextarea","import styled from 'styled-components'\n\nexport const CheckboxContainer = styled.div`\n    display: inline-block;\n    cursor: pointer;\n    font-size: 1.5rem;\n    font-weight: 700;\n    /* margin-right: 2rem; */\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"rgba(0,0,0,.06)\"};\n    color: ${({ isActive }) => isActive ? \"#fff\" : \"#000\"};\n    padding: .8rem 3rem;\n    border-radius: .2rem;\n    transition: all .2s ease-out;\n\n    @media all and (max-width: 500px) {\n        padding: 0.5rem 1.5rem;\n        font-size: 1.4rem;\n    }\n`","import React from 'react'\n\nimport { CheckboxContainer } from './custom-checkbox.styles'\n\nconst CustomCheckbox = ({ label, isActive, handleClick, ...otherprops }) => {\n    return (\n        <CheckboxContainer isActive={isActive} onClick={handleClick} {...otherprops}>\n            {label}\n        </CheckboxContainer>\n    )\n}\n\nexport default CustomCheckbox\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 50rem;\n    max-height: 60rem;\n\n    overflow-y: scroll;\n\n    /* display: flex;\n    flex-direction: column;\n    align-items: center; */\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: white;\n\n    position: relative;\n    z-index: 999999;\n\n`\n\nexport const UploadButton = styled.label`\n    input[type=\"file\"] {\n        position: absolute;\n        left: -999999999rem;\n    }\n    cursor: pointer;\n    background-color: #000;\n    color: #fff;\n    max-width: 18rem;\n    font-size: 1.4rem;\n    font-family: inherit;\n    padding: .8rem 1rem;\n    text-align: center;\n    display: block;\n    border: 1px solid #000;\n    transition: background-color .1s ease-out,\n                color .2s ease-out;\n    outline: none;\n    margin: 0 auto 2rem;\n\n    &:focus {\n        outline:none;\n    }\n\n    &:hover {\n        background-color: transparent;\n        color: #000;\n    }\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const FlexContainer = styled.div`\n    /* max-width: 46rem; */\n\n    /* width: 100%; */\n    /* overflow-x: scroll; */\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    margin: 2rem auto;\n`\n\nexport const ImageContainer = styled.div`\n    position: relative;\n    cursor: pointer;\n    width: 20rem;\n    margin: 1rem 0;\n\n    &:hover button {\n        display: block\n    }\n\n    /* &:not(:last-child) {\n        margin-right: 1.5rem;\n    } */\n\n    img {\n        width:100%;\n        height:100%;\n        object-fit: contain;\n        object-position: center;\n    }\n`\n\nexport const DeleteButton = styled.button`\n    cursor: pointer;\n    display:none;\n    border-radius:50%;\n    position: absolute;\n    border: none;\n    background-color: rgb(235, 172, 1);\n    padding: .5rem .75rem;\n    font-size: 1rem;\n    right: .5rem;\n    top: .5rem;\n\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const ImagePreviewContainer = styled.div`\n    display: block;\n    width: 100%;\n\n    img {\n        display: block;\n        max-width: 100%;\n        /* width: inherit; */\n    }\n`\n\nexport const TabOptions = styled.div`\n    max-width: 18rem;\n    display: flex;\n    justify-content: space-between;\n    margin: 0 auto;\n`\n\nexport const TabButton = styled.button`\n    cursor: pointer;\n    outline:none;\n    border: none;\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"#000\"};\n    color: #fff;\n    font-weight: ${({ isActive }) => isActive ? \"700\" : \"400\"};\n    font-family: inherit;\n    font-size: 1.2rem;\n    padding: .8rem 1.5rem;\n    border-radius: .2rem;\n    margin-bottom: 2rem;\n    transition: all .3s ease-out;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const CropButton = styled(CustomButton)`\n    display: block;\n    margin: 2rem auto 0;\n\n    &:disabled {\n        cursor: not-allowed;\n        background-color: gray;\n    }\n`\n\nexport const ButtonOptions = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nexport const FetchButtons = styled.button`\n    cursor: pointer;\n    outline: none;\n    border: none;\n    padding: .4rem 1rem;\n    border-radius: 50%;\n    color: #fff;\n    background-color: #000;\n    font-size: 1.2rem;\n    font-family: inherit;\n    margin: 0 .5rem;\n\n    &:focus {\n        outline: none;\n    }\n`","import React, { useEffect, useContext, useState, useRef } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    const getCropData = async (e) => {\n        e.preventDefault()\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            // if (typeof cropper !== 'undefined') {\n            toDataUrl(imgUrl, async (imgData) => {\n                const data = await handleImage(imgData, imageName, imageAlt)\n\n                if (data.image) {\n                    setImage(data.image._id)\n                    setSelectedImage(data.image)\n                    getImages()\n                    close()\n                }\n            })\n\n            // }\n            setShowModal(false)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n        closeModal()\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Orezať a nahrať</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n"],"sourceRoot":""}
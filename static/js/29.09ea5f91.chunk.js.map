{"version":3,"sources":["context/examination/examination.context.jsx"],"names":["ExaminationContext","createContext","createExamination","updateExamination","deleteExamination","ExaminationProvider","children","token","useContext","AuthContext","LoadingModalContext","closeModal","getMessage","setIsLoading","setShowModal","myHeaders","Headers","append","examsToAdd","a","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","process","response","json","data","exam","message","console","log","examToUpdate","examId","Provider","value"],"mappings":"0NAIaA,EAAqBC,wBAAc,CAC5CC,kBAAmB,aACnBC,kBAAmB,aACnBC,kBAAmB,eA0HRC,UAvHa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnBC,EAAUC,qBAAWC,KAArBF,MADkC,EAOtCC,qBAAWE,KAJXC,EAHsC,EAGtCA,WACAC,EAJsC,EAItCA,WACAC,EALsC,EAKtCA,aACAC,EANsC,EAMtCA,aAGEC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAcV,GAC/BQ,EAAUE,OAAO,eAAgB,oBAEjC,IAAMf,EAAiB,uCAAG,WAAOgB,GAAP,qBAAAC,EAAA,6DACtBN,GAAa,GACbC,GAAa,GAEPM,EAAMC,KAAKC,UAAUJ,GAErBK,EAAiB,CACnBC,OAAQ,OACRC,QAASV,EACTW,KAAMN,EACNO,SAAU,UAVQ,kBAcKC,MAAM,GAAD,OAAIC,gCAAJ,qBAA+DN,GAdzE,cAcZO,EAdY,iBAeCA,EAASC,OAfV,aAeZC,EAfY,QAkBTC,KAlBS,wBAmBdtB,IAnBc,2BAuBlBC,EAAWoB,EAAKE,SAChBrB,GAAa,GAxBK,kDA0BlBsB,QAAQC,IAAR,MACAxB,EAAW,qBACXC,GAAa,GA5BK,0DAAH,sDAgCjBV,EAAiB,uCAAG,WAAOkC,EAAcC,GAArB,qBAAAnB,EAAA,6DACtBN,GAAa,GACbC,GAAa,GAEPM,EAAMC,KAAKC,UAAUe,GAErBd,EAAiB,CACnBC,OAAQ,QACRC,QAASV,EACTW,KAAMN,EACNO,SAAU,UAVQ,kBAcKC,MAAM,GAAD,OAAIC,gCAAJ,4BAA8DS,GAAUf,GAdlF,cAcZO,EAdY,iBAeCA,EAASC,OAfV,aAeZC,EAfY,QAkBTC,KAlBS,wBAmBdtB,IAnBc,2BAuBlBC,EAAWoB,EAAKE,SAChBrB,GAAa,GAxBK,kDA2BlBsB,QAAQC,IAAR,MACAxB,EAAW,qBACXC,GAAa,GA7BK,0DAAH,wDAiCjBT,EAAiB,uCAAG,WAAOkC,GAAP,mBAAAnB,EAAA,6DACtBN,GAAa,GACbC,GAAa,GAEPS,EAAiB,CACnBC,OAAQ,SACRC,QAASV,EACTY,SAAU,UAPQ,kBAWKC,MAAM,GAAD,OAAIC,gCAAJ,4BAA8DS,GAAUf,GAXlF,cAWZO,EAXY,gBAYCA,EAASC,OAZV,YAYZC,EAZY,QAcTC,KAdS,wBAedtB,IAfc,2BAmBlBC,EAAWoB,EAAKE,SAChBrB,GAAa,GApBK,kDAsBlBsB,QAAQC,IAAR,MACAxB,EAAW,qBACXC,GAAa,GAxBK,0DAAH,sDA4BvB,OACI,cAACb,EAAmBuC,SAApB,CACIC,MAAO,CACHtC,oBACAC,oBACAC,qBAJR,SAOKE","file":"static/js/29.09ea5f91.chunk.js","sourcesContent":["import React, { createContext, useContext } from 'react'\r\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\r\nimport { AuthContext } from '../auth/auth.context'\r\n\r\nexport const ExaminationContext = createContext({\r\n    createExamination: () => { },\r\n    updateExamination: () => { },\r\n    deleteExamination: () => { },\r\n})\r\n\r\nconst ExaminationProvider = ({ children }) => {\r\n    const { token } = useContext(AuthContext)\r\n    const {\r\n        closeModal,\r\n        getMessage,\r\n        setIsLoading,\r\n        setShowModal\r\n    } = useContext(LoadingModalContext)\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", token);\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    const createExamination = async (examsToAdd) => {\r\n        setIsLoading(true)\r\n        setShowModal(true)\r\n\r\n        const raw = JSON.stringify(examsToAdd)\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/exams/`, requestOptions)\r\n            const data = await response.json()\r\n\r\n\r\n            if (data.exam) {\r\n                closeModal()\r\n                return\r\n            }\r\n\r\n            getMessage(data.message)\r\n            setIsLoading(false)\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const updateExamination = async (examToUpdate, examId) => {\r\n        setIsLoading(true)\r\n        setShowModal(true)\r\n\r\n        const raw = JSON.stringify(examToUpdate)\r\n\r\n        const requestOptions = {\r\n            method: 'PATCH',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/exams/${examId}`, requestOptions)\r\n            const data = await response.json()\r\n\r\n\r\n            if (data.exam) {\r\n                closeModal()\r\n                return\r\n            }\r\n\r\n            getMessage(data.message)\r\n            setIsLoading(false)\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const deleteExamination = async (examId) => {\r\n        setIsLoading(true)\r\n        setShowModal(true)\r\n\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/exams/${examId}`, requestOptions)\r\n            const data = await response.json()\r\n\r\n            if (data.exam) {\r\n                closeModal()\r\n                return\r\n            }\r\n\r\n            getMessage(data.message)\r\n            setIsLoading(false)\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ExaminationContext.Provider\r\n            value={{\r\n                createExamination,\r\n                updateExamination,\r\n                deleteExamination\r\n            }}\r\n        >\r\n            {children}\r\n        </ExaminationContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ExaminationProvider"],"sourceRoot":""}
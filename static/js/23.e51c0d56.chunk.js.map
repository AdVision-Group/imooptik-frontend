{"version":3,"sources":["components/profile-order-overview/profile-order-overview.styles.jsx","components/profile-order-overview/profile-order-overview.component.jsx","components/user-form/user.form-styles.jsx","components/user-form/user-form.component.jsx","components/new-user-form/new-user-form.styles.jsx","components/new-user-form/new-user-form.component.jsx","sections/customer-profile/customer-profile.styles.jsx","sections/customer-profile/customer-profile.section.jsx","context/warehouse/warehouse.utils.jsx"],"names":["OrderContainer","styled","div","OrderContent","Options","UpdateButton","CustomButton","DeleteButton","OrderId","p","ProfileOrderOverview","id","handleUpdateClick","onClick","Profile","GridContainer","ZeroMargin","GridRow","Row","Title","h2","Container","OrderHeader","OrderButton","AdminPanelContainer","CustomSelect","select","UserForm","isAdmin","isUpdating","user","handleChange","handleParameterChange","push","useHistory","label","example","name","value","premises","onChange","e","retailNames","map","idx","admin","type","fName","lName","email","phone","address","psc","city","country","parameters","lenses","preventDefault","_id","handleAddOrderButtonClick","orders","length","order","NewUserForm","formToShow","switchFormButtons","toggleUserForm","items","title","activeIndex","handleClick","password","confirmPassword","Header","paddingStyles","DeleteProfileButton","SaveButton","CustomerProfile","useParams","useContext","AuthContext","LoadingModalContext","closeModal","isLoading","message","showModal","UserContext","getUser","updateUser","resetUser","createUser","useEffect","console","log","loading","close","onSubmit","initProductObj","description","price","brand","soldAmount","available","eanCode","colorCode","colorName","imagePath","image","eshop","specs","frameColor","frameMaterial","frameStyle","lensColor","sex","size","initLensesObj","dioptersRange","cylinderRange","productCategories","brands","formatPrice","includes","split","Number"],"mappings":"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,GAEX,CACID,KAAM,kBACNC,MAAO,GAEX,CACID,KAAM,mBACNC,MAAO,GAEX,CACID,KAAM,oBACNC,MAAO,GAEX,CACID,KAAM,UACNC,MAAO,IAcFkF,EAAS,CAClB,SACA,kBACA,UACA,WACA,YACA,WACA,UACA,eACA,mBACA,UACA,gBACA,OACA,kBACA,OACA,iBACA,SACA,kBACA,QACA,SACA,QACA,iBACA,WACA,QACA,QACA,QACA,UACA,YACA,SACA,aACA,UACA,SACA,cACA,WACA,SACA,SACA,OACA,eACA,WACA,SACA,SACA,WACA,SACA,oBACA,QACA,oBACA,QACA,eACA,UACA,sBACA,QACA,YACA,cACA,WACA,iBACA,UACA,SAGSC,EAAc,SAAAtB,GACvB,IAAI7D,EAAQ,EACZ,OAAI6D,EAAMuB,SAAS,KACoB,IAA/BvB,EAAMwB,MAAM,KAAK,GAAG9D,QACpBvB,EAAQ6D,EAAMwB,MAAM,KAAK,GAAKxB,EAAMwB,MAAM,KAAK,GAAK,IAC7CC,OAAOtF,KAEdA,EAAQ6D,EAAMwB,MAAM,KAAK,GAAKxB,EAAMwB,MAAM,KAAK,GACxCC,OAAOtF,IAGXsF,OAAe,IAARzB","file":"static/js/23.e51c0d56.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const OrderContainer = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 25rem;\n\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    padding: 2rem;\n\n    &:not(:last-child) {\n        margin-bottom: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n\n    }\n`\n\nexport const OrderContent = styled.div`\n\n    h2 {\n        font-size: 1.6rem;\n    }\n`\n\nexport const Options = styled.div`\n    align-self: end;\n    justify-self: end;\n`\n\nexport const UpdateButton = styled(CustomButton)`\n    font-size: 1rem;\n    margin-left: auto;\n    display:block;\n\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1rem;\n    background-color: rgb(235, 172, 1);\n    margin-bottom: 1rem;\n    display:block;\n\n`\n\nexport const OrderId = styled.p`\n    font-size: 1.2rem;\n    color: gray;\n    /* margin-bottom: 2rem; */\n`","import React from 'react'\n\nimport {\n    DeleteButton,\n    Options,\n    OrderContainer,\n    OrderContent,\n    UpdateButton,\n    OrderId\n} from './profile-order-overview.styles'\n\nconst ProfileOrderOverview = ({ id, handleUpdateClick }) => {\n    return (\n        <OrderContainer>\n            <OrderContent>\n                <h2>ID Objednávky</h2>\n                <OrderId>{id}</OrderId>\n            </OrderContent>\n\n            <Options>\n                <DeleteButton>\n                    Vymazať\n                </DeleteButton>\n                <UpdateButton onClick={handleUpdateClick}>\n                    Upraviť\n                </UpdateButton>\n\n            </Options>\n\n        </OrderContainer>\n    )\n}\n\nexport default ProfileOrderOverview\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\n\nexport const Profile = styled.div`\n    /* padding: 2rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08); */\n    margin-right: 2rem;\n\n`\n\nexport const GridContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: start;\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n    }\n`\n\nexport const ZeroMargin = styled.div`\n    input {\n        margin-bottom: 0 !important;\n    }\n`\n\nexport const GridRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n`\n\n\nexport const ThreeColRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-items: center;\n\n    input {\n        margin-bottom: 0 !important;\n    }\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr 1fr;\n        grid-template-areas:\n            \"a a\"\n            \"b c\";\n\n        div:nth-child(1){\n            grid-area: a;\n            margin-bottom: 0;\n        }\n        div:nth-child(2){\n            grid-area: b;\n            margin-bottom: 2rem;\n\n        }\n        div:nth-child(3){\n            grid-area: c;\n            margin-bottom: 2rem;\n        }\n    }\n`\n\nexport const Row = styled.div`\n    width: 75%;\n`\n\n\nexport const Title = styled.h2`\n    margin-bottom: 2rem;\n`\n\nexport const Container = styled.div`\n    margin-top: 2rem;\n`\n\nexport const OrderHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n`\n\nexport const OrderButton = styled(CustomButton)`\n    margin-top: .2rem;\n    font-size: 1.2rem;\n`\n\nexport const AdminPanelContainer = styled.div`\n    margin-bottom: 3rem;\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: #F5F5F5;\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ProfileOrderOverview from '../profile-order-overview/profile-order-overview.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Profile,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    Title,\n    Container,\n    OrderHeader,\n    OrderButton,\n    CustomSelect,\n    AdminPanelContainer\n} from './user.form-styles'\n\nconst UserForm = ({\n    isAdmin,\n    isUpdating,\n    user,\n    handleChange,\n    handleParameterChange,\n}) => {\n    const { push } = useHistory()\n\n    const handleAddOrderButtonClick = e => {\n        e.preventDefault()\n        push(`/dashboard/objednavky/${user._id}`)\n    }\n\n    return (\n        <GridContainer>\n            <Profile>\n                {isAdmin && <AdminPanelContainer>\n                    <h2>Admin panel</h2>\n                    <InputRow\n                        label=\"Predajňa na ktorej uživatel pracuje\"\n                        example=''\n                    >\n                        <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Nezadané</option>\n                            {\n                                retailNames.map((name, idx) => {\n                                    if (idx === 4) return\n                                    return (\n                                        <option key={idx} value={idx + 1}>{name}</option>\n\n                                    )\n                                })\n                            }\n                        </CustomSelect>\n                    </InputRow>\n                    <InputRow\n                        label=\"Výška administrativných práv\"\n                        example=\"\"\n                    >\n                        <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Zákaznik</option>\n                            <option value={1}>Predavač</option>\n                            <option value={2}>Vedúci</option>\n                        </CustomSelect>\n                    </InputRow>\n                </AdminPanelContainer>}\n                <div>\n                    <h2>Informácie</h2>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                // label=\"Priezvisko*\"\n                                type='date'\n                                name='birthDate'\n                                value={\"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </div>\n\n                <Container>\n                    <h2>Kontaktné údaje</h2>\n                    <Row>\n                        <div>\n                            <CustomInput\n                                label=\"E-mail*\"\n                                type='email'\n                                name='email'\n                                value={user.email}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Telefónne číslo\"\n                                type='text'\n                                name='phone'\n                                value={user.phone}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <h2>Fakturačné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.address}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.psc}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.city}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.country}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n\n                <Container>\n                    <h2>Parametre</h2>\n\n                    <ParametersTable\n                        parameters={user.lenses}\n                        handleChange={handleParameterChange}\n                    />\n                </Container>\n\n\n            </Profile>\n\n            {isUpdating && <div>\n                <OrderHeader>\n                    <Title>\n                        Objednávky\n                    </Title>\n                    <OrderButton onClick={e => handleAddOrderButtonClick(e)}>Pridať objednávku</OrderButton>\n                </OrderHeader>\n\n                <div>\n                    {user.orders.length > 0 ? user.orders.map((order, idx) => (\n                        <ProfileOrderOverview\n                            key={idx}\n                            id={order}\n                            handleUpdateClick={() => push(`/dashboard/objednavky/${user._id}/${order}`)}\n                        />\n                    )) : (\n                            <p>Žiadné objednávky</p>\n                        )}\n\n\n                </div>\n            </div>}\n        </GridContainer>\n    )\n}\n\nexport default UserForm\n","import styled from \"styled-components\"\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: #F5F5F5;\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`\n\nexport const ZeroMargin = styled.div`\n    input {\n        margin-bottom: 0 !important;\n    }\n`\n\nexport const GridRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    max-width: 50rem;\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n`\nexport const Container = styled.div`\n    margin-top: 2rem;\n`","import React, { useEffect } from 'react'\n\nimport CustomFormSwitch from '../custom-form-switch/custom-form-switch.component'\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    CustomSelect,\n    Container,\n    GridRow,\n    ZeroMargin\n} from './new-user-form.styles'\n\n\nconst NewUserForm = ({ formToShow, switchFormButtons, toggleUserForm, user, handleChange, isAdmin, handleParameterChange }) => {\n\n\n    return (\n        <div>\n            {/* Akého uživatela chcete vytvoriť? */}\n            {isAdmin && <CustomFormSwitch\n                items={switchFormButtons}\n                title=\"Akého uživatela chcete vytvoriť?\"\n                activeIndex={formToShow}\n                handleClick={toggleUserForm}\n            />}\n\n            {\n                formToShow === 0 ? (\n                    <div>\n                        <div>\n                            <h2>Informácie</h2>\n                            <InputRow\n                                label=\"\"\n                                example='napr: John'\n                            >\n                                <CustomInput\n                                    label=\"Meno*\"\n                                    type='text'\n                                    name='fName'\n                                    value={user.fName}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: Doe'\n                            >\n                                <CustomInput\n                                    label=\"Priezvisko*\"\n                                    type='text'\n                                    name='lName'\n                                    value={user.lName}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: priklad@email.com'\n                            >\n                                <CustomInput\n                                    label=\"E-mail*\"\n                                    type='email'\n                                    name='email'\n                                    value={user.email}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: 091234567'\n                            >\n                                <CustomInput\n                                    label=\"Telefónne číslo\"\n                                    type='text'\n                                    name='phone'\n                                    value={user.phone}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                        </div>\n\n                        <Container>\n                            <h2>Fakturačné údaje</h2>\n                            <GridRow>\n                                <ZeroMargin>\n                                    <CustomInput\n                                        label=\"Ulica a čislo domu\"\n                                        type='text'\n                                        name='address'\n                                        value={user.address}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </ZeroMargin>\n                                <ZeroMargin>\n                                    <CustomInput\n                                        label=\"PSČ\"\n                                        type='text'\n                                        name='psc'\n                                        value={user.psc}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </ZeroMargin>\n                            </GridRow>\n                            <GridRow>\n                                <div>\n                                    <CustomInput\n                                        label=\"Mesto\"\n                                        type='text'\n                                        name='city'\n                                        value={user.city}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Krajina\"\n                                        type='text'\n                                        name='country'\n                                        value={user.country}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </div>\n                            </GridRow>\n                        </Container>\n\n                        <Container>\n                            <h2>Parametre</h2>\n\n                            <ParametersTable\n                                parameters={user.lenses}\n                                handleChange={handleParameterChange}\n                            />\n                        </Container>\n                    </div>\n                ) : (\n                        <div>\n                            <div>\n                                <h2>Admin panel</h2>\n                                <InputRow\n                                    label=\"Predajňa na ktorej uživatel pracuje\"\n                                    example=''\n                                >\n\n                                    <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Nezadané</option>\n\n                                        {\n                                            retailNames.map((name, idx) => {\n                                                if (idx === 4) return\n                                                return (\n                                                    <option key={idx} value={idx + 1}>{name}</option>\n\n                                                )\n                                            })\n                                        }\n                                    </CustomSelect>\n\n                                </InputRow>\n                                <InputRow\n                                    label=\"Výška administrativných práv\"\n                                    example=\"\"\n                                >\n                                    <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Zákaznik</option>\n                                        <option value={1}>Predavač</option>\n                                        <option value={2}>Vedúci</option>\n                                    </CustomSelect>\n\n                                </InputRow>\n                            </div>\n                            <div>\n                                <h2>Informácie</h2>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: John'\n                                >\n                                    <CustomInput\n                                        label=\"Meno*\"\n                                        type='text'\n                                        name='fName'\n                                        value={user.fName}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: Doe'\n                                >\n                                    <CustomInput\n                                        label=\"Priezvisko*\"\n                                        type='text'\n                                        name='lName'\n                                        value={user.lName}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: priklad@email.com'\n                                >\n                                    <CustomInput\n                                        label=\"E-mail*\"\n                                        type='email'\n                                        name='email'\n                                        value={user.email}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"Heslo použivatela, aspoň 1 velké pismeno, 1 malé pismeno a 1 číslo*\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Heslo*\"\n                                        type='password'\n                                        name='password'\n                                        value={user.password}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Potvrď heslo*\"\n                                        type='password'\n                                        name='confirmPassword'\n                                        value={user.confirmPassword}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n\n\n                            </div>\n                        </div>\n                    )\n            }\n        </div>\n    )\n}\n\nexport default NewUserForm\n","import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nimport { paddingStyles } from '../../global.styles'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n`\n\nexport const DeleteProfileButton = styled(CustomButton)`\n    background-color: #DD4C4C;\n    font-size: 1.4rem;\n`\n\n\nexport const SaveButton = styled(CustomButton)`\n    margin-left: 2rem;\n    font-size: 1.4rem;\n`\n","import React, { useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { UserContext } from '../../context/user/user.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport UserForm from '../../components/user-form/user-form.component'\nimport NewUserForm from '../../components/new-user-form/new-user-form.component'\n\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    DeleteProfileButton,\n    // Name,\n    SaveButton,\n} from './customer-profile.styles'\n\nconst CustomerProfile = () => {\n    const { id } = useParams()\n    const { isAdmin } = useContext(AuthContext)\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal,\n    } = useContext(LoadingModalContext)\n\n    const {\n        isUpdating,\n        user,\n        getUser,\n        handleChange,\n        handleParameterChange,\n        updateUser,\n        resetUser,\n        formToShow,\n        switchFormButtons,\n        toggleUserForm,\n        createUser,\n    } = useContext(UserContext)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (id === 'novy-zakaznik') {\n            console.log(\"Create new user\")\n            createUser(user)\n        } else {\n            console.log(\"Update existing user\")\n            updateUser(user)\n        }\n    }\n\n    useEffect(() => {\n        if (id !== 'novy-zakaznik') {\n            getUser(id)\n        }\n    }, [id])\n\n    useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            resetUser()\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <form onSubmit={handleSubmit}>\n                <Header>\n                    <h1>Profil</h1>\n                    <div>\n                        {isUpdating && <DeleteProfileButton>Vymazať</DeleteProfileButton>}\n                        <SaveButton type=\"submit\">\n                            {isUpdating ? \"Uložiť zmeny\" : \"Vytvoriť\"}\n                        </SaveButton>\n                    </div>\n                </Header>\n\n                <ScrollContainer>\n                    {\n                        isUpdating ? (\n                            <UserForm\n                                isAdmin={isAdmin}\n                                isUpdating={isUpdating}\n                                user={user}\n                                handleChange={handleChange}\n                                handleParameterChange={handleParameterChange}\n\n                            />\n                        ) : (\n                                <NewUserForm\n                                    isAdmin={isAdmin}\n                                    handleParameterChange={handleParameterChange}\n                                    formToShow={formToShow}\n                                    switchFormButtons={switchFormButtons}\n                                    toggleUserForm={toggleUserForm}\n                                    user={user}\n                                    handleChange={handleChange}\n                                />\n                            )\n                    }\n\n\n                </ScrollContainer>\n\n            </form>\n        </section>\n    )\n}\n\nexport default CustomerProfile\n","export const initProductObj = {\n    // Product id\n    // Product name: Ultra glasses\n    name: \"\",\n    // Product description: Awesome product\n    description: \"\",\n    // price in cents: 1050 => 10.50\n    price: '0',\n    // product type: glesses, lenses, ...\n    type: 1,\n    // brand name: Adidas\n    brand: \"\",\n    //kolko sa ich zatial predalo\n    soldAmount: 0,\n    //kolko je kusov na ktorej prevádzke [arr] \n    available: [0],\n    //ean kod = unikatny kod ktory ma kazdy produkt\n    eanCode: \"\",\n    //farebny kod, ktory spolu s ean kodom tvori \"identitu\" produktu. Moze existovat viacero\n    //produktov s rovnakym ean kodom ale rozlicnym color kodom. Je to takto urobené kvôli skladovému\n    //systému napr. mam na sklade iny pocet zltych ramov isteho druhu ako ciernych\n    colorCode: \"\",\n    //meno farby\n    colorName: \"\",\n    //path k obrazku na serveri (toto bude mozno array este sa uvidi)\n    imagePath: \"\",\n    image: null,\n    eshop: true,\n\n    specs: {\n        frameColor: \"\",\n        frameMaterial: \"\",\n        frameStyle: \"\",\n        lensColor: \"\",\n        sex: \"M\",\n        size: [0, 0, 0],\n    }\n}\n\nexport const initLensesObj = {\n    // id [5fd4cae9f9432022689dd223]\n    id: \"\",\n    // Lense name\n    name: \"\",\n    // Paradne sosovky\n    description: \"\",\n    //vsetky skla su dostupne len pre isty interval dioptrií a cylindrov, ak si zvolím ze mam dioptrie\n    //mimo tohto intervalu tak si tieto skla k mojim okuliarom vybrat nemozem\n    dioptersRange: [\"0\", \"0\"],\n    cylinderRange: [\"0\", \"0\"],\n    //cena v centoch\n    price: \"0\",\n    brand: \"\",\n    imagePath: ''\n}\n\nexport const retailNames = [\n    \"Obchodná 57, Bratislava\",\n    \"Miletičova 38, Bratislava\",\n    \"Vajnory, Bratislava\",\n    \"Senica, OC Branč\",\n    \"Trnava, City Aréna\"\n]\n\n// Category variables\nexport const productCategories = [\n    {\n        name: \"Dioptrické\",\n        value: 1\n    },\n    {\n        name: \"Slnečné\",\n        value: 2\n    },\n    {\n        name: \"Športové\",\n        value: 3\n    },\n    {\n        name: \"Šošovky\",\n        value: 4\n    },\n    {\n        name: \"Doplnky\",\n        value: 5\n    },\n]\n\n\n\nexport const resetProductObj = () => {\n    return initProductObj\n}\n\nexport const resetLensesObj = () => {\n    return initLensesObj\n}\n\nexport const brands = [\n    \"Adidas\",\n    \"Armani Exchange\",\n    \"Arnette\",\n    \"Blackfin\",\n    \"Blumarine\",\n    \"Burberry\",\n    \"Bvlgari\",\n    \"Calvin Klein\",\n    \"Carolina Herrera\",\n    \"Carrera\",\n    \"David Beckham\",\n    \"Dior\",\n    \"Dolce & Gabbana\",\n    \"Elle\",\n    \"Emporio Armani\",\n    \"Esprit\",\n    \"Etnia Barcelona\",\n    \"Fendi\",\n    \"Fossil\",\n    \"Furla\",\n    \"Giorgio Armani\",\n    \"Givenchy\",\n    \"Gucci\",\n    \"Guess\",\n    \"H.I.S\",\n    \"Hawkers\",\n    \"Hugo Boss\",\n    \"Jaguar\",\n    \"Jimmy Choo\",\n    \"Lacoste\",\n    \"Liu Jo\",\n    \"Marc Jacobs\",\n    \"Max Mara\",\n    \"Max&Co\",\n    \"Meller\",\n    \"Mexx\",\n    \"Michael Kors\",\n    \"Moschino\",\n    \"Oakley\",\n    \"Persol\",\n    \"Polaroid\",\n    \"Police\",\n    \"Polo Ralph Lauren\",\n    \"Prada\",\n    \"Prada Linea Rossa\",\n    \"Ralph\",\n    \"Ralph Lauren\",\n    \"Ray-Ban\",\n    \"Salvatore Ferragamo\",\n    \"Smith\",\n    \"Strellson\",\n    \"Tiffany&Co.\",\n    \"Tom Ford\",\n    \"Tommy Hilfiger\",\n    \"Versace\",\n    \"Vogue\"\n]\n\nexport const formatPrice = price => {\n    let value = 0\n    if (price.includes(',')) {\n        if (price.split(',')[1].length === 1) {\n            value = price.split(',')[0] + price.split(',')[1] + \"0\"\n            return Number(value)\n        } else {\n            value = price.split(',')[0] + price.split(',')[1]\n            return Number(value)\n        }\n    } else {\n        return Number(price * 100)\n    }\n}"],"sourceRoot":""}
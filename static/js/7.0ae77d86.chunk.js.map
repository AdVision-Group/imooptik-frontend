{"version":3,"sources":["sections/blog-posts/blog-posts.styles.jsx","sections/blog-posts/blog-posts.section.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","components/section-header/section-header.styles.jsx","components/section-header/section-header.component.jsx","components/section-navbar/section-navbar.styles.jsx","components/section-navbar/section-navbar.component.jsx"],"names":["PostContainer","styled","div","PostImage","PostContent","Options","UpdateButton","CustomButton","DeleteButton","BlogPosts","useContext","LoadingModalContext","closeModal","isLoading","message","showModal","BlogContext","getPosts","posts","postsCount","handlePostDelete","push","useHistory","useState","searchQuery","setSearchQuery","items","id","name","activeIndex","setActiveIndex","useEffect","loading","title","close","handleChange","e","target","value","handleAddButton","count","length","map","post","image","src","process","imagePath","alt","description","onClick","_id","Container","paddingStyles","ScrollContainer","children","HeaderContainer","Left","Right","SearchButton","AddButton","SectionHeader","type","label","NavbarContainer","NavButton","active","SectionNavbar","item"],"mappings":"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","file":"static/js/7.0ae77d86.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nexport const PostContainer = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 25rem 1fr 25rem;\n\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    padding: 2rem;\n\n    &:not(:last-child) {\n        margin-bottom: 2rem;\n    }\n\n        @media all and (max-width: 800px) {\n        grid-template-columns : 20rem 1fr;\n        grid-template-rows: 1fr 1fr;\n\n        @media all and (max-width: 500px) {\n            grid-template-columns : 1fr;\n            grid-template-rows: unset;\n        }\n    }\n`\n\nexport const PostImage = styled.div`\n    /* width: 100%; */\n    /* height: 100%; */\n    margin-right: 2rem;\n\n    img {\n        width: 100%;\n        height: 100%;\n        object-position: top;\n        object-fit: contain;\n    }\n\n        @media all and (max-width: 800px) {\n        align-self: start;\n        grid-row-start: 1;\n        grid-row-end: 3;   \n\n        @media all and (max-width: 500px) {\n            justify-self: center;\n            margin-bottom: 2rem;\n        }\n\n    }\n`\n\nexport const PostContent = styled.div`\n    h2 {\n        font-size: 1.6rem;\n    }\n\n    p {\n        font-size: 1.4rem;\n        color: gray;\n    }\n\n        @media all and (max-width: 500px) {\n            margin-bottom: 2rem;\n        }\n`\n\nexport const Options = styled.div`\n    align-self: end;\n    justify-self: end;\n`\n\nexport const UpdateButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    margin-right: 1rem;\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    background-color: rgb(235, 172, 1);\n`","import React, { useState, useEffect, useContext } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    PostContainer,\n    PostImage,\n    PostContent,\n    Options,\n    UpdateButton,\n    DeleteButton\n} from './blog-posts.styles'\n\nconst BlogPosts = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { getPosts, posts, postsCount, handlePostDelete } = useContext(BlogContext)\n    const { push } = useHistory()\n    const [searchQuery, setSearchQuery] = useState('')\n    const items = [\n        {\n            id: 0,\n            name: \"Dátum pridania\"\n        },\n        {\n            id: 1,\n            name: \"Abecedne\"\n        },\n    ]\n\n    const [activeIndex, setActiveIndex] = useState(0)\n\n    useEffect(() => {\n        if (!posts) {\n            getPosts(items[activeIndex])\n        }\n    }, [posts])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('blog/novy-prispevok')}\n                count={postsCount}\n                title=\"Blog\"\n            />\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                {\n                    posts && posts.length ? posts.map(post => (\n                        <PostContainer key={post._id}>\n                            <PostImage>\n                                {post.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${post.image.imagePath}`} alt={post.image.alt} />}\n                            </PostImage>\n                            <PostContent>\n                                <h2>{post.name}</h2>\n                                <p>{post.description}</p>\n                            </PostContent>\n                            <Options>\n                                <UpdateButton onClick={() => push(`blog/${post._id}`)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={() => handlePostDelete(post._id)}>Vymazať</DeleteButton>\n                            </Options>\n                        </PostContainer>\n                    )) : (\n                            <div>\n                                Žiadne príspevky\n                            </div>\n                        )\n                }\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BlogPosts\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`","import React from 'react'\nimport { Container } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            {children}\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { paddingStyles } from '../../global.styles'\n\nexport const HeaderContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 3rem;\n    ${paddingStyles};    \n\n    @media all and (max-width: 600px) {\n        flex-wrap: wrap;\n    }\n`\n\nexport const Left = styled.div`\n    margin-top: 2rem;\n\n    display: flex;\n    align-items: center;\n\n`\n\nexport const Right = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport const Notification = styled.div`\n    background-color: #DD4C4C;\n    margin-left: 1.5rem;\n    color: #fff;\n    padding: .5rem 1rem;\n    border-radius: 1.5rem;\n    font-size: 1.4rem;\n`\n\n\nexport const SearchButton = styled(CustomButton)`\n    margin-top: 2rem;\n\n    margin-left: 2rem;\n`\n\nexport const AddButton = styled(CustomButton)`\n    margin-top: 2rem;\n\n    margin-left: 1rem;\n\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    HeaderContainer,\n    Left,\n    Right,\n    SearchButton,\n    // Notification,\n    AddButton,\n} from './section-header.styles'\n\nconst SectionHeader = ({ searchQuery, handleChange, title, count = 999, handleAddButton = () => { } }) => {\n    return (\n        <HeaderContainer>\n            <Left>\n                <h1>{title}</h1>\n                {/* <Notification>{count}</Notification> */}\n            </Left>\n            <Right>\n                <div>\n                    <CustomInput\n                        type='search'\n                        name='searchbox'\n                        value={searchQuery}\n                        handleChange={handleChange}\n                        label='Vyhľadať'\n                    />\n                </div>\n                <SearchButton>Vyhľadať</SearchButton>\n                <AddButton onClick={handleAddButton}>Pridať</AddButton>\n            </Right>\n        </HeaderContainer>\n    )\n}\n\nexport default SectionHeader\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { paddingStyles } from '../../global.styles'\n\n\nexport const NavbarContainer = styled.div`\n    margin-bottom: 3rem;\n    ${paddingStyles}\n\n    ul {\n        display: flex;\n        list-style: none;\n\n        li {\n            margin-right: 1.5rem;\n        }\n    }\n`\n\nexport const NavButton = styled(CustomButton)`\n    transition: all 0.3s ease-out;\n    background-color: ${({ active }) => active ? '#000' : '#fff'};\n    color: ${({ active }) => active ? '#fff' : '#000'};\n    font-weight: ${({ active }) => active ? 400 : 700};\n    padding: ${({ active }) => active ? \".5rem 2.5rem\" : \".5rem 1rem .5rem 0\"};\n`","import React from 'react'\n\nimport {\n    NavbarContainer,\n    NavButton\n} from './section-navbar.styles'\n\nconst SectionNavbar = ({ items, activeIndex, setActiveIndex }) => {\n\n    return (\n        <NavbarContainer>\n            <ul>\n                {\n                    items.map(item => (\n                        <li key={item.id}>\n                            <NavButton active={item.id === activeIndex} onClick={() => setActiveIndex(item.id)} >{item.name}</NavButton>\n                        </li>\n                    ))\n                }\n\n            </ul>\n        </NavbarContainer >\n    )\n}\n\nexport default SectionNavbar\n"],"sourceRoot":""}
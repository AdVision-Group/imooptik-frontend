{"version":3,"sources":["context/booking/booking.queries.jsx","context/booking/booking.context.jsx","components/booking-calendar-overview/booking-calendar-overview.styles.jsx","components/booking-calendar-overview/booking-calendar-overview.component.jsx","components/calendar/calendar.styles.jsx","components/calendar/calendar.component.jsx","sections/booking/booking.styles.jsx","sections/booking/booking.section.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","components/section-header/section-header.styles.jsx","components/section-header/section-header.component.jsx"],"names":["fetchSingleCalendar","id","fetch","process","fetchUserBookings","token","myHeaders","Headers","append","requestOptions","method","headers","redirect","BookingContext","createContext","calendar","calendars","getCalendars","getCalendar","bookings","getBookings","userBookings","getUserBookings","activeCalendar","resetBooking","selectedDate","name","value","setSelectedDate","BookingProvider","children","useContext","AuthContext","LoadingModalContext","getMessage","setIsLoading","setShowModal","closeModal","useState","setActiveCalendar","setCalendars","setCalendar","a","response","json","data","error","message","console","log","idx","setBookings","setUserBookings","Provider","ContainerOverview","styled","div","Options","ShowButton","CustomButton","isActive","UpdateButton","BookingCalendarOverview","handleClick","onClick","Container","HeaderBlock","Dayblock","DayRowContainer","BookingContainer","p","active","DayNumber","Calendar","activeIndex","setActiveIndex","date","Date","year","getFullYear","month","getMonth","firstDayOfCurrentMonth","getDay","daysInMonth","getDate","arr","j","bookedDays","Object","keys","booked","i","push","day","obj","forEach","Number","split","bookDate","length","map","d","toLocaleDateString","weekday","Title","h2","GridRow","CalendarGridContainer","AppoimentOverview","Time","Line","AppoimentCol","NoteContainer","Name","Desc","span","ConfirmButton","DeclineButton","AppoimentContainer","BookingSection","isLoading","showModal","bookingData","searchQuery","setSearchQuery","useEffect","loading","title","close","handleChange","e","target","_id","Fragment","charAt","toUpperCase","slice","filteredUserBookings","filter","booking","dueDate","dueTime","time","user","bookingType","find","note","shrinkLabel","css","InputGroup","CustomInput","label","otherProps","className","onChange","htmlFor","paddingStyles","ScrollContainer","HeaderContainer","Left","Right","AddButton","SectionHeader","count","handleAddButton","type"],"mappings":"kOAMaA,EAAsB,SAACC,GAChC,OAAOC,MAAM,GAAD,OAAIC,6BAAJ,kCAAoEF,KAUvEG,EAAoB,SAACC,GAC9B,IAAMC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAcH,GAE/B,IAAMI,EAAiB,CACnBC,OAAQ,MACRC,QAASL,EACTM,SAAU,UAGd,OAAOV,MAAM,GAAD,OAAIC,6BAAJ,mCAA6EM,ICfhFI,EAAiBC,wBAAc,CACxCC,SAAU,KACVC,UAAW,KACXC,aAAc,aACdC,YAAa,aACbC,SAAU,KACVC,YAAa,aACbC,aAAc,KACdC,gBAAiB,aAGjBC,eAAgB,EAChBC,aAAc,aACdC,aAAc,CACVC,KAAM,GACNC,MAAO,IAEXC,gBAAiB,eA2KNC,UAxKS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACfzB,EAAU0B,qBAAWC,KAArB3B,MAD8B,EAOlC0B,qBAAWE,KAJXC,EAHkC,EAGlCA,WACAC,EAJkC,EAIlCA,aACAC,EALkC,EAKlCA,aACAC,EANkC,EAMlCA,WANkC,EAYMC,mBAAS,GAZf,mBAY/Bf,EAZ+B,KAYfgB,EAZe,OAaJD,mBAAS,MAbL,mBAa/BtB,EAb+B,KAapBwB,EAboB,OAcNF,mBAAS,MAdH,mBAc/BvB,EAd+B,KAcrB0B,EAdqB,OAeEH,mBAAS,CAC7CZ,KAAM,GACNC,MAAO,KAjB2B,mBAe/BF,EAf+B,KAejBG,EAfiB,KAqBhCX,EAAY,uCAAG,8BAAAyB,EAAA,6DACjBP,GAAa,GACbC,GAAa,GAFI,kBDlDdlC,MAAM,GAAD,OAAIC,6BAAJ,2BCkDS,cAKPwC,EALO,gBAMMA,EAASC,OANf,YAMPC,EANO,QAQJC,MARI,wBASTZ,EAAWW,EAAKE,SAChBZ,GAAa,GAVJ,2BAcTU,EAAK7B,YACLwB,EAAaK,EAAK7B,WAClBmB,GAAa,GACbE,KAGJH,EAAWW,EAAKE,SAChBZ,GAAa,GArBA,kDAuBba,QAAQC,IAAR,MACAf,EAAW,qBACXC,GAAa,GAzBA,0DAAH,qDA8BZjB,EAAW,uCAAG,WAAOjB,EAAIiD,GAAX,iBAAAR,EAAA,6DAChBP,GAAa,GACbC,GAAa,GACbR,EAAgB,CACZF,KAAM,GACNC,MAAO,KALK,kBASW3B,EAAoBC,GAT/B,cASN0C,EATM,gBAUOA,EAASC,OAVhB,UAUNC,EAVM,OAYZG,QAAQC,IAAIJ,IACRA,EAAK9B,SAbG,wBAcR0B,EAAYI,EAAK9B,UACjBwB,EAAkBW,GAClBb,IAhBQ,2BAoBZH,EAAWW,EAAKE,SAChBZ,GAAa,GArBD,kDAwBZa,QAAQC,IAAR,MACAf,EAAW,qBACXC,GAAa,GA1BD,0DAAH,wDAnDqB,EAoFNG,mBAAS,MApFH,mBAoF/BnB,EApF+B,KAoFrBgC,EApFqB,OAqFEb,mBAAS,MArFX,mBAqF/BjB,EArF+B,KAqFjB+B,EArFiB,KAuFhChC,EAAW,uCAAG,8BAAAsB,EAAA,6DAChBP,GAAa,GACbC,GAAa,GAFG,kBD5GblC,MAAM,GAAD,OAAIC,6BAAJ,0BC4GQ,cAKNwC,EALM,gBAMOA,EAASC,OANhB,YAMNC,EANM,QAQHC,MARG,wBASRZ,EAAWW,EAAKE,SAChBZ,GAAa,GAVL,2BAcRU,EAAK1B,WACLgC,EAAYN,EAAK1B,UACjBgB,GAAa,GACbE,KAGJH,EAAWW,EAAKE,SAChBZ,GAAa,GArBD,kDAuBZa,QAAQC,IAAR,MACAf,EAAW,qBACXC,GAAa,GAzBD,0DAAH,qDA6BXb,EAAe,uCAAG,8BAAAoB,EAAA,6DACpBP,GAAa,GACbC,GAAa,GAFO,kBAKOhC,EAAkBC,GALzB,cAKVsC,EALU,gBAMGA,EAASC,OANZ,YAMVC,EANU,QAQPxB,aARO,wBASZ+B,EAAgBP,EAAKxB,cACrBgB,IAVY,2BAchBH,EAAWW,EAAKE,SAChBZ,GAAa,GAfG,kDAkBhBa,QAAQC,IAAR,MACAf,EAAW,qBACXC,GAAa,GApBG,0DAAH,qDA4BrB,OACI,cAACtB,EAAewC,SAAhB,CACI1B,MAAO,CACHZ,WACAC,YACAC,eACAC,cACAC,WACAC,cACAC,eACAC,kBAGAC,iBACAC,aAlBS,WACjBe,EAAkB,IAkBVd,eACAG,mBAfR,SAkBKE,M,k6BChMN,IAAMwB,EAAoBC,IAAOC,IAAV,KAkBjBC,EAAUF,IAAOC,IAAV,KAIPE,EAAaH,YAAOI,IAAPJ,CAAH,KAIC,qBAAGK,SAA0B,mBAAqB,UAE7D,qBAAGA,SAA0B,OAAS,UAEtCC,EAAeN,YAAOI,IAAPJ,CAAH,KCTVO,EAfiB,SAAC,GAAyC,IAAvC/C,EAAsC,EAAtCA,SAAUgD,EAA4B,EAA5BA,YAAaH,EAAe,EAAfA,SACtD,OACI,eAACN,EAAD,WACI,6BAAKvC,EAASW,OACd,iEACA,iDACA,qDACA,eAAC+B,EAAD,WACI,cAACC,EAAD,CAAYM,QAASD,EAAaH,SAAUA,EAA5C,2BACA,cAACC,EAAD,kC,8tCChBT,IAAMI,EAAYV,IAAOC,IAAV,KAQTU,EAAcX,IAAOC,IAAV,KAUXW,EAAWZ,IAAOC,IAAV,KAiBRY,EAAkBb,IAAOC,IAAV,KAMfa,EAAmBd,IAAOe,EAAV,KACL,qBAAGC,OAAsB,oBAAsB,UAC1D,qBAAGA,OAAsB,OAAS,UAMlCC,EAAYjB,IAAOe,EAAV,KC+DPG,EAvGE,SAAC,GAAmC,IAAjC1D,EAAgC,EAAhCA,SAAUa,EAAsB,EAAtBA,gBAAsB,EAyBVU,mBAAS,MAzBC,mBAyBzCoC,EAzByC,KAyB5BC,EAzB4B,KA2B1CC,EAAO,IAAIC,KACXC,EAAOF,EAAKG,cACZC,EAAQJ,EAAKK,WACfC,EAAyB,IAAIL,KAAKC,EAAME,GAAOG,SAC7CC,EAAc,IAAIP,KAAKC,EAAME,EAAQ,EAAG,GAAGK,UAElB,IAA3BH,IACAA,EAAyB,GAS7B,IANA,IAAII,EAAM,GACNC,EAAI,EAEFC,EAAaC,OAAOC,KAAK3E,EAAS4E,QAG/BC,EAAI,EAAGA,EAAI,GAAIA,IACpB,GAAIA,EAAIV,EAAyB,EAC7BI,EAAIO,KAAK,CACLC,IAAK,SAEN,GAAIF,EAAIR,EAAcF,EAAyB,EAAG,CACrD,IAAIa,EAAM,GAEVP,EAAWQ,SAAQ,SAACF,EAAK5C,GACjBqC,IAAMU,OAAOH,EAAII,MAAM,KAAK,MAC5BH,EAAM,CACFI,SAAUL,EACVH,OAAQ5E,EAAS4E,OAAOG,GAAKM,YAMzCd,EAAIO,KAAJ,2BACOE,GADP,IAEID,IAAKP,OAejB,OACI,eAACtB,EAAD,WA9EW,CACX,CACIvC,KAAM,YAEV,CACIA,KAAM,UAEV,CACIA,KAAM,UAEV,CACIA,KAAM,gBAEV,CACIA,KAAM,UAEV,CACIA,KAAM,UAEV,CACIA,KAAM,gBA4DK2E,KAAI,WAAWnD,GAAX,IAAGxB,EAAH,EAAGA,KAAH,OACP,cAACwC,EAAD,UACKxC,GADawB,MAMtBoC,EAAIe,KAAI,WAA4BnD,GAA5B,IAAG4C,EAAH,EAAGA,IAAKH,EAAR,EAAQA,OAAQQ,EAAhB,EAAgBA,SAAhB,OACJ,cAAChC,EAAD,CAAoBH,QAAS2B,EAAS,kBArBlC,SAACG,EAAK5C,EAAKiD,GAC3B,IAAMG,EAAI,IAAIzB,KAAKC,EAAME,EAAOc,GAEhCnB,EAAezB,GACftB,EAAgB,CACZF,KAAM4E,EAAEC,mBAAmB,QAHf,CAAEC,QAAS,OAAQxB,MAAO,OAAQc,IAAK,YAInDnE,MAAOwE,IAe6CpC,CAAY+B,EAAK5C,EAAKiD,IAAY,KAA9E,WACe,IAARL,IACC,eAAC1B,EAAD,WACKuB,GAAU,cAACtB,EAAD,CAAkBE,OAAQrB,IAAQwB,EAAlC,SAAgDiB,IAC3D,cAACnB,EAAD,UAAYsB,QAJT5C,U,4zECjG5B,IAAMuD,EAAQlD,IAAOmD,GAAV,KAILC,EAAUpD,IAAOC,IAAV,KAQPoD,GAAwBrD,IAAOC,IAAV,KAOrBqD,GAAoBtD,IAAOC,IAAV,KAOjBsD,GAAOvD,IAAOe,EAAV,KAKJyC,GAAOxD,IAAOC,IAAV,KAOJwD,GAAezD,IAAOC,IAAV,KAQZyD,GAAgB1D,IAAOC,IAAV,KASb0D,GAAO3D,IAAOe,EAAV,KAOJ6C,GAAO5D,IAAO6D,KAAV,KAMJ3D,GAAUF,IAAOC,IAAV,KAKP6D,GAAgB9D,YAAOI,IAAPJ,CAAH,KAWb+D,GAAgB/D,YAAOI,IAAPJ,CAAH,KASbgE,GAAqBhE,IAAOC,IAAV,KC4DhBgE,UA/HQ,WAAO,IAAD,EAMrBzF,qBAAWE,KAJXI,EAFqB,EAErBA,WACAoF,EAHqB,EAGrBA,UACA1E,EAJqB,EAIrBA,QACA2E,EALqB,EAKrBA,UAGEC,EAAc5F,qBAAWlB,kBAE/BmC,QAAQC,IAAI0E,GAVa,IAarB5G,EAaA4G,EAbA5G,SACAC,EAYA2G,EAZA3G,UACAG,EAWAwG,EAXAxG,SAEAF,EASA0G,EATA1G,aACAC,EAQAyG,EARAzG,YACAG,EAOAsG,EAPAtG,aACAC,EAMAqG,EANArG,gBACAF,EAKAuG,EALAvG,YAEAG,EAGAoG,EAHApG,eACAE,EAEAkG,EAFAlG,aACAG,EACA+F,EADA/F,gBAzBqB,EA4BaU,mBAAS,IA5BtB,mBA4BlBsF,EA5BkB,KA4BLC,EA5BK,KAoDzB,OAtBAC,qBAAU,WACD9G,IACDC,IACAK,OAEL,CAACN,IAEJ8G,qBAAU,WACD3G,GACDC,MAEL,CAACJ,IAWCA,GAELgC,QAAQC,IAAI5B,GAGR,oCACKqG,GAAa,cAAC,IAAD,CAAOK,QAASN,EAAWO,MAAOjF,EAASkF,MAAO5F,IAChE,cAAC,IAAD,CACIuF,YAAaA,EACbM,aAAc,SAAAC,GAAC,OAAIN,EAAeM,EAAEC,OAAOzG,QAC3CqG,MAAM,2BAGV,eAAC,IAAD,WACI,cAACvB,EAAD,2BACA,cAACE,EAAD,UACK3F,EAAUqF,KAAI,SAACtF,EAAUmC,GAAX,OACX,cAAC,EAAD,CAAmCnC,SAAUA,EAAUgD,YAAa,kBAAM7C,EAAYH,EAASsH,IAAKnF,EAAM,IAAIU,SAAUrC,IAAmB2B,EAAM,GAAnHA,QAIrCnC,GACG,eAAC,IAAMuH,SAAP,WACI,cAAC7B,EAAD,0BACA,eAACG,GAAD,WACI,cAAC,EAAD,CAAU7F,SAAUA,EAAUa,gBAAiBA,IAE9Cb,GAAYU,EAAaC,MAAQ,eAACmF,GAAD,WAC9B,cAACJ,EAAD,UAAQhF,EAAaC,KAAK6G,OAAO,GAAGC,cAAgB/G,EAAaC,KAAK+G,MAAM,KAGxE1H,EAAS4E,OAAOlE,EAAaE,OAAO0E,KAAI,SAACzB,EAAM1B,GAC3C,IAAMwF,EAAuBrH,EAAasH,QAAO,SAAAC,GAAO,OAAIA,EAAQC,UAAYpH,EAAaE,OAASiH,EAAQE,QAAQ5C,MAAM,KAAK,KAAOtB,KAClImE,EAAOnE,EAAKsB,MAAM,KAAK,GAAK,IAAMtB,EAAKsB,MAAM,KAAK,GAExD,OACI,cAAC,IAAMoC,SAAP,UACI,eAACf,GAAD,WACI,cAACT,GAAD,UAAOiC,IACP,cAAChC,GAAD,IAEI2B,EAAqBrC,KAAI,SAAA2C,GACrB,IAAMC,EAAc9H,EAAS+H,MAAK,SAAAN,GAAO,OAAIA,EAAQP,MAAQW,EAAKJ,WAElE,OACI,eAAC5B,GAAD,WACI,gCACI,cAACE,GAAD,UAAO8B,EAAKtH,OACZ,cAACyF,GAAD,UAAO8B,EAAYvH,UAEvB,eAAC,GAAD,WACI,cAAC2F,GAAD,0BACA,cAACC,GAAD,gCAEJ,cAACL,GAAD,UACI,4BAAI+B,EAAKG,iBAlBRjG,wBArC9C,cAAC,IAAD,CAAO6E,QAASN,EAAWO,MAAOjF,EAASkF,MAAO5F,M,03CC/E7E,IAAM+G,EAAcC,YAAH,KAMJC,EAAa/F,IAAOC,IAAV,IAuBT4F,EAmBAA,GC3BCG,IAnBK,SAAC,GAAkD,IAAhDrB,EAA+C,EAA/CA,aAAcsB,EAAiC,EAAjCA,MAAO9H,EAA0B,EAA1BA,KAAS+H,EAAiB,+CAClE,OACI,eAACH,EAAD,WACI,mCACII,UAAU,aACVhI,KAAMA,EACNiI,SAAUzB,GACNuB,IAEPD,EACG,uBAAOI,QAASlI,EAAMgI,UAAS,UAAKD,EAAW9H,MAAMyE,OAAS,SAAW,GAA1C,qBAA/B,SACKoD,IAEL,U,gbCdT,IAAMvF,EAAYV,IAAOC,IAAV,IAOhBqG,KCCSC,IARS,SAAC,GAAkB,IAAhBhI,EAAe,EAAfA,SACvB,OACI,cAACmC,EAAD,UACKnC,M,oiCCFN,IAAMiI,EAAkBxG,IAAOC,IAAV,IAItBqG,KAOOG,EAAOzG,IAAOC,IAAV,KAQJyG,EAAQ1G,IAAOC,IAAV,KAqBL0G,GAhBe3G,IAAOC,IAAV,KAUGD,YAAOI,IAAPJ,CAAH,KAMAA,YAAOI,IAAPJ,CAAH,MCPP4G,IAxBO,SAAC,GAAoF,IAAlFvC,EAAiF,EAAjFA,YAAaM,EAAoE,EAApEA,aAAcF,EAAsD,EAAtDA,MAAsD,KAA/CoC,MAA+C,EAAlCC,wBAAkC,MAAhB,aAAgB,EACtG,OACI,eAACN,EAAD,WACI,cAACC,EAAD,UACI,6BAAKhC,MAGT,eAACiC,EAAD,WACI,8BACI,cAAC,IAAD,CACIK,KAAK,SACL5I,KAAK,YACLC,MAAOiG,EACPM,aAAcA,EACdsB,MAAM,yBAId,cAACU,EAAD,CAAWlG,QAASqG,EAApB","file":"static/js/14.64d236bf.chunk.js","sourcesContent":["\n\nexport const fetchCalendars = () => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/booking/calendars`)\n}\n\nexport const fetchSingleCalendar = (id) => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/booking/calendars/${id}`)\n}\n\nexport const fetchBookings = () => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/booking/bookings`)\n}\nexport const fetchBookingRows = () => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/booking/bookingRows`)\n}\n\nexport const fetchUserBookings = (token) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/booking/userBookings`, requestOptions)\n}","import React, { createContext, useState, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\n\nimport {\n    fetchCalendars,\n    fetchSingleCalendar,\n    fetchBookings,\n    // fetchBookingRows,\n    fetchUserBookings\n} from './booking.queries'\n\nexport const BookingContext = createContext({\n    calendar: null,\n    calendars: null,\n    getCalendars: () => { },\n    getCalendar: () => { },\n    bookings: null,\n    getBookings: () => { },\n    userBookings: null,\n    getUserBookings: () => { },\n    // bookingRows: null,\n    // getBookingRows: () => { },\n    activeCalendar: 0,\n    resetBooking: () => { },\n    selectedDate: {\n        name: \"\",\n        value: ''\n    },\n    setSelectedDate: () => { }\n})\n\nconst BookingProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    // ------------------------\n    // CALENDAR ACTIONS\n    // ------------------------\n    const [activeCalendar, setActiveCalendar] = useState(0)\n    const [calendars, setCalendars] = useState(null)\n    const [calendar, setCalendar] = useState(null)\n    const [selectedDate, setSelectedDate] = useState({\n        name: '',\n        value: ''\n    })\n\n    // Get all calendars\n    const getCalendars = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetchCalendars()\n            const data = await response.json()\n\n            if (data.error) {\n                getMessage(data.message)\n                setIsLoading(false)\n                return\n            }\n\n            if (data.calendars) {\n                setCalendars(data.calendars)\n                setIsLoading(false)\n                closeModal()\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Get single calendar\n    const getCalendar = async (id, idx) => {\n        setIsLoading(true)\n        setShowModal(true)\n        setSelectedDate({\n            name: '',\n            value: ''\n        })\n\n        try {\n            const response = await fetchSingleCalendar(id)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.calendar) {\n                setCalendar(data.calendar)\n                setActiveCalendar(idx)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // ------------------------\n    // BOOKINGS ACTIONS\n    // ------------------------\n    const [bookings, setBookings] = useState(null)\n    const [userBookings, setUserBookings] = useState(null)\n\n    const getBookings = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetchBookings()\n            const data = await response.json()\n\n            if (data.error) {\n                getMessage(data.message)\n                setIsLoading(false)\n                return\n            }\n\n            if (data.bookings) {\n                setBookings(data.bookings)\n                setIsLoading(false)\n                closeModal()\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getUserBookings = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetchUserBookings(token)\n            const data = await response.json()\n\n            if (data.userBookings) {\n                setUserBookings(data.userBookings)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const resetBooking = () => {\n        setActiveCalendar(0)\n    }\n\n    return (\n        <BookingContext.Provider\n            value={{\n                calendar,\n                calendars,\n                getCalendars,\n                getCalendar,\n                bookings,\n                getBookings,\n                userBookings,\n                getUserBookings,\n                // bookingRows,\n                // getBookingRows,\n                activeCalendar,\n                resetBooking,\n                selectedDate,\n                setSelectedDate,\n            }}\n        >\n            {children}\n        </BookingContext.Provider>\n    )\n}\n\nexport default BookingProvider","import styled from \"styled-components\"\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ContainerOverview = styled.div`\n    padding: 2rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n\n    &:not(:last-child) {\n        /* margin-right: 2rem; */\n    }\n\n    h3  { \n        font-size: 1.8rem;\n    }\n\n    p {\n        font-size: 1.4rem;\n        color: gray;\n    }\n`\n\nexport const Options = styled.div`\n    display: flex;\n`\n\nexport const ShowButton = styled(CustomButton)`\n    margin-top: 2rem;\n    font-size: 1.4rem;\n    display: block;\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"#eee\"};\n    font-weight: bolder;\n    color: ${({ isActive }) => isActive ? \"#fff\" : \"#000\"};\n`\nexport const UpdateButton = styled(CustomButton)`\n    margin-top: 2rem;\n    font-size: 1.4rem;\n    display: block;\n    margin-left: 2rem;;\n`\n","import React from 'react'\n\nimport {\n    ContainerOverview,\n    UpdateButton,\n    Options,\n    ShowButton\n} from './booking-calendar-overview.styles'\n\nconst BookingCalendarOverview = ({ calendar, handleClick, isActive }) => {\n    return (\n        <ContainerOverview>\n            <h3>{calendar.name}</h3>\n            <p>Obchodná 59, 84105 Bratislava</p>\n            <p>+421 902 688 952</p>\n            <p>obchodna@imooptik.sk</p>\n            <Options>\n                <ShowButton onClick={handleClick} isActive={isActive}>Zobraziť</ShowButton>\n                <UpdateButton>Upraviť</UpdateButton>\n            </Options>\n        </ContainerOverview>\n    )\n}\n\nexport default BookingCalendarOverview\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: repeat(7, 1fr);\n    border: 1px solid rgba(0,0,0,.1);\n    min-width: 55rem;\n`\n\nexport const HeaderBlock = styled.div`\n    height: 8rem;\n    background-color: #000;\n    color: #fff;\n    display: flex;\n    align-items:center;\n    justify-content:center;\n    font-weight: 700;\n`\n\nexport const Dayblock = styled.div`\n    cursor: pointer;\n    height: 7rem;\n    display: flex;\n    justify-content: flex-end;\n    align-items: flex-end;\n    border: 1px solid rgba(0,0,0,.1);\n    padding: .6rem 1rem;\n\n    transition: all .15s;\n\n    &:hover {\n        background-color: rgba(0,0,0,.1);\n    }\n\n`\n\nexport const DayRowContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n`\n\nexport const BookingContainer = styled.p`\n    background-color: ${({ active }) => active ? \" rgb(235, 172, 1)\" : \"#eee\"};\n    color: ${({ active }) => active ? \"#fff\" : \"#000\"};\n    border-radius: 50%;\n    font-weight: bolder;\n    padding: .2rem .9rem;\n`\n\nexport const DayNumber = styled.p`\n    margin-left: auto\n`","import React, { useState } from 'react'\n\nimport {\n    Container,\n    HeaderBlock,\n    Dayblock,\n    BookingContainer,\n    DayRowContainer,\n    DayNumber\n} from './calendar.styles'\n\nconst Calendar = ({ calendar, setSelectedDate }) => {\n    const blocks = [\n        {\n            name: 'Pondelok'\n        },\n        {\n            name: 'Utorok'\n        },\n        {\n            name: 'Streda'\n        },\n        {\n            name: 'Štvrtok'\n        },\n        {\n            name: 'Piatok'\n        },\n        {\n            name: 'Sobota'\n        },\n        {\n            name: 'Nedeľa'\n        },\n    ]\n\n    const [activeIndex, setActiveIndex] = useState(null)\n\n    const date = new Date()\n    const year = date.getFullYear()\n    const month = date.getMonth()\n    let firstDayOfCurrentMonth = new Date(year, month).getDay()\n    const daysInMonth = new Date(year, month + 1, 0).getDate()\n\n    if (firstDayOfCurrentMonth === 0) {\n        firstDayOfCurrentMonth = 7\n    }\n\n    let arr = []\n    let j = 1\n\n    const bookedDays = Object.keys(calendar.booked)\n    // const bookedDays = [\"28/12/2020\", \"28/12/2020\", \"28/12/2020\", \"28/12/2020\", \"28/12/2020\", \"25/12/2020\", \"30/12/2020\", \"28/12/2020\", \"25/12/2020\", \"30/12/2020\"]\n\n    for (let i = 0; i < 42; i++) {\n        if (i < firstDayOfCurrentMonth - 1) {\n            arr.push({\n                day: 0\n            })\n        } else if (i < daysInMonth + firstDayOfCurrentMonth - 1) {\n            let obj = {}\n            let numberOfBookings = 1\n            bookedDays.forEach((day, idx) => {\n                if (j === Number(day.split('/')[0])) {\n                    obj = {\n                        bookDate: day,\n                        booked: calendar.booked[day].length,\n                    }\n                    return\n                }\n            })\n\n            arr.push({\n                ...obj,\n                day: j++\n            })\n        }\n    }\n\n    const handleClick = (day, idx, bookDate) => {\n        const d = new Date(year, month, day)\n        const options = { weekday: 'long', month: 'long', day: 'numeric' };\n        setActiveIndex(idx)\n        setSelectedDate({\n            name: d.toLocaleDateString(\"sk-SK\", options),\n            value: bookDate\n        })\n    }\n\n    return (\n        <Container>\n            {\n                blocks.map(({ name }, idx) => (\n                    <HeaderBlock key={idx}>\n                        {name}\n                    </HeaderBlock>\n                ))\n            }\n            {\n                arr.map(({ day, booked, bookDate }, idx) => (\n                    <Dayblock key={idx} onClick={booked ? () => handleClick(day, idx, bookDate) : null}>\n                        {!(day === 0) && (\n                            <DayRowContainer>\n                                {booked && <BookingContainer active={idx === activeIndex}>{booked}</BookingContainer>}\n                                <DayNumber>{day}</DayNumber>\n                            </DayRowContainer>\n                        )}\n                    </Dayblock>\n                ))\n            }\n        </Container>\n    )\n}\n\nexport default Calendar\n","import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nexport const Title = styled.h2`\n    margin-bottom: 2rem;\n`\n\nexport const GridRow = styled.div`\n    display: grid;\n    grid-template-columns: repeat( auto-fit, minmax(25rem, 1fr) );\n    margin-bottom: 3rem;\n    grid-gap: 2rem;\n`\n\n\nexport const CalendarGridContainer = styled.div`\n    margin-top: 3rem;\n    display: grid;\n    grid-template-columns: 4fr 2fr;\n    align-items: start;\n    margin-bottom: 10rem;\n`\nexport const AppoimentOverview = styled.div`\n    margin-left: 2rem;  \n    padding: 2rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    align-self: start;\n`\n\nexport const Time = styled.p`\n    font-size: 1.4rem;\n    font-weight: 700;\n`\n\nexport const Line = styled.div`\n    height: 1px;\n    background-color: #eee;\n    width: 100%;\n    margin: .5rem 0 1rem;\n`\n\nexport const AppoimentCol = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto auto;\n    grid-template-areas:    \"i b\"\n                            \"n n\";\n`\n\nexport const NoteContainer = styled.div`\n    grid-area: n;\n    padding: .5rem 0;\n\n    p {\n        color: gray;\n    }\n`\n\nexport const Name = styled.p`\n    font-size: 1.4rem;\n    font-weight: 700;\n    line-height: 1;\n    /* margin-top: .5rem; */\n`\n\nexport const Desc = styled.span`\n    color: gray;\n    font-size: 1.2rem;\n    line-height: 1;\n`\n\nexport const Options = styled.div`\n    align-self: end;\n    justify-self: end;\n`\n\nexport const ConfirmButton = styled(CustomButton)`\n    display:block;  \n    font-size: 1.2rem;\n    /* margin-right: .5rem; */\n    padding: .2rem .8rem;\n    border-radius: .5rem;\n    margin-left: auto;\n    margin-bottom: .5rem;\n\n`\n\nexport const DeclineButton = styled(CustomButton)`\n    display:block;  \n    margin-left: auto;\n    font-size: 1.2rem;\n    /* margin-right: 1rem; */\n    padding: .2rem .8rem;\n    border-radius: .5rem;\n`\n\nexport const AppoimentContainer = styled.div`\n    margin-bottom: 1rem;\n`","import React, { useState, useEffect, useContext } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { BookingContext } from '../../context/booking/booking.context'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport BookingCalendarOverview from \"../../components/booking-calendar-overview/booking-calendar-overview.component\"\n\nimport Calendar from '../../components/calendar/calendar.component'\n\nimport {\n    Title,\n    GridRow,\n    CalendarGridContainer,\n    AppoimentOverview,\n    Time,\n    Line,\n    // TwoRowGrid,\n    Name,\n    Desc,\n    Options,\n    ConfirmButton,\n    DeclineButton,\n    AppoimentContainer,\n    AppoimentCol,\n    NoteContainer\n} from './booking.styles'\n\nconst BookingSection = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const bookingData = useContext(BookingContext)\n\n    console.log(bookingData)\n\n    const {\n        calendar,\n        calendars,\n        bookings,\n        // bookingRows,\n        getCalendars,\n        getCalendar,\n        userBookings,\n        getUserBookings,\n        getBookings,\n        // getBookingRows\n        activeCalendar,\n        selectedDate,\n        setSelectedDate,\n    } = bookingData\n\n    const [searchQuery, setSearchQuery] = useState('')\n\n    useEffect(() => {\n        if (!calendars) {\n            getCalendars()\n            getUserBookings()\n        }\n    }, [calendars])\n\n    useEffect(() => {\n        if (!bookings) {\n            getBookings()\n        }\n    }, [calendars])\n\n    // useEffect(() => {\n    //     if (!bookingRows) {\n    //         getBookingRows()\n    //     }\n    // }, [calendars])\n\n    // console.log(bookings)\n    // console.log(bookingRows)\n\n    if (!calendars) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n    console.log(userBookings)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                title=\"Kalendar objednávok\"\n            />\n\n            <ScrollContainer>\n                <Title>Pobočky</Title>\n                <GridRow>\n                    {calendars.map((calendar, idx) => (\n                        <BookingCalendarOverview key={idx} calendar={calendar} handleClick={() => getCalendar(calendar._id, idx + 1)} isActive={activeCalendar === idx + 1} />\n                    ))}\n                </GridRow>\n\n                {calendar && (\n                    <React.Fragment>\n                        <Title>Kalendár</Title>\n                        <CalendarGridContainer>\n                            <Calendar calendar={calendar} setSelectedDate={setSelectedDate} />\n\n                            {calendar && selectedDate.name && <AppoimentOverview>\n                                <Title>{selectedDate.name.charAt(0).toUpperCase() + selectedDate.name.slice(1)}</Title>\n\n                                {\n                                    calendar.booked[selectedDate.value].map((date, idx) => {\n                                        const filteredUserBookings = userBookings.filter(booking => booking.dueDate === selectedDate.value && booking.dueTime.split(\":\")[0] === date)\n                                        const time = date.split('/')[0] + \":\" + date.split('/')[1]\n\n                                        return (\n                                            <React.Fragment>\n                                                <AppoimentContainer key={idx}>\n                                                    <Time>{time}</Time>\n                                                    <Line />\n                                                    {\n                                                        filteredUserBookings.map(user => {\n                                                            const bookingType = bookings.find(booking => booking._id === user.booking)\n\n                                                            return (\n                                                                <AppoimentCol>\n                                                                    <div>\n                                                                        <Name>{user.name}</Name>\n                                                                        <Desc>{bookingType.name}</Desc>\n                                                                    </div>\n                                                                    <Options>\n                                                                        <ConfirmButton>Vybavený</ConfirmButton>\n                                                                        <DeclineButton>Neprišiel</DeclineButton>\n                                                                    </Options>\n                                                                    <NoteContainer>\n                                                                        <p>{user.note}</p>\n                                                                    </NoteContainer>\n                                                                </AppoimentCol>\n                                                            )\n                                                        })\n                                                    }\n                                                </AppoimentContainer>\n                                            </React.Fragment>\n                                        )\n                                    })\n                                }\n                            </AppoimentOverview>}\n                        </CalendarGridContainer>\n                    </React.Fragment>\n                )}\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BookingSection\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`","import React from 'react'\nimport { Container } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            {children}\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { paddingStyles } from '../../global.styles'\n\nexport const HeaderContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 3rem;\n    ${paddingStyles};    \n\n    @media all and (max-width: 600px) {\n        flex-wrap: wrap;\n    }\n`\n\nexport const Left = styled.div`\n    margin-top: 2rem;\n\n    display: flex;\n    align-items: center;\n\n`\n\nexport const Right = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport const Notification = styled.div`\n    background-color: #DD4C4C;\n    margin-left: 1.5rem;\n    color: #fff;\n    padding: .5rem 1rem;\n    border-radius: 1.5rem;\n    font-size: 1.4rem;\n`\n\n\nexport const SearchButton = styled(CustomButton)`\n    margin-top: 2rem;\n\n    margin-left: 2rem;\n`\n\nexport const AddButton = styled(CustomButton)`\n    margin-top: 2rem;\n\n    margin-left: 1rem;\n\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    HeaderContainer,\n    Left,\n    Right,\n    // SearchButton,\n    // Notification,\n    AddButton,\n} from './section-header.styles'\n\nconst SectionHeader = ({ searchQuery, handleChange, title, count = 999, handleAddButton = () => { } }) => {\n    return (\n        <HeaderContainer>\n            <Left>\n                <h1>{title}</h1>\n                {/* <Notification>{count}</Notification> */}\n            </Left>\n            <Right>\n                <div>\n                    <CustomInput\n                        type='search'\n                        name='searchbox'\n                        value={searchQuery}\n                        handleChange={handleChange}\n                        label='Vyhľadať'\n                    />\n                </div>\n                {/* <SearchButton>Vyhľadať</SearchButton> */}\n                <AddButton onClick={handleAddButton}>Pridať</AddButton>\n            </Right>\n        </HeaderContainer>\n    )\n}\n\nexport default SectionHeader\n"],"sourceRoot":""}
{"version":3,"sources":["components/modal-get-product-data/modal-get-product-data.styles.jsx","components/modal-get-product-data/modal-get-product-data.component.jsx","components/modal-get-lenses-data/modal-get-lenses-data.styles.jsx","components/modal-get-lenses-data/modal-get-lenses-data.component.jsx","components/product-glasses-form/product-glasses-form.styles.jsx","components/product-glasses-form/product-glasses-form.component.jsx","components/product-lenses-form/product-lenses-form.styles.jsx","components/product-lenses-form/product-lenses-form.component.jsx","components/product-accessories-form/product-accessories-form.styles.jsx","components/product-accessories-form/product-accessories-form.component.jsx","components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx","components/product-contact-lenses-form/product-contact-lenses-form.component.jsx","components/product-service-form/product-service-form.styles.jsx","components/product-service-form/product-service-form.component.jsx","sections/product/product.styles.jsx","sections/product/product.section.jsx","hooks/useFetch.jsx","utils/orders.utils.jsx"],"names":["ModalContainer","styled","div","Modal","CloseButton","button","SearchButton","CustomButton","TableContainer","TableCol","isHead","ProductTableHead","ProductTableRow","GetProductDataModal","close","getSingleProduct","productObj","setProductObj","useState","searchQuery","setSearchQuery","productItems","setProductItems","limit","skip","filters","type","query","setQuery","useFetchByQuery","response","isLoading","refetch","useEffect","products","ReactDOM","createPortal","onClick","label","value","handleChange","e","target","onKeyPress","key","map","product","idx","id","_id","data","console","log","price","toFixed","eanCode","image","specs","size","Array","src","process","imagePath","alt","name","brand","formatAvailable","available","document","getElementById","GetLensesDataModal","getSingleLenses","fillProductData","lenses","lensType","dioptric","dioptersRange","cylinderRange","BrandedCheckbox","CustomCheckbox","ImageContainer","ProductImage","hasImage","GlassesContainerForm","GlassesContainer","GlassesParameterContainer","StockContainer","CustomSelect","select","CopyButton","ProductGlassesForm","selectedImage","retailNames","currentUser","checkParameter","handleAvailableChange","handleGlassesSpecsSizeChange","handleGlassesParametersChange","handleSpecsChange","glassesParameters","setImageModal","isUpdating","handleGetProductData","isBranded","setIsBranded","toString","isActive","handleClick","Fragment","list","brands","link","rows","description","required","frameColor","glassesColors","color","frameMaterial","glassesMaterials","material","frameStyle","glassesShapes","shape","sex","onChange","admin","premises","LensesFormContainer","LensesContainer","LensesParametersContainer","SubGridContainer","TypesContainer","TypeCheckbox","ProductLensesForm","handleParameterChange","lensesTypes","photochromic","inputLabel","AccessoriesFormContainer","AccessoriesContainer","ProductAccessoriesForm","ContactLensesFormContainer","ContactLensesContainer","ContactLensesParametersContainer","IncreaseButton","ProductContactLensesForm","handleContactLensesChange","handleAddNewParameter","contactLensesParameters","allowedCurves","allowedDiameters","ServiceFormContainer","ServiceContainer","ProductServiceForm","Header","paddingStyles","SubmitButton","IsPublicCheckbox","CategoryContainer","CategoryCheckbox","ProductSection","useParams","useContext","AuthContext","LoadingModalContext","closeModal","message","showModal","getMessage","setShowModal","ImageContext","setSelectedImage","showImageModal","isGetProductDataModalVisible","setIsGetProductDataModalVisible","isGetLensesDataModalVisible","setIsGetLensesDataModalVisible","setIsUpdating","WarehouseContext","handleLensesChange","handleLensesParameterChange","createProduct","updateProduct","resetProduct","resetLenses","resetContactLenses","resetGlassesParameters","createLenses","updateLenses","handleProductChange","handleProductAvailableChange","getEanCode","handleContactLensesParameterChange","handleGlassesParameterChange","handleGlassesParameterSpecsChange","handleGlassesSizeChange","hasChanged","setHasChanged","useFetch","isLoadingFilters","setFilters","boolean","handleGetLensesData","handleChangeType","Object","keys","length","window","confirm","formatLink","arr","Number","setLensObj","undefined","when","productData","loading","title","setImage","imgId","eshop","preventDefault","newProductObj","updatedObj","contactLenses","updatedObg","productCategories","category","splice","firstIndex","find","path","method","setResponse","error","setError","setMessage","setIsLoading","refetchIndex","setRefetchIndex","prevRefetchIndex","requestOptions","redirect","a","fetch","res","json","fetchData","queryObj","myHeaders","Headers","append","localStorage","getItem","raw","JSON","stringify","headers","body","useFetchById","isAvailable","reduce","acc","currValue","totalCount","translatePaymentMethod","translateStatus","status"],"mappings":"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","file":"static/js/17.454d801c.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 65rem;\n    max-height: 60rem;\n\n    overflow-y: scroll;\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: var(--background-primary-color);\n    color: var(--primary-text-color);\n\n    position: relative;\n    z-index: 999999;\n\n    h2{ \n        margin-bottom: 2rem;\n        text-align: center;\n    }\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const SearchButton = styled(CustomButton)`\n    display: block;\n    margin-left: auto;\n    margin-top: 2rem;\n    background-color: var(--primary-color);\n`\n\n\nexport const TableContainer = styled.div`\n    margin: 5rem 0;\n    overflow-x: auto;\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const TableCol = styled.div`\n    min-width: inherit;\n    padding: 2rem;\n    text-align: center;\n    background-color: ${({ isHead }) => !isHead ? \"var(--container-background-color)\" : \"unset\"};\n    border-bottom: ${({ isHead }) => isHead ? \"1px solid var(--secondary-text-color)\" : \"unset\"};\n\n    img {\n        width: 5rem;\n    }\n\n`\n\nexport const ProductTableHead = styled.div`\n    width: 100%;\n\n    display: grid;\n    align-items: center;\n    grid-template-columns: 15rem 10rem 35rem 20rem 10rem 20rem;\n    font-weight: bolder;\n\n`\nexport const ProductTableRow = styled.div`\n    cursor: pointer;\n    display: grid;\n    align-content: center;\n    grid-template-columns: 15rem 10rem 35rem 20rem 10rem 20rem;\n    margin-bottom: 1rem;\n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    transition: all .3s ease-out;\n\n\n    &:hover {\n        ${TableCol} {\n            background-color: var(--primary-color);\n            font-weight: bolder;\n            color: var(--button-font-color);\n        }\n    }\n\n\n`","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport { formatAvailable } from '../../utils/orders.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SearchButton,\n    ProductTableHead,\n    ProductTableRow,\n    TableCol,\n    TableContainer\n} from './modal-get-product-data.styles'\n\nconst GetProductDataModal = ({ close, getSingleProduct, productObj, setProductObj }) => {\n    const [searchQuery, setSearchQuery] = useState(\"\")\n\n    const [productItems, setProductItems] = useState([])\n\n    const [query, setQuery] = useState({\n        limit: 10,\n        skip: 0,\n        filters: {\n            type: productObj.type\n        }\n    })\n    const { response, isLoading, refetch } = useFetchByQuery(\"api/admin/products/filter\", query)\n\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        setQuery({\n            ...query,\n            query: searchQuery\n        })\n        refetch()\n    }\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== \"\") {\n            if (e.key === 'Enter') {\n                setQuery({\n                    ...query,\n                    query: searchQuery\n                })\n                refetch()\n            }\n        }\n    }\n\n    const handleClick = (id) => {\n        getSingleProduct(id, (data) => {\n            console.log(\"DATA\")\n            console.log(data)\n            const { product } = data\n\n            if (product.type === 1 || product.type === 2 || product.type === 4) {\n                delete product['__v']\n                delete product['soldAmount']\n                delete product['ordered']\n                delete product['_id']\n                delete product['boughtTogether']\n                delete product['contactLenses']\n                delete product['date']\n\n                console.log(product)\n\n                setProductObj({\n                    ...product,\n                    // id: product._id,\n                    ...(!product._id) && { _id: product._id },\n                    price: (product.price / 100).toFixed(2),\n                    eanCode: product.eanCode,\n                    image: product.image._id,\n                    specs: {\n                        ...product.specs,\n                        size: [...Array(4)].map((value, idx) => product.specs.size[idx] ? product.specs.size[idx] : 0)\n                    }\n                })\n            }\n            if (product.type === 3) {\n                delete product['__v']\n                delete product['soldAmount']\n                delete product['ordered']\n                delete product['_id']\n                delete product['boughtTogether']\n                delete product['specs']\n                delete product['date']\n\n                setProductObj({\n                    ...product,\n                    // id: product._id,\n                    ...(!product._id) && { _id: product._id },\n                    price: (product.price / 100).toFixed(2),\n                    // colorCode: product.colorCode ?? \"\",\n                    image: product.image._id,\n                    // specs: {\n                    //     ...product.specs,\n                    //     size: [...Array(4)].map((value, idx) => product.specs.size[idx] ? product.specs.size[idx] : 0)\n                    // }\n                })\n            }\n        })\n        close()\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n\n        setProductItems(response.products)\n    }, [isLoading])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>Vyhľadať produkt</h2>\n                <div>\n                    <CustomInput\n                        label='Názov produktu, eanCode alebo popis'\n                        value={searchQuery}\n                        handleChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n\n                <TableContainer>\n                    <ProductTableHead>\n                        <TableCol isHead>eanKód</TableCol>\n                        <TableCol isHead>Obrázok</TableCol>\n                        <TableCol isHead>Názov</TableCol>\n                        <TableCol isHead>Značka</TableCol>\n                        <TableCol isHead>Cena</TableCol>\n                        <TableCol isHead>Na sklade</TableCol>\n                    </ProductTableHead>\n                    {productItems.map((product, idx) => (\n                        <ProductTableRow key={idx} onClick={() => handleClick(product._id)}>\n                            <TableCol>{product.eanCode}</TableCol>\n                            <TableCol>\n                                {product?.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${product.image.imagePath}`} alt={product.image.alt} />}\n                            </TableCol>\n                            <TableCol>{product.name}</TableCol>\n                            <TableCol>{product.brand}</TableCol>\n                            <TableCol>{(product.price / 100).toFixed(2)}€</TableCol>\n                            <TableCol>{product.type === 6 ? 'Služba' : formatAvailable(product.available)}</TableCol>\n                        </ProductTableRow>\n                    ))}\n                </TableContainer>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default GetProductDataModal\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 65rem;\n    max-height: 60rem;\n\n    overflow-y: scroll;\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: var(--background-primary-color);\n    color: var(--primary-text-color);\n\n    position: relative;\n    z-index: 999999;\n\n    h2{ \n        margin-bottom: 2rem;\n        text-align: center;\n    }\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const SearchButton = styled(CustomButton)`\n    display: block;\n    margin-left: auto;\n    margin-top: 2rem;\n    background-color: var(--primary-color);\n`\n\n\nexport const TableContainer = styled.div`\n    margin: 5rem 0;\n    overflow-x: auto;\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const TableCol = styled.div`\n    min-width: inherit;\n    padding: 2rem;\n    text-align: center;\n    background-color: ${({ isHead }) => !isHead ? \"var(--container-background-color)\" : \"unset\"};\n    border-bottom: ${({ isHead }) => isHead ? \"1px solid var(--secondary-text-color)\" : \"unset\"};\n\n    img {\n        width: 5rem;\n    }\n\n`\n\nexport const ProductTableHead = styled.div`\n    width: 100%;\n\n    display: grid;\n    align-items: center;\n    grid-template-columns: 15rem 10rem 35rem 20rem 10rem 20rem;\n    font-weight: bolder;\n\n`\nexport const ProductTableRow = styled.div`\n    cursor: pointer;\n    display: grid;\n    align-content: center;\n    grid-template-columns: 15rem 10rem 35rem 20rem 10rem 20rem;\n    margin-bottom: 1rem;\n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    transition: all .3s ease-out;\n\n\n    &:hover {\n        ${TableCol} {\n            background-color: var(--primary-color);\n            font-weight: bolder;\n            color: var(--button-font-color);\n        }\n    }\n\n\n`","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport { formatAvailable } from '../../utils/orders.utils'\n\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SearchButton,\n    ProductTableHead,\n    ProductTableRow,\n    TableCol,\n    TableContainer\n} from './modal-get-lenses-data.styles'\n\nconst GetLensesDataModal = ({ close, getSingleLenses, productObj, setProductObj, fillProductData }) => {\n    const [searchQuery, setSearchQuery] = useState(\"\")\n\n    const [productItems, setProductItems] = useState([])\n\n    const [query, setQuery] = useState({\n        limit: 10,\n        skip: 0,\n    })\n\n    const { response, isLoading, refetch } = useFetchByQuery(\"api/admin/lenses/filter\", query)\n\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        setQuery({\n            ...query,\n            query: searchQuery\n        })\n        refetch()\n    }\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== \"\") {\n            if (e.key === 'Enter') {\n                setQuery({\n                    ...query,\n                    query: searchQuery\n                })\n                refetch()\n            }\n        }\n    }\n\n    const handleClick = (id) => {\n        getSingleLenses(id, (data) => {\n            const { lenses } = data\n\n            delete lenses['__v']\n            delete lenses['_id']\n            delete lenses['soldAmount']\n            delete lenses['dateCreated']\n\n            console.log(\"lenses\")\n            console.log(\"lenses\")\n            console.log(lenses)\n            console.log(setProductObj)\n\n            fillProductData({\n                ...lenses,\n                image: lenses.image._id,\n                lensType: lenses.type || \"číre\",\n                dioptric: lenses.dioptric || false,\n                type: 0,\n                price: (lenses.price / 100).toFixed(2),\n            })\n\n        })\n        close()\n\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n\n        setProductItems(response.lenses)\n    }, [isLoading])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>Vyhľadať šošovky</h2>\n                <div>\n                    <CustomInput\n                        label='Názov šošoviek, eanCode alebo popis'\n                        value={searchQuery}\n                        handleChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n\n                <TableContainer>\n                    <ProductTableHead>\n                        <TableCol isHead>eanKód</TableCol>\n                        <TableCol isHead>Názov</TableCol>\n                        <TableCol isHead>Dioptrie</TableCol>\n                        <TableCol isHead>Cylinder</TableCol>\n                        <TableCol isHead>Cena</TableCol>\n                    </ProductTableHead>\n                    {productItems.map((product, idx) => (\n                        <ProductTableRow key={idx} onClick={() => handleClick(product._id)}>\n                            <TableCol>{product.eanCode}</TableCol>\n                            <TableCol>{product.name}</TableCol>\n                            <TableCol>\n                                {product.dioptersRange && <p>{`od ${product.dioptersRange[0]} do ${product.dioptersRange[1]}`}</p>}\n                            </TableCol>\n                            <TableCol>\n                                {product.cylinderRange && <p>{`od ${product.cylinderRange[0]} do ${product.cylinderRange[1]}`}</p>}\n                            </TableCol>\n                            <TableCol>{(product.price / 100).toFixed(2)}€</TableCol>\n                        </ProductTableRow>\n                    ))}\n                </TableContainer>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default GetLensesDataModal\n","import styled from 'styled-components'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\nexport const BrandedCheckbox = styled(CustomCheckbox)`\n    margin-top: 2rem;\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const GlassesContainerForm = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const GlassesContainer = styled.div`\n    position: relative;\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`\n\nexport const GlassesParameterContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n    margin-bottom: 3rem;\n\n    h4 {\n        margin-top: 2rem;\n    }\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: var(--input-background-color);\n    color: var(--input-color);\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`\n\nexport const CopyButton = styled.button`\n    cursor: pointer;\n    position: absolute;\n    right: 2rem;\n    top: 2rem;\n    color: var(--primary-color);\n`","import React, { useState, useEffect } from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport { glassesColors, glassesMaterials, glassesShapes } from '../../utils/warehouse.utils'\n\nimport { AiOutlineCopy } from 'react-icons/ai'\n\nimport {\n    ImageContainer,\n    ProductImage,\n    GlassesContainerForm,\n    GlassesContainer,\n    GlassesParameterContainer,\n    StockContainer,\n    CustomSelect,\n    BrandedCheckbox,\n    CopyButton\n} from './product-glasses-form.styles.jsx'\n\nconst ProductGlassesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    retailNames,\n    currentUser,\n    checkParameter,\n    handleAvailableChange,\n    handleGlassesParametersChange,\n    handleGlassesSpecsSizeChange,\n    handleSpecsChange,\n    glassesParameters,\n    setImageModal,\n    isUpdating,\n    filters,\n    handleGetProductData\n}) => {\n    const [isBranded, setIsBranded] = useState(true)\n\n\n    const handleIsBrandedClick = (isBrandedBool) => {\n        if (isBrandedBool) {\n            handleChange({\n                target: {\n                    name: \"brand\",\n                    value: \"Neznačkové\"\n                }\n            })\n            setIsBranded(false)\n        } else {\n            handleChange({\n                target: {\n                    name: \"brand\",\n                    value: \"\"\n                }\n            })\n\n            setIsBranded(true)\n\n        }\n    }\n\n    useEffect(() => {\n        if (product.brand === \"Neznačkové\") setIsBranded(false)\n    }, [isBranded])\n\n    return (\n        <GlassesContainerForm>\n            <GlassesContainer>\n                <CopyButton onClick={() => handleGetProductData(true)}><AiOutlineCopy /></CopyButton>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='eanCode'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov produktu*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <BrandedCheckbox\n                    label={\"Značkové\"}\n                    isActive={isBranded}\n                    handleClick={() => handleIsBrandedClick(isBranded)}\n                />\n\n                {isBranded && (\n                    <React.Fragment>\n                        <CustomInput\n                            label=\"Značka\"\n                            type='text'\n                            name='brand'\n                            value={product.brand ?? \"\"}\n                            handleChange={(e) => handleChange(e)}\n                            list=\"brands\"\n                        />\n                        <datalist id=\"brands\">\n                            {filters?.brands && filters?.brands.map((brand, idx) => (\n                                <option key={idx} value={brand} />\n                            ))}\n                        </datalist>\n                    </React.Fragment>\n                )}\n\n                {/* <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"categories\"\n\n                /> */}\n\n                {/* <datalist id=\"categories\">\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist> */}\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </GlassesContainer>\n            <div>\n                <GlassesParameterContainer>\n                    <h3>Parametre</h3>\n                    {/* <CustomInput\n                        label=\"Farebný kód\"\n                        type='text'\n                        name='colorCode'\n                        value={glassesParameters.colorCode ?? \"\"}\n                        handleChange={(e) => handleGlassesParametersChange(e)}\n                    /> */}\n                    <div>\n                        <CustomInput\n                            label=\"Farba rámu\"\n                            type='text'\n                            name='frameColor'\n                            value={glassesParameters.specs.frameColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                            list=\"colors\"\n\n                        />\n                        <datalist id=\"colors\">\n                            {glassesColors.map((color, idx) => (\n                                <option key={idx} value={color} />\n                            ))}\n                        </datalist>\n                        <CustomInput\n                            label=\"Materiál rámu\"\n                            type='text'\n                            name='frameMaterial'\n                            value={glassesParameters.specs.frameMaterial ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                            list=\"materials\"\n\n                        />\n                        <datalist id=\"materials\">\n                            {glassesMaterials.map((material, idx) => (\n                                <option key={idx} value={material} />\n                            ))}\n                        </datalist>\n                        <CustomInput\n                            label=\"Tvar rámu\"\n                            type='text'\n                            name='frameStyle'\n                            value={glassesParameters.specs.frameStyle ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                            list=\"shapes\"\n                        />\n                        <datalist id=\"shapes\">\n                            {glassesShapes.map((shape, idx) => (\n                                <option key={idx} value={shape} />\n                            ))}\n                        </datalist>\n                        {/* <CustomInput\n                            label=\"Farba šošovky\"\n                            type='text'\n                            name='lensColor'\n                            value={glassesParameters.specs.lensColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        /> */}\n                        <CustomSelect\n                            label=\"Pohlavie\"\n                            type='text'\n                            name='sex'\n                            value={glassesParameters?.specs?.sex || \"\"}\n                            onChange={(e) => handleSpecsChange(e)}\n                        >\n                            <option value=''>-</option>\n                            <option value='M'>Pánske</option>\n                            <option value='W'>Dámske</option>\n                            <option value='CH'>Detské</option>\n                            <option value='U'>Nezáleží</option>\n                        </CustomSelect>\n                    </div>\n                    <div>\n                        <h4>Velkosť</h4>\n                        {glassesParameters.specs.size.map((value, idx) => (\n                            <CustomInput\n                                key={idx}\n                                label={idx === 0 ? \"Šírka očnice (mm)\" : idx === 1 ? \"Výška očnice (mm)\" : idx === 2 ? \"Veľkosť nosníka (mm)\" : \"Dĺžka stranice (mm)\"}\n                                type='text'\n                                name='size'\n                                value={checkParameter(glassesParameters.specs.size, idx)}\n                                handleChange={(e) => handleGlassesSpecsSizeChange(e, idx)}\n                            />\n                        ))}\n                    </div>\n                </GlassesParameterContainer>\n                {currentUser.admin >= 2 ? (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        {product.available.map((value, idx) => {\n                            if (idx === 0) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </StockContainer>\n                ) : (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        <CustomInput\n                            label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[currentUser.premises]}\n                            type='number'\n                            name={\"available\"}\n                            value={checkParameter(product.available, currentUser.premises)}\n                            handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                        />\n                    </StockContainer>\n                )}\n            </div>\n        </GlassesContainerForm>\n    )\n}\n\nexport default ProductGlassesForm\n","import styled from 'styled-components'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\n\nexport const LensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n\n    @media all and (max-width: 1000px) {\n        grid-template-columns: 1fr;\n    }\n`\n\nexport const LensesContainer = styled.div`\n    position: relative;\n    /* width: 45rem; */\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n    /* display: inline-block; */\n    /* padding-bottom: 4rem;  */\n    margin-bottom: 5rem;\n`\n\nexport const LensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    h3 {\n        /* margin-bottom: 1rem; */\n    }\n\n    h4 {\n        margin-top: 2rem;\n    }\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\nexport const SubGridContainer = styled.div`\n\n`\n\nexport const TypesContainer = styled.div`\n    padding: 2rem;\n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    margin-bottom: 3rem;\n\n    h3 {\n        margin-bottom: 1rem;\n    }\n\n    h4 {\n        margin-top: 2rem;\n    }\n\n    div {\n        :not(:last-child) {\n            margin-bottom: 1rem;\n        }\n    }\n`\n\nexport const TypeCheckbox = styled(CustomCheckbox)`\n    &:not(:last-child) {\n        margin-right: 2rem;\n    }\n`\n\nexport const CopyButton = styled.button`\n    cursor: pointer;\n    position: absolute;\n    right: 2rem;\n    top: 2rem;\n    color: var(--primary-color);\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport { lensesTypes } from '../../context/warehouse/warehouse.utils'\n\nimport { AiOutlineCopy } from 'react-icons/ai'\n\nimport {\n    LensesFormContainer,\n    LensesContainer,\n    LensesParametersContainer,\n    ProductImage,\n    ImageContainer,\n    TypesContainer,\n    SubGridContainer,\n    TypeCheckbox,\n    CopyButton\n} from './product-lenses-form.styles'\n\nconst ProductLensesForm = ({\n    lenses,\n    selectedImage,\n    setImageModal,\n    handleChange,\n    handleParameterChange,\n    checkParameter,\n    filters,\n    handleGetProductData\n}) => {\n    return (\n        <LensesFormContainer>\n            <LensesContainer>\n                <CopyButton onClick={() => handleGetProductData(true)}><AiOutlineCopy /></CopyButton>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='eanCode'\n                    value={lenses?.eanCode?.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov šošoviek*\"\n                    type='text'\n                    name='name'\n                    value={lenses.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka*\"\n                    type='text'\n                    name='brand'\n                    value={lenses.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"brands\"\n                />\n\n                <datalist id=\"brands\">\n                    {filters?.brands && filters?.brands.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist>\n\n                <CustomTextarea\n                    label=\"Popis*\"\n                    name='description'\n                    rows='5'\n                    value={lenses.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={lenses.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </LensesContainer>\n            <SubGridContainer>\n                <TypesContainer>\n                    <h3>Druh</h3>\n\n                    <div>\n                        {lensesTypes.map((type, idx) => (\n                            <TypeCheckbox\n                                key={idx}\n                                label={type}\n                                value={type}\n                                name='lensType'\n                                isActive={type === lenses?.lensType}\n                                handleClick={() => handleChange({\n                                    target: {\n                                        name: \"lensType\",\n                                        value: type\n                                    }\n                                })}\n                            />\n                        ))}\n                    </div>\n\n                    {console.log(lenses)}\n                    {lenses.lensType === \"slnečné\" && (\n                        <div>\n                            <TypeCheckbox\n                                label=\"Polarizované\"\n                                value={lenses.photochromic}\n                                name='photochromic'\n                                isActive={lenses.photochromic}\n                                handleClick={() => handleChange({\n                                    target: {\n                                        name: \"photochromic\",\n                                        value: !lenses.photochromic\n                                    }\n                                })}\n                            />\n                        </div>\n                    )}\n\n                    <div>\n                        <TypeCheckbox\n                            label=\"Dioptrické\"\n                            value={lenses.dioptric}\n                            name='dioptric'\n                            isActive={lenses.dioptric}\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"dioptric\",\n                                    value: !lenses.dioptric\n                                }\n                            })}\n                        />\n                    </div>\n\n                    <CustomInput\n                        label=\"Farba šošovky\"\n                        type='text'\n                        name='color'\n                        value={lenses.color ?? \"\"}\n                        handleChange={(e) => handleChange(e)}\n                    />\n                </TypesContainer>\n                <LensesParametersContainer>\n                    <h3>Parametre</h3>\n\n                    <h4>Dioptrie</h4>\n                    {[...Array(2)].map((value, idx) => {\n                        const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\n\n                        return (\n                            <div key={idx}>\n                                <CustomInput\n                                    label={inputLabel}\n                                    type='number'\n                                    name='dioptersRange'\n                                    value={checkParameter(lenses.dioptersRange, idx)}\n                                    handleChange={(e) => handleParameterChange(e, idx)}\n                                />\n                            </div>\n                        )\n                    })}\n\n                    <h4>Cylinder</h4>\n                    {[...Array(2)].map((value, idx) => {\n                        const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\n\n                        return (\n                            <div key={idx}>\n                                <CustomInput\n                                    label={inputLabel}\n                                    type='number'\n                                    name='cylinderRange'\n                                    value={checkParameter(lenses.cylinderRange, idx)}\n                                    handleChange={(e) => handleParameterChange(e, idx)}\n                                />\n                            </div>\n                        )\n                    })}\n                </LensesParametersContainer>\n            </SubGridContainer>\n        </LensesFormContainer>\n    )\n}\n\nexport default ProductLensesForm\n","import styled from 'styled-components'\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const AccessoriesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const AccessoriesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    AccessoriesFormContainer,\n    AccessoriesContainer,\n    StockContainer,\n    ImageContainer,\n    ProductImage,\n} from './product-accessories-form.styles'\n\nconst ProductAccessoriesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    setImageModal,\n    handleAvailableChange,\n    checkParameter,\n    retailNames,\n    currentUser,\n    isUpdating,\n    filters\n}) => {\n    return (\n        <AccessoriesFormContainer>\n            <AccessoriesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"brands\"\n                />\n\n                <datalist id=\"brands\">\n                    {filters?.brands && filters?.brands.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist>\n\n                {/* <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"categories\"\n\n                />\n\n                <datalist id=\"categories\">\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist> */}\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </AccessoriesContainer>\n            {currentUser.admin >= 2 ? (\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    {product.available.map((value, idx) => {\n                        if (idx === 0) return\n                        return (\n                            <CustomInput\n                                key={idx}\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, idx)}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        )\n                    })}\n                </StockContainer>\n            ) : (\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    <CustomInput\n                        label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[currentUser.premises]}\n                        type='number'\n                        name={\"available\"}\n                        value={checkParameter(product.available, currentUser.premises)}\n                        handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                    />\n                </StockContainer>\n            )}\n        </AccessoriesFormContainer>\n    )\n}\n\nexport default ProductAccessoriesForm\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const ContactLensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const ContactLensesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n    position: relative;\n\n`\n\nexport const ContactLensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n    margin-bottom: 3rem;\n\n    h4 {\n        margin-top: 1rem;\n    }\n`\n\nexport const IncreaseButton = styled(CustomButton)`\n    margin-top: 2rem;\n    font-size: 1.4rem;\n\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`\n\nexport const CopyButton = styled.button`\n    cursor: pointer;\n    position: absolute;\n    right: 2rem;\n    top: 2rem;\n    color: var(--primary-color);\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\n// import { lensesBrands } from '../../utils/warehouse.utils'\nimport {\n    AiOutlineCopy\n} from 'react-icons/ai'\n\nimport {\n    ContactLensesContainer,\n    ContactLensesFormContainer,\n    StockContainer,\n    ContactLensesParametersContainer,\n    IncreaseButton,\n    ImageContainer,\n    ProductImage,\n    CopyButton,\n} from './product-contact-lenses-form.styles'\n\nconst ProductContactLensesForm = ({\n    product,\n    handleChange,\n    setImageModal,\n    selectedImage,\n    checkParameter,\n    handleContactLensesChange,\n    handleAddNewParameter,\n    contactLensesParameters,\n    retailNames,\n    currentUser,\n    handleAvailableChange,\n    isUpdating,\n    filters,\n    handleGetProductData\n}) => {\n    return (\n        <ContactLensesFormContainer>\n            <ContactLensesContainer>\n                <CopyButton onClick={() => handleGetProductData(true)}><AiOutlineCopy /></CopyButton>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"brands\"\n                />\n                <datalist id=\"brands\">\n                    {filters?.brands && filters?.brands.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist>\n                {/* \n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"categories\"\n                />\n\n                <datalist id=\"categories\">\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist> */}\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </ContactLensesContainer>\n            <div>\n                <ContactLensesParametersContainer>\n                    <h3>Parametre</h3>\n                    <div>\n                        <h4>Zakrivenie</h4>\n                        {contactLensesParameters.allowedCurves.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedCurves\"}\n                                    value={checkParameter(contactLensesParameters.allowedCurves, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedCurves'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n                    <div>\n                        <h4>Priemery</h4>\n                        {contactLensesParameters.allowedDiameters.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedDiameters\"}\n                                    value={checkParameter(contactLensesParameters.allowedDiameters, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedDiameters'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n\n                    <div>\n                        <h4>Dioptrie</h4>\n                        {contactLensesParameters.dioptersRange.map((value, idx) => {\n                            const inputLabel = idx === 0 ? \"minimum\" : \"maximum\"\n\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={inputLabel}\n                                    type='text'\n                                    name={\"dioptersRange\"}\n                                    value={checkParameter(contactLensesParameters.dioptersRange, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </div>\n                </ContactLensesParametersContainer>\n\n                {currentUser.admin >= 2 ? (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        {product.available.map((value, idx) => {\n                            if (idx === 0) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </StockContainer>\n                ) : (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        <CustomInput\n                            label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[currentUser.premises]}\n                            type='number'\n                            name={\"available\"}\n                            value={checkParameter(product.available, currentUser.premises)}\n                            handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                        />\n                    </StockContainer>\n                )}\n            </div>\n        </ContactLensesFormContainer>\n    )\n}\n\nexport default ProductContactLensesForm\n","import styled from 'styled-components'\n\nexport const ServiceFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const ServiceContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\n\nimport {\n    ServiceFormContainer,\n    ServiceContainer,\n    ImageContainer,\n    ProductImage\n} from './product-service-form.styles'\n\nconst ProductServiceForm = ({\n    product,\n    // isUpdating,\n    handleChange,\n    selectedImage,\n    setImageModal,\n}) => {\n    return (\n        <ServiceFormContainer>\n            <ServiceContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Názov služby*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                {/* <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer> */}\n            </ServiceContainer>\n        </ServiceFormContainer>\n    )\n}\n\nexport default ProductServiceForm\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\nimport CustomButton from '../../components/custom-button/custom-button.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n\nexport const Header = styled.div`\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n    color: var(--primary-text-color);\n\n`\n\nexport const SubmitButton = styled(CustomButton)`\n\n`\n\nexport const IsPublicCheckbox = styled(CustomCheckbox)`\n    margin-right: 2rem;\n`\n\n\nexport const CategoryContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n    display: inline-block;\n    margin-bottom: 3rem;\n\n    h3 {\n        margin-bottom: 1.5rem;\n    }\n`\nexport const CategoryCheckbox = styled(CustomCheckbox)`\n    &:not(:last-child) {\n        margin-right: 2rem;\n    }\n`","import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport GetProductDataModal from '../../components/modal-get-product-data/modal-get-product-data.component'\nimport GetLensesDataModal from '../../components/modal-get-lenses-data/modal-get-lenses-data.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\nimport ProductAccessoriesForm from '../../components/product-accessories-form/product-accessories-form.component'\nimport ProductContactLensesForm from '../../components/product-contact-lenses-form/product-contact-lenses-form.component'\nimport ProductServiceForm from '../../components/product-service-form/product-service-form.component'\n\nimport { productCategories, checkParameter, formatLink } from '../../context/warehouse/warehouse.utils'\nimport { retailNames } from '../../utils/warehouse.utils'\nimport { useFetch } from '../../hooks/useFetch'\n\nimport {\n    FixedContainer\n} from '../../global.styles'\n\nimport {\n    Header,\n    CategoryContainer,\n    CategoryCheckbox,\n    SubmitButton,\n    IsPublicCheckbox,\n\n} from './product.styles'\n\nconst ProductSection = () => {\n    const { id } = useParams()\n    const { currentUser } = useContext(AuthContext)\n    const { closeModal, message, isLoading, showModal, getMessage, setShowModal } = useContext(LoadingModalContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isGetProductDataModalVisible, setIsGetProductDataModalVisible] = useState(false)\n    const [isGetLensesDataModalVisible, setIsGetLensesDataModalVisible] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const {\n        eanCode,\n        product,\n        lenses,\n        contactLensesParameters,\n        glassesParameters,\n        handleLensesChange,\n        handleLensesParameterChange,\n        createProduct,\n        updateProduct,\n        resetProduct,\n        resetLenses,\n        resetContactLenses,\n        resetGlassesParameters,\n        createLenses,\n        updateLenses,\n        handleProductChange,\n        handleProductAvailableChange,\n        getEanCode,\n        handleAddNewParameter,\n        handleContactLensesParameterChange,\n        handleGlassesParameterChange,\n        handleGlassesParameterSpecsChange,\n        handleGlassesSizeChange,\n        getSingleProduct,\n        getSingleLenses\n    } = useContext(WarehouseContext)\n\n    const [hasChanged, setHasChanged] = useState(false)\n    const [productObj, setProductObj] = useState({})\n\n\n    const { response, isLoading: isLoadingFilters, refetch } = useFetch(`api/store/products/${productObj?.type}/filters`, !productObj?.type, \"GET\")\n    const [filters, setFilters] = useState(null)\n\n    const handleGetProductData = (boolean) => {\n        setIsGetProductDataModalVisible(boolean)\n    }\n\n    const handleGetLensesData = (boolean) => {\n        setIsGetLensesDataModalVisible(boolean)\n    }\n\n    const handleChangeType = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (!isUpdating) {\n            if (productObj.type === 0) {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetLenses()\n                        setSelectedImage('')\n                    } else {\n                        return\n                    }\n                }\n            } else {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetProduct()\n                        resetContactLenses()\n                        resetGlassesParameters()\n                        setSelectedImage('')\n                    } else {\n                        return\n                    }\n                }\n            }\n        }\n        setProductObj({\n            [name]: value\n        })\n\n    }\n    // console.count(\"PRODUCT OBJ\")\n    // console.log(productObj)\n    // console.count(\"PRODUCT OBJ\")\n\n    const handleChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (productObj.type === 0) {\n            handleLensesChange(e)\n        }\n\n        if (productObj.type === 6) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 5) {\n            handleProductChange(e)\n        }\n\n        if (productObj.type === 4) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 3) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 2) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 1) {\n            handleProductChange(e)\n        }\n\n\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        if (isUpdating) {\n            if (name === 'name') {\n                setProductObj({\n                    ...productObj,\n                    [name]: value,\n                    link: formatLink(value)\n                })\n                return\n            }\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParametersChange = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterChange(e)\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleSpecsChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterSpecsChange(e)\n\n        if (value === '') {\n            delete productObj.specs[name]\n\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSpecsSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleGlassesSizeChange(e, idx)\n\n        if (value === '') {\n            if (productObj.specs[name].length > 1) {\n                arr[idx] = 1001\n\n                const firstIndex = arr[0]\n                const canDeleteSpecs = arr.map(value => {\n                    if (firstIndex !== value) {\n                        return false\n                    } else {\n                        return true\n                    }\n                })\n\n                const verdict = canDeleteSpecs.find(value => value === false)\n\n                if (verdict === false) {\n                    setProductObj({\n                        ...productObj,\n                        specs: {\n                            ...productObj.specs,\n                            [name]: arr\n                        }\n                    })\n                } else {\n                    delete productObj.specs[name]\n                }\n\n            }\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleProductAvailableChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleContactLensesChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleContactLensesParameterChange(e, idx)\n\n        if (value === '') {\n            if (productObj.contactLenses[name].length > 1) {\n                arr.splice(idx, 1)\n                setProductObj({\n                    ...productObj,\n                    contactLenses: {\n                        ...productObj.contactLenses,\n                        [name]: arr\n                    }\n                })\n            } else {\n                delete productObj.contactLenses[name]\n            }\n            if (Object.keys(productObj.contactLenses).length === 0) {\n                delete productObj[\"contactLenses\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            contactLenses: {\n                ...productObj.contactLenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleLensesParameterChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleSelectImage = (imgId) => {\n        setHasChanged(true)\n        setProductObj({\n            ...productObj,\n            image: imgId\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        let newProductObj = {\n            ...productObj,\n            ...(productObj.type === 0) && { type: lenses.lensType },\n            ...(productObj.type === 0) && { dioptric: lenses.dioptric }\n        }\n\n        // console.log(\"PRODUCT OBJECT\")\n        // console.log(lensObj)\n        // console.log(productObj)\n\n\n\n        if (currentUser.admin < 2) {\n            if (newProductObj.available) {\n                newProductObj = {\n                    ...productObj,\n                    available: productObj.available[currentUser.premises]\n                }\n            }\n        } else {\n            if (newProductObj.available) {\n                newProductObj = {\n                    ...productObj,\n                    available: newProductObj.available ? newProductObj.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0, 0]\n                }\n            }\n        }\n\n        if (isUpdating) {\n            console.log(newProductObj)\n            if (newProductObj.type === 0 || typeof newProductObj.type === 'string') {\n                setHasChanged(false)\n                delete newProductObj['link']\n                // delete newProductObj['type']\n                const updatedObj = {\n                    ...newProductObj,\n                    type: newProductObj.lensType,\n                    eanCode: lenses.eanCode\n                }\n                delete updatedObj['lensType']\n                console.log(id)\n                updateLenses(updatedObj, id)\n                return\n            } else if (newProductObj.type === 3) {\n                setHasChanged(false)\n                delete newProductObj['type']\n                updateProduct({ ...newProductObj, contactLenses: {} })\n                return\n            } else {\n                setHasChanged(false)\n                delete newProductObj['type']\n                updateProduct(newProductObj)\n                return\n            }\n        } else {\n            if (productObj.type === 0) {\n                console.log(\"NEW LENSES OBJ\")\n                console.log(newProductObj)\n                if (!newProductObj.name || !newProductObj.brand || !newProductObj.description || !newProductObj.price || !newProductObj.image || !newProductObj.dioptersRange || !newProductObj.cylinderRange) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    // delete newProductObj['type']\n                    const updatedObg = {\n                        ...newProductObj,\n                        type: newProductObj.lensType\n                    }\n                    delete updatedObg['lensType']\n\n                    createLenses(updatedObg)\n                }\n            }\n            if (newProductObj.type === 6 || newProductObj.type === 5 || newProductObj.type === 4 || newProductObj.type === 3 || newProductObj.type === 2 || newProductObj.type === 1) {\n                if (!newProductObj.name || !newProductObj.price) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    delete newProductObj['_id']\n\n                    createProduct(newProductObj)\n                }\n            }\n        }\n\n\n    }\n\n    const [lensObj, setLensObj] = useState(null)\n\n    const fillProductData = (productData) => {\n        console.log(\"productData\")\n        console.log(\"productData\")\n        console.log(productData)\n\n        setLensObj({\n            ...productObj,\n            ...productData\n        })\n\n        setProductObj({\n            ...productObj,\n            ...productData\n        })\n    }\n\n    useEffect(() => {\n        if (!productObj?.type) return\n        setFilters(null)\n        refetch()\n    }, [productObj?.type])\n\n    useEffect(() => {\n        if (productObj.type === 0) {\n            if (productObj.lensType) return\n            console.log(\"SET LENS TYPE\")\n            console.log(lenses)\n            handleChange({\n                target: {\n                    name: \"lensType\",\n                    value: lenses?.type\n                }\n            })\n        }\n    }, [lenses.lensType])\n\n    useEffect(() => {\n        if (isLoadingFilters) return\n        if (response?.filters) {\n            setFilters(response?.filters)\n        }\n    }, [isLoadingFilters])\n\n    useEffect(() => {\n        if (id === \"novy-produkt\") {\n            if (!eanCode) {\n                getEanCode()\n            } else {\n                if (productObj.type !== undefined && !productObj.eanCode) {\n                    console.log(\"SET EANCODE\")\n                    console.log(productObj)\n                    handleChange({\n                        target: {\n                            name: \"eanCode\",\n                            value: eanCode\n                        }\n                    })\n                }\n            }\n        }\n    }, [id, eanCode, productObj.type, productObj.eanCode, product.type])\n\n    useEffect(() => {\n        if (id !== 'novy-produkt') {\n            getSingleProduct(id, () => { })\n            setIsUpdating(true)\n            if (!productObj.type) {\n                handleChangeType({\n                    target: {\n                        name: \"type\",\n                        value: product.type\n                    }\n                })\n\n            }\n        }\n    }, [id, product.type])\n\n    // console.log(productObj)\n\n    useEffect(() => {\n        if (product.image) {\n            setSelectedImage(product.image)\n        }\n        if (lenses.image) {\n            setSelectedImage(lenses.image)\n        }\n    }, [product.image, lenses.image])\n\n    useEffect(() => {\n        return () => {\n            resetProduct()\n            resetLenses()\n            resetContactLenses()\n            resetGlassesParameters()\n            setProductObj({})\n            setSelectedImage(null)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <section>\n            <Prompt\n                when={hasChanged}\n                message=\"Chcete opustiť formulár?\"\n            />\n\n            {isGetLensesDataModalVisible && <GetLensesDataModal close={() => handleGetLensesData(false)} getSingleProduct={getSingleProduct} productObj={productObj} setProductObj={setProductObj} getSingleLenses={getSingleLenses} fillProductData={fillProductData} />}\n            {isGetProductDataModalVisible && <GetProductDataModal close={() => setIsGetProductDataModalVisible(false)} getSingleProduct={getSingleProduct} productObj={productObj} setProductObj={setProductObj} />}\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={handleSelectImage} />}\n            <Header>\n                <FixedContainer>\n\n                    <div>\n                        <h1>{isUpdating ? \"Upraviť produkt\" : \"Nový produkt\"}</h1>\n                    </div>\n                    <div>\n                        <IsPublicCheckbox\n                            label=\"Verejné\"\n                            // value={product.ehop}\n                            name='eshop'\n                            isActive={product.eshop}\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"eshop\",\n                                    value: !product.eshop\n                                }\n                            })}\n                        />\n                        <SubmitButton onClick={handleSubmit}>{isUpdating ? \"Upraviť\" : \"Vytvoriť\"}</SubmitButton>\n                    </div>\n                </FixedContainer>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating && <CategoryContainer>\n                    <h3>Aký produkt chcete pridať?</h3>\n                    {productCategories.map((category, idx) => (\n                        <CategoryCheckbox\n                            key={idx}\n                            label={category.name}\n                            value={category.value}\n                            name='type'\n                            isActive={category.value === productObj.type}\n                            handleClick={() => handleChangeType({\n                                target: {\n                                    name: \"type\",\n                                    value: category.value\n                                }\n                            })}\n                        />\n                    ))}\n                </CategoryContainer>}\n\n                {productObj.type === 0 && (\n                    <ProductLensesForm\n                        lenses={lenses}\n                        selectedImage={selectedImage}\n                        setImageModal={setImageModal}\n                        handleChange={handleChange}\n                        handleParameterChange={handleParameterChange}\n                        checkParameter={checkParameter}\n                        filters={filters}\n                        handleGetProductData={handleGetLensesData}\n                    />\n                )}\n\n                {productObj.type === 6 && (\n                    <ProductServiceForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        handleChange={handleChange}\n                        selectedImage={selectedImage}\n                        setImageModal={setImageModal}\n                        filters={filters}\n                    />\n                )}\n\n                {productObj.type === 5 && (\n                    <ProductAccessoriesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        currentUser={currentUser}\n                        retailNames={retailNames}\n                        selectedImage={selectedImage}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        filters={filters}\n                    />\n                )}\n\n                {productObj.type === 3 && (\n                    <ProductContactLensesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        contactLensesParameters={contactLensesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAddNewParameter={handleAddNewParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        handleContactLensesChange={handleContactLensesChange}\n                        filters={filters}\n                        handleGetProductData={handleGetProductData}\n                    />\n                )}\n\n                {(productObj.type === 1 || productObj.type === 2 || productObj.type === 4) && (\n                    <ProductGlassesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        glassesParameters={glassesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleSpecsChange={handleSpecsChange}\n                        handleAvailableChange={handleAvailableChange}\n                        handleGlassesSpecsSizeChange={handleGlassesSpecsSizeChange}\n                        handleGlassesParametersChange={handleGlassesParametersChange}\n                        filters={filters}\n                        handleGetProductData={handleGetProductData}\n                    />\n                )}\n\n            </ScrollContainer>\n\n        </section >\n    )\n}\n\nexport default ProductSection\n","import { useEffect, useState } from 'react'\n\nexport const useFetch = (path, skip = false, method = \"GET\") => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [message, setMessage] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const requestOptions = {\n        method: method,\n        // headers: myHeaders,\n        // body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setMessage(data.message)\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n                setMessage(\"Niečo sa pokazilo\")\n            }\n        }\n        fetchData()\n    }, [refetchIndex])\n\n    return { response, isLoading, error, message, refetch }\n}\n\nexport const useFetchByQuery = (path, queryObj, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify(queryObj)\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path])\n\n    return { response, isLoading, error, refetch }\n}\n\nexport const useFetchById = (path, id, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}/${id}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path, id])\n\n    return { response, isLoading, error, refetch }\n}\n","\nexport const isAvailable = (available) => {\n    if (!available) return false\n    if (typeof available === \"number\") {\n        return available > 0 ? true : false\n    } else {\n        return available.reduce((acc, currValue) => acc + currValue) > 0 ? true : false\n    }\n\n}\n\nexport const formatAvailable = (available) => {\n    if (!available) return \"Nedostupné\"\n    if (typeof available === \"number\") {\n        return available > 0 ? `${available}ks` : \"Nedostupné\"\n    } else {\n        const totalCount = available.reduce((acc, currValue) => acc + currValue)\n        return totalCount > 0 ? `${totalCount}ks` : \"Nedostupné\"\n    }\n}\n\nexport const translatePaymentMethod = value => {\n    if (value === 'cash') return \"Hotovosť\"\n    if (value === 'card') return \"Karta\"\n    if (value === 'coupon') return \"Kupón\"\n    return value\n}\n\nexport const translateStatus = status => {\n    if (status === 'finished') return \"Dokončené\"\n    if (status === 'fulfilled') return \"Vybavené\"\n    if (status === 'pending') return \"Čaká na vybavenie\"\n    if (status === 'paid') return \"Zaplatené\"\n    if (status === 'half-paid') return \"Zálohované\"\n    if (status === 'cancelled') return \"Zrušené\"\n}\n"],"sourceRoot":""}
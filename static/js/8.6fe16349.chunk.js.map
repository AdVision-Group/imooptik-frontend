{"version":3,"sources":["components/user-form/user.form-styles.jsx","components/user-form/user-form.component.jsx","components/new-user-form/new-user-form.component.jsx","sections/customer-profile/customer-profile.styles.jsx","sections/customer-profile/customer-profile.section.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","components/product-input-row/product-input-row.styles.jsx","components/product-input-row/product-input-row.component.jsx","context/user/user.queries.jsx","context/user/user.utils.jsx","context/user/user.context.jsx","components/order-overview/order-overview.styles.jsx","components/order-overview/order-overview.component.jsx","components/custom-form-switch/custom-form-switch.styles.jsx","components/custom-form-switch/custom-form-switch.component.jsx"],"names":["Profile","styled","div","GridContainer","ZeroMargin","GridRow","ThreeColRow","Row","Title","h2","Container","UserForm","isAdmin","isUpdating","user","handleChange","handleDioptersChange","handleDistanceChange","handleCylinderChange","handleCylinderAxesChange","label","example","type","name","value","premises","toString","e","required","admin","fName","lName","email","phone","address","psc","city","country","lenses","diopters","distance","cylinder","cylinderAxes","id","date","totalPrice","NewUserForm","formToShow","switchFormButtons","toggleUserForm","items","title","activeIndex","handleClick","password","confirmPassword","Header","paddingStyles","DeleteProfileButton","CustomButton","SaveButton","CustomerProfile","useParams","useContext","AuthContext","LoadingModalContext","closeModal","isLoading","message","showModal","UserContext","getUser","updateUser","resetUser","createUser","useEffect","console","log","loading","close","onSubmit","preventDefault","ScrollContainer","children","InputRow","ProductInputRow","otherprops","fetchUsers","token","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","process","fetchUser","patchUser","_id","body","JSON","stringify","undefined","Number","postUser","postAdmin","initUserObj","boughtProducts","finishedRegistration","orders","tempUser","totalSpent","watchList","createContext","handleChangeFilterItem","filterItems","totalCount","users","getUsers","UserProvider","push","useHistory","getMessage","setIsLoading","setShowModal","useState","setUser","setUsers","setTotalCount","setIsUpdating","setActiveIndex","setFormToShow","a","response","json","data","count","length","split","error","Provider","itemIndex","filter","target","idx","arr","OrderContainer","OrderContent","OrderId","p","Date","Price","Options","UpdateButton","DeleteButton","OrderOverview","props","h3","ToggleOptionsContainer","ToggleFormButton","isActive","CustomFormSwitch","Fragment","map","item","onClick"],"mappings":"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","file":"static/js/8.6fe16349.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Profile = styled.div`\n    /* padding: 2rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08); */\n    margin-right: 2rem;\n\n`\n\nexport const GridContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: start;\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n    }\n`\n\nexport const ZeroMargin = styled.div`\n    input {\n        margin-bottom: 0 !important;\n    }\n`\n\nexport const GridRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n`\n\n\nexport const ThreeColRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-items: center;\n\n    input {\n        margin-bottom: 0 !important;\n    }\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr 1fr;\n        grid-template-areas:\n            \"a a\"\n            \"b c\";\n\n        div:nth-child(1){\n            grid-area: a;\n            margin-bottom: 0;\n        }\n        div:nth-child(2){\n            grid-area: b;\n            margin-bottom: 2rem;\n\n        }\n        div:nth-child(3){\n            grid-area: c;\n            margin-bottom: 2rem;\n        }\n    }\n`\n\nexport const Row = styled.div`\n    width: 75%;\n`\n\n\nexport const Title = styled.h2`\n    margin-bottom: 2rem;\n`\n\nexport const Container = styled.div`\n    margin-top: 2rem;\n`","import React from 'react'\n\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport OrderOverview from '../order-overview/order-overview.component'\n\nimport {\n    Profile,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    Title,\n    Container\n} from './user.form-styles'\n\nconst UserForm = ({ isAdmin, isUpdating, user, handleChange, handleDioptersChange, handleDistanceChange, handleCylinderChange, handleCylinderAxesChange }) => {\n    return (\n        <GridContainer>\n            <Profile>\n                {isAdmin && <div>\n                    <h2>Admin panel</h2>\n                    <InputRow\n                        label=\"Predajňa na ktorej uživatel pracuje\"\n                        example='napr: 1-4'\n                    >\n                        <CustomInput\n                            label=\"Premises*\"\n                            type='text'\n                            name='premises'\n                            value={user.premises.toString()}\n                            handleChange={(e) => handleChange(e)}\n                            required\n                        />\n                    </InputRow>\n                    <InputRow\n                        label=\"Výška administrativných práv\"\n                        example=\"napr: 1-4\"\n                    >\n                        <CustomInput\n                            label=\"Admin*\"\n                            type='text'\n                            name='admin'\n                            value={user.admin.toString()}\n                            handleChange={(e) => handleChange(e)}\n                            required\n                        />\n                    </InputRow>\n                </div>}\n                <div>\n                    <h2>Informácie</h2>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </div>\n\n                <Container>\n                    <h2>Kontaktné údaje</h2>\n                    <Row>\n                        <div>\n                            <CustomInput\n                                label=\"E-mail*\"\n                                type='email'\n                                name='email'\n                                value={user.email}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Telefónne číslo\"\n                                type='text'\n                                name='phone'\n                                value={user.phone}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <h2>Fakturačné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.address}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.psc}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.city}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.country}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n\n                <Container>\n                    <h2>Parametre</h2>\n\n                    <ThreeColRow>\n                        <div>\n                            Dioptrie\n                                </div>\n                        <div>\n                            <CustomInput\n                                label=\"Ľavé oko\"\n                                type='text'\n                                name='city'\n                                value={user.lenses.diopters[0].toString()}\n                                handleChange={(e) => handleDioptersChange(e, 0)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Pravé oko\"\n                                type='text'\n                                name='state'\n                                value={user.lenses.diopters[1].toString()}\n                                handleChange={(e) => handleDioptersChange(e, 1)}\n                            />\n                        </div>\n                    </ThreeColRow>\n\n                    <ThreeColRow>\n                        <div>\n                            Vzdialenosť\n                                </div>\n                        <div>\n                            <CustomInput\n                                label=\"Ľavé oko\"\n                                type='text'\n                                name='city'\n                                value={user.lenses.distance[0].toString()}\n                                handleChange={(e) => handleDistanceChange(e, 0)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Pravé oko\"\n                                type='text'\n                                name='state'\n                                value={user.lenses.distance[1].toString()}\n                                handleChange={(e) => handleDistanceChange(e, 1)}\n                            />\n                        </div>\n                    </ThreeColRow>\n\n                    <ThreeColRow>\n                        <div>\n                            Cylinder\n                                </div>\n                        <div>\n                            <CustomInput\n                                label=\"Ľavé oko\"\n                                type='text'\n                                name='city'\n                                value={user.lenses.cylinder[0].toString()}\n                                handleChange={(e) => handleCylinderChange(e, 0)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Pravé oko\"\n                                type='text'\n                                name='state'\n                                value={user.lenses.cylinder[1].toString()}\n                                handleChange={(e) => handleCylinderChange(e, 1)}\n                            />\n                        </div>\n                    </ThreeColRow>\n\n                    <ThreeColRow>\n                        <div>\n                            Os cylindrov\n                                </div>\n                        <div>\n                            <CustomInput\n                                label=\"Ľavé oko\"\n                                type='text'\n                                name='city'\n                                value={user.lenses.cylinderAxes[0].toString()}\n                                handleChange={(e) => handleCylinderAxesChange(e, 0)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Pravé oko\"\n                                type='text'\n                                name='state'\n                                value={user.lenses.cylinderAxes[1].toString()}\n                                handleChange={(e) => handleCylinderAxesChange(e, 1)}\n                            />\n                        </div>\n                    </ThreeColRow>\n                </Container>\n\n\n            </Profile>\n\n            {isUpdating && <div>\n                <Title>\n                    Objednávky\n                            </Title>\n\n                <div>\n                    <OrderOverview\n                        name='Product name'\n                        id='[Product ID]'\n                        date='28. November 2020'\n                        totalPrice='99.99'\n                    />\n                    <OrderOverview\n                        name='Product name'\n                        id='[Product ID]'\n                        date='28. November 2020'\n                        totalPrice='99.99'\n                    />\n                    <OrderOverview\n                        name='Product name'\n                        id='[Product ID]'\n                        date='28. November 2020'\n                        totalPrice='99.99'\n                    />\n                </div>\n            </div>}\n        </GridContainer>\n    )\n}\n\nexport default UserForm\n","import React from 'react'\n\nimport CustomFormSwitch from '../custom-form-switch/custom-form-switch.component'\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\n\n\nconst NewUserForm = ({ formToShow, switchFormButtons, toggleUserForm, user, handleChange }) => {\n    return (\n        <div>\n            {/* Akého uživatela chcete vytvoriť? */}\n            <CustomFormSwitch\n                items={switchFormButtons}\n                title=\"Akého uživatela chcete vytvoriť?\"\n                activeIndex={formToShow}\n                handleClick={toggleUserForm}\n            />\n\n            {\n                formToShow === 0 ? (\n                    <div>\n                        <div>\n                            <h2>Informácie</h2>\n                            <InputRow\n                                label=\"\"\n                                example='napr: John'\n                            >\n                                <CustomInput\n                                    label=\"Meno*\"\n                                    type='text'\n                                    name='fName'\n                                    value={user.fName}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: Doe'\n                            >\n                                <CustomInput\n                                    label=\"Priezvisko*\"\n                                    type='text'\n                                    name='lName'\n                                    value={user.lName}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: priklad@email.com'\n                            >\n                                <CustomInput\n                                    label=\"E-mail*\"\n                                    type='email'\n                                    name='email'\n                                    value={user.email}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                        </div>\n                    </div>\n                ) : (\n                        <div>\n                            <div>\n                                <h2>Admin panel</h2>\n                                <InputRow\n                                    label=\"Predajňa na ktorej uživatel pracuje\"\n                                    example='napr: 1-4'\n                                >\n                                    <CustomInput\n                                        label=\"Premises*\"\n                                        type='text'\n                                        name='premises'\n                                        value={user.premises.toString()}\n                                        handleChange={(e) => handleChange(e)}\n                                        required\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"Výška administrativných práv\"\n                                    example=\"napr: 1-4\"\n                                >\n                                    <CustomInput\n                                        label=\"Admin*\"\n                                        type='text'\n                                        name='admin'\n                                        value={user.admin.toString()}\n                                        handleChange={(e) => handleChange(e)}\n                                        required\n                                    />\n                                </InputRow>\n                            </div>\n                            <div>\n                                <h2>Informácie</h2>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: John'\n                                >\n                                    <CustomInput\n                                        label=\"Meno*\"\n                                        type='text'\n                                        name='fName'\n                                        value={user.fName}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: Doe'\n                                >\n                                    <CustomInput\n                                        label=\"Priezvisko*\"\n                                        type='text'\n                                        name='lName'\n                                        value={user.lName}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: priklad@email.com'\n                                >\n                                    <CustomInput\n                                        label=\"E-mail*\"\n                                        type='email'\n                                        name='email'\n                                        value={user.email}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"Heslo použivatela, aspoň 1 velké pismeno, 1 malé pismeno a 1 číslo*\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Heslo*\"\n                                        type='password'\n                                        name='password'\n                                        value={user.password}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Potvrď heslo*\"\n                                        type='password'\n                                        name='confirmPassword'\n                                        value={user.confirmPassword}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n\n\n                            </div>\n                        </div>\n                    )\n            }\n        </div>\n    )\n}\n\nexport default NewUserForm\n","import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nimport { paddingStyles } from '../../global.styles'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n`\n\nexport const DeleteProfileButton = styled(CustomButton)`\n    background-color: #DD4C4C;\n    font-size: 1.4rem;\n`\n\n\nexport const SaveButton = styled(CustomButton)`\n    margin-left: 2rem;\n    font-size: 1.4rem;\n`\n","import React, { useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { UserContext } from '../../context/user/user.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport UserForm from '../../components/user-form/user-form.component'\nimport NewUserForm from '../../components/new-user-form/new-user-form.component'\n\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    DeleteProfileButton,\n    // Name,\n    SaveButton,\n} from './customer-profile.styles'\n\nconst CustomerProfile = () => {\n    const { id } = useParams()\n    const { isAdmin } = useContext(AuthContext)\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal,\n    } = useContext(LoadingModalContext)\n\n    const {\n        isUpdating,\n        user,\n        getUser,\n        handleChange,\n        handleDioptersChange,\n        handleDistanceChange,\n        handleCylinderChange,\n        handleCylinderAxesChange,\n        updateUser,\n        resetUser,\n        formToShow,\n        switchFormButtons,\n        toggleUserForm,\n        createUser\n    } = useContext(UserContext)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (id === 'novy-zakaznik') {\n            console.log(\"Create new user\")\n            createUser(user)\n        } else {\n            console.log(\"Update existing user\")\n            updateUser(user)\n        }\n    }\n\n    useEffect(() => {\n        if (id !== 'novy-zakaznik') {\n            getUser(id)\n        }\n    }, [id])\n\n    useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            resetUser()\n        }\n    }, [])\n\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <form onSubmit={handleSubmit}>\n                <Header>\n                    <h1>Profil</h1>\n                    <div>\n                        {isUpdating && <DeleteProfileButton>Vymazať</DeleteProfileButton>}\n                        <SaveButton type=\"submit\">\n                            {isUpdating ? \"Uložiť zmeny\" : \"Vytvoriť\"}\n                        </SaveButton>\n                    </div>\n                </Header>\n\n                <ScrollContainer>\n                    {\n                        isUpdating ? (\n                            <UserForm\n                                isAdmin={isAdmin}\n                                isUpdating={isUpdating}\n                                user={user}\n                                handleChange={handleChange}\n                                handleDioptersChange={handleDioptersChange}\n                                handleDistanceChange={handleDistanceChange}\n                                handleCylinderChange={handleCylinderChange}\n                                handleCylinderAxesChange={handleCylinderAxesChange}\n                            />\n                        ) : (\n                                <NewUserForm\n                                    formToShow={formToShow}\n                                    switchFormButtons={switchFormButtons}\n                                    toggleUserForm={toggleUserForm}\n                                    user={user}\n                                    handleChange={handleChange}\n                                />\n                            )\n                    }\n\n\n                </ScrollContainer>\n\n            </form>\n        </section>\n    )\n}\n\nexport default CustomerProfile\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`","import React from 'react'\nimport { Container } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            {children}\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import styled from 'styled-components'\n\nexport const InputRow = styled.div`\n    display:flex;\n    align-items: center;\n\n    p {\n        margin-top: 1.8rem;\n        margin-left: 2rem;\n            opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n    @media all and (max-width: 800px) {\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n    }\n`","import React from 'react'\n\nimport { InputRow } from './product-input-row.styles'\n\nconst ProductInputRow = ({ children, label, example, ...otherprops }) => {\n    return (\n        <InputRow {...otherprops}>\n            <div>\n                {children}\n            </div>\n            <div>\n                <p>{label + \" \"}<span>{example}</span></p>\n            </div>\n        </InputRow>\n    )\n}\n\nexport default ProductInputRow\n","\n\nexport const fetchUsers = (token) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users`, requestOptions)\n\n}\n\nexport const fetchUser = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\n}\n\nexport const patchUser = (token, user) => {\n    const {\n        _id: id,\n        address,\n        admin,\n        city,\n        country,\n        email,\n        lenses: {\n            cylinder,\n            cylinderAxes,\n            diopters,\n            distance,\n        },\n        name,\n        phone,\n        psc,\n        premises\n    } = user\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        address: address || undefined,\n        admin: admin,\n        premises: Number(premises) === 0 ? undefined : premises,\n        city: city || undefined,\n        country: country || undefined,\n        email: email,\n        lenses: {\n            cylinder: cylinder,\n            cylinderAxes: cylinderAxes,\n            diopters: diopters,\n            distance: distance,\n        },\n        name: name,\n        phone: phone || undefined,\n        psc: psc || undefined,\n    })\n\n    const requestOptions = {\n        method: 'PATCH',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    console.log(id)\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\n}\n\nexport const postUser = (token, user) => {\n    console.log(user)\n\n    const {\n        name,\n        email,\n    } = user\n\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        email: email,\n        name: name,\n    })\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\n}\n\nexport const postAdmin = (token, user) => {\n    console.log(user)\n\n    const {\n        name,\n        email,\n        password,\n        premises,\n        admin\n    } = user\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        admin: Number(admin),\n        email: email,\n        name: name,\n        premises: Number(premises),\n        password\n    })\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\n}","export const initUserObj = {\n    address: \"\",\n    admin: 0,\n    premises: 0,\n    boughtProducts: {},\n    city: \"\",\n    country: \"\",\n    date: \"\",\n    email: \"\",\n    finishedRegistration: false,\n    lenses: {\n        cylinder: [0, 0],\n        cylinderAxes: [0, 0],\n        diopters: [0, 0],\n        distance: [0, 0],\n    },\n    name: \"\",\n    orders: [],\n    phone: \"\",\n    psc: \"\",\n    tempUser: false,\n    totalSpent: 0,\n    watchList: [],\n    fName: \"\",\n    lName: \"\",\n    password: '',\n    confirmPassword: \"\"\n}","import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\n\nimport {\n    fetchUsers,\n    fetchUser,\n    patchUser,\n    postAdmin,\n    postUser\n} from './user.queries'\n\nimport {\n    initUserObj\n} from './user.utils'\n\nexport const UserContext = createContext({\n    isUpdating: false,\n    activeIndex: 0,\n    handleChangeFilterItem: () => { },\n    filterItems: [],\n    totalCount: 0,\n    users: null,\n    user: null,\n    getUsers: () => { },\n    getUser: () => { },\n    handleChange: () => { },\n    handleDioptersChange: () => { },\n    handleDistanceChange: () => { },\n    handleCylinderChange: () => { },\n    handleCylinderAxesChange: () => { },\n    updateUser: () => { },\n    resetUser: () => { },\n    formToShow: 0,\n    switchFormButtons: [],\n    toggleUserForm: () => { },\n    createUser: () => { }\n})\n\nconst UserProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token } = useContext(AuthContext)\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    // ------------------------\n\n    const [user, setUser] = useState(initUserObj)\n    const [users, setUsers] = useState(null)\n    const [totalCount, setTotalCount] = useState(0)\n\n    // ------------------------\n\n    const [isUpdating, setIsUpdating] = useState(false)\n    const [activeIndex, setActiveIndex] = useState(0)\n    const filterItems = [\n        {\n            id: 0,\n            name: \"Zákaznici\",\n            filter: 0,\n        },\n        {\n            id: 1,\n            name: \"Zamestnanci 1\",\n            filter: 1,\n        },\n        {\n            id: 2,\n            name: \"Zamestnanci 2\",\n            filter: 2,\n        },\n        {\n            id: 3,\n            name: \"Admin 3\",\n            filter: 3,\n        }\n    ]\n\n    // ------------------------\n\n    const [formToShow, setFormToShow] = useState(0)\n    const switchFormButtons = [\n        {\n            name: \"Zákazník\"\n        },\n        {\n            name: \"Admin\"\n        }\n    ]\n\n    const toggleUserForm = (e, idx) => {\n        e.preventDefault()\n        setFormToShow(idx)\n    }\n\n    // ------------------------\n\n\n    const handleChangeFilterItem = (itemIndex) => {\n        setActiveIndex(itemIndex)\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        setUser({\n            ...user,\n            [name]: value\n        })\n    }\n\n    const handleDioptersChange = (e, idx) => {\n        let arr = user.lenses.diopters\n        arr[idx] = Number(e.target.value)\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                diopters: arr\n            }\n        })\n    }\n\n    const handleDistanceChange = (e, idx) => {\n        let arr = user.lenses.distance\n        arr[idx] = Number(e.target.value)\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                distance: arr\n            }\n        })\n    }\n\n    const handleCylinderChange = (e, idx) => {\n        let arr = user.lenses.cylinder\n        arr[idx] = Number(e.target.value)\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                cylinder: arr\n            }\n        })\n    }\n\n\n    const handleCylinderAxesChange = (e, idx) => {\n        let arr = user.lenses.cylinderAxes\n        arr[idx] = Number(e.target.value)\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                cylinderAxes: arr\n            }\n        })\n    }\n\n    useEffect(() => {\n        setUser({\n            ...user,\n            name: user.fName + \" \" + user.lName\n        })\n    }, [user.fName, user.lName])\n\n    const resetUser = () => {\n        setUser({\n            ...initUserObj\n        })\n        setIsUpdating(false)\n        setFormToShow(0)\n    }\n\n    // ------------------------\n    // USER ACTIONS\n    // ------------------------\n\n    // Get all users\n    const getUsers = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetchUsers(token)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                setTotalCount(data.count)\n                setIsLoading(false)\n                closeModal()\n\n            } else {\n                getMessage(data.message)\n                setIsLoading(false)\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n\n    // Get signgle user\n    const getUser = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n        setIsUpdating(true)\n\n        try {\n            const response = await fetchUser(token, id)\n            const data = await response.json()\n\n            if (data.user) {\n                setUser({\n                    ...user,\n                    ...data.user,\n                    lenses: {\n                        cylinder: data.user.lenses.cylinder.length ? data.user.lenses.cylinder : [0, 0],\n                        cylinderAxes: data.user.lenses.cylinderAxes.length ? data.user.lenses.cylinderAxes : [0, 0],\n                        diopters: data.user.lenses.diopters.length ? data.user.lenses.diopters : [0, 0],\n                        distance: data.user.lenses.distance.length ? data.user.lenses.distance : [0, 0],\n                    },\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n                setIsLoading(false)\n                closeModal()\n\n            } else {\n                getMessage(data.message)\n                setIsLoading(false)\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Update user\n    const updateUser = async (user) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(user)\n\n        try {\n            const response = await patchUser(token, user)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                setIsLoading(false)\n                getMessage(data.message)\n                return\n            }\n\n\n            setIsLoading(false)\n            closeModal()\n            push('/dashboard/zakaznici')\n            getUsers()\n            // http://localhost:1000/#/dashboard/zakaznici\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createUser = async (user) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            if (formToShow === 0) {\n                const response = await postUser(token, user)\n                const data = await response.json()\n\n                console.log(data)\n\n                if (data.error) {\n                    getMessage(data.message)\n                    setIsLoading(false)\n                    return\n                }\n\n                setIsLoading(false)\n                getUsers()\n                push('/dashboard/zakaznici')\n                closeModal()\n\n            } else {\n                const response = await postAdmin(token, user)\n                const data = await response.json()\n\n                console.log(data)\n\n                if (data.error) {\n                    getMessage(data.message)\n                    setIsLoading(false)\n                    return\n                }\n\n                setIsLoading(false)\n                getUsers()\n                push('/dashboard/zakaznici')\n                closeModal()\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <UserContext.Provider\n            value={{\n                isUpdating,\n                activeIndex,\n                handleChangeFilterItem,\n                filterItems,\n                users,\n                user,\n                totalCount,\n                getUsers,\n                getUser,\n                handleChange,\n                handleDioptersChange,\n                handleDistanceChange,\n                handleCylinderChange,\n                handleCylinderAxesChange,\n                updateUser,\n                resetUser,\n                formToShow,\n                switchFormButtons,\n                toggleUserForm,\n                createUser\n            }}\n        >\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserProvider","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const OrderContainer = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 25rem;\n\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    padding: 2rem;\n\n    &:not(:last-child) {\n        margin-bottom: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n\n    }\n`\n\nexport const OrderContent = styled.div`\n    h2 {\n        font-size: 1.6rem;\n    }\n`\n\nexport const OrderId = styled.p`\n    font-size: 1.2rem;\n    color: gray;\n    margin-bottom: 2rem;\n`\n\nexport const Date = styled.p`\n    font-size: 1.4rem;\n    /* font-weight: 700; */\n    color: gray;\n    margin-bottom: 2rem;\n`\n\nexport const Price = styled.p`\n    font-weight: 700;\n    font-size: 1.8rem;\n`\n\nexport const Options = styled.div`\n    align-self: end;\n    justify-self: end;\n`\n\nexport const UpdateButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    margin-right: 1rem;\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    background-color: rgb(235, 172, 1);\n`","import React from 'react'\n\nimport {\n    OrderContainer,\n    OrderContent,\n    Options,\n    OrderId,\n    Date,\n    DeleteButton,\n    Price,\n    UpdateButton\n} from './order-overview.styles'\n\nconst OrderOverview = (props) => {\n    const { name, id, date, totalPrice } = props\n\n    return (\n        <OrderContainer>\n\n            <OrderContent>\n                <h2>{name}</h2>\n                <OrderId>{id}</OrderId>\n                <Date>{date}</Date>\n                <Price>{totalPrice}€</Price>\n            </OrderContent>\n\n            <Options>\n                <UpdateButton>\n                    Upraviť\n                </UpdateButton>\n                <DeleteButton>\n                    Vymazať\n                </DeleteButton>\n            </Options>\n\n        </OrderContainer>\n    )\n}\n\nexport default OrderOverview\n","import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nexport const Title = styled.h3`\n    margin-top: 2rem;\n    /* margin-bottom: 2rem; */\n`\n\nexport const ToggleOptionsContainer = styled.div`\n    display: flex;\n    width: 25rem;\n    justify-content: space-between;\n    margin: 2rem auto;\n`\n\nexport const ToggleFormButton = styled(CustomButton)`\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"#000\"};\n    font-weight: 700;\n`","import React from 'react'\n\nimport {\n    Title,\n    ToggleFormButton,\n    ToggleOptionsContainer\n} from './custom-form-switch.styles'\n\nconst CustomFormSwitch = ({ title, activeIndex, handleClick, items }) => {\n    return (\n        <React.Fragment>\n            <Title>{title}</Title>\n            <ToggleOptionsContainer>\n                {\n                    items.map((item, idx) => (\n                        <ToggleFormButton key={idx} isActive={activeIndex === idx} onClick={(e) => handleClick(e, idx)}>{item.name}</ToggleFormButton>\n                    ))\n                }\n            </ToggleOptionsContainer>\n        </React.Fragment>\n    )\n}\n\nexport default CustomFormSwitch\n"],"sourceRoot":""}
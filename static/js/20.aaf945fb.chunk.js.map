{"version":3,"sources":["sections/post/post.styles.jsx","sections/post/post.section.jsx","context/blog/blog.queries.jsx","context/blog/blog.context.jsx"],"names":["Header","styled","div","paddingStyles","GridContainer","Container","PostImage","hasImage","DeleteButton","CustomButtom","AddButton","Title","h2","ContentTextare","ReactQuill","CustomUndo","viewBox","className","points","d","CustomRedo","Size","Quill","import","whitelist","register","Font","modules","toolbar","container","handlers","undo","this","quill","history","redo","delay","maxStack","userOnly","formats","QuillToolbar","id","defaultValue","value","PostSection","useParams","push","useHistory","useContext","BlogContext","createPost","isLoading","message","showLoading","setIsLoading","getPost","post","handlePostUpdate","resetBlog","ImageContext","selectedImage","setSelectedImage","useState","title","setTitle","description","setDescription","content","setContent","image","setImage","draft","toggleDraft","showImageModal","setImageModal","isUpdating","setIsUpdating","useEffect","name","html","_id","onSubmit","e","preventDefault","length","loading","close","label","isActive","handleClick","prevValue","type","handleChange","target","required","rows","onClick","src","process","imagePath","alt","onChange","fetchSinglePost","fetch","createNewPost","token","img","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","redirect","updatePost","deletePost","createContext","posts","postsCount","getPosts","handlePostDelete","BlogProvider","children","AuthContext","LoadingModalContext","getMessage","setShowModal","setPosts","setPost","setPostsCount","a","response","json","data","blogs","count","blog","console","log","postResponse","postData","Provider"],"mappings":"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","file":"static/js/20.aaf945fb.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\nimport CustomButtom from '../../components/custom-button/custom-button.component'\nimport ReactQuill from 'react-quill';\n\n\nexport const Header = styled.div`\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n    color: var(--primary-text-color);\n`\n\nexport const GridContainer = styled.div`\n    display: grid;\n    align-items: start;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 2rem;\n    height: inherit;\n    height: 100%;\n\n        @media all and (max-width: 800px) {\n            grid-template-columns: 1fr ;\n        }\n\n`\n\nexport const Container = styled.div`\n    padding: 2rem;\n    background-color: var(--container-background-color);\n    box-shadow: var(--container-shadow);\n`\n\nexport const PostImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    width: 100%;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin-top: 3rem;\n    padding: 6rem;\n\n    position: relative;\n\n    img {\n        position: absolute;\n        width: 100%;\n        /* height: 100%; */\n        max-height: 40rem;\n        left: 0;\n        top: 0;\n        object-fit: cover;\n        object-position: center;\n\n    }\n`\n\nexport const DeleteButton = styled(CustomButtom)`\n    font-size: 1.4rem;\n    margin: 0 2rem;\n    background-color: var(--color-red);\n\n    @media all and (max-width: 500px) {\n        margin: 0 .8rem;\n    }\n`\nexport const AddButton = styled(CustomButtom)`\n    font-size: 1.4rem;\n`\n\nexport const Title = styled.h2`\n    margin-bottom: 2rem;\n`\n\nexport const ContentTextare = styled(ReactQuill)`\n    height: 50rem;\n    background-color: var(--input-background-color);\n    color: var(--input-color);\n    \n    .ql-container, .ql-toolbar {\n        border: none;\n    }\n`\n","import React, { useState, useContext, useEffect } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport CustomTextarea from '../../components/custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport { Quill } from 'react-quill'\n\nimport {\n    FixedContainer\n} from '../../global.styles'\n\n\nimport {\n    Header,\n    GridContainer,\n    PostImage,\n    DeleteButton,\n    AddButton,\n    Title,\n    ContentTextare,\n    Container,\n} from './post.styles'\n\nconst PostSection = () => {\n    const { id } = useParams()\n    const { push } = useHistory()\n    const {\n        createPost,\n        isLoading,\n        message,\n        showLoading,\n        setIsLoading,\n        getPost,\n        post,\n        handlePostUpdate,\n        resetBlog\n    } = useContext(BlogContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [content, setContent] = useState('')\n    const [image, setImage] = useState('')\n    const [draft, toggleDraft] = useState(false)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (image.length <= 0) return\n        if (content.length <= 0) return\n\n        if (id === 'novy-prispevok') {\n            createPost(image, title, description, draft, content)\n        } else {\n            handlePostUpdate(title, description, draft, content, image, id)\n        }\n\n        push('/dashboard/blog')\n\n    }\n\n    useEffect(() => {\n        setSelectedImage(null)\n\n        if (id !== 'novy-prispevok') {\n            getPost(id)\n            setIsUpdating(true)\n        }\n    }, [id])\n\n    useEffect(() => {\n        if (id !== 'novy-prispevok') {\n            if (post) {\n                setTitle(post.name)\n                setDescription(post.description)\n                setContent(post.html)\n                toggleDraft(post.draft)\n                if (post.image) {\n                    setImage(post.image._id)\n                    setSelectedImage(post.image)\n                }\n            }\n        }\n    }, [post])\n\n    useEffect(() => {\n        return () => {\n            resetBlog()\n            setTitle('')\n            setDescription('')\n            setContent('')\n            setImage('')\n            toggleDraft(false)\n            setImageModal(false)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {isLoading && <Popup loading={showLoading} title={message} close={() => setIsLoading(false)} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={setImage} />}\n\n            <Header>\n                <FixedContainer>\n                    <div>\n                        <h1>Post</h1>\n                    </div>\n                    <div>\n                        <CustomCheckbox\n                            label='Draft'\n                            isActive={draft}\n                            handleClick={() => toggleDraft(prevValue => !prevValue)}\n                        />\n                        <DeleteButton>Vymazať</DeleteButton>\n                        <AddButton type='submit'>{isUpdating ? \"Upraviť príspevok\" : \"Pridať príspevok\"}</AddButton>\n                    </div>\n\n                </FixedContainer>\n            </Header>\n\n            <ScrollContainer>\n\n                <GridContainer>\n                    <Container>\n                        <h2>Informácia</h2>\n                        <CustomInput\n                            label=\"Nadpis\"\n                            type='text'\n                            name='title'\n                            value={title}\n                            handleChange={(e) => setTitle(e.target.value)}\n                            required\n                        />\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={description}\n                            handleChange={(e) => setDescription(e.target.value)}\n                            required\n                        />\n                        <h2>Titulná fotka</h2>\n                        <PostImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </PostImage>\n                    </Container>\n                    <Container>\n                        <Title>Obsah</Title>\n                        <QuillToolbar />\n                        <ContentTextare\n                            value={content}\n                            onChange={setContent}\n                            modules={modules}\n                            formats={formats}\n                        />\n                    </Container>\n\n                </GridContainer>\n\n            </ScrollContainer>\n        </form>\n    )\n}\n\n\nconst CustomUndo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n        />\n    </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n        />\n    </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n    this.quill.history.undo();\n}\nfunction redoChange() {\n    this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n    \"arial\",\n    \"comic-sans\",\n    \"courier-new\",\n    \"georgia\",\n    \"helvetica\",\n    \"lucida\"\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nconst modules = {\n    toolbar: {\n        container: \"#toolbar\",\n        handlers: {\n            undo: undoChange,\n            redo: redoChange\n        }\n    },\n    history: {\n        delay: 500,\n        maxStack: 100,\n        userOnly: true\n    }\n};\n\n// Formats objects for setting up the Quill editor\nconst formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"align\",\n    \"strike\",\n    \"script\",\n    \"blockquote\",\n    \"background\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"color\",\n    \"code-block\"\n];\n\n// Quill Toolbar component\nconst QuillToolbar = () => (\n    <div id=\"toolbar\" className=\"toolbar\">\n        <span className=\"ql-formats\">\n            <select className=\"ql-size\" defaultValue=\"medium\">\n                <option value=\"extra-small\">Size 1</option>\n                <option value=\"small\">Size 2</option>\n                <option value=\"medium\">Size 3</option>\n                <option value=\"large\">Size 4</option>\n            </select>\n            <select className=\"ql-header\" defaultValue=\"3\">\n                <option value=\"1\">Heading</option>\n                <option value=\"2\">Subheading</option>\n                <option value=\"3\">Normal</option>\n            </select>\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n        </span>\n        <span className=\"ql-formats\">\n            <select className=\"ql-align\" />\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n                <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n                <CustomRedo />\n            </button>\n        </span>\n    </div>\n);\n\n\nexport default PostSection\n","\n\nexport const fetchPosts = () => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/blogs`)\n}\n\nexport const fetchSinglePost = (id) => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/blogs/${id}`)\n}\n\nexport const createNewPost = (token, name, description, draft, html, img) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify({ \"name\": name, \"description\": description, \"draft\": draft, \"html\": html, 'image': img });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs`, requestOptions)\n}\n\nexport const updatePost = (token, name, description, draft, html, img, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify({ \"name\": name, \"description\": description, \"draft\": draft, \"html\": html, 'image': img });\n\n    const requestOptions = {\n        method: 'PATCH',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs/${id}`, requestOptions)\n\n}\n\nexport const deletePost = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const requestOptions = {\n        method: 'DELETE',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs/${id}`, requestOptions)\n\n}\n\n","import React, { createContext, useState, useContext } from 'react'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport {\n    fetchPosts,\n    createNewPost,\n    fetchSinglePost,\n    updatePost,\n    deletePost,\n} from './blog.queries'\n\n\nexport const BlogContext = createContext({\n    posts: null,\n    post: null,\n    postsCount: 0,\n    getPosts: () => { },\n    createPost: () => { },\n    getPost: () => { },\n    handlePostUpdate: () => { },\n    handlePostDelete: () => { },\n    resetBlog: () => { }\n})\n\nconst BlogProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const [posts, setPosts] = useState(null)\n    const [post, setPost] = useState(null)\n    const [postsCount, setPostsCount] = useState(0)\n\n    const getPosts = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const response = await fetchPosts()\n        const data = await response.json()\n\n        setPosts(data.blogs)\n        setPostsCount(data.count)\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const getPost = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n\n            const response = await fetchSinglePost(id)\n            const data = await response.json()\n\n            if (data.blog) {\n                setPost(data.blog)\n                setIsLoading(false)\n                getMessage(data.message)\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n            // setPosts(data.blogs)\n            // setPostsCount(data.count)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const createPost = async (img, name, description, draft, html) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await createNewPost(token, name, description, draft, html, img)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostUpdate = async (name, description, draft, html, img, id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await updatePost(token, name, description, draft, html, img, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostDelete = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await deletePost(token, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const resetBlog = () => {\n        setPost(null)\n    }\n\n    return (\n        <BlogContext.Provider\n            value={{\n                posts,\n                post,\n                postsCount,\n                getPosts,\n                createPost,\n                getPost,\n                handlePostUpdate,\n                handlePostDelete,\n                resetBlog,\n            }}\n        >\n            {children}\n        </BlogContext.Provider>\n    )\n}\n\nexport default BlogProvider"],"sourceRoot":""}
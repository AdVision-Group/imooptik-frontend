{"version":3,"sources":["context/image/image.queries.jsx","context/image/image.context.jsx"],"names":["uploadImage","token","img","imgName","imgAlt","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","redirect","fetch","process","fetchFilteredImages","limit","skip","sortBy","dateCreated","deleteImage","id","ImageContext","createContext","isDisabled","images","selectedImage","getImages","handleImage","handleDeleteImage","setSelectedImage","getNextImages","getPrevImage","ImageProvider","children","useContext","LoadingModalContext","getMessage","setIsLoading","setShowModal","closeModal","AuthContext","useState","setIsDisabled","setImages","setSkip","setImage","close","a","response","json","data","console","log","image","_id","addToSkip","length","message","e","preventDefault","respone","Provider","value"],"mappings":"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","file":"static/js/30.24ca1d56.chunk.js","sourcesContent":["export const uploadImage = (token, img, imgName, imgAlt) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({ \"name\": imgName || \" \", \"alt\": imgAlt || \" \", 'image': img });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/images/upload`, requestOptions)\n}\n\nexport const fetchImages = () => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/images`)\n}\n\nexport const fetchFilteredImages = (token, limit, skip) => {\n    const myHeaders = new Headers();\n    // myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        sortBy: {\n            dateCreated: -1\n        },\n        limit,\n        skip\n    });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/images/filter`, requestOptions)\n}\n\nexport const deleteImage = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n    const requestOptions = {\n        method: 'DELETE',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/images/${id}`, requestOptions)\n}","import React, { createContext, useState, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport { deleteImage, fetchImages, uploadImage, fetchFilteredImages } from './image.queries'\n\nexport const ImageContext = createContext({\n    isDisabled: false,\n    images: null,\n    selectedImage: null,\n    getImages: () => { },\n    handleImage: () => { },\n    handleDeleteImage: () => { },\n    setSelectedImage: () => { },\n    getNextImages: () => { },\n    getPrevImage: () => { }\n})\n\nconst ImageProvider = ({ children }) => {\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const { token } = useContext(AuthContext)\n\n    const [isDisabled, setIsDisabled] = useState(false)\n    const [images, setImages] = useState(null)\n    const [selectedImage, setSelectedImage] = useState(null)\n    const [limit, setLimit] = useState(4)\n    const [skip, setSkip] = useState(0)\n\n    const handleImage = async (img, imgName, imgAlt, setImage, close) => {\n        setShowModal(true)\n        setIsLoading(true)\n        setIsDisabled(true)\n\n        try {\n            const response = await uploadImage(token, img, imgName, imgAlt)\n            const data = await response.json()\n            console.log(data)\n\n            if (data.image) {\n                setSelectedImage(data.image)\n                setImage(data.image._id)\n                getImages()\n                close()\n            }\n\n            setShowModal(false)\n            setIsLoading(false)\n            setIsDisabled(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n            setIsDisabled(false)\n        }\n    }\n\n    const getNextImages = async (addToSkip) => {\n        try {\n            if (images.length !== limit) return\n\n            const response = await fetchFilteredImages(token, limit, skip + addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip + addToSkip)\n            }\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getPrevImage = async (addToSkip) => {\n        if (skip === 0) return\n        try {\n            const response = await fetchFilteredImages(token, limit, skip - addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip - addToSkip)\n\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getImages = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            // const response = await fetchImages()\n            const response = await fetchFilteredImages(token, limit, skip)\n\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n            closeModal()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleDeleteImage = async (id, e) => {\n        e.preventDefault()\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const respone = await deleteImage(token, id)\n            const data = await respone.json()\n\n            getMessage(data.message)\n            setIsLoading(false)\n            getImages()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <ImageContext.Provider\n            value={{\n                isDisabled,\n                images,\n                selectedImage,\n                getImages,\n                handleImage,\n                handleDeleteImage,\n                setSelectedImage,\n                getNextImages,\n                getPrevImage\n            }}\n        >\n            {children}\n        </ImageContext.Provider>\n    )\n}\n\nexport default ImageProvider"],"sourceRoot":""}
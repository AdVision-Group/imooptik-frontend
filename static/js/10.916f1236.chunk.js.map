{"version":3,"sources":["sections/blog-posts/blog-posts.styles.jsx","sections/blog-posts/blog-posts.section.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","hooks/useFetch.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","components/section-navbar/section-navbar.styles.jsx","components/section-navbar/section-navbar.component.jsx","components/section-header/section-header.styles.jsx","components/section-header/section-header.component.jsx","components/list-arrows/list-arrows.styles.jsx","components/list-arrows/list-arrows.component.jsx","context/blog/blog.queries.jsx","context/blog/blog.context.jsx"],"names":["PostContainer","styled","div","PostImage","PostContent","Options","UpdateButton","CustomButton","DeleteButton","BlogPosts","useContext","LoadingModalContext","closeModal","isLoading","message","showModal","BlogContext","postsCount","handlePostDelete","push","useHistory","useState","posts","setPosts","limit","sortBy","date","filterQuery","setFilterQuery","searchQuery","setSearchQuery","activeIndex","setActiveIndex","blogsData","useFetchByQuery","useEffect","refetch","response","blogs","loading","title","close","handleChange","e","target","value","handleSearch","query","handleAddButton","count","items","id","name","length","map","post","image","src","process","imagePath","alt","description","onClick","_id","postID","listItems","shrinkLabel","css","InputGroup","CustomInput","label","otherProps","className","onChange","htmlFor","useFetch","path","skip","method","setResponse","error","setError","setMessage","setIsLoading","refetchIndex","setRefetchIndex","prevRefetchIndex","requestOptions","redirect","a","fetch","res","json","data","fetchData","queryObj","myHeaders","Headers","append","localStorage","getItem","raw","JSON","stringify","headers","body","useFetchById","Container","paddingStyles","FixedContainer","ScrollContainer","children","NavbarContainer","NavButton","active","SectionNavbar","item","HeaderContainer","Left","Right","SearchButton","AddButton","SectionHeader","type","onKeyPress","key","ArrowsContainer","IconContainer","button","ListArrows","handleClickPrev","handleClickNext","isDisablePrev","setIsDisablePrev","isDisableNext","setIsDisableNext","currentPage","setCurrentPage","prevValue","disabled","fetchSinglePost","createNewPost","token","draft","html","img","updatePost","deletePost","createContext","getPosts","createPost","getPost","handlePostUpdate","resetBlog","BlogProvider","AuthContext","getMessage","setShowModal","setPost","setPostsCount","blog","console","log","postResponse","postData","Provider"],"mappings":"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","file":"static/js/10.916f1236.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport CustomButton from '../../components/custom-button/custom-button.component'\r\n\r\nexport const PostContainer = styled.div`\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: 25rem 1fr 25rem;\r\n\r\n    box-shadow: var(--container-shadow);\r\n    background-color: var(--container-background-color);\r\n    padding: 2rem;\r\n\r\n    &:not(:last-child) {\r\n        margin-bottom: 2rem;\r\n    }\r\n\r\n        @media all and (max-width: 800px) {\r\n        grid-template-columns : 20rem 1fr;\r\n        grid-template-rows: 1fr 1fr;\r\n\r\n        @media all and (max-width: 500px) {\r\n            grid-template-columns : 1fr;\r\n            grid-template-rows: unset;\r\n        }\r\n    }\r\n`\r\n\r\nexport const PostImage = styled.div`\r\n    height: 15rem;\r\n    /* width: 100%; */\r\n    /* height: 100%; */\r\n    margin-right: 2rem;\r\n\r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-position: center;\r\n        object-fit: cover;\r\n    }\r\n\r\n        @media all and (max-width: 800px) {\r\n        align-self: start;\r\n        grid-row-start: 1;\r\n        grid-row-end: 3;   \r\n\r\n        @media all and (max-width: 500px) {\r\n            justify-self: center;\r\n            margin-bottom: 2rem;\r\n        }\r\n\r\n    }\r\n`\r\n\r\nexport const PostContent = styled.div`\r\n    h2 {\r\n        font-size: 1.6rem;\r\n    }\r\n\r\n    p {\r\n        font-size: 1.4rem;\r\n        color: gray;\r\n    }\r\n\r\n        @media all and (max-width: 500px) {\r\n            margin-bottom: 2rem;\r\n        }\r\n`\r\n\r\nexport const Options = styled.div`\r\n    align-self: end;\r\n    justify-self: end;\r\n`\r\n\r\nexport const UpdateButton = styled(CustomButton)`\r\n    font-size: 1.4rem;\r\n    margin-right: 1rem;\r\n`\r\n\r\nexport const DeleteButton = styled(CustomButton)`\r\n    font-size: 1.4rem;\r\n    background-color: rgb(235, 172, 1);\r\n`","import React, { useState, useEffect, useContext } from 'react'\r\nimport { BlogContext } from '../../context/blog/blog.context'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\r\n\r\nimport SectionHeader from '../../components/section-header/section-header.component'\r\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\r\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\r\nimport Popup from '../../components/popup/pop-up.component'\r\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\r\n\r\nimport { useFetchByQuery } from '../../hooks/useFetch'\r\n\r\nimport {\r\n    FixedContainer,\r\n    FlexContainer\r\n} from '../../global.styles'\r\n\r\nimport {\r\n    PostContainer,\r\n    PostImage,\r\n    PostContent,\r\n    Options,\r\n    UpdateButton,\r\n    DeleteButton\r\n} from './blog-posts.styles'\r\n\r\nconst BlogPosts = () => {\r\n    const {\r\n        closeModal,\r\n        isLoading,\r\n        message,\r\n        showModal\r\n    } = useContext(LoadingModalContext)\r\n    const { postsCount, handlePostDelete } = useContext(BlogContext)\r\n    const { push } = useHistory()\r\n\r\n    const [posts, setPosts] = useState([])\r\n\r\n    const [filterQuery, setFilterQuery] = useState({\r\n        limit: 10,\r\n        sortBy: {\r\n            date: -1\r\n        },\r\n        // query: \"\"\r\n    })\r\n    const [searchQuery, setSearchQuery] = useState('')\r\n\r\n\r\n\r\n    const [activeIndex, setActiveIndex] = useState(0)\r\n    const items = [\r\n        {\r\n            id: 0,\r\n            name: \"Zostupne\"\r\n        },\r\n        {\r\n            id: 1,\r\n            name: \"Vzostupne\"\r\n        },\r\n    ]\r\n\r\n    const blogsData = useFetchByQuery('api/blogs/filter', filterQuery)\r\n\r\n    const handleSearch = () => {\r\n        if (searchQuery !== '') {\r\n            setFilterQuery({\r\n                limit: 10,\r\n                sortBy: {\r\n                    date: -1\r\n                },\r\n                query: searchQuery\r\n            })\r\n            blogsData.refetch()\r\n        }\r\n    }\r\n\r\n    const handlePostDeleteClick = (postID) => {\r\n        handlePostDelete(postID)\r\n        blogsData.refetch()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searchQuery === '') {\r\n            setFilterQuery({\r\n                limit: 10,\r\n                sortBy: {\r\n                    date: -1\r\n                },\r\n            })\r\n            blogsData.refetch()\r\n        }\r\n    }, [searchQuery])\r\n\r\n    useEffect(() => {\r\n        if (activeIndex === 0) {\r\n            setFilterQuery({\r\n                limit: 10,\r\n                sortBy: {\r\n                    date: -1\r\n                },\r\n                // query: \"\"\r\n            })\r\n            blogsData.refetch()\r\n        } else {\r\n            setFilterQuery({\r\n                limit: 10,\r\n                sortBy: {\r\n                    date: 1\r\n                },\r\n                // query: \"\"\r\n            })\r\n            blogsData.refetch()\r\n        }\r\n    }, [activeIndex])\r\n\r\n    useEffect(() => {\r\n        if (!blogsData.isLoading) {\r\n            setPosts(blogsData.response?.blogs)\r\n        }\r\n    }, [blogsData.isLoading])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            closeModal()\r\n            setSearchQuery('')\r\n            setActiveIndex(0)\r\n            setPosts([])\r\n            setFilterQuery({\r\n                limit: 10,\r\n                sortBy: {\r\n                    date: -1\r\n                },\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <section>\r\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\r\n\r\n            <SectionHeader\r\n                searchQuery={searchQuery}\r\n                handleChange={e => setSearchQuery(e.target.value)}\r\n                handleSearch={handleSearch}\r\n                handleAddButton={() => push('blog/novy-prispevok')}\r\n                count={postsCount}\r\n                title=\"Blog\"\r\n            />\r\n            <FlexContainer>\r\n                <FixedContainer>\r\n\r\n                    <SectionNavbar\r\n                        items={items}\r\n                        activeIndex={activeIndex}\r\n                        setActiveIndex={setActiveIndex}\r\n                    />\r\n\r\n                </FixedContainer>\r\n\r\n            </FlexContainer>\r\n\r\n            <ScrollContainer>\r\n                {posts && posts.length ? posts.map(post => (\r\n                    <PostContainer key={post._id}>\r\n                        <PostImage>\r\n                            {post.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${post.image.imagePath}`} alt={post.image.alt} />}\r\n                        </PostImage>\r\n                        <PostContent>\r\n                            <h2>{post.name}</h2>\r\n                            <p>{post.description}</p>\r\n                        </PostContent>\r\n                        <Options>\r\n                            <UpdateButton onClick={() => push(`blog/${post._id}`)}>Upraviť</UpdateButton>\r\n                            <DeleteButton onClick={() => handlePostDeleteClick(post._id)}>Vymazať</DeleteButton>\r\n                        </Options>\r\n                    </PostContainer>\r\n                )) : (\r\n                        <div>\r\n                            Žiadne príspevky\r\n                        </div>\r\n                    )}\r\n\r\n                <ListArrows\r\n                    listItems={posts}\r\n                />\r\n            </ScrollContainer>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default BlogPosts\r\n","import styled, { css } from \"styled-components\"\r\n\r\nconst shrinkLabel = css`\r\n    left: .5rem;\r\n    top: -14px;\r\n    font-size: 12px;\r\n    color: var(--input-color);\r\n`\r\nexport const InputGroup = styled.div`\r\n    position: relative;\r\n\r\n    /* margin: 45px 0; */\r\n\r\n    .form-input {\r\n        /* background: none; */\r\n        background-color: var(--input-background-color);\r\n        color: var(--input-color);\r\n        font-size: 1.5rem;\r\n        padding: 1rem .5rem 1rem 2rem;\r\n        display: block;\r\n        width: 100%;\r\n        border: none;\r\n        border-radius: .5rem;\r\n        /* border-bottom: 1px solid #000; */\r\n        margin: 2rem 0 0;\r\n        font-family: inherit;\r\n\r\n        &:focus {\r\n        outline: none;\r\n        }\r\n\r\n        &:focus ~ .form-input-label {\r\n            ${shrinkLabel}\r\n        }\r\n    }\r\n\r\n    input[type = 'password'] {\r\n        letter-spacing: 0.3em;\r\n    }\r\n\r\n    .form-input-label {\r\n        color: var(--input-color);\r\n        font-size: 1.4rem;\r\n        font-weight: normal;\r\n        position: absolute;\r\n        pointer-events: none;\r\n        left: 1.5rem;\r\n        top: 1rem;\r\n        transition: 300ms ease all;\r\n\r\n        &.shrink {\r\n            ${shrinkLabel}\r\n        }\r\n    }\r\n\r\n    @media all and (max-width: 500px) {\r\n        .form-input {\r\n            font-size: 1.4rem;\r\n        }\r\n        /* padding: 1rem .5rem 1rem 2rem; */\r\n    }\r\n`\r\n","import React from 'react'\r\n\r\nimport { InputGroup } from './custom-input.styles'\r\n\r\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\r\n    return (\r\n        <InputGroup>\r\n            <input\r\n                className='form-input'\r\n                name={name}\r\n                onChange={handleChange}\r\n                {...otherProps}\r\n            />\r\n            {label ? (\r\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\r\n                    {label}\r\n                </label>\r\n            ) : null\r\n            }\r\n        </InputGroup>\r\n    )\r\n}\r\n\r\nexport default CustomInput","import { useEffect, useState } from 'react'\r\n\r\nexport const useFetch = (path, skip = false, method = \"GET\") => {\r\n    const [response, setResponse] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [message, setMessage] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [refetchIndex, setRefetchIndex] = useState(0)\r\n\r\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\r\n\r\n    const requestOptions = {\r\n        method: method,\r\n        // headers: myHeaders,\r\n        // body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            if (skip) return\r\n            setIsLoading(true)\r\n            try {\r\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\r\n                const data = await res.json()\r\n\r\n                setMessage(data.message)\r\n                setResponse(data)\r\n                setIsLoading(false)\r\n            } catch (err) {\r\n                setError(err)\r\n                setIsLoading(false)\r\n                setMessage(\"Niečo sa pokazilo\")\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [refetchIndex])\r\n\r\n    return { response, isLoading, error, message, refetch }\r\n}\r\n\r\nexport const useFetchByQuery = (path, queryObj, skip = false) => {\r\n    const [response, setResponse] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [refetchIndex, setRefetchIndex] = useState(0)\r\n\r\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    const raw = JSON.stringify(queryObj)\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            if (skip) return\r\n            setIsLoading(true)\r\n            try {\r\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\r\n                const data = await res.json()\r\n\r\n                setResponse(data)\r\n                setIsLoading(false)\r\n            } catch (err) {\r\n                setError(err)\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [refetchIndex, path])\r\n\r\n    return { response, isLoading, error, refetch }\r\n}\r\n\r\nexport const useFetchById = (path, id, skip = false) => {\r\n    const [response, setResponse] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [refetchIndex, setRefetchIndex] = useState(0)\r\n\r\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            if (skip) return\r\n            setIsLoading(true)\r\n            try {\r\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}/${id}`, requestOptions)\r\n                const data = await res.json()\r\n\r\n                setResponse(data)\r\n                setIsLoading(false)\r\n            } catch (err) {\r\n                setError(err)\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [refetchIndex, path, id])\r\n\r\n    return { response, isLoading, error, refetch }\r\n}\r\n","import styled from 'styled-components'\r\nimport { paddingStyles } from '../../global.styles'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    /* height: 100%; */\r\n    overflow-y: scroll;\r\n    overflow-x: visible;\r\n    scroll-behavior: smooth;\r\n    ${paddingStyles};\r\n    padding-top: 1.5rem;\r\n    padding-bottom: 1.5rem;\r\n    color: var(--primary-text-color);\r\n    /* border: 1px solid red; */\r\n\r\n\r\n\r\n\r\n    @media all and (max-width: 1150px) {\r\n        margin-bottom: 8rem;\r\n\r\n        @media all and (max-width: 700px) {\r\n            overflow-x: scroll;\r\n        }\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n\r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        background:  var(--background-primary-color);\r\n    }\r\n\r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: var(--primary-color);\r\n    }\r\n\r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: var(--primary-color);\r\n    }\r\n`\r\n\r\nexport const FixedContainer = styled.div`\r\n    max-width: 125rem;\r\n    width: 100%;\r\n`","import React from 'react'\r\nimport { Container, FixedContainer } from './scroll-container.styles'\r\n\r\nconst ScrollContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <FixedContainer>\r\n                {children}\r\n            </FixedContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ScrollContainer","import styled from 'styled-components'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport { paddingStyles } from '../../global.styles'\r\n\r\n\r\nexport const NavbarContainer = styled.div`\r\n    margin-bottom: 3rem;\r\n    /* ${paddingStyles} */\r\n\r\n    ul {\r\n        display: flex;\r\n        list-style: none;\r\n\r\n        li {\r\n            margin-right: 1.5rem;\r\n        }\r\n    }\r\n`\r\n\r\nexport const NavButton = styled(CustomButton)`\r\n    transition: all 0.3s ease-out;\r\n    background-color: ${({ active }) => active ? 'var(--primary-color)' : 'var(--background-primary-color)'};\r\n    color: ${({ active }) => active ? '#fff' : 'var(--primary-text-color)'};\r\n    font-weight: ${({ active }) => active ? 400 : 700};\r\n    padding: ${({ active }) => active ? \".5rem 2.5rem\" : \".5rem 1rem .5rem 0\"};\r\n    font-weight: ${({ active }) => active ? \"bolder\" : \"normal\"};\r\n`","import React from 'react'\r\n\r\nimport {\r\n    NavbarContainer,\r\n    NavButton\r\n} from './section-navbar.styles'\r\n\r\nconst SectionNavbar = ({ items, activeIndex, setActiveIndex, ...otherProps }) => {\r\n\r\n    return (\r\n        <NavbarContainer {...otherProps}>\r\n            <ul>\r\n                {\r\n                    items.map(item => (\r\n                        <li key={item.id}>\r\n                            <NavButton active={item.id === activeIndex} onClick={() => setActiveIndex(item.id)} >{item.name}</NavButton>\r\n                        </li>\r\n                    ))\r\n                }\r\n\r\n            </ul>\r\n        </NavbarContainer >\r\n    )\r\n}\r\n\r\nexport default SectionNavbar\r\n","import styled from 'styled-components'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport { paddingStyles } from '../../global.styles'\r\n\r\nexport const HeaderContainer = styled.div`\r\n    color: var(--primary-text-color);\r\n    margin-bottom: 3rem;\r\n    ${paddingStyles};    \r\n    /* max-width: 125rem; */\r\n\r\n\r\n`\r\n\r\nexport const FixedContainer = styled.div`\r\n    max-width: 125rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    @media all and (max-width: 600px) {\r\n        flex-wrap: wrap;\r\n    }\r\n`\r\n\r\nexport const Left = styled.div`\r\n    margin-top: 2rem;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`\r\n\r\nexport const Right = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nexport const Notification = styled.div`\r\n    background-color: var(--color-red);\r\n    margin-left: 1.5rem;\r\n    color: var(--primary-text-color);\r\n    padding: .5rem 1rem;\r\n    border-radius: 1.5rem;\r\n    font-size: 1.4rem;\r\n`\r\n\r\n\r\nexport const SearchButton = styled(CustomButton)`\r\n    margin-top: 2rem;\r\n\r\n    margin-left: 2rem;\r\n`\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n    margin-top: 2rem;\r\n    margin-left: 1rem;\r\n    background-color: var(--primary-color);\r\n    font-weight: bolder;\r\n`","import React from 'react'\r\n\r\nimport CustomInput from '../custom-input/custom-input.component'\r\n\r\nimport {\r\n    HeaderContainer,\r\n    Left,\r\n    Right,\r\n    SearchButton,\r\n    // Notification,\r\n    AddButton,\r\n    FixedContainer\r\n} from './section-header.styles'\r\n\r\nconst SectionHeader = ({ searchQuery, handleSearch, handleChange, title, count = 999, handleAddButton = () => { } }) => {\r\n    const handleSearchOnEnter = (e) => {\r\n        if (searchQuery !== '') {\r\n            if (e.key === 'Enter') {\r\n                handleSearch()\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <HeaderContainer>\r\n            <FixedContainer>\r\n                <Left>\r\n                    <h1>{title}</h1>\r\n                    {/* <Notification>{count}</Notification> */}\r\n                </Left>\r\n                <Right>\r\n                    {handleSearch && <div>\r\n                        <CustomInput\r\n                            type='search'\r\n                            name='searchbox'\r\n                            value={searchQuery}\r\n                            handleChange={handleChange}\r\n                            onKeyPress={handleSearchOnEnter}\r\n                            label='Vyhľadať'\r\n                        />\r\n                    </div>}\r\n                    {handleSearch && <SearchButton onClick={handleSearch}>Vyhľadať</SearchButton>}\r\n                    <AddButton onClick={handleAddButton}>Pridať</AddButton>\r\n                </Right>\r\n            </FixedContainer>\r\n        </HeaderContainer>\r\n\r\n    )\r\n}\r\n\r\nexport default SectionHeader\r\n","import styled from 'styled-components'\r\n\r\nexport const ArrowsContainer = styled.div`\r\n    margin-top: 3rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const IconContainer = styled.button`\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: var(--text-primary-color);\r\n    font-size: 3.5rem;\r\n    transition: color .2s ease-in-out;\r\n\r\n    &:hover {\r\n        color: var(--primary-color);\r\n    }\r\n\r\n    &:disabled {\r\n        cursor: default;\r\n        opacity: .35;\r\n\r\n        &:hover {\r\n            color: var(--text-primary-color);\r\n        }\r\n    }\r\n`","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    AiFillLeftCircle,\r\n    AiFillRightCircle\r\n} from 'react-icons/ai'\r\n\r\nimport {\r\n    ArrowsContainer,\r\n    IconContainer\r\n} from './list-arrows.styles'\r\n\r\nconst ListArrows = ({\r\n    listItems = [],\r\n    handleClickPrev = () => { },\r\n    handleClickNext = () => { }\r\n}) => {\r\n    const [isDisablePrev, setIsDisablePrev] = useState(true)\r\n    const [isDisableNext, setIsDisableNext] = useState(true)\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (currentPage === 0) {\r\n            setIsDisablePrev(true)\r\n        } else {\r\n            setIsDisablePrev(false)\r\n            // setCurrentPage(0)\r\n        }\r\n    }, [listItems])\r\n\r\n    useEffect(() => {\r\n        if (listItems?.length < 10) {\r\n            setIsDisableNext(true)\r\n        } else {\r\n            setIsDisableNext(false)\r\n        }\r\n    }, [listItems])\r\n\r\n    useEffect(() => {\r\n        if (currentPage === 0) return\r\n        setCurrentPage(prevValue => prevValue--)\r\n    }, [handleClickPrev])\r\n    useEffect(() => {\r\n        // if (currentPage === 0) return\r\n        setCurrentPage(prevValue => prevValue++)\r\n    }, [handleClickNext])\r\n\r\n    const handlePrev = () => {\r\n        handleClickPrev()\r\n        if (currentPage === 0) return\r\n        setCurrentPage(prevValue => prevValue - 1)\r\n    }\r\n    const handleNext = () => {\r\n        handleClickNext()\r\n        setCurrentPage(prevValue => prevValue + 1)\r\n    }\r\n\r\n    return (\r\n        <ArrowsContainer>\r\n            <IconContainer disabled={isDisablePrev} onClick={handlePrev}>\r\n                <AiFillLeftCircle />\r\n            </IconContainer>\r\n            <IconContainer disabled={isDisableNext} onClick={handleNext}>\r\n                <AiFillRightCircle />\r\n            </IconContainer>\r\n        </ArrowsContainer>\r\n    )\r\n}\r\n\r\nexport default ListArrows\r\n","\r\n\r\nexport const fetchPosts = () => {\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/blogs`)\r\n}\r\n\r\nexport const fetchSinglePost = (id) => {\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/blogs/${id}`)\r\n}\r\n\r\nexport const createNewPost = (token, name, description, draft, html, img) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", token);\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    const raw = JSON.stringify({ \"name\": name, \"description\": description, \"draft\": draft, \"html\": html, 'image': img });\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs`, requestOptions)\r\n}\r\n\r\nexport const updatePost = (token, name, description, draft, html, img, id) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", token);\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    const raw = JSON.stringify({ \"name\": name, \"description\": description, \"draft\": draft, \"html\": html, 'image': img });\r\n\r\n    const requestOptions = {\r\n        method: 'PATCH',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs/${id}`, requestOptions)\r\n\r\n}\r\n\r\nexport const deletePost = (token, id) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", token);\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs/${id}`, requestOptions)\r\n\r\n}\r\n\r\n","import React, { createContext, useState, useContext } from 'react'\r\nimport { AuthContext } from '../auth/auth.context'\r\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\r\nimport {\r\n    fetchPosts,\r\n    createNewPost,\r\n    fetchSinglePost,\r\n    updatePost,\r\n    deletePost,\r\n} from './blog.queries'\r\n\r\n\r\nexport const BlogContext = createContext({\r\n    posts: null,\r\n    post: null,\r\n    postsCount: 0,\r\n    getPosts: () => { },\r\n    createPost: () => { },\r\n    getPost: () => { },\r\n    handlePostUpdate: () => { },\r\n    handlePostDelete: () => { },\r\n    resetBlog: () => { }\r\n})\r\n\r\nconst BlogProvider = ({ children }) => {\r\n    const { token } = useContext(AuthContext)\r\n\r\n    const {\r\n        getMessage,\r\n        setIsLoading,\r\n        setShowModal\r\n    } = useContext(LoadingModalContext)\r\n\r\n    const [posts, setPosts] = useState(null)\r\n    const [post, setPost] = useState(null)\r\n    const [postsCount, setPostsCount] = useState(0)\r\n\r\n    const getPosts = async () => {\r\n        setShowModal(true)\r\n        setIsLoading(true)\r\n\r\n        const response = await fetchPosts()\r\n        const data = await response.json()\r\n\r\n        setPosts(data.blogs)\r\n        setPostsCount(data.count)\r\n\r\n        setShowModal(false)\r\n        setIsLoading(false)\r\n    }\r\n\r\n    const getPost = async (id) => {\r\n        setShowModal(true)\r\n        setIsLoading(true)\r\n\r\n        try {\r\n\r\n            const response = await fetchSinglePost(id)\r\n            const data = await response.json()\r\n\r\n            if (data.blog) {\r\n                setPost(data.blog)\r\n                setIsLoading(false)\r\n                getMessage(data.message)\r\n                return\r\n            }\r\n\r\n            setIsLoading(false)\r\n            getMessage(data.message)\r\n            // setPosts(data.blogs)\r\n            // setPostsCount(data.count)\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n\r\n\r\n        setShowModal(false)\r\n        setIsLoading(false)\r\n    }\r\n\r\n    const createPost = async (img, name, description, draft, html) => {\r\n        setShowModal(true)\r\n        setIsLoading(true)\r\n\r\n        try {\r\n            const postResponse = await createNewPost(token, name, description, draft, html, img)\r\n            const postData = await postResponse.json()\r\n\r\n            getMessage(postData.message)\r\n            setIsLoading(false)\r\n            getPosts()\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const handlePostUpdate = async (name, description, draft, html, img, id) => {\r\n        setShowModal(true)\r\n        setIsLoading(true)\r\n\r\n        try {\r\n            const postResponse = await updatePost(token, name, description, draft, html, img, id)\r\n            const postData = await postResponse.json()\r\n\r\n            getMessage(postData.message)\r\n            setIsLoading(false)\r\n            getPosts()\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const handlePostDelete = async (id) => {\r\n        setShowModal(true)\r\n        setIsLoading(true)\r\n\r\n        try {\r\n            const postResponse = await deletePost(token, id)\r\n            const postData = await postResponse.json()\r\n\r\n            getMessage(postData.message)\r\n            setIsLoading(false)\r\n            getPosts()\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const resetBlog = () => {\r\n        setPost(null)\r\n    }\r\n\r\n    return (\r\n        <BlogContext.Provider\r\n            value={{\r\n                posts,\r\n                post,\r\n                postsCount,\r\n                getPosts,\r\n                createPost,\r\n                getPost,\r\n                handlePostUpdate,\r\n                handlePostDelete,\r\n                resetBlog,\r\n            }}\r\n        >\r\n            {children}\r\n        </BlogContext.Provider>\r\n    )\r\n}\r\n\r\nexport default BlogProvider"],"sourceRoot":""}
{"version":3,"sources":["context/warehouse/warehouse.context.jsx","hooks/slug.jsx","utils/warehouse.utils.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","context/warehouse/warehouse.utils.jsx"],"names":["WarehouseContext","createContext","eanCode","product","lenses","contactLensesParameters","glassesParameters","totalProducts","totalLenses","activePremisesTab","activeCategoryTypeTab","retailPremisesTabs","productCategoryTypeTabs","products","lensesProducts","handleChangeCategoryTypeTab","handleChangePremisesTab","getProductsByQuery","handleProductChange","handleProductAvailableChange","getSingleProduct","createProduct","updateProduct","deleteProduct","getSingleLenses","getLenses","createLenses","updateLenses","deleteLenses","handleLensesChange","handleLensesParameterChange","resetProduct","resetLenses","resetContactLenses","resetGlassesParameters","getEanCode","handleAddNewParameter","handleContactLensesParameterChange","handleGlassesParameterChange","handleGlassesParameterSpecsChange","handleGlassesSizeChange","deactivateMany","WarehouseProvider","children","getSlug","string","a","b","p","RegExp","split","join","useState","slug","setSlug","toString","toLowerCase","replace","c","charAt","indexOf","useEffect","s","useSlug","push","useHistory","useContext","AuthContext","token","isAdmin","currentUser","stats","LoadingModalContext","closeModal","setIsLoading","setShowModal","getMessage","setTotalProducts","setTotalLenses","setEanCode","initProductObj","setProduct","initLensesObj","setLenses","initContactLensesObj","setContactLensesParameters","initGlassesObj","setGlassesParameters","setProducts","setLensesProducts","setActivePremisesTab","setRetailPremisesTabs","categoryTabs","setActiveCategoryTypeTab","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","process","response","json","data","messageSK","console","log","query","raw","JSON","stringify","body","message","id","callback","error","price","toFixed","type","contactLenses","colorCode","specs","size","Array","map","value","idx","productToAdd","diaConvert","replaceAll","trim","finalSlug","name","frameColor","modifiedProduct","formatPrice","link","formatfloatNumber","allowedCurves","allowedDiameters","dioptersRange","limit","skip","sortBy","date","productToUpdate","available","_id","lensesToAdd","lensesToUpdate","modifiedLenses","databObj","filters","retailNamesTabs","filter","tab","premises","formatLink","Provider","e","target","arr","Number","cylinderRange","brands","retailNames","glassesColors","glassesMaterials","glassesShapes","includes","length","number","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","description","brand","soldAmount","image","eshop","category","frameMaterial","frameStyle","lensColor","sex","lensType","dioptric","lensesTypes","productCategories","stringValue","formatAvailable","undefined","style","color","Math","abs","reduce","acc","currValue","checkParameter","parameter","dia","text","convertText","i"],"mappings":"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CyH,EAAGjC,GAAS,IAAD,EAChBiC,EAAEC,OAAlB5B,EADgC,EAChCA,KAAMP,EAD0B,EAC1BA,MACVoC,EAAM7J,GAAkBqH,MAAMW,GAClC6B,EAAInC,GAAiB,KAAVD,EAAe,KAAOA,EACjCxC,GAAqB,2BACdjF,IADa,IAEhBqH,MAAM,2BACCrH,GAAkBqH,OADpB,kBAEAW,EAAO6B,QAg0BR1H,mBAzCR,SA4CKE,M,gCEv7Bb,gRAAO,IAAM2H,EAAS,CAClB,SACA,kBACA,UACA,WACA,YACA,WACA,UACA,eACA,mBACA,UACA,gBACA,OACA,kBACA,OACA,iBACA,SACA,kBACA,QACA,SACA,QACA,iBACA,WACA,QACA,QACA,QACA,UACA,YACA,SACA,aACA,UACA,SACA,cACA,WACA,SACA,SACA,OACA,eACA,WACA,SACA,SACA,WACA,SACA,oBACA,QACA,oBACA,QACA,eACA,UACA,sBACA,QACA,YACA,cACA,WACA,iBACA,UACA,SAoBSC,EAAc,CACvB,QACA,qBACA,0BACA,8BACA,sBACA,8BACA,yBAGSZ,EAAkB,CAC3B,CACIxC,GAAI,EACJmB,KAAM,eAEV,CACInB,GAAI,EACJmB,KAAM,sBAEV,CACInB,GAAI,EACJmB,KAAM,2BAEV,CACInB,GAAI,EACJmB,KAAM,+BAEV,CACInB,GAAI,EACJmB,KAAM,uBAEV,CACInB,GAAI,EACJmB,KAAM,+BAEV,CACInB,GAAI,EACJmB,KAAM,0BAIDkC,EAAgB,CACzB,iBACA,WACA,kBACA,UACA,WACA,gBACA,WACA,aACA,YACA,UACA,cAGSC,EAAmB,CAC5B,YACA,MACA,WACA,OACA,SACA,SAGSC,EAAgB,CACzB,QACA,UACA,WACA,UACA,OACA,WACA,aACA,YACA,2BACA,WACA,qBAGSjC,EAAc,WAAiB,IAAhBnB,EAAe,uDAAP,GAChCA,EAAM/D,WACN,IAAIwE,EAAQ,EACZ,OAAIT,EAAMqD,SAAS,KACoB,IAA/BrD,EAAMpE,MAAM,KAAK,GAAG0H,QACpB7C,EAAQT,EAAMpE,MAAM,KAAK,GAAKoE,EAAMpE,MAAM,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","file":"static/js/0.178b51b1.chunk.js","sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport { useSlug } from '../../hooks/slug'\n\nimport {\n    // premisesTabs,\n    categoryTabs,\n    initLensesObj,\n    initProductObj,\n    formatPrice,\n    diaConvert,\n    initContactLensesObj,\n    initGlassesObj,\n    formatfloatNumber,\n    formatLink,\n} from './warehouse.utils'\n\nimport {\n    retailNamesTabs\n} from '../../utils/warehouse.utils'\n\nexport const WarehouseContext = createContext({\n    eanCode: null,\n    product: {},\n    lenses: {},\n    contactLensesParameters: {},\n    glassesParameters: {},\n    totalProducts: 0,\n    totalLenses: 0,\n    activePremisesTab: 0,\n    activeCategoryTypeTab: 0,\n    retailPremisesTabs: [],\n    productCategoryTypeTabs: [],\n    products: null,\n    lensesProducts: null,\n    handleChangeCategoryTypeTab: () => { },\n    handleChangePremisesTab: () => { },\n    getProductsByQuery: () => { },\n    handleProductChange: () => { },\n    handleProductAvailableChange: () => { },\n    getSingleProduct: () => { },\n    createProduct: () => { },\n    updateProduct: () => { },\n    deleteProduct: () => { },\n    getSingleLenses: () => { },\n    getLenses: () => { },\n    createLenses: () => { },\n    updateLenses: () => { },\n    deleteLenses: () => { },\n    handleLensesChange: () => { },\n    handleLensesParameterChange: () => { },\n    resetProduct: () => { },\n    resetLenses: () => { },\n    resetContactLenses: () => { },\n    resetGlassesParameters: () => { },\n    getEanCode: () => { },\n    handleAddNewParameter: () => { },\n    handleContactLensesParameterChange: () => { },\n    handleGlassesParameterChange: () => { },\n    handleGlassesParameterSpecsChange: () => { },\n    handleGlassesSizeChange: () => { },\n    deactivateMany: () => { },\n})\n\nconst WarehouseProvider = ({ children }) => {\n    const { getSlug } = useSlug()\n    const { push } = useHistory()\n    const { token, isAdmin, currentUser, stats } = useContext(AuthContext)\n    const { closeModal, setIsLoading, setShowModal, getMessage } = useContext(LoadingModalContext)\n\n    const [totalProducts, setTotalProducts] = useState(0)\n    const [totalLenses, setTotalLenses] = useState(0)\n    const [eanCode, setEanCode] = useState(null)\n\n    const [product, setProduct] = useState({ ...initProductObj })\n    const [lenses, setLenses] = useState({ ...initLensesObj })\n    const [contactLensesParameters, setContactLensesParameters] = useState({ ...initContactLensesObj })\n    const [glassesParameters, setGlassesParameters] = useState({ ...initGlassesObj })\n\n    const [products, setProducts] = useState(null)\n    const [lensesProducts, setLensesProducts] = useState(null)\n    const [activePremisesTab, setActivePremisesTab] = useState(0)\n    const [retailPremisesTabs, setRetailPremisesTabs] = useState([])\n\n    const [productCategoryTypeTabs] = useState(categoryTabs)\n    const [activeCategoryTypeTab, setActiveCategoryTypeTab] = useState(0)\n\n    const handleGlassesParameterChange = e => {\n        const { name, value } = e.target\n        setGlassesParameters({\n            ...glassesParameters,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParameterSpecsChange = e => {\n        const { name, value } = e.target\n        setGlassesParameters({\n            ...glassesParameters,\n            specs: {\n                ...glassesParameters.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n        setGlassesParameters({\n            ...glassesParameters,\n            specs: {\n                ...glassesParameters.specs,\n                [name]: arr\n            }\n        })\n\n    }\n\n    const handleAddNewParameter = e => {\n        const { name } = e.target\n        setContactLensesParameters({\n            ...contactLensesParameters,\n            [name]: [...contactLensesParameters[name], 1001]\n        })\n    }\n\n    const handleContactLensesParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n        setContactLensesParameters({\n            ...contactLensesParameters,\n            [name]: arr\n        })\n    }\n\n    const handleProductChange = e => {\n        const { name, value } = e.target\n\n        setProduct({\n            ...product,\n            [name]: value\n        })\n    }\n\n    const handleProductAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setProduct({\n            ...product,\n            [name]: arr\n        })\n    }\n\n    const handleLensesChange = e => {\n        const { name, value } = e.target\n\n        setLenses({\n            ...lenses,\n            [name]: value\n        })\n    }\n\n    const handleLensesParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setLenses({\n            ...lenses,\n            [name]: arr\n        })\n    }\n\n    const resetProduct = () => {\n        setProduct({\n            ...initProductObj,\n            available: [0, 1001, 1001, 1001, 1001, 1001, 1001],\n        })\n        setEanCode(null)\n    }\n\n    const resetLenses = () => {\n        // setLenses({ ...initLensesObj })\n        setLenses({\n            ...initLensesObj,\n            dioptersRange: [1001, 1001],\n            cylinderRange: [1001, 1001],\n        })\n    }\n\n    const resetContactLenses = () => {\n        setContactLensesParameters({\n            ...initContactLensesObj,\n            allowedCurves: [1001],\n            allowedDiameters: [1001],\n            dioptersRange: [1001, 1001]\n        })\n    }\n\n    const resetGlassesParameters = () => {\n        setGlassesParameters({\n            ...initGlassesObj,\n            specs: {\n                ...initGlassesObj.specs,\n                size: [1001, 1001, 1001, 1001]\n            }\n        })\n    }\n\n    const handleChangePremisesTab = (idx) => {\n        setActivePremisesTab(idx)\n    }\n\n    const handleChangeCategoryTypeTab = (idx) => {\n        setActiveCategoryTypeTab(idx)\n    }\n\n\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const getEanCode = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/nextEanCode`, requestOptions)\n            const data = await response.json()\n\n            if (data.eanCode) {\n                setEanCode(data.eanCode)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getProductsByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/filter`, requestOptions)\n            const data = await response.json()\n\n            if (data.products) {\n                setProducts(data.products)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getLenses = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/filter`, requestOptions)\n            const data = await response.json()\n\n            if (data.lenses) {\n                setProducts(data.lenses)\n                setLensesProducts(data.lenses)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getSingleProduct = async (id, callback) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/products/${id}`)\n            const data = await response.json()\n\n            if (data.error === 'not-found') {\n                getSingleLenses(id, () => { })\n            }\n\n            if (data.product) {\n                setProduct({\n                    ...data.product,\n                    price: (data.product.price / 100).toFixed(2)\n                })\n                if (data.product.type === 3) {\n                    setContactLensesParameters({\n                        ...data.product.contactLenses\n                    })\n                } else {\n                    setGlassesParameters({\n                        colorCode: data.product.colorCode ?? \"\",\n                        specs: {\n                            ...data.product.specs,\n                            size: [...Array(4)].map((value, idx) => data.product.specs.size[idx] ? data.product.specs.size[idx] : 0)\n                        }\n                    })\n                }\n                callback(data)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createProduct = async (productToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let linkSize1 = null\n\n        if (productToAdd?.specs?.size) {\n            linkSize1 = diaConvert(productToAdd?.specs?.size[0].toString() || '').replaceAll(\" \", \"-\").replaceAll(\",\", \"-\").replaceAll(\".\", \"-\").toLowerCase().trim()\n        }\n\n        const finalSlug = getSlug(`${productToAdd?.name || \"neuvedene\"}-${productToAdd?.specs?.frameColor || \"neuvedene\"}-${productToAdd?.specs?.size || \"neuvedene\"}`)\n\n        let modifiedProduct = {\n            ...productToAdd,\n            price: formatPrice(productToAdd?.price?.toString() || \"\"),\n            link: finalSlug,\n        }\n\n        if (productToAdd.specs) {\n            if (productToAdd.specs.size) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    specs: {\n                        ...modifiedProduct.specs,\n                        size: productToAdd.specs.size.map(value => value === 1001 ? 0 : formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        if (productToAdd.contactLenses) {\n            if (productToAdd.contactLenses.allowedCurves) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: productToAdd.contactLenses.allowedCurves.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n            if (productToAdd.contactLenses.allowedDiameters) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: productToAdd.contactLenses.allowedDiameters.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n            if (productToAdd.contactLenses.dioptersRange) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: productToAdd.contactLenses.dioptersRange.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedProduct,\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products`, requestOptions)\n            const data = await response.json()\n\n            if (data.product) {\n                push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10,\n                    skip: 0,\n                    sortBy: {\n                        date: -1\n                    }\n                })\n                setEanCode(null)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateProduct = async (productToUpdate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n\n\n        let modifiedProduct = {\n            ...productToUpdate,\n        }\n\n\n        // return\n\n        if (modifiedProduct.price) {\n            modifiedProduct = {\n                ...modifiedProduct,\n                price: formatPrice(productToUpdate.price.toString()),\n            }\n        }\n\n        if (modifiedProduct.available) {\n            if (typeof modifiedProduct.available === \"number\") {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    available: productToUpdate.available\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    available: productToUpdate.available ? productToUpdate.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0, 0, 0]\n                }\n            }\n        }\n\n        // if (productToUpdate.name || productToUpdate?.specs?.frameColor || productToUpdate?.specs?.size) {\n        //     const linkName = diaConvert(productToUpdate?.name || product?.name || \"\").replaceAll(\" \", \"-\").toLowerCase().trim()\n        //     const linkFrameColor = diaConvert(productToUpdate?.specs?.frameColor || product?.specs?.frameColor || '').replaceAll(\" \", \"-\").toLowerCase().trim()\n\n        //     let linkSize1 = null\n\n        //     if (product?.specs?.size) {\n        //         linkSize1 = diaConvert(productToUpdate?.specs?.size[0].toString() || product?.specs?.size[0].toString() || '').replaceAll(\" \", \"-\").replaceAll(\",\", \"-\").replaceAll(\".\", \"-\").toLowerCase().trim()\n        //     }\n\n        //     const slug = linkName + (linkFrameColor ? `-${linkFrameColor}` : \"\") + (linkSize1 !== null ? `-${linkSize1}` : \"\")\n\n        //     const finalSlug = getSlug(slug)\n\n        //     console.log(finalSlug)\n\n        //     modifiedProduct = {\n        //         ...modifiedProduct,\n        //         link: finalSlug\n        //     }\n        // }\n\n        if (productToUpdate.specs) {\n            if (productToUpdate.specs.size) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    specs: {\n                        ...modifiedProduct.specs,\n                        size: productToUpdate.specs.size.map(value => value === 1001 ? 0 : formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        if (productToUpdate.contactLenses) {\n            if (productToUpdate.contactLenses.allowedCurves) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: productToUpdate.contactLenses.allowedCurves.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: contactLensesParameters.allowedCurves\n                    }\n                }\n            }\n\n            if (productToUpdate.contactLenses.allowedDiameters) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: productToUpdate.contactLenses.allowedDiameters.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: contactLensesParameters.allowedDiameters\n                    }\n                }\n            }\n            if (productToUpdate.contactLenses.dioptersRange) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: productToUpdate.contactLenses.dioptersRange.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: contactLensesParameters.dioptersRange\n                    }\n                }\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedProduct,\n        })\n\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/${product._id}`, requestOptions)\n            const data = await response.json()\n\n            if (data.error) {\n                getMessage(data.messageSK)\n                setIsLoading(false)\n                return\n\n            }\n\n            if (data.product) {\n                push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10,\n                    skip: 0,\n                    sortBy: {\n                        date: -1\n                    }\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteProduct = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/${id}`, requestOptions)\n            const data = await response.json()\n\n            if (data.product) {\n                // push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10,\n                    skip: 0,\n                    sortBy: {\n                        date: -1\n                    }\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getSingleLenses = async (id, callback) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/lenses/${id}`)\n            const data = await response.json()\n\n            if (data.lenses) {\n                setLenses(data.lenses)\n                callback(data)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createLenses = async (lensesToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify({\n            ...lensesToAdd,\n            price: formatPrice(lensesToAdd.price.toString())\n        });\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses`, requestOptions)\n            const data = await response.json()\n\n            if (data.lenses) {\n                push('/dashboard/obchod')\n                getLenses({\n                    sortBy: {\n                        date: -1\n                    }\n                })\n                closeModal()\n                return\n            }\n\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateLenses = async (lensesToUpdate, id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let modifiedLenses = {\n            ...lensesToUpdate\n        }\n\n        if (modifiedLenses.price) {\n            modifiedLenses = {\n                ...modifiedLenses,\n                price: formatPrice(lensesToUpdate.price.toString()),\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedLenses,\n        });\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/${id}`, requestOptions)\n            const data = await response.json()\n\n            if (data.lenses) {\n                push('/dashboard/obchod')\n                getLenses({\n                    sortBy: {\n                        date: -1\n                    }\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteLenses = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/${id}`, requestOptions)\n            const data = await response.json()\n\n            if (data.lenses) {\n                getLenses({\n                    sortBy: {\n                        date: -1\n                    }\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deactivateMany = async (databObj) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(databObj);\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/deactivateMany`, requestOptions)\n            const data = await response.json()\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (products) {\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    limit: 10,\n                    skip: 0,\n                    sortBy: {\n                        date: -1\n                    }\n                })\n            } else if (activeCategoryTypeTab === 1) {\n                getLenses({\n                    sortBy: {\n                        date: -1\n                    }\n                })\n            } else {\n                getProductsByQuery({\n                    limit: 10,\n                    filters: {\n                        type: 3\n                    },\n                    sortBy: {\n                        date: -1\n                    }\n                })\n            }\n        }\n    }, [activeCategoryTypeTab])\n\n    useEffect(() => {\n        if (currentUser) {\n            if (isAdmin) {\n                setRetailPremisesTabs(retailNamesTabs)\n                setActivePremisesTab(0)\n            } else {\n                setRetailPremisesTabs(retailNamesTabs.filter(tab => tab.premises === currentUser.premises))\n                setActivePremisesTab(0)\n            }\n        }\n    }, [currentUser, isAdmin])\n\n    useEffect(() => {\n        if (stats) {\n            setTotalProducts(stats.products)\n            setTotalLenses(stats.lenses)\n        }\n    }, [stats])\n\n    useEffect(() => {\n        if (product.name !== '') {\n            setProduct({\n                ...product,\n                link: formatLink(product.name)\n            })\n        }\n    }, [product.name])\n\n    return (\n        <WarehouseContext.Provider\n            value={{\n                eanCode,\n                product,\n                lenses,\n                contactLensesParameters,\n                glassesParameters,\n                totalProducts,\n                totalLenses,\n                activePremisesTab,\n                activeCategoryTypeTab,\n                retailPremisesTabs,\n                productCategoryTypeTabs,\n                products,\n                lensesProducts,\n                handleChangeCategoryTypeTab,\n                handleChangePremisesTab,\n                getProductsByQuery,\n                handleProductChange,\n                handleProductAvailableChange,\n                getLenses,\n                getSingleProduct,\n                createProduct,\n                updateProduct,\n                deleteProduct,\n                getSingleLenses,\n                createLenses,\n                updateLenses,\n                deleteLenses,\n                handleLensesChange,\n                handleLensesParameterChange,\n                resetProduct,\n                resetLenses,\n                resetContactLenses,\n                resetGlassesParameters,\n                getEanCode,\n                handleAddNewParameter,\n                handleContactLensesParameterChange,\n                handleGlassesParameterChange,\n                handleGlassesParameterSpecsChange,\n                handleGlassesSizeChange,\n                deactivateMany\n            }}\n        >\n            {children}\n        </WarehouseContext.Provider>\n    )\n}\n\nexport default WarehouseProvider","import { useState, useEffect } from 'react'\n\nexport const useSlug = (string = '') => {\n    const a = 'àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż·/_,:;'\n    const b = 'aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------'\n    const p = new RegExp(a.split('').join('|'), 'g')\n\n    const [slug, setSlug] = useState('')\n\n    const getSlug = (string) => {\n        return string.toString().toLowerCase()\n            .replace(/\\s+/g, '-') // Replace spaces with -\n            .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n            .replace(/&/g, '-and-') // Replace & with 'and'\n            .replace(/[^\\w\\-]+/g, '') // Remove all non-word characters\n            .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n            .replace(/^-+/, '') // Trim - from start of text\n            .replace(/-+$/, '') // Trim - from end of text\n    }\n\n    useEffect(() => {\n        const s = getSlug(string)\n        setSlug(s)\n\n    }, [string])\n\n    return { slug, getSlug }\n}","export const brands = [\n    \"Adidas\",\n    \"Armani Exchange\",\n    \"Arnette\",\n    \"Blackfin\",\n    \"Blumarine\",\n    \"Burberry\",\n    \"Bvlgari\",\n    \"Calvin Klein\",\n    \"Carolina Herrera\",\n    \"Carrera\",\n    \"David Beckham\",\n    \"Dior\",\n    \"Dolce & Gabbana\",\n    \"Elle\",\n    \"Emporio Armani\",\n    \"Esprit\",\n    \"Etnia Barcelona\",\n    \"Fendi\",\n    \"Fossil\",\n    \"Furla\",\n    \"Giorgio Armani\",\n    \"Givenchy\",\n    \"Gucci\",\n    \"Guess\",\n    \"H.I.S\",\n    \"Hawkers\",\n    \"Hugo Boss\",\n    \"Jaguar\",\n    \"Jimmy Choo\",\n    \"Lacoste\",\n    \"Liu Jo\",\n    \"Marc Jacobs\",\n    \"Max Mara\",\n    \"Max&Co\",\n    \"Meller\",\n    \"Mexx\",\n    \"Michael Kors\",\n    \"Moschino\",\n    \"Oakley\",\n    \"Persol\",\n    \"Polaroid\",\n    \"Police\",\n    \"Polo Ralph Lauren\",\n    \"Prada\",\n    \"Prada Linea Rossa\",\n    \"Ralph\",\n    \"Ralph Lauren\",\n    \"Ray-Ban\",\n    \"Salvatore Ferragamo\",\n    \"Smith\",\n    \"Strellson\",\n    \"Tiffany&Co.\",\n    \"Tom Ford\",\n    \"Tommy Hilfiger\",\n    \"Versace\",\n    \"Vogue\"\n]\n\nexport const lensesBrands = [\n    \"Acuvue\",\n    \"Adore\",\n    \"Air Optix\",\n    \"Biofinity\",\n    \"Biomedics\",\n    \"Clariti\",\n    \"ColourVue\",\n    \"Comfilcon A\",\n    \"Dailies\",\n    \"Freshlook\",\n    \"Lenjoy\",\n    \"Proclear\",\n    \"Purevision\",\n    \"Soflens\",\n]\n\nexport const retailNames = [\n    \"eshop\",\n    \"Centrálny sklad\",\n    \"Obchodná, Bratislava\",\n    \"Miletičova, Bratislava\",\n    \"Vajnory, Bratislava\",\n    \"Vajnorská 53, Bratislava\",\n    \"OC Branč, Senica\"\n]\n\nexport const retailNamesTabs = [\n    {\n        id: 0,\n        name: \"Všetky\",\n    },\n    {\n        id: 1,\n        name: \"Centrálny sklad\",\n    },\n    {\n        id: 2,\n        name: \"Obchodná, Bratislava\",\n    },\n    {\n        id: 3,\n        name: \"Miletičova, Bratislava\",\n    },\n    {\n        id: 4,\n        name: \"Vajnory, Bratislava\",\n    },\n    {\n        id: 5,\n        name: \"Vajnorská 53, Bratislava\",\n    },\n    {\n        id: 6,\n        name: \"OC Branč, Senica\",\n    },\n]\n\nexport const glassesColors = [\n    \"Čierná\",\n    \"Modrá\",\n    \"Červená\",\n    \"Sivá\",\n    \"Zlatá\",\n    \"Strieborná\",\n    \"Hnedá\",\n    \"Fialová\",\n    \"Zelená\",\n    \"Sedá\",\n    \"Bordová\",\n]\n\nexport const glassesMaterials = [\n    \"Acetát\",\n    \"Kov\",\n    \"Titán\",\n    \"TR90\",\n    \"Patent\",\n    \"Optyl\",\n]\n\nexport const glassesShapes = [\n    \"Pilot\",\n    \"Squared\",\n    \"Browline\",\n    \"Cat eye\",\n    \"Tiny\",\n    \"Oversize\",\n    \"Okrúhle\",\n    \"Oválne\",\n    \"Obdĺžnikové\",\n    \"Flat top\",\n    \"Špeciálne\"\n]\n\nexport const formatPrice = (price = \"\") => {\n    price.toString()\n    let value = 0\n    if (price.includes(',')) {\n        if (price.split(',')[1].length === 1) {\n            value = price.split(',')[0] + price.split(',')[1] + \"0\"\n            return Number(value)\n        } else {\n            value = price.split(',')[0] + price.split(',')[1]\n            return Number(value)\n        }\n    } else {\n        return Number(price * 100)\n    }\n}\n\nexport const formatfloatNumber = number => {\n    let value = 0\n\n    if (number.includes(',')) {\n        value = number.split(',')[0] + '.' + number.split(',')[1]\n        return value\n    } else {\n        return number\n    }\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const initProductObj = {\n    name: \"\",\n    description: \"\",\n    price: 0,\n    type: 0,\n    brand: \"\",\n    soldAmount: 0,\n    available: [0, 1001, 1001, 1001, 1001, 1001, 1001],\n    eanCode: \"\",\n    image: \"\",\n    eshop: true,\n    link: '',\n    category: ''\n}\n\nexport const initGlassesObj = {\n    colorCode: \"\",\n    specs: {\n        frameColor: \"\",\n        frameMaterial: \"\",\n        frameStyle: \"\",\n        lensColor: \"\",\n        sex: \"\",\n        size: [1001, 1001, 1001, 1001],\n    }\n}\n\nexport const initContactLensesObj = {\n    allowedCurves: [1001],\n    allowedDiameters: [1001],\n    dioptersRange: [1001, 1001]\n}\n\nexport const initLensesObj = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    dioptersRange: [1001, 1001],\n    cylinderRange: [1001, 1001],\n    price: 0,\n    brand: \"\",\n    image: '',\n    lensType: \"číre\",\n    dioptric: false\n}\n\nexport const lensesTypes = [\n    \"číre\",\n    'slnečné',\n    'fotochromatické'\n]\n\nexport const retailNames = [\n    // \"-\",\n    \"Obchodná 57, Bratislava\",\n    \"Miletičova 38, Bratislava\",\n    \"Vajnory, Bratislava\",\n    \"Senica, OC Branč\",\n    \"Vajnorská 53, Bratislava\",\n    // \"Trnava, City Aréna\"\n]\n\n// Category variables\nexport const productCategories = [\n    {\n        name: \"Dioptrické\",\n        value: 1\n    },\n    {\n        name: \"Slnečné\",\n        value: 2\n    },\n    {\n        name: \"Kontaktné Šošovky\",\n        value: 3\n    },\n    {\n        name: \"Športové\",\n        value: 4\n    },\n    {\n        name: \"Doplnky\",\n        value: 5\n    },\n    {\n        name: \"Služby\",\n        value: 6\n    },\n    {\n        name: \"Šošovky\",\n        value: 0\n    },\n]\n\nexport const premisesTabs = [\n    {\n        id: 0,\n        name: \"Všetko\",\n        premises: 0,\n\n    },\n    {\n        id: 1,\n        name: \"Obchodná 57, Bratislava\",\n        premises: 1,\n    },\n    {\n        id: 2,\n        name: \"Miletičova 38, Bratislava\",\n        premises: 2,\n    },\n    {\n        id: 3,\n        name: \"Vajnory, Bratislava\",\n        premises: 3,\n    },\n    {\n        id: 4,\n        name: \"Senica, OC Branč\",\n        premises: 4,\n    },\n    {\n        id: 5,\n        name: \"Vajnorská 53, Bratislava\",\n    },\n\n    // {\n    //     id: 5,\n    //     name: \"Trnava, City Aréna\",\n    //     permission: 5,\n    // },\n]\n\nexport const categoryTabs = [\n    {\n        id: 0,\n        name: \"Okuliare\",\n    },\n    {\n        id: 2,\n        name: \"Kontaktné šošovky\",\n    },\n    {\n        id: 1,\n        name: \"Šošovky\",\n    },\n]\n\nexport const lensesBrands = [\n    \"Acuvue\",\n    \"Adore\",\n    \"Air Optix\",\n    \"Biofinity\",\n    \"Biomedics\",\n    \"Clariti\",\n    \"ColourVue\",\n    \"Comfilcon A\",\n    \"Dailies\",\n    \"Freshlook\",\n    \"Lenjoy\",\n    \"Proclear\",\n    \"Purevision\",\n    \"Soflens\",\n]\n\nexport const brands = [\n    \"Adidas\",\n    \"Armani Exchange\",\n    \"Arnette\",\n    \"Blackfin\",\n    \"Blumarine\",\n    \"Burberry\",\n    \"Bvlgari\",\n    \"Calvin Klein\",\n    \"Carolina Herrera\",\n    \"Carrera\",\n    \"David Beckham\",\n    \"Dior\",\n    \"Dolce & Gabbana\",\n    \"Elle\",\n    \"Emporio Armani\",\n    \"Esprit\",\n    \"Etnia Barcelona\",\n    \"Fendi\",\n    \"Fossil\",\n    \"Furla\",\n    \"Giorgio Armani\",\n    \"Givenchy\",\n    \"Gucci\",\n    \"Guess\",\n    \"H.I.S\",\n    \"Hawkers\",\n    \"Hugo Boss\",\n    \"Jaguar\",\n    \"Jimmy Choo\",\n    \"Lacoste\",\n    \"Liu Jo\",\n    \"Marc Jacobs\",\n    \"Max Mara\",\n    \"Max&Co\",\n    \"Meller\",\n    \"Mexx\",\n    \"Michael Kors\",\n    \"Moschino\",\n    \"Oakley\",\n    \"Persol\",\n    \"Polaroid\",\n    \"Police\",\n    \"Polo Ralph Lauren\",\n    \"Prada\",\n    \"Prada Linea Rossa\",\n    \"Ralph\",\n    \"Ralph Lauren\",\n    \"Ray-Ban\",\n    \"Salvatore Ferragamo\",\n    \"Smith\",\n    \"Strellson\",\n    \"Tiffany&Co.\",\n    \"Tom Ford\",\n    \"Tommy Hilfiger\",\n    \"Versace\",\n    \"Vogue\"\n]\n\nexport const formatPrice = price => {\n    let value = 0\n    if (price.includes(',')) {\n        if (price.split(',')[1].length === 1) {\n            value = price.split(',')[0] + price.split(',')[1] + \"0\"\n            return Number(value)\n        } else {\n            value = price.split(',')[0] + price.split(',')[1]\n            return Number(value)\n        }\n    } else {\n        return Number(price * 100)\n    }\n}\n\nexport const formatfloatNumber = number => {\n    const stringValue = number.toString()\n    let value = 0\n    if (stringValue.includes(',')) {\n        value = stringValue.split(',')[0] + '.' + stringValue.split(',')[1]\n        return Number(value)\n    } else {\n        return Number(stringValue)\n\n    }\n}\n\nexport const formatAvailable = (available, activePremisesTab) => {\n    if (available === undefined) return \"Šošovka\"\n    if (typeof available === \"number\") {\n        if (available < 0) {\n            return <>\n                <p style={{ color: \"var(--color-red)\" }}>0 ks</p>\n                <p style={{ color: \"var(--color-red)\" }}>Chýba {Math.abs(available)}</p>\n            </>\n        } else if (available === 0) {\n            return <p style={{ color: \"var(--color-red)\" }}>0 ks</p>\n        } else {\n            return `${available} ks`\n        }\n    } else {\n        if (activePremisesTab === 0) {\n            if (available.reduce((acc, currValue) => acc + currValue) < 0) {\n                return <p style={{ color: \"var(--color-red)\" }}>Všetky: 0 ks</p>\n            } else if (available.reduce((acc, currValue) => acc + currValue) === 0) {\n                return <p style={{ color: \"var(--color-red)\" }}>Všetky: 0 ks</p>\n            } else {\n                return `Všetky: ${available.reduce((acc, currValue) => acc + currValue)} ks`\n            }\n        } else {\n            if (available[activePremisesTab] < 0) {\n                return <>\n                    <p style={{ color: \"var(--color-red)\" }}>0 ks</p>\n                    <p style={{ color: \"var(--color-red)\" }}>Chýba {Math.abs(available[activePremisesTab])}</p>\n                </>\n            } else if (available[activePremisesTab] === 0) {\n                return <p style={{ color: \"var(--color-red)\" }}>0 ks</p>\n            } else {\n                return `${available[activePremisesTab]} ks`\n            }\n        }\n    }\n}\n\nexport const checkParameter = (parameter, idx) => {\n    if (parameter === undefined) return\n    if (parameter.length === 0) {\n        return \"\"\n    }\n    if (parameter[idx] === 1001) {\n        return \"\"\n    }\n\n    return parameter[idx].toString()\n}\n\nconst dia = \"áäčďéíľĺňóôŕšťúýžÁČĎÉÍĽĹŇÓŠŤÚÝŽ\";\nconst nodia = \"aacdeillnoorstuyzACDEILLNOSTUYZ\";\n\nexport const diaConvert = (text) => {\n    let convertText = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (dia.indexOf(text.charAt(i)) !== -1) {\n            convertText += nodia.charAt(dia.indexOf(text.charAt(i)));\n        }\n        else {\n            convertText += text.charAt(i);\n        }\n    }\n    return convertText;\n}\n\nexport const formatLink = (text) => {\n    return diaConvert(text).replaceAll(\" \", \"-\").toLowerCase().trim()\n}"],"sourceRoot":""}
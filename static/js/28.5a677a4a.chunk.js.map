{"version":3,"sources":["context/coupons/coupons.context.jsx"],"names":["CouponsContext","createContext","coupon","coupons","handleChange","getCoupon","getCoupons","createCoupon","deleteCoupon","isUpdating","resetCoupons","initCouponObj","code","type","value","maxUses","minValue","maxUsesTotal","CouponsProvider","children","useContext","LoadingModalContext","closeModal","getMessage","setIsLoading","setShowModal","token","AuthContext","push","useHistory","myHeaders","Headers","append","useState","setCoupon","setCoupons","setIsupdating","id","a","requestOptions","method","headers","redirect","fetch","process","response","json","data","message","console","log","couponToCreate","raw","JSON","stringify","undefined","Number","body","error","ok","Provider","e","target","name"],"mappings":"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","file":"static/js/28.5a677a4a.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport { useHistory } from 'react-router-dom'\n\nexport const CouponsContext = createContext({\n    coupon: null,\n    coupons: null,\n    handleChange: () => { },\n    getCoupon: () => { },\n    getCoupons: () => { },\n    createCoupon: () => { },\n    // updateCoupon: () => { },\n    deleteCoupon: () => { },\n    isUpdating: false,\n    resetCoupons: () => { }\n})\n\nconst initCouponObj = {\n    code: '',\n    type: 'percentage', // flat\n    value: 0,\n    maxUses: 0,\n    minValue: 0,\n    maxUsesTotal: 0\n}\n\n\nconst CouponsProvider = ({ children }) => {\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n    const { token } = useContext(AuthContext)\n    const { push } = useHistory()\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const [coupon, setCoupon] = useState(initCouponObj)\n    const [coupons, setCoupons] = useState(null)\n\n    const [isUpdating, setIsupdating] = useState(false)\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n\n        setCoupon({\n            ...coupon,\n            [name]: value\n        })\n    }\n\n    const getCoupon = async (id) => {\n        setIsupdating(true)\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/coupons/${id}`, requestOptions)\n            const data = await response.json()\n\n            if (data.coupon) {\n                setCoupon({\n                    ...coupon,\n                    ...data.coupon\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n\n    }\n\n    const getCoupons = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/coupons`, requestOptions)\n            const data = await response.json()\n\n            if (data.coupons) {\n                setCoupons(data.coupons)\n            }\n            setIsLoading(false)\n            closeModal()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createCoupon = async (couponToCreate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify({\n            code: couponToCreate.code,\n            type: couponToCreate.type, // flat\n            value: couponToCreate.value === '' || couponToCreate.value === '0' ? undefined : Number(couponToCreate.value),\n            maxUses: couponToCreate.maxUses === '' || couponToCreate.maxUses === '0' ? undefined : Number(couponToCreate.maxUses),\n            minValue: couponToCreate.minValue === '' || couponToCreate.minValue === '0' ? undefined : Number(couponToCreate.minValue),\n            maxUsesTotal: couponToCreate.maxUsesTotal === '' || couponToCreate.maxUsesTotal === '0' ? undefined : Number(couponToCreate.maxUsesTotal)\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/coupons/create`, requestOptions)\n            const data = await response.json()\n\n            if (data.error === \"format\") {\n                getMessage(\"Kód kupónu je povinný\")\n            }\n            if (data.error === 'exists') {\n                getMessage(\"Kupón už existuje\")\n            }\n\n            if (response.ok) {\n                getCoupons()\n                push('/dashboard/kupony')\n            }\n\n            // getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n\n    }\n\n    // const updateCoupon = async () => {\n    //     console.log(\"Update coupon\")\n\n    //     setIsLoading(true)\n    //     setShowModal(true)\n\n    //     const requestOptions = {\n    //         method: 'GET',\n    //         headers: myHeaders,\n    //         redirect: 'follow'\n    //     };\n\n    //     try {\n    //         const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/coupons/${id}`, requestOptions)\n    //         const data = await response.json()\n\n    //         getMessage(data.message)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Niečo sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    // }\n\n    const deleteCoupon = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/coupons/${id}`, requestOptions)\n            const data = await response.json()\n\n            if (response.ok) {\n                getCoupons()\n                push('/dashboard/kupony')\n            }\n            // getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const resetCoupons = async () => {\n        setIsupdating(false)\n        setCoupon(initCouponObj)\n    }\n\n    return (\n        <CouponsContext.Provider\n            value={{\n                coupon,\n                coupons,\n                handleChange,\n                getCoupon,\n                getCoupons,\n                createCoupon,\n                // updateCoupon,\n                deleteCoupon,\n                isUpdating,\n                resetCoupons\n            }}\n        >\n            {children}\n        </CouponsContext.Provider>\n    )\n}\n\nexport default CouponsProvider"],"sourceRoot":""}
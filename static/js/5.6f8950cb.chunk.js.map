{"version":3,"sources":["components/product-lenses-form/product-lenses-form.styles.jsx","components/product-lenses-form/product-lenses-form.component.jsx","components/product-accessories-form/product-accessories-form.styles.jsx","components/product-accessories-form/product-accessories-form.component.jsx","components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx","components/product-contact-lenses-form/product-contact-lenses-form.component.jsx","sections/product/product.styles.jsx","sections/product/product.section.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","context/warehouse/warehouse.utils.jsx","context/warehouse/warehouse.context.jsx","components/custom-checkbox/custom-checkbox.styles.jsx","components/custom-checkbox/custom-checkbox.component.jsx","context/image/image.queries.jsx","context/image/image.context.jsx","components/custom-textarea/custom-textarea.styles.jsx","components/custom-textarea/custom-textarea.component.jsx","components/modal-images/modal-images.styles.jsx","components/modal-images/modal-images.component.jsx"],"names":["LensesFormContainer","styled","div","LensesContainer","LensesParametersContainer","ImageContainer","ProductImage","hasImage","ProductLensesForm","lenses","selectedImage","setImageModal","handleChange","handleParameterChange","checkParameter","label","type","name","value","e","brand","rows","description","required","price","toString","onClick","src","process","imagePath","alt","Array","map","idx","inputLabel","dioptersRange","cylinderRange","AccessoriesFormContainer","AccessoriesContainer","StockContainer","ProductAccessoriesForm","product","handleAvailableChange","retailNames","currentUser","eanCode","category","available","admin","premises","ContactLensesFormContainer","ContactLensesContainer","ContactLensesParametersContainer","IncreaseButton","CustomButton","ProductContactLensesForm","handleContactLensesChange","handleAddNewParameter","contactLensesParameters","allowedCurves","target","allowedDiameters","Header","paddingStyles","SubmitButton","IsPublicCheckbox","CustomCheckbox","CategoryContainer","CategoryCheckbox","ProductSection","id","useParams","useContext","AuthContext","LoadingModalContext","closeModal","message","isLoading","showModal","getMessage","setShowModal","ImageContext","setSelectedImage","useState","showImageModal","WarehouseContext","handleLensesChange","handleLensesParameterChange","createProduct","resetProduct","resetLenses","resetContactLenses","createLenses","handleProductChange","handleProductAvailableChange","getEanCode","handleContactLensesParameterChange","hasChanged","setHasChanged","productObj","setProductObj","console","log","arr","Number","useEffect","when","loading","title","close","setImage","imgId","image","isActive","eshop","handleClick","preventDefault","productCategories","Object","keys","length","window","confirm","handleChangeType","contactLenses","splice","shrinkLabel","css","InputGroup","CustomInput","otherProps","className","onChange","htmlFor","Container","FixedContainer","ScrollContainer","children","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","initProductObj","soldAmount","link","initContactLensesObj","initLensesObj","premisesTabs","categoryTabs","formatPrice","includes","split","formatAvailable","activePremisesTab","undefined","reduce","acc","currValue","parameter","dia","diaConvert","text","convertText","i","indexOf","charAt","createContext","totalProducts","totalLenses","activeCategoryTypeTab","retailPremisesTabs","productCategoryTypeTabs","products","handleChangeCategoryTypeTab","handleChangePremisesTab","getProductsByQuery","getSingleProduct","getSingleLenses","getLenses","WarehouseProvider","push","useHistory","token","isAdmin","stats","setIsLoading","setTotalProducts","setTotalLenses","setEanCode","setProduct","setLenses","setContactLensesParameters","setProducts","setActivePremisesTab","setRetailPremisesTabs","setActiveCategoryTypeTab","myHeaders","Headers","append","a","requestOptions","method","headers","redirect","fetch","response","json","data","query","raw","JSON","stringify","body","productToAdd","slug","replaceAll","toLowerCase","trim","modifiedProduct","limit","lensesToAdd","filter","tab","Provider","CheckboxContainer","otherprops","uploadImage","img","imgName","imgAlt","fetchFilteredImages","skip","sortBy","dateCreated","deleteImage","isDisabled","images","getImages","handleImage","handleDeleteImage","getNextImages","getPrevImage","ImageProvider","setIsDisabled","setImages","setSkip","_id","addToSkip","respone","CustomTextarea","ModalContainer","Modal","UploadButton","CloseButton","button","FlexContainer","DeleteButton","ImagePreviewContainer","TabOptions","TabButton","CropButton","ButtonOptions","FetchButtons","toDataUrl","url","callback","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","str","result","lastPos","cuttedstr","slice","readAsDataURL","open","responseType","send","ModalImages","showTab","setShowTab","imageToUpload","setImageToUpload","imgUrl","setImgUrl","imageName","setImageName","imageAlt","setImageAlt","URL","createObjectURL","ReactDOM","createPortal","accept","files","Fragment","imgData","handleSubmit","disabled","selectImage","document","getElementById"],"mappings":"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","file":"static/js/5.6f8950cb.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n\nexport const LensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const LensesContainer = styled.div`\n    /* width: 45rem; */\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n    /* display: inline-block; */\n    /* padding-bottom: 4rem;  */\n    margin-bottom: 5rem;\n`\n\nexport const LensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n\n    h3 {\n        /* margin-bottom: 1rem; */\n    }\n\n    h4 {\n        margin-top: 2rem;\n    }\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"#eee\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    LensesFormContainer,\n    LensesContainer,\n    LensesParametersContainer,\n    ProductImage,\n    ImageContainer,\n} from './product-lenses-form.styles'\n\nconst ProductLensesForm = ({\n    lenses,\n    selectedImage,\n    setImageModal,\n    handleChange,\n    handleParameterChange,\n    checkParameter,\n}) => {\n    return (\n        <LensesFormContainer>\n            <LensesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"Názov šošoviek*\"\n                    type='text'\n                    name='name'\n                    value={lenses.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka*\"\n                    type='text'\n                    name='brand'\n                    value={lenses.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomTextarea\n                    label=\"Popis*\"\n                    name='description'\n                    rows='5'\n                    value={lenses.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={lenses.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </LensesContainer>\n            <LensesParametersContainer>\n                <h3>Parametre</h3>\n\n                <h4>Dioptrie</h4>\n                {[...Array(2)].map((value, idx) => {\n                    const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\n\n                    return (\n                        <div key={idx}>\n                            <CustomInput\n                                label={inputLabel}\n                                type='number'\n                                name='dioptersRange'\n                                value={checkParameter(lenses.dioptersRange, idx)}\n                                handleChange={(e) => handleParameterChange(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n\n                <h4>Cylinder</h4>\n                {[...Array(2)].map((value, idx) => {\n                    const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\n\n                    return (\n                        <div key={idx}>\n                            <CustomInput\n                                label={inputLabel}\n                                type='number'\n                                name='cylinderRange'\n                                value={checkParameter(lenses.cylinderRange, idx)}\n                                handleChange={(e) => handleParameterChange(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n            </LensesParametersContainer>\n        </LensesFormContainer>\n    )\n}\n\nexport default ProductLensesForm\n","import styled from 'styled-components'\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"#eee\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const AccessoriesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const AccessoriesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    AccessoriesFormContainer,\n    AccessoriesContainer,\n    StockContainer,\n    ImageContainer,\n    ProductImage,\n} from './product-accessories-form.styles'\n\nconst ProductAccessoriesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    setImageModal,\n    handleAvailableChange,\n    checkParameter,\n    retailNames,\n    currentUser\n}) => {\n    return (\n        <AccessoriesFormContainer>\n            <AccessoriesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </AccessoriesContainer>\n            <StockContainer>\n                <h3>Skladové zásoby</h3>\n                {\n                    product.available.map((value, idx) => {\n                        if (idx === 4) return\n                        return (\n                            <CustomInput\n                                key={idx}\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, idx)}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        )\n                    })\n                }\n            </StockContainer>\n\n        </AccessoriesFormContainer>\n    )\n}\n\nexport default ProductAccessoriesForm\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"#eee\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const ContactLensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const ContactLensesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n`\n\nexport const ContactLensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n    margin-bottom: 3rem;\n\n    h4 {\n        margin-top: 1rem;\n    }\n`\n\nexport const IncreaseButton = styled(CustomButton)`\n    margin-top: 2rem;\n    font-size: 1.4rem;\n\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    ContactLensesContainer,\n    ContactLensesFormContainer,\n    StockContainer,\n    ContactLensesParametersContainer,\n    IncreaseButton,\n    ImageContainer,\n    ProductImage,\n} from './product-contact-lenses-form.styles'\n\nconst ProductContactLensesForm = ({\n    product,\n    handleChange,\n    setImageModal,\n    selectedImage,\n    checkParameter,\n    handleContactLensesChange,\n    handleAddNewParameter,\n    contactLensesParameters,\n    retailNames,\n    currentUser,\n    handleAvailableChange\n}) => {\n    return (\n        <ContactLensesFormContainer>\n            <ContactLensesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </ContactLensesContainer>\n            <div>\n                <ContactLensesParametersContainer>\n                    <h3>Parametre</h3>\n                    <div>\n                        <h4>Zakrivenie</h4>\n                        {contactLensesParameters.allowedCurves.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedCurves\"}\n                                    value={checkParameter(contactLensesParameters.allowedCurves, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedCurves'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n                    <div>\n                        <h4>Priemery</h4>\n                        {contactLensesParameters.allowedDiameters.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedDiameters\"}\n                                    value={checkParameter(contactLensesParameters.allowedDiameters, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedDiameters'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n\n                    <div>\n                        <h4>Dioptrie</h4>\n                        {contactLensesParameters.dioptersRange.map((value, idx) => {\n                            const inputLabel = idx === 0 ? \"minimum\" : \"maximum\"\n\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={inputLabel}\n                                    type='text'\n                                    name={\"dioptersRange\"}\n                                    value={checkParameter(contactLensesParameters.dioptersRange, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </div>\n                </ContactLensesParametersContainer>\n\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    {\n                        product.available.map((value, idx) => {\n                            if (idx === 4) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })\n                    }\n                </StockContainer>\n            </div>\n        </ContactLensesFormContainer>\n    )\n}\n\nexport default ProductContactLensesForm\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\nimport CustomButton from '../../components/custom-button/custom-button.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n\n`\n\nexport const SubmitButton = styled(CustomButton)`\n\n`\n\nexport const IsPublicCheckbox = styled(CustomCheckbox)`\n    margin-right: 2rem;\n`\n\n\nexport const CategoryContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n    display: inline-block;\n    margin-bottom: 3rem;\n\n    h3 {\n        margin-bottom: 1.5rem;\n    }\n`\nexport const CategoryCheckbox = styled(CustomCheckbox)`\n    &:not(:last-child) {\n        margin-right: 2rem;\n    }\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"#eee\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const ContactLensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const ContactLensesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n`\n\nexport const ContactLensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n    margin-bottom: 3rem;\n\n    h4 {\n        margin-top: 1rem;\n    }\n`\n\nexport const IncreaseButton = styled(CustomButton)`\n    margin-top: 2rem;\n    font-size: 1.4rem;\n\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n`","import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport CustomTextarea from '../../components/custom-textarea/custom-textarea.component'\n\n// import CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n// import CustomFormSwitch from '../../components/custom-form-switch/custom-form-switch.component'\n// import ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\nimport ProductAccessoriesForm from '../../components/product-accessories-form/product-accessories-form.component'\nimport ProductContactLensesForm from '../../components/product-contact-lenses-form/product-contact-lenses-form.component'\n\n// import { useFetch } from '../../hooks/useFetch'\n\nimport { productCategories, checkParameter, brands, retailNames, diaConvert } from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Header,\n    CategoryContainer,\n    CategoryCheckbox,\n    SubmitButton,\n    ImageContainer,\n    ProductImage,\n    IsPublicCheckbox,\n\n} from './product.styles'\n\nconst ProductSection = () => {\n    const { id } = useParams()\n    const { currentUser } = useContext(AuthContext)\n    const { closeModal, message, isLoading, showModal, getMessage, setShowModal } = useContext(LoadingModalContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [showImageModal, setImageModal] = useState(false)\n\n    const {\n        eanCode,\n        product,\n        lenses,\n        contactLensesParameters,\n        handleLensesChange,\n        handleLensesParameterChange,\n        createProduct,\n        resetProduct,\n        resetLenses,\n        resetContactLenses,\n        createLenses,\n        handleProductChange,\n        handleProductAvailableChange,\n        getEanCode,\n        handleAddNewParameter,\n        handleContactLensesParameterChange\n    } = useContext(WarehouseContext)\n\n    const [hasChanged, setHasChanged] = useState(false)\n    const [productObj, setProductObj] = useState({})\n\n\n\n    const handleChangeType = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (productObj.type === 0) {\n            if (Object.keys(productObj).length > 1) {\n                const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                if (confirm) {\n                    resetLenses()\n                }\n            }\n        } else {\n            if (Object.keys(productObj).length > 2) {\n                const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                if (confirm) {\n                    resetProduct()\n                }\n            }\n        }\n\n        setProductObj({\n            [name]: value\n        })\n    }\n\n    const handleChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        console.log(name)\n        console.log(value)\n\n\n        if (productObj.type === 0) {\n            handleLensesChange(e)\n        }\n\n        if (productObj.type === 5) {\n            handleProductChange(e)\n        }\n\n        if (productObj.type === 3) {\n            handleProductChange(e)\n        }\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleProductAvailableChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleContactLensesChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleContactLensesParameterChange(e, idx)\n\n        if (value === '') {\n            if (productObj.contactLenses[name].length > 1) {\n                arr.splice(idx, 1)\n                setProductObj({\n                    ...productObj,\n                    contactLenses: {\n                        ...productObj.contactLenses,\n                        [name]: arr\n                    }\n                })\n            } else {\n                delete productObj.contactLenses[name]\n            }\n            if (Object.keys(productObj.contactLenses).length === 0) {\n                delete productObj[\"contactLenses\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            contactLenses: {\n                ...productObj.contactLenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleLensesParameterChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleSelectImage = (imgId) => {\n        setHasChanged(true)\n        setProductObj({\n            ...productObj,\n            image: imgId\n        })\n    }\n\n    console.log(\"PRODUCT OBJECT\")\n    console.log(productObj)\n    console.log(product)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (productObj.type === 0) {\n            if (!productObj.name || !productObj.brand || !productObj.description || !productObj.price || !productObj.image || !productObj.dioptersRange || !productObj.cylinderRange) {\n                setShowModal(true)\n                getMessage(\"Povinné údaje sú prázdne\")\n                return\n            } else {\n                setHasChanged(false)\n                delete productObj['type']\n                createLenses(productObj)\n            }\n        }\n\n        if (productObj.type === 5 || productObj.type === 3) {\n            if (!productObj.name || !productObj.price || !productObj.image) {\n                setShowModal(true)\n                getMessage(\"Povinné údaje sú prázdne\")\n                return\n            } else {\n                setHasChanged(false)\n                createProduct(productObj)\n            }\n        }\n\n\n    }\n\n    useEffect(() => {\n        if (id === \"novy-produkt\") {\n            if (!eanCode) {\n                getEanCode()\n            } else {\n                if (productObj.type) {\n                    handleChange({\n                        target: {\n                            name: \"eanCode\",\n                            value: eanCode\n                        }\n                    })\n                }\n            }\n        }\n    }, [id, eanCode, productObj.type, productObj.eanCode])\n\n    useEffect(() => {\n        return () => {\n            resetProduct()\n            resetLenses()\n            resetContactLenses()\n            setProductObj({})\n            setSelectedImage(null)\n        }\n    }, [])\n\n    return (\n        <section>\n            <Prompt\n                when={hasChanged}\n                message=\"Chcete opustiť formulár?\"\n            />\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={handleSelectImage} />}\n            <Header>\n                <div>\n                    <h1>Nový Produkt</h1>\n                </div>\n                <div>\n                    <IsPublicCheckbox\n                        label=\"Verejné\"\n                        // value={product.ehop}\n                        name='eshop'\n                        isActive={product.eshop}\n                        handleClick={() => handleChange({\n                            target: {\n                                name: \"eshop\",\n                                value: !product.eshop\n                            }\n                        })}\n                    />\n                    <SubmitButton onClick={handleSubmit}>Vytvoriť</SubmitButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                <CategoryContainer>\n                    <h3>Aký produkt chcete pridať?</h3>\n                    {productCategories.map((category, idx) => (\n                        <CategoryCheckbox\n                            key={idx}\n                            label={category.name}\n                            value={category.value}\n                            name='type'\n                            isActive={category.value === productObj.type}\n                            handleClick={() => handleChangeType({\n                                target: {\n                                    name: \"type\",\n                                    value: category.value\n                                }\n                            })}\n                        />\n                    ))}\n                </CategoryContainer>\n\n                {productObj.type === 0 && (\n                    <ProductLensesForm\n                        lenses={lenses}\n                        selectedImage={selectedImage}\n                        setImageModal={setImageModal}\n                        handleChange={handleChange}\n                        handleParameterChange={handleParameterChange}\n                        checkParameter={checkParameter}\n                    />\n                )}\n\n                {productObj.type === 5 && (\n                    <ProductAccessoriesForm\n                        product={product}\n                        currentUser={currentUser}\n                        retailNames={retailNames}\n                        selectedImage={selectedImage}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAvailableChange={handleAvailableChange}\n                    />\n                )}\n\n                {productObj.type === 3 && (\n                    <ProductContactLensesForm\n                        product={product}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        contactLensesParameters={contactLensesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAddNewParameter={handleAddNewParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        handleContactLensesChange={handleContactLensesChange}\n                    />\n                )}\n\n            </ScrollContainer>\n\n        </section >\n    )\n}\n\nexport default ProductSection\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`\n\nexport const FixedContainer = styled.div`\n    max-width: 115rem;\n`","import React from 'react'\nimport { Container, FixedContainer } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            <FixedContainer>\n                {children}\n            </FixedContainer>\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const initProductObj = {\n    name: \"\",\n    description: \"\",\n    price: 0,\n    type: 0,\n    brand: \"\",\n    soldAmount: 0,\n    available: [1001, 1001, 1001, 1001, 0],\n    eanCode: \"\",\n    image: \"\",\n    eshop: true,\n    link: '',\n    category: ''\n}\n\nexport const initGlassesObj = {\n    colorCode: \"\",\n    colorName: \"\",\n    specs: {\n        frameColor: \"\",\n        frameMaterial: \"\",\n        frameStyle: \"\",\n        lensColor: \"\",\n        sex: \"M\",\n        size: [1001, 1001, 1001],\n    }\n}\n\nexport const initContactLensesObj = {\n    allowedCurves: [1001],\n    allowedDiameters: [1001],\n    dioptersRange: [1001, 1001]\n}\n\nexport const initLensesObj = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    dioptersRange: [1001, 1001],\n    cylinderRange: [1001, 1001],\n    price: 0,\n    brand: \"\",\n    image: ''\n}\n\nexport const retailNames = [\n    \"Obchodná 57, Bratislava\",\n    \"Miletičova 38, Bratislava\",\n    \"Vajnory, Bratislava\",\n    \"Senica, OC Branč\",\n    \"Trnava, City Aréna\"\n]\n\n// Category variables\nexport const productCategories = [\n    {\n        name: \"Dioptrické\",\n        value: 1\n    },\n    {\n        name: \"Slnečné\",\n        value: 2\n    },\n    {\n        name: \"Kontaktné Šošovky\",\n        value: 3\n    },\n    {\n        name: \"Športové\",\n        value: 4\n    },\n    {\n        name: \"Doplnky\",\n        value: 5\n    },\n    {\n        name: \"Šošovky\",\n        value: 0\n    },\n]\n\nexport const premisesTabs = [\n    {\n        id: 0,\n        name: \"Všetko\",\n        premises: 0,\n\n    },\n    {\n        id: 1,\n        name: \"Obchodná 57, Bratislava\",\n        premises: 1,\n    },\n    {\n        id: 2,\n        name: \"Miletičova 38, Bratislava\",\n        premises: 2,\n    },\n    {\n        id: 3,\n        name: \"Senica, OC Branč\",\n        premises: 3,\n    },\n    {\n        id: 4,\n        name: \"Vajnory, Bratislava\",\n        premises: 4,\n    },\n    // {\n    //     id: 5,\n    //     name: \"Trnava, City Aréna\",\n    //     permission: 5,\n    // },\n]\n\nexport const categoryTabs = [\n    {\n        id: 0,\n        name: \"Okuliare\",\n    },\n    {\n        id: 1,\n        name: \"Šosovky\",\n    },\n]\n\nexport const lensesBrands = [\n    \"Acuvue\",\n    \"Adore\",\n    \"Air Optix\",\n    \"Biofinity\",\n    \"Biomedics\",\n    \"Clariti\",\n    \"ColourVue\",\n    \"Comfilcon A\",\n    \"Dailies\",\n    \"Freshlook\",\n    \"Lenjoy\",\n    \"Proclear\",\n    \"Purevision\",\n    \"Soflens\",\n]\n\nexport const brands = [\n    \"Adidas\",\n    \"Armani Exchange\",\n    \"Arnette\",\n    \"Blackfin\",\n    \"Blumarine\",\n    \"Burberry\",\n    \"Bvlgari\",\n    \"Calvin Klein\",\n    \"Carolina Herrera\",\n    \"Carrera\",\n    \"David Beckham\",\n    \"Dior\",\n    \"Dolce & Gabbana\",\n    \"Elle\",\n    \"Emporio Armani\",\n    \"Esprit\",\n    \"Etnia Barcelona\",\n    \"Fendi\",\n    \"Fossil\",\n    \"Furla\",\n    \"Giorgio Armani\",\n    \"Givenchy\",\n    \"Gucci\",\n    \"Guess\",\n    \"H.I.S\",\n    \"Hawkers\",\n    \"Hugo Boss\",\n    \"Jaguar\",\n    \"Jimmy Choo\",\n    \"Lacoste\",\n    \"Liu Jo\",\n    \"Marc Jacobs\",\n    \"Max Mara\",\n    \"Max&Co\",\n    \"Meller\",\n    \"Mexx\",\n    \"Michael Kors\",\n    \"Moschino\",\n    \"Oakley\",\n    \"Persol\",\n    \"Polaroid\",\n    \"Police\",\n    \"Polo Ralph Lauren\",\n    \"Prada\",\n    \"Prada Linea Rossa\",\n    \"Ralph\",\n    \"Ralph Lauren\",\n    \"Ray-Ban\",\n    \"Salvatore Ferragamo\",\n    \"Smith\",\n    \"Strellson\",\n    \"Tiffany&Co.\",\n    \"Tom Ford\",\n    \"Tommy Hilfiger\",\n    \"Versace\",\n    \"Vogue\"\n]\n\nexport const formatPrice = price => {\n    let value = 0\n    if (price.includes(',')) {\n        if (price.split(',')[1].length === 1) {\n            value = price.split(',')[0] + price.split(',')[1] + \"0\"\n            return Number(value)\n        } else {\n            value = price.split(',')[0] + price.split(',')[1]\n            return Number(value)\n        }\n    } else {\n        return Number(price * 100)\n    }\n}\n\nexport const formatAvailable = (available, activePremisesTab) => {\n    if (available === undefined) return \"Šosovka\"\n\n    if (typeof available === \"number\") {\n        return `Na sklade ${available} kusov`\n    } else {\n        if (activePremisesTab === 0) {\n            return `Vo všetkých skladoch je ${available.reduce((acc, currValue) => acc + currValue)} kusov`\n        } else {\n            return `Na sklade ${available[activePremisesTab]} kusov`\n        }\n    }\n}\n\nexport const checkParameter = (parameter, idx) => {\n    if (parameter.length === 0) {\n        return \"\"\n    }\n    if (parameter[idx] === 1001) {\n        return \"\"\n    }\n\n    return parameter[idx].toString()\n}\n\nconst dia = \"áäčďéíľĺňóôŕšťúýžÁČĎÉÍĽĹŇÓŠŤÚÝŽ\";\nconst nodia = \"aacdeillnoorstuyzACDEILLNOSTUYZ\";\n\nexport const diaConvert = (text) => {\n    let convertText = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (dia.indexOf(text.charAt(i)) != -1) {\n            convertText += nodia.charAt(dia.indexOf(text.charAt(i)));\n        }\n        else {\n            convertText += text.charAt(i);\n        }\n    }\n    return convertText;\n}","import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\n\nimport {\n    premisesTabs,\n    categoryTabs,\n    initLensesObj,\n    initProductObj,\n    formatPrice,\n    diaConvert,\n    initContactLensesObj\n} from './warehouse.utils'\n\nexport const WarehouseContext = createContext({\n    eanCode: null,\n    product: {},\n    lenses: {},\n    contactLensesParameters: {},\n    totalProducts: 0,\n    totalLenses: 0,\n    activePremisesTab: 0,\n    activeCategoryTypeTab: 0,\n    retailPremisesTabs: [],\n    productCategoryTypeTabs: [],\n    products: null,\n    handleChangeCategoryTypeTab: () => { },\n    handleChangePremisesTab: () => { },\n    getProductsByQuery: () => { },\n    handleProductChange: () => { },\n    handleProductAvailableChange: () => { },\n    getSingleProduct: () => { },\n    createProduct: () => { },\n    getSingleLenses: () => { },\n    getLenses: () => { },\n    createLenses: () => { },\n    handleLensesChange: () => { },\n    handleLensesParameterChange: () => { },\n    resetProduct: () => { },\n    resetLenses: () => { },\n    resetContactLenses: () => { },\n    getEanCode: () => { },\n    handleAddNewParameter: () => { },\n    handleContactLensesParameterChange: () => { },\n})\n\nconst WarehouseProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token, isAdmin, currentUser, stats } = useContext(AuthContext)\n    const { closeModal, setIsLoading, setShowModal, getMessage } = useContext(LoadingModalContext)\n\n    const [totalProducts, setTotalProducts] = useState(0)\n    const [totalLenses, setTotalLenses] = useState(0)\n    const [eanCode, setEanCode] = useState(null)\n\n    const [product, setProduct] = useState({ ...initProductObj })\n    const [lenses, setLenses] = useState({ ...initLensesObj })\n    const [contactLensesParameters, setContactLensesParameters] = useState({ ...initContactLensesObj })\n\n    const [products, setProducts] = useState(null)\n    const [activePremisesTab, setActivePremisesTab] = useState(0)\n    const [retailPremisesTabs, setRetailPremisesTabs] = useState([])\n\n    const [productCategoryTypeTabs, setProductCategoryTypeTabs] = useState(categoryTabs)\n    const [activeCategoryTypeTab, setActiveCategoryTypeTab] = useState(0)\n\n    const handleAddNewParameter = e => {\n        const { name } = e.target\n        setContactLensesParameters({\n            ...contactLensesParameters,\n            [name]: [...contactLensesParameters[name], 1001]\n        })\n    }\n\n    const handleContactLensesParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n        setContactLensesParameters({\n            ...contactLensesParameters,\n            [name]: arr\n        })\n    }\n\n    const handleProductChange = e => {\n        const { name, value } = e.target\n\n        setProduct({\n            ...product,\n            [name]: value\n        })\n    }\n\n    const handleProductAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setProduct({\n            ...product,\n            [name]: arr\n        })\n    }\n\n    const handleLensesChange = e => {\n        const { name, value } = e.target\n\n        setLenses({\n            ...lenses,\n            [name]: value\n        })\n    }\n\n    const handleLensesParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setLenses({\n            ...lenses,\n            [name]: arr\n        })\n    }\n\n    const resetProduct = () => {\n        setProduct({\n            ...initProductObj,\n            available: [1001, 1001, 1001, 1001, 0],\n        })\n        setEanCode(null)\n    }\n\n    const resetLenses = () => {\n        // setLenses({ ...initLensesObj })\n        setLenses({\n            ...initLensesObj,\n            dioptersRange: [1001, 1001],\n            cylinderRange: [1001, 1001],\n        })\n    }\n\n    const resetContactLenses = () => {\n        setContactLensesParameters({\n            allowedCurves: [1001],\n            allowedDiameters: [1001],\n            dioptersRange: [1001, 1001]\n        })\n    }\n\n\n    const handleChangePremisesTab = (idx) => {\n        setActivePremisesTab(idx)\n    }\n\n    const handleChangeCategoryTypeTab = (idx) => {\n        setActiveCategoryTypeTab(idx)\n    }\n\n\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const getEanCode = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/nextEanCode`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.eanCode) {\n                setEanCode(data.eanCode)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getProductsByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(query)\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.products) {\n                setProducts(data.products)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getLenses = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.lenses) {\n                setProducts(data.lenses)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getSingleProduct = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/products/${id}`)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.product) {\n                setProduct(data.product)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createProduct = async (productToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const slug = diaConvert(productToAdd.name).replaceAll(\" \", \"-\").toLowerCase().trim()\n\n        let modifiedProduct = {\n            ...productToAdd,\n            price: formatPrice(productToAdd.price.toString()),\n            link: slug,\n            available: productToAdd.available ? productToAdd.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0]\n        }\n\n        if (productToAdd.contactLenses) {\n            if (productToAdd.contactLenses.allowedCurves) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: productToAdd.contactLenses.allowedCurves.map(value => Number(value))\n                    }\n                }\n            }\n            if (productToAdd.contactLenses.allowedDiameters) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: productToAdd.contactLenses.allowedDiameters.map(value => Number(value))\n                    }\n                }\n            }\n            if (productToAdd.contactLenses.dioptersRange) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: productToAdd.contactLenses.dioptersRange.map(value => Number(value))\n                    }\n                }\n            }\n        }\n\n        console.log(\"modifiedProduct\")\n        console.log(modifiedProduct)\n\n\n        const raw = JSON.stringify({\n            ...productToAdd,\n            price: formatPrice(productToAdd.price.toString()),\n            link: slug,\n            available: productToAdd.available ? productToAdd.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0]\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.product) {\n                push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10\n                })\n                setEanCode(null)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getSingleLenses = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/lenses/${id}`)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                setLenses(data.lenses)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createLenses = async (lensesToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify({\n            ...lensesToAdd,\n            price: formatPrice(lensesToAdd.price.toString())\n        });\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                push('/dashboard/obchod')\n                getLenses()\n                closeModal()\n                return\n            }\n\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (products) {\n            console.log(`GET ${productCategoryTypeTabs[activeCategoryTypeTab].name} DATA`)\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    limit: 10\n                })\n            } else {\n                getLenses()\n            }\n        }\n    }, [activeCategoryTypeTab])\n\n    useEffect(() => {\n        console.log(\"SET PREMISES\")\n        if (currentUser) {\n            if (isAdmin) {\n                setRetailPremisesTabs(premisesTabs)\n                setActivePremisesTab(0)\n            } else {\n                setRetailPremisesTabs(premisesTabs.filter(tab => tab.premises === currentUser.premises))\n                setActivePremisesTab(0)\n            }\n        }\n    }, [currentUser, isAdmin])\n\n    useEffect(() => {\n        if (stats) {\n            console.log(\"SET STATS\")\n            setTotalProducts(stats.products)\n            setTotalLenses(stats.lenses)\n        }\n    }, [stats])\n\n    return (\n        <WarehouseContext.Provider\n            value={{\n                eanCode,\n                product,\n                lenses,\n                contactLensesParameters,\n                totalProducts,\n                totalLenses,\n                activePremisesTab,\n                activeCategoryTypeTab,\n                retailPremisesTabs,\n                productCategoryTypeTabs,\n                products,\n                handleChangeCategoryTypeTab,\n                handleChangePremisesTab,\n                getProductsByQuery,\n                handleProductChange,\n                handleProductAvailableChange,\n                getLenses,\n                getSingleProduct,\n                createProduct,\n                getSingleLenses,\n                createLenses,\n                handleLensesChange,\n                handleLensesParameterChange,\n                resetProduct,\n                resetLenses,\n                resetContactLenses,\n                getEanCode,\n                handleAddNewParameter,\n                handleContactLensesParameterChange,\n            }}\n        >\n            {children}\n        </WarehouseContext.Provider>\n    )\n}\n\nexport default WarehouseProvider","import styled from 'styled-components'\n\nexport const CheckboxContainer = styled.div`\n    display: inline-block;\n    cursor: pointer;\n    font-size: 1.5rem;\n    font-weight: 700;\n    /* margin-right: 2rem; */\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"rgba(0,0,0,.06)\"};\n    color: ${({ isActive }) => isActive ? \"#fff\" : \"#000\"};\n    padding: .8rem 3rem;\n    border-radius: .2rem;\n    transition: all .2s ease-out;\n\n    @media all and (max-width: 500px) {\n        padding: 0.5rem 1.5rem;\n        font-size: 1.4rem;\n    }\n`","import React from 'react'\n\nimport { CheckboxContainer } from './custom-checkbox.styles'\n\nconst CustomCheckbox = ({ label, isActive, handleClick, ...otherprops }) => {\n    return (\n        <CheckboxContainer isActive={isActive} onClick={handleClick} {...otherprops}>\n            {label}\n        </CheckboxContainer>\n    )\n}\n\nexport default CustomCheckbox\n","export const uploadImage = (token, img, imgName, imgAlt) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({ \"name\": imgName || \" \", \"alt\": imgAlt || \" \", 'image': img });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/images/upload`, requestOptions)\n}\n\nexport const fetchImages = () => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/images`)\n}\n\nexport const fetchFilteredImages = (token, limit, skip) => {\n    const myHeaders = new Headers();\n    // myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        sortBy: {\n            dateCreated: -1\n        },\n        limit,\n        skip\n    });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/images/filter`, requestOptions)\n}\n\nexport const deleteImage = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n    const requestOptions = {\n        method: 'DELETE',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/images/${id}`, requestOptions)\n}","import React, { createContext, useState, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport { deleteImage, fetchImages, uploadImage, fetchFilteredImages } from './image.queries'\n\nexport const ImageContext = createContext({\n    isDisabled: false,\n    images: null,\n    selectedImage: null,\n    getImages: () => { },\n    handleImage: () => { },\n    handleDeleteImage: () => { },\n    setSelectedImage: () => { },\n    getNextImages: () => { },\n    getPrevImage: () => { }\n})\n\nconst ImageProvider = ({ children }) => {\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const { token } = useContext(AuthContext)\n\n    const [isDisabled, setIsDisabled] = useState(false)\n    const [images, setImages] = useState(null)\n    const [selectedImage, setSelectedImage] = useState(null)\n    const [limit, setLimit] = useState(4)\n    const [skip, setSkip] = useState(0)\n\n    const handleImage = async (img, imgName, imgAlt, setImage, close) => {\n        setShowModal(true)\n        setIsLoading(true)\n        setIsDisabled(true)\n\n        try {\n            const response = await uploadImage(token, img, imgName, imgAlt)\n            const data = await response.json()\n            console.log(data)\n\n            if (data.image) {\n                setSelectedImage(data.image)\n                setImage(data.image._id)\n                getImages()\n                close()\n            }\n\n            setShowModal(false)\n            setIsLoading(false)\n            setIsDisabled(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n            setIsDisabled(false)\n        }\n    }\n\n    const getNextImages = async (addToSkip) => {\n        try {\n            if (images.length !== limit) return\n\n            const response = await fetchFilteredImages(token, limit, skip + addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip + addToSkip)\n            }\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getPrevImage = async (addToSkip) => {\n        if (skip === 0) return\n        try {\n            const response = await fetchFilteredImages(token, limit, skip - addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip - addToSkip)\n\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getImages = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            // const response = await fetchImages()\n            const response = await fetchFilteredImages(token, limit, skip)\n\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n            closeModal()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleDeleteImage = async (id, e) => {\n        e.preventDefault()\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const respone = await deleteImage(token, id)\n            const data = await respone.json()\n\n            getMessage(data.message)\n            setIsLoading(false)\n            getImages()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <ImageContext.Provider\n            value={{\n                isDisabled,\n                images,\n                selectedImage,\n                getImages,\n                handleImage,\n                handleDeleteImage,\n                setSelectedImage,\n                getNextImages,\n                getPrevImage\n            }}\n        >\n            {children}\n        </ImageContext.Provider>\n    )\n}\n\nexport default ImageProvider","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: .5rem .5rem .5rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 25px 0;\n        font-family: inherit;\n        resize: none;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: .6rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-textarea.styles'\n\nconst CustomTextarea = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <textarea\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomTextarea","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 50rem;\n    max-height: 60rem;\n\n    overflow-y: scroll;\n\n    /* display: flex;\n    flex-direction: column;\n    align-items: center; */\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: white;\n\n    position: relative;\n    z-index: 999999;\n\n`\n\nexport const UploadButton = styled.label`\n    input[type=\"file\"] {\n        position: absolute;\n        left: -999999999rem;\n    }\n    cursor: pointer;\n    background-color: #000;\n    color: #fff;\n    max-width: 18rem;\n    font-size: 1.4rem;\n    font-family: inherit;\n    padding: .8rem 1rem;\n    text-align: center;\n    display: block;\n    border: 1px solid #000;\n    transition: background-color .1s ease-out,\n                color .2s ease-out;\n    outline: none;\n    margin: 0 auto 2rem;\n\n    &:focus {\n        outline:none;\n    }\n\n    &:hover {\n        background-color: transparent;\n        color: #000;\n    }\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const FlexContainer = styled.div`\n    /* max-width: 46rem; */\n\n    /* width: 100%; */\n    /* overflow-x: scroll; */\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    margin: 2rem auto;\n`\n\nexport const ImageContainer = styled.div`\n    position: relative;\n    cursor: pointer;\n    width: 20rem;\n    margin: 1rem 0;\n\n    &:hover button {\n        display: block\n    }\n\n    /* &:not(:last-child) {\n        margin-right: 1.5rem;\n    } */\n\n    img {\n        width:100%;\n        height:100%;\n        object-fit: contain;\n        object-position: center;\n    }\n`\n\nexport const DeleteButton = styled.button`\n    cursor: pointer;\n    display:none;\n    border-radius:50%;\n    position: absolute;\n    border: none;\n    background-color: rgb(235, 172, 1);\n    padding: .5rem .75rem;\n    font-size: 1rem;\n    right: .5rem;\n    top: .5rem;\n\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const ImagePreviewContainer = styled.div`\n    display: block;\n    width: 100%;\n\n    img {\n        display: block;\n        max-width: 100%;\n        /* width: inherit; */\n    }\n`\n\nexport const TabOptions = styled.div`\n    max-width: 18rem;\n    display: flex;\n    justify-content: space-between;\n    margin: 0 auto;\n`\n\nexport const TabButton = styled.button`\n    cursor: pointer;\n    outline:none;\n    border: none;\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"#000\"};\n    color: #fff;\n    font-weight: ${({ isActive }) => isActive ? \"700\" : \"400\"};\n    font-family: inherit;\n    font-size: 1.2rem;\n    padding: .8rem 1.5rem;\n    border-radius: .2rem;\n    margin-bottom: 2rem;\n    transition: all .3s ease-out;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const CropButton = styled(CustomButton)`\n    display: block;\n    margin: 2rem auto 0;\n\n    &:disabled {\n        cursor: not-allowed;\n        background-color: gray;\n    }\n`\n\nexport const ButtonOptions = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nexport const FetchButtons = styled.button`\n    cursor: pointer;\n    outline: none;\n    border: none;\n    padding: .4rem 1rem;\n    border-radius: 50%;\n    color: #fff;\n    background-color: #000;\n    font-size: 1.2rem;\n    font-family: inherit;\n    margin: 0 .5rem;\n\n    &:focus {\n        outline: none;\n    }\n`","import React, { useEffect, useContext, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\n// import { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\n// import CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    // const {\n    //     getMessage,\n    //     setIsLoading,\n    //     setShowModal,\n    //     closeModal\n    // } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    // const getCropData = async (e) => {\n    //     e.preventDefault()\n    //     setShowModal(true)\n    //     setIsLoading(true)\n\n    //     try {\n    //         // if (typeof cropper !== 'undefined') {\n    //         toDataUrl(imgUrl, async (imgData) => {\n    //             const data = await handleImage(imgData, imageName, imageAlt)\n\n    //             if (data.image) {\n    //                 setImage(data.image._id)\n    //                 setSelectedImage(data.image)\n    //                 getImages()\n    //                 close()\n    //             }\n    //         })\n\n    //         // }\n    //         setShowModal(false)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    //     closeModal()\n    // };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Vybrať obrázok</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n"],"sourceRoot":""}
{"version":3,"sources":["components/product-overview/product-overview.styles.jsx","components/product-overview/product-overview.component.jsx","sections/e-shop/e-shop.section.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/section-header/section-header.styles.jsx","components/section-header/section-header.component.jsx","components/section-navbar/section-navbar.styles.jsx","components/section-navbar/section-navbar.component.jsx","components/pagination/pagination.styles.jsx","components/pagination/pagination.component.jsx"],"names":["ProductContainer","styled","div","ProductImage","ProductContent","ProductId","p","StockInfo","Price","PriceContainer","Options","UpdateButton","CustomButton","DeleteButton","ProductOverview","product","handleDeleteButton","handleUpdateButton","activePremisesTab","name","available","eanCode","price","image","src","process","imagePath","alt","toFixed","formatAvailable","onClick","EshopSection","push","useHistory","useContext","LoadingModalContext","closeModal","showModal","isLoading","message","useState","searchQuery","setSearchQuery","productItems","setProductItems","WarehouseContext","totalProducts","products","retailPremisesTabs","getProductsByQuery","handleChangePremisesTab","productCategoryTypeTabs","activeCategoryTypeTab","handleChangeCategoryTypeTab","deleteProduct","deleteLenses","useEffect","limit","currentPage","setCurrentPage","productsPerPage","loading","title","close","handleSearch","query","handleChange","e","target","value","handleAddButton","items","activeIndex","setActiveIndex","map","idx","_id","id","paginate","pageNumber","skip","activePage","shrinkLabel","css","InputGroup","CustomInput","label","otherProps","className","onChange","htmlFor","length","Container","paddingStyles","FixedContainer","ScrollContainer","children","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","HeaderContainer","Left","Right","SearchButton","AddButton","SectionHeader","count","type","onKeyPress","key","NavbarContainer","NavButton","active","SectionNavbar","item","PaginationContainer","PageNumber","button","isActive","Pagination","pageNumbers","i","Math","ceil","number"],"mappings":"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","file":"static/js/11.2ac13ed7.chunk.js","sourcesContent":["import styled from \"styled-components\"\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ProductContainer = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 15rem 1fr 25rem;\n    grid-template-rows: 1fr auto;\n    grid-template-areas:    \"i c p\"\n                            \"i c o\";\n\n\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    padding: 2rem;\n\n    &:not(:last-child) {\n        margin-bottom: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns : 20rem 1fr;\n        grid-template-rows: 1fr 1fr;\n\n        @media all and (max-width: 500px) {\n            grid-template-columns : 1fr;\n        }\n    }\n\n`\n\nexport const ProductImage = styled.div`\n    /* width: 100%; */\n    /* height: 100%; */\n    /* background-color: #eee; */\n    margin-right: 2rem;\n    grid-area: i;\n\n    img {\n        width: 100%;\n        height: 100%;\n        object-fit: contain;\n        object-position: start;\n    }  \n\n    @media all and (max-width: 800px) {\n        align-self: start;\n        grid-row-start: 1;\n        grid-row-end: 3;   \n\n        @media all and (max-width: 500px) {\n            justify-self: center;\n            margin-bottom: 2rem;\n        }\n\n    }\n`\n\nexport const ProductContent = styled.div`\n    grid-area: c;\n\n    h2 {\n        font-size: 1.6rem;\n    }\n`\n\nexport const ProductId = styled.p`\n    font-size: 1.2rem;\n    color: gray;\n    margin-bottom: 2rem;\n`\n\nexport const StockInfo = styled.p`\n    font-size: 1.4rem;\n    font-weight: 700;\n    color: #32AA5F;\n    margin-bottom: 1rem;\n`\n\nexport const Price = styled.p`\n    font-weight: 700;\n    font-size: 1.8rem;\n`\n\nexport const PriceContainer = styled.div`\n    grid-area: p;\n\n    text-align:end;\n    align-self: center;\n    justify-self: end;\n`\nexport const Options = styled.div`\n    grid-area: o;\n\n    align-self: end;\n    justify-self: end;\n`\n\nexport const UpdateButton = styled(CustomButton)`\n    font-size: 1.2rem;\n    margin-right: 1rem;\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1.2rem;\n    background-color: #ebac01;\n`","import React from 'react'\n\nimport {\n    formatAvailable\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    ProductContainer,\n    ProductImage,\n    ProductContent,\n    ProductId,\n    StockInfo,\n    Price,\n    Options,\n    UpdateButton,\n    DeleteButton,\n    PriceContainer\n} from './product-overview.styles'\n\nconst ProductOverview = ({ product, handleDeleteButton, handleUpdateButton, activePremisesTab }) => {\n    const { name, available, eanCode, price, image } = product\n\n\n    return (\n        <ProductContainer>\n            <ProductImage>\n                {image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${image.imagePath}`} alt={image.alt} />}\n            </ProductImage>\n\n            <ProductContent>\n                <h2>{name}</h2>\n                <ProductId>{eanCode}</ProductId>\n\n            </ProductContent>\n\n            <PriceContainer>\n                <Price>{(price / 100).toFixed(2)}€</Price>\n                <StockInfo>{formatAvailable(available, activePremisesTab)}</StockInfo>\n            </PriceContainer>\n\n            <Options>\n                <UpdateButton onClick={handleUpdateButton}>\n                    Upraviť\n                </UpdateButton>\n                <DeleteButton onClick={handleDeleteButton}>\n                    Vymazať\n                </DeleteButton>\n            </Options>\n        </ProductContainer>\n    )\n}\n\nexport default ProductOverview\n","import React, { useState, useContext, useEffect } from 'react'\n// import { AuthContext } from '../..//context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useHistory } from 'react-router-dom'\n\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ProductOverview from '../../components/product-overview/product-overview.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport Pagination from '../../components/pagination/pagination.component'\n\n\n\nconst EshopSection = () => {\n    const { push } = useHistory()\n    const { closeModal, showModal, isLoading, message } = useContext(LoadingModalContext)\n    const [searchQuery, setSearchQuery] = useState('')\n    const [productItems, setProductItems] = useState([])\n\n    const {\n        totalProducts,\n        // totalLenses,\n        activePremisesTab,\n        products,\n        retailPremisesTabs,\n        getProductsByQuery,\n        handleChangePremisesTab,\n        productCategoryTypeTabs,\n        activeCategoryTypeTab,\n        handleChangeCategoryTypeTab,\n        deleteProduct,\n        deleteLenses,\n    } = useContext(WarehouseContext)\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    query: searchQuery\n                })\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (!products) {\n            getProductsByQuery({\n                limit: 10\n            })\n        }\n        if (products) {\n            setProductItems(products)\n        }\n    }, [products])\n\n    useEffect(() => {\n        if (!searchQuery && products) {\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    limit: 10\n                })\n            }\n        }\n    }, [searchQuery])\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [productsPerPage] = useState(10)\n\n    const paginate = (pageNumber) => {\n        getProductsByQuery({\n            limit: 10,\n            skip: (pageNumber - 1) * productsPerPage\n        })\n        setCurrentPage(pageNumber)\n    }\n\n    const handleDeleteProduct = (id) => {\n        setCurrentPage(1)\n        deleteProduct(id)\n    }\n\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                title=\"Sklad\"\n                searchQuery={searchQuery}\n                handleSearch={handleSearch}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('sklad/novy-produkt')}\n\n            />\n\n            <SectionNavbar\n                items={retailPremisesTabs}\n                activeIndex={activePremisesTab}\n                setActiveIndex={handleChangePremisesTab}\n            />\n\n            <SectionNavbar\n                items={productCategoryTypeTabs}\n                activeIndex={activeCategoryTypeTab}\n                setActiveIndex={handleChangeCategoryTypeTab}\n            />\n\n            <ScrollContainer>\n                {productItems.map((product, idx) => (\n                    <ProductOverview\n                        key={idx}\n                        product={product}\n                        activePremisesTab={activePremisesTab}\n                        handleUpdateButton={() => push(`sklad/${product._id}`)}\n                        handleDeleteButton={activeCategoryTypeTab === 0 ? () => handleDeleteProduct(product._id) : () => deleteLenses((product._id))}\n                    />\n                ))}\n\n                {activeCategoryTypeTab === 0 && <Pagination\n                    productsPerPage={10}\n                    totalProducts={totalProducts}\n                    paginate={paginate}\n                    activePage={currentPage}\n                />}\n            </ScrollContainer>\n        </section >\n    )\n}\n\nexport default EshopSection\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`\n\nexport const FixedContainer = styled.div`\n    max-width: 115rem;\n`","import React from 'react'\nimport { Container, FixedContainer } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            <FixedContainer>\n                {children}\n            </FixedContainer>\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { paddingStyles } from '../../global.styles'\n\nexport const HeaderContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 3rem;\n    ${paddingStyles};    \n\n    @media all and (max-width: 600px) {\n        flex-wrap: wrap;\n    }\n`\n\nexport const Left = styled.div`\n    margin-top: 2rem;\n\n    display: flex;\n    align-items: center;\n\n`\n\nexport const Right = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport const Notification = styled.div`\n    background-color: #DD4C4C;\n    margin-left: 1.5rem;\n    color: #fff;\n    padding: .5rem 1rem;\n    border-radius: 1.5rem;\n    font-size: 1.4rem;\n`\n\n\nexport const SearchButton = styled(CustomButton)`\n    margin-top: 2rem;\n\n    margin-left: 2rem;\n`\n\nexport const AddButton = styled(CustomButton)`\n    margin-top: 2rem;\n    margin-left: 1rem;\n    background-color: rgb(235, 172, 1);\n    font-weight: bolder;\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    HeaderContainer,\n    Left,\n    Right,\n    SearchButton,\n    // Notification,\n    AddButton,\n} from './section-header.styles'\n\nconst SectionHeader = ({ searchQuery, handleSearch, handleChange, title, count = 999, handleAddButton = () => { } }) => {\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== '') {\n            if (e.key === 'Enter') {\n                handleSearch()\n            }\n        }\n    }\n\n    return (\n        <HeaderContainer>\n            <Left>\n                <h1>{title}</h1>\n                {/* <Notification>{count}</Notification> */}\n            </Left>\n            <Right>\n                {handleSearch && <div>\n                    <CustomInput\n                        type='search'\n                        name='searchbox'\n                        value={searchQuery}\n                        handleChange={handleChange}\n                        onKeyPress={handleSearchOnEnter}\n                        label='Vyhľadať'\n                    />\n                </div>}\n                {handleSearch && <SearchButton onClick={handleSearch}>Vyhľadať</SearchButton>}\n                <AddButton onClick={handleAddButton}>Pridať</AddButton>\n            </Right>\n        </HeaderContainer>\n    )\n}\n\nexport default SectionHeader\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { paddingStyles } from '../../global.styles'\n\n\nexport const NavbarContainer = styled.div`\n    margin-bottom: 3rem;\n    ${paddingStyles}\n\n    ul {\n        display: flex;\n        list-style: none;\n\n        li {\n            margin-right: 1.5rem;\n        }\n    }\n`\n\nexport const NavButton = styled(CustomButton)`\n    transition: all 0.3s ease-out;\n    background-color: ${({ active }) => active ? '#000' : '#fff'};\n    color: ${({ active }) => active ? '#fff' : '#000'};\n    font-weight: ${({ active }) => active ? 400 : 700};\n    padding: ${({ active }) => active ? \".5rem 2.5rem\" : \".5rem 1rem .5rem 0\"};\n`","import React from 'react'\n\nimport {\n    NavbarContainer,\n    NavButton\n} from './section-navbar.styles'\n\nconst SectionNavbar = ({ items, activeIndex, setActiveIndex }) => {\n\n    return (\n        <NavbarContainer>\n            <ul>\n                {\n                    items.map(item => (\n                        <li key={item.id}>\n                            <NavButton active={item.id === activeIndex} onClick={() => setActiveIndex(item.id)} >{item.name}</NavButton>\n                        </li>\n                    ))\n                }\n\n            </ul>\n        </NavbarContainer >\n    )\n}\n\nexport default SectionNavbar\n","import styled from 'styled-components'\n\nexport const PaginationContainer = styled.div`\n    ul {\n        width:3rem;\n        list-style: none;\n        display: flex;\n        justify-content: space-between;\n        margin: 0 auto;\n\n        li {\n\n        }\n    }\n`\n\nexport const PageNumber = styled.button`\n    cursor: pointer;\n    outline: none;\n    border: none;\n    background-color: ${({ isActive }) => isActive ? \"#000\" : \"transparent\"};\n    color: ${({ isActive }) => isActive ? \"#fff\" : \"#000\"};\n    font-family: inherit;\n    font-size: inherit;\n    border-radius: 50%;\n    padding: 0.3rem 1rem;\n\n\n    &:focus {\n        outline: none;\n    }\n`","import React from 'react'\n\nimport { PaginationContainer, PageNumber } from './pagination.styles'\n\nconst Pagination = ({ productsPerPage, totalProducts, paginate, activePage }) => {\n    const pageNumbers = []\n\n\n    for (let i = 1; i <= Math.ceil(totalProducts / productsPerPage); i++) {\n        pageNumbers.push(i)\n    }\n\n    return (\n        <PaginationContainer>\n            <ul>\n                {\n                    pageNumbers.map(number => (\n                        <li key={number}>\n                            <PageNumber isActive={activePage === number} onClick={() => paginate(number)}>\n                                {number}\n                            </PageNumber>\n                        </li>\n                    ))\n                }\n            </ul>\n        </PaginationContainer>\n    )\n}\n\nexport default Pagination\n"],"sourceRoot":""}
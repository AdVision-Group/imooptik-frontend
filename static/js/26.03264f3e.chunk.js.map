{"version":3,"sources":["context/blog/blog.queries.jsx","context/blog/blog.context.jsx"],"names":["fetchSinglePost","id","fetch","process","createNewPost","token","name","description","draft","html","img","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","redirect","updatePost","deletePost","BlogContext","createContext","posts","post","postsCount","getPosts","createPost","getPost","handlePostUpdate","handlePostDelete","resetBlog","BlogProvider","children","useContext","AuthContext","LoadingModalContext","getMessage","setIsLoading","setShowModal","useState","setPosts","setPost","setPostsCount","a","response","json","data","blogs","count","console","log","blog","message","postResponse","postData","Provider","value"],"mappings":"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","file":"static/js/26.03264f3e.chunk.js","sourcesContent":["\n\nexport const fetchPosts = () => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/blogs`)\n}\n\nexport const fetchSinglePost = (id) => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/blogs/${id}`)\n}\n\nexport const createNewPost = (token, name, description, draft, html, img) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify({ \"name\": name, \"description\": description, \"draft\": draft, \"html\": html, 'image': img });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs`, requestOptions)\n}\n\nexport const updatePost = (token, name, description, draft, html, img, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify({ \"name\": name, \"description\": description, \"draft\": draft, \"html\": html, 'image': img });\n\n    const requestOptions = {\n        method: 'PATCH',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs/${id}`, requestOptions)\n\n}\n\nexport const deletePost = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const requestOptions = {\n        method: 'DELETE',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs/${id}`, requestOptions)\n\n}\n\n","import React, { createContext, useState, useContext } from 'react'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport {\n    fetchPosts,\n    createNewPost,\n    fetchSinglePost,\n    updatePost,\n    deletePost,\n} from './blog.queries'\n\n\nexport const BlogContext = createContext({\n    posts: null,\n    post: null,\n    postsCount: 0,\n    getPosts: () => { },\n    createPost: () => { },\n    getPost: () => { },\n    handlePostUpdate: () => { },\n    handlePostDelete: () => { },\n    resetBlog: () => { }\n})\n\nconst BlogProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const [posts, setPosts] = useState(null)\n    const [post, setPost] = useState(null)\n    const [postsCount, setPostsCount] = useState(0)\n\n    const getPosts = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const response = await fetchPosts()\n        const data = await response.json()\n\n        setPosts(data.blogs)\n        setPostsCount(data.count)\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const getPost = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n\n            const response = await fetchSinglePost(id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.blog) {\n                setPost(data.blog)\n                setIsLoading(false)\n                getMessage(data.message)\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n            // setPosts(data.blogs)\n            // setPostsCount(data.count)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const createPost = async (img, name, description, draft, html) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await createNewPost(token, name, description, draft, html, img)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostUpdate = async (name, description, draft, html, img, id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await updatePost(token, name, description, draft, html, img, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostDelete = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await deletePost(token, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const resetBlog = () => {\n        setPost(null)\n    }\n\n    return (\n        <BlogContext.Provider\n            value={{\n                posts,\n                post,\n                postsCount,\n                getPosts,\n                createPost,\n                getPost,\n                handlePostUpdate,\n                handlePostDelete,\n                resetBlog,\n            }}\n        >\n            {children}\n        </BlogContext.Provider>\n    )\n}\n\nexport default BlogProvider"],"sourceRoot":""}
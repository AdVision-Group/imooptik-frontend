{"version":3,"sources":["components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","components/custom-checkbox/custom-checkbox.styles.jsx","components/custom-checkbox/custom-checkbox.component.jsx","components/custom-textarea/custom-textarea.styles.jsx","components/custom-textarea/custom-textarea.component.jsx","context/image/image.queries.jsx","context/image/image.context.jsx","components/modal-images/modal-images.styles.jsx","components/modal-images/modal-images.component.jsx"],"names":["shrinkLabel","css","InputGroup","styled","div","CustomInput","handleChange","label","name","otherProps","className","onChange","htmlFor","value","length","Container","paddingStyles","FixedContainer","ScrollContainer","children","CheckboxContainer","isActive","CustomCheckbox","handleClick","otherprops","onClick","CustomTextarea","uploadImage","token","img","imgName","imgAlt","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","redirect","fetch","process","fetchFilteredImages","limit","skip","sortBy","dateCreated","deleteImage","id","ImageContext","createContext","isDisabled","images","selectedImage","getImages","handleImage","handleDeleteImage","setSelectedImage","getNextImages","getPrevImage","ImageProvider","useContext","LoadingModalContext","getMessage","setIsLoading","setShowModal","closeModal","AuthContext","useState","setIsDisabled","setImages","setSkip","setImage","close","a","response","json","data","image","_id","console","log","addToSkip","message","e","preventDefault","respone","Provider","ModalContainer","Modal","UploadButton","CloseButton","button","FlexContainer","ImageContainer","DeleteButton","ImagePreviewContainer","TabOptions","TabButton","CropButton","CustomButton","ButtonOptions","FetchButtons","toDataUrl","url","callback","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","str","result","lastPos","indexOf","cuttedstr","slice","readAsDataURL","open","responseType","send","ModalImages","showTab","setShowTab","imageToUpload","setImageToUpload","imgUrl","setImgUrl","imageName","setImageName","imageAlt","setImageAlt","tab","useEffect","URL","createObjectURL","ReactDOM","createPortal","type","accept","target","files","Fragment","src","alt","imgData","handleSubmit","disabled","map","selectImage","imagePath","document","getElementById"],"mappings":"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","file":"static/js/3.7441b0d8.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\"\r\n\r\nconst shrinkLabel = css`\r\n    left: .5rem;\r\n    top: -14px;\r\n    font-size: 12px;\r\n    color: var(--input-color);\r\n`\r\nexport const InputGroup = styled.div`\r\n    position: relative;\r\n\r\n    /* margin: 45px 0; */\r\n\r\n    .form-input {\r\n        /* background: none; */\r\n        background-color: var(--input-background-color);\r\n        color: var(--input-color);\r\n        font-size: 1.5rem;\r\n        padding: 1rem .5rem 1rem 2rem;\r\n        display: block;\r\n        width: 100%;\r\n        border: none;\r\n        border-radius: .5rem;\r\n        /* border-bottom: 1px solid #000; */\r\n        margin: 2rem 0 0;\r\n        font-family: inherit;\r\n\r\n        &:focus {\r\n        outline: none;\r\n        }\r\n\r\n        &:focus ~ .form-input-label {\r\n            ${shrinkLabel}\r\n        }\r\n    }\r\n\r\n    input[type = 'password'] {\r\n        letter-spacing: 0.3em;\r\n    }\r\n\r\n    .form-input-label {\r\n        color: var(--input-color);\r\n        font-size: 1.4rem;\r\n        font-weight: normal;\r\n        position: absolute;\r\n        pointer-events: none;\r\n        left: 1.5rem;\r\n        top: 1rem;\r\n        transition: 300ms ease all;\r\n\r\n        &.shrink {\r\n            ${shrinkLabel}\r\n        }\r\n    }\r\n\r\n    @media all and (max-width: 500px) {\r\n        .form-input {\r\n            font-size: 1.4rem;\r\n        }\r\n        /* padding: 1rem .5rem 1rem 2rem; */\r\n    }\r\n`\r\n","import React from 'react'\r\n\r\nimport { InputGroup } from './custom-input.styles'\r\n\r\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\r\n    return (\r\n        <InputGroup>\r\n            <input\r\n                className='form-input'\r\n                name={name}\r\n                onChange={handleChange}\r\n                {...otherProps}\r\n            />\r\n            {label ? (\r\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\r\n                    {label}\r\n                </label>\r\n            ) : null\r\n            }\r\n        </InputGroup>\r\n    )\r\n}\r\n\r\nexport default CustomInput","import styled from 'styled-components'\r\nimport { paddingStyles } from '../../global.styles'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    /* height: 100%; */\r\n    overflow-y: scroll;\r\n    overflow-x: visible;\r\n    scroll-behavior: smooth;\r\n    ${paddingStyles};\r\n    padding-top: 1.5rem;\r\n    padding-bottom: 1.5rem;\r\n    color: var(--primary-text-color);\r\n    /* border: 1px solid red; */\r\n\r\n\r\n\r\n\r\n    @media all and (max-width: 1150px) {\r\n        margin-bottom: 8rem;\r\n\r\n        @media all and (max-width: 700px) {\r\n            overflow-x: scroll;\r\n        }\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n\r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        background:  var(--background-primary-color);\r\n    }\r\n\r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: var(--primary-color);\r\n    }\r\n\r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: var(--primary-color);\r\n    }\r\n`\r\n\r\nexport const FixedContainer = styled.div`\r\n    max-width: 125rem;\r\n    width: 100%;\r\n`","import React from 'react'\r\nimport { Container, FixedContainer } from './scroll-container.styles'\r\n\r\nconst ScrollContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <FixedContainer>\r\n                {children}\r\n            </FixedContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ScrollContainer","import styled from 'styled-components'\r\n\r\nexport const CheckboxContainer = styled.div`\r\n    display: inline-block;\r\n    cursor: pointer;\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    /* margin-right: 2rem; */\r\n    background-color: ${({ isActive }) => isActive ? \"var(--primary-color)\" : \"var(--body-background-primary-color)\"};\r\n    color: ${({ isActive }) => isActive ? \"var(--button-font-color)\" : \"var(--secondary-text-color)\"};\r\n    /* font-weight: ${({ isActive }) => isActive ? \"border\" : \"normal\"}; */\r\n    padding: .8rem 3rem;\r\n    border-radius: .2rem;\r\n    transition: all .2s ease-out;\r\n\r\n    @media all and (max-width: 500px) {\r\n        padding: 0.5rem 1.5rem;\r\n        font-size: 1.4rem;\r\n    }\r\n`","import React from 'react'\r\n\r\nimport { CheckboxContainer } from './custom-checkbox.styles'\r\n\r\nconst CustomCheckbox = ({ label, isActive, handleClick, ...otherprops }) => {\r\n    return (\r\n        <CheckboxContainer isActive={isActive} onClick={handleClick} {...otherprops}>\r\n            {label}\r\n        </CheckboxContainer>\r\n    )\r\n}\r\n\r\nexport default CustomCheckbox\r\n","import styled, { css } from \"styled-components\"\r\n\r\nconst shrinkLabel = css`\r\n    left: .5rem;\r\n    top: -14px;\r\n    font-size: 12px;\r\n    color: var(--input-color);\r\n`\r\nexport const InputGroup = styled.div`\r\n    position: relative;\r\n    /* margin: 45px 0; */\r\n\r\n    .form-input {\r\n        background: none;\r\n        background-color: var(--input-background-color);\r\n        color: var(--input-color);\r\n\r\n        font-size: 1.5rem;\r\n        padding: .5rem .5rem .5rem 2rem;\r\n        display: block;\r\n        width: 100%;\r\n        border: none;\r\n        border-radius: .5rem;\r\n        /* border-bottom: 1px solid #000; */\r\n        margin: 25px 0;\r\n        font-family: inherit;\r\n        resize: none;\r\n\r\n        &:focus {\r\n        outline: none;\r\n        }\r\n\r\n        &:focus ~ .form-input-label {\r\n            ${shrinkLabel}\r\n        }\r\n    }\r\n\r\n    .form-input-label {\r\n        color: var(--input-color);\r\n        font-size: 1.4rem;\r\n        font-weight: normal;\r\n        position: absolute;\r\n        pointer-events: none;\r\n        left: 1.5rem;\r\n        top: .6rem;\r\n        transition: 300ms ease all;\r\n\r\n        &.shrink {\r\n            ${shrinkLabel}\r\n        }\r\n    }\r\n`\r\n","import React from 'react'\r\n\r\nimport { InputGroup } from './custom-textarea.styles'\r\n\r\nconst CustomTextarea = ({ handleChange, label, name, ...otherProps }) => {\r\n    return (\r\n        <InputGroup>\r\n            <textarea\r\n                className='form-input'\r\n                name={name}\r\n                onChange={handleChange}\r\n                {...otherProps}\r\n            />\r\n            {label ? (\r\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\r\n                    {label}\r\n                </label>\r\n            ) : null\r\n            }\r\n        </InputGroup>\r\n    )\r\n}\r\n\r\nexport default CustomTextarea","export const uploadImage = (token, img, imgName, imgAlt) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", token);\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n\r\n    const raw = JSON.stringify({ \"name\": imgName || \" \", \"alt\": imgAlt || \" \", 'image': img });\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/images/upload`, requestOptions)\r\n}\r\n\r\nexport const fetchImages = () => {\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/images`)\r\n}\r\n\r\nexport const fetchFilteredImages = (token, limit, skip) => {\r\n    const myHeaders = new Headers();\r\n    // myHeaders.append(\"auth-token\", token);\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n\r\n    const raw = JSON.stringify({\r\n        sortBy: {\r\n            dateCreated: -1\r\n        },\r\n        limit,\r\n        skip\r\n    });\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/images/filter`, requestOptions)\r\n}\r\n\r\nexport const deleteImage = (token, id) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", token);\r\n\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/images/${id}`, requestOptions)\r\n}","import React, { createContext, useState, useContext } from 'react'\r\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\r\nimport { AuthContext } from '../auth/auth.context'\r\nimport {\r\n    deleteImage,\r\n    // fetchImages, \r\n    uploadImage,\r\n    fetchFilteredImages\r\n} from './image.queries'\r\n\r\nexport const ImageContext = createContext({\r\n    isDisabled: false,\r\n    images: null,\r\n    selectedImage: null,\r\n    getImages: () => { },\r\n    handleImage: () => { },\r\n    handleDeleteImage: () => { },\r\n    setSelectedImage: () => { },\r\n    getNextImages: () => { },\r\n    getPrevImage: () => { }\r\n})\r\n\r\nconst ImageProvider = ({ children }) => {\r\n    const {\r\n        getMessage,\r\n        setIsLoading,\r\n        setShowModal,\r\n        closeModal\r\n    } = useContext(LoadingModalContext)\r\n\r\n    const { token } = useContext(AuthContext)\r\n\r\n    const [isDisabled, setIsDisabled] = useState(false)\r\n    const [images, setImages] = useState(null)\r\n    const [selectedImage, setSelectedImage] = useState(null)\r\n    const [limit] = useState(4)\r\n    const [skip, setSkip] = useState(0)\r\n\r\n    const handleImage = async (img, imgName, imgAlt, setImage, close) => {\r\n        setShowModal(true)\r\n        setIsLoading(true)\r\n        setIsDisabled(true)\r\n\r\n        try {\r\n            const response = await uploadImage(token, img, imgName, imgAlt)\r\n            const data = await response.json()\r\n            if (data.image) {\r\n                setSelectedImage(data.image)\r\n                setImage(data.image._id)\r\n                getImages()\r\n                close()\r\n            }\r\n\r\n            setShowModal(false)\r\n            setIsLoading(false)\r\n            setIsDisabled(false)\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n            setIsDisabled(false)\r\n        }\r\n    }\r\n\r\n    const getNextImages = async (addToSkip) => {\r\n        try {\r\n            if (images.length !== limit) return\r\n\r\n            const response = await fetchFilteredImages(token, limit, skip + addToSkip)\r\n            const data = await response.json()\r\n\r\n            if (data.images) {\r\n                setImages(data.images)\r\n\r\n                setSkip(skip + addToSkip)\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const getPrevImage = async (addToSkip) => {\r\n        if (skip === 0) return\r\n        try {\r\n            const response = await fetchFilteredImages(token, limit, skip - addToSkip)\r\n            const data = await response.json()\r\n\r\n            if (data.images) {\r\n                setImages(data.images)\r\n\r\n                setSkip(skip - addToSkip)\r\n\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const getImages = async () => {\r\n        setShowModal(true)\r\n        setIsLoading(true)\r\n\r\n        try {\r\n            // const response = await fetchImages()\r\n            const response = await fetchFilteredImages(token, limit, skip)\r\n\r\n            const data = await response.json()\r\n\r\n            if (data.images) {\r\n                setImages(data.images)\r\n            }\r\n\r\n            getMessage(data.message)\r\n            setIsLoading(false)\r\n            closeModal()\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleDeleteImage = async (id, e) => {\r\n        e.preventDefault()\r\n        setShowModal(true)\r\n        setIsLoading(true)\r\n\r\n        try {\r\n            const respone = await deleteImage(token, id)\r\n            const data = await respone.json()\r\n\r\n            getMessage(data.message)\r\n            setIsLoading(false)\r\n            getImages()\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ImageContext.Provider\r\n            value={{\r\n                isDisabled,\r\n                images,\r\n                selectedImage,\r\n                getImages,\r\n                handleImage,\r\n                handleDeleteImage,\r\n                setSelectedImage,\r\n                getNextImages,\r\n                getPrevImage\r\n            }}\r\n        >\r\n            {children}\r\n        </ImageContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ImageProvider","import styled from 'styled-components'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\n\r\nexport const ModalContainer = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    z-index: 99999;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    background-color: rgba(0,0,0,0.3);\r\n`\r\n\r\nexport const Modal = styled.div`\r\n    width:100%;\r\n    max-width: 50rem;\r\n    max-height: 60rem;\r\n\r\n    overflow-y: scroll;\r\n\r\n    /* display: flex;\r\n    flex-direction: column;\r\n    align-items: center; */\r\n\r\n    padding: 2rem;\r\n    border-radius: .5rem;\r\n    background-color: var(--body-background-primary-color);\r\n    color: var(--primary-text-color);\r\n\r\n    position: relative;\r\n    z-index: 999999;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n\r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        background:  var(--background-primary-color);\r\n    }\r\n\r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: var(--primary-color);\r\n    }\r\n\r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: var(--primary-color);\r\n    }\r\n\r\n`\r\n\r\nexport const UploadButton = styled.label`\r\n    input[type=\"file\"] {\r\n        position: absolute;\r\n        left: -999999999rem;\r\n    }\r\n    cursor: pointer;\r\n        background-color: transparent;\r\n\r\n    max-width: 18rem;\r\n    font-size: 1.4rem;\r\n    font-family: inherit;\r\n    font-weight: bolder;\r\n    padding: .8rem 1rem;\r\n    text-align: center;\r\n    display: block;\r\n    border: 1px solid var(--primary-color);\r\n    color: var(--primary-color);\r\n    transition: background-color .1s ease-out,\r\n                color .2s ease-out;\r\n    outline: none;\r\n    margin: 0 auto 2rem;\r\n\r\n    &:focus {\r\n        outline:none;\r\n    }\r\n\r\n    &:hover {\r\n        background-color: var(--primary-color);\r\n        color: var(--button-font-color);\r\n    }\r\n`\r\n\r\nexport const CloseButton = styled.button`\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 99999;\r\n\r\n    border: none;\r\n    outline: none;\r\n    opacity: 0;\r\n\r\n    &:focus {\r\n        outline: none\r\n    }\r\n`\r\n\r\nexport const FlexContainer = styled.div`\r\n    /* max-width: 46rem; */\r\n\r\n    /* width: 100%; */\r\n    /* overflow-x: scroll; */\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-evenly;\r\n    margin: 2rem auto;\r\n`\r\n\r\nexport const ImageContainer = styled.div`\r\n    position: relative;\r\n    cursor: pointer;\r\n    width: 20rem;\r\n    margin: 1rem 0;\r\n\r\n    &:hover button {\r\n        display: block\r\n    }\r\n\r\n    /* &:not(:last-child) {\r\n        margin-right: 1.5rem;\r\n    } */\r\n\r\n    img {\r\n        width:100%;\r\n        height:100%;\r\n        object-fit: contain;\r\n        object-position: center;\r\n    }\r\n`\r\n\r\nexport const DeleteButton = styled.button`\r\n    cursor: pointer;\r\n    display:none;\r\n    border-radius:50%;\r\n    position: absolute;\r\n    border: none;\r\n    background-color: var(--color-red);\r\n    color: #fff;\r\n    padding: .5rem .75rem;\r\n    font-size: 1rem;\r\n    right: .5rem;\r\n    top: .5rem;\r\n\r\n    outline: none;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`\r\n\r\nexport const ImagePreviewContainer = styled.div`\r\n    display: block;\r\n    width: 100%;\r\n\r\n    img {\r\n        display: block;\r\n        max-width: 100%;\r\n        /* width: inherit; */\r\n    }\r\n`\r\n\r\nexport const TabOptions = styled.div`\r\n    max-width: 18rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0 auto;\r\n`\r\n\r\nexport const TabButton = styled.button`\r\n    cursor: pointer;\r\n    outline:none;\r\n    border: none;\r\n    background-color: ${({ isActive }) => isActive ? \"var(--primary-color)\" : \"var(--body-background-primary-color)\"};\r\n    color: ${({ isActive }) => isActive ? \"var(--button-font-color)\" : \"var(--primary-text-color)\"} ;\r\n    font-weight: ${({ isActive }) => isActive ? \"700\" : \"400\"};\r\n    font-family: inherit;\r\n    font-size: 1.2rem;\r\n    padding: .8rem 1.5rem;\r\n    border-radius: .2rem;\r\n    margin-bottom: 2rem;\r\n    transition: all .3s ease-out;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`\r\n\r\nexport const CropButton = styled(CustomButton)`\r\n    display: block;\r\n    margin: 2rem auto 0;\r\n\r\n    &:disabled {\r\n        cursor: not-allowed;\r\n        background-color: gray;\r\n    }\r\n`\r\n\r\nexport const ButtonOptions = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`\r\n\r\nexport const FetchButtons = styled.button`\r\n    cursor: pointer;\r\n    outline: none;\r\n    border: none;\r\n    padding: .4rem 1rem;\r\n    border-radius: 50%;\r\n    color: var(--button-font-color);\r\n    background-color: var(--color-black);\r\n    font-size: 1.2rem;\r\n    font-family: inherit;\r\n    margin: 0 .5rem;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`","import React, { useEffect, useContext, useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { ImageContext } from '../../context/image/image.context'\r\n// import { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\r\n// import Cropper from 'react-cropper';\r\n// import 'cropperjs/dist/cropper.css'\r\n\r\n// import CustomButton from '../../components/custom-button/custom-button.component'\r\n\r\nimport CustomInput from '../custom-input/custom-input.component'\r\n\r\nimport {\r\n    ModalContainer,\r\n    UploadButton,\r\n    Modal,\r\n    CloseButton,\r\n    FlexContainer,\r\n    ImageContainer,\r\n    DeleteButton,\r\n    ImagePreviewContainer,\r\n    TabButton,\r\n    TabOptions,\r\n    CropButton,\r\n    ButtonOptions,\r\n    FetchButtons\r\n} from './modal-images.styles'\r\n\r\nconst ModalImages = ({ close, setImage }) => {\r\n    const {\r\n        isDisabled,\r\n        getImages,\r\n        handleDeleteImage,\r\n        handleImage,\r\n        images,\r\n        setSelectedImage,\r\n        getNextImages,\r\n        getPrevImage\r\n    } = useContext(ImageContext)\r\n\r\n    // const {\r\n    //     getMessage,\r\n    //     setIsLoading,\r\n    //     setShowModal,\r\n    //     closeModal\r\n    // } = useContext(LoadingModalContext)\r\n\r\n    const selectImage = (img) => {\r\n        setImage(img._id)\r\n        setSelectedImage(img)\r\n        close()\r\n    }\r\n\r\n    // const handleUploadImage = (e) => {\r\n    //     handleImage(e.target.files[0])\r\n    //     close()\r\n    // }\r\n\r\n    const [showTab, setShowTab] = useState(\"upload\")\r\n    const [imageToUpload, setImageToUpload] = useState(null)\r\n    const [imgUrl, setImgUrl] = useState('')\r\n    // const [cropper, setCropper] = useState(null)\r\n    // const [cropData, setCropData] = useState('');\r\n\r\n    const [imageName, setImageName] = useState('')\r\n    const [imageAlt, setImageAlt] = useState('')\r\n\r\n\r\n    const handleClick = (e, tab) => {\r\n        e.preventDefault()\r\n        setShowTab(tab)\r\n\r\n        if (tab === 'images') {\r\n            if (!images) {\r\n                getImages()\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (imageToUpload) {\r\n            setImgUrl(URL.createObjectURL(imageToUpload))\r\n        }\r\n    }, [imageToUpload])\r\n\r\n    // const getCropData = async (e) => {\r\n    //     e.preventDefault()\r\n    //     setShowModal(true)\r\n    //     setIsLoading(true)\r\n\r\n    //     try {\r\n    //         // if (typeof cropper !== 'undefined') {\r\n    //         toDataUrl(imgUrl, async (imgData) => {\r\n    //             const data = await handleImage(imgData, imageName, imageAlt)\r\n\r\n    //             if (data.image) {\r\n    //                 setImage(data.image._id)\r\n    //                 setSelectedImage(data.image)\r\n    //                 getImages()\r\n    //                 close()\r\n    //             }\r\n    //         })\r\n\r\n    //         // }\r\n    //         setShowModal(false)\r\n    //         setIsLoading(false)\r\n    //     } catch (err) {\r\n    //         console.log(err)\r\n    //         getMessage(\"Nieco sa pokazilo\")\r\n    //         setIsLoading(false)\r\n    //     }\r\n\r\n    //     closeModal()\r\n    // };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        toDataUrl(imgUrl, (imgData) => {\r\n            handleImage(imgData, imageName, imageAlt, setImage, close)\r\n        })\r\n    }\r\n\r\n    return ReactDOM.createPortal((\r\n        <ModalContainer >\r\n            <CloseButton onClick={close} />\r\n            <Modal>\r\n                <TabOptions>\r\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\r\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\r\n                </TabOptions>\r\n                {\r\n                    showTab === 'upload' ? (\r\n                        <div>\r\n                            <UploadButton htmlFor='image'>\r\n                                <input\r\n                                    id='image'\r\n                                    type='file'\r\n                                    name='image'\r\n                                    accept=\"image/png, image/jpeg\"\r\n                                    onChange={e => setImageToUpload(e.target.files[0])}\r\n                                />\r\n                                    Vybrať obrázok\r\n                            </UploadButton>\r\n                            {imgUrl && (\r\n                                <React.Fragment>\r\n                                    <ImagePreviewContainer>\r\n                                        <img src={imgUrl} alt={\"new img\"} />\r\n                                        {/* <Cropper\r\n                                            src={imgUrl}\r\n                                            style={{ height: 400, width: '100%' }}\r\n                                            initialAspectRatio={1}\r\n                                            aspectRatio={1}\r\n                                            scalable={true}\r\n                                            zoomable={false}\r\n                                            guides={false}\r\n                                            cropBoxResizable={true}\r\n                                            onInitialized={instance => {\r\n                                                setCropper(instance)\r\n                                            }}\r\n                                        /> */}\r\n                                    </ImagePreviewContainer>\r\n                                    <CustomInput\r\n                                        label=\"Názov\"\r\n                                        type='text'\r\n                                        name='imageName'\r\n                                        value={imageName}\r\n                                        handleChange={(e) => setImageName(e.target.value)}\r\n                                    />\r\n                                    <CustomInput\r\n                                        label=\"Alt\"\r\n                                        type='text'\r\n                                        name='imageAlt'\r\n                                        value={imageAlt}\r\n                                        handleChange={(e) => setImageAlt(e.target.value)}\r\n                                    />\r\n\r\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Vybrať obrázok</CropButton>\r\n                                </React.Fragment>\r\n                            )}\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <h2>Nahrane obrazky</h2>\r\n                            <FlexContainer>\r\n                                {images && images.map(img => (\r\n                                    <ImageContainer key={img._id}>\r\n                                        <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\r\n                                        <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\r\n                                    </ImageContainer>\r\n                                ))}\r\n\r\n                            </FlexContainer>\r\n                            <ButtonOptions>\r\n                                <FetchButtons onClick={() => getPrevImage(2)}>\r\n                                    {\"<\"}\r\n                                </FetchButtons>\r\n                                <FetchButtons onClick={() => getNextImages(2)}>\r\n                                    {\">\"}\r\n                                </FetchButtons>\r\n                            </ButtonOptions>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            </Modal>\r\n        </ModalContainer>\r\n    ), document.getElementById('portal'))\r\n}\r\n\r\nexport const toDataUrl = (url, callback) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.onload = () => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            const str = reader.result\r\n            const lastPos = str.indexOf(';')\r\n            const cuttedstr = str.slice(lastPos, str.length)\r\n            const newStr = \"data:image/png\" + cuttedstr\r\n            callback(newStr);\r\n        };\r\n        reader.readAsDataURL(xhr.response);\r\n    };\r\n    xhr.open('GET', url);\r\n    xhr.responseType = 'blob';\r\n    xhr.send();\r\n};\r\n\r\nexport default ModalImages\r\n"],"sourceRoot":""}
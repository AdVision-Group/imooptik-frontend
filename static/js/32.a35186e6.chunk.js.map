{"version":3,"sources":["context/user/user.queries.jsx","context/user/user.utils.jsx","context/user/user.context.jsx"],"names":["fetchUser","token","id","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","process","patchUser","user","body","JSON","stringify","postUser","name","email","postAdmin","password","premises","admin","Number","initUserObj","address","boughtProducts","city","country","date","finishedRegistration","company","ico","dic","icdph","psc","lenses","cylinder","cylinderAxes","diopters","distance","addition","basis","prism","orders","phone","tempUser","totalSpent","watchList","fName","lName","confirmPassword","birthDate","Date","now","optometrist","UserContext","createContext","isUpdating","activeIndex","handleChangeFilterItem","filterItems","totalCount","users","getUser","handleChange","handleParameterChange","handleCompanyChange","updateUser","resetUser","formToShow","switchFormButtons","toggleUserForm","createUser","getFilteredUsers","getUserByQuery","deleteUser","UserProvider","children","push","useHistory","useContext","AuthContext","LoadingModalContext","closeModal","getMessage","setIsLoading","setShowModal","useState","setUser","setUsers","setIsUpdating","setActiveIndex","setFormToShow","useEffect","a","response","json","data","split","message","console","log","path","refetchUser","close","addUser","error","messageSK","filters","_id","type","includes","userId","filter","raw","query","Provider","value","itemIndex","e","target","idx","arr","preventDefault"],"mappings":"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","file":"static/js/32.a35186e6.chunk.js","sourcesContent":["export const fetchUsers = (token) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", token);\r\n\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users`, requestOptions)\r\n\r\n}\r\n\r\nexport const fetchUser = (token, id) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", token);\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\r\n}\r\n\r\nexport const patchUser = (token, user, id) => {\r\n    // const {\r\n    //     _id: id,\r\n    //     address,\r\n    //     admin,\r\n    //     city,\r\n    //     country,\r\n    //     email,\r\n    //     lenses: {\r\n    //         cylinder,\r\n    //         cylinderAxes,\r\n    //         diopters,\r\n    //         distance,\r\n    //         addition,\r\n    //         basis,\r\n    //         prism,\r\n    //     },\r\n    //     name,\r\n    //     phone,\r\n    //     psc,\r\n    //     premises\r\n    // } = user\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", token);\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n\r\n    const raw = JSON.stringify({\r\n        ...user\r\n        // address: address || undefined,\r\n        // admin: admin,\r\n        // premises: Number(premises) === 0 ? undefined : premises,\r\n        // city: city || undefined,\r\n        // country: country || undefined,\r\n        // email: email || undefined,\r\n        // lenses: {\r\n        //     cylinder: cylinder,\r\n        //     cylinderAxes: cylinderAxes,\r\n        //     diopters: diopters,\r\n        //     distance: distance,\r\n        //     addition: addition,\r\n        //     basis: basis,\r\n        //     prism: prism,\r\n        // },\r\n        // name: name,\r\n        // phone: phone || undefined,\r\n        // psc: psc || undefined,\r\n    })\r\n\r\n    const requestOptions = {\r\n        method: 'PATCH',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\r\n}\r\n\r\nexport const postUser = (token, user) => {\r\n    const {\r\n        name,\r\n        email,\r\n    } = user\r\n\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", token);\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n\r\n    const raw = JSON.stringify({\r\n        email: email,\r\n        name: name,\r\n    })\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\r\n}\r\n\r\nexport const postAdmin = (token, user) => {\r\n\r\n    const {\r\n        name,\r\n        email,\r\n        password,\r\n        premises,\r\n        admin\r\n    } = user\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", token);\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n\r\n    const raw = JSON.stringify({\r\n        admin: Number(admin),\r\n        email: email,\r\n        name: name,\r\n        premises: Number(premises),\r\n        password\r\n    })\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\r\n}","export const initUserObj = {\r\n    address: \"\",\r\n    admin: 0,\r\n    premises: 0,\r\n    boughtProducts: {},\r\n    city: \"\",\r\n    country: \"\",\r\n    date: \"\",\r\n    email: \"\",\r\n    finishedRegistration: false,\r\n    company: {\r\n        ico: \"\",\r\n        dic: \"\",\r\n        icdph: \"\",\r\n        address: '',\r\n        psc: '',\r\n        country: '',\r\n    },\r\n    lenses: {\r\n        cylinder: [1001, 1001, 1001, 1001],\r\n        cylinderAxes: [1001, 1001, 1001, 1001],\r\n        diopters: [1001, 1001, 1001, 1001],\r\n        distance: [1001, 1001, 1001, 1001],\r\n        addition: [1001, 1001, 1001, 1001],\r\n        basis: [1001, 1001, 1001, 1001],\r\n        prism: [1001, 1001, 1001, 1001],\r\n    },\r\n    name: \"\",\r\n    orders: [],\r\n    phone: \"\",\r\n    psc: \"\",\r\n    tempUser: false,\r\n    totalSpent: 0,\r\n    watchList: [],\r\n    fName: \"\",\r\n    lName: \"\",\r\n    password: '',\r\n    confirmPassword: \"\",\r\n    birthDate: Date.now(),\r\n    optometrist: false\r\n\r\n}","import React, { createContext, useState, useContext, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../auth/auth.context'\r\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\r\n// import { OrderContext } from '../order/order.context'\r\n\r\nimport {\r\n    // fetchUsers,\r\n    fetchUser,\r\n    patchUser,\r\n    postAdmin,\r\n    postUser,\r\n} from './user.queries'\r\n\r\nimport {\r\n    initUserObj\r\n} from './user.utils'\r\n\r\nexport const UserContext = createContext({\r\n    isUpdating: false,\r\n    activeIndex: 0,\r\n    handleChangeFilterItem: () => { },\r\n    filterItems: [],\r\n    totalCount: 0,\r\n    users: null,\r\n    user: null,\r\n    // getUsers: () => { },\r\n    getUser: () => { },\r\n    handleChange: () => { },\r\n    handleParameterChange: () => { },\r\n    handleCompanyChange: () => { },\r\n    updateUser: () => { },\r\n    resetUser: () => { },\r\n    formToShow: 0,\r\n    switchFormButtons: [],\r\n    toggleUserForm: () => { },\r\n    createUser: () => { },\r\n    getFilteredUsers: () => { },\r\n    getUserByQuery: () => { },\r\n    deleteUser: () => { },\r\n})\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const { push } = useHistory()\r\n    const { token } = useContext(AuthContext)\r\n    const {\r\n        closeModal,\r\n        getMessage,\r\n        setIsLoading,\r\n        setShowModal\r\n    } = useContext(LoadingModalContext)\r\n\r\n    // ------------------------\r\n\r\n    const [user, setUser] = useState(initUserObj)\r\n    const [users, setUsers] = useState(null)\r\n    const [totalCount] = useState(0)\r\n\r\n    // ------------------------\r\n\r\n    const [isUpdating, setIsUpdating] = useState(false)\r\n    const [activeIndex, setActiveIndex] = useState(0)\r\n    const filterItems = [\r\n        {\r\n            id: 0,\r\n            name: \"Zákazníci\",\r\n            filter: 0,\r\n        },\r\n        {\r\n            id: 1,\r\n            name: \"Zamestnanci\",\r\n            filter: 1,\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Vedúci\",\r\n            filter: 2,\r\n        },\r\n        // {\r\n        //     id: 3,\r\n        //     name: \"Velký brat\",\r\n        //     filter: 3,\r\n        // },\r\n        // {\r\n        //     id: 4,\r\n        //     name: \"Odstránené\",\r\n        //     filter: 3\r\n        // }\r\n    ]\r\n\r\n    // ------------------------\r\n\r\n    const [formToShow, setFormToShow] = useState(0)\r\n    const switchFormButtons = [\r\n        {\r\n            name: \"Zákazník\"\r\n        },\r\n        {\r\n            name: \"Zamestnanec\"\r\n        }\r\n    ]\r\n\r\n    const toggleUserForm = (e, idx) => {\r\n        e.preventDefault()\r\n        setFormToShow(idx)\r\n    }\r\n\r\n    // ------------------------\r\n\r\n\r\n    const handleChangeFilterItem = (itemIndex) => {\r\n        setActiveIndex(itemIndex)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleParameterChange = (e, idx) => {\r\n        const { name, value } = e.target\r\n        let arr = user.lenses[name]\r\n        arr[idx] = value === '' ? 1001 : value\r\n        setUser({\r\n            ...user,\r\n            lenses: {\r\n                ...user.lenses,\r\n                [name]: arr\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleCompanyChange = (e) => {\r\n        const { name, value } = e.target\r\n        setUser({\r\n            ...user,\r\n            company: {\r\n                ...user.company,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUser({\r\n            ...user,\r\n            name: user?.fName + \" \" + user?.lName\r\n        })\r\n    }, [user?.fName, user?.lName])\r\n\r\n    const resetUser = () => {\r\n        setUser(initUserObj)\r\n        setIsUpdating(false)\r\n        setFormToShow(0)\r\n    }\r\n\r\n    // ------------------------\r\n    // USER ACTIONS\r\n    // ------------------------\r\n\r\n    // Get all users\r\n    // const getUsers = async () => {\r\n    //     setIsLoading(true)\r\n    //     setShowModal(true)\r\n\r\n    //     try {\r\n    //         const response = await fetchUsers(token)\r\n    //         const data = await response.json()\r\n\r\n    //         console.log(data)\r\n    //         if (data.users) {\r\n    //             setUsers(data.users)\r\n    //             setTotalCount(data.count)\r\n    //             setIsLoading(false)\r\n    //             closeModal()\r\n\r\n    //         } else {\r\n    //             getMessage(data.message)\r\n    //             setIsLoading(false)\r\n    //         }\r\n    //     } catch (err) {\r\n    //         console.log(err)\r\n    //         getMessage(\"Nieco sa pokazilo\")\r\n    //         setIsLoading(false)\r\n    //     }\r\n    // }\r\n\r\n    // Get single user\r\n    const getUser = async (id) => {\r\n        setIsLoading(true)\r\n        setShowModal(true)\r\n        setIsUpdating(true)\r\n\r\n        try {\r\n            const response = await fetchUser(token, id)\r\n            const data = await response.json()\r\n\r\n            if (data.user) {\r\n                setUser({\r\n                    ...user,\r\n                    ...data.user,\r\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\r\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\r\n                })\r\n                setIsLoading(false)\r\n                closeModal()\r\n\r\n            } else {\r\n                getMessage(data.message)\r\n                setIsLoading(false)\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    // Update user\r\n    const updateUser = async (user, id, path, refetchUser, close, addUser) => {\r\n        setIsLoading(true)\r\n        setShowModal(true)\r\n\r\n        try {\r\n            const response = await patchUser(token, user, id)\r\n            const data = await response.json()\r\n\r\n            if (data.error) {\r\n                getMessage(data.messageSK)\r\n                setIsLoading(false)\r\n                return\r\n            }\r\n\r\n\r\n            setIsLoading(false)\r\n            closeModal()\r\n\r\n            if (path === 'order') {\r\n                push(`/dashboard/objednavky/${id}`)\r\n            } else if (path === 'profile') {\r\n                push(`/dashboard/zakaznici/${id}`)\r\n            } else if (path === 'isOrder') {\r\n                setUser({\r\n                    ...user,\r\n                    ...data.user,\r\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\r\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\r\n                })\r\n\r\n                addUser({\r\n                    ...user,\r\n                    ...data.user,\r\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\r\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\r\n                })\r\n                // console.log(\"REFETCH USER\")\r\n                // console.log(\"REFETCH USER\")\r\n                // console.log(\"REFETCH USER\")\r\n                // refetchUser()\r\n                close()\r\n            } else {\r\n                push(\"/dashboard/zakaznici\")\r\n            }\r\n\r\n            getFilteredUsers({\r\n                filters: {\r\n                    admin: activeIndex\r\n                }\r\n            })\r\n            // http://localhost:1000/#/dashboard/zakaznici\r\n\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const createUser = async (user, path) => {\r\n        setIsLoading(true)\r\n        setShowModal(true)\r\n\r\n        try {\r\n            if (formToShow === 0) {\r\n                let data = {}\r\n                if (!user._id) {\r\n                    const response = await postUser(token, user)\r\n                    data = await response.json()\r\n\r\n                    if (data.error) {\r\n                        getMessage(data.message)\r\n\r\n                        if (data.type === 'email') {\r\n                            getMessage(\"Email existuje\")\r\n                        }\r\n                        if (data.error === 'format' && data.message.includes('email')) {\r\n                            getMessage(\"Email musi byt platny email\")\r\n                        }\r\n                        setIsLoading(false)\r\n                        return\r\n                    }\r\n\r\n                    setUser({\r\n                        ...data.user,\r\n                        _id: data.user._id\r\n                    })\r\n                }\r\n\r\n                const userId = data.user ? data.user._id : user._id\r\n\r\n                updateUser({\r\n                    ...user\r\n                }, userId, path)\r\n\r\n                // setIsLoading(false)\r\n                // getUsers()\r\n                // push('/dashboard/zakaznici')\r\n                // closeModal()\r\n\r\n            } else {\r\n                if (user.password !== user.confirmPassword) {\r\n                    getMessage(\"Heslá sa nezhodujú\")\r\n                    setIsLoading(false)\r\n                    return\r\n                }\r\n\r\n                const response = await postAdmin(token, user)\r\n                const data = await response.json()\r\n\r\n                if (data.error) {\r\n                    getMessage(data.message)\r\n                    setIsLoading(false)\r\n                    return\r\n                }\r\n\r\n                setIsLoading(false)\r\n                getFilteredUsers({\r\n                    filters: {\r\n                        admin: activeIndex\r\n                    }\r\n                })\r\n\r\n                push(\"/dashboard/zakaznici\")\r\n                closeModal()\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Niečo sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // ----------------------------------------------\r\n    // ----------------------------------------------\r\n    // ----------------------------------------------\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", token);\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    const deleteUser = async (id) => {\r\n        setIsLoading(true)\r\n        setShowModal(true)\r\n\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: myHeaders,\r\n            // body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\r\n            const data = await response.json()\r\n\r\n            if (data.user) {\r\n\r\n                push(\"/dashboard/zakaznici\")\r\n                setIsLoading(false)\r\n                closeModal()\r\n                return\r\n            }\r\n\r\n            getMessage(data.messageSK)\r\n            setIsLoading(false)\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Niečo sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const getFilteredUsers = async (filter) => {\r\n        setIsLoading(true)\r\n        setShowModal(true)\r\n\r\n        const raw = JSON.stringify(filter)\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\r\n            const data = await response.json()\r\n\r\n            if (data.users) {\r\n                setUsers(data.users)\r\n                closeModal()\r\n                return\r\n            }\r\n\r\n            getMessage(data.messageSK)\r\n            setIsLoading(false)\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const getUserByQuery = async (query) => {\r\n        setIsLoading(true)\r\n        setShowModal(true)\r\n\r\n        const raw = JSON.stringify(query)\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\r\n            const data = await response.json()\r\n\r\n            if (data.users) {\r\n                setUsers(data.users)\r\n                closeModal()\r\n                return\r\n            }\r\n\r\n            getMessage(data.message)\r\n            setIsLoading(false)\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            getMessage(\"Nieco sa pokazilo\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                isUpdating,\r\n                activeIndex,\r\n                handleChangeFilterItem,\r\n                filterItems,\r\n                users,\r\n                user,\r\n                totalCount,\r\n                // getUsers,\r\n                getUser,\r\n                handleChange,\r\n                handleParameterChange,\r\n                handleCompanyChange,\r\n                updateUser,\r\n                resetUser,\r\n                formToShow,\r\n                switchFormButtons,\r\n                toggleUserForm,\r\n                createUser,\r\n                getFilteredUsers,\r\n                getUserByQuery,\r\n                deleteUser\r\n            }}\r\n        >\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserProvider"],"sourceRoot":""}
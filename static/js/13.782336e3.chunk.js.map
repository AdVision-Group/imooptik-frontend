{"version":3,"sources":["sections/calendar/calendar.styles.jsx","sections/calendar/calendar.section.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","components/product-input-row/product-input-row.styles.jsx","components/product-input-row/product-input-row.component.jsx","context/booking/booking.queries.jsx","context/booking/booking.context.jsx"],"names":["Header","styled","div","paddingStyles","CreateCalendarButton","CustomButton","DayTimesContainer","DayNames","CalendarSection","calendarId","useParams","useContext","BookingContext","getCalendar","calendar","resetBooking","LoadingModalContext","closeModal","isLoading","message","showModal","useState","name","interval","startTimes","endTimes","daysIntoFuture","premises","allowMinutesBefore","exceptDays","currentCalendar","setCurrentCalendar","handleChange","e","target","value","useEffect","console","log","loading","title","close","label","example","type","required","autoComplete","toString","map","idx","shrinkLabel","css","InputGroup","CustomInput","otherProps","className","onChange","htmlFor","length","Container","ScrollContainer","children","InputRow","ProductInputRow","otherprops","fetchSingleCalendar","id","fetch","process","fetchUserBookings","token","myHeaders","Headers","append","requestOptions","method","headers","redirect","createContext","calendars","getCalendars","bookings","getBookings","userBookings","getUserBookings","activeCalendar","selectedDate","setSelectedDate","BookingProvider","AuthContext","getMessage","setIsLoading","setShowModal","setActiveCalendar","setCalendars","setCalendar","a","response","json","data","error","setBookings","setUserBookings","Provider"],"mappings":"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","file":"static/js/13.782336e3.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nexport const Header = styled.div`\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n    display: flex;\n    justify-content: space-between;\n`\n\nexport const CreateCalendarButton = styled(CustomButton)`\n\n`\n\nexport const DayTimesContainer = styled.div`\n    --gap: 2rem;\n    display: flex;\n    flex-wrap: wrap;\n    margin: calc(-1 * var(--gap)) 2rem 2rem calc(-1 * var(--gap));\n    /* width: calc(100% + var(--gap)); */\n\n    & > * {\n        margin: var(--gap) 2rem 2rem var(--gap);\n    }\n    margin-top: 3rem;\n\n`\n\nexport const DayNames = styled.div`\n    h3 {\n        margin-bottom: 3rem;\n    }\n\n    h4 {\n        margin-bottom: 3.74rem;\n        font-weight: lighter;\n    }\n`","import React, { useState, useContext, useEffect } from 'react'\nimport { BookingContext } from '../../context/booking/booking.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport InputRow from '../../components/product-input-row/product-input-row.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    DayTimesContainer,\n    CreateCalendarButton,\n    DayNames\n} from './calendar.styles'\n\nconst CalendarSection = () => {\n    const { calendarId } = useParams()\n    const { getCalendar, calendar, resetBooking } = useContext(BookingContext)\n\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const [currentCalendar, setCurrentCalendar] = useState({\n        name: '',\n        interval: 30,\n        startTimes: [\"10/00\", \"10/00\", \"10/00\", \"10/00\", \"10/00\", \"X\", \"X\"],\n        endTimes: [\"16/00\", \"16/00\", \"18/00\", \"16/00\", \"16/00\", \"X\", \"X\"],\n        daysIntoFuture: 60,\n        premises: 1,\n        allowMinutesBefore: 120,\n        exceptDays: \"24/12/2020:00/00-23/59\"\n    })\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        setCurrentCalendar({\n            ...calendar,\n            [name]: value\n        })\n    }\n\n    useEffect(() => {\n        if (calendarId !== 'novy-kalendar') {\n            console.log(\"fetch\")\n            getCalendar(calendarId)\n        }\n        if (calendar.name) {\n            setCurrentCalendar(calendar)\n        }\n    }, [calendarId, calendar.name])\n\n    useEffect(() => {\n        return () => {\n            resetBooking()\n        }\n    }, [])\n\n    console.log(calendar)\n\n    if (!calendar || showModal) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n    return (\n        <section>\n            <Header>\n                <div>\n                    <h1>Nový kalendár</h1>\n                </div>\n                <div>\n                    <CreateCalendarButton>Vytvoriť kalendár</CreateCalendarButton>\n                </div>\n            </Header>\n            <ScrollContainer>\n                <InputRow\n                    label=\"Meno kalendáru\"\n                    example=''\n                >\n                    <CustomInput\n                        label=\"Pobočka*\"\n                        type='text'\n                        name='name'\n                        value={currentCalendar.name}\n                        handleChange={(e) => handleChange(e)}\n                        required\n                        autoComplete=\"off\"\n\n                    />\n                </InputRow>\n                <InputRow\n                    label=\"Koľko dní dopredu sa da objednať\"\n                    example=''\n                >\n                    <CustomInput\n                        label=\"Počet dní\"\n                        type='number'\n                        name='daysIntoFuture'\n                        value={currentCalendar.daysIntoFuture.toString()}\n                        handleChange={(e) => handleChange(e)}\n                        required\n                        autoComplete=\"off\"\n\n                    />\n                </InputRow>\n                <InputRow\n                    label=\"Minimalný čas k odoslaní rezervácie\"\n                    example=''\n                >\n                    <CustomInput\n                        label=\"Min\"\n                        type='number'\n                        name='allowMinutesBefore'\n                        value={currentCalendar.allowMinutesBefore.toString()}\n                        handleChange={(e) => handleChange(e)}\n                        required\n                        autoComplete=\"off\"\n\n                    />\n                </InputRow>\n                <InputRow\n                    label=\"Čas medzi rezerváciami\"\n                    example=''\n                >\n                    <CustomInput\n                        label=\"Min*\"\n                        type='number'\n                        name='interval'\n                        value={currentCalendar.interval.toString()}\n                        handleChange={(e) => handleChange(e)}\n                        required\n                        autoComplete=\"off\"\n\n                    />\n                </InputRow>\n\n                <DayTimesContainer>\n                    <DayNames>\n                        <h3>Den</h3>\n                        <div>\n                            <h4>Pondelok</h4>\n                        </div>\n                        <div>\n                            <h4>Utorok</h4>\n                        </div>\n                        <div>\n                            <h4>Streda</h4>\n                        </div>\n                        <div>\n                            <h4>Štvrtok</h4>\n                        </div>\n                        <div>\n                            <h4>Piatok</h4>\n                        </div>\n                        <div>\n                            <h4>Sobota</h4>\n                        </div>\n                        <div>\n                            <h4>Nedeľa</h4>\n                        </div>\n                    </DayNames>\n                    <div>\n                        <h3>Začiatok prehliadok</h3>\n                        {currentCalendar.startTimes.map((value, idx) => (\n                            <div key={idx}>\n                                <CustomInput\n                                    label=\"Čas: HH/MM*\"\n                                    type='text'\n                                    name='interval'\n                                    value={value}\n                                    handleChange={(e) => handleChange(e)}\n                                    required\n                                />\n                            </div>\n                        ))}\n                    </div>\n                    <div>\n                        <h3>Koniec prehliadok</h3>\n                        {currentCalendar.endTimes.map((value, idx) => (\n                            <div key={idx}>\n                                <CustomInput\n                                    label=\"Čas: HH/MM*\"\n                                    type='text'\n                                    name='interval'\n                                    value={value}\n                                    handleChange={(e) => handleChange(e)}\n                                    required\n                                />\n                            </div>\n                        ))}\n                    </div>\n                </DayTimesContainer>\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CalendarSection\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`","import React from 'react'\nimport { Container } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            {children}\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import styled from 'styled-components'\n\nexport const InputRow = styled.div`\n    display:flex;\n    align-items: center;\n\n    p {\n        margin-top: 1.8rem;\n        margin-left: 2rem;\n            opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n    @media all and (max-width: 800px) {\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n    }\n`","import React from 'react'\n\nimport { InputRow } from './product-input-row.styles'\n\nconst ProductInputRow = ({ children, label, example, ...otherprops }) => {\n    return (\n        <InputRow {...otherprops}>\n            <div>\n                {children}\n            </div>\n            <div>\n                <p>{label + \" \"}<span>{example}</span></p>\n            </div>\n        </InputRow>\n    )\n}\n\nexport default ProductInputRow\n","\n\nexport const fetchCalendars = () => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/booking/calendars`)\n}\n\nexport const fetchSingleCalendar = (id) => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/booking/calendars/${id}`)\n}\n\nexport const fetchBookings = () => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/booking/bookings`)\n}\nexport const fetchBookingRows = () => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/booking/bookingRows`)\n}\n\nexport const fetchUserBookings = (token) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/booking/userBookings`, requestOptions)\n}","import React, { createContext, useState, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\n\nimport {\n    fetchCalendars,\n    fetchSingleCalendar,\n    fetchBookings,\n    // fetchBookingRows,\n    fetchUserBookings\n} from './booking.queries'\n\nexport const BookingContext = createContext({\n    calendar: null,\n    calendars: null,\n    getCalendars: () => { },\n    getCalendar: () => { },\n    bookings: null,\n    getBookings: () => { },\n    userBookings: null,\n    getUserBookings: () => { },\n    // bookingRows: null,\n    // getBookingRows: () => { },\n    activeCalendar: 0,\n    resetBooking: () => { },\n    selectedDate: {\n        name: \"\",\n        value: ''\n    },\n    setSelectedDate: () => { }\n})\n\nconst BookingProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    // ------------------------\n    // CALENDAR ACTIONS\n    // ------------------------\n    const [activeCalendar, setActiveCalendar] = useState(0)\n    const [calendars, setCalendars] = useState(null)\n    const [calendar, setCalendar] = useState({\n        name: '',\n        interval: 30,\n        startTimes: [\"10/00\", \"10/00\", \"10/00\", \"10/00\", \"10/00\", \"X\", \"X\"],\n        endTimes: [\"16/00\", \"16/00\", \"18/00\", \"16/00\", \"16/00\", \"X\", \"X\"],\n        daysIntoFuture: 60,\n        premises: 1,\n        allowMinutesBefore: 120,\n        exceptDays: \"24/12/2020:00/00-23/59\"\n    })\n    const [selectedDate, setSelectedDate] = useState({\n        name: '',\n        value: ''\n    })\n\n    // Get all calendars\n    const getCalendars = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetchCalendars()\n            const data = await response.json()\n\n            if (data.error) {\n                getMessage(data.message)\n                setIsLoading(false)\n                return\n            }\n\n            if (data.calendars) {\n                setCalendars(data.calendars)\n                setIsLoading(false)\n                closeModal()\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Get single calendar\n    const getCalendar = async (id, idx) => {\n        setIsLoading(true)\n        setShowModal(true)\n        setSelectedDate({\n            name: '',\n            value: ''\n        })\n\n        try {\n            const response = await fetchSingleCalendar(id)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.calendar) {\n                setCalendar(data.calendar)\n                setActiveCalendar(idx)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // ------------------------\n    // BOOKINGS ACTIONS\n    // ------------------------\n    const [bookings, setBookings] = useState(null)\n    const [userBookings, setUserBookings] = useState(null)\n\n    const getBookings = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetchBookings()\n            const data = await response.json()\n\n            if (data.error) {\n                getMessage(data.message)\n                setIsLoading(false)\n                return\n            }\n\n            if (data.bookings) {\n                setBookings(data.bookings)\n                setIsLoading(false)\n                closeModal()\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getUserBookings = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetchUserBookings(token)\n            const data = await response.json()\n\n            if (data.userBookings) {\n                setUserBookings(data.userBookings)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const resetBooking = () => {\n        setActiveCalendar(0)\n        setCalendar({\n            name: '',\n            interval: 30,\n            startTimes: [\"10/00\", \"10/00\", \"10/00\", \"10/00\", \"10/00\", \"X\", \"X\"],\n            endTimes: [\"16/00\", \"16/00\", \"18/00\", \"16/00\", \"16/00\", \"X\", \"X\"],\n            daysIntoFuture: 60,\n            premises: 1,\n            allowMinutesBefore: 120,\n            exceptDays: \"24/12/2020:00/00-23/59\"\n        })\n    }\n\n    return (\n        <BookingContext.Provider\n            value={{\n                calendar,\n                calendars,\n                getCalendars,\n                getCalendar,\n                bookings,\n                getBookings,\n                userBookings,\n                getUserBookings,\n                // bookingRows,\n                // getBookingRows,\n                activeCalendar,\n                resetBooking,\n                selectedDate,\n                setSelectedDate,\n            }}\n        >\n            {children}\n        </BookingContext.Provider>\n    )\n}\n\nexport default BookingProvider"],"sourceRoot":""}
{"version":3,"sources":["context/user/user.queries.jsx","context/user/user.utils.jsx","context/user/user.context.jsx"],"names":["fetchUser","token","id","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","process","patchUser","user","body","JSON","stringify","postUser","name","email","postAdmin","console","log","password","premises","admin","Number","initUserObj","address","boughtProducts","city","country","date","finishedRegistration","company","ico","dic","icdph","psc","lenses","cylinder","cylinderAxes","diopters","distance","addition","basis","prism","orders","phone","tempUser","totalSpent","watchList","fName","lName","confirmPassword","birthDate","Date","now","optometrist","UserContext","createContext","isUpdating","activeIndex","handleChangeFilterItem","filterItems","totalCount","users","getUser","handleChange","handleParameterChange","handleCompanyChange","updateUser","resetUser","formToShow","switchFormButtons","toggleUserForm","createUser","getFilteredUsers","getUserByQuery","UserProvider","children","push","useHistory","useContext","AuthContext","LoadingModalContext","closeModal","getMessage","setIsLoading","setShowModal","useState","setUser","setUsers","setIsUpdating","setActiveIndex","setFormToShow","useEffect","a","response","json","data","split","message","path","error","messageSK","filters","_id","type","includes","userId","filter","raw","query","Provider","value","itemIndex","e","target","idx","arr","preventDefault"],"mappings":"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","file":"static/js/31.403da3c4.chunk.js","sourcesContent":["export const fetchUsers = (token) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users`, requestOptions)\n\n}\n\nexport const fetchUser = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\n}\n\nexport const patchUser = (token, user, id) => {\n    // const {\n    //     _id: id,\n    //     address,\n    //     admin,\n    //     city,\n    //     country,\n    //     email,\n    //     lenses: {\n    //         cylinder,\n    //         cylinderAxes,\n    //         diopters,\n    //         distance,\n    //         addition,\n    //         basis,\n    //         prism,\n    //     },\n    //     name,\n    //     phone,\n    //     psc,\n    //     premises\n    // } = user\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        ...user\n        // address: address || undefined,\n        // admin: admin,\n        // premises: Number(premises) === 0 ? undefined : premises,\n        // city: city || undefined,\n        // country: country || undefined,\n        // email: email || undefined,\n        // lenses: {\n        //     cylinder: cylinder,\n        //     cylinderAxes: cylinderAxes,\n        //     diopters: diopters,\n        //     distance: distance,\n        //     addition: addition,\n        //     basis: basis,\n        //     prism: prism,\n        // },\n        // name: name,\n        // phone: phone || undefined,\n        // psc: psc || undefined,\n    })\n\n    const requestOptions = {\n        method: 'PATCH',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\n}\n\nexport const postUser = (token, user) => {\n    const {\n        name,\n        email,\n    } = user\n\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        email: email,\n        name: name,\n    })\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\n}\n\nexport const postAdmin = (token, user) => {\n    console.log(user)\n\n    const {\n        name,\n        email,\n        password,\n        premises,\n        admin\n    } = user\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        admin: Number(admin),\n        email: email,\n        name: name,\n        premises: Number(premises),\n        password\n    })\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\n}","export const initUserObj = {\n    address: \"\",\n    admin: 0,\n    premises: 0,\n    boughtProducts: {},\n    city: \"\",\n    country: \"\",\n    date: \"\",\n    email: \"\",\n    finishedRegistration: false,\n    company: {\n        ico: \"\",\n        dic: \"\",\n        icdph: \"\",\n        address: '',\n        psc: '',\n        country: '',\n    },\n    lenses: {\n        cylinder: [1001, 1001, 1001, 1001],\n        cylinderAxes: [1001, 1001, 1001, 1001],\n        diopters: [1001, 1001, 1001, 1001],\n        distance: [1001, 1001, 1001, 1001],\n        addition: [1001, 1001, 1001, 1001],\n        basis: [1001, 1001, 1001, 1001],\n        prism: [1001, 1001, 1001, 1001],\n    },\n    name: \"\",\n    orders: [],\n    phone: \"\",\n    psc: \"\",\n    tempUser: false,\n    totalSpent: 0,\n    watchList: [],\n    fName: \"\",\n    lName: \"\",\n    password: '',\n    confirmPassword: \"\",\n    birthDate: Date.now(),\n    optometrist: false\n\n}","import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\n\nimport {\n    fetchUsers,\n    fetchUser,\n    patchUser,\n    postAdmin,\n    postUser,\n} from './user.queries'\n\nimport {\n    initUserObj\n} from './user.utils'\n\nexport const UserContext = createContext({\n    isUpdating: false,\n    activeIndex: 0,\n    handleChangeFilterItem: () => { },\n    filterItems: [],\n    totalCount: 0,\n    users: null,\n    user: null,\n    // getUsers: () => { },\n    getUser: () => { },\n    handleChange: () => { },\n    handleParameterChange: () => { },\n    handleCompanyChange: () => { },\n    updateUser: () => { },\n    resetUser: () => { },\n    formToShow: 0,\n    switchFormButtons: [],\n    toggleUserForm: () => { },\n    createUser: () => { },\n    getFilteredUsers: () => { },\n    getUserByQuery: () => { },\n})\n\nconst UserProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token } = useContext(AuthContext)\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    // ------------------------\n\n    const [user, setUser] = useState(initUserObj)\n    const [users, setUsers] = useState(null)\n    const [totalCount, setTotalCount] = useState(0)\n\n    // ------------------------\n\n    const [isUpdating, setIsUpdating] = useState(false)\n    const [activeIndex, setActiveIndex] = useState(0)\n    const filterItems = [\n        {\n            id: 0,\n            name: \"Zákaznici\",\n            filter: 0,\n        },\n        {\n            id: 1,\n            name: \"Zamestnanci\",\n            filter: 1,\n        },\n        {\n            id: 2,\n            name: \"Vedúci\",\n            filter: 2,\n        },\n        // {\n        //     id: 3,\n        //     name: \"Velký brat\",\n        //     filter: 3,\n        // },\n        // {\n        //     id: 4,\n        //     name: \"Odstránené\",\n        //     filter: 3\n        // }\n    ]\n\n    // ------------------------\n\n    const [formToShow, setFormToShow] = useState(0)\n    const switchFormButtons = [\n        {\n            name: \"Zákazník\"\n        },\n        {\n            name: \"Zamestnanec\"\n        }\n    ]\n\n    const toggleUserForm = (e, idx) => {\n        e.preventDefault()\n        setFormToShow(idx)\n    }\n\n    // ------------------------\n\n\n    const handleChangeFilterItem = (itemIndex) => {\n        setActiveIndex(itemIndex)\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n\n        console.log(name, value)\n        setUser({\n            ...user,\n            [name]: value\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = user.lenses[name]\n        arr[idx] = value === '' ? 1001 : value\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleCompanyChange = (e) => {\n        const { name, value } = e.target\n        setUser({\n            ...user,\n            company: {\n                ...user.company,\n                [name]: value\n            }\n        })\n    }\n\n    useEffect(() => {\n        setUser({\n            ...user,\n            name: user.fName + \" \" + user.lName\n        })\n    }, [user.fName, user.lName])\n\n    const resetUser = () => {\n        setUser(initUserObj)\n        setIsUpdating(false)\n        setFormToShow(0)\n    }\n\n    // ------------------------\n    // USER ACTIONS\n    // ------------------------\n\n    // Get all users\n    // const getUsers = async () => {\n    //     setIsLoading(true)\n    //     setShowModal(true)\n\n    //     try {\n    //         const response = await fetchUsers(token)\n    //         const data = await response.json()\n\n    //         console.log(data)\n    //         if (data.users) {\n    //             setUsers(data.users)\n    //             setTotalCount(data.count)\n    //             setIsLoading(false)\n    //             closeModal()\n\n    //         } else {\n    //             getMessage(data.message)\n    //             setIsLoading(false)\n    //         }\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n    // }\n\n    // Get single user\n    const getUser = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n        setIsUpdating(true)\n\n        try {\n            const response = await fetchUser(token, id)\n            const data = await response.json()\n\n            if (data.user) {\n                setUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n                setIsLoading(false)\n                closeModal()\n\n            } else {\n                getMessage(data.message)\n                setIsLoading(false)\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Update user\n    const updateUser = async (user, id, path) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(user)\n\n        try {\n            const response = await patchUser(token, user, id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.messageSK)\n                setIsLoading(false)\n                return\n            }\n\n\n            setIsLoading(false)\n            closeModal()\n\n            if (path === 'order') {\n                push(`/dashboard/objednavky/${id}`)\n            } else if (path === 'profile') {\n                push(`/dashboard/zakaznici/${id}`)\n            } else if (path === 'isOrder') {\n                setUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n            } else {\n                push(\"/dashboard/zakaznici\")\n            }\n\n            getFilteredUsers({\n                filters: {\n                    admin: activeIndex\n                }\n            })\n            // http://localhost:1000/#/dashboard/zakaznici\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createUser = async (user, path) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            if (formToShow === 0) {\n                let data = {}\n                if (!user._id) {\n                    console.log('creating new user')\n                    const response = await postUser(token, user)\n                    data = await response.json()\n\n                    if (data.error) {\n                        getMessage(data.message)\n\n                        if (data.type === 'email') {\n                            getMessage(\"Email existuje\")\n                        }\n                        if (data.error === 'format' && data.message.includes('email')) {\n                            getMessage(\"Email musi byt platny email\")\n                        }\n                        setIsLoading(false)\n                        return\n                    }\n\n                    setUser({\n                        ...data.user,\n                        _id: data.user._id\n                    })\n                }\n\n                const userId = data.user ? data.user._id : user._id\n\n                updateUser({\n                    ...user\n                }, userId, path)\n\n                // setIsLoading(false)\n                // getUsers()\n                // push('/dashboard/zakaznici')\n                // closeModal()\n\n            } else {\n                if (user.password !== user.confirmPassword) {\n                    getMessage(\"Heslá sa nezhodujú\")\n                    setIsLoading(false)\n                    return\n                }\n\n                const response = await postAdmin(token, user)\n                const data = await response.json()\n\n                console.log(data)\n\n                if (data.error) {\n                    getMessage(data.message)\n                    setIsLoading(false)\n                    return\n                }\n\n                setIsLoading(false)\n                getFilteredUsers({\n                    filters: {\n                        admin: activeIndex\n                    }\n                })\n\n                push(\"/dashboard/zakaznici\")\n                closeModal()\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // ----------------------------------------------\n    // ----------------------------------------------\n    // ----------------------------------------------\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n\n    const getFilteredUsers = async (filter) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(filter)\n        const raw = JSON.stringify(filter)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getUserByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(query)\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <UserContext.Provider\n            value={{\n                isUpdating,\n                activeIndex,\n                handleChangeFilterItem,\n                filterItems,\n                users,\n                user,\n                totalCount,\n                // getUsers,\n                getUser,\n                handleChange,\n                handleParameterChange,\n                handleCompanyChange,\n                updateUser,\n                resetUser,\n                formToShow,\n                switchFormButtons,\n                toggleUserForm,\n                createUser,\n                getFilteredUsers,\n                getUserByQuery,\n            }}\n        >\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserProvider"],"sourceRoot":""}
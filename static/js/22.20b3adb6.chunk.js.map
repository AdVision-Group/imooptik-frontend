{"version":3,"sources":["components/product-glasses-form/product-glasses-form.styles.jsx","components/product-glasses-form/product-glasses-form.component.jsx","components/product-lenses-form/product-lenses-form.styles.jsx","components/product-lenses-form/product-lenses-form.component.jsx","components/product-accessories-form/product-accessories-form.styles.jsx","components/product-accessories-form/product-accessories-form.component.jsx","components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx","components/product-contact-lenses-form/product-contact-lenses-form.component.jsx","sections/product/product.styles.jsx","sections/product/product.section.jsx","utils/warehouse.utils.jsx"],"names":["BrandedCheckbox","styled","CustomCheckbox","ImageContainer","div","ProductImage","hasImage","GlassesContainerForm","GlassesContainer","GlassesParameterContainer","StockContainer","CustomSelect","select","ProductGlassesForm","product","handleChange","selectedImage","retailNames","currentUser","checkParameter","handleAvailableChange","handleGlassesParametersChange","handleGlassesSpecsSizeChange","handleSpecsChange","glassesParameters","setImageModal","isUpdating","useState","isBranded","setIsBranded","console","log","label","type","name","value","eanCode","toString","e","isActive","handleClick","target","Fragment","brand","list","id","brands","map","idx","category","link","rows","description","required","price","onClick","src","process","imagePath","alt","colorCode","specs","frameColor","frameMaterial","frameStyle","lensColor","sex","onChange","size","admin","available","premises","LensesFormContainer","LensesContainer","LensesParametersContainer","ProductLensesForm","lenses","handleParameterChange","Array","inputLabel","dioptersRange","cylinderRange","AccessoriesFormContainer","AccessoriesContainer","ProductAccessoriesForm","ContactLensesFormContainer","ContactLensesContainer","ContactLensesParametersContainer","IncreaseButton","CustomButton","ProductContactLensesForm","handleContactLensesChange","handleAddNewParameter","contactLensesParameters","lensesBrands","allowedCurves","allowedDiameters","Header","paddingStyles","SubmitButton","IsPublicCheckbox","CategoryContainer","CategoryCheckbox","ProductSection","useParams","useContext","AuthContext","LoadingModalContext","closeModal","message","isLoading","showModal","getMessage","setShowModal","ImageContext","setSelectedImage","showImageModal","setIsUpdating","WarehouseContext","handleLensesChange","handleLensesParameterChange","createProduct","updateProduct","resetProduct","resetLenses","resetContactLenses","resetGlassesParameters","createLenses","updateLenses","handleProductChange","handleProductAvailableChange","getEanCode","handleContactLensesParameterChange","handleGlassesParameterChange","handleGlassesParameterSpecsChange","handleGlassesSizeChange","getSingleProduct","hasChanged","setHasChanged","productObj","setProductObj","handleChangeType","Object","keys","length","window","confirm","formatLink","arr","Number","useEffect","undefined","image","when","loading","title","close","setImage","imgId","eshop","preventDefault","newProductObj","contactLenses","productCategories","splice","firstIndex","find","retailNamesTabs","formatPrice","includes","split"],"mappings":"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","file":"static/js/22.20b3adb6.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\nexport const BrandedCheckbox = styled(CustomCheckbox)`\n    margin-top: 2rem;\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const GlassesContainerForm = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const GlassesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`\n\nexport const GlassesParameterContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n    margin-bottom: 3rem;\n\n    h4 {\n        margin-top: 2rem;\n    }\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: var(--input-background-color);\n    color: var(--input-color);\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`","import React, { useState } from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport { brands } from '../../utils/warehouse.utils'\n\nimport {\n    ImageContainer,\n    ProductImage,\n    GlassesContainerForm,\n    GlassesContainer,\n    GlassesParameterContainer,\n    StockContainer,\n    CustomSelect,\n    BrandedCheckbox\n} from './product-glasses-form.styles.jsx'\n\nconst ProductGlassesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    retailNames,\n    currentUser,\n    checkParameter,\n    handleAvailableChange,\n    handleGlassesParametersChange,\n    handleGlassesSpecsSizeChange,\n    handleSpecsChange,\n    glassesParameters,\n    setImageModal,\n    isUpdating,\n}) => {\n    const [isBranded, setIsBranded] = useState(true)\n\n    const handleIsBrandedClick = (isBrandedBool) => {\n        if (isBrandedBool) {\n            handleChange({\n                target: {\n                    name: \"brand\",\n                    value: \"Neznačkové\"\n                }\n            })\n            setIsBranded(false)\n        } else {\n            handleChange({\n                target: {\n                    name: \"brand\",\n                    value: \"\"\n                }\n            })\n\n            setIsBranded(true)\n\n        }\n    }\n    console.log(product)\n\n    return (\n        <GlassesContainerForm>\n            <GlassesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='eanCode'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <BrandedCheckbox\n                    label={\"Značkové\"}\n                    isActive={isBranded}\n                    handleClick={() => handleIsBrandedClick(isBranded)}\n                />\n\n                {isBranded && (\n                    <React.Fragment>\n                        <CustomInput\n                            label=\"Značka\"\n                            type='text'\n                            name='brand'\n                            value={product.brand ?? \"\"}\n                            handleChange={(e) => handleChange(e)}\n                            list=\"brands\"\n                        />\n                        <datalist id=\"brands\">\n                            {brands.map((brand, idx) => (\n                                <option key={idx} value={brand} />\n                            ))}\n                        </datalist>\n                    </React.Fragment>\n                )}\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </GlassesContainer>\n            <div>\n                <GlassesParameterContainer>\n                    <h3>Parametre</h3>\n                    <CustomInput\n                        label=\"Farebný kód\"\n                        type='text'\n                        name='colorCode'\n                        value={glassesParameters.colorCode ?? \"\"}\n                        handleChange={(e) => handleGlassesParametersChange(e)}\n                    />\n                    <div>\n                        <CustomInput\n                            label=\"Farba rámu\"\n                            type='text'\n                            name='frameColor'\n                            value={glassesParameters.specs.frameColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Materiál rámu\"\n                            type='text'\n                            name='frameMaterial'\n                            value={glassesParameters.specs.frameMaterial ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Tvar rámu\"\n                            type='text'\n                            name='frameStyle'\n                            value={glassesParameters.specs.frameStyle ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Farba šošovky\"\n                            type='text'\n                            name='lensColor'\n                            value={glassesParameters.specs.lensColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomSelect\n                            label=\"Pohlavie\"\n                            type='text'\n                            name='sex'\n                            value={glassesParameters.specs.sex ?? \"\"}\n                            onChange={(e) => handleSpecsChange(e)}\n                        >\n                            <option value='M'>Pánske</option>\n                            <option value='W'>Dámske</option>\n                            <option value='D'>Detské</option>\n                            <option value='U'>Nezáleží</option>\n                        </CustomSelect>\n                    </div>\n                    <div>\n                        <h4>Velkosť</h4>\n                        {glassesParameters.specs.size.map((value, idx) => (\n                            <CustomInput\n                                key={idx}\n                                label={idx === 0 ? \"Šírka očnice (mm)\" : idx === 1 ? \"Výška očnice (mm)\" : idx === 2 ? \"Veľkosť nosníka (mm)\" : \"Dĺžka stranice (mm)\"}\n                                type='text'\n                                name='size'\n                                value={checkParameter(glassesParameters.specs.size, idx)}\n                                handleChange={(e) => handleGlassesSpecsSizeChange(e, idx)}\n                            />\n                        ))}\n                    </div>\n                </GlassesParameterContainer>\n                {currentUser.admin >= 2 ? (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        {product.available.map((value, idx) => {\n                            if (idx === 0) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </StockContainer>\n                ) : (\n                        <StockContainer>\n                            <h3>Skladové zásoby</h3>\n                            <CustomInput\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[currentUser.premises]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, currentUser.premises)}\n                                handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                            />\n                        </StockContainer>\n                    )}\n            </div>\n        </GlassesContainerForm>\n    )\n}\n\nexport default ProductGlassesForm\n","import styled from 'styled-components'\n\n\nexport const LensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const LensesContainer = styled.div`\n    /* width: 45rem; */\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n    /* display: inline-block; */\n    /* padding-bottom: 4rem;  */\n    margin-bottom: 5rem;\n`\n\nexport const LensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n\n    h3 {\n        /* margin-bottom: 1rem; */\n    }\n\n    h4 {\n        margin-top: 2rem;\n    }\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    LensesFormContainer,\n    LensesContainer,\n    LensesParametersContainer,\n    ProductImage,\n    ImageContainer,\n} from './product-lenses-form.styles'\n\nconst ProductLensesForm = ({\n    lenses,\n    selectedImage,\n    setImageModal,\n    handleChange,\n    handleParameterChange,\n    checkParameter,\n}) => {\n    return (\n        <LensesFormContainer>\n            <LensesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='eanCode'\n                    value={lenses?.eanCode?.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov šošoviek*\"\n                    type='text'\n                    name='name'\n                    value={lenses.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka*\"\n                    type='text'\n                    name='brand'\n                    value={lenses.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomTextarea\n                    label=\"Popis*\"\n                    name='description'\n                    rows='5'\n                    value={lenses.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={lenses.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </LensesContainer>\n            <LensesParametersContainer>\n                <h3>Parametre</h3>\n\n                <h4>Dioptrie</h4>\n                {[...Array(2)].map((value, idx) => {\n                    const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\n\n                    return (\n                        <div key={idx}>\n                            <CustomInput\n                                label={inputLabel}\n                                type='number'\n                                name='dioptersRange'\n                                value={checkParameter(lenses.dioptersRange, idx)}\n                                handleChange={(e) => handleParameterChange(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n\n                <h4>Cylinder</h4>\n                {[...Array(2)].map((value, idx) => {\n                    const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\n\n                    return (\n                        <div key={idx}>\n                            <CustomInput\n                                label={inputLabel}\n                                type='number'\n                                name='cylinderRange'\n                                value={checkParameter(lenses.cylinderRange, idx)}\n                                handleChange={(e) => handleParameterChange(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n            </LensesParametersContainer>\n        </LensesFormContainer>\n    )\n}\n\nexport default ProductLensesForm\n","import styled from 'styled-components'\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const AccessoriesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const AccessoriesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    AccessoriesFormContainer,\n    AccessoriesContainer,\n    StockContainer,\n    ImageContainer,\n    ProductImage,\n} from './product-accessories-form.styles'\n\nconst ProductAccessoriesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    setImageModal,\n    handleAvailableChange,\n    checkParameter,\n    retailNames,\n    currentUser,\n    isUpdating\n}) => {\n    return (\n        <AccessoriesFormContainer>\n            <AccessoriesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </AccessoriesContainer>\n            {currentUser.admin >= 2 ? (\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    {product.available.map((value, idx) => {\n                        if (idx === 0) return\n                        return (\n                            <CustomInput\n                                key={idx}\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, idx)}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        )\n                    })}\n                </StockContainer>\n            ) : (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        <CustomInput\n                            label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[currentUser.premises]}\n                            type='number'\n                            name={\"available\"}\n                            value={checkParameter(product.available, currentUser.premises)}\n                            handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                        />\n                    </StockContainer>\n                )}\n        </AccessoriesFormContainer>\n    )\n}\n\nexport default ProductAccessoriesForm\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const ContactLensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const ContactLensesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`\n\nexport const ContactLensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n    margin-bottom: 3rem;\n\n    h4 {\n        margin-top: 1rem;\n    }\n`\n\nexport const IncreaseButton = styled(CustomButton)`\n    margin-top: 2rem;\n    font-size: 1.4rem;\n\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport { lensesBrands } from '../../utils/warehouse.utils'\n\nimport {\n    ContactLensesContainer,\n    ContactLensesFormContainer,\n    StockContainer,\n    ContactLensesParametersContainer,\n    IncreaseButton,\n    ImageContainer,\n    ProductImage,\n} from './product-contact-lenses-form.styles'\n\nconst ProductContactLensesForm = ({\n    product,\n    handleChange,\n    setImageModal,\n    selectedImage,\n    checkParameter,\n    handleContactLensesChange,\n    handleAddNewParameter,\n    contactLensesParameters,\n    retailNames,\n    currentUser,\n    handleAvailableChange,\n    isUpdating\n}) => {\n    return (\n        <ContactLensesFormContainer>\n            <ContactLensesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"brands\"\n                />\n                <datalist id=\"brands\">\n                    {lensesBrands.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist>\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </ContactLensesContainer>\n            <div>\n                <ContactLensesParametersContainer>\n                    <h3>Parametre</h3>\n                    <div>\n                        <h4>Zakrivenie</h4>\n                        {contactLensesParameters.allowedCurves.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedCurves\"}\n                                    value={checkParameter(contactLensesParameters.allowedCurves, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedCurves'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n                    <div>\n                        <h4>Priemery</h4>\n                        {contactLensesParameters.allowedDiameters.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedDiameters\"}\n                                    value={checkParameter(contactLensesParameters.allowedDiameters, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedDiameters'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n\n                    <div>\n                        <h4>Dioptrie</h4>\n                        {contactLensesParameters.dioptersRange.map((value, idx) => {\n                            const inputLabel = idx === 0 ? \"minimum\" : \"maximum\"\n\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={inputLabel}\n                                    type='text'\n                                    name={\"dioptersRange\"}\n                                    value={checkParameter(contactLensesParameters.dioptersRange, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </div>\n                </ContactLensesParametersContainer>\n\n                {currentUser.admin >= 2 ? (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        {product.available.map((value, idx) => {\n                            if (idx === 0) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </StockContainer>\n                ) : (\n                        <StockContainer>\n                            <h3>Skladové zásoby</h3>\n                            <CustomInput\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[currentUser.premises]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, currentUser.premises)}\n                                handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                            />\n                        </StockContainer>\n                    )}\n            </div>\n        </ContactLensesFormContainer>\n    )\n}\n\nexport default ProductContactLensesForm\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\nimport CustomButton from '../../components/custom-button/custom-button.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n    color: var(--primary-text-color);\n\n`\n\nexport const SubmitButton = styled(CustomButton)`\n\n`\n\nexport const IsPublicCheckbox = styled(CustomCheckbox)`\n    margin-right: 2rem;\n`\n\n\nexport const CategoryContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n    display: inline-block;\n    margin-bottom: 3rem;\n\n    h3 {\n        margin-bottom: 1.5rem;\n    }\n`\nexport const CategoryCheckbox = styled(CustomCheckbox)`\n    &:not(:last-child) {\n        margin-right: 2rem;\n    }\n`","import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport Popup from '../../components/popup/pop-up.component'\n\n// import CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n// import CustomFormSwitch from '../../components/custom-form-switch/custom-form-switch.component'\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\nimport ProductAccessoriesForm from '../../components/product-accessories-form/product-accessories-form.component'\nimport ProductContactLensesForm from '../../components/product-contact-lenses-form/product-contact-lenses-form.component'\n\n// import { useFetch } from '../../hooks/useFetch'\n\nimport { productCategories, checkParameter, formatLink } from '../../context/warehouse/warehouse.utils'\nimport { retailNames } from '../../utils/warehouse.utils'\n\nimport {\n    Header,\n    CategoryContainer,\n    CategoryCheckbox,\n    SubmitButton,\n    IsPublicCheckbox,\n\n} from './product.styles'\n\nconst ProductSection = () => {\n    const { id } = useParams()\n    const { currentUser } = useContext(AuthContext)\n    const { closeModal, message, isLoading, showModal, getMessage, setShowModal } = useContext(LoadingModalContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const {\n        eanCode,\n        product,\n        lenses,\n        contactLensesParameters,\n        glassesParameters,\n        handleLensesChange,\n        handleLensesParameterChange,\n        createProduct,\n        updateProduct,\n        resetProduct,\n        resetLenses,\n        resetContactLenses,\n        resetGlassesParameters,\n        createLenses,\n        updateLenses,\n        handleProductChange,\n        handleProductAvailableChange,\n        getEanCode,\n        handleAddNewParameter,\n        handleContactLensesParameterChange,\n        handleGlassesParameterChange,\n        handleGlassesParameterSpecsChange,\n        handleGlassesSizeChange,\n        getSingleProduct\n    } = useContext(WarehouseContext)\n\n    const [hasChanged, setHasChanged] = useState(false)\n    const [productObj, setProductObj] = useState({})\n\n\n\n    const handleChangeType = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (!isUpdating) {\n            if (productObj.type === 0) {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetLenses()\n                    } else {\n                        return\n                    }\n                }\n            } else {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetProduct()\n                        resetContactLenses()\n                        resetGlassesParameters()\n                    } else {\n                        return\n                    }\n                }\n            }\n        }\n        setProductObj({\n            [name]: value\n        })\n\n    }\n\n    const handleChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (productObj.type === 0) {\n            handleLensesChange(e)\n        }\n\n        if (productObj.type === 5) {\n            handleProductChange(e)\n        }\n\n        if (productObj.type === 4) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 3) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 2) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 1) {\n            handleProductChange(e)\n        }\n\n\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        if (isUpdating) {\n            if (name === 'name') {\n                setProductObj({\n                    ...productObj,\n                    [name]: value,\n                    link: formatLink(value)\n                })\n                return\n            }\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParametersChange = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterChange(e)\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleSpecsChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterSpecsChange(e)\n\n        if (value === '') {\n            delete productObj.specs[name]\n\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSpecsSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleGlassesSizeChange(e, idx)\n\n        if (value === '') {\n            if (productObj.specs[name].length > 1) {\n                arr[idx] = 1001\n\n                const firstIndex = arr[0]\n                const canDeleteSpecs = arr.map(value => {\n                    if (firstIndex !== value) {\n                        return false\n                    } else {\n                        return true\n                    }\n                })\n\n                const verdict = canDeleteSpecs.find(value => value === false)\n\n                if (verdict === false) {\n                    setProductObj({\n                        ...productObj,\n                        specs: {\n                            ...productObj.specs,\n                            [name]: arr\n                        }\n                    })\n                } else {\n                    delete productObj.specs[name]\n                }\n\n            }\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleProductAvailableChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleContactLensesChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleContactLensesParameterChange(e, idx)\n\n        if (value === '') {\n            if (productObj.contactLenses[name].length > 1) {\n                arr.splice(idx, 1)\n                setProductObj({\n                    ...productObj,\n                    contactLenses: {\n                        ...productObj.contactLenses,\n                        [name]: arr\n                    }\n                })\n            } else {\n                delete productObj.contactLenses[name]\n            }\n            if (Object.keys(productObj.contactLenses).length === 0) {\n                delete productObj[\"contactLenses\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            contactLenses: {\n                ...productObj.contactLenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleLensesParameterChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleSelectImage = (imgId) => {\n        setHasChanged(true)\n        setProductObj({\n            ...productObj,\n            image: imgId\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        let newProductObj = {\n            ...productObj\n        }\n\n        if (currentUser.admin < 2) {\n            if (newProductObj.available) {\n                newProductObj = {\n                    ...productObj,\n                    available: productObj.available[currentUser.premises]\n                }\n            }\n        } else {\n            if (newProductObj.available) {\n                newProductObj = {\n                    ...productObj,\n                    available: newProductObj.available ? newProductObj.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0]\n                }\n            }\n        }\n\n        if (isUpdating) {\n            if (newProductObj.type === 0) {\n                setHasChanged(false)\n                delete newProductObj['link']\n                delete newProductObj['type']\n                updateLenses(newProductObj)\n                return\n            } else if (newProductObj.type === 3) {\n                setHasChanged(false)\n                delete newProductObj['type']\n                updateProduct({ ...newProductObj, contactLenses: {} })\n                return\n            } else {\n                setHasChanged(false)\n                delete newProductObj['type']\n                updateProduct(newProductObj)\n                return\n            }\n        } else {\n            if (newProductObj.type === 0) {\n                if (!newProductObj.name || !newProductObj.brand || !newProductObj.description || !newProductObj.price || !newProductObj.image || !newProductObj.dioptersRange || !newProductObj.cylinderRange) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    delete newProductObj['type']\n                    createLenses(newProductObj)\n                }\n            }\n            if (newProductObj.type === 5 || newProductObj.type === 4 || newProductObj.type === 3 || newProductObj.type === 2 || newProductObj.type === 1) {\n                if (!newProductObj.name || !newProductObj.price || !newProductObj.image) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    createProduct(newProductObj)\n                }\n            }\n        }\n\n\n    }\n\n    useEffect(() => {\n        if (id === \"novy-produkt\") {\n            if (!eanCode) {\n                getEanCode()\n            } else {\n                if (productObj.type !== undefined) {\n                    handleChange({\n                        target: {\n                            name: \"eanCode\",\n                            value: eanCode\n                        }\n                    })\n                }\n            }\n        }\n    }, [id, eanCode, productObj.type, productObj.eanCode, product.type])\n\n    useEffect(() => {\n        if (id !== 'novy-produkt') {\n            getSingleProduct(id)\n            setIsUpdating(true)\n            if (!productObj.type) {\n                handleChangeType({\n                    target: {\n                        name: \"type\",\n                        value: product.type\n                    }\n                })\n\n            }\n        }\n    }, [id, product.type])\n\n    useEffect(() => {\n        if (product.image) {\n            setSelectedImage(product.image)\n        }\n        if (lenses.image) {\n            setSelectedImage(lenses.image)\n        }\n    }, [product.image, lenses.image])\n\n    useEffect(() => {\n        return () => {\n            resetProduct()\n            resetLenses()\n            resetContactLenses()\n            resetGlassesParameters()\n            setProductObj({})\n            setSelectedImage(null)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <section>\n            <Prompt\n                when={hasChanged}\n                message=\"Chcete opustiť formulár?\"\n            />\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={handleSelectImage} />}\n            <Header>\n                <div>\n                    <h1>{isUpdating ? \"Upraviť produkt\" : \"Nový produkt\"}</h1>\n                </div>\n                <div>\n                    <IsPublicCheckbox\n                        label=\"Verejné\"\n                        // value={product.ehop}\n                        name='eshop'\n                        isActive={product.eshop}\n                        handleClick={() => handleChange({\n                            target: {\n                                name: \"eshop\",\n                                value: !product.eshop\n                            }\n                        })}\n                    />\n                    <SubmitButton onClick={handleSubmit}>{isUpdating ? \"Upraviť\" : \"Vytvoriť\"}</SubmitButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating && <CategoryContainer>\n                    <h3>Aký produkt chcete pridať?</h3>\n                    {productCategories.map((category, idx) => (\n                        <CategoryCheckbox\n                            key={idx}\n                            label={category.name}\n                            value={category.value}\n                            name='type'\n                            isActive={category.value === productObj.type}\n                            handleClick={() => handleChangeType({\n                                target: {\n                                    name: \"type\",\n                                    value: category.value\n                                }\n                            })}\n                        />\n                    ))}\n                </CategoryContainer>}\n\n                {productObj.type === 0 && (\n                    <ProductLensesForm\n                        lenses={lenses}\n                        selectedImage={selectedImage}\n                        setImageModal={setImageModal}\n                        handleChange={handleChange}\n                        handleParameterChange={handleParameterChange}\n                        checkParameter={checkParameter}\n                    />\n                )}\n\n                {productObj.type === 5 && (\n                    <ProductAccessoriesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        currentUser={currentUser}\n                        retailNames={retailNames}\n                        selectedImage={selectedImage}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAvailableChange={handleAvailableChange}\n                    />\n                )}\n\n                {productObj.type === 3 && (\n                    <ProductContactLensesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        contactLensesParameters={contactLensesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAddNewParameter={handleAddNewParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        handleContactLensesChange={handleContactLensesChange}\n                    />\n                )}\n\n                {(productObj.type === 1 || productObj.type === 2 || productObj.type === 4) && (\n                    <ProductGlassesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        glassesParameters={glassesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleSpecsChange={handleSpecsChange}\n                        handleAvailableChange={handleAvailableChange}\n                        handleGlassesSpecsSizeChange={handleGlassesSpecsSizeChange}\n                        handleGlassesParametersChange={handleGlassesParametersChange}\n                    />\n                )}\n\n            </ScrollContainer>\n\n        </section >\n    )\n}\n\nexport default ProductSection\n","export const brands = [\n    \"Adidas\",\n    \"Armani Exchange\",\n    \"Arnette\",\n    \"Blackfin\",\n    \"Blumarine\",\n    \"Burberry\",\n    \"Bvlgari\",\n    \"Calvin Klein\",\n    \"Carolina Herrera\",\n    \"Carrera\",\n    \"David Beckham\",\n    \"Dior\",\n    \"Dolce & Gabbana\",\n    \"Elle\",\n    \"Emporio Armani\",\n    \"Esprit\",\n    \"Etnia Barcelona\",\n    \"Fendi\",\n    \"Fossil\",\n    \"Furla\",\n    \"Giorgio Armani\",\n    \"Givenchy\",\n    \"Gucci\",\n    \"Guess\",\n    \"H.I.S\",\n    \"Hawkers\",\n    \"Hugo Boss\",\n    \"Jaguar\",\n    \"Jimmy Choo\",\n    \"Lacoste\",\n    \"Liu Jo\",\n    \"Marc Jacobs\",\n    \"Max Mara\",\n    \"Max&Co\",\n    \"Meller\",\n    \"Mexx\",\n    \"Michael Kors\",\n    \"Moschino\",\n    \"Oakley\",\n    \"Persol\",\n    \"Polaroid\",\n    \"Police\",\n    \"Polo Ralph Lauren\",\n    \"Prada\",\n    \"Prada Linea Rossa\",\n    \"Ralph\",\n    \"Ralph Lauren\",\n    \"Ray-Ban\",\n    \"Salvatore Ferragamo\",\n    \"Smith\",\n    \"Strellson\",\n    \"Tiffany&Co.\",\n    \"Tom Ford\",\n    \"Tommy Hilfiger\",\n    \"Versace\",\n    \"Vogue\"\n]\n\nexport const lensesBrands = [\n    \"Acuvue\",\n    \"Adore\",\n    \"Air Optix\",\n    \"Biofinity\",\n    \"Biomedics\",\n    \"Clariti\",\n    \"ColourVue\",\n    \"Comfilcon A\",\n    \"Dailies\",\n    \"Freshlook\",\n    \"Lenjoy\",\n    \"Proclear\",\n    \"Purevision\",\n    \"Soflens\",\n]\n\nexport const retailNames = [\n    \"Obchodná 57, Bratislava\",\n    \"Obchodná 57, Bratislava\",\n    \"Miletičova 38, Bratislava\",\n    \"Vajnory, Bratislava\",\n    \"Senica, OC Branč\",\n    // \"Trnava, City Aréna\"\n]\n\nexport const retailNamesTabs = [\n    {\n        id: 0,\n        name: \"E-shop\",\n    },\n    {\n        id: 1,\n        name: \"Obchodná 57, Bratislava\",\n    },\n    {\n        id: 2,\n        name: \"Miletičova 38, Bratislava\",\n    },\n    {\n        id: 3,\n        name: \"Vajnory, Bratislava\",\n    },\n    {\n        id: 4,\n        name: \"Senica, OC Branč\",\n    },\n]\n\nexport const formatPrice = (price = \"\") => {\n    price.toString()\n    let value = 0\n    if (price.includes(',')) {\n        if (price.split(',')[1].length === 1) {\n            value = price.split(',')[0] + price.split(',')[1] + \"0\"\n            return Number(value)\n        } else {\n            value = price.split(',')[0] + price.split(',')[1]\n            return Number(value)\n        }\n    } else {\n        return Number(price * 100)\n    }\n}"],"sourceRoot":""}
{"version":3,"sources":["components/profile-order-overview/profile-order-overview.styles.jsx","components/profile-order-overview/profile-order-overview.component.jsx","components/examination-user/examination-user.styles.jsx","components/examination-user/examination-user.component.jsx","utils/parameters.utils.jsx","components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx","components/modal-optometrist-examination/modal-optometrist-examination.component.jsx","components/examinations-overview/examinations-overview.styles.jsx","components/examinations-overview/examinations-overview.component.jsx","components/user-form/user.form-styles.jsx","components/user-form/user-form.component.jsx","components/custom-form-switch/custom-form-switch.styles.jsx","components/custom-form-switch/custom-form-switch.component.jsx","components/new-user-form/new-user-form.styles.jsx","components/new-user-form/new-user-form.component.jsx","sections/customer-profile/customer-profile.styles.jsx","sections/customer-profile/customer-profile.section.jsx","context/warehouse/warehouse.utils.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/product-input-row/product-input-row.styles.jsx","components/product-input-row/product-input-row.component.jsx","components/custom-textarea/custom-textarea.styles.jsx","components/custom-textarea/custom-textarea.component.jsx","context/examination/examination.context.jsx"],"names":["OrderContainer","styled","div","OrderContent","Options","UpdateButton","CustomButton","DeleteButton","OrderId","p","ProfileOrderOverview","id","handleUpdateClick","onClick","ExaminationUserContainer","ExaminationUser","userId","useFetchById","isLoading","response","user","name","checkParameter","parametersArr","idx","length","checkParameterValue","value","ModalContainer","Modal","CloseButton","button","TableContainer","HeadTableCol","TableCol","TableBlock","TwoCols","SubmitButton","OptometristExaminationModal","close","refetch","examinationToUpdate","examinationData","useContext","ExaminationContext","createExamination","updateExamination","useState","examinationObj","setExaminationObj","parameters","setParameters","handleParameterChange","e","target","arr","handleChange","formatParameters","newParameters","map","parameter","changeNumber","toString","replace","isNaN","Number","formatParameter","console","log","useEffect","exam","Array","type","sph","onChange","onBlur","cyl","ax","vizusD","vizusBino","vizusB","prizma","basis","pd","add","label","bc","dptrPO","dptrLO","note","rows","recommendation","preventDefault","examObj","doneTo","ExaminationsOverviewContainer","Header","ExaminationContainer","ExamHead","ExamTableContainer","ExaminationOptions","AddButton","ExaminationsOverview","params","useParams","deleteExamination","showOptometristModal","setShowOptometristModal","examinations","setExaminations","setExaminationToUpdate","exams","examination","Date","date","toLocaleDateString","weekday","month","day","doneBy","_id","handleDelete","Profile","GridContainer","ZeroMargin","GridRow","Row","Title","h2","Container","OrderHeader","OrderButton","AdminPanelContainer","CustomSelect","select","UserForm","isAdmin","isUpdating","handleCompanyChange","isOptometrist","push","useHistory","example","premises","retailNames","admin","handleClick","optometrist","isActive","fName","lName","birthDate","email","phone","address","psc","city","country","company","ico","dic","lenses","handleAddOrderButtonClick","orders","order","h3","ToggleOptionsContainer","ToggleFormButton","CustomFormSwitch","title","activeIndex","items","Fragment","item","CustomerForm","ColContainer","NewUserForm","formToShow","switchFormButtons","toggleUserForm","password","confirmPassword","paddingStyles","DeleteProfileButton","SaveButton","CustomerProfile","AuthContext","LoadingModalContext","closeModal","message","showModal","UserContext","getUser","updateUser","resetUser","createUser","userObj","setUserObj","hasChanges","setHasChanges","handleUserChange","handleLensesParameterChange","handleCompanyAddressChange","Object","keys","cylinder","cylinderAxes","diopters","distance","addition","prism","loading","when","onSubmit","initProductObj","description","price","brand","soldAmount","available","eanCode","image","eshop","link","category","initGlassesObj","colorCode","specs","frameColor","frameMaterial","frameStyle","lensColor","sex","size","initContactLensesObj","allowedCurves","allowedDiameters","dioptersRange","initLensesObj","cylinderRange","productCategories","premisesTabs","categoryTabs","formatPrice","includes","split","formatfloatNumber","number","formatAvailable","activePremisesTab","undefined","reduce","acc","currValue","dia","diaConvert","text","convertText","i","indexOf","charAt","formatLink","replaceAll","toLowerCase","trim","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","InputRow","ProductInputRow","children","otherprops","shrinkLabel","css","InputGroup","CustomTextarea","otherProps","className","htmlFor","createContext","ExaminationProvider","token","getMessage","setIsLoading","setShowModal","myHeaders","Headers","append","examsToAdd","a","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","process","json","data","examToUpdate","examId","Provider"],"mappings":"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","file":"static/js/12.f5d89ee5.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const OrderContainer = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 25rem;\n\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    padding: 2rem;\n\n    &:not(:last-child) {\n        margin-bottom: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n\n    }\n`\n\nexport const OrderContent = styled.div`\n\n    h2 {\n        font-size: 1.6rem;\n    }\n`\n\nexport const Options = styled.div`\n    align-self: end;\n    justify-self: end;\n`\n\nexport const UpdateButton = styled(CustomButton)`\n    font-size: 1rem;\n    margin-left: auto;\n    display:block;\n\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1rem;\n    background-color: rgb(235, 172, 1);\n    margin-bottom: 1rem;\n    display:block;\n\n`\n\nexport const OrderId = styled.p`\n    font-size: 1.2rem;\n    color: gray;\n    /* margin-bottom: 2rem; */\n`","import React from 'react'\n\nimport {\n    DeleteButton,\n    Options,\n    OrderContainer,\n    OrderContent,\n    UpdateButton,\n    OrderId\n} from './profile-order-overview.styles'\n\nconst ProfileOrderOverview = ({ id, handleUpdateClick }) => {\n    return (\n        <OrderContainer>\n            <OrderContent>\n                <h2>ID Objednávky</h2>\n                <OrderId>{id}</OrderId>\n            </OrderContent>\n\n            <Options>\n                <DeleteButton>\n                    Vymazať\n                </DeleteButton>\n                <UpdateButton onClick={handleUpdateClick}>\n                    Upraviť\n                </UpdateButton>\n\n            </Options>\n\n        </OrderContainer>\n    )\n}\n\nexport default ProfileOrderOverview\n","import styled from 'styled-components'\n\nexport const ExaminationUserContainer = styled.div`\n    font-size: 1.4rem;\n\n    span {\n        font-weight: bolder\n    }\n`","import React from 'react'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport {\n    ExaminationUserContainer\n} from './examination-user.styles'\n\nconst ExaminationUser = ({ userId }) => {\n    const { isLoading, response } = useFetchById(\"api/admin/users\", userId)\n\n    return (\n        <ExaminationUserContainer>\n            <p>Vystavoval:</p> <span>{isLoading ? \"Hľadám...\" : response?.user?.name}</span>\n        </ExaminationUserContainer>\n    )\n}\n\nexport default ExaminationUser\n","\nexport const checkParameter = (parametersArr, idx) => {\n    if (parametersArr) {\n        if (parametersArr.length === 0) {\n            return \"\"\n        }\n        if (parametersArr[idx] === 1001) {\n            return \"\"\n        }\n        return parametersArr[idx]\n    } else {\n        return \"\"\n    }\n}\n\nexport const checkParameterValue = (value) => {\n    if (value) {\n        if (value === 0) {\n            return \"\"\n        }\n        if (value === 1001) {\n            return \"\"\n        }\n        return value\n    } else {\n        return \"\"\n    }\n}\n\n// check if valid number othervise return 1001\nexport const formatParameter = parameter => {\n    if (parameter) {\n        const changeNumber = parameter.toString().replace(',', '.')\n        return isNaN(changeNumber) ? 1001 : Number(changeNumber)\n    }\n}","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 65rem;\n    max-height: 60rem;\n\n    overflow-y: scroll;\n\n    /* display: flex;\n    flex-direction: column;\n    align-items: center; */\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: white;\n\n    position: relative;\n    z-index: 999999;\n\n    h3{ \n        margin-bottom: 2rem;\n    }\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const TableContainer = styled.div`\n    display: grid;\n    grid-template-columns: 3rem repeat(10, 1fr);\n`\n\nexport const HeadTableCol = styled.div`\n    display: grid;\n    grid-template-rows: repeat(4, 5rem);\n    div {\n        align-self: center;\n        display:flex;\n        justify-content: space-between;\n    }\n`\n\nexport const TableCol = styled.div`\n    display: grid;\n    grid-template-rows: repeat(4, 5rem);\n    div {\n        text-align:center;\n        align-self: center;\n        margin-left: .5rem;\n        font-size: 1.2rem;\n    }\n`\nexport const TableBlock = styled.div`\n    input {\n        display:block;\n        width: 100%;\n        border: none;\n        padding: 1rem .5rem;\n        text-align: center;\n        font-family: inherit;\n        font-size: inherit;\n        background-color: #F5F5F5;\n        border-radius: .5rem;\n        outline: none;\n\n        &:focus {\n            outline: none;\n        }\n\n        &:disabled {\n            opacity: .83;\n        }\n    }\n\n`\n\nexport const TwoCols = styled.div`\n    margin-top: 2rem;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n`\n\nexport const SubmitButton = styled(CustomButton)`\n    display: block;\n    margin: 2rem auto 0;\n`","import React, { useState, useContext, useEffect } from 'react'\nimport { ExaminationContext } from '../../context/examination/examination.context'\nimport { useFetchById } from '../../hooks/useFetch'\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    checkParameter,\n    formatParameter,\n} from '../../utils/parameters.utils'\n\nimport {\n    CloseButton,\n    Modal,\n    ModalContainer,\n    TableContainer,\n    HeadTableCol,\n    TableCol,\n    TableBlock,\n    TwoCols,\n    SubmitButton\n} from './modal-optometrist-examination.styles'\n\nconst OptometristExaminationModal = ({ close, refetch, userId, examinationToUpdate }) => {\n    const examinationData = useFetchById('api/admin/exams', examinationToUpdate, !examinationToUpdate)\n\n    const { createExamination, updateExamination } = useContext(ExaminationContext)\n    const [examinationObj, setExaminationObj] = useState({})\n    const [parameters, setParameters] = useState({})\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = parameters[name] || [1001, 1001, 1001, 1001]\n        arr[idx] = value === '' ? 1001 : value\n\n        setParameters({\n            ...parameters,\n            [name]: arr\n        })\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete examinationObj[name]\n            setExaminationObj({\n                ...examinationObj,\n            })\n            return\n        }\n\n        setExaminationObj({\n            ...examinationObj,\n            [name]: value\n        })\n    }\n\n    const formatParameters = (e, newParameters) => {\n        if (newParameters) {\n            const { name } = e.target\n            setParameters({\n                ...parameters,\n                [name]: newParameters.map(value => formatParameter(value))\n            })\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        let examObj = {\n            ...examinationObj,\n            doneTo: userId,\n            parameters: {\n                ...parameters\n            }\n        }\n\n        console.log(\"EXAMINATION OBJECT BEFORE SEND\")\n        console.log(examObj)\n\n        if (examinationToUpdate) {\n            console.log(\"UPDATE EXAMINATION\")\n            delete examObj[\"doneTo\"]\n            delete examObj[\"doneBy\"]\n            delete examObj[\"date\"]\n            delete examObj[\"_id\"]\n            delete examObj[\"__v\"]\n\n            console.log(examObj)\n            updateExamination(examObj, examinationToUpdate)\n\n        } else {\n            console.log(\"CREATE EXAMINATION\")\n\n            createExamination(examObj)\n        }\n        refetch()\n        close()\n    }\n\n    console.log(examinationData)\n\n    useEffect(() => {\n        if (!examinationData.isLoading) {\n            if (examinationData.response) {\n                setParameters(examinationData.response?.exam?.parameters)\n                setExaminationObj(examinationData.response?.exam)\n            }\n        }\n    }, [examinationToUpdate, examinationData.isLoading])\n\n    useEffect(() => {\n        return () => {\n            setExaminationObj({})\n            setParameters({})\n        }\n    }, [])\n\n    return (\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Nová prehliadka</h3>\n\n                <TableContainer>\n                    <HeadTableCol>\n                        <TableBlock>\n                            <p>-</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>PO</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>ĽO</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>PO</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>ĽO</p>\n                        </TableBlock>\n                    </HeadTableCol>\n                    {/* sph */}\n                    <TableCol>\n                        <TableBlock>\n                            sph\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='sph'\n                                    type='text'\n                                    value={checkParameter(parameters?.sph, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.sph)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* cyl */}\n                    <TableCol>\n                        <TableBlock>\n                            cyl\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='cyl'\n                                    type='text'\n                                    value={checkParameter(parameters?.cyl, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.cyl)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* ax */}\n                    <TableCol>\n                        <TableBlock>\n                            ax\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='ax'\n                                    type='text'\n                                    value={checkParameter(parameters?.ax, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.ax)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* vizus D */}\n                    <TableCol>\n                        <TableBlock>\n                            vizus D\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='vizusD'\n                                    type='text'\n                                    value={checkParameter(parameters?.vizusD, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.vizusD)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* vizus Bino */}\n                    <TableCol>\n                        <TableBlock>\n                            vizus Bino\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='vizusBino'\n                                    type='text'\n                                    value={checkParameter(parameters?.vizusBino, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.vizusBino)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* vizus B */}\n                    <TableCol>\n                        <TableBlock>\n                            vizus B\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='vizusB'\n                                    type='text'\n                                    value={checkParameter(parameters?.vizusB, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.vizusB)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* prizma */}\n                    <TableCol>\n                        <TableBlock>\n                            prizma\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='prizma'\n                                    type='text'\n                                    value={checkParameter(parameters?.prizma, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.prizma)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* basis */}\n                    <TableCol>\n                        <TableBlock>\n                            basis\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='basis'\n                                    type='text'\n                                    value={checkParameter(parameters?.basis, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.basis)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* PD */}\n                    <TableCol>\n                        <TableBlock>\n                            PD\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='pd'\n                                    type='text'\n                                    value={checkParameter(parameters?.pd, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.pd)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* ADD */}\n                    <TableCol>\n                        <TableBlock>\n                            ADD\n                        </TableBlock>\n                        {[...Array(2)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='add'\n                                    type='text'\n                                    value={checkParameter(parameters?.add, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.add)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n                </TableContainer>\n\n\n                <TwoCols>\n                    <div>\n                        <CustomInput\n                            label=\"Typ\"\n                            name='type'\n                            value={examinationObj?.type || \"\"}\n                            handleChange={handleChange}\n                        />\n                        <CustomInput\n                            label=\"Bc\"\n                            name='bc'\n                            value={examinationObj?.bc || \"\"}\n                            handleChange={handleChange}\n                        />\n                    </div>\n                    <div>\n                        <CustomInput\n                            label=\"dptr PO\"\n                            name='dptrPO'\n                            value={examinationObj?.dptrPO || \"\"}\n                            handleChange={handleChange}\n                        />\n                        <CustomInput\n                            label=\"dptr ĽO\"\n                            name='dptrLO'\n                            value={examinationObj?.dptrLO || \"\"}\n                            handleChange={handleChange}\n                        />\n                    </div>\n                </TwoCols>\n                <div>\n                    <CustomTextarea\n                        label='Poznámka'\n                        name='note'\n                        value={examinationObj?.note || \"\"}\n                        handleChange={handleChange}\n                        rows='5'\n                    />\n                    <CustomInput\n                        label=\"Doporučenie\"\n                        name='recommendation'\n                        value={examinationObj?.recommendation || \"\"}\n                        handleChange={handleChange}\n                    />\n                </div>\n\n\n                <SubmitButton onClick={handleSubmit}>{examinationToUpdate ? \"Uložiť\" : \"Odoslať prehliadku\"}</SubmitButton>\n            </Modal>\n        </ModalContainer>\n    )\n}\n\nexport default OptometristExaminationModal\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ExaminationsOverviewContainer = styled.div`\n\n`\n\nexport const Header = styled.div`\n    margin-top: 2rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    h2 {\n        margin: 2rem 0;\n    }\n`\n\nexport const ExaminationContainer = styled.div`\n    border-radius: .5rem;\n    padding: 2rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    margin-bottom: 2rem;\n`\n\nexport const ExamHead = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport const ExamTableContainer = styled.div`\n    display: grid;\n    grid-template-columns: 3rem repeat(10, 1fr);\n    font-size: 1.2rem;  \n`\n\nexport const HeadTableCol = styled.div`\n    display: grid;\n    grid-template-rows: repeat(5, 5rem);\n    div {\n        align-self: center;\n        display:flex;\n        justify-content: space-between;\n    }\n`\n\nexport const TableCol = styled.div`\n    display: grid;\n    grid-template-rows: repeat(5, 5rem);\n\n    div {\n        text-align:center;\n        align-self: center;\n        margin-left: .5rem;\n\n        &:not(:first-child) {\n            background-color: #f5f5f5;\n            padding: .5rem;\n            border-radius: .5rem;\n            min-height: 2.5rem;\n        }\n    }\n`\nexport const ExaminationOptions = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport const AddButton = styled(CustomButton)`\n    font-size: 1.2rem;\n`\n\nexport const UpdateButton = styled(CustomButton)`\n    font-size: 1.2rem;\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1.2rem;\n    background-color: #DD4C4C;\n    margin-left: 1rem;\n\n`","import React, { useState, useEffect, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useFetchById } from '../../hooks/useFetch'\nimport { ExaminationContext } from '../../context/examination/examination.context'\n\nimport ExaminationUser from '../examination-user/examination-user.component'\nimport OptometristExaminationModal from '../modal-optometrist-examination/modal-optometrist-examination.component'\n\nimport {\n    checkParameterValue\n} from '../../utils/parameters.utils'\n\nimport {\n    ExaminationsOverviewContainer,\n    Header,\n    ExaminationContainer,\n    ExamHead,\n    ExamTableContainer,\n    HeadTableCol,\n    TableCol,\n    ExaminationOptions,\n    AddButton,\n    UpdateButton,\n    DeleteButton\n} from './examinations-overview.styles'\n\nconst ExaminationsOverview = () => {\n    const params = useParams()\n    const examinationData = useFetchById(\"api/admin/exams/user\", params.id)\n    const { deleteExamination } = useContext(ExaminationContext)\n    const [showOptometristModal, setShowOptometristModal] = useState(false)\n    const [examinations, setExaminations] = useState([])\n    const [examinationToUpdate, setExaminationToUpdate] = useState(null)\n\n    const handleUpdateClick = (e, id) => {\n        e.preventDefault()\n        setExaminationToUpdate(id)\n        setShowOptometristModal(true)\n    }\n\n    const handleDelete = (e, id) => {\n        e.preventDefault()\n        deleteExamination(id)\n        examinationData.refetch()\n    }\n\n    const handleCloseModal = () => {\n        setShowOptometristModal(false)\n        setExaminationToUpdate(null)\n    }\n\n    useEffect(() => {\n        if (!examinationData.isLoading) {\n            if (examinationData.response) {\n                setExaminations(examinationData.response.exams)\n            }\n        }\n    }, [examinationData.isLoading])\n\n    return (\n        <ExaminationsOverviewContainer>\n            {showOptometristModal && <OptometristExaminationModal\n                userId={params.id}\n                examinationToUpdate={examinationToUpdate}\n                refetch={examinationData.refetch}\n                close={handleCloseModal}\n            />}\n            <Header>\n                <h2>Vyšetrenia</h2>\n                <div>\n                    <AddButton type='button' onClick={() => setShowOptometristModal(true)}>Pridať prehliadku</AddButton>\n                </div>\n            </Header>\n\n\n            <div>\n                {examinations.map((examination, idx) => (\n                    <ExaminationContainer key={idx}>\n                        <ExamHead>\n                            <h3>Dátum</h3>\n                            <p>{new Date(examination?.date).toLocaleDateString(\"sk-SK\", { weekday: 'long', month: 'long', day: 'numeric' })}</p>\n                        </ExamHead>\n                        <ExamTableContainer>\n                            <HeadTableCol>\n                                <div>-</div>\n                                <div>PO</div>\n                                <div>ĽO</div>\n                                <div>PO</div>\n                                <div>ĽO</div>\n                            </HeadTableCol>\n                            <TableCol>\n                                <div>sph</div>\n                                {examination?.parameters?.sph.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>cyl</div>\n                                {examination?.parameters?.cyl.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>ax</div>\n                                {examination?.parameters?.ax.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus D</div>\n                                {examination?.parameters?.vizusD.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus bino</div>\n                                {examination?.parameters?.vizusBino.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus B</div>\n                                {examination?.parameters?.vizusB.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>prizma</div>\n                                {examination?.parameters?.prizma.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>basis</div>\n                                {examination?.parameters?.basis.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>PD</div>\n                                {examination?.parameters?.pd.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>ADD</div>\n                                {examination?.parameters?.add.map((value, idx) => {\n                                    if (idx > 1) return\n                                    return (\n                                        <div key={idx}>\n                                            {checkParameterValue(value)}\n                                        </div>\n                                    )\n                                })}\n                            </TableCol>\n                        </ExamTableContainer>\n                        <ExaminationOptions>\n                            <ExaminationUser userId={examination.doneBy} />\n                            <div>\n                                <UpdateButton onClick={e => handleUpdateClick(e, examination._id)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={e => handleDelete(e, examination._id)}>Vymazať</DeleteButton>\n                            </div>\n                        </ExaminationOptions>\n                    </ExaminationContainer>\n                ))}\n            </div>\n        </ExaminationsOverviewContainer>\n    )\n}\n\nexport default ExaminationsOverview\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\n\nexport const Profile = styled.div`\n    padding: 2rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    margin-right: 2rem;\n\n`\n\nexport const GridContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: start;\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n    }\n`\n\nexport const ZeroMargin = styled.div`\n    input {\n        margin-bottom: 0 !important;\n    }\n`\n\nexport const GridRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n`\n\n\nexport const ThreeColRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-items: center;\n\n    input {\n        margin-bottom: 0 !important;\n    }\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr 1fr;\n        grid-template-areas:\n            \"a a\"\n            \"b c\";\n\n        div:nth-child(1){\n            grid-area: a;\n            margin-bottom: 0;\n        }\n        div:nth-child(2){\n            grid-area: b;\n            margin-bottom: 2rem;\n\n        }\n        div:nth-child(3){\n            grid-area: c;\n            margin-bottom: 2rem;\n        }\n    }\n`\n\nexport const Row = styled.div`\n    width: 75%;\n`\n\n\nexport const Title = styled.h2`\n    margin-bottom: 2rem;\n`\n\nexport const Container = styled.div`\n    margin-top: 2rem;\n`\n\nexport const OrderHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n`\n\nexport const OrderButton = styled(CustomButton)`\n    margin-top: .2rem;\n    font-size: 1.2rem;\n`\n\nexport const AdminPanelContainer = styled.div`\n    margin-bottom: 3rem;\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: #F5F5F5;\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ProfileOrderOverview from '../profile-order-overview/profile-order-overview.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\nimport ExaminationsOverview from '../examinations-overview/examinations-overview.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Profile,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    Title,\n    Container,\n    OrderHeader,\n    OrderButton,\n    CustomSelect,\n    AdminPanelContainer\n} from './user.form-styles'\n\nconst UserForm = ({\n    isAdmin,\n    isUpdating,\n    user,\n    handleChange,\n    handleParameterChange,\n    handleCompanyChange,\n    isOptometrist\n}) => {\n    const { push } = useHistory()\n\n    const handleAddOrderButtonClick = e => {\n        e.preventDefault()\n        push(`/dashboard/objednavky/${user._id}`)\n    }\n\n    return (\n        <GridContainer>\n            <Profile>\n                {isAdmin && <AdminPanelContainer>\n                    <h2>Admin panel</h2>\n                    <InputRow\n                        label=\"Predajňa na ktorej uživatel pracuje\"\n                        example=''\n                    >\n                        <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Nezadané</option>\n                            {\n                                retailNames.map((name, idx) => {\n                                    if (idx === 4) return\n                                    return (\n                                        <option key={idx} value={idx + 1}>{name}</option>\n                                    )\n                                })\n                            }\n                        </CustomSelect>\n                    </InputRow>\n                    <InputRow\n                        label=\"Výška administrativných práv\"\n                        example=\"\"\n                    >\n                        <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Zákaznik</option>\n                            <option value={1}>Predavač</option>\n                            <option value={2}>Vedúci</option>\n                        </CustomSelect>\n                    </InputRow>\n\n                    <Container>\n                        <CustomCheckbox\n                            label='Optometrista'\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"optometrist\",\n                                    value: !user.optometrist\n                                }\n                            })}\n                            isActive={user.optometrist}\n                        />\n                    </Container>\n                </AdminPanelContainer>}\n                <div>\n                    <h2>Informácie</h2>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                // label=\"Priezvisko*\"\n                                type='date'\n                                name='birthDate'\n                                value={user.birthDate}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </div>\n\n                <Container>\n                    <h2>Kontaktné údaje</h2>\n                    <Row>\n                        <div>\n                            <CustomInput\n                                label=\"E-mail*\"\n                                type='email'\n                                name='email'\n                                value={user.email ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Telefónne číslo\"\n                                type='text'\n                                name='phone'\n                                value={user.phone ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <h2>Fakturačné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.address ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.psc ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.city ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.country ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n                <Container>\n                    <h2>Firemné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"IČO\"\n                                type='text'\n                                name='ico'\n                                value={user.company.ico ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"DIČ\"\n                                type='text'\n                                name='dic'\n                                value={user.company.dic ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.company.address ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.company.psc ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.company.city ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.company.country ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n\n                <Container>\n                    <h2>Parametre</h2>\n\n                    <ParametersTable\n                        parameters={user.lenses}\n                        handleChange={handleParameterChange}\n                    />\n                </Container>\n\n\n            </Profile>\n\n            {isUpdating && <div>\n                <OrderHeader>\n                    <Title>\n                        Objednávky\n                    </Title>\n                    <OrderButton onClick={e => handleAddOrderButtonClick(e)}>Pridať objednávku</OrderButton>\n                </OrderHeader>\n                <div>\n                    {user.orders.length > 0 ? user.orders.map((order, idx) => (\n                        <ProfileOrderOverview\n                            key={idx}\n                            id={order}\n                            handleUpdateClick={() => push(`/dashboard/objednavky/${user._id}/${order}`)}\n                        />\n                    )) : (\n                            <p>Žiadné objednávky</p>\n                        )}\n                </div>\n                {isOptometrist && <ExaminationsOverview />}\n            </div>}\n        </GridContainer>\n    )\n}\n\nexport default UserForm\n","import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nexport const Title = styled.h3`\n    margin-top: 2rem;\n    /* margin-bottom: 2rem; */\n`\n\nexport const ToggleOptionsContainer = styled.div`\n    display: flex;\n    margin: 2rem 0;\n`\n\nexport const ToggleFormButton = styled(CustomButton)`\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"#000\"};\n    font-weight: 700;\n    margin-right: 2rem;\n`","import React from 'react'\n\nimport {\n    Title,\n    ToggleFormButton,\n    ToggleOptionsContainer\n} from './custom-form-switch.styles'\n\nconst CustomFormSwitch = ({ title, activeIndex, handleClick, items }) => {\n    return (\n        <React.Fragment>\n            <Title>{title}</Title>\n            <ToggleOptionsContainer>\n                {\n                    items.map((item, idx) => (\n                        <ToggleFormButton key={idx} isActive={activeIndex === idx} onClick={(e) => handleClick(e, idx)}>{item.name}</ToggleFormButton>\n                    ))\n                }\n            </ToggleOptionsContainer>\n        </React.Fragment>\n    )\n}\n\nexport default CustomFormSwitch\n","import styled from \"styled-components\"\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: #F5F5F5;\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`\n\n\nexport const CustomerForm = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 50rem;\n    grid-gap: 2rem;\n    align-items: start;\n`\n\nexport const ColContainer = styled.div`\n    padding: 2rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n\n`\n\nexport const ZeroMargin = styled.div`\n    input {\n        margin-bottom: 0 !important;\n    }\n`\n\nexport const GridRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    max-width: 50rem;\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n`\nexport const Container = styled.div`\n    margin-top: 2rem;\n`","import React from 'react'\n\nimport CustomFormSwitch from '../custom-form-switch/custom-form-switch.component'\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from \"../custom-checkbox/custom-checkbox.component\"\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    CustomSelect,\n    Container,\n    GridRow,\n    ZeroMargin,\n    ColContainer,\n    CustomerForm\n} from './new-user-form.styles'\n\n\nconst NewUserForm = ({\n    formToShow,\n    switchFormButtons,\n    toggleUserForm,\n    user,\n    handleChange,\n    isAdmin,\n    handleParameterChange,\n    handleCompanyChange\n}) => {\n\n    return (\n        <div>\n            {/* Akého uživatela chcete vytvoriť? */}\n            {isAdmin && <CustomFormSwitch\n                items={switchFormButtons}\n                title=\"Akého uživatela chcete vytvoriť?\"\n                activeIndex={formToShow}\n                handleClick={toggleUserForm}\n            />}\n\n            {\n                formToShow === 0 ? (\n                    <CustomerForm>\n                        <ColContainer>\n                            <h2>Informácie</h2>\n                            <InputRow\n                                label=\"\"\n                                example='napr: John'\n                            >\n                                <CustomInput\n                                    label=\"Meno*\"\n                                    type='text'\n                                    name='fName'\n                                    value={user.fName ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: Doe'\n                            >\n                                <CustomInput\n                                    label=\"Priezvisko*\"\n                                    type='text'\n                                    name='lName'\n                                    value={user.lName ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: priklad@email.com'\n                            >\n                                <CustomInput\n                                    label=\"E-mail*\"\n                                    type='email'\n                                    name='email'\n                                    value={user.email ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: 091234567'\n                            >\n                                <CustomInput\n                                    label=\"Telefónne číslo\"\n                                    type='text'\n                                    name='phone'\n                                    value={user.phone ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"Dátum narodenia\"\n                                example=''\n                            >\n                                <CustomInput\n                                    // label=\"Priezvisko*\"\n                                    type='date'\n                                    name='birthDate'\n                                    value={user.birthDate}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n\n                            <Container>\n                                <h2>Parametre</h2>\n\n                                <ParametersTable\n                                    parameters={user.lenses}\n                                    handleChange={handleParameterChange}\n                                />\n                            </Container>\n                        </ColContainer>\n\n                        <ColContainer>\n                            <div>\n                                <h2>Fakturačné údaje</h2>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"Ulica a čislo domu\"\n                                            type='text'\n                                            name='address'\n                                            value={user.address ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"PSČ\"\n                                            type='text'\n                                            name='psc'\n                                            value={user.psc ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Mesto\"\n                                            type='text'\n                                            name='city'\n                                            value={user.city ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Krajina\"\n                                            type='text'\n                                            name='country'\n                                            value={user.country ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                </GridRow>\n                            </div>\n\n                            <Container>\n                                <h2>Firemné údaje</h2>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"IČO\"\n                                            type='text'\n                                            name='ico'\n                                            value={user.company.ico ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"DIČ\"\n                                            type='text'\n                                            name='dic'\n                                            value={user.company.dic ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"Ulica a čislo domu\"\n                                            type='text'\n                                            name='address'\n                                            value={user.company.address ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"PSČ\"\n                                            type='text'\n                                            name='psc'\n                                            value={user.company.psc ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Mesto\"\n                                            type='text'\n                                            name='city'\n                                            value={user.company.city ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Krajina\"\n                                            type='text'\n                                            name='country'\n                                            value={user.company.country ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </div>\n                                </GridRow>\n                            </Container>\n                        </ColContainer>\n\n                    </CustomerForm>\n                ) : (\n                        <CustomerForm>\n\n                            <ColContainer>\n                                <h2>Informácie</h2>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: John'\n                                >\n                                    <CustomInput\n                                        label=\"Meno*\"\n                                        type='text'\n                                        name='fName'\n                                        value={user.fName ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: Doe'\n                                >\n                                    <CustomInput\n                                        label=\"Priezvisko*\"\n                                        type='text'\n                                        name='lName'\n                                        value={user.lName ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: priklad@email.com'\n                                >\n                                    <CustomInput\n                                        label=\"E-mail*\"\n                                        type='email'\n                                        name='email'\n                                        value={user.email ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"Aspoň 1 velké pismeno, 1 malé pismeno a 1 číslo*\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Heslo*\"\n                                        type='password'\n                                        name='password'\n                                        value={user.password ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Potvrď heslo*\"\n                                        type='password'\n                                        name='confirmPassword'\n                                        value={user.confirmPassword ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n\n\n                            </ColContainer>\n\n                            <ColContainer>\n                                <h2>Admin privilégia</h2>\n                                <InputRow\n                                    label=\"Predajňa na ktorej uživatel pracuje\"\n                                    example=''\n                                >\n\n                                    <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Nezadané</option>\n\n                                        {\n                                            retailNames.map((name, idx) => {\n                                                if (idx === 4) return\n                                                return (\n                                                    <option key={idx} value={idx + 1}>{name}</option>\n\n                                                )\n                                            })\n                                        }\n                                    </CustomSelect>\n\n                                </InputRow>\n                                <InputRow\n                                    label=\"Výška administrativných práv\"\n                                    example=\"\"\n                                >\n                                    <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Zákaznik</option>\n                                        <option value={1}>Predavač</option>\n                                        <option value={2}>Vedúci</option>\n                                    </CustomSelect>\n\n                                </InputRow>\n                                <Container>\n                                    <CustomCheckbox\n                                        label='Optometrista'\n                                        handleClick={() => handleChange({\n                                            target: {\n                                                name: \"optometrist\",\n                                                value: !user.optometrist\n                                            }\n                                        })}\n                                        isActive={user.optometrist}\n                                    />\n                                </Container>\n                            </ColContainer>\n                        </CustomerForm>\n                    )\n            }\n        </div>\n    )\n}\n\nexport default NewUserForm\n","import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nimport { paddingStyles } from '../../global.styles'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n`\n\nexport const DeleteProfileButton = styled(CustomButton)`\n    background-color: #DD4C4C;\n    font-size: 1.4rem;\n    margin-left: 2rem;\n`\n\n\nexport const SaveButton = styled(CustomButton)`\n    margin-left: 2rem;\n    font-size: 1.4rem;\n    background-color: rgb(235, 172, 1);\n    font-weight: bolder;\n`","import React, { useContext, useEffect, useState } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { UserContext } from '../../context/user/user.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport UserForm from '../../components/user-form/user-form.component'\nimport NewUserForm from '../../components/new-user-form/new-user-form.component'\n\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    DeleteProfileButton,\n    // Name,\n    SaveButton,\n} from './customer-profile.styles'\n\nconst CustomerProfile = () => {\n    const { id } = useParams()\n    const { isAdmin, isOptometrist } = useContext(AuthContext)\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal,\n    } = useContext(LoadingModalContext)\n\n    const {\n        isUpdating,\n        user,\n        getUser,\n        handleChange,\n        handleParameterChange,\n        handleCompanyChange,\n        updateUser,\n        resetUser,\n        formToShow,\n        switchFormButtons,\n        toggleUserForm,\n        createUser,\n    } = useContext(UserContext)\n\n    const [userObj, setUserObj] = useState({})\n    const [hasChanges, setHasChanges] = useState(false)\n\n    const handleUserChange = (e) => {\n        setHasChanges(true)\n        const { name, value } = e.target\n\n        handleChange(e)\n\n\n        if (value === '') {\n            delete userObj[name]\n            // delete userObj.company[]\n            return\n        }\n\n        setUserObj({\n            ...userObj,\n            [name]: value\n        })\n    }\n\n    const handleLensesParameterChange = (e, idx) => {\n        setHasChanges(true)\n\n        const { name, value } = e.target\n        let arr = user.lenses[name]\n        arr[idx] = value\n\n\n        handleParameterChange(e, idx)\n        setUserObj({\n            ...userObj,\n            lenses: {\n                ...user.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n\n    const handleCompanyAddressChange = (e) => {\n        setHasChanges(true)\n\n        const { name, value } = e.target\n        handleCompanyChange(e)\n\n        console.log(value)\n\n        if (value === '') {\n            delete userObj.company[name]\n            if (Object.keys(userObj.company).length === 0) {\n                delete userObj[\"company\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setUserObj({\n            ...userObj,\n            company: {\n                ...userObj.company,\n                [name]: value\n            }\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setHasChanges(false)\n\n        if (id === 'novy-zakaznik') {\n            console.log(\"Create new user\")\n            if (userObj.fName || userObj.lName) {\n                delete userObj[\"fName\"]\n                delete userObj[\"lName\"]\n            }\n            createUser(userObj)\n        } else {\n            console.log(\"Update existing user\")\n            if (userObj.fName || userObj.lName) {\n                delete userObj[\"fName\"]\n                delete userObj[\"lName\"]\n            } else if (!userObj.fName || !userObj.lName) {\n                delete userObj[\"name\"]\n            }\n            updateUser(userObj, user._id)\n        }\n    }\n\n    useEffect(() => {\n        setUserObj({\n            ...userObj,\n            name: user.fName + \" \" + user.lName\n        })\n    }, [userObj.fName, userObj.lName])\n\n    useEffect(() => {\n        if (id !== 'novy-zakaznik') {\n            getUser(id)\n        }\n    }, [id])\n\n    //unmount\n    useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            resetUser()\n            handleChange({\n                target: {\n                    name: 'lenses',\n                    value: {\n                        cylinder: [1001, 1001, 1001, 1001],\n                        cylinderAxes: [1001, 1001, 1001, 1001],\n                        diopters: [1001, 1001, 1001, 1001],\n                        distance: [1001, 1001, 1001, 1001],\n                        addition: [1001, 1001, 1001, 1001],\n                        basis: [1001, 1001, 1001, 1001],\n                        prism: [1001, 1001, 1001, 1001],\n                    },\n                }\n            })\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <Prompt\n                when={hasChanges}\n                message={\"Chcete opustiť tuto stránku?\"}\n            />\n            <form onSubmit={handleSubmit}>\n                <Header>\n                    <h1>Profil</h1>\n                    <div>\n                        {isUpdating && <DeleteProfileButton type='button'>Vymazať</DeleteProfileButton>}\n                        <SaveButton type=\"submit\">\n                            {isUpdating ? \"Uložiť zmeny\" : \"Vytvoriť\"}\n                        </SaveButton>\n                    </div>\n                </Header>\n\n                <ScrollContainer>\n                    {\n                        isUpdating ? (\n                            <UserForm\n                                user={user}\n                                isAdmin={isAdmin}\n                                isUpdating={isUpdating}\n                                isOptometrist={isOptometrist}\n                                handleChange={handleUserChange}\n                                handleParameterChange={handleLensesParameterChange}\n                                handleCompanyChange={handleCompanyAddressChange}\n                            />\n                        ) : (\n                                <NewUserForm\n                                    isAdmin={isAdmin}\n                                    handleParameterChange={handleLensesParameterChange}\n                                    formToShow={formToShow}\n                                    switchFormButtons={switchFormButtons}\n                                    toggleUserForm={toggleUserForm}\n                                    user={user}\n                                    handleChange={handleUserChange}\n                                    handleCompanyChange={handleCompanyAddressChange}\n                                    resetUser={resetUser}\n\n                                />\n                            )\n                    }\n\n\n                </ScrollContainer>\n\n            </form>\n        </section>\n    )\n}\n\nexport default CustomerProfile\n","export const initProductObj = {\n    name: \"\",\n    description: \"\",\n    price: 0,\n    type: 0,\n    brand: \"\",\n    soldAmount: 0,\n    available: [1001, 1001, 1001, 1001, 0],\n    eanCode: \"\",\n    image: \"\",\n    eshop: true,\n    link: '',\n    category: ''\n}\n\nexport const initGlassesObj = {\n    colorCode: \"\",\n    specs: {\n        frameColor: \"\",\n        frameMaterial: \"\",\n        frameStyle: \"\",\n        lensColor: \"\",\n        sex: \"M\",\n        size: [1001, 1001, 1001],\n    }\n}\n\nexport const initContactLensesObj = {\n    allowedCurves: [1001],\n    allowedDiameters: [1001],\n    dioptersRange: [1001, 1001]\n}\n\nexport const initLensesObj = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    dioptersRange: [1001, 1001],\n    cylinderRange: [1001, 1001],\n    price: 0,\n    brand: \"\",\n    image: ''\n}\n\nexport const retailNames = [\n    \"Obchodná 57, Bratislava\",\n    \"Miletičova 38, Bratislava\",\n    \"Vajnory, Bratislava\",\n    \"Senica, OC Branč\",\n    \"Trnava, City Aréna\"\n]\n\n// Category variables\nexport const productCategories = [\n    {\n        name: \"Dioptrické\",\n        value: 1\n    },\n    {\n        name: \"Slnečné\",\n        value: 2\n    },\n    {\n        name: \"Kontaktné Šošovky\",\n        value: 3\n    },\n    {\n        name: \"Športové\",\n        value: 4\n    },\n    {\n        name: \"Doplnky\",\n        value: 5\n    },\n    {\n        name: \"Šošovky\",\n        value: 0\n    },\n]\n\nexport const premisesTabs = [\n    {\n        id: 0,\n        name: \"Všetko\",\n        premises: 0,\n\n    },\n    {\n        id: 1,\n        name: \"Obchodná 57, Bratislava\",\n        premises: 1,\n    },\n    {\n        id: 2,\n        name: \"Miletičova 38, Bratislava\",\n        premises: 2,\n    },\n    {\n        id: 3,\n        name: \"Senica, OC Branč\",\n        premises: 3,\n    },\n    {\n        id: 4,\n        name: \"Vajnory, Bratislava\",\n        premises: 4,\n    },\n    // {\n    //     id: 5,\n    //     name: \"Trnava, City Aréna\",\n    //     permission: 5,\n    // },\n]\n\nexport const categoryTabs = [\n    {\n        id: 0,\n        name: \"Okuliare\",\n    },\n    {\n        id: 1,\n        name: \"Šosovky\",\n    },\n]\n\nexport const lensesBrands = [\n    \"Acuvue\",\n    \"Adore\",\n    \"Air Optix\",\n    \"Biofinity\",\n    \"Biomedics\",\n    \"Clariti\",\n    \"ColourVue\",\n    \"Comfilcon A\",\n    \"Dailies\",\n    \"Freshlook\",\n    \"Lenjoy\",\n    \"Proclear\",\n    \"Purevision\",\n    \"Soflens\",\n]\n\nexport const brands = [\n    \"Adidas\",\n    \"Armani Exchange\",\n    \"Arnette\",\n    \"Blackfin\",\n    \"Blumarine\",\n    \"Burberry\",\n    \"Bvlgari\",\n    \"Calvin Klein\",\n    \"Carolina Herrera\",\n    \"Carrera\",\n    \"David Beckham\",\n    \"Dior\",\n    \"Dolce & Gabbana\",\n    \"Elle\",\n    \"Emporio Armani\",\n    \"Esprit\",\n    \"Etnia Barcelona\",\n    \"Fendi\",\n    \"Fossil\",\n    \"Furla\",\n    \"Giorgio Armani\",\n    \"Givenchy\",\n    \"Gucci\",\n    \"Guess\",\n    \"H.I.S\",\n    \"Hawkers\",\n    \"Hugo Boss\",\n    \"Jaguar\",\n    \"Jimmy Choo\",\n    \"Lacoste\",\n    \"Liu Jo\",\n    \"Marc Jacobs\",\n    \"Max Mara\",\n    \"Max&Co\",\n    \"Meller\",\n    \"Mexx\",\n    \"Michael Kors\",\n    \"Moschino\",\n    \"Oakley\",\n    \"Persol\",\n    \"Polaroid\",\n    \"Police\",\n    \"Polo Ralph Lauren\",\n    \"Prada\",\n    \"Prada Linea Rossa\",\n    \"Ralph\",\n    \"Ralph Lauren\",\n    \"Ray-Ban\",\n    \"Salvatore Ferragamo\",\n    \"Smith\",\n    \"Strellson\",\n    \"Tiffany&Co.\",\n    \"Tom Ford\",\n    \"Tommy Hilfiger\",\n    \"Versace\",\n    \"Vogue\"\n]\n\nexport const formatPrice = price => {\n    let value = 0\n    if (price.includes(',')) {\n        if (price.split(',')[1].length === 1) {\n            value = price.split(',')[0] + price.split(',')[1] + \"0\"\n            return Number(value)\n        } else {\n            value = price.split(',')[0] + price.split(',')[1]\n            return Number(value)\n        }\n    } else {\n        return Number(price * 100)\n    }\n}\n\nexport const formatfloatNumber = number => {\n    let value = 0\n    if (number.includes(',')) {\n        value = number.split(',')[0] + '.' + number.split(',')[1]\n        return Number(value)\n    } else {\n        return Number(number)\n\n    }\n}\n\nexport const formatAvailable = (available, activePremisesTab) => {\n    if (available === undefined) return \"Šosovka\"\n\n    if (typeof available === \"number\") {\n        return `Na sklade ${available} kusov`\n    } else {\n        if (activePremisesTab === 0) {\n            return `Vo všetkých skladoch je ${available.reduce((acc, currValue) => acc + currValue)} kusov`\n        } else {\n            return `Na sklade ${available[activePremisesTab]} kusov`\n        }\n    }\n}\n\nexport const checkParameter = (parameter, idx) => {\n    if (parameter.length === 0) {\n        return \"\"\n    }\n    if (parameter[idx] === 1001) {\n        return \"\"\n    }\n\n    return parameter[idx].toString()\n}\n\nconst dia = \"áäčďéíľĺňóôŕšťúýžÁČĎÉÍĽĹŇÓŠŤÚÝŽ\";\nconst nodia = \"aacdeillnoorstuyzACDEILLNOSTUYZ\";\n\nexport const diaConvert = (text) => {\n    let convertText = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (dia.indexOf(text.charAt(i)) != -1) {\n            convertText += nodia.charAt(dia.indexOf(text.charAt(i)));\n        }\n        else {\n            convertText += text.charAt(i);\n        }\n    }\n    return convertText;\n}\n\nexport const formatLink = (text) => {\n    return diaConvert(text).replaceAll(\" \", \"-\").toLowerCase().trim()\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components'\n\nexport const InputRow = styled.div`\n    display:flex;\n    align-items: center;\n\n    p {\n        margin-top: 1.8rem;\n        margin-left: 2rem;\n            opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n    @media all and (max-width: 800px) {\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n    }\n`","import React from 'react'\n\nimport { InputRow } from './product-input-row.styles'\n\nconst ProductInputRow = ({ children, label, example, ...otherprops }) => {\n    return (\n        <InputRow {...otherprops}>\n            <div>\n                {children}\n            </div>\n            <div>\n                <p>{label + \" \"}<span>{example}</span></p>\n            </div>\n        </InputRow>\n    )\n}\n\nexport default ProductInputRow\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: .5rem .5rem .5rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 25px 0;\n        font-family: inherit;\n        resize: none;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: .6rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-textarea.styles'\n\nconst CustomTextarea = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <textarea\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomTextarea","import React, { createContext, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\n\nexport const ExaminationContext = createContext({\n    createExamination: () => { },\n    updateExamination: () => { },\n    deleteExamination: () => { },\n})\n\nconst ExaminationProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const createExamination = async (examsToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(examsToAdd)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/exams/`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.exam) {\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateExamination = async (examToUpdate, examId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(examToUpdate)\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/exams/${examId}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.exam) {\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteExamination = async (examId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/exams/${examId}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.exam) {\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <ExaminationContext.Provider\n            value={{\n                createExamination,\n                updateExamination,\n                deleteExamination\n            }}\n        >\n            {children}\n        </ExaminationContext.Provider>\n    )\n}\n\nexport default ExaminationProvider"],"sourceRoot":""}
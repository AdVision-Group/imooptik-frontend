{"version":3,"sources":["components/product-glasses-form/product-glasses-form.styles.jsx","components/product-glasses-form/product-glasses-form.component.jsx","components/product-lenses-form/product-lenses-form.styles.jsx","components/product-lenses-form/product-lenses-form.component.jsx","components/product-accessories-form/product-accessories-form.styles.jsx","components/product-accessories-form/product-accessories-form.component.jsx","components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx","components/product-contact-lenses-form/product-contact-lenses-form.component.jsx","sections/product/product.styles.jsx","sections/product/product.section.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["ImageContainer","styled","div","ProductImage","hasImage","GlassesContainerForm","GlassesContainer","GlassesParameterContainer","StockContainer","CustomSelect","select","ProductGlassesForm","product","handleChange","selectedImage","retailNames","currentUser","checkParameter","handleAvailableChange","handleGlassesParametersChange","handleGlassesSpecsSizeChange","handleSpecsChange","glassesParameters","setImageModal","isUpdating","label","type","name","value","eanCode","toString","e","brand","category","link","rows","description","required","price","onClick","src","process","imagePath","alt","colorCode","specs","frameColor","frameMaterial","frameStyle","lensColor","sex","onChange","size","map","idx","admin","available","premises","LensesFormContainer","LensesContainer","LensesParametersContainer","ProductLensesForm","lenses","handleParameterChange","Array","inputLabel","dioptersRange","cylinderRange","AccessoriesFormContainer","AccessoriesContainer","ProductAccessoriesForm","ContactLensesFormContainer","ContactLensesContainer","ContactLensesParametersContainer","IncreaseButton","CustomButton","ProductContactLensesForm","handleContactLensesChange","handleAddNewParameter","contactLensesParameters","allowedCurves","target","allowedDiameters","Header","paddingStyles","SubmitButton","IsPublicCheckbox","CustomCheckbox","CategoryContainer","CategoryCheckbox","ProductSection","id","useParams","useContext","AuthContext","LoadingModalContext","closeModal","message","isLoading","showModal","getMessage","setShowModal","ImageContext","setSelectedImage","useState","showImageModal","setIsUpdating","WarehouseContext","handleLensesChange","handleLensesParameterChange","createProduct","updateProduct","resetProduct","resetLenses","resetContactLenses","resetGlassesParameters","createLenses","updateLenses","handleProductChange","handleProductAvailableChange","getEanCode","handleContactLensesParameterChange","handleGlassesParameterChange","handleGlassesParameterSpecsChange","handleGlassesSizeChange","getSingleProduct","hasChanged","setHasChanged","productObj","setProductObj","handleChangeType","Object","keys","length","window","confirm","formatLink","arr","Number","useEffect","image","when","loading","title","close","setImage","imgId","isActive","eshop","handleClick","preventDefault","newProductObj","contactLenses","productCategories","splice","firstIndex","find","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/21.aa9f2606.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const GlassesContainerForm = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const GlassesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`\n\nexport const GlassesParameterContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n    margin-bottom: 3rem;\n\n    h4 {\n        margin-top: 1rem;\n    }\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: var(--input-background-color);\n    color: var(--input-color);\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    ImageContainer,\n    ProductImage,\n    GlassesContainerForm,\n    GlassesContainer,\n    GlassesParameterContainer,\n    StockContainer,\n    CustomSelect\n} from './product-glasses-form.styles.jsx'\n\nconst ProductGlassesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    retailNames,\n    currentUser,\n    checkParameter,\n    handleAvailableChange,\n    handleGlassesParametersChange,\n    handleGlassesSpecsSizeChange,\n    handleSpecsChange,\n    glassesParameters,\n    setImageModal,\n    isUpdating,\n}) => {\n\n    return (\n        <GlassesContainerForm>\n            <GlassesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </GlassesContainer>\n            <div>\n                <GlassesParameterContainer>\n                    <h3>Parametre</h3>\n                    <CustomInput\n                        label=\"Farebný kód\"\n                        type='text'\n                        name='colorCode'\n                        value={glassesParameters.colorCode ?? \"\"}\n                        handleChange={(e) => handleGlassesParametersChange(e)}\n                    />\n                    <div>\n                        <CustomInput\n                            label=\"Farba rámu\"\n                            type='text'\n                            name='frameColor'\n                            value={glassesParameters.specs.frameColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Materiál rámu\"\n                            type='text'\n                            name='frameMaterial'\n                            value={glassesParameters.specs.frameMaterial ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Tvar rámu\"\n                            type='text'\n                            name='frameStyle'\n                            value={glassesParameters.specs.frameStyle ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Farba šošovky\"\n                            type='text'\n                            name='lensColor'\n                            value={glassesParameters.specs.lensColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomSelect\n                            label=\"Pohlavie\"\n                            type='text'\n                            name='sex'\n                            value={glassesParameters.specs.sex ?? \"\"}\n                            onChange={(e) => handleSpecsChange(e)}\n                        >\n                            <option value='M'>Pánske</option>\n                            <option value='W'>Dámske</option>\n                            <option value='D'>Detské</option>\n                            <option value='U'>Nezáleží</option>\n                        </CustomSelect>\n                    </div>\n                    <div>\n                        <h4>Velkosť</h4>\n                        {glassesParameters.specs.size.map((value, idx) => (\n                            <CustomInput\n                                key={idx}\n                                label={idx === 0 ? \"Veľkosť očnice\" : idx === 1 ? \"Veľkosť mostika\" : \"Veľkosť stranice\"}\n                                type='text'\n                                name='size'\n                                value={checkParameter(glassesParameters.specs.size, idx)}\n                                handleChange={(e) => handleGlassesSpecsSizeChange(e, idx)}\n                            />\n                        ))}\n                    </div>\n                </GlassesParameterContainer>\n                {currentUser.admin >= 2 ? (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        {product.available.map((value, idx) => {\n                            if (idx === 4) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </StockContainer>\n                ) : (\n                        <StockContainer>\n                            <h3>Skladové zásoby</h3>\n                            <CustomInput\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[currentUser.premises]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, currentUser.premises)}\n                                handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                            />\n                        </StockContainer>\n                    )}\n            </div>\n        </GlassesContainerForm>\n    )\n}\n\nexport default ProductGlassesForm\n","import styled from 'styled-components'\n\n\nexport const LensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const LensesContainer = styled.div`\n    /* width: 45rem; */\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n    /* display: inline-block; */\n    /* padding-bottom: 4rem;  */\n    margin-bottom: 5rem;\n`\n\nexport const LensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n\n    h3 {\n        /* margin-bottom: 1rem; */\n    }\n\n    h4 {\n        margin-top: 2rem;\n    }\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    LensesFormContainer,\n    LensesContainer,\n    LensesParametersContainer,\n    ProductImage,\n    ImageContainer,\n} from './product-lenses-form.styles'\n\nconst ProductLensesForm = ({\n    lenses,\n    selectedImage,\n    setImageModal,\n    handleChange,\n    handleParameterChange,\n    checkParameter,\n}) => {\n    return (\n        <LensesFormContainer>\n            <LensesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"Názov šošoviek*\"\n                    type='text'\n                    name='name'\n                    value={lenses.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka*\"\n                    type='text'\n                    name='brand'\n                    value={lenses.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomTextarea\n                    label=\"Popis*\"\n                    name='description'\n                    rows='5'\n                    value={lenses.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={lenses.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </LensesContainer>\n            <LensesParametersContainer>\n                <h3>Parametre</h3>\n\n                <h4>Dioptrie</h4>\n                {[...Array(2)].map((value, idx) => {\n                    const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\n\n                    return (\n                        <div key={idx}>\n                            <CustomInput\n                                label={inputLabel}\n                                type='number'\n                                name='dioptersRange'\n                                value={checkParameter(lenses.dioptersRange, idx)}\n                                handleChange={(e) => handleParameterChange(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n\n                <h4>Cylinder</h4>\n                {[...Array(2)].map((value, idx) => {\n                    const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\n\n                    return (\n                        <div key={idx}>\n                            <CustomInput\n                                label={inputLabel}\n                                type='number'\n                                name='cylinderRange'\n                                value={checkParameter(lenses.cylinderRange, idx)}\n                                handleChange={(e) => handleParameterChange(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n            </LensesParametersContainer>\n        </LensesFormContainer>\n    )\n}\n\nexport default ProductLensesForm\n","import styled from 'styled-components'\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const AccessoriesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const AccessoriesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    AccessoriesFormContainer,\n    AccessoriesContainer,\n    StockContainer,\n    ImageContainer,\n    ProductImage,\n} from './product-accessories-form.styles'\n\nconst ProductAccessoriesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    setImageModal,\n    handleAvailableChange,\n    checkParameter,\n    retailNames,\n    currentUser,\n    isUpdating\n}) => {\n    return (\n        <AccessoriesFormContainer>\n            <AccessoriesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </AccessoriesContainer>\n            {currentUser.admin >= 2 ? (\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    {product.available.map((value, idx) => {\n                        if (idx === 4) return\n                        return (\n                            <CustomInput\n                                key={idx}\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, idx)}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        )\n                    })}\n                </StockContainer>\n            ) : (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        <CustomInput\n                            label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[currentUser.premises]}\n                            type='number'\n                            name={\"available\"}\n                            value={checkParameter(product.available, currentUser.premises)}\n                            handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                        />\n                    </StockContainer>\n                )}\n        </AccessoriesFormContainer>\n    )\n}\n\nexport default ProductAccessoriesForm\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const ContactLensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const ContactLensesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`\n\nexport const ContactLensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n    margin-bottom: 3rem;\n\n    h4 {\n        margin-top: 1rem;\n    }\n`\n\nexport const IncreaseButton = styled(CustomButton)`\n    margin-top: 2rem;\n    font-size: 1.4rem;\n\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    ContactLensesContainer,\n    ContactLensesFormContainer,\n    StockContainer,\n    ContactLensesParametersContainer,\n    IncreaseButton,\n    ImageContainer,\n    ProductImage,\n} from './product-contact-lenses-form.styles'\n\nconst ProductContactLensesForm = ({\n    product,\n    handleChange,\n    setImageModal,\n    selectedImage,\n    checkParameter,\n    handleContactLensesChange,\n    handleAddNewParameter,\n    contactLensesParameters,\n    retailNames,\n    currentUser,\n    handleAvailableChange,\n    isUpdating\n}) => {\n    return (\n        <ContactLensesFormContainer>\n            <ContactLensesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </ContactLensesContainer>\n            <div>\n                <ContactLensesParametersContainer>\n                    <h3>Parametre</h3>\n                    <div>\n                        <h4>Zakrivenie</h4>\n                        {contactLensesParameters.allowedCurves.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedCurves\"}\n                                    value={checkParameter(contactLensesParameters.allowedCurves, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedCurves'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n                    <div>\n                        <h4>Priemery</h4>\n                        {contactLensesParameters.allowedDiameters.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedDiameters\"}\n                                    value={checkParameter(contactLensesParameters.allowedDiameters, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedDiameters'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n\n                    <div>\n                        <h4>Dioptrie</h4>\n                        {contactLensesParameters.dioptersRange.map((value, idx) => {\n                            const inputLabel = idx === 0 ? \"minimum\" : \"maximum\"\n\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={inputLabel}\n                                    type='text'\n                                    name={\"dioptersRange\"}\n                                    value={checkParameter(contactLensesParameters.dioptersRange, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </div>\n                </ContactLensesParametersContainer>\n\n                {currentUser.admin >= 2 ? (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        {product.available.map((value, idx) => {\n                            if (idx === 4) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </StockContainer>\n                ) : (\n                        <StockContainer>\n                            <h3>Skladové zásoby</h3>\n                            <CustomInput\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[currentUser.premises]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, currentUser.premises)}\n                                handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                            />\n                        </StockContainer>\n                    )}\n            </div>\n        </ContactLensesFormContainer>\n    )\n}\n\nexport default ProductContactLensesForm\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\nimport CustomButton from '../../components/custom-button/custom-button.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n    color: var(--primary-text-color);\n\n`\n\nexport const SubmitButton = styled(CustomButton)`\n\n`\n\nexport const IsPublicCheckbox = styled(CustomCheckbox)`\n    margin-right: 2rem;\n`\n\n\nexport const CategoryContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n    display: inline-block;\n    margin-bottom: 3rem;\n\n    h3 {\n        margin-bottom: 1.5rem;\n    }\n`\nexport const CategoryCheckbox = styled(CustomCheckbox)`\n    &:not(:last-child) {\n        margin-right: 2rem;\n    }\n`","import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport Popup from '../../components/popup/pop-up.component'\n\n// import CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n// import CustomFormSwitch from '../../components/custom-form-switch/custom-form-switch.component'\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\nimport ProductAccessoriesForm from '../../components/product-accessories-form/product-accessories-form.component'\nimport ProductContactLensesForm from '../../components/product-contact-lenses-form/product-contact-lenses-form.component'\n\n// import { useFetch } from '../../hooks/useFetch'\n\nimport { productCategories, checkParameter, retailNames, formatLink } from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Header,\n    CategoryContainer,\n    CategoryCheckbox,\n    SubmitButton,\n    IsPublicCheckbox,\n\n} from './product.styles'\n\nconst ProductSection = () => {\n    const { id } = useParams()\n    const { currentUser } = useContext(AuthContext)\n    const { closeModal, message, isLoading, showModal, getMessage, setShowModal } = useContext(LoadingModalContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const {\n        eanCode,\n        product,\n        lenses,\n        contactLensesParameters,\n        glassesParameters,\n        handleLensesChange,\n        handleLensesParameterChange,\n        createProduct,\n        updateProduct,\n        resetProduct,\n        resetLenses,\n        resetContactLenses,\n        resetGlassesParameters,\n        createLenses,\n        updateLenses,\n        handleProductChange,\n        handleProductAvailableChange,\n        getEanCode,\n        handleAddNewParameter,\n        handleContactLensesParameterChange,\n        handleGlassesParameterChange,\n        handleGlassesParameterSpecsChange,\n        handleGlassesSizeChange,\n        getSingleProduct\n    } = useContext(WarehouseContext)\n\n    const [hasChanged, setHasChanged] = useState(false)\n    const [productObj, setProductObj] = useState({})\n\n\n\n    const handleChangeType = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (!isUpdating) {\n            if (productObj.type === 0) {\n                if (Object.keys(productObj).length > 1) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetLenses()\n                    } else {\n                        return\n                    }\n                }\n            } else {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetProduct()\n                        resetContactLenses()\n                        resetGlassesParameters()\n                    } else {\n                        return\n                    }\n                }\n            }\n        }\n        setProductObj({\n            [name]: value\n        })\n\n    }\n\n    const handleChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (productObj.type === 0) {\n            handleLensesChange(e)\n        }\n\n        if (productObj.type === 5) {\n            handleProductChange(e)\n        }\n\n        if (productObj.type === 4) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 3) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 2) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 1) {\n            handleProductChange(e)\n        }\n\n\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        if (isUpdating) {\n            if (name === 'name') {\n                setProductObj({\n                    ...productObj,\n                    [name]: value,\n                    link: formatLink(value)\n                })\n                return\n            }\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParametersChange = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterChange(e)\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleSpecsChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterSpecsChange(e)\n\n        if (value === '') {\n            delete productObj.specs[name]\n\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSpecsSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleGlassesSizeChange(e, idx)\n\n        if (value === '') {\n            if (productObj.specs[name].length > 1) {\n                arr[idx] = 1001\n\n                const firstIndex = arr[0]\n                const canDeleteSpecs = arr.map(value => {\n                    if (firstIndex !== value) {\n                        return false\n                    } else {\n                        return true\n                    }\n                })\n\n                const verdict = canDeleteSpecs.find(value => value === false)\n\n                if (verdict === false) {\n                    setProductObj({\n                        ...productObj,\n                        specs: {\n                            ...productObj.specs,\n                            [name]: arr\n                        }\n                    })\n                } else {\n                    delete productObj.specs[name]\n                }\n\n            }\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleProductAvailableChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleContactLensesChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleContactLensesParameterChange(e, idx)\n\n        if (value === '') {\n            if (productObj.contactLenses[name].length > 1) {\n                arr.splice(idx, 1)\n                setProductObj({\n                    ...productObj,\n                    contactLenses: {\n                        ...productObj.contactLenses,\n                        [name]: arr\n                    }\n                })\n            } else {\n                delete productObj.contactLenses[name]\n            }\n            if (Object.keys(productObj.contactLenses).length === 0) {\n                delete productObj[\"contactLenses\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            contactLenses: {\n                ...productObj.contactLenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleLensesParameterChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleSelectImage = (imgId) => {\n        setHasChanged(true)\n        setProductObj({\n            ...productObj,\n            image: imgId\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        let newProductObj = {\n            ...productObj\n        }\n\n        if (currentUser.admin < 2) {\n            if (newProductObj.available) {\n                newProductObj = {\n                    ...productObj,\n                    available: productObj.available[currentUser.premises]\n                }\n            }\n        } else {\n            if (newProductObj.available) {\n                newProductObj = {\n                    ...productObj,\n                    available: newProductObj.available ? newProductObj.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0]\n                }\n            }\n        }\n\n        if (isUpdating) {\n            if (newProductObj.type === 0) {\n                setHasChanged(false)\n                delete newProductObj['link']\n                delete newProductObj['type']\n                updateLenses(newProductObj)\n                return\n            } else if (newProductObj.type === 3) {\n                setHasChanged(false)\n                delete newProductObj['type']\n                updateProduct({ ...newProductObj, contactLenses: {} })\n                return\n            } else {\n                setHasChanged(false)\n                delete newProductObj['type']\n                updateProduct(newProductObj)\n                return\n            }\n        } else {\n            if (newProductObj.type === 0) {\n                if (!newProductObj.name || !newProductObj.brand || !newProductObj.description || !newProductObj.price || !newProductObj.image || !newProductObj.dioptersRange || !newProductObj.cylinderRange) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    delete newProductObj['type']\n                    createLenses(newProductObj)\n                }\n            }\n            if (newProductObj.type === 5 || newProductObj.type === 4 || newProductObj.type === 3 || newProductObj.type === 2 || newProductObj.type === 1) {\n                if (!newProductObj.name || !newProductObj.price || !newProductObj.image) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    createProduct(newProductObj)\n                }\n            }\n        }\n\n\n    }\n\n    useEffect(() => {\n        if (id === \"novy-produkt\") {\n            if (!eanCode) {\n                getEanCode()\n            } else {\n                if (productObj.type) {\n                    handleChange({\n                        target: {\n                            name: \"eanCode\",\n                            value: eanCode\n                        }\n                    })\n                }\n            }\n        }\n    }, [id, eanCode, productObj.type, productObj.eanCode, product.type])\n\n    useEffect(() => {\n        if (id !== 'novy-produkt') {\n            getSingleProduct(id)\n            setIsUpdating(true)\n            if (!productObj.type) {\n                handleChangeType({\n                    target: {\n                        name: \"type\",\n                        value: product.type\n                    }\n                })\n\n            }\n        }\n    }, [id, product.type])\n\n    useEffect(() => {\n        if (product.image) {\n            setSelectedImage(product.image)\n        }\n        if (lenses.image) {\n            setSelectedImage(lenses.image)\n        }\n    }, [product.image, lenses.image])\n\n    useEffect(() => {\n        return () => {\n            resetProduct()\n            resetLenses()\n            resetContactLenses()\n            resetGlassesParameters()\n            setProductObj({})\n            setSelectedImage(null)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <section>\n            <Prompt\n                when={hasChanged}\n                message=\"Chcete opustiť formulár?\"\n            />\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={handleSelectImage} />}\n            <Header>\n                <div>\n                    <h1>Nový Produkt</h1>\n                </div>\n                <div>\n                    <IsPublicCheckbox\n                        label=\"Verejné\"\n                        // value={product.ehop}\n                        name='eshop'\n                        isActive={product.eshop}\n                        handleClick={() => handleChange({\n                            target: {\n                                name: \"eshop\",\n                                value: !product.eshop\n                            }\n                        })}\n                    />\n                    <SubmitButton onClick={handleSubmit}>Vytvoriť</SubmitButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating && <CategoryContainer>\n                    <h3>Aký produkt chcete pridať?</h3>\n                    {productCategories.map((category, idx) => (\n                        <CategoryCheckbox\n                            key={idx}\n                            label={category.name}\n                            value={category.value}\n                            name='type'\n                            isActive={category.value === productObj.type}\n                            handleClick={() => handleChangeType({\n                                target: {\n                                    name: \"type\",\n                                    value: category.value\n                                }\n                            })}\n                        />\n                    ))}\n                </CategoryContainer>}\n\n                {productObj.type === 0 && (\n                    <ProductLensesForm\n                        lenses={lenses}\n                        selectedImage={selectedImage}\n                        setImageModal={setImageModal}\n                        handleChange={handleChange}\n                        handleParameterChange={handleParameterChange}\n                        checkParameter={checkParameter}\n                    />\n                )}\n\n                {productObj.type === 5 && (\n                    <ProductAccessoriesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        currentUser={currentUser}\n                        retailNames={retailNames}\n                        selectedImage={selectedImage}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAvailableChange={handleAvailableChange}\n                    />\n                )}\n\n                {productObj.type === 3 && (\n                    <ProductContactLensesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        contactLensesParameters={contactLensesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAddNewParameter={handleAddNewParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        handleContactLensesChange={handleContactLensesChange}\n                    />\n                )}\n\n                {(productObj.type === 1 || productObj.type === 2 || productObj.type === 4) && (\n                    <ProductGlassesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        glassesParameters={glassesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleSpecsChange={handleSpecsChange}\n                        handleAvailableChange={handleAvailableChange}\n                        handleGlassesSpecsSizeChange={handleGlassesSpecsSizeChange}\n                        handleGlassesParametersChange={handleGlassesParametersChange}\n                    />\n                )}\n\n            </ScrollContainer>\n\n        </section >\n    )\n}\n\nexport default ProductSection\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}
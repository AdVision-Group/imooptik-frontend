{"version":3,"sources":["components/user-form/user.form-styles.jsx","components/profile-order-overview/profile-order-overview.styles.jsx","components/profile-order-overview/profile-order-overview.component.jsx","components/examination-user/examination-user.styles.jsx","components/examination-user/examination-user.component.jsx","utils/parameters.utils.jsx","components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx","components/modal-optometrist-examination/modal-optometrist-examination.component.jsx","components/examinations-overview/examinations-overview.styles.jsx","components/examinations-overview/examinations-overview.component.jsx","components/user-form/user-form.component.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","hooks/useFetch.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","components/custom-checkbox/custom-checkbox.styles.jsx","components/custom-checkbox/custom-checkbox.component.jsx","context/order/order.context.jsx","context/warehouse/warehouse.utils.jsx","components/custom-textarea/custom-textarea.styles.jsx","components/custom-textarea/custom-textarea.component.jsx","context/user/user.queries.jsx","context/user/user.utils.jsx","context/user/user.context.jsx","components/product-input-row/product-input-row.styles.jsx","components/product-input-row/product-input-row.component.jsx","context/examination/examination.context.jsx","components/parameters-table/parameters-table.styles.jsx","components/parameters-table/parameters-table.component.jsx"],"names":["Profile","styled","div","GridContainer","ZeroMargin","GridRow","Row","Title","h2","Container","OrderHeader","OrderButton","CustomButton","AdminPanelContainer","CustomSelect","select","OrderContainer","OrderContent","Options","UpdateButton","DeleteButton","OrderId","p","ProfileOrderOverview","id","handleUpdateClick","orderData","useFetchById","console","log","isLoading","order","response","dateData","Date","date","error","customId","toLocaleDateString","weekday","month","day","year","onClick","ExaminationUserContainer","ExaminationUser","userId","user","name","checkParameter","parametersArr","idx","length","checkParameterValue","value","ModalContainer","Modal","CloseButton","button","TableContainer","HeadTableCol","TableCol","TableBlock","TwoCols","SubmitButton","OptometristExaminationModal","close","refetch","examinationToUpdate","examinationData","useContext","ExaminationContext","createExamination","updateExamination","useState","examinationObj","setExaminationObj","parameters","setParameters","handleParameterChange","e","target","arr","handleChange","formatParameters","newParameters","map","parameter","changeNumber","toString","replace","isNaN","Number","formatParameter","useEffect","exam","ReactDOM","createPortal","Array","type","sph","onChange","onBlur","cyl","ax","vizusD","vizusBino","vizusB","prizma","basis","pd","add","label","bc","dptrPO","dptrLO","note","rows","recommendation","preventDefault","examObj","doneTo","document","getElementById","ExaminationsOverviewContainer","Header","ExaminationContainer","ExamHead","ExamTableContainer","ExaminationOptions","AddButton","ExaminationsOverview","params","useParams","deleteExamination","showOptometristModal","setShowOptometristModal","examinations","setExaminations","setExaminationToUpdate","exams","examination","doneBy","_id","handleDelete","UserForm","isAdmin","isUpdating","handleCompanyChange","isOptometrist","isOrder","push","useHistory","example","premises","retailNames","admin","handleClick","optometrist","isActive","fName","lName","birthDate","email","phone","address","psc","city","country","company","ico","dic","lenses","handleAddOrderButtonClick","orders","reverse","slice","shrinkLabel","css","InputGroup","CustomInput","otherProps","className","htmlFor","useFetch","path","skip","setResponse","setError","message","setMessage","setIsLoading","refetchIndex","setRefetchIndex","prevRefetchIndex","a","fetch","process","res","json","data","fetchData","useFetchByQuery","queryObj","myHeaders","Headers","append","localStorage","getItem","raw","JSON","stringify","requestOptions","method","headers","body","redirect","paddingStyles","FixedContainer","ScrollContainer","children","CheckboxContainer","CustomCheckbox","otherprops","OrderContext","createContext","step","cart","selectedProduct","setOrder","addUser","addProduct","addProductDiscount","addLensesParameters","deleteProduct","addLenses","addLensesDiscount","resetOrder","changeStep","selectProduct","createCombinedProducts","incrementQuantity","decrementQuantity","OrderProvider","token","AuthContext","LoadingModalContext","closeModal","getMessage","setShowModal","setStep","setCart","setSelectedProduct","addCombinedProducts","combinedProductsArr","combinedProducts","newStepString","item","product","isPseudo","discount","lens","lensesQuant","contactLenses","messageSK","Provider","productObj","prevValue","newCart","index","Object","keys","percent","lensesObj","productIdx","handleSelectProduct","filter","setTimeout","Math","floor","random","initProductObj","description","price","brand","soldAmount","available","eanCode","image","eshop","link","category","initGlassesObj","colorCode","specs","frameColor","frameMaterial","frameStyle","lensColor","sex","size","initContactLensesObj","allowedCurves","allowedDiameters","dioptersRange","initLensesObj","cylinderRange","productCategories","premisesTabs","categoryTabs","formatPrice","includes","split","formatfloatNumber","number","formatAvailable","activePremisesTab","undefined","reduce","acc","currValue","dia","diaConvert","text","convertText","i","indexOf","charAt","formatLink","replaceAll","toLowerCase","trim","CustomTextarea","fetchUser","patchUser","postUser","postAdmin","password","initUserObj","boughtProducts","finishedRegistration","icdph","cylinder","cylinderAxes","diopters","distance","addition","prism","tempUser","totalSpent","watchList","confirmPassword","now","UserContext","activeIndex","handleChangeFilterItem","filterItems","totalCount","users","getUser","updateUser","resetUser","formToShow","switchFormButtons","toggleUserForm","createUser","getFilteredUsers","getUserByQuery","UserProvider","setUser","setUsers","setIsUpdating","setActiveIndex","setFormToShow","refetchUser","filters","query","itemIndex","InputRow","ProductInputRow","ExaminationProvider","examsToAdd","examToUpdate","examId","TitleCol","Col","OsContainer","ParametersTable","disabledInputs","checkParameters","toFixed","disabled"],"mappings":"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","file":"static/js/1.00a9e081.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\n\nexport const Profile = styled.div`\n    padding: 2rem;\n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    margin-right: 2rem;\n\n`\n\nexport const GridContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: start;\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n    }\n`\n\nexport const ZeroMargin = styled.div`\n    input {\n        margin-bottom: 0 !important;\n    }\n`\n\nexport const GridRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n`\n\n\nexport const ThreeColRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-items: center;\n\n    input {\n        margin-bottom: 0 !important;\n    }\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr 1fr;\n        grid-template-areas:\n            \"a a\"\n            \"b c\";\n\n        div:nth-child(1){\n            grid-area: a;\n            margin-bottom: 0;\n        }\n        div:nth-child(2){\n            grid-area: b;\n            margin-bottom: 2rem;\n\n        }\n        div:nth-child(3){\n            grid-area: c;\n            margin-bottom: 2rem;\n        }\n    }\n`\n\nexport const Row = styled.div`\n    width: 75%;\n`\n\n\nexport const Title = styled.h2`\n    margin-bottom: 2rem;\n`\n\nexport const Container = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const OrderHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n`\n\nexport const OrderButton = styled(CustomButton)`\n    margin-top: .2rem;\n    font-size: 1.2rem;\n`\n\nexport const AdminPanelContainer = styled.div`\n    margin-bottom: 3rem;\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: var(--input-background-color);\n    color: var(--input-color);\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const OrderContainer = styled.div`\n    width: 100%;\n    /* display: grid;\n    grid-template-columns: 1fr 25rem; */\n\n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    padding: 2rem;\n\n    &:not(:last-child) {\n        margin-bottom: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n\n    }\n`\n\nexport const OrderContent = styled.div`\n    display: flex;\n    justify-content: space-between;\n    /* align-items: center; */\n    margin-bottom: 2rem;\n    h2 {\n        font-size: 1.6rem;\n    }\n`\n\nexport const Options = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    align-items: flex-end;\n    /* align-self: end;\n    justify-self: end; */\n`\n\nexport const UpdateButton = styled(CustomButton)`\n    font-size: 1.2rem;\n    /* margin-left: auto; */\n    display:block;\n\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1.2rem;\n    /* background-color: rgb(235, 172, 1); */\n    background-color: #DD4C4C;\n    /* margin-bottom: 1rem; */\n    margin-left: 1rem;\n    display:block;\n\n`\n\nexport const OrderId = styled.p`\n    opacity: .83;\n    /* font-size: 1.2rem; */\n    /* color: gray; */\n    /* margin-bottom: 2rem; */\n`","import React from 'react'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport {\n    DeleteButton,\n    Options,\n    OrderContainer,\n    OrderContent,\n    UpdateButton,\n    OrderId\n} from './profile-order-overview.styles'\n\nconst ProfileOrderOverview = ({ id, handleUpdateClick }) => {\n    const orderData = useFetchById('api/admin/orders', id, !id)\n\n    console.log(orderData)\n\n    if (orderData.isLoading) return <OrderContainer>\n        <h3>Načítavam</h3>\n    </OrderContainer>\n\n    const { order } = orderData.response\n\n    const dateData = new Date(order?.date)\n\n    return (\n        <OrderContainer>\n            {orderData.response?.error === 'invalid-branch' ? <OrderContent>\n                <h2>Táto objednávka patri inej prevadzke</h2>\n            </OrderContent> : <OrderContent>\n                    <div>\n                        <h2>ID Objednávky</h2>\n                        <OrderId>{order?.customId}</OrderId>\n                    </div>\n                    <div>\n                        <p>{dateData.toLocaleDateString(\"sk-SK\", { weekday: 'long', month: 'long', day: 'numeric', year: \"numeric\" })}</p>\n                    </div>\n                </OrderContent>}\n\n            {!orderData.response?.error && <Options>\n                <UpdateButton onClick={handleUpdateClick}>\n                    Zobraziť\n                </UpdateButton>\n                <DeleteButton>\n                    Vymazať\n                </DeleteButton>\n            </Options>}\n\n        </OrderContainer>\n    )\n}\n\nexport default ProfileOrderOverview\n","import styled from 'styled-components'\n\nexport const ExaminationUserContainer = styled.div`\n    font-size: 1.4rem;\n\n    span {\n        font-weight: bolder\n    }\n`","import React from 'react'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport {\n    ExaminationUserContainer\n} from './examination-user.styles'\n\nconst ExaminationUser = ({ userId }) => {\n    const { isLoading, response } = useFetchById(\"api/admin/users\", userId)\n\n    return (\n        <ExaminationUserContainer>\n            <p>Vystavoval:</p> <span>{isLoading ? \"Hľadám...\" : response?.user?.name}</span>\n        </ExaminationUserContainer>\n    )\n}\n\nexport default ExaminationUser\n","\nexport const checkParameter = (parametersArr, idx) => {\n    if (parametersArr) {\n        if (parametersArr.length === 0) {\n            return \"\"\n        }\n        if (parametersArr[idx] === 1001) {\n            return \"\"\n        }\n        return parametersArr[idx]\n    } else {\n        return \"\"\n    }\n}\n\nexport const checkParameterValue = (value) => {\n    if (value) {\n        if (value === 0) {\n            return \"\"\n        }\n        if (value === 1001) {\n            return \"\"\n        }\n        return value\n    } else {\n        return \"\"\n    }\n}\n\n// check if valid number othervise return 1001\nexport const formatParameter = parameter => {\n    if (parameter) {\n        const changeNumber = parameter.toString().replace(',', '.')\n        return isNaN(changeNumber) ? 1001 : Number(changeNumber)\n    }\n}","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 65rem;\n    max-height: 60rem;\n    color: var(--primary-text-color);\n\n    overflow-y: scroll;\n\n    /* display: flex;\n    flex-direction: column;\n    align-items: center; */\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: var(--background-primary-color);\n\n    position: relative;\n    z-index: 999999;\n\n    h3{ \n        margin-bottom: 2rem;\n    }\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const TableContainer = styled.div`\n    display: grid;\n    grid-template-columns: 3rem repeat(10, 1fr);\n`\n\nexport const HeadTableCol = styled.div`\n    display: grid;\n    grid-template-rows: repeat(4, 5rem);\n    div {\n        align-self: center;\n        display:flex;\n        justify-content: space-between;\n    }\n`\n\nexport const TableCol = styled.div`\n    display: grid;\n    grid-template-rows: repeat(4, 5rem);\n    div {\n        text-align:center;\n        align-self: center;\n        margin-left: .5rem;\n        font-size: 1.2rem;\n    }\n`\nexport const TableBlock = styled.div`\n    input {\n        display:block;\n        width: 100%;\n        border: none;\n        padding: 1rem .5rem;\n        text-align: center;\n        font-family: inherit;\n        font-size: inherit;\n        background-color: var(--input-background-color);\n        color: var(--input-color);\n        border-radius: .5rem;\n        outline: none;\n\n        &:focus {\n            outline: none;\n        }\n\n        &:disabled {\n            opacity: .83;\n        }\n    }\n\n`\n\nexport const TwoCols = styled.div`\n    margin-top: 2rem;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n`\n\nexport const SubmitButton = styled(CustomButton)`\n    background-color: var(--primary-color);\n    font-weight: bolder;\n    display: block;\n    margin: 2rem auto 0;\n`","import React, { useState, useContext, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { ExaminationContext } from '../../context/examination/examination.context'\nimport { useFetchById } from '../../hooks/useFetch'\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    checkParameter,\n    formatParameter,\n} from '../../utils/parameters.utils'\n\nimport {\n    CloseButton,\n    Modal,\n    ModalContainer,\n    TableContainer,\n    HeadTableCol,\n    TableCol,\n    TableBlock,\n    TwoCols,\n    SubmitButton\n} from './modal-optometrist-examination.styles'\n\nconst OptometristExaminationModal = ({ close, refetch, userId, examinationToUpdate }) => {\n    const examinationData = useFetchById('api/admin/exams', examinationToUpdate, !examinationToUpdate)\n\n    const { createExamination, updateExamination } = useContext(ExaminationContext)\n    const [examinationObj, setExaminationObj] = useState({})\n    const [parameters, setParameters] = useState({})\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = parameters[name] || [1001, 1001, 1001, 1001]\n        arr[idx] = value === '' ? 1001 : value\n\n        setParameters({\n            ...parameters,\n            [name]: arr\n        })\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete examinationObj[name]\n            setExaminationObj({\n                ...examinationObj,\n            })\n            return\n        }\n\n        setExaminationObj({\n            ...examinationObj,\n            [name]: value\n        })\n    }\n\n    const formatParameters = (e, newParameters) => {\n        if (newParameters) {\n            const { name } = e.target\n            setParameters({\n                ...parameters,\n                [name]: newParameters.map(value => formatParameter(value))\n            })\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        let examObj = {\n            ...examinationObj,\n            doneTo: userId,\n            parameters: {\n                ...parameters\n            }\n        }\n\n        console.log(\"EXAMINATION OBJECT BEFORE SEND\")\n        console.log(examObj)\n\n        if (examinationToUpdate) {\n            console.log(\"UPDATE EXAMINATION\")\n            delete examObj[\"doneTo\"]\n            delete examObj[\"doneBy\"]\n            delete examObj[\"date\"]\n            delete examObj[\"_id\"]\n            delete examObj[\"__v\"]\n\n            console.log(examObj)\n            updateExamination(examObj, examinationToUpdate)\n\n        } else {\n            console.log(\"CREATE EXAMINATION\")\n\n            createExamination(examObj)\n        }\n        refetch()\n        close()\n    }\n\n    console.log(examinationData)\n\n    useEffect(() => {\n        if (!examinationData.isLoading) {\n            if (examinationData.response) {\n                setParameters(examinationData.response?.exam?.parameters)\n                setExaminationObj(examinationData.response?.exam)\n            }\n        }\n    }, [examinationToUpdate, examinationData.isLoading])\n\n    useEffect(() => {\n        return () => {\n            setExaminationObj({})\n            setParameters({})\n        }\n    }, [])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Nová prehliadka</h3>\n\n                <TableContainer>\n                    <HeadTableCol>\n                        <TableBlock>\n                            <p>-</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>PO</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>ĽO</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>PO</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>ĽO</p>\n                        </TableBlock>\n                    </HeadTableCol>\n                    {/* sph */}\n                    <TableCol>\n                        <TableBlock>\n                            sph\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='sph'\n                                    type='text'\n                                    value={checkParameter(parameters?.sph, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.sph)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* cyl */}\n                    <TableCol>\n                        <TableBlock>\n                            cyl\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='cyl'\n                                    type='text'\n                                    value={checkParameter(parameters?.cyl, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.cyl)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* ax */}\n                    <TableCol>\n                        <TableBlock>\n                            ax\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='ax'\n                                    type='text'\n                                    value={checkParameter(parameters?.ax, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.ax)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* vizus D */}\n                    <TableCol>\n                        <TableBlock>\n                            vizus D\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='vizusD'\n                                    type='text'\n                                    value={checkParameter(parameters?.vizusD, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.vizusD)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* vizus Bino */}\n                    <TableCol>\n                        <TableBlock>\n                            vizus Bino\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='vizusBino'\n                                    type='text'\n                                    value={checkParameter(parameters?.vizusBino, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.vizusBino)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* vizus B */}\n                    <TableCol>\n                        <TableBlock>\n                            vizus B\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='vizusB'\n                                    type='text'\n                                    value={checkParameter(parameters?.vizusB, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.vizusB)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* prizma */}\n                    <TableCol>\n                        <TableBlock>\n                            prizma\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='prizma'\n                                    type='text'\n                                    value={checkParameter(parameters?.prizma, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.prizma)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* basis */}\n                    <TableCol>\n                        <TableBlock>\n                            basis\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='basis'\n                                    type='text'\n                                    value={checkParameter(parameters?.basis, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.basis)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* PD */}\n                    <TableCol>\n                        <TableBlock>\n                            PD\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='pd'\n                                    type='text'\n                                    value={checkParameter(parameters?.pd, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.pd)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* ADD */}\n                    <TableCol>\n                        <TableBlock>\n                            ADD\n                        </TableBlock>\n                        {[...Array(2)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='add'\n                                    type='text'\n                                    value={checkParameter(parameters?.add, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.add)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n                </TableContainer>\n\n\n                <TwoCols>\n                    <div>\n                        <CustomInput\n                            label=\"Typ\"\n                            name='type'\n                            value={examinationObj?.type || \"\"}\n                            handleChange={handleChange}\n                        />\n                        <CustomInput\n                            label=\"Bc\"\n                            name='bc'\n                            value={examinationObj?.bc || \"\"}\n                            handleChange={handleChange}\n                        />\n                    </div>\n                    <div>\n                        <CustomInput\n                            label=\"dptr PO\"\n                            name='dptrPO'\n                            value={examinationObj?.dptrPO || \"\"}\n                            handleChange={handleChange}\n                        />\n                        <CustomInput\n                            label=\"dptr ĽO\"\n                            name='dptrLO'\n                            value={examinationObj?.dptrLO || \"\"}\n                            handleChange={handleChange}\n                        />\n                    </div>\n                </TwoCols>\n                <div>\n                    <CustomTextarea\n                        label='Poznámka'\n                        name='note'\n                        value={examinationObj?.note || \"\"}\n                        handleChange={handleChange}\n                        rows='5'\n                    />\n                    <CustomInput\n                        label=\"Doporučenie\"\n                        name='recommendation'\n                        value={examinationObj?.recommendation || \"\"}\n                        handleChange={handleChange}\n                    />\n                </div>\n\n\n                <SubmitButton onClick={handleSubmit}>{examinationToUpdate ? \"Uložiť\" : \"Odoslať prehliadku\"}</SubmitButton>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default OptometristExaminationModal\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ExaminationsOverviewContainer = styled.div`\n\n`\n\nexport const Header = styled.div`\n    margin-top: 2rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    h2 {\n        margin: 2rem 0;\n    }\n`\n\nexport const ExaminationContainer = styled.div`\n    border-radius: .5rem;\n    padding: 2rem;\n    /* box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08); */\n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n\n    margin-bottom: 2rem;\n`\n\nexport const ExamHead = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport const ExamTableContainer = styled.div`\n    display: grid;\n    grid-template-columns: 3rem repeat(10, 1fr);\n    font-size: 1.2rem;  \n`\n\nexport const HeadTableCol = styled.div`\n    display: grid;\n    grid-template-rows: repeat(5, 5rem);\n    div {\n        align-self: center;\n        display:flex;\n        justify-content: space-between;\n    }\n`\n\nexport const TableCol = styled.div`\n    display: grid;\n    grid-template-rows: repeat(5, 5rem);\n\n    div {\n        text-align:center;\n        align-self: center;\n        margin-left: .5rem;\n\n        &:not(:first-child) {\n            background-color: var(--input-background-color);\n            padding: .5rem;\n            border-radius: .5rem;\n            min-height: 2.5rem;\n        }\n    }\n`\nexport const ExaminationOptions = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport const AddButton = styled(CustomButton)`\n    font-size: 1.2rem;\n`\n\nexport const UpdateButton = styled(CustomButton)`\n    font-size: 1.2rem;\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1.2rem;\n    background-color: var(--color-red);\n    margin-left: 1rem;\n\n`","import React, { useState, useEffect, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useFetchById } from '../../hooks/useFetch'\nimport { ExaminationContext } from '../../context/examination/examination.context'\n\nimport ExaminationUser from '../examination-user/examination-user.component'\nimport OptometristExaminationModal from '../modal-optometrist-examination/modal-optometrist-examination.component'\n\nimport {\n    checkParameterValue\n} from '../../utils/parameters.utils'\n\nimport {\n    ExaminationsOverviewContainer,\n    Header,\n    ExaminationContainer,\n    ExamHead,\n    ExamTableContainer,\n    HeadTableCol,\n    TableCol,\n    ExaminationOptions,\n    AddButton,\n    UpdateButton,\n    DeleteButton\n} from './examinations-overview.styles'\n\nconst ExaminationsOverview = () => {\n    const params = useParams()\n    const examinationData = useFetchById(\"api/admin/exams/user\", params.id)\n    const { deleteExamination } = useContext(ExaminationContext)\n    const [showOptometristModal, setShowOptometristModal] = useState(false)\n    const [examinations, setExaminations] = useState([])\n    const [examinationToUpdate, setExaminationToUpdate] = useState(null)\n\n    const handleUpdateClick = (e, id) => {\n        e.preventDefault()\n        setExaminationToUpdate(id)\n        setShowOptometristModal(true)\n    }\n\n    const handleDelete = (e, id) => {\n        e.preventDefault()\n        deleteExamination(id)\n        examinationData.refetch()\n    }\n\n    const handleCloseModal = () => {\n        setShowOptometristModal(false)\n        setExaminationToUpdate(null)\n    }\n\n    useEffect(() => {\n        if (!examinationData.isLoading) {\n            if (examinationData.response) {\n                setExaminations(examinationData.response.exams)\n            }\n        }\n    }, [examinationData.isLoading])\n\n    return (\n        <ExaminationsOverviewContainer>\n            {showOptometristModal && <OptometristExaminationModal\n                userId={params.id}\n                examinationToUpdate={examinationToUpdate}\n                refetch={examinationData.refetch}\n                close={handleCloseModal}\n            />}\n            <Header>\n                <h2>Vyšetrenia</h2>\n                <div>\n                    <AddButton type='button' onClick={() => setShowOptometristModal(true)}>Pridať prehliadku</AddButton>\n                </div>\n            </Header>\n\n\n            <div>\n                {examinations && examinations.map((examination, idx) => (\n                    <ExaminationContainer key={idx}>\n                        <ExamHead>\n                            <h3>Dátum</h3>\n                            <p>{new Date(examination?.date).toLocaleDateString(\"sk-SK\", { weekday: 'long', month: 'long', day: 'numeric' })}</p>\n                        </ExamHead>\n                        <ExamTableContainer>\n                            <HeadTableCol>\n                                <div>-</div>\n                                <div>PO</div>\n                                <div>ĽO</div>\n                                <div>PO</div>\n                                <div>ĽO</div>\n                            </HeadTableCol>\n                            <TableCol>\n                                <div>sph</div>\n                                {examination?.parameters?.sph.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>cyl</div>\n                                {examination?.parameters?.cyl.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>ax</div>\n                                {examination?.parameters?.ax.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus D</div>\n                                {examination?.parameters?.vizusD.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus bino</div>\n                                {examination?.parameters?.vizusBino.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus B</div>\n                                {examination?.parameters?.vizusB.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>prizma</div>\n                                {examination?.parameters?.prizma.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>basis</div>\n                                {examination?.parameters?.basis.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>PD</div>\n                                {examination?.parameters?.pd.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>ADD</div>\n                                {examination?.parameters?.add.map((value, idx) => {\n                                    if (idx > 1) return\n                                    return (\n                                        <div key={idx}>\n                                            {checkParameterValue(value)}\n                                        </div>\n                                    )\n                                })}\n                            </TableCol>\n                        </ExamTableContainer>\n                        <ExaminationOptions>\n                            <ExaminationUser userId={examination.doneBy} />\n                            <div>\n                                <UpdateButton onClick={e => handleUpdateClick(e, examination._id)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={e => handleDelete(e, examination._id)}>Vymazať</DeleteButton>\n                            </div>\n                        </ExaminationOptions>\n                    </ExaminationContainer>\n                ))}\n            </div>\n        </ExaminationsOverviewContainer>\n    )\n}\n\nexport default ExaminationsOverview\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ProfileOrderOverview from '../profile-order-overview/profile-order-overview.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\nimport ExaminationsOverview from '../examinations-overview/examinations-overview.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Profile,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    Title,\n    Container,\n    OrderHeader,\n    OrderButton,\n    CustomSelect,\n    AdminPanelContainer\n} from './user.form-styles'\n\nconst UserForm = ({\n    isAdmin,\n    isUpdating,\n    user,\n    handleChange,\n    handleParameterChange,\n    handleCompanyChange,\n    isOptometrist,\n    isOrder = false\n}) => {\n    const { push } = useHistory()\n\n    const handleAddOrderButtonClick = e => {\n        e.preventDefault()\n        push(`/dashboard/objednavky/${user._id}`)\n    }\n\n    console.log(user)\n\n\n    return (\n        <GridContainer>\n            <Profile>\n                {isAdmin && <AdminPanelContainer>\n                    <h2>Admin panel</h2>\n                    <InputRow\n                        label=\"Predajňa na ktorej uživatel pracuje\"\n                        example=''\n                    >\n                        <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Nezadané</option>\n                            {\n                                retailNames.map((name, idx) => {\n                                    if (idx === 4) return\n                                    return (\n                                        <option key={idx} value={idx + 1}>{name}</option>\n                                    )\n                                })\n                            }\n                        </CustomSelect>\n                    </InputRow>\n                    <InputRow\n                        label=\"Výška administrativných práv\"\n                        example=\"\"\n                    >\n                        <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Zákaznik</option>\n                            <option value={1}>Predavač</option>\n                            <option value={2}>Vedúci</option>\n                        </CustomSelect>\n                    </InputRow>\n\n                    <Container>\n                        <CustomCheckbox\n                            label='Optometrista'\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"optometrist\",\n                                    value: !user.optometrist\n                                }\n                            })}\n                            isActive={user.optometrist}\n                        />\n                    </Container>\n                </AdminPanelContainer>}\n                <div>\n                    <h2>Informácie</h2>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                // label=\"Priezvisko*\"\n                                type='date'\n                                name='birthDate'\n                                value={user.birthDate}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </div>\n\n                <Container>\n                    <h2>Kontaktné údaje</h2>\n                    <Row>\n                        <div>\n                            <CustomInput\n                                label=\"E-mail*\"\n                                type='email'\n                                name='email'\n                                value={user.email ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Telefónne číslo\"\n                                type='text'\n                                name='phone'\n                                value={user.phone ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <h2>Fakturačné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.address ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.psc ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.city ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.country ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n                <Container>\n                    <h2>Firemné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"IČO\"\n                                type='text'\n                                name='ico'\n                                value={user.company.ico ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"DIČ\"\n                                type='text'\n                                name='dic'\n                                value={user.company.dic ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.company.address ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.company.psc ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.company.city ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.company.country ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n\n                <Container>\n                    <h2>Parametre</h2>\n\n                    <ParametersTable\n                        parameters={user.lenses}\n                        handleChange={handleParameterChange}\n                    />\n                </Container>\n\n\n            </Profile>\n\n            {!isOrder && isUpdating && <div>\n                <OrderHeader>\n                    <Title>\n                        Objednávky\n                    </Title>\n                    <OrderButton onClick={e => handleAddOrderButtonClick(e)}>Pridať objednávku</OrderButton>\n                </OrderHeader>\n                <div>\n                    {user.orders.length > 0 ? user.orders.map((order, idx) => (\n                        <ProfileOrderOverview\n                            key={idx}\n                            id={order}\n                            handleUpdateClick={() => push(`/dashboard/objednavky/${user._id}/${order}`)}\n                        />\n                    )).reverse().slice(0, 5) : (\n                            <p>Žiadné objednávky</p>\n                        )}\n                </div>\n                {isOptometrist && <ExaminationsOverview />}\n            </div>}\n        </GridContainer>\n    )\n}\n\nexport default UserForm\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: var(--input-color);\n`\nexport const InputGroup = styled.div`\n    position: relative;\n\n    /* margin: 45px 0; */\n\n    .form-input {\n        /* background: none; */\n        background-color: var(--input-background-color);\n        color: var(--input-color);\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: var(--input-color);\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput","import { useEffect, useState } from 'react'\n\nexport const useFetch = (path, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [message, setMessage] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`)\n                const data = await res.json()\n\n                setMessage(data.message)\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n                setMessage(\"Niečo sa pokazilo\")\n            }\n        }\n        fetchData()\n    }, [refetchIndex])\n\n    return { response, isLoading, error, message, refetch }\n}\n\nexport const useFetchByQuery = (path, queryObj, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify(queryObj)\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path])\n\n    return { response, isLoading, error, refetch }\n}\n\nexport const useFetchById = (path, id, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}/${id}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path, id])\n\n    return { response, isLoading, error, refetch }\n}\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n    color: var(--primary-text-color);\n\n\n\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const FixedContainer = styled.div`\n    /* max-width: 115rem; */\n`","import React from 'react'\nimport { Container, FixedContainer } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            <FixedContainer>\n                {children}\n            </FixedContainer>\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import styled from 'styled-components'\n\nexport const CheckboxContainer = styled.div`\n    display: inline-block;\n    cursor: pointer;\n    font-size: 1.5rem;\n    font-weight: 700;\n    /* margin-right: 2rem; */\n    background-color: ${({ isActive }) => isActive ? \"var(--primary-color)\" : \"var(--body-background-primary-color)\"};\n    color: ${({ isActive }) => isActive ? \"var(--button-font-color)\" : \"var(--secondary-text-color)\"};\n    /* font-weight: ${({ isActive }) => isActive ? \"border\" : \"normal\"}; */\n    padding: .8rem 3rem;\n    border-radius: .2rem;\n    transition: all .2s ease-out;\n\n    @media all and (max-width: 500px) {\n        padding: 0.5rem 1.5rem;\n        font-size: 1.4rem;\n    }\n`","import React from 'react'\n\nimport { CheckboxContainer } from './custom-checkbox.styles'\n\nconst CustomCheckbox = ({ label, isActive, handleClick, ...otherprops }) => {\n    return (\n        <CheckboxContainer isActive={isActive} onClick={handleClick} {...otherprops}>\n            {label}\n        </CheckboxContainer>\n    )\n}\n\nexport default CustomCheckbox\n","import React, { createContext, useState, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\n\nexport const OrderContext = createContext({\n    step: \"\",\n    order: {},\n    cart: [],\n    selectedProduct: null,\n    setOrder: () => { },\n    addUser: () => { },\n    addProduct: () => { },\n    addProductDiscount: () => { },\n    addLensesParameters: () => { },\n    deleteProduct: () => { },\n    addLenses: () => { },\n    addLensesDiscount: () => { },\n    resetOrder: () => { },\n    changeStep: () => { },\n    selectProduct: () => { },\n    createCombinedProducts: () => { },\n    incrementQuantity: () => { },\n    decrementQuantity: () => { },\n})\n\nconst OrderProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n    const { closeModal, getMessage, setIsLoading, setShowModal } = useContext(LoadingModalContext)\n    const [step, setStep] = useState('select-user')\n    const [order, setOrder] = useState({})\n    const [cart, setCart] = useState([])\n    const [selectedProduct, setSelectedProduct] = useState(null)\n\n    const addUser = (user) => {\n        setOrder({\n            ...order,\n            user: user\n        })\n    }\n\n    const addCombinedProducts = (combinedProductsArr) => {\n\n        console.log(\"combinedProductsArr\")\n        console.log(combinedProductsArr)\n        console.log(\"combinedProductsArr\")\n        setOrder({\n            ...order,\n            combinedProducts: [\n                // ...(order?.combinedProducts) && { ...order?.combinedProducts },\n                ...combinedProductsArr\n            ]\n        })\n    }\n\n    const selectProduct = productIdx => {\n        if (selectedProduct === productIdx) {\n            setSelectedProduct(null)\n        } else {\n            setSelectedProduct(productIdx)\n        }\n    }\n\n    const addProduct = (productObj) => {\n        setCart(prevValue => [\n            ...prevValue,\n            { product: productObj, }\n        ])\n    }\n\n    const addProductDiscount = (idx, value) => {\n        if (value === \"\") {\n            const newCart = cart.map((item, index) => {\n                if (idx === index) {\n                    if (Object.keys(item.discount).length > 1) {\n                        delete item.discount[\"product\"]\n                        return item\n                    } else {\n                        delete item[\"discount\"]\n                        return item\n                    }\n                } else {\n                    return item\n                }\n            })\n            setCart(newCart)\n        } else {\n            const newCart = cart.map((item, index) => {\n                if (idx === index) {\n                    return {\n                        ...item,\n                        discount: {\n                            product: {\n                                percent: value\n                            }\n                        }\n                    }\n                } else {\n                    return item\n                }\n            })\n            setCart(newCart)\n        }\n    }\n\n    const addLensesParameters = (idx, lensesObj) => {\n        const newCart = cart.map((item, index) => {\n            if (idx === index) {\n                if (Object.keys(lensesObj).length > 0) {\n                    return {\n                        ...item,\n                        lenses: {\n                            ...lensesObj\n                        }\n                    }\n                } else {\n                    return item\n                }\n            } else {\n                return item\n            }\n        })\n        setCart(newCart)\n    }\n\n    const deleteProduct = (productIdx, handleSelectProduct) => {\n        const newCart = cart.filter((item, idx) => idx !== productIdx)\n        setCart(newCart)\n        setTimeout(() => {\n            handleSelectProduct(null)\n\n        }, 100)\n    }\n\n    const addLenses = (lensesObj) => {\n        if (lensesObj === null && selectedProduct === null) return\n        if (selectedProduct !== null) {\n            const newCart = cart.map((item, idx) => {\n                if (idx === selectedProduct) {\n                    return ({\n                        ...item,\n                        lens: lensesObj,\n                        lensesQuant: 1\n                    })\n                } else {\n                    return item\n                }\n            })\n            setCart(newCart)\n        } else {\n            setCart(prevValue => [\n                ...prevValue,\n                {\n                    product: {\n                        _id: Math.floor(Math.random() * 10),\n                        isPseudo: true\n                    },\n                    lens: lensesObj,\n                    lensesQuant: 1\n                }\n            ])\n        }\n\n        setSelectedProduct(null)\n    }\n\n    const incrementQuantity = (prevValue, idx) => {\n        const newCart = cart.map((item, index) => {\n            if (idx === index) {\n                return ({\n                    ...item,\n                    lensesQuant: prevValue + 1\n                })\n            } else {\n                return item\n            }\n        })\n        setCart(newCart)\n    }\n\n\n    const decrementQuantity = (prevValue, idx) => {\n        if (prevValue === 1) return\n        const newCart = cart.map((item, index) => {\n            if (idx === index) {\n                return ({\n                    ...item,\n                    lensesQuant: prevValue - 1\n                })\n            } else {\n                return item\n            }\n        })\n        setCart(newCart)\n    }\n\n\n    const addLensesDiscount = (idx, value) => {\n        if (value === \"\") {\n            const newCart = cart.map((item, index) => {\n                if (idx === index) {\n                    if (Object.keys(item.discount).length > 1) {\n                        delete item.discount[\"lenses\"]\n                        return item\n                    } else {\n                        delete item[\"discount\"]\n                        return item\n                    }\n                } else {\n                    return item\n                }\n            })\n            setCart(newCart)\n        } else {\n            const newCart = cart.map((item, index) => {\n                if (idx === index) {\n                    return {\n                        ...item,\n                        discount: {\n                            ...item.discount,\n                            lenses: {\n                                percent: value\n                            }\n                        }\n                    }\n                } else {\n                    return item\n                }\n            })\n            setCart(newCart)\n        }\n    }\n\n    const resetOrder = () => {\n        setOrder({})\n    }\n\n    const changeStep = (newStepString) => {\n        setStep(newStepString)\n    }\n\n    const createCombinedProducts = async () => {\n        if (cart.length === 0) return\n        setIsLoading(true)\n        setShowModal(true)\n        console.log(\"ORIGINAL CART\")\n        console.log(cart)\n\n        const combinedProductsArr = cart.map(item => ({\n            product: item.product.isPseudo ? \"pseudo\" : item.product._id,\n            ...(item.discount) && { discount: { ...item.discount } },\n            ...(item.lens) && { lens: item.lens._id },\n            ...(item.lensesQuant) && { lensesQuant: item.lensesQuant },\n            // ...(item.lens && order.user) && { lenses: order.user.lenses },\n            ...(item.lenses) && { contactLenses: item.lenses }\n        }))\n\n        console.log(\"FORMATED CART\")\n        console.log(combinedProductsArr)\n\n        const myHeaders = new Headers();\n        myHeaders.append(\"auth-token\", token);\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n        const raw = JSON.stringify({\n            combinedProducts: combinedProductsArr\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            // /api/store/combinedProducts/createMany\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/combinedProducts/createMany`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.combinedProducts) {\n                addCombinedProducts(data.combinedProducts)\n                closeModal()\n                changeStep(\"summary\")\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.messageSK)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <OrderContext.Provider\n            value={{\n                step,\n                order,\n                cart,\n                selectedProduct,\n                setOrder,\n                addUser,\n                addProduct,\n                addProductDiscount,\n                addLensesParameters,\n                deleteProduct,\n                addLenses,\n                addLensesDiscount,\n                resetOrder,\n                changeStep,\n                selectProduct,\n                createCombinedProducts,\n                incrementQuantity,\n                decrementQuantity,\n            }}\n        >\n            {children}\n        </OrderContext.Provider>\n    )\n}\n\nexport default OrderProvider","export const initProductObj = {\n    name: \"\",\n    description: \"\",\n    price: 0,\n    type: 0,\n    brand: \"\",\n    soldAmount: 0,\n    available: [0, 1001, 1001, 1001, 1001],\n    eanCode: \"\",\n    image: \"\",\n    eshop: true,\n    link: '',\n    category: ''\n}\n\nexport const initGlassesObj = {\n    colorCode: \"\",\n    specs: {\n        frameColor: \"\",\n        frameMaterial: \"\",\n        frameStyle: \"\",\n        lensColor: \"\",\n        sex: \"M\",\n        size: [1001, 1001, 1001, 1001],\n    }\n}\n\nexport const initContactLensesObj = {\n    allowedCurves: [1001],\n    allowedDiameters: [1001],\n    dioptersRange: [1001, 1001]\n}\n\nexport const initLensesObj = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    dioptersRange: [1001, 1001],\n    cylinderRange: [1001, 1001],\n    price: 0,\n    brand: \"\",\n    image: ''\n}\n\nexport const retailNames = [\n    \"Obchodná 57, Bratislava\",\n    \"Miletičova 38, Bratislava\",\n    \"Vajnory, Bratislava\",\n    \"Senica, OC Branč\",\n    \"Trnava, City Aréna\"\n]\n\n// Category variables\nexport const productCategories = [\n    {\n        name: \"Dioptrické\",\n        value: 1\n    },\n    {\n        name: \"Slnečné\",\n        value: 2\n    },\n    {\n        name: \"Kontaktné Šošovky\",\n        value: 3\n    },\n    {\n        name: \"Športové\",\n        value: 4\n    },\n    {\n        name: \"Doplnky\",\n        value: 5\n    },\n    {\n        name: \"Šošovky\",\n        value: 0\n    },\n]\n\nexport const premisesTabs = [\n    {\n        id: 0,\n        name: \"Všetko\",\n        premises: 0,\n\n    },\n    {\n        id: 1,\n        name: \"Obchodná 57, Bratislava\",\n        premises: 1,\n    },\n    {\n        id: 2,\n        name: \"Miletičova 38, Bratislava\",\n        premises: 2,\n    },\n    {\n        id: 3,\n        name: \"Vajnory, Bratislava\",\n        premises: 3,\n    },\n    {\n        id: 4,\n        name: \"Senica, OC Branč\",\n        premises: 4,\n    },\n\n    // {\n    //     id: 5,\n    //     name: \"Trnava, City Aréna\",\n    //     permission: 5,\n    // },\n]\n\nexport const categoryTabs = [\n    {\n        id: 0,\n        name: \"Okuliare\",\n    },\n    {\n        id: 1,\n        name: \"Šosovky\",\n    },\n]\n\nexport const lensesBrands = [\n    \"Acuvue\",\n    \"Adore\",\n    \"Air Optix\",\n    \"Biofinity\",\n    \"Biomedics\",\n    \"Clariti\",\n    \"ColourVue\",\n    \"Comfilcon A\",\n    \"Dailies\",\n    \"Freshlook\",\n    \"Lenjoy\",\n    \"Proclear\",\n    \"Purevision\",\n    \"Soflens\",\n]\n\nexport const brands = [\n    \"Adidas\",\n    \"Armani Exchange\",\n    \"Arnette\",\n    \"Blackfin\",\n    \"Blumarine\",\n    \"Burberry\",\n    \"Bvlgari\",\n    \"Calvin Klein\",\n    \"Carolina Herrera\",\n    \"Carrera\",\n    \"David Beckham\",\n    \"Dior\",\n    \"Dolce & Gabbana\",\n    \"Elle\",\n    \"Emporio Armani\",\n    \"Esprit\",\n    \"Etnia Barcelona\",\n    \"Fendi\",\n    \"Fossil\",\n    \"Furla\",\n    \"Giorgio Armani\",\n    \"Givenchy\",\n    \"Gucci\",\n    \"Guess\",\n    \"H.I.S\",\n    \"Hawkers\",\n    \"Hugo Boss\",\n    \"Jaguar\",\n    \"Jimmy Choo\",\n    \"Lacoste\",\n    \"Liu Jo\",\n    \"Marc Jacobs\",\n    \"Max Mara\",\n    \"Max&Co\",\n    \"Meller\",\n    \"Mexx\",\n    \"Michael Kors\",\n    \"Moschino\",\n    \"Oakley\",\n    \"Persol\",\n    \"Polaroid\",\n    \"Police\",\n    \"Polo Ralph Lauren\",\n    \"Prada\",\n    \"Prada Linea Rossa\",\n    \"Ralph\",\n    \"Ralph Lauren\",\n    \"Ray-Ban\",\n    \"Salvatore Ferragamo\",\n    \"Smith\",\n    \"Strellson\",\n    \"Tiffany&Co.\",\n    \"Tom Ford\",\n    \"Tommy Hilfiger\",\n    \"Versace\",\n    \"Vogue\"\n]\n\nexport const formatPrice = price => {\n    let value = 0\n    if (price.includes(',')) {\n        if (price.split(',')[1].length === 1) {\n            value = price.split(',')[0] + price.split(',')[1] + \"0\"\n            return Number(value)\n        } else {\n            value = price.split(',')[0] + price.split(',')[1]\n            return Number(value)\n        }\n    } else {\n        return Number(price * 100)\n    }\n}\n\nexport const formatfloatNumber = number => {\n    let value = 0\n    if (number.includes(',')) {\n        value = number.split(',')[0] + '.' + number.split(',')[1]\n        return Number(value)\n    } else {\n        return Number(number)\n\n    }\n}\n\nexport const formatAvailable = (available, activePremisesTab) => {\n    if (available === undefined) return \"Šosovka\"\n    console.log(activePremisesTab)\n    console.log(available)\n    if (typeof available === \"number\") {\n        return `Na sklade ${available} kusov`\n    } else {\n        if (activePremisesTab === 0) {\n            return `Vo všetkých skladoch je ${available.reduce((acc, currValue) => acc + currValue)} kusov`\n        } else {\n            return `Na sklade ${available[activePremisesTab]} kusov`\n        }\n    }\n}\n\nexport const checkParameter = (parameter, idx) => {\n    if (parameter.length === 0) {\n        return \"\"\n    }\n    if (parameter[idx] === 1001) {\n        return \"\"\n    }\n\n    return parameter[idx].toString()\n}\n\nconst dia = \"áäčďéíľĺňóôŕšťúýžÁČĎÉÍĽĹŇÓŠŤÚÝŽ\";\nconst nodia = \"aacdeillnoorstuyzACDEILLNOSTUYZ\";\n\nexport const diaConvert = (text) => {\n    let convertText = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (dia.indexOf(text.charAt(i)) != -1) {\n            convertText += nodia.charAt(dia.indexOf(text.charAt(i)));\n        }\n        else {\n            convertText += text.charAt(i);\n        }\n    }\n    return convertText;\n}\n\nexport const formatLink = (text) => {\n    return diaConvert(text).replaceAll(\" \", \"-\").toLowerCase().trim()\n}","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: var(--input-color);\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: var(--input-background-color);\n        color: var(--input-color);\n\n        font-size: 1.5rem;\n        padding: .5rem .5rem .5rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 25px 0;\n        font-family: inherit;\n        resize: none;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    .form-input-label {\n        color: var(--input-color);\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: .6rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-textarea.styles'\n\nconst CustomTextarea = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <textarea\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomTextarea","export const fetchUsers = (token) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users`, requestOptions)\n\n}\n\nexport const fetchUser = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\n}\n\nexport const patchUser = (token, user, id) => {\n    // const {\n    //     _id: id,\n    //     address,\n    //     admin,\n    //     city,\n    //     country,\n    //     email,\n    //     lenses: {\n    //         cylinder,\n    //         cylinderAxes,\n    //         diopters,\n    //         distance,\n    //         addition,\n    //         basis,\n    //         prism,\n    //     },\n    //     name,\n    //     phone,\n    //     psc,\n    //     premises\n    // } = user\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        ...user\n        // address: address || undefined,\n        // admin: admin,\n        // premises: Number(premises) === 0 ? undefined : premises,\n        // city: city || undefined,\n        // country: country || undefined,\n        // email: email || undefined,\n        // lenses: {\n        //     cylinder: cylinder,\n        //     cylinderAxes: cylinderAxes,\n        //     diopters: diopters,\n        //     distance: distance,\n        //     addition: addition,\n        //     basis: basis,\n        //     prism: prism,\n        // },\n        // name: name,\n        // phone: phone || undefined,\n        // psc: psc || undefined,\n    })\n\n    const requestOptions = {\n        method: 'PATCH',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\n}\n\nexport const postUser = (token, user) => {\n    const {\n        name,\n        email,\n    } = user\n\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        email: email,\n        name: name,\n    })\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\n}\n\nexport const postAdmin = (token, user) => {\n    console.log(user)\n\n    const {\n        name,\n        email,\n        password,\n        premises,\n        admin\n    } = user\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        admin: Number(admin),\n        email: email,\n        name: name,\n        premises: Number(premises),\n        password\n    })\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\n}","export const initUserObj = {\n    address: \"\",\n    admin: 0,\n    premises: 0,\n    boughtProducts: {},\n    city: \"\",\n    country: \"\",\n    date: \"\",\n    email: \"\",\n    finishedRegistration: false,\n    company: {\n        ico: \"\",\n        dic: \"\",\n        icdph: \"\",\n        address: '',\n        psc: '',\n        country: '',\n    },\n    lenses: {\n        cylinder: [1001, 1001, 1001, 1001],\n        cylinderAxes: [1001, 1001, 1001, 1001],\n        diopters: [1001, 1001, 1001, 1001],\n        distance: [1001, 1001, 1001, 1001],\n        addition: [1001, 1001, 1001, 1001],\n        basis: [1001, 1001, 1001, 1001],\n        prism: [1001, 1001, 1001, 1001],\n    },\n    name: \"\",\n    orders: [],\n    phone: \"\",\n    psc: \"\",\n    tempUser: false,\n    totalSpent: 0,\n    watchList: [],\n    fName: \"\",\n    lName: \"\",\n    password: '',\n    confirmPassword: \"\",\n    birthDate: Date.now(),\n    optometrist: false\n\n}","import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { OrderContext } from '../order/order.context'\n\nimport {\n    fetchUsers,\n    fetchUser,\n    patchUser,\n    postAdmin,\n    postUser,\n} from './user.queries'\n\nimport {\n    initUserObj\n} from './user.utils'\n\nexport const UserContext = createContext({\n    isUpdating: false,\n    activeIndex: 0,\n    handleChangeFilterItem: () => { },\n    filterItems: [],\n    totalCount: 0,\n    users: null,\n    user: null,\n    // getUsers: () => { },\n    getUser: () => { },\n    handleChange: () => { },\n    handleParameterChange: () => { },\n    handleCompanyChange: () => { },\n    updateUser: () => { },\n    resetUser: () => { },\n    formToShow: 0,\n    switchFormButtons: [],\n    toggleUserForm: () => { },\n    createUser: () => { },\n    getFilteredUsers: () => { },\n    getUserByQuery: () => { },\n})\n\nconst UserProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token } = useContext(AuthContext)\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    // ------------------------\n\n    const [user, setUser] = useState(initUserObj)\n    const [users, setUsers] = useState(null)\n    const [totalCount, setTotalCount] = useState(0)\n\n    // ------------------------\n\n    const [isUpdating, setIsUpdating] = useState(false)\n    const [activeIndex, setActiveIndex] = useState(0)\n    const filterItems = [\n        {\n            id: 0,\n            name: \"Zákaznici\",\n            filter: 0,\n        },\n        {\n            id: 1,\n            name: \"Zamestnanci\",\n            filter: 1,\n        },\n        {\n            id: 2,\n            name: \"Vedúci\",\n            filter: 2,\n        },\n        // {\n        //     id: 3,\n        //     name: \"Velký brat\",\n        //     filter: 3,\n        // },\n        // {\n        //     id: 4,\n        //     name: \"Odstránené\",\n        //     filter: 3\n        // }\n    ]\n\n    // ------------------------\n\n    const [formToShow, setFormToShow] = useState(0)\n    const switchFormButtons = [\n        {\n            name: \"Zákazník\"\n        },\n        {\n            name: \"Zamestnanec\"\n        }\n    ]\n\n    const toggleUserForm = (e, idx) => {\n        e.preventDefault()\n        setFormToShow(idx)\n    }\n\n    // ------------------------\n\n\n    const handleChangeFilterItem = (itemIndex) => {\n        setActiveIndex(itemIndex)\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n\n        console.log(name, value)\n        setUser({\n            ...user,\n            [name]: value\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = user.lenses[name]\n        arr[idx] = value === '' ? 1001 : value\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleCompanyChange = (e) => {\n        const { name, value } = e.target\n        setUser({\n            ...user,\n            company: {\n                ...user.company,\n                [name]: value\n            }\n        })\n    }\n\n    useEffect(() => {\n        setUser({\n            ...user,\n            name: user.fName + \" \" + user.lName\n        })\n    }, [user.fName, user.lName])\n\n    const resetUser = () => {\n        setUser(initUserObj)\n        setIsUpdating(false)\n        setFormToShow(0)\n    }\n\n    // ------------------------\n    // USER ACTIONS\n    // ------------------------\n\n    // Get all users\n    // const getUsers = async () => {\n    //     setIsLoading(true)\n    //     setShowModal(true)\n\n    //     try {\n    //         const response = await fetchUsers(token)\n    //         const data = await response.json()\n\n    //         console.log(data)\n    //         if (data.users) {\n    //             setUsers(data.users)\n    //             setTotalCount(data.count)\n    //             setIsLoading(false)\n    //             closeModal()\n\n    //         } else {\n    //             getMessage(data.message)\n    //             setIsLoading(false)\n    //         }\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n    // }\n\n    // Get single user\n    const getUser = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n        setIsUpdating(true)\n\n        try {\n            const response = await fetchUser(token, id)\n            const data = await response.json()\n\n            if (data.user) {\n                setUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n                setIsLoading(false)\n                closeModal()\n\n            } else {\n                getMessage(data.message)\n                setIsLoading(false)\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Update user\n    const updateUser = async (user, id, path, refetchUser, close, addUser) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(user)\n\n        try {\n            const response = await patchUser(token, user, id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.messageSK)\n                setIsLoading(false)\n                return\n            }\n\n\n            setIsLoading(false)\n            closeModal()\n\n            if (path === 'order') {\n                push(`/dashboard/objednavky/${id}`)\n            } else if (path === 'profile') {\n                push(`/dashboard/zakaznici/${id}`)\n            } else if (path === 'isOrder') {\n                setUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n\n                addUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n                // console.log(\"REFETCH USER\")\n                // console.log(\"REFETCH USER\")\n                // console.log(\"REFETCH USER\")\n                // refetchUser()\n                close()\n            } else {\n                push(\"/dashboard/zakaznici\")\n            }\n\n            getFilteredUsers({\n                filters: {\n                    admin: activeIndex\n                }\n            })\n            // http://localhost:1000/#/dashboard/zakaznici\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createUser = async (user, path) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            if (formToShow === 0) {\n                let data = {}\n                if (!user._id) {\n                    console.log('creating new user')\n                    const response = await postUser(token, user)\n                    data = await response.json()\n\n                    if (data.error) {\n                        getMessage(data.message)\n\n                        if (data.type === 'email') {\n                            getMessage(\"Email existuje\")\n                        }\n                        if (data.error === 'format' && data.message.includes('email')) {\n                            getMessage(\"Email musi byt platny email\")\n                        }\n                        setIsLoading(false)\n                        return\n                    }\n\n                    setUser({\n                        ...data.user,\n                        _id: data.user._id\n                    })\n                }\n\n                const userId = data.user ? data.user._id : user._id\n\n                updateUser({\n                    ...user\n                }, userId, path)\n\n                // setIsLoading(false)\n                // getUsers()\n                // push('/dashboard/zakaznici')\n                // closeModal()\n\n            } else {\n                if (user.password !== user.confirmPassword) {\n                    getMessage(\"Heslá sa nezhodujú\")\n                    setIsLoading(false)\n                    return\n                }\n\n                const response = await postAdmin(token, user)\n                const data = await response.json()\n\n                console.log(data)\n\n                if (data.error) {\n                    getMessage(data.message)\n                    setIsLoading(false)\n                    return\n                }\n\n                setIsLoading(false)\n                getFilteredUsers({\n                    filters: {\n                        admin: activeIndex\n                    }\n                })\n\n                push(\"/dashboard/zakaznici\")\n                closeModal()\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // ----------------------------------------------\n    // ----------------------------------------------\n    // ----------------------------------------------\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n\n    const getFilteredUsers = async (filter) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(filter)\n        const raw = JSON.stringify(filter)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getUserByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(query)\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <UserContext.Provider\n            value={{\n                isUpdating,\n                activeIndex,\n                handleChangeFilterItem,\n                filterItems,\n                users,\n                user,\n                totalCount,\n                // getUsers,\n                getUser,\n                handleChange,\n                handleParameterChange,\n                handleCompanyChange,\n                updateUser,\n                resetUser,\n                formToShow,\n                switchFormButtons,\n                toggleUserForm,\n                createUser,\n                getFilteredUsers,\n                getUserByQuery,\n            }}\n        >\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserProvider","import styled from 'styled-components'\n\nexport const InputRow = styled.div`\n    display:flex;\n    align-items: center;\n\n    p {\n        margin-top: 1.8rem;\n        margin-left: 2rem;\n            opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n    @media all and (max-width: 800px) {\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n    }\n`","import React from 'react'\n\nimport { InputRow } from './product-input-row.styles'\n\nconst ProductInputRow = ({ children, label, example, ...otherprops }) => {\n    return (\n        <InputRow {...otherprops}>\n            <div>\n                {children}\n            </div>\n            <div>\n                <p>{label + \" \"}<span>{example}</span></p>\n            </div>\n        </InputRow>\n    )\n}\n\nexport default ProductInputRow\n","import React, { createContext, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\n\nexport const ExaminationContext = createContext({\n    createExamination: () => { },\n    updateExamination: () => { },\n    deleteExamination: () => { },\n})\n\nconst ExaminationProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const createExamination = async (examsToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(examsToAdd)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/exams/`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.exam) {\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateExamination = async (examToUpdate, examId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(examToUpdate)\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/exams/${examId}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.exam) {\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteExamination = async (examId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/exams/${examId}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.exam) {\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <ExaminationContext.Provider\n            value={{\n                createExamination,\n                updateExamination,\n                deleteExamination\n            }}\n        >\n            {children}\n        </ExaminationContext.Provider>\n    )\n}\n\nexport default ExaminationProvider","import styled from 'styled-components'\n\nexport const TableContainer = styled.div`\n    display: grid;\n    grid-template-columns: 2rem repeat(7, 7.5rem);\n    margin-bottom: 3rem;\n`\n\nexport const TitleCol = styled.div`\n    display: grid;\n    grid-template-rows: repeat(4, 5rem);\n    div {\n        align-self: center;\n        display:flex;\n        justify-content: space-between;\n    }\n`\n\nexport const Col = styled.div`\n    display: grid;\n    grid-template-rows: repeat(4, 5rem);\n    div {\n        text-align:center;\n        align-self: center;\n        margin-left: .5rem;\n\n\n        &:nth-child(1) {\n            align-self: center;\n        }\n\n        input {\n            display:block;\n            width: 100%;\n            border: none;\n            padding: 1rem .5rem;\n            text-align: center;\n            font-family: inherit;\n            font-size: inherit;\n            background-color: var(--input-background-color);\n            color: var(--input-color);\n            border-radius: .5rem;\n            outline: none;\n\n            &:focus {\n                outline: none;\n            }\n\n            &:disabled {\n                opacity: .83;\n            }\n        }\n\n        input[type=number]::-webkit-inner-spin-button, \n        input[type=number]::-webkit-outer-spin-button {  \n            opacity: 1;\n\n        }\n    }\n`\n\nexport const OsContainer = styled.div`\n        text-align:center;\n        align-self: center;\n        margin-left: .5rem;\n\n\n        &:nth-child(1) {\n            align-self: center;\n        }\n\n        input {\n            display:block;\n            width: 100%;\n            border: none;\n            padding: 1rem .5rem;\n            text-align: center;\n            font-family: inherit;\n            font-size: inherit;\n            background-color: var(--input-background-color);\n            color: var(--input-color);\n            border-radius: .5rem;\n            outline: none;\n\n            &:focus {\n                outline: none;\n            }\n        }\n\n        input[type=number]::-webkit-inner-spin-button, \n        input[type=number]::-webkit-outer-spin-button {  \n            display:none;\n            opacity: 0;\n\n        }\n`","import React, { useEffect } from 'react'\n\nimport {\n    TableContainer,\n    TitleCol,\n    Col,\n    OsContainer\n} from './parameters-table.styles'\n\nconst ParametersTable = ({ parameters, handleChange, disabledInputs = false }) => {\n    const checkParameters = (parameter, idx) => {\n        if (parameter.length === 0) {\n            return \"\"\n        }\n        if (parameter[idx] === 1001) {\n            return \"\"\n        }\n\n        return parameter[idx]\n    }\n\n    console.log((Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))).toFixed(2) === 0)\n\n    useEffect(() => {\n        if (handleChange) {\n            if (parameters.diopters && parameters.addition) {\n                handleChange({\n                    target: {\n                        name: \"diopters\",\n                        value: (Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))) === 0 ? \"\" : (Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))).toFixed(2)\n                    }\n                }, 2)\n                handleChange({\n                    target: {\n                        name: \"diopters\",\n                        value: (Number(checkParameters(parameters.diopters, 1)) + Number(checkParameters(parameters.addition, 1))) === 0 ? \"\" : (Number(checkParameters(parameters.diopters, 1)) + Number(checkParameters(parameters.addition, 1))).toFixed(2)\n                    }\n                }, 3)\n            }\n        }\n    }, [parameters.diopters[0], parameters.addition[0], parameters.diopters[1], parameters.addition[1]])\n\n    return (\n        <TableContainer>\n            <TitleCol>\n                <div>{\" \"}</div>\n                <div>\n                    <p>P</p>\n                </div>\n                <div>\n                    <p>Ľ</p>\n                </div>\n                <div>\n                    <p>P</p>\n                </div>\n                <div>\n                    <p>Ľ</p>\n                </div>\n            </TitleCol>\n\n\n            <Col>\n                <div>sph</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.diopters, idx)}\n                                name=\"diopters\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>cyl</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.cylinder, idx)}\n                                name=\"cylinder\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>ax</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <OsContainer key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.cylinderAxes, idx)}\n                                name=\"cylinderAxes\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </OsContainer>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>PD</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.distance, idx)}\n                                name=\"distance\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>prizma</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.prism, idx)}\n                                name=\"prism\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>basis</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.basis, idx)}\n                                name=\"basis\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>addicia</div>\n\n                {[...Array(2)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.addition, idx)}\n                                name=\"addition\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n\n\n        </TableContainer>\n    )\n}\n\nexport default ParametersTable\n"],"sourceRoot":""}
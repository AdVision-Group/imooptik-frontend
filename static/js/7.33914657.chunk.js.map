{"version":3,"sources":["components/product-glasses-form/product-glasses-form.styles.jsx","components/product-glasses-form/product-glasses-form.component.jsx","components/product-lenses-form/product-lenses-form.styles.jsx","components/product-lenses-form/product-lenses-form.component.jsx","sections/product/product.styles.jsx","sections/product/product.section.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","components/product-input-row/product-input-row.styles.jsx","components/product-input-row/product-input-row.component.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/custom-checkbox/custom-checkbox.styles.jsx","components/custom-checkbox/custom-checkbox.component.jsx","components/custom-form-switch/custom-form-switch.styles.jsx","components/custom-form-switch/custom-form-switch.component.jsx","components/custom-textarea/custom-textarea.styles.jsx","components/custom-textarea/custom-textarea.component.jsx","hooks/useFetch.jsx","components/modal-images/modal-images.styles.jsx","components/modal-images/modal-images.component.jsx"],"names":["CategoryTitle","styled","h3","CategoryContainer","div","CategoryCheckbox","CustomCheckbox","TextareaRow","CustomSelect","select","Title","ProductGlassesForm","product","handleChange","handleSizeChange","handleSpecsChange","handleAvailableChange","categories","handleCategoryChange","activeCategoryIndex","currentUser","lensesParameters","handleParameterChange","Fragment","map","category","idx","label","name","value","isActive","handleClick","example","type","eanCode","toString","e","required","brand","list","autoComplete","id","brands","price","rows","description","colorCode","specs","sex","onChange","frameColor","frameMaterial","frameStyle","lensColor","size","available","admin","retailNames","premises","ProductLensesForm","lense","handleLensesCylinderRangeChange","handleLensesDioptersRangeChange","dioptersRange","cylinderRange","Header","paddingStyles","DeleteButton","CustomButton","AddButton","ImageContainer","ProductImage","hasImage","DraftCheckBox","ProductSection","useContext","AuthContext","token","myHeaders","Headers","append","requestOptions","method","headers","redirect","response","useFetch","useState","showImageModal","setImageModal","useParams","warData","WarehouseContext","switchFormButtons","formToShow","toggleProductForms","isUpdating","getEanCode","toggleDraft","selectImage","createNewProduct","updateProduct","handleProductDelete","resetProduct","lenses","handleLensesChange","getSigleLenses","createNewLenses","updateLenses","deleteLenses","getSingleProduct","LoadingModalContext","closeModal","isLoading","showModal","message","selectedImage","ImageContext","useEffect","console","log","onSubmit","preventDefault","imagePath","alert","handleSubmit","loading","title","close","setImage","eshop","onClick","_id","items","activeIndex","src","process","alt","shrinkLabel","css","InputGroup","CustomInput","otherProps","className","htmlFor","length","Container","FixedContainer","ScrollContainer","children","InputRow","ProductInputRow","otherprops","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","CheckboxContainer","ToggleOptionsContainer","ToggleFormButton","CustomFormSwitch","item","CustomTextarea","path","options","setResponse","error","setError","setIsLoading","a","fetch","res","json","data","fetchData","ModalContainer","Modal","UploadButton","CloseButton","button","FlexContainer","ImagePreviewContainer","TabOptions","TabButton","CropButton","ButtonOptions","FetchButtons","toDataUrl","url","callback","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","str","result","lastPos","indexOf","cuttedstr","slice","readAsDataURL","open","responseType","send","ModalImages","isDisabled","getImages","handleDeleteImage","handleImage","images","setSelectedImage","getNextImages","getPrevImage","showTab","setShowTab","imageToUpload","setImageToUpload","imgUrl","setImgUrl","imageName","setImageName","imageAlt","setImageAlt","tab","URL","createObjectURL","ReactDOM","createPortal","accept","target","files","imgData","disabled","img","document","getElementById"],"mappings":"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","file":"static/js/7.33914657.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\nexport const CategoryTitle = styled.h3`\n    margin-bottom: 2rem;\n`\n\nexport const CategoryContainer = styled.div`\n    width:100%;\n    display: flex;\n    /* justify-content: space-evenly; */\n    margin-bottom: 1rem;\n    flex-wrap: wrap;\n\n`\n\nexport const CategoryCheckbox = styled(CustomCheckbox)`\n    margin: 0 1rem 2rem;\n`\n\n\nexport const TextareaRow = styled.div`\n    display: grid;\n    grid-template-columns: 35rem 1fr;\n    /* align-items: center; */\n    /* max-width: 45rem; */\n\n    p {\n        margin-top: 2.5rem;\n        margin-left: 2rem;\n        opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n    @media all and (max-width: 800px) {\n        display: flex;\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n\n        div {\n            width: 100%;\n        }\n    }\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: #F5F5F5;\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`\n\nexport const Title = styled.h3`\n    margin-top: 2rem;\n`\n\n","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport ProductInputRow from '../product-input-row/product-input-row.component'\n\nimport {\n    TextareaRow,\n    CustomSelect,\n    Title,\n    CategoryContainer,\n    CategoryCheckbox,\n    CategoryTitle,\n} from './product-glasses-form.styles.jsx'\n\nimport { brands, retailNames } from '../../context/warehouse/warehouse.utils'\n\n\nconst ProductGlassesForm = ({\n    product,\n    handleChange,\n    handleSizeChange,\n    handleSpecsChange,\n    handleAvailableChange,\n    categories,\n    handleCategoryChange,\n    activeCategoryIndex,\n    lensesParameters,\n    handleParameterChange,\n    currentUser,\n}) => {\n\n    return (\n        <React.Fragment>\n\n            <div>\n                <CategoryTitle>Kategória</CategoryTitle>\n                <CategoryContainer>\n                    {\n                        categories.map((category, idx) => {\n                            return (\n                                <CategoryCheckbox\n                                    key={idx}\n                                    label={category.name}\n                                    value={category.value}\n                                    name='type'\n                                    isActive={category.value === activeCategoryIndex}\n                                    handleClick={() => handleCategoryChange(category.value)}\n                                />\n                            )\n                        })\n                    }\n                </CategoryContainer>\n            </div>\n            <div>\n\n                <h3>Základné informacie</h3>\n                <ProductInputRow\n                    label=\"Unikátny kód produktu\"\n                    example=\"\"\n                >\n                    <CustomInput\n                        label=\"Ean kód*\"\n                        type='text'\n                        name='eanCode'\n                        value={product.eanCode.toString()}\n                        handleChange={(e) => handleChange(e)}\n                        required\n                    />\n                </ProductInputRow>\n                <ProductInputRow\n                    label=\"Názov produktu\"\n                    example=\"napr: Tommy Hilfiger\"\n                >\n                    <CustomInput\n                        label=\"Názov*\"\n                        type='text'\n                        name='name'\n                        value={product.name}\n                        handleChange={(e) => handleChange(e)}\n                        required\n\n                    />\n                </ProductInputRow>\n                <ProductInputRow\n                    label=\"Značka\"\n                    example=\"napr: Tommy Hilfiger\"\n                >\n                    <CustomInput\n                        label=\"Značka\"\n                        type='text'\n                        name='brand'\n                        value={product.brand}\n                        handleChange={(e) => handleChange(e)}\n                        list={\"brands\"}\n                        autoComplete='off'\n                    />\n                    <datalist id=\"brands\">\n                        {brands.map(brand => (\n                            <option key={brand} value={brand} />\n                        ))}\n                    </datalist>\n                </ProductInputRow>\n                <ProductInputRow\n                    label=\"Cena\"\n                    example=\"napr: 10,55€\"\n                >\n                    <CustomInput\n                        label=\"Cena*\"\n                        type='text'\n                        name='price'\n                        value={product.price.toString()}\n                        handleChange={(e) => handleChange(e)}\n                        required\n\n                    />\n                </ProductInputRow>\n                <TextareaRow>\n                    <div>\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={product.description}\n                            handleChange={(e) => handleChange(e)}\n                        />\n                    </div>\n                    <div>\n                        <p>Popis produktu</p>\n                    </div>\n                </TextareaRow>\n\n                {/* {\n                    product.type === 4 && (\n                        <React.Fragment>\n                            <h3>Parametre</h3>\n                            <ProductInputRow\n                                label={`Dioptrie`}\n                                example=\"napr: 0\"\n                            >\n                                <CustomInput\n                                    label={\"minimum\"}\n                                    type='number'\n                                    name='diopters'\n                                    value={lensesParameters.diopters[0].toString()}\n                                    handleChange={e => handleParameterChange(e, 0)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label={`Dioptrie`}\n                                example=\"napr: 0\"\n                            >\n                                <CustomInput\n                                    label={\"maximum\"}\n                                    type='number'\n                                    value={\"\"}\n                                    name='diopters'\n                                    value={lensesParameters.diopters[1].toString()}\n                                    handleChange={e => handleParameterChange(e, 1)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label={``}\n                                example=\"napr: 8.5\"\n                            >\n                                <CustomInput\n                                    label={\"Zakrivenie\"}\n                                    type='number'\n                                    value={\"\"}\n                                    name='curvature'\n                                    value={lensesParameters.curvature.toString()}\n                                // handleChange={e => handleLensesDioptersRangeChange(e, idx)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label={``}\n                                example=\"napr: 14\"\n                            >\n                                <CustomInput\n                                    label={\"Priemer\"}\n                                    type='number'\n                                    value={\"\"}\n                                    name=\"average\"\n                                    value={lensesParameters.average.toString()}\n                                // handleChange={e => handleLensesDioptersRangeChange(e, idx)}\n                                />\n                            </ProductInputRow>\n                        </React.Fragment>\n                    )\n                } */}\n\n                {\n                    !(product.type === 5 || product.type === 4) && (\n                        <React.Fragment>\n                            <h3>Špecifikacie</h3>\n                            <ProductInputRow\n                                label=\"Farebný kód produktu\"\n                                example=\"napr: #000000\"\n                            >\n                                <CustomInput\n                                    label=\"Color code\"\n                                    type='text'\n                                    name='colorCode'\n                                    value={product.colorCode}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Pohlavie pre ktoré je produkt určený\"\n                                example=\"\"\n                            >\n                                <CustomSelect name='sex' value={product.specs.sex} onChange={e => handleSpecsChange(e)}>\n                                    <option value='M'>Pánske</option>\n                                    <option value='W'>Dámske</option>\n                                    <option value='D'>Detské</option>\n                                    <option value='U'>Nezáleží</option>\n                                </CustomSelect>\n                            </ProductInputRow>\n\n                            <ProductInputRow\n                                label=\"Farba\"\n                                example=\"napr: Čierna\"\n                            >\n                                <CustomInput\n                                    label=\"Farba rámu\"\n                                    type='text'\n                                    name='frameColor'\n                                    value={product.specs.frameColor}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Materiál\"\n                                example=\"napr: Titán\"\n                            >\n                                <CustomInput\n                                    label=\"Materiál rámu\"\n                                    type='text'\n                                    name='frameMaterial'\n                                    value={product.specs.frameMaterial}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Tvar\"\n                                example=\"napr: Okruhlý\"\n                            >\n                                <CustomInput\n                                    label=\"Tvar rámu\"\n                                    type='text'\n                                    name='frameStyle'\n                                    value={product.specs.frameStyle}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Farba skla\"\n                                example=\"napr: Priehľadná\"\n                            >\n                                <CustomInput\n                                    label=\"Farba\"\n                                    type='text'\n                                    name='lensColor'\n                                    value={product.specs.lensColor}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n\n                            <Title>Velikosť</Title>\n\n                            {product.specs.size.map((value, idx) => {\n                                return (\n                                    <ProductInputRow\n                                        key={idx}\n                                        label={`Velkosť`}\n                                        example=\"napr: 0\"\n                                    >\n                                        <CustomInput\n                                            label={`${idx}`}\n                                            type='number'\n                                            // name={store.name}\n                                            value={value.toString()}\n                                            handleChange={e => handleSizeChange(e, idx)}\n                                        />\n                                    </ProductInputRow>\n                                )\n                            })}\n                        </React.Fragment>\n                    )\n                }\n\n                <Title>Skladové zásoby</Title>\n                {product && product.available.map((value, idx) => {\n\n                    return (\n                        <ProductInputRow\n                            key={idx}\n                            label={`Počet kusov na predajni,`}\n                            example=\"napr: 0\"\n                        >\n                            <CustomInput\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                type='number'\n                                // name={store.name}\n                                value={value.toString()}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        </ProductInputRow>\n                    )\n                })}\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default ProductGlassesForm\n","import styled from 'styled-components'\n\nexport const TextareaRow = styled.div`\n    display: grid;\n    grid-template-columns: 35rem 1fr;\n    /* align-items: center; */\n    /* max-width: 45rem; */\n\n    p {\n        margin-top: 2.5rem;\n        margin-left: 2rem;\n        opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n        @media all and (max-width: 800px) {\n        display: flex;\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n\n        div {\n            width: 100%;\n        }\n    }\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport ProductInputRow from '../product-input-row/product-input-row.component'\n\nimport {\n    TextareaRow\n} from './product-lenses-form.styles'\n\nconst ProductLensesForm = ({ lense, handleChange, handleLensesCylinderRangeChange, handleLensesDioptersRangeChange }) => {\n    return (\n        <div>\n            <h3>Základné informacie</h3>\n            <ProductInputRow\n                label=\"Názov šošoviek\"\n                example=\"napr: Smile\"\n            >\n                <CustomInput\n                    label=\"Názov*\"\n                    type='text'\n                    name='name'\n                    value={lense.name}\n                    handleChange={(e) => handleChange(e)}\n                    required\n\n                />\n            </ProductInputRow>\n            <ProductInputRow\n                label=\"Značka\"\n                example=\"napr: Zeiss\"\n            >\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={lense.brand}\n                    handleChange={(e) => handleChange(e)}\n                />\n            </ProductInputRow>\n            <ProductInputRow\n                label=\"Cena\"\n                example=\"napr: 10.55€\"\n            >\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={lense.price.toString()}\n                    handleChange={(e) => handleChange(e)}\n                    required\n\n                />\n            </ProductInputRow>\n            <TextareaRow>\n                <div>\n                    <CustomTextarea\n                        label=\"Popis*\"\n                        name='description'\n                        rows='5'\n                        value={lense.description}\n                        handleChange={(e) => handleChange(e)}\n                        required\n                    />\n                </div>\n                <div>\n                    <p>Popis produktu</p>\n                </div>\n            </TextareaRow>\n\n            <h3>Špecifikacie</h3>\n\n            {lense && lense.dioptersRange.map((value, idx) => {\n                return (\n                    <ProductInputRow\n                        key={idx}\n                        label={`Dioptrie`}\n                        example=\"napr: 0\"\n                    >\n                        <CustomInput\n                            label={idx === 0 ? \"minimum\" : \"maximum\"}\n                            type='number'\n                            // name={store.name}\n                            value={value.toString()}\n                            handleChange={e => handleLensesDioptersRangeChange(e, idx)}\n                        />\n                    </ProductInputRow>\n                )\n            })}\n\n            {lense && lense.cylinderRange.map((value, idx) => {\n                return (\n                    <ProductInputRow\n                        key={idx}\n                        label={`Cylinder`}\n                        example=\"napr: 0\"\n                    >\n                        <CustomInput\n                            label={idx === 0 ? \"minimum\" : \"maximum\"}\n                            type='number'\n                            // name={store.name}\n                            value={value.toString()}\n                            handleChange={e => handleLensesCylinderRangeChange(e, idx)}\n                        />\n                    </ProductInputRow>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProductLensesForm\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\nimport CustomButton from '../../components/custom-button/custom-button.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n\n    @media all and (max-width: 800px) {\n        flex-wrap: wrap;\n\n        div:nth-child(2) {\n            margin-bottom: 2rem;\n        }\n    }\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    margin: 0 2rem 0 0;\n    background-color: #DD4C4C;\n`\nexport const AddButton = styled(CustomButton)`\n    font-size: 1.4rem;\n`\n\nexport const Title = styled.h3`\n    margin-top: 2rem;\n    /* margin-bottom: 2rem; */\n`\n\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"#eee\"};\n    margin: 3rem 0 5rem;\n    padding: 6rem;\n    position: relative;\n    max-width: 45rem;\n\n    img {\n        position: absolute;\n        width: 100%;\n        /* max-height: 40rem; */\n        object-fit:cover;\n        object-position:center;\n\n        /* height: 100%; */\n        left: 0;\n        top: 0;\n\n    }\n`\n\nexport const DraftCheckBox = styled(CustomCheckbox)`\n    margin-right: 2rem;\n`\n\n","import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\n\nimport CustomFormSwitch from '../../components/custom-form-switch/custom-form-switch.component'\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\n\nimport { useFetch } from '../../hooks/useFetch'\n\nimport {\n    Header,\n    AddButton,\n    DeleteButton,\n    Title,\n    ProductImage,\n    DraftCheckBox,\n    ImageContainer,\n} from './product.styles'\n\nconst ProductSection = () => {\n    const { currentUser, token } = useContext(AuthContext)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n\n    const { response } = useFetch('api/admin/products/nextEanCode', requestOptions)\n\n    const [showImageModal, setImageModal] = useState(false)\n    const { id } = useParams()\n    const warData = useContext(WarehouseContext)\n    const {\n        switchFormButtons,\n        formToShow,\n        toggleProductForms,\n        isUpdating,\n        activeCategoryIndex,\n        categories,\n        getEanCode,\n        toggleDraft,\n        handleCategoryChange,\n        handleAvailableChange,\n        handleSizeChange,\n        selectImage,\n        product,\n        createNewProduct,\n        updateProduct,\n        handleProductDelete,\n        resetProduct,\n        lenses,\n        handleLensesChange,\n        handleLensesDioptersRangeChange,\n        handleLensesCylinderRangeChange,\n        getSigleLenses,\n        createNewLenses,\n        updateLenses,\n        deleteLenses,\n        getSingleProduct,\n        handleChange,\n        handleSpecsChange,\n        lensesParameters,\n        handleParameterChange\n    } = warData\n\n    const {\n        closeModal,\n        isLoading,\n        showModal,\n        message\n    } = useContext(LoadingModalContext)\n\n    const { selectedImage } = useContext(ImageContext)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (formToShow === 0) {\n            if (!product.imagePath) {\n                alert(\"Žiaden obrazok!\")\n                return\n            }\n\n            if (id === 'novy-produkt') {\n                createNewProduct(product)\n                resetProduct()\n            } else {\n                updateProduct(product)\n                resetProduct()\n            }\n        } else {\n            if (!lenses.imagePath) {\n                alert(\"Žiaden obrazok!\")\n                return\n            }\n\n            if (id === 'novy-produkt') {\n                createNewLenses(lenses)\n            } else {\n                updateLenses(lenses)\n            }\n\n        }\n\n    }\n\n    useEffect(() => {\n        if (id !== \"novy-produkt\") {\n            if (formToShow === 0) {\n                getSingleProduct(id)\n            } else {\n                getSigleLenses(id)\n            }\n        } else {\n\n        }\n    }, [id])\n\n    useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            resetProduct()\n        }\n    }, [])\n\n    useEffect(() => {\n        if (response) {\n            if (!product.eanCode) {\n                getEanCode(response.eanCode)\n            }\n        }\n    }, [response])\n\n\n    return (\n        <form onSubmit={e => handleSubmit(e)}>\n            { showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={selectImage} />}\n            <Header>\n                <div>\n                    <h1>{isUpdating ? \"Upraviť produkt\" : \"Pridať nový produkt\"}</h1>\n                </div>\n                <div>\n                    <DraftCheckBox\n                        label='Verejný'\n                        isActive={formToShow === 0 ? product.eshop : lenses.eshop}\n                        handleClick={() => toggleDraft()}\n                    />\n                    {isUpdating && <DeleteButton onClick={formToShow === 0 ? () => handleProductDelete(product._id) : () => deleteLenses(lenses._id)}>Vymazať</DeleteButton>}\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť produkt\" : \"Pridať product\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating &&\n                    <CustomFormSwitch\n                        items={switchFormButtons}\n                        title=\"Aký produkt chcete pridať?\"\n                        activeIndex={formToShow}\n                        handleClick={toggleProductForms}\n                    />\n                }\n\n                {formToShow === 0 ? (\n                    <ProductGlassesForm\n                        activeCategoryIndex={activeCategoryIndex}\n                        categories={categories}\n                        product={product}\n                        handleChange={handleChange}\n                        handleSizeChange={handleSizeChange}\n                        handleSpecsChange={handleSpecsChange}\n                        handleCategoryChange={handleCategoryChange}\n                        handleAvailableChange={handleAvailableChange}\n                        lensesParameters={lensesParameters}\n                        handleParameterChange={handleParameterChange}\n                        currentUser={currentUser}\n                    />\n                ) : (\n                        <ProductLensesForm\n                            lense={lenses}\n                            handleChange={handleLensesChange}\n                            handleLensesDioptersRangeChange={handleLensesDioptersRangeChange}\n                            handleLensesCylinderRangeChange={handleLensesCylinderRangeChange}\n                        />\n                    )\n                }\n\n                <div>\n                    <ImageContainer>\n\n                        <Title>Obrázok</Title>\n\n                        <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </ProductImage>\n                    </ImageContainer>\n                </div>\n            </ScrollContainer>\n\n        </form >\n    )\n}\n\nexport default ProductSection\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`\n\nexport const FixedContainer = styled.div`\n    max-width: 115rem;\n`","import React from 'react'\nimport { Container, FixedContainer } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            <FixedContainer>\n                {children}\n            </FixedContainer>\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import styled from 'styled-components'\n\nexport const InputRow = styled.div`\n    display:flex;\n    align-items: center;\n\n    p {\n        margin-top: 1.8rem;\n        margin-left: 2rem;\n            opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n    @media all and (max-width: 800px) {\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n    }\n`","import React from 'react'\n\nimport { InputRow } from './product-input-row.styles'\n\nconst ProductInputRow = ({ children, label, example, ...otherprops }) => {\n    return (\n        <InputRow {...otherprops}>\n            <div>\n                {children}\n            </div>\n            <div>\n                <p>{label + \" \"}<span>{example}</span></p>\n            </div>\n        </InputRow>\n    )\n}\n\nexport default ProductInputRow\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components'\n\nexport const CheckboxContainer = styled.div`\n    display: inline-block;\n    cursor: pointer;\n    font-size: 1.5rem;\n    font-weight: 700;\n    /* margin-right: 2rem; */\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"rgba(0,0,0,.06)\"};\n    color: ${({ isActive }) => isActive ? \"#fff\" : \"#000\"};\n    padding: .8rem 3rem;\n    border-radius: .2rem;\n    transition: all .2s ease-out;\n\n    @media all and (max-width: 500px) {\n        padding: 0.5rem 1.5rem;\n        font-size: 1.4rem;\n    }\n`","import React from 'react'\n\nimport { CheckboxContainer } from './custom-checkbox.styles'\n\nconst CustomCheckbox = ({ label, isActive, handleClick, ...otherprops }) => {\n    return (\n        <CheckboxContainer isActive={isActive} onClick={handleClick} {...otherprops}>\n            {label}\n        </CheckboxContainer>\n    )\n}\n\nexport default CustomCheckbox\n","import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nexport const Title = styled.h3`\n    margin-top: 2rem;\n    /* margin-bottom: 2rem; */\n`\n\nexport const ToggleOptionsContainer = styled.div`\n    display: flex;\n    margin: 2rem 0;\n`\n\nexport const ToggleFormButton = styled(CustomButton)`\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"#000\"};\n    font-weight: 700;\n    margin-right: 2rem;\n`","import React from 'react'\n\nimport {\n    Title,\n    ToggleFormButton,\n    ToggleOptionsContainer\n} from './custom-form-switch.styles'\n\nconst CustomFormSwitch = ({ title, activeIndex, handleClick, items }) => {\n    return (\n        <React.Fragment>\n            <Title>{title}</Title>\n            <ToggleOptionsContainer>\n                {\n                    items.map((item, idx) => (\n                        <ToggleFormButton key={idx} isActive={activeIndex === idx} onClick={(e) => handleClick(e, idx)}>{item.name}</ToggleFormButton>\n                    ))\n                }\n            </ToggleOptionsContainer>\n        </React.Fragment>\n    )\n}\n\nexport default CustomFormSwitch\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: .5rem .5rem .5rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 25px 0;\n        font-family: inherit;\n        resize: none;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: .6rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-textarea.styles'\n\nconst CustomTextarea = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <textarea\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomTextarea","import { useEffect, useState } from 'react'\n\nexport const useFetch = (path, options) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, options)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [])\n\n    return { response, isLoading, error }\n}","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 50rem;\n    max-height: 60rem;\n\n    overflow-y: scroll;\n\n    /* display: flex;\n    flex-direction: column;\n    align-items: center; */\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: white;\n\n    position: relative;\n    z-index: 999999;\n\n`\n\nexport const UploadButton = styled.label`\n    input[type=\"file\"] {\n        position: absolute;\n        left: -999999999rem;\n    }\n    cursor: pointer;\n    background-color: #000;\n    color: #fff;\n    max-width: 18rem;\n    font-size: 1.4rem;\n    font-family: inherit;\n    padding: .8rem 1rem;\n    text-align: center;\n    display: block;\n    border: 1px solid #000;\n    transition: background-color .1s ease-out,\n                color .2s ease-out;\n    outline: none;\n    margin: 0 auto 2rem;\n\n    &:focus {\n        outline:none;\n    }\n\n    &:hover {\n        background-color: transparent;\n        color: #000;\n    }\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const FlexContainer = styled.div`\n    /* max-width: 46rem; */\n\n    /* width: 100%; */\n    /* overflow-x: scroll; */\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    margin: 2rem auto;\n`\n\nexport const ImageContainer = styled.div`\n    position: relative;\n    cursor: pointer;\n    width: 20rem;\n    margin: 1rem 0;\n\n    &:hover button {\n        display: block\n    }\n\n    /* &:not(:last-child) {\n        margin-right: 1.5rem;\n    } */\n\n    img {\n        width:100%;\n        height:100%;\n        object-fit: contain;\n        object-position: center;\n    }\n`\n\nexport const DeleteButton = styled.button`\n    cursor: pointer;\n    display:none;\n    border-radius:50%;\n    position: absolute;\n    border: none;\n    background-color: rgb(235, 172, 1);\n    padding: .5rem .75rem;\n    font-size: 1rem;\n    right: .5rem;\n    top: .5rem;\n\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const ImagePreviewContainer = styled.div`\n    display: block;\n    width: 100%;\n\n    img {\n        display: block;\n        max-width: 100%;\n        /* width: inherit; */\n    }\n`\n\nexport const TabOptions = styled.div`\n    max-width: 18rem;\n    display: flex;\n    justify-content: space-between;\n    margin: 0 auto;\n`\n\nexport const TabButton = styled.button`\n    cursor: pointer;\n    outline:none;\n    border: none;\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"#000\"};\n    color: #fff;\n    font-weight: ${({ isActive }) => isActive ? \"700\" : \"400\"};\n    font-family: inherit;\n    font-size: 1.2rem;\n    padding: .8rem 1.5rem;\n    border-radius: .2rem;\n    margin-bottom: 2rem;\n    transition: all .3s ease-out;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const CropButton = styled(CustomButton)`\n    display: block;\n    margin: 2rem auto 0;\n\n    &:disabled {\n        cursor: not-allowed;\n        background-color: gray;\n    }\n`\n\nexport const ButtonOptions = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nexport const FetchButtons = styled.button`\n    cursor: pointer;\n    outline: none;\n    border: none;\n    padding: .4rem 1rem;\n    border-radius: 50%;\n    color: #fff;\n    background-color: #000;\n    font-size: 1.2rem;\n    font-family: inherit;\n    margin: 0 .5rem;\n\n    &:focus {\n        outline: none;\n    }\n`","import React, { useEffect, useContext, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\n// import { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\n// import CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    // const {\n    //     getMessage,\n    //     setIsLoading,\n    //     setShowModal,\n    //     closeModal\n    // } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    // const getCropData = async (e) => {\n    //     e.preventDefault()\n    //     setShowModal(true)\n    //     setIsLoading(true)\n\n    //     try {\n    //         // if (typeof cropper !== 'undefined') {\n    //         toDataUrl(imgUrl, async (imgData) => {\n    //             const data = await handleImage(imgData, imageName, imageAlt)\n\n    //             if (data.image) {\n    //                 setImage(data.image._id)\n    //                 setSelectedImage(data.image)\n    //                 getImages()\n    //                 close()\n    //             }\n    //         })\n\n    //         // }\n    //         setShowModal(false)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    //     closeModal()\n    // };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Vybrať obrázok</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","context/order/order.context.jsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","OrderContext","createContext","step","order","cart","selectedProduct","setOrder","addUser","addProduct","addProductDiscount","addLensesParameters","deleteProduct","addLenses","addLensesDiscount","resetOrder","changeStep","selectProduct","createCombinedProducts","incrementQuantity","decrementQuantity","incrementProductQuantity","decrementProductQuantity","OrderProvider","children","token","useContext","AuthContext","LoadingModalContext","closeModal","getMessage","setIsLoading","setShowModal","useState","setStep","setCart","setSelectedProduct","addCombinedProducts","combinedProductsArr","combinedProducts","newStepString","a","length","forEach","item","productQuant","push","product","isPseudo","_id","discount","lens","lensesQuant","lenses","contactLenses","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","process","response","json","data","messageSK","console","log","Provider","value","user","productObj","prevValue","idx","type","newCart","map","index","keys","lensesObj","productIdx","handleSelectProduct","filter","setTimeout","Math","floor","random","percent","event","stopPropagation"],"mappings":"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","file":"static/js/25.1f69134b.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { createContext, useState, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\n\nexport const OrderContext = createContext({\n    step: \"\",\n    order: {},\n    cart: [],\n    selectedProduct: null,\n    setOrder: () => { },\n    addUser: () => { },\n    addProduct: () => { },\n    addProductDiscount: () => { },\n    addLensesParameters: () => { },\n    deleteProduct: () => { },\n    addLenses: () => { },\n    addLensesDiscount: () => { },\n    resetOrder: () => { },\n    changeStep: () => { },\n    selectProduct: () => { },\n    createCombinedProducts: () => { },\n    incrementQuantity: () => { },\n    decrementQuantity: () => { },\n    incrementProductQuantity: () => {},\n    decrementProductQuantity: () => {},\n})\n\nconst OrderProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n    const { closeModal, getMessage, setIsLoading, setShowModal } = useContext(LoadingModalContext)\n    const [step, setStep] = useState('select-user')\n    const [order, setOrder] = useState({})\n    const [cart, setCart] = useState([])\n    const [selectedProduct, setSelectedProduct] = useState(null)\n\n    const addUser = (user) => {\n        setOrder({\n            ...order,\n            user: user\n        })\n    }\n\n    const addCombinedProducts = (combinedProductsArr) => {\n\n        setOrder({\n            ...order,\n            combinedProducts: [\n                // ...(order?.combinedProducts) && { ...order?.combinedProducts },\n                ...combinedProductsArr\n            ]\n        })\n    }\n\n    const selectProduct = (productIdx, event) => {\n        if (selectedProduct === productIdx) {\n            setSelectedProduct(null)\n        } else {\n            setSelectedProduct(productIdx)\n        }\n    }\n\n    const addProduct = (productObj) => {\n        setCart(prevValue => [\n            ...prevValue,\n            { product: productObj, productQuant: 1 }\n        ])\n    }\n\n    const addProductDiscount = (idx, type, value) => {\n        if (value === \"\") {\n            const newCart = cart.map((item, index) => {\n                if (idx === index) {\n                    if (Object.keys(item.discount).length > 1) {\n                        delete item.discount[\"product\"]\n                        return item\n                    } else {\n                        delete item[\"discount\"]\n                        return item\n                    }\n                } else {\n                    return item\n                }\n            })\n            setCart(newCart)\n        } else {\n            const newCart = cart.map((item, index) => {\n                if (idx === index) {\n                    return {\n                        ...item,\n                        discount: {\n                            product: {\n                                [type]: value\n                            }\n                        }\n                    }\n                } else {\n                    return item\n                }\n            })\n            setCart(newCart)\n        }\n    }\n\n    const addLensesParameters = (idx, lensesObj) => {\n        const newCart = cart.map((item, index) => {\n            if (idx === index) {\n                if (Object.keys(lensesObj).length > 0) {\n                    return {\n                        ...item,\n                        lenses: {\n                            ...lensesObj\n                        }\n                    }\n                } else {\n                    return item\n                }\n            } else {\n                return item\n            }\n        })\n        setCart(newCart)\n    }\n\n    const deleteProduct = (productIdx, handleSelectProduct) => {\n        const newCart = cart.filter((item, idx) => idx !== productIdx)\n        setCart(newCart)\n        if (!handleSelectProduct) return\n        setTimeout(() => {\n            handleSelectProduct(null)\n\n        }, 100)\n    }\n\n    const addLenses = (lensesObj) => {\n        if (lensesObj === null && selectedProduct === null) return\n        if (selectedProduct !== null) {\n            const newCart = cart.map((item, idx) => {\n                if (idx === selectedProduct) {\n                    if (lensesObj === null) {\n                        delete item[\"lensesQuant\"]\n                        delete item[\"lens\"]\n                        return item\n                    } else {\n                        return ({\n                            ...item,\n                            lens: lensesObj,\n                            lensesQuant: 2\n                        })\n                    }\n                } else {\n                    return item\n                }\n            })\n            setCart(newCart)\n        } else {\n            setCart(prevValue => [\n                ...prevValue,\n                {\n                    product: {\n                        _id: Math.floor(Math.random() * 10),\n                        isPseudo: true\n                    },\n                    lens: lensesObj,\n                    lensesQuant: 1\n                }\n            ])\n        }\n\n        setSelectedProduct(null)\n    }\n\n    const incrementProductQuantity = (prevValue, idx, event) => {\n        event.stopPropagation()\n        const newCart = cart.map((item, index) => {\n            if (idx === index) {\n                return ({\n                    ...item,\n                    productQuant: prevValue + 1\n                })\n            } else {\n                return item\n            }\n        })\n        setCart(newCart)\n    }\n\n    const incrementQuantity = (prevValue, idx, event) => {\n        event.stopPropagation()\n        const newCart = cart.map((item, index) => {\n            if (idx === index) {\n                return ({\n                    ...item,\n                    lensesQuant: prevValue + 1\n                })\n            } else {\n                return item\n            }\n        })\n        setCart(newCart)\n    }\n    \n    const decrementProductQuantity = (prevValue, idx, event) => {\n        event.stopPropagation()\n\n        if (prevValue === 1) return\n        const newCart = cart.map((item, index) => {\n            if (idx === index) {\n                return ({\n                    ...item,\n                    productQuant: prevValue - 1\n                })\n            } else {\n                return item\n            }\n        })\n        setCart(newCart)\n    }\n    const decrementQuantity = (prevValue, idx, event) => {\n        event.stopPropagation()\n\n        if (prevValue === 1) return\n        const newCart = cart.map((item, index) => {\n            if (idx === index) {\n                return ({\n                    ...item,\n                    lensesQuant: prevValue - 1\n                })\n            } else {\n                return item\n            }\n        })\n        setCart(newCart)\n    }\n\n\n    const addLensesDiscount = (idx, value) => {\n        if (value === \"\") {\n            const newCart = cart.map((item, index) => {\n                if (idx === index) {\n                    if (Object.keys(item.discount).length > 1) {\n                        delete item.discount[\"lenses\"]\n                        return item\n                    } else {\n                        delete item[\"discount\"]\n                        return item\n                    }\n                } else {\n                    return item\n                }\n            })\n            setCart(newCart)\n        } else {\n            const newCart = cart.map((item, index) => {\n                if (idx === index) {\n                    return {\n                        ...item,\n                        discount: {\n                            ...item.discount,\n                            lenses: {\n                                percent: value\n                            }\n                        }\n                    }\n                } else {\n                    return item\n                }\n            })\n            setCart(newCart)\n        }\n    }\n\n    const resetOrder = () => {\n        setOrder({})\n    }\n\n    const changeStep = (newStepString) => {\n        setStep(newStepString)\n    }\n\n    const createCombinedProducts = async () => {\n        if (cart.length === 0) return\n        setIsLoading(true)\n        setShowModal(true)\n\n        const combinedProductsArr = []\n        \n        cart.forEach(item => {\n            [...Array(item.productQuant)].forEach(() => {\n                combinedProductsArr.push(({\n                    product: item.product.isPseudo ? \"pseudo\" : item.product._id,\n                    ...(item.discount) && { discount: { ...item.discount } },\n                    ...(item.lens) && { lens: item.lens._id },\n                    ...(item.lensesQuant) && { lensesQuant: item.lensesQuant },\n                    // ...(item.lens && order.user) && { lenses: order.user.lenses },\n                    ...(item.lenses) && { contactLenses: item.lenses }\n                }))\n            })\n\n        })\n\n\n        // console.log(combinedProductsArr)\n        \n        const myHeaders = new Headers();\n        myHeaders.append(\"auth-token\", token);\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n        const raw = JSON.stringify({\n            combinedProducts: combinedProductsArr\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            // /api/store/combinedProducts/createMany\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/combinedProducts/createMany`, requestOptions)\n            const data = await response.json()\n\n            if (data.combinedProducts) {\n                addCombinedProducts(data.combinedProducts)\n                closeModal()\n                changeStep(\"summary\")\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.messageSK)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <OrderContext.Provider\n            value={{\n                step,\n                order,\n                cart,\n                selectedProduct,\n                setOrder,\n                addUser,\n                addProduct,\n                addProductDiscount,\n                addLensesParameters,\n                deleteProduct,\n                addLenses,\n                addLensesDiscount,\n                resetOrder,\n                changeStep,\n                selectProduct,\n                createCombinedProducts,\n                incrementQuantity,\n                decrementQuantity,\n                incrementProductQuantity,\n                decrementProductQuantity\n            }}\n        >\n            {children}\n        </OrderContext.Provider>\n    )\n}\n\nexport default OrderProvider"],"sourceRoot":""}
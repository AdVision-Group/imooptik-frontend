{"version":3,"sources":["components/sign-in/sign-in.styles.jsx","components/sign-in/sign-in.component.jsx","components/forgot-password/forgot-password.styles.jsx","components/forgot-password/forgot-password.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx"],"names":["FormContainer","styled","form","SubmitButton","CustomButton","ForgotPasswordButton","button","SignIn","showForgotPwsForm","useState","email","setEmail","password","setPassword","logIn","useContext","AuthContext","LoadingModalContext","isLoading","closeModal","message","showModal","handleSubmit","e","a","preventDefault","Fragment","loading","title","close","onSubmit","label","type","name","value","handleChange","target","required","onClick","SignInButton","ForgotPassword","showSignInForm","isWaitingForResponse","errMessage","setIsLoading","handleResetPassword","SignInAndSignUpContainer","div","SignInAndSignUpPage","showForgotPws","setShowForgotPwd","shrinkLabel","css","InputGroup","CustomInput","otherProps","className","onChange","htmlFor","length"],"mappings":"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","file":"static/js/20.14e8655a.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const FormContainer = styled.form`\n    display: block;\n    height: initial;\n    width: 100%;\n    max-width: 35rem;\n    padding: 3rem 4rem;\n    border-radius: .5rem;\n    box-shadow: var(--container-shadow);\n    background-color: var(--background-primary-color);\n    color: var(--primary-text-color);\n    margin: 0 1rem 3rem;\n\n\n    h2 {\n        font-size: 2.8rem;\n        text-align: center;\n        margin-bottom: 5rem;\n\n        \n        @media all and (max-width: 500px) {\n            font-size: 2.5rem;\n        }\n    }\n`\n\nexport const SubmitButton = styled(CustomButton)`\n    margin-top: 2rem;\n\n    width: 100%;\n`\n\nexport const ForgotPasswordButton = styled.button`\n    cursor: pointer;\n    background-color: transparent;\n    color: var(--color-red);\n    font-family: inherit;\n    border: none;\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`","import React, { useState, useContext } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport PopUp from '../popup/pop-up.component'\n\nimport { FormContainer, SubmitButton, ForgotPasswordButton } from './sign-in.styles'\n\nconst SignIn = ({ showForgotPwsForm }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const {\n        logIn,\n    } = useContext(AuthContext)\n\n    const {\n        isLoading,\n        closeModal,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        logIn(email, password)\n\n        setEmail('')\n        setPassword('')\n    }\n\n\n    return (\n        <React.Fragment>\n            {showModal && <PopUp loading={isLoading} title={message} close={closeModal} />}\n            <FormContainer onSubmit={handleSubmit}>\n                <h2>Prihlásiť sa</h2>\n\n                <CustomInput\n                    label=\"E-mail\"\n                    type='email'\n                    name='email'\n                    value={email}\n                    handleChange={(e) => setEmail(e.target.value)}\n                    required\n                />\n                <CustomInput\n                    label=\"Heslo\"\n                    type='password'\n                    name='pwd'\n                    value={password}\n                    handleChange={(e) => setPassword(e.target.value)}\n                    required\n\n                />\n\n                <SubmitButton>Prihlásiť sa</SubmitButton>\n            </FormContainer>\n            <ForgotPasswordButton onClick={() => showForgotPwsForm()}>Zabudol som heslo</ForgotPasswordButton>\n\n        </React.Fragment>\n    )\n}\n\nexport default SignIn\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const FormContainer = styled.form`\n    display: block;\n    height: initial;\n    width: 100%;\n    max-width: 35rem;\n    padding: 3rem 4rem;\n    border-radius: .5rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    margin: 0 1rem 3rem;\n\n\n    h2 {\n        font-size: 2.8rem;\n        text-align: center;\n        margin-bottom: 5rem;\n\n        \n        @media all and (max-width: 500px) {\n            font-size: 2.5rem;\n        }\n    }\n`\n\nexport const SubmitButton = styled(CustomButton)`\n    margin-top: 2rem;\n\n    width: 100%;\n`\n\nexport const SignInButton = styled.button`\n    cursor: pointer;\n    background-color: transparent;\n    color: #DD4C4C;\n    font-family: inherit;\n    border: none;\n    outline: none;\n    margin-bottom: 1rem; \n\n    &:focus {\n        outline: none;\n    }\n`","import React, { useState, useContext } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport PopUp from '../popup/pop-up.component'\n\nimport {\n    FormContainer,\n    SignInButton,\n    SubmitButton\n} from './forgot-password.styles'\n\nconst ForgotPassword = ({ showSignInForm }) => {\n    const [email, setEmail] = useState('')\n\n    const {\n        isWaitingForResponse,\n        errMessage,\n        isLoading,\n        setIsLoading,\n        handleResetPassword\n    } = useContext(AuthContext)\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        handleResetPassword(email)\n    }\n\n\n    return (\n        <React.Fragment>\n            {isLoading && <PopUp loading={isWaitingForResponse} title={errMessage} close={() => setIsLoading(false)} />}\n            <FormContainer onSubmit={handleSubmit}>\n                <h2>Zadaj e-mail</h2>\n\n                <CustomInput\n                    label=\"E-mail\"\n                    type='email'\n                    name='email'\n                    value={email}\n                    handleChange={(e) => setEmail(e.target.value)}\n                    required\n                />\n\n                <SubmitButton>Odoslať</SubmitButton>\n            </FormContainer>\n            <SignInButton onClick={() => showSignInForm()}>Spät na prihlásenie</SignInButton>\n        </React.Fragment>\n    )\n}\n\nexport default ForgotPassword\n","import styled from 'styled-components'\n\nexport const SignInAndSignUpContainer = styled.div`\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    color: var(--primary-text-color);\n\n\n    h1 {\n        font-size: 8rem;\n        font-weight: 700;\n        margin-bottom: 5rem;\n\n        @media all and (max-width: 800px) {\n            font-size: 6rem;\n\n            @media all and (max-width: 500px) {\n            font-size: 5rem;\n\n            }\n        }   \n    }\n`","import React, { useState } from 'react'\n\nimport SignIn from '../../components/sign-in/sign-in.component'\nimport ForgotPassword from '../../components/forgot-password/forgot-password.component'\n\nimport { SignInAndSignUpContainer } from './sign-in-and-sign-up.styles'\n\nconst SignInAndSignUpPage = () => {\n    const [showForgotPws, setShowForgotPwd] = useState(false)\n\n    const showSignInForm = () => {\n        setShowForgotPwd(false)\n    }\n\n    const showForgotPwsForm = () => {\n        setShowForgotPwd(true)\n    }\n\n    return (\n        <SignInAndSignUpContainer>\n            <h1>IMOOPTIK</h1>\n            {showForgotPws ? (<ForgotPassword showSignInForm={showSignInForm} />) : (\n                <SignIn showForgotPwsForm={showForgotPwsForm} />\n            )}\n        </SignInAndSignUpContainer>\n    )\n}\n\nexport default SignInAndSignUpPage\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: var(--input-color);\n`\nexport const InputGroup = styled.div`\n    position: relative;\n\n    /* margin: 45px 0; */\n\n    .form-input {\n        /* background: none; */\n        background-color: var(--input-background-color);\n        color: var(--input-color);\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: var(--input-color);\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput"],"sourceRoot":""}
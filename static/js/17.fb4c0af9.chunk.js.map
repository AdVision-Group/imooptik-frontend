{"version":3,"sources":["components/modal-product-image-gallery/modal-product-image-gallery.styles.jsx","components/modal-product-image-gallery/modal-product-image-gallery.component.jsx","components/modal-get-product-data/modal-get-product-data.styles.jsx","components/modal-get-product-data/modal-get-product-data.component.jsx","components/modal-get-lenses-data/modal-get-lenses-data.styles.jsx","components/modal-get-lenses-data/modal-get-lenses-data.component.jsx","components/product-glasses-form/product-glasses-form.styles.jsx","components/product-glasses-form/product-glasses-form.component.jsx","components/product-lenses-form/product-lenses-form.styles.jsx","components/product-lenses-form/product-lenses-form.component.jsx","components/product-accessories-form/product-accessories-form.styles.jsx","components/product-accessories-form/product-accessories-form.component.jsx","components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx","components/product-contact-lenses-form/product-contact-lenses-form.component.jsx","components/product-service-form/product-service-form.styles.jsx","components/product-service-form/product-service-form.component.jsx","sections/product/product.styles.jsx","sections/product/product.section.jsx","hooks/useFetch.jsx","utils/orders.utils.jsx"],"names":["ModalContainer","styled","div","Modal","CloseButton","button","DeleteButton","label","NewImageContainer","isPrimary","NewImagesContainer","SubmitButton","CustomButton","UploadImageButton","ProductImageGalleryModal","close","setImage","useState","images","setImages","isModalVisible","setIsModalVisible","selectedImages","setSelectedImages","primaryImage","setPrimaryImage","useFetchByQuery","sortBy","dateCreated","limit","skip","response","isLoading","refetch","useEffect","ReactDOM","createPortal","onClick","length","map","img","prevValue","selectImage","src","process","imagePath","alt","_id","arr","filter","image","removeSelectedImage","selectPrimaryImage","primaryImg","otherImages","filteredArr","firstIndex","handleSubmit","document","getElementById","SearchButton","TableContainer","TableCol","isHead","ProductTableHead","ProductTableRow","GetProductDataModal","getSingleProduct","productObj","setProductObj","searchQuery","setSearchQuery","productItems","setProductItems","filters","type","date","query","setQuery","products","value","handleChange","e","target","onKeyPress","key","product","idx","id","data","price","toFixed","eanCode","specs","size","Array","name","brand","formatAvailable","available","GetLensesDataModal","getSingleLenses","fillProductData","lenses","lensType","dioptric","dioptersRange","cylinderRange","BrandedCheckbox","CustomCheckbox","ImageContainer","ProductImage","hasImage","GlassesContainerForm","GlassesContainer","GlassesParameterContainer","StockContainer","CustomSelect","select","CopyButton","ProductGlassesForm","selectedImage","retailNames","currentUser","checkParameter","handleAvailableChange","handleGlassesParametersChange","handleGlassesSpecsSizeChange","handleSpecsChange","glassesParameters","setImageModal","handleGetProductData","isBranded","setIsBranded","toString","isActive","handleClick","Fragment","list","brands","rows","description","required","bonusImages","colorCode","frameColor","glassesColors","color","frameMaterial","glassesMaterials","material","frameStyle","glassesShapes","shape","sex","onChange","admin","premises","LensesFormContainer","LensesContainer","LensesParametersContainer","SubGridContainer","TypesContainer","TypeCheckbox","ProductLensesForm","handleParameterChange","lensesTypes","photochromic","inputLabel","AccessoriesFormContainer","AccessoriesContainer","ProductAccessoriesForm","isUpdating","ContactLensesFormContainer","ContactLensesContainer","ContactLensesParametersContainer","IncreaseButton","ProductContactLensesForm","handleContactLensesChange","handleAddNewParameter","contactLensesParameters","allowedCurves","allowedDiameters","ServiceFormContainer","ServiceContainer","ProductServiceForm","Header","paddingStyles","IsPublicCheckbox","CategoryContainer","CategoryCheckbox","ProductSection","useParams","useContext","AuthContext","LoadingModalContext","closeModal","message","showModal","getMessage","setShowModal","ImageContext","setSelectedImage","showImageModal","showOldImageModal","setOldImageModal","isGetProductDataModalVisible","setIsGetProductDataModalVisible","isGetLensesDataModalVisible","setIsGetLensesDataModalVisible","setIsUpdating","WarehouseContext","handleLensesChange","handleLensesParameterChange","createProduct","updateProduct","resetProduct","resetLenses","resetContactLenses","resetGlassesParameters","createLenses","updateLenses","handleProductChange","handleProductAvailableChange","getEanCode","handleContactLensesParameterChange","handleGlassesParameterChange","handleGlassesParameterSpecsChange","handleGlassesSizeChange","hasChanged","setHasChanged","useFetch","isLoadingFilters","setFilters","boolean","handleGetLensesData","handleChangeType","Object","keys","window","confirm","formatLink","Number","handleSelectImage","imgId","setLensObj","undefined","console","log","when","productData","loading","title","eshop","preventDefault","newProductObj","updatedObj","contactLenses","obj","productCategories","category","splice","find","path","method","setResponse","error","setError","setMessage","setIsLoading","refetchIndex","setRefetchIndex","prevRefetchIndex","requestOptions","redirect","a","fetch","res","json","fetchData","queryObj","myHeaders","Headers","append","localStorage","getItem","raw","JSON","stringify","headers","body","useFetchById","isAvailable","reduce","acc","currValue","totalCount","translatePaymentMethod","translateStatus","status"],"mappings":"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","file":"static/js/17.fb4c0af9.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\n\r\nexport const ModalContainer = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    z-index: 99999;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    background-color: rgba(0,0,0,0.3);\r\n`\r\n\r\nexport const Modal = styled.div`\r\n    width:100%;\r\n    max-width: 100rem;\r\n    max-height: 80rem;\r\n\r\n    overflow-y: scroll;\r\n\r\n    /* display: flex;\r\n    flex-direction: column;\r\n    align-items: center; */\r\n\r\n    padding: 2rem;\r\n    border-radius: .5rem;\r\n    background-color: var(--body-background-primary-color);\r\n    color: var(--primary-text-color);\r\n\r\n    position: relative;\r\n    z-index: 999999;\r\n\r\n    h2 {\r\n        margin-bottom: 2rem;\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n\r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        background:  var(--background-primary-color);\r\n    }\r\n\r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: var(--primary-color);\r\n    }\r\n\r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: var(--primary-color);\r\n    }\r\n\r\n`\r\n\r\nexport const CloseButton = styled.button`\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 99999;\r\n\r\n    border: none;\r\n    outline: none;\r\n    opacity: 0;\r\n\r\n    &:focus {\r\n        outline: none\r\n    }\r\n`\r\n\r\nexport const UploadButton = styled.label`\r\n    input[type=\"file\"] {\r\n        position: absolute;\r\n        left: -999999999rem;\r\n    }\r\n    cursor: pointer;\r\n        background-color: transparent;\r\n\r\n    max-width: 18rem;\r\n    font-size: 1.4rem;\r\n    font-family: inherit;\r\n    font-weight: bolder;\r\n    padding: .8rem 1rem;\r\n    text-align: center;\r\n    display: block;\r\n    border: 1px solid var(--primary-color);\r\n    color: var(--primary-color);\r\n    transition: background-color .1s ease-out,\r\n                color .2s ease-out;\r\n    outline: none;\r\n    margin-bottom: 2rem;\r\n\r\n    &:focus {\r\n        outline:none;\r\n    }\r\n\r\n    &:hover {\r\n        background-color: var(--primary-color);\r\n        color: var(--button-font-color);\r\n    }\r\n`\r\n\r\n\r\n\r\nexport const DeleteButton = styled.button`\r\n    cursor: pointer;\r\n    display:none;\r\n    border-radius:50%;\r\n    position: absolute;\r\n    border: none;\r\n    background-color: var(--color-red);\r\n    color: #fff;\r\n    padding: .5rem .75rem;\r\n    font-size: 1rem;\r\n    right: .5rem;\r\n    top: .5rem;\r\n\r\n    outline: none;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`\r\n\r\nexport const NewImageContainer = styled.div`\r\n    cursor: pointer;\r\n\r\n    position: relative;\r\n    min-width: 15rem;\r\n    width: 15rem;\r\n    height: 15rem;\r\n\r\n    border: ${({ isPrimary }) => isPrimary ? '1px solid var(--primary-color)' : 'unset'};\r\n    \r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: contain;\r\n    }\r\n\r\n    &:hover ${DeleteButton} {\r\n        display: block\r\n    }\r\n`\r\n\r\nexport const NewImagesContainer = styled.div`\r\n    display: flex;\r\n    gap: 3rem;\r\n    overflow-x: auto;\r\n    padding-bottom: 2rem;\r\n    margin-bottom: 2rem;\r\n\r\n`\r\n\r\nexport const SubmitButton = styled(CustomButton)`\r\n    background-color: var(--primary-color);\r\n    font-weight: bolder;\r\n`\r\n\r\nexport const UploadImageButton = styled(CustomButton)`\r\n    position: absolute;\r\n    right: 1rem;\r\n    top: 1rem;\r\n`","import React, { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport CustomInput from '../custom-input/custom-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\n\r\nimport ImageModal from '../modal-images/modal-images.component'\r\n\r\nimport { useFetchByQuery } from '../../hooks/useFetch'\r\n\r\nimport {\r\n    ModalContainer,\r\n    Modal,\r\n    CloseButton,\r\n    UploadButton,\r\n    NewImageContainer,\r\n    DeleteButton,\r\n    NewImagesContainer,\r\n    SubmitButton,\r\n    UploadImageButton\r\n} from './modal-product-image-gallery.styles'\r\n\r\nconst ProductImageGalleryModal = ({ close, setImage }) => {\r\n    const tabs = [\r\n        'upload',\r\n        'select'\r\n    ]\r\n    const [tab, setTab] = useState(tabs[0])\r\n    const [images, setImages] = useState([])\r\n    const [files, setFiles] = useState([])\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n\r\n    const [selectedImages, setSelectedImages] = useState([])\r\n    const [primaryImage, setPrimaryImage] = useState(null)\r\n\r\n    const handleFileInputChange = (e) => {\r\n        const files = e.target.files;\r\n        var filesArr = Array.prototype.slice.call(files);\r\n        const filesArrWithUrl = filesArr.map((file) => ({\r\n            file: file,\r\n            url: URL.createObjectURL(file)\r\n        }))\r\n        setFiles(prevValue => ([...prevValue, ...filesArrWithUrl]))\r\n    }\r\n\r\n    const selectImage = (img) => {\r\n        setSelectedImages(prevValue => ([...prevValue, img]))\r\n    }\r\n\r\n    const removeSelectedImage = img => {\r\n        const arr = selectedImages.filter(image => image._id !== img._id)\r\n        setSelectedImages(arr)\r\n    }\r\n\r\n    const selectPrimaryImage = img => {\r\n        setPrimaryImage(img)\r\n    }\r\n\r\n    const handleSubmit = (primaryImg, otherImages) => {\r\n\r\n        // console.log(primaryImg._id)\r\n\r\n\r\n        if (primaryImg) {\r\n            const arr = otherImages.map(img => img._id)\r\n            const filteredArr = otherImages.filter(img => img._id !== primaryImg._id)\r\n            setImage(primaryImg._id, filteredArr, primaryImg)\r\n            close()\r\n        } else {\r\n            // const arr = otherImages.map(img => img._id)\r\n            // console.log(arr)\r\n            const firstIndex = otherImages[0]\r\n            const filteredArr = otherImages.filter(img => img._id !== firstIndex._id)\r\n            setImage(firstIndex._id, filteredArr, firstIndex)\r\n            close()\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const { response, isLoading, refetch } = useFetchByQuery('api/images/filter', {\r\n        sortBy: {\r\n            dateCreated: -1\r\n        },\r\n        limit: 10,\r\n        skip: 0\r\n    })\r\n    useEffect(() => {\r\n        if (isLoading) return\r\n        if (!response) return\r\n        setImages(response.images)\r\n    }, [isLoading])\r\n\r\n    return ReactDOM.createPortal((\r\n        <ModalContainer>\r\n            {isModalVisible && <ImageModal close={() => setIsModalVisible(false)} setImage={refetch} />}\r\n\r\n            <CloseButton onClick={close} />\r\n            <Modal>\r\n                <UploadImageButton onClick={() => setIsModalVisible(true)}>Pridať</UploadImageButton>\r\n\r\n                <h2>1. Vybrať obrázky</h2>\r\n\r\n                <NewImagesContainer>\r\n                    {images?.length > 0 && images.map((img) => (\r\n                        <NewImageContainer key={img._id}>\r\n                            {/* <DeleteButton >&#10005;</DeleteButton> */}\r\n                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\r\n                        </NewImageContainer>\r\n                    ))}\r\n                </NewImagesContainer>\r\n\r\n                {selectedImages.length > 0 && <h2>2. Zvolené obrázky</h2>}\r\n                {selectedImages.length > 0 && <p>Vybrať hlavný obrázok</p>}\r\n\r\n                <NewImagesContainer>\r\n                    {selectedImages.length > 0 && selectedImages.map((img) => (\r\n                        <NewImageContainer key={img._id} isPrimary={img._id === primaryImage?._id}>\r\n                            <DeleteButton onClick={() => removeSelectedImage(img)} >&#10005;</DeleteButton>\r\n                            <img onClick={() => selectPrimaryImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\r\n                        </NewImageContainer>\r\n                    ))}\r\n                </NewImagesContainer>\r\n\r\n                <SubmitButton onClick={() => handleSubmit(primaryImage, selectedImages)}>Dokončiť</SubmitButton>\r\n            </Modal>\r\n        </ModalContainer>\r\n    ), document.getElementById('portal'))\r\n}\r\n\r\nexport default ProductImageGalleryModal\r\n\r\n                // <h2>1. Vybrať obrázky</h2>\r\n\r\n                // <UploadButton htmlFor='image'>\r\n                //     <input\r\n                //         id='image'\r\n                //         type='file'\r\n                //         name='image'\r\n                //         multiple\r\n                //         accept=\"image/png, image/jpeg\"\r\n                //         onChange={handleFileInputChange}\r\n                //     />\r\n                //     Vybrať\r\n                // </UploadButton>\r\n\r\n                // {files.length > 0 && (\r\n                //     <div>\r\n                //         <h2>2. Vybrat hlavný obrázok</h2>\r\n                //     </div>\r\n                // )}\r\n\r\n                // <NewImagesContainer>\r\n                //     {files.length > 0 && files.map(({ url }, idx) => (\r\n                //         <NewImageContainer key={idx}>\r\n                //             <DeleteButton >&#10005;</DeleteButton>\r\n                //             <img src={url} alt={`new image ${idx}`} />\r\n                //         </NewImageContainer>\r\n                //     ))}\r\n                // </NewImagesContainer>\r\n","import styled from 'styled-components'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\n\r\nexport const ModalContainer = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    z-index: 99999;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    background-color: rgba(0,0,0,0.3);\r\n`\r\n\r\nexport const Modal = styled.div`\r\n    width:100%;\r\n    max-width: 65rem;\r\n    max-height: 60rem;\r\n\r\n    overflow-y: scroll;\r\n\r\n    padding: 2rem;\r\n    border-radius: .5rem;\r\n    background-color: var(--background-primary-color);\r\n    color: var(--primary-text-color);\r\n\r\n    position: relative;\r\n    z-index: 999999;\r\n\r\n    h2{ \r\n        margin-bottom: 2rem;\r\n        text-align: center;\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n\r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        background:  var(--background-primary-color);\r\n    }\r\n\r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: var(--primary-color);\r\n    }\r\n\r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: var(--primary-color);\r\n    }\r\n`\r\n\r\nexport const CloseButton = styled.button`\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 99999;\r\n\r\n    border: none;\r\n    outline: none;\r\n    opacity: 0;\r\n\r\n    &:focus {\r\n        outline: none\r\n    }\r\n`\r\n\r\nexport const SearchButton = styled(CustomButton)`\r\n    display: block;\r\n    margin-left: auto;\r\n    margin-top: 2rem;\r\n    background-color: var(--primary-color);\r\n`\r\n\r\n\r\nexport const TableContainer = styled.div`\r\n    margin: 5rem 0;\r\n    overflow-x: auto;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n\r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        background:  var(--background-primary-color);\r\n    }\r\n\r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: var(--primary-color);\r\n    }\r\n\r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: var(--primary-color);\r\n    }\r\n`\r\n\r\nexport const TableCol = styled.div`\r\n    min-width: inherit;\r\n    padding: 2rem;\r\n    text-align: center;\r\n    background-color: ${({ isHead }) => !isHead ? \"var(--container-background-color)\" : \"unset\"};\r\n    border-bottom: ${({ isHead }) => isHead ? \"1px solid var(--secondary-text-color)\" : \"unset\"};\r\n\r\n    img {\r\n        width: 5rem;\r\n    }\r\n\r\n`\r\n\r\nexport const ProductTableHead = styled.div`\r\n    width: 100%;\r\n\r\n    display: grid;\r\n    align-items: center;\r\n    grid-template-columns: 15rem 10rem 35rem 20rem 10rem 20rem;\r\n    font-weight: bolder;\r\n\r\n`\r\nexport const ProductTableRow = styled.div`\r\n    cursor: pointer;\r\n    display: grid;\r\n    align-content: center;\r\n    grid-template-columns: 15rem 10rem 35rem 20rem 10rem 20rem;\r\n    margin-bottom: 1rem;\r\n    box-shadow: var(--container-shadow);\r\n    background-color: var(--container-background-color);\r\n\r\n    transition: all .3s ease-out;\r\n\r\n\r\n    &:hover {\r\n        ${TableCol} {\r\n            background-color: var(--primary-color);\r\n            font-weight: bolder;\r\n            color: var(--button-font-color);\r\n        }\r\n    }\r\n\r\n\r\n`","import React, { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport CustomInput from '../custom-input/custom-input.component'\r\nimport { useFetchByQuery } from '../../hooks/useFetch'\r\n\r\nimport { formatAvailable } from '../../utils/orders.utils'\r\n\r\nimport {\r\n    ModalContainer,\r\n    Modal,\r\n    CloseButton,\r\n    SearchButton,\r\n    ProductTableHead,\r\n    ProductTableRow,\r\n    TableCol,\r\n    TableContainer\r\n} from './modal-get-product-data.styles'\r\n\r\nconst GetProductDataModal = ({ close, getSingleProduct, productObj, setProductObj }) => {\r\n    const [searchQuery, setSearchQuery] = useState(\"\")\r\n\r\n    const [productItems, setProductItems] = useState([])\r\n\r\n    const [query, setQuery] = useState({\r\n        limit: 10,\r\n        skip: 0,\r\n        filters: {\r\n            type: productObj.type\r\n        },\r\n        sortBy: {\r\n            date: -1\r\n        }\r\n    })\r\n    const { response, isLoading, refetch } = useFetchByQuery(\"api/admin/products/filter\", query)\r\n\r\n    const handleSearch = () => {\r\n        if (searchQuery === '') return\r\n        setQuery({\r\n            ...query,\r\n            query: searchQuery\r\n        })\r\n        refetch()\r\n    }\r\n    const handleSearchOnEnter = (e) => {\r\n        if (searchQuery !== \"\") {\r\n            if (e.key === 'Enter') {\r\n                setQuery({\r\n                    ...query,\r\n                    query: searchQuery,\r\n                })\r\n                refetch()\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleClick = (id) => {\r\n        getSingleProduct(id, (data) => {\r\n            const { product } = data\r\n\r\n            if (product.type === 1 || product.type === 2 || product.type === 4) {\r\n                delete product['__v']\r\n                delete product['soldAmount']\r\n                delete product['ordered']\r\n                delete product['_id']\r\n                delete product['boughtTogether']\r\n                delete product['contactLenses']\r\n                delete product['date']\r\n\r\n                setProductObj({\r\n                    ...product,\r\n                    // id: product._id,\r\n                    ...(!product._id) && { _id: product._id },\r\n                    price: (product.price / 100).toFixed(2),\r\n                    eanCode: product.eanCode,\r\n                    image: product.image._id,\r\n                    specs: {\r\n                        ...product.specs,\r\n                        size: [...Array(4)].map((value, idx) => product.specs.size[idx] ? product.specs.size[idx] : 0)\r\n                    }\r\n                })\r\n            }\r\n            if (product.type === 3) {\r\n                delete product['__v']\r\n                delete product['soldAmount']\r\n                delete product['ordered']\r\n                delete product['_id']\r\n                delete product['boughtTogether']\r\n                delete product['specs']\r\n                delete product['date']\r\n\r\n                setProductObj({\r\n                    ...product,\r\n                    // id: product._id,\r\n                    ...(!product._id) && { _id: product._id },\r\n                    price: (product.price / 100).toFixed(2),\r\n                    // colorCode: product.colorCode ?? \"\",\r\n                    image: product.image._id,\r\n                    // specs: {\r\n                    //     ...product.specs,\r\n                    //     size: [...Array(4)].map((value, idx) => product.specs.size[idx] ? product.specs.size[idx] : 0)\r\n                    // }\r\n                })\r\n            }\r\n        })\r\n        close()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isLoading) return\r\n\r\n        setProductItems(response.products)\r\n    }, [isLoading])\r\n\r\n    return ReactDOM.createPortal((\r\n        <ModalContainer>\r\n            <CloseButton onClick={close} />\r\n            <Modal>\r\n                <h2>Vyhľadať produkt</h2>\r\n                <div>\r\n                    <CustomInput\r\n                        label='Názov produktu, eanCode alebo popis'\r\n                        value={searchQuery}\r\n                        handleChange={(e) => setSearchQuery(e.target.value)}\r\n                        onKeyPress={handleSearchOnEnter}\r\n                    />\r\n                </div>\r\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\r\n\r\n                <TableContainer>\r\n                    <ProductTableHead>\r\n                        <TableCol isHead>eanKód</TableCol>\r\n                        <TableCol isHead>Obrázok</TableCol>\r\n                        <TableCol isHead>Názov</TableCol>\r\n                        <TableCol isHead>Značka</TableCol>\r\n                        <TableCol isHead>Cena</TableCol>\r\n                        <TableCol isHead>Na sklade</TableCol>\r\n                    </ProductTableHead>\r\n                    {productItems.map((product, idx) => (\r\n                        <ProductTableRow key={idx} onClick={() => handleClick(product._id)}>\r\n                            <TableCol>{product.eanCode}</TableCol>\r\n                            <TableCol>\r\n                                {product?.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${product.image.imagePath}`} alt={product.image.alt} />}\r\n                            </TableCol>\r\n                            <TableCol>{product.name}</TableCol>\r\n                            <TableCol>{product.brand}</TableCol>\r\n                            <TableCol>{(product.price / 100).toFixed(2)}€</TableCol>\r\n                            <TableCol>{product.type === 6 ? 'Služba' : formatAvailable(product.available)}</TableCol>\r\n                        </ProductTableRow>\r\n                    ))}\r\n                </TableContainer>\r\n            </Modal>\r\n        </ModalContainer>\r\n    ), document.getElementById('portal'))\r\n}\r\n\r\nexport default GetProductDataModal\r\n","import styled from 'styled-components'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\n\r\nexport const ModalContainer = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    z-index: 99999;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    background-color: rgba(0,0,0,0.3);\r\n`\r\n\r\nexport const Modal = styled.div`\r\n    width:100%;\r\n    max-width: 65rem;\r\n    max-height: 60rem;\r\n\r\n    overflow-y: scroll;\r\n\r\n    padding: 2rem;\r\n    border-radius: .5rem;\r\n    background-color: var(--background-primary-color);\r\n    color: var(--primary-text-color);\r\n\r\n    position: relative;\r\n    z-index: 999999;\r\n\r\n    h2{ \r\n        margin-bottom: 2rem;\r\n        text-align: center;\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n\r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        background:  var(--background-primary-color);\r\n    }\r\n\r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: var(--primary-color);\r\n    }\r\n\r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: var(--primary-color);\r\n    }\r\n`\r\n\r\nexport const CloseButton = styled.button`\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 99999;\r\n\r\n    border: none;\r\n    outline: none;\r\n    opacity: 0;\r\n\r\n    &:focus {\r\n        outline: none\r\n    }\r\n`\r\n\r\nexport const SearchButton = styled(CustomButton)`\r\n    display: block;\r\n    margin-left: auto;\r\n    margin-top: 2rem;\r\n    background-color: var(--primary-color);\r\n`\r\n\r\n\r\nexport const TableContainer = styled.div`\r\n    margin: 5rem 0;\r\n    overflow-x: auto;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n\r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        background:  var(--background-primary-color);\r\n    }\r\n\r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: var(--primary-color);\r\n    }\r\n\r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: var(--primary-color);\r\n    }\r\n`\r\n\r\nexport const TableCol = styled.div`\r\n    min-width: inherit;\r\n    padding: 2rem;\r\n    text-align: center;\r\n    background-color: ${({ isHead }) => !isHead ? \"var(--container-background-color)\" : \"unset\"};\r\n    border-bottom: ${({ isHead }) => isHead ? \"1px solid var(--secondary-text-color)\" : \"unset\"};\r\n\r\n    img {\r\n        width: 5rem;\r\n    }\r\n\r\n`\r\n\r\nexport const ProductTableHead = styled.div`\r\n    width: 100%;\r\n\r\n    display: grid;\r\n    align-items: center;\r\n    grid-template-columns: 15rem 10rem 35rem 20rem 10rem 20rem;\r\n    font-weight: bolder;\r\n\r\n`\r\nexport const ProductTableRow = styled.div`\r\n    cursor: pointer;\r\n    display: grid;\r\n    align-content: center;\r\n    grid-template-columns: 15rem 10rem 35rem 20rem 10rem 20rem;\r\n    margin-bottom: 1rem;\r\n    box-shadow: var(--container-shadow);\r\n    background-color: var(--container-background-color);\r\n\r\n    transition: all .3s ease-out;\r\n\r\n\r\n    &:hover {\r\n        ${TableCol} {\r\n            background-color: var(--primary-color);\r\n            font-weight: bolder;\r\n            color: var(--button-font-color);\r\n        }\r\n    }\r\n\r\n\r\n`","import React, { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport CustomInput from '../custom-input/custom-input.component'\r\nimport { useFetchByQuery } from '../../hooks/useFetch'\r\n\r\nimport { formatAvailable } from '../../utils/orders.utils'\r\n\r\n\r\nimport {\r\n    ModalContainer,\r\n    Modal,\r\n    CloseButton,\r\n    SearchButton,\r\n    ProductTableHead,\r\n    ProductTableRow,\r\n    TableCol,\r\n    TableContainer\r\n} from './modal-get-lenses-data.styles'\r\n\r\nconst GetLensesDataModal = ({ close, getSingleLenses, productObj, setProductObj, fillProductData }) => {\r\n    const [searchQuery, setSearchQuery] = useState(\"\")\r\n\r\n    const [productItems, setProductItems] = useState([])\r\n\r\n    const [query, setQuery] = useState({\r\n        limit: 10,\r\n        skip: 0,\r\n    })\r\n\r\n    const { response, isLoading, refetch } = useFetchByQuery(\"api/admin/lenses/filter\", query)\r\n\r\n    const handleSearch = () => {\r\n        if (searchQuery === '') return\r\n        setQuery({\r\n            ...query,\r\n            query: searchQuery\r\n        })\r\n        refetch()\r\n    }\r\n    const handleSearchOnEnter = (e) => {\r\n        if (searchQuery !== \"\") {\r\n            if (e.key === 'Enter') {\r\n                setQuery({\r\n                    ...query,\r\n                    query: searchQuery\r\n                })\r\n                refetch()\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleClick = (id) => {\r\n        getSingleLenses(id, (data) => {\r\n            const { lenses } = data\r\n\r\n            delete lenses['__v']\r\n            delete lenses['_id']\r\n            delete lenses['soldAmount']\r\n            delete lenses['dateCreated']\r\n\r\n            fillProductData({\r\n                ...lenses,\r\n                image: lenses.image._id,\r\n                lensType: lenses.type || \"číre\",\r\n                dioptric: lenses.dioptric || false,\r\n                type: 0,\r\n                price: (lenses.price / 100).toFixed(2),\r\n            })\r\n\r\n        })\r\n        close()\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isLoading) return\r\n\r\n        setProductItems(response.lenses)\r\n    }, [isLoading])\r\n\r\n    return ReactDOM.createPortal((\r\n        <ModalContainer>\r\n            <CloseButton onClick={close} />\r\n            <Modal>\r\n                <h2>Vyhľadať šošovky</h2>\r\n                <div>\r\n                    <CustomInput\r\n                        label='Názov šošoviek, eanCode alebo popis'\r\n                        value={searchQuery}\r\n                        handleChange={(e) => setSearchQuery(e.target.value)}\r\n                        onKeyPress={handleSearchOnEnter}\r\n                    />\r\n                </div>\r\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\r\n\r\n                <TableContainer>\r\n                    <ProductTableHead>\r\n                        <TableCol isHead>eanKód</TableCol>\r\n                        <TableCol isHead>Názov</TableCol>\r\n                        <TableCol isHead>Dioptrie</TableCol>\r\n                        <TableCol isHead>Cylinder</TableCol>\r\n                        <TableCol isHead>Cena</TableCol>\r\n                    </ProductTableHead>\r\n                    {productItems.map((product, idx) => (\r\n                        <ProductTableRow key={idx} onClick={() => handleClick(product._id)}>\r\n                            <TableCol>{product.eanCode}</TableCol>\r\n                            <TableCol>{product.name}</TableCol>\r\n                            <TableCol>\r\n                                {product.dioptersRange && <p>{`od ${product.dioptersRange[0]} do ${product.dioptersRange[1]}`}</p>}\r\n                            </TableCol>\r\n                            <TableCol>\r\n                                {product.cylinderRange && <p>{`od ${product.cylinderRange[0]} do ${product.cylinderRange[1]}`}</p>}\r\n                            </TableCol>\r\n                            <TableCol>{(product.price / 100).toFixed(2)}€</TableCol>\r\n                        </ProductTableRow>\r\n                    ))}\r\n                </TableContainer>\r\n            </Modal>\r\n        </ModalContainer>\r\n    ), document.getElementById('portal'))\r\n}\r\n\r\nexport default GetLensesDataModal\r\n","import styled from 'styled-components'\r\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\r\n\r\nexport const BrandedCheckbox = styled(CustomCheckbox)`\r\n    margin-top: 2rem;\r\n`\r\n\r\nexport const ImageContainer = styled.div`\r\n    margin-top: 2rem;\r\n    \r\n`\r\n\r\nexport const ProductImage = styled.div`\r\n    cursor: pointer;\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content:center;\r\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\r\n    margin: 3rem 0 2rem;\r\n    min-height: 20rem;\r\n    position: relative;\r\n    /* max-width: 45rem; */\r\n\r\n    img {\r\n        width: 100%;\r\n        object-fit:cover;\r\n        object-position:center;\r\n        left: 0;\r\n        top: 0;\r\n    }\r\n`\r\n\r\nexport const GlassesContainerForm = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 3rem;\r\n    align-items: start;\r\n    padding-bottom: 10rem;\r\n`\r\n\r\nexport const GlassesContainer = styled.div`\r\n    position: relative;\r\n    padding: 2rem; \r\n    box-shadow: var(--container-shadow);\r\n    background-color: var(--container-background-color);\r\n\r\n    border-radius: .5rem;\r\n`\r\n\r\nexport const GlassesParameterContainer = styled.div`\r\n    padding: 2rem; \r\n    box-shadow: var(--container-shadow);\r\n    background-color: var(--container-background-color);\r\n\r\n    border-radius: .5rem;\r\n    margin-bottom: 3rem;\r\n\r\n    h4 {\r\n        margin-top: 2rem;\r\n    }\r\n`\r\n\r\nexport const StockContainer = styled.div`\r\n    padding: 2rem; \r\n    box-shadow: var(--container-shadow);\r\n    background-color: var(--container-background-color);\r\n\r\n    border-radius: .5rem;\r\n`\r\n\r\nexport const CustomSelect = styled.select`\r\n    margin-top: 1.5rem;\r\n    min-width: 16.5rem;\r\n    width: 100%;\r\n    background-color: var(--input-background-color);\r\n    color: var(--input-color);\r\n    border: none;\r\n    padding: .5rem .5rem .5rem 1rem;\r\n    font-size: inherit;\r\n    font-family: inherit;\r\n    display: block;\r\n`\r\n\r\nexport const CopyButton = styled.button`\r\n    cursor: pointer;\r\n    position: absolute;\r\n    right: 2rem;\r\n    top: 2rem;\r\n    color: var(--primary-color);\r\n`\r\n\r\nexport const DeleteButton = styled.button`\r\n    cursor: pointer;\r\n    display:none;\r\n    border-radius:50%;\r\n    position: absolute;\r\n    border: none;\r\n    background-color: var(--color-red);\r\n    color: #fff;\r\n    padding: .5rem .75rem;\r\n    font-size: 1rem;\r\n    right: .5rem;\r\n    top: .5rem;\r\n\r\n    outline: none;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`\r\n\r\nexport const NewImageContainer = styled.div`\r\n    position: relative;\r\n    min-width: 15rem;\r\n    width: 15rem;\r\n    height: 15rem;\r\n\r\n\r\n    border: ${({ isPrimary }) => isPrimary ? '1px solid var(--primary-color)' : 'unset'};\r\n    \r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: contain;\r\n    }\r\n\r\n    &:hover ${DeleteButton} {\r\n        display: block\r\n    }\r\n`\r\n\r\nexport const NewImagesContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 3rem;\r\n    /* overflow-x: auto; */\r\n    padding-bottom: 2rem;\r\n    margin-bottom: 2rem;\r\n\r\n`","import React, { useState, useEffect } from 'react'\r\n\r\nimport CustomInput from '../custom-input/custom-input.component'\r\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\r\n\r\nimport { glassesColors, glassesMaterials, glassesShapes } from '../../utils/warehouse.utils'\r\n\r\nimport { AiOutlineCopy } from 'react-icons/ai'\r\n\r\nimport {\r\n    ImageContainer,\r\n    ProductImage,\r\n    GlassesContainerForm,\r\n    GlassesContainer,\r\n    GlassesParameterContainer,\r\n    StockContainer,\r\n    CustomSelect,\r\n    BrandedCheckbox,\r\n    CopyButton,\r\n    UploadButton,\r\n    DeleteButton,\r\n    NewImageContainer,\r\n    NewImagesContainer\r\n} from './product-glasses-form.styles.jsx'\r\n\r\nconst ProductGlassesForm = ({\r\n    product,\r\n    handleChange,\r\n    selectedImage,\r\n    retailNames,\r\n    currentUser,\r\n    checkParameter,\r\n    handleAvailableChange,\r\n    handleGlassesParametersChange,\r\n    handleGlassesSpecsSizeChange,\r\n    handleSpecsChange,\r\n    glassesParameters,\r\n    setImageModal,\r\n    // isUpdating,\r\n    filters,\r\n    handleGetProductData,\r\n    productObj\r\n}) => {\r\n    const [isBranded, setIsBranded] = useState(true)\r\n\r\n    const handleIsBrandedClick = (isBrandedBool) => {\r\n        if (isBrandedBool) {\r\n            handleChange({\r\n                target: {\r\n                    name: \"brand\",\r\n                    value: \"Neznačkové\"\r\n                }\r\n            })\r\n            setIsBranded(false)\r\n        } else {\r\n            handleChange({\r\n                target: {\r\n                    name: \"brand\",\r\n                    value: \"\"\r\n                }\r\n            })\r\n\r\n            setIsBranded(true)\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (product.brand === \"Neznačkové\") setIsBranded(false)\r\n    }, [isBranded])\r\n\r\n    return (\r\n        <GlassesContainerForm>\r\n            <GlassesContainer>\r\n                <CopyButton onClick={() => handleGetProductData(true)}><AiOutlineCopy /></CopyButton>\r\n                <h3>Základné informácie</h3>\r\n                <CustomInput\r\n                    label=\"eanCode*\"\r\n                    type='text'\r\n                    name='eanCode'\r\n                    value={product.eanCode.toString() ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                />\r\n                <CustomInput\r\n                    label=\"Názov produktu*\"\r\n                    type='text'\r\n                    name='name'\r\n                    value={product.name ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                />\r\n\r\n                <BrandedCheckbox\r\n                    label={\"Značkové\"}\r\n                    isActive={isBranded}\r\n                    handleClick={() => handleIsBrandedClick(isBranded)}\r\n                />\r\n\r\n                {isBranded && (\r\n                    <React.Fragment>\r\n                        <CustomInput\r\n                            label=\"Značka\"\r\n                            type='text'\r\n                            name='brand'\r\n                            value={product.brand ?? \"\"}\r\n                            handleChange={(e) => handleChange(e)}\r\n                            list=\"brands\"\r\n                        />\r\n                        <datalist id=\"brands\">\r\n                            {filters?.brands && filters?.brands.map((brand, idx) => (\r\n                                <option key={idx} value={brand} />\r\n                            ))}\r\n                        </datalist>\r\n                    </React.Fragment>\r\n                )}\r\n\r\n                {/* <CustomInput\r\n                    label=\"Kategória\"\r\n                    type='text'\r\n                    name='category'\r\n                    value={product.category ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                    list=\"categories\"\r\n\r\n                /> */}\r\n\r\n                {/* <datalist id=\"categories\">\r\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\r\n                        <option key={idx} value={brand} />\r\n                    ))}\r\n                </datalist> */}\r\n\r\n                {/* <CustomInput\r\n                    label=\"Link\"\r\n                    type='text'\r\n                    name='link'\r\n                    value={product.link ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                /> */}\r\n\r\n                <CustomTextarea\r\n                    label=\"Popis\"\r\n                    name='description'\r\n                    rows='5'\r\n                    value={product.description ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                    required\r\n                />\r\n\r\n                <CustomInput\r\n                    label=\"Cena*\"\r\n                    type='text'\r\n                    name='price'\r\n                    value={product.price.toString() ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                    required\r\n                />\r\n\r\n                <ImageContainer>\r\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\r\n                        {!selectedImage && \"Vybrať obrázok\"}\r\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\r\n                    </ProductImage>\r\n                </ImageContainer>\r\n\r\n                <NewImagesContainer>\r\n                    {productObj?.bonusImages && productObj?.bonusImages.map((img, idx) => (\r\n                        <NewImageContainer key={idx}>\r\n                            {/* <DeleteButton >&#10005;</DeleteButton> */}\r\n                            <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\r\n                        </NewImageContainer>\r\n                    ))}\r\n                </NewImagesContainer>\r\n            </GlassesContainer>\r\n            <div>\r\n                <GlassesParameterContainer>\r\n                    <h3>Parametre</h3>\r\n                    <CustomInput\r\n                        label=\"Farebný kód\"\r\n                        type='text'\r\n                        name='colorCode'\r\n                        value={glassesParameters.colorCode ?? \"\"}\r\n                        handleChange={(e) => handleGlassesParametersChange(e)}\r\n                    />\r\n                    <div>\r\n                        <CustomInput\r\n                            label=\"Farba rámu\"\r\n                            type='text'\r\n                            name='frameColor'\r\n                            value={glassesParameters.specs.frameColor ?? \"\"}\r\n                            handleChange={(e) => handleSpecsChange(e)}\r\n                            list=\"colors\"\r\n\r\n                        />\r\n                        <datalist id=\"colors\">\r\n                            {glassesColors.map((color, idx) => (\r\n                                <option key={idx} value={color} />\r\n                            ))}\r\n                        </datalist>\r\n                        <CustomInput\r\n                            label=\"Materiál rámu\"\r\n                            type='text'\r\n                            name='frameMaterial'\r\n                            value={glassesParameters.specs.frameMaterial ?? \"\"}\r\n                            handleChange={(e) => handleSpecsChange(e)}\r\n                            list=\"materials\"\r\n\r\n                        />\r\n                        <datalist id=\"materials\">\r\n                            {glassesMaterials.map((material, idx) => (\r\n                                <option key={idx} value={material} />\r\n                            ))}\r\n                        </datalist>\r\n                        <CustomInput\r\n                            label=\"Tvar rámu\"\r\n                            type='text'\r\n                            name='frameStyle'\r\n                            value={glassesParameters.specs.frameStyle ?? \"\"}\r\n                            handleChange={(e) => handleSpecsChange(e)}\r\n                            list=\"shapes\"\r\n                        />\r\n                        <datalist id=\"shapes\">\r\n                            {glassesShapes.map((shape, idx) => (\r\n                                <option key={idx} value={shape} />\r\n                            ))}\r\n                        </datalist>\r\n                        {/* <CustomInput\r\n                            label=\"Farba šošovky\"\r\n                            type='text'\r\n                            name='lensColor'\r\n                            value={glassesParameters.specs.lensColor ?? \"\"}\r\n                            handleChange={(e) => handleSpecsChange(e)}\r\n                        /> */}\r\n                        <CustomSelect\r\n                            label=\"Pohlavie\"\r\n                            type='text'\r\n                            name='sex'\r\n                            value={glassesParameters?.specs?.sex || \"\"}\r\n                            onChange={(e) => handleSpecsChange(e)}\r\n                        >\r\n                            <option value=''>-</option>\r\n                            <option value='M'>Pánske</option>\r\n                            <option value='W'>Dámske</option>\r\n                            <option value='CH'>Detské</option>\r\n                            <option value='U'>Nezáleží</option>\r\n                        </CustomSelect>\r\n                    </div>\r\n                    <div>\r\n                        <h4>Velkosť</h4>\r\n                        {glassesParameters.specs.size.map((value, idx) => (\r\n                            <CustomInput\r\n                                key={idx}\r\n                                label={idx === 0 ? \"Šírka očnice (mm)\" : idx === 1 ? \"Výška očnice (mm)\" : idx === 2 ? \"Veľkosť nosníka (mm)\" : \"Dĺžka stranice (mm)\"}\r\n                                type='text'\r\n                                name='size'\r\n                                value={checkParameter(glassesParameters.specs.size, idx)}\r\n                                handleChange={(e) => handleGlassesSpecsSizeChange(e, idx)}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </GlassesParameterContainer>\r\n                {currentUser.admin >= 2 ? (\r\n                    <StockContainer>\r\n                        <h3>Skladové zásoby</h3>\r\n                        {product.available.map((value, idx) => {\r\n                            if (idx === 0) return\r\n                            return (\r\n                                <CustomInput\r\n                                    key={idx}\r\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[idx]}\r\n                                    type='number'\r\n                                    name={\"available\"}\r\n                                    value={checkParameter(product.available, idx)}\r\n                                    handleChange={e => handleAvailableChange(e, idx)}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </StockContainer>\r\n                ) : (\r\n                    <StockContainer>\r\n                        <h3>Skladové zásoby</h3>\r\n                        <CustomInput\r\n                            label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[currentUser.premises]}\r\n                            type='number'\r\n                            name={\"available\"}\r\n                            value={checkParameter(product.available, currentUser.premises)}\r\n                            handleChange={e => handleAvailableChange(e, currentUser.premises)}\r\n                        />\r\n                    </StockContainer>\r\n                )}\r\n            </div>\r\n        </GlassesContainerForm>\r\n    )\r\n}\r\n\r\nexport default ProductGlassesForm\r\n","import styled from 'styled-components'\r\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\r\n\r\n\r\nexport const LensesFormContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 3rem;\r\n    align-items: start;\r\n    padding-bottom: 10rem;\r\n\r\n\r\n    @media all and (max-width: 1000px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`\r\n\r\nexport const LensesContainer = styled.div`\r\n    position: relative;\r\n    /* width: 45rem; */\r\n    padding: 2rem; \r\n    box-shadow: var(--container-shadow);\r\n    background-color: var(--container-background-color);\r\n    border-radius: .5rem;\r\n    /* display: inline-block; */\r\n    /* padding-bottom: 4rem;  */\r\n    margin-bottom: 5rem;\r\n`\r\n\r\nexport const LensesParametersContainer = styled.div`\r\n    padding: 2rem; \r\n    box-shadow: var(--container-shadow);\r\n    background-color: var(--container-background-color);\r\n\r\n    h3 {\r\n        /* margin-bottom: 1rem; */\r\n    }\r\n\r\n    h4 {\r\n        margin-top: 2rem;\r\n    }\r\n`\r\n\r\nexport const ImageContainer = styled.div`\r\n    margin-top: 2rem;\r\n    \r\n`\r\n\r\nexport const ProductImage = styled.div`\r\n    cursor: pointer;\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content:center;\r\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\r\n    margin: 3rem 0 2rem;\r\n    min-height: 20rem;\r\n    position: relative;\r\n    /* max-width: 45rem; */\r\n\r\n    img {\r\n        width: 100%;\r\n        object-fit:cover;\r\n        object-position:center;\r\n        left: 0;\r\n        top: 0;\r\n    }\r\n`\r\nexport const SubGridContainer = styled.div`\r\n\r\n`\r\n\r\nexport const TypesContainer = styled.div`\r\n    padding: 2rem;\r\n    box-shadow: var(--container-shadow);\r\n    background-color: var(--container-background-color);\r\n    margin-bottom: 3rem;\r\n\r\n    h3 {\r\n        margin-bottom: 1rem;\r\n    }\r\n\r\n    h4 {\r\n        margin-top: 2rem;\r\n    }\r\n\r\n    div {\r\n        :not(:last-child) {\r\n            margin-bottom: 1rem;\r\n        }\r\n    }\r\n`\r\n\r\nexport const TypeCheckbox = styled(CustomCheckbox)`\r\n    &:not(:last-child) {\r\n        margin-right: 2rem;\r\n    }\r\n`\r\n\r\nexport const CopyButton = styled.button`\r\n    cursor: pointer;\r\n    position: absolute;\r\n    right: 2rem;\r\n    top: 2rem;\r\n    color: var(--primary-color);\r\n`","import React from 'react'\r\n\r\nimport CustomInput from '../custom-input/custom-input.component'\r\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\r\n\r\nimport { lensesTypes } from '../../context/warehouse/warehouse.utils'\r\n\r\nimport { AiOutlineCopy } from 'react-icons/ai'\r\n\r\nimport {\r\n    LensesFormContainer,\r\n    LensesContainer,\r\n    LensesParametersContainer,\r\n    ProductImage,\r\n    ImageContainer,\r\n    TypesContainer,\r\n    SubGridContainer,\r\n    TypeCheckbox,\r\n    CopyButton\r\n} from './product-lenses-form.styles'\r\n\r\nconst ProductLensesForm = ({\r\n    lenses,\r\n    selectedImage,\r\n    setImageModal,\r\n    handleChange,\r\n    handleParameterChange,\r\n    checkParameter,\r\n    filters,\r\n    handleGetProductData\r\n}) => {\r\n    return (\r\n        <LensesFormContainer>\r\n            <LensesContainer>\r\n                <CopyButton onClick={() => handleGetProductData(true)}><AiOutlineCopy /></CopyButton>\r\n                <h3>Základné informácie</h3>\r\n                <CustomInput\r\n                    label=\"eanCode*\"\r\n                    type='text'\r\n                    name='eanCode'\r\n                    value={lenses?.eanCode?.toString() ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                />\r\n                <CustomInput\r\n                    label=\"Názov šošoviek*\"\r\n                    type='text'\r\n                    name='name'\r\n                    value={lenses.name ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                />\r\n\r\n                <CustomInput\r\n                    label=\"Značka*\"\r\n                    type='text'\r\n                    name='brand'\r\n                    value={lenses.brand ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                    list=\"brands\"\r\n                />\r\n\r\n                <datalist id=\"brands\">\r\n                    {filters?.brands && filters?.brands.map((brand, idx) => (\r\n                        <option key={idx} value={brand} />\r\n                    ))}\r\n                </datalist>\r\n\r\n                <CustomTextarea\r\n                    label=\"Popis*\"\r\n                    name='description'\r\n                    rows='5'\r\n                    value={lenses.description ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                    required\r\n                />\r\n\r\n                <CustomInput\r\n                    label=\"Cena*\"\r\n                    type='text'\r\n                    name='price'\r\n                    value={lenses.price.toString() ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                    required\r\n                />\r\n\r\n                <ImageContainer>\r\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\r\n                        {!selectedImage && \"Vybrať obrázok\"}\r\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\r\n                    </ProductImage>\r\n                </ImageContainer>\r\n            </LensesContainer>\r\n            <SubGridContainer>\r\n                <TypesContainer>\r\n                    <h3>Druh</h3>\r\n\r\n                    <div>\r\n                        {lensesTypes.map((type, idx) => (\r\n                            <TypeCheckbox\r\n                                key={idx}\r\n                                label={type}\r\n                                value={type}\r\n                                name='lensType'\r\n                                isActive={type === lenses?.lensType}\r\n                                handleClick={() => handleChange({\r\n                                    target: {\r\n                                        name: \"lensType\",\r\n                                        value: type\r\n                                    }\r\n                                })}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n\r\n                    {lenses.lensType === \"slnečné\" && (\r\n                        <div>\r\n                            <TypeCheckbox\r\n                                label=\"Polarizované\"\r\n                                value={lenses.photochromic}\r\n                                name='photochromic'\r\n                                isActive={lenses.photochromic}\r\n                                handleClick={() => handleChange({\r\n                                    target: {\r\n                                        name: \"photochromic\",\r\n                                        value: !lenses.photochromic\r\n                                    }\r\n                                })}\r\n                            />\r\n                        </div>\r\n                    )}\r\n\r\n                    <div>\r\n                        <TypeCheckbox\r\n                            label=\"Dioptrické\"\r\n                            value={lenses.dioptric}\r\n                            name='dioptric'\r\n                            isActive={lenses.dioptric}\r\n                            handleClick={() => handleChange({\r\n                                target: {\r\n                                    name: \"dioptric\",\r\n                                    value: !lenses.dioptric\r\n                                }\r\n                            })}\r\n                        />\r\n                    </div>\r\n\r\n                    <CustomInput\r\n                        label=\"Farba šošovky\"\r\n                        type='text'\r\n                        name='color'\r\n                        value={lenses.color ?? \"\"}\r\n                        handleChange={(e) => handleChange(e)}\r\n                    />\r\n                </TypesContainer>\r\n                <LensesParametersContainer>\r\n                    <h3>Parametre</h3>\r\n\r\n                    <h4>Dioptrie</h4>\r\n                    {[...Array(2)].map((value, idx) => {\r\n                        const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\r\n\r\n                        return (\r\n                            <div key={idx}>\r\n                                <CustomInput\r\n                                    label={inputLabel}\r\n                                    type='number'\r\n                                    name='dioptersRange'\r\n                                    value={checkParameter(lenses.dioptersRange, idx)}\r\n                                    handleChange={(e) => handleParameterChange(e, idx)}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                    <h4>Cylinder</h4>\r\n                    {[...Array(2)].map((value, idx) => {\r\n                        const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\r\n\r\n                        return (\r\n                            <div key={idx}>\r\n                                <CustomInput\r\n                                    label={inputLabel}\r\n                                    type='number'\r\n                                    name='cylinderRange'\r\n                                    value={checkParameter(lenses.cylinderRange, idx)}\r\n                                    handleChange={(e) => handleParameterChange(e, idx)}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </LensesParametersContainer>\r\n            </SubGridContainer>\r\n        </LensesFormContainer>\r\n    )\r\n}\r\n\r\nexport default ProductLensesForm\r\n","import styled from 'styled-components'\r\n\r\nexport const ImageContainer = styled.div`\r\n    margin-top: 2rem;\r\n    \r\n`\r\n\r\nexport const ProductImage = styled.div`\r\n    cursor: pointer;\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content:center;\r\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\r\n    margin: 3rem 0 2rem;\r\n    min-height: 20rem;\r\n    position: relative;\r\n    /* max-width: 45rem; */\r\n\r\n    img {\r\n        width: 100%;\r\n        object-fit:cover;\r\n        object-position:center;\r\n        left: 0;\r\n        top: 0;\r\n    }\r\n`\r\n\r\nexport const AccessoriesFormContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 3rem;\r\n    align-items: start;\r\n    padding-bottom: 10rem;\r\n\r\n`\r\n\r\nexport const AccessoriesContainer = styled.div`\r\n    padding: 2rem; \r\n    box-shadow: var(--container-shadow);\r\n    background-color: var(--container-background-color);\r\n    border-radius: .5rem;\r\n`\r\n\r\nexport const StockContainer = styled.div`\r\n    padding: 2rem; \r\n    box-shadow: var(--container-shadow);\r\n    background-color: var(--container-background-color);\r\n    border-radius: .5rem;\r\n`\r\n\r\nexport const DeleteButton = styled.button`\r\n    cursor: pointer;\r\n    display:none;\r\n    border-radius:50%;\r\n    position: absolute;\r\n    border: none;\r\n    background-color: var(--color-red);\r\n    color: #fff;\r\n    padding: .5rem .75rem;\r\n    font-size: 1rem;\r\n    right: .5rem;\r\n    top: .5rem;\r\n\r\n    outline: none;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`\r\n\r\nexport const NewImageContainer = styled.div`\r\n    position: relative;\r\n    min-width: 15rem;\r\n    width: 15rem;\r\n    height: 15rem;\r\n\r\n\r\n    border: ${({ isPrimary }) => isPrimary ? '1px solid var(--primary-color)' : 'unset'};\r\n    \r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: contain;\r\n    }\r\n\r\n    &:hover ${DeleteButton} {\r\n        display: block\r\n    }\r\n`\r\n\r\nexport const NewImagesContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 3rem;\r\n    /* overflow-x: auto; */\r\n    padding-bottom: 2rem;\r\n    margin-bottom: 2rem;\r\n\r\n`","import React from 'react'\r\n\r\nimport CustomInput from '../custom-input/custom-input.component'\r\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\r\n\r\nimport {\r\n    AccessoriesFormContainer,\r\n    AccessoriesContainer,\r\n    StockContainer,\r\n    ImageContainer,\r\n    ProductImage,\r\n    DeleteButton,\r\n    NewImageContainer,\r\n    NewImagesContainer,\r\n} from './product-accessories-form.styles'\r\n\r\nconst ProductAccessoriesForm = ({\r\n    product,\r\n    handleChange,\r\n    selectedImage,\r\n    setImageModal,\r\n    handleAvailableChange,\r\n    checkParameter,\r\n    retailNames,\r\n    currentUser,\r\n    isUpdating,\r\n    filters,\r\n    productObj\r\n}) => {\r\n    return (\r\n        <AccessoriesFormContainer>\r\n            <AccessoriesContainer>\r\n                <h3>Základné informácie</h3>\r\n                <CustomInput\r\n                    label=\"eanCode*\"\r\n                    type='text'\r\n                    name='name'\r\n                    value={product.eanCode.toString() ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                />\r\n                <CustomInput\r\n                    label=\"Názov doplnku*\"\r\n                    type='text'\r\n                    name='name'\r\n                    value={product.name ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                />\r\n\r\n                <CustomInput\r\n                    label=\"Značka\"\r\n                    type='text'\r\n                    name='brand'\r\n                    value={product.brand ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                    list=\"brands\"\r\n                />\r\n\r\n                <datalist id=\"brands\">\r\n                    {filters?.brands && filters?.brands.map((brand, idx) => (\r\n                        <option key={idx} value={brand} />\r\n                    ))}\r\n                </datalist>\r\n\r\n                {/* <CustomInput\r\n                    label=\"Kategória\"\r\n                    type='text'\r\n                    name='category'\r\n                    value={product.category ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                    list=\"categories\"\r\n\r\n                />\r\n\r\n                <datalist id=\"categories\">\r\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\r\n                        <option key={idx} value={brand} />\r\n                    ))}\r\n                </datalist> */}\r\n\r\n                {/* {isUpdating && <CustomInput\r\n                    label=\"Link\"\r\n                    type='text'\r\n                    name='link'\r\n                    value={product.link ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                />} */}\r\n\r\n                <CustomTextarea\r\n                    label=\"Popis\"\r\n                    name='description'\r\n                    rows='5'\r\n                    value={product.description ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                    required\r\n                />\r\n\r\n                <CustomInput\r\n                    label=\"Cena*\"\r\n                    type='text'\r\n                    name='price'\r\n                    value={product.price.toString() ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                    required\r\n                />\r\n\r\n                <ImageContainer>\r\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\r\n                        {!selectedImage && \"Vybrať obrázok\"}\r\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\r\n                    </ProductImage>\r\n                </ImageContainer>\r\n\r\n                <NewImagesContainer>\r\n                    {productObj?.bonusImages && productObj?.bonusImages.map((img) => (\r\n                        <NewImageContainer key={img._id}>\r\n                            {/* <DeleteButton >&#10005;</DeleteButton> */}\r\n                            <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\r\n                        </NewImageContainer>\r\n                    ))}\r\n                </NewImagesContainer>\r\n            </AccessoriesContainer>\r\n            {currentUser.admin >= 2 ? (\r\n                <StockContainer>\r\n                    <h3>Skladové zásoby</h3>\r\n                    {product.available.map((value, idx) => {\r\n                        if (idx === 0) return\r\n                        return (\r\n                            <CustomInput\r\n                                key={idx}\r\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\r\n                                type='number'\r\n                                name={\"available\"}\r\n                                value={checkParameter(product.available, idx)}\r\n                                handleChange={e => handleAvailableChange(e, idx)}\r\n                            />\r\n                        )\r\n                    })}\r\n                </StockContainer>\r\n            ) : (\r\n                <StockContainer>\r\n                    <h3>Skladové zásoby</h3>\r\n                    <CustomInput\r\n                        label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[currentUser.premises]}\r\n                        type='number'\r\n                        name={\"available\"}\r\n                        value={checkParameter(product.available, currentUser.premises)}\r\n                        handleChange={e => handleAvailableChange(e, currentUser.premises)}\r\n                    />\r\n                </StockContainer>\r\n            )}\r\n        </AccessoriesFormContainer>\r\n    )\r\n}\r\n\r\nexport default ProductAccessoriesForm\r\n","import styled from 'styled-components'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\n\r\nexport const ImageContainer = styled.div`\r\n    margin-top: 2rem;\r\n    \r\n`\r\n\r\nexport const ProductImage = styled.div`\r\n    cursor: pointer;\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content:center;\r\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\r\n    margin: 3rem 0 2rem;\r\n    min-height: 20rem;\r\n    position: relative;\r\n    /* max-width: 45rem; */\r\n\r\n    img {\r\n        width: 100%;\r\n        object-fit:cover;\r\n        object-position:center;\r\n        left: 0;\r\n        top: 0;\r\n    }\r\n`\r\n\r\nexport const ContactLensesFormContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 3rem;\r\n    align-items: start;\r\n    padding-bottom: 10rem;\r\n\r\n`\r\n\r\nexport const ContactLensesContainer = styled.div`\r\n    padding: 2rem; \r\n    box-shadow: var(--container-shadow);\r\n    background-color: var(--container-background-color);\r\n    border-radius: .5rem;\r\n    position: relative;\r\n\r\n`\r\n\r\nexport const ContactLensesParametersContainer = styled.div`\r\n    padding: 2rem; \r\n    box-shadow: var(--container-shadow);\r\n    background-color: var(--container-background-color);\r\n\r\n    border-radius: .5rem;\r\n    margin-bottom: 3rem;\r\n\r\n    h4 {\r\n        margin-top: 1rem;\r\n    }\r\n`\r\n\r\nexport const IncreaseButton = styled(CustomButton)`\r\n    margin-top: 2rem;\r\n    font-size: 1.4rem;\r\n\r\n`\r\n\r\nexport const StockContainer = styled.div`\r\n    padding: 2rem; \r\n    box-shadow: var(--container-shadow);\r\n    background-color: var(--container-background-color);\r\n\r\n    border-radius: .5rem;\r\n`\r\n\r\nexport const CopyButton = styled.button`\r\n    cursor: pointer;\r\n    position: absolute;\r\n    right: 2rem;\r\n    top: 2rem;\r\n    color: var(--primary-color);\r\n`\r\n\r\nexport const DeleteButton = styled.button`\r\n    cursor: pointer;\r\n    display:none;\r\n    border-radius:50%;\r\n    position: absolute;\r\n    border: none;\r\n    background-color: var(--color-red);\r\n    color: #fff;\r\n    padding: .5rem .75rem;\r\n    font-size: 1rem;\r\n    right: .5rem;\r\n    top: .5rem;\r\n\r\n    outline: none;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`\r\n\r\nexport const NewImageContainer = styled.div`\r\n    position: relative;\r\n    min-width: 15rem;\r\n    width: 15rem;\r\n    height: 15rem;\r\n\r\n\r\n    border: ${({ isPrimary }) => isPrimary ? '1px solid var(--primary-color)' : 'unset'};\r\n    \r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: contain;\r\n    }\r\n\r\n    &:hover ${DeleteButton} {\r\n        display: block\r\n    }\r\n`\r\n\r\nexport const NewImagesContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 3rem;\r\n    /* overflow-x: auto; */\r\n    padding-bottom: 2rem;\r\n    margin-bottom: 2rem;\r\n\r\n`","import React from 'react'\r\n\r\nimport CustomInput from '../custom-input/custom-input.component'\r\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\r\n\r\n// import { lensesBrands } from '../../utils/warehouse.utils'\r\nimport {\r\n    AiOutlineCopy\r\n} from 'react-icons/ai'\r\n\r\nimport {\r\n    ContactLensesContainer,\r\n    ContactLensesFormContainer,\r\n    StockContainer,\r\n    ContactLensesParametersContainer,\r\n    IncreaseButton,\r\n    ImageContainer,\r\n    ProductImage,\r\n    CopyButton,\r\n    DeleteButton,\r\n    NewImageContainer,\r\n    NewImagesContainer\r\n} from './product-contact-lenses-form.styles'\r\n\r\nconst ProductContactLensesForm = ({\r\n    product,\r\n    handleChange,\r\n    setImageModal,\r\n    selectedImage,\r\n    checkParameter,\r\n    handleContactLensesChange,\r\n    handleAddNewParameter,\r\n    contactLensesParameters,\r\n    retailNames,\r\n    currentUser,\r\n    handleAvailableChange,\r\n    isUpdating,\r\n    filters,\r\n    productObj,\r\n    handleGetProductData\r\n}) => {\r\n    return (\r\n        <ContactLensesFormContainer>\r\n            <ContactLensesContainer>\r\n                <CopyButton onClick={() => handleGetProductData(true)}><AiOutlineCopy /></CopyButton>\r\n                <h3>Základné informácie</h3>\r\n                <CustomInput\r\n                    label=\"eanCode*\"\r\n                    type='text'\r\n                    name='name'\r\n                    value={product.eanCode.toString() ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                />\r\n                <CustomInput\r\n                    label=\"Názov doplnku*\"\r\n                    type='text'\r\n                    name='name'\r\n                    value={product.name ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                />\r\n\r\n                <CustomInput\r\n                    label=\"Značka\"\r\n                    type='text'\r\n                    name='brand'\r\n                    value={product.brand ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                    list=\"brands\"\r\n                />\r\n                <datalist id=\"brands\">\r\n                    {filters?.brands && filters?.brands.map((brand, idx) => (\r\n                        <option key={idx} value={brand} />\r\n                    ))}\r\n                </datalist>\r\n                {/* \r\n                <CustomInput\r\n                    label=\"Kategória\"\r\n                    type='text'\r\n                    name='category'\r\n                    value={product.category ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                    list=\"categories\"\r\n                />\r\n\r\n                <datalist id=\"categories\">\r\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\r\n                        <option key={idx} value={brand} />\r\n                    ))}\r\n                </datalist> */}\r\n\r\n                {/* {isUpdating && <CustomInput\r\n                    label=\"Link\"\r\n                    type='text'\r\n                    name='link'\r\n                    value={product.link ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                />} */}\r\n\r\n                <CustomTextarea\r\n                    label=\"Popis\"\r\n                    name='description'\r\n                    rows='5'\r\n                    value={product.description ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                    required\r\n                />\r\n\r\n                <CustomInput\r\n                    label=\"Cena*\"\r\n                    type='text'\r\n                    name='price'\r\n                    value={product.price.toString() ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                    required\r\n                />\r\n\r\n                <ImageContainer>\r\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\r\n                        {!selectedImage && \"Vybrať obrázok\"}\r\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\r\n                    </ProductImage>\r\n                </ImageContainer>\r\n\r\n                <NewImagesContainer>\r\n                    {productObj?.bonusImages && productObj?.bonusImages.map((img) => (\r\n                        <NewImageContainer key={img._id}>\r\n                            {/* <DeleteButton >&#10005;</DeleteButton> */}\r\n                            <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\r\n                        </NewImageContainer>\r\n                    ))}\r\n                </NewImagesContainer>\r\n            </ContactLensesContainer>\r\n            <div>\r\n                <ContactLensesParametersContainer>\r\n                    <h3>Parametre</h3>\r\n                    <div>\r\n                        <h4>Zakrivenie</h4>\r\n                        {contactLensesParameters.allowedCurves.map((value, idx) => {\r\n                            return (\r\n                                <CustomInput\r\n                                    key={idx}\r\n                                    label={idx + 1}\r\n                                    type='text'\r\n                                    name={\"allowedCurves\"}\r\n                                    value={checkParameter(contactLensesParameters.allowedCurves, idx)}\r\n                                    handleChange={e => handleContactLensesChange(e, idx)}\r\n                                />\r\n                            )\r\n                        })}\r\n                        <IncreaseButton onClick={() => handleAddNewParameter({\r\n                            target: {\r\n                                name: 'allowedCurves'\r\n                            }\r\n                        })}>Pridať</IncreaseButton>\r\n                    </div>\r\n                    <div>\r\n                        <h4>Priemery</h4>\r\n                        {contactLensesParameters.allowedDiameters.map((value, idx) => {\r\n                            return (\r\n                                <CustomInput\r\n                                    key={idx}\r\n                                    label={idx + 1}\r\n                                    type='text'\r\n                                    name={\"allowedDiameters\"}\r\n                                    value={checkParameter(contactLensesParameters.allowedDiameters, idx)}\r\n                                    handleChange={e => handleContactLensesChange(e, idx)}\r\n                                />\r\n                            )\r\n                        })}\r\n                        <IncreaseButton onClick={() => handleAddNewParameter({\r\n                            target: {\r\n                                name: 'allowedDiameters'\r\n                            }\r\n                        })}>Pridať</IncreaseButton>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h4>Dioptrie</h4>\r\n                        {contactLensesParameters.dioptersRange.map((value, idx) => {\r\n                            const inputLabel = idx === 0 ? \"minimum\" : \"maximum\"\r\n\r\n                            return (\r\n                                <CustomInput\r\n                                    key={idx}\r\n                                    label={inputLabel}\r\n                                    type='text'\r\n                                    name={\"dioptersRange\"}\r\n                                    value={checkParameter(contactLensesParameters.dioptersRange, idx)}\r\n                                    handleChange={e => handleContactLensesChange(e, idx)}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </ContactLensesParametersContainer>\r\n\r\n                {currentUser.admin >= 2 ? (\r\n                    <StockContainer>\r\n                        <h3>Skladové zásoby</h3>\r\n                        {product.available.map((value, idx) => {\r\n                            if (idx === 0) return\r\n                            return (\r\n                                <CustomInput\r\n                                    key={idx}\r\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[idx]}\r\n                                    type='number'\r\n                                    name={\"available\"}\r\n                                    value={checkParameter(product.available, idx)}\r\n                                    handleChange={e => handleAvailableChange(e, idx)}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </StockContainer>\r\n                ) : (\r\n                    <StockContainer>\r\n                        <h3>Skladové zásoby</h3>\r\n                        <CustomInput\r\n                            label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[currentUser.premises]}\r\n                            type='number'\r\n                            name={\"available\"}\r\n                            value={checkParameter(product.available, currentUser.premises)}\r\n                            handleChange={e => handleAvailableChange(e, currentUser.premises)}\r\n                        />\r\n                    </StockContainer>\r\n                )}\r\n            </div>\r\n        </ContactLensesFormContainer>\r\n    )\r\n}\r\n\r\nexport default ProductContactLensesForm\r\n","import styled from 'styled-components'\r\n\r\nexport const ServiceFormContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 3rem;\r\n    align-items: start;\r\n    padding-bottom: 10rem;\r\n\r\n`\r\n\r\nexport const ServiceContainer = styled.div`\r\n    padding: 2rem; \r\n    box-shadow: var(--container-shadow);\r\n    background-color: var(--container-background-color);\r\n    border-radius: .5rem;\r\n`\r\n\r\nexport const ImageContainer = styled.div`\r\n    margin-top: 2rem;\r\n    \r\n`\r\n\r\nexport const ProductImage = styled.div`\r\n    cursor: pointer;\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content:center;\r\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\r\n    margin: 3rem 0 2rem;\r\n    min-height: 20rem;\r\n    position: relative;\r\n    /* max-width: 45rem; */\r\n\r\n    img {\r\n        width: 100%;\r\n        object-fit:cover;\r\n        object-position:center;\r\n        left: 0;\r\n        top: 0;\r\n    }\r\n`","import React from 'react'\r\n\r\nimport CustomInput from '../custom-input/custom-input.component'\r\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\r\n\r\n\r\nimport {\r\n    ServiceFormContainer,\r\n    ServiceContainer,\r\n    ImageContainer,\r\n    ProductImage\r\n} from './product-service-form.styles'\r\n\r\nconst ProductServiceForm = ({\r\n    product,\r\n    // isUpdating,\r\n    handleChange,\r\n    selectedImage,\r\n    setImageModal,\r\n}) => {\r\n    return (\r\n        <ServiceFormContainer>\r\n            <ServiceContainer>\r\n                <h3>Základné informácie</h3>\r\n                <CustomInput\r\n                    label=\"eanCode*\"\r\n                    type='text'\r\n                    name='name'\r\n                    value={product.eanCode.toString() ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                />\r\n\r\n                <CustomInput\r\n                    label=\"Názov služby*\"\r\n                    type='text'\r\n                    name='name'\r\n                    value={product.name ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                />\r\n\r\n                <CustomInput\r\n                    label=\"Cena*\"\r\n                    type='text'\r\n                    name='price'\r\n                    value={product.price.toString() ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                    required\r\n                />\r\n\r\n                <CustomTextarea\r\n                    label=\"Popis\"\r\n                    name='description'\r\n                    rows='5'\r\n                    value={product.description ?? \"\"}\r\n                    handleChange={(e) => handleChange(e)}\r\n                    required\r\n                />\r\n\r\n                {/* <ImageContainer>\r\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\r\n                        {!selectedImage && \"Vybrať obrázok\"}\r\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\r\n                    </ProductImage>\r\n                </ImageContainer> */}\r\n            </ServiceContainer>\r\n        </ServiceFormContainer>\r\n    )\r\n}\r\n\r\nexport default ProductServiceForm\r\n","import styled from 'styled-components'\r\nimport { paddingStyles } from '../../global.styles'\r\nimport CustomButton from '../../components/custom-button/custom-button.component'\r\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\r\n\r\nexport const Header = styled.div`\r\n    ${paddingStyles}\r\n    padding-top: 3rem;\r\n    padding-bottom: 3rem;\r\n    color: var(--primary-text-color);\r\n\r\n`\r\n\r\nexport const SubmitButton = styled(CustomButton)`\r\n\r\n`\r\n\r\nexport const IsPublicCheckbox = styled(CustomCheckbox)`\r\n    margin-right: 2rem;\r\n`\r\n\r\n\r\nexport const CategoryContainer = styled.div`\r\n    padding: 2rem; \r\n    box-shadow: var(--container-shadow);\r\n    background-color: var(--container-background-color);\r\n    border-radius: .5rem;\r\n    display: inline-block;\r\n    margin-bottom: 3rem;\r\n\r\n    h3 {\r\n        margin-bottom: 1.5rem;\r\n    }\r\n`\r\nexport const CategoryCheckbox = styled(CustomCheckbox)`\r\n    &:not(:last-child) {\r\n        margin-right: 2rem;\r\n    }\r\n`","import React, { useState, useContext, useEffect } from 'react'\r\nimport { AuthContext } from '../../context/auth/auth.context'\r\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\r\nimport { ImageContext } from '../../context/image/image.context'\r\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\r\nimport { useParams, Prompt } from 'react-router-dom'\r\n\r\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\r\nimport ModalImage from '../../components/modal-product-image-gallery/modal-product-image-gallery.component'\r\nimport OldModalImage from '../../components/modal-images/modal-images.component'\r\nimport GetProductDataModal from '../../components/modal-get-product-data/modal-get-product-data.component'\r\nimport GetLensesDataModal from '../../components/modal-get-lenses-data/modal-get-lenses-data.component'\r\nimport Popup from '../../components/popup/pop-up.component'\r\n\r\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\r\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\r\nimport ProductAccessoriesForm from '../../components/product-accessories-form/product-accessories-form.component'\r\nimport ProductContactLensesForm from '../../components/product-contact-lenses-form/product-contact-lenses-form.component'\r\nimport ProductServiceForm from '../../components/product-service-form/product-service-form.component'\r\n\r\nimport { productCategories, checkParameter, formatLink } from '../../context/warehouse/warehouse.utils'\r\nimport { retailNames } from '../../utils/warehouse.utils'\r\nimport { useFetch } from '../../hooks/useFetch'\r\n\r\nimport {\r\n    FixedContainer\r\n} from '../../global.styles'\r\n\r\nimport {\r\n    Header,\r\n    CategoryContainer,\r\n    CategoryCheckbox,\r\n    SubmitButton,\r\n    IsPublicCheckbox,\r\n\r\n} from './product.styles'\r\n\r\nconst ProductSection = () => {\r\n    const { id } = useParams()\r\n    const { currentUser } = useContext(AuthContext)\r\n    const { closeModal, message, isLoading, showModal, getMessage, setShowModal } = useContext(LoadingModalContext)\r\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\r\n    const [showImageModal, setImageModal] = useState(false)\r\n    const [showOldImageModal, setOldImageModal] = useState(false)\r\n    const [isGetProductDataModalVisible, setIsGetProductDataModalVisible] = useState(false)\r\n    const [isGetLensesDataModalVisible, setIsGetLensesDataModalVisible] = useState(false)\r\n    const [isUpdating, setIsUpdating] = useState(false)\r\n\r\n    const {\r\n        eanCode,\r\n        product,\r\n        lenses,\r\n        contactLensesParameters,\r\n        glassesParameters,\r\n        handleLensesChange,\r\n        handleLensesParameterChange,\r\n        createProduct,\r\n        updateProduct,\r\n        resetProduct,\r\n        resetLenses,\r\n        resetContactLenses,\r\n        resetGlassesParameters,\r\n        createLenses,\r\n        updateLenses,\r\n        handleProductChange,\r\n        handleProductAvailableChange,\r\n        getEanCode,\r\n        handleAddNewParameter,\r\n        handleContactLensesParameterChange,\r\n        handleGlassesParameterChange,\r\n        handleGlassesParameterSpecsChange,\r\n        handleGlassesSizeChange,\r\n        getSingleProduct,\r\n        getSingleLenses\r\n    } = useContext(WarehouseContext)\r\n\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [productObj, setProductObj] = useState({})\r\n\r\n\r\n    const { response, isLoading: isLoadingFilters, refetch } = useFetch(`api/store/products/${productObj?.type}/filters`, !productObj?.type, \"GET\")\r\n    const [filters, setFilters] = useState(null)\r\n\r\n    const handleGetProductData = (boolean) => {\r\n        setIsGetProductDataModalVisible(boolean)\r\n    }\r\n\r\n    const handleGetLensesData = (boolean) => {\r\n        setIsGetLensesDataModalVisible(boolean)\r\n    }\r\n\r\n    const handleChangeType = e => {\r\n        setHasChanged(true)\r\n        const { name, value } = e.target\r\n\r\n        if (!isUpdating) {\r\n            if (productObj.type === 0) {\r\n                if (Object.keys(productObj).length > 2) {\r\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\r\n                    if (confirm) {\r\n                        resetLenses()\r\n                        setSelectedImage('')\r\n                    } else {\r\n                        return\r\n                    }\r\n                }\r\n            } else {\r\n                if (Object.keys(productObj).length > 2) {\r\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\r\n                    if (confirm) {\r\n                        resetProduct()\r\n                        resetContactLenses()\r\n                        resetGlassesParameters()\r\n                        setSelectedImage('')\r\n                    } else {\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setProductObj({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    // console.count(\"PRODUCT OBJ\")\r\n    // console.log(productObj)\r\n    // console.count(\"PRODUCT OBJ\")\r\n\r\n    const handleChange = (e) => {\r\n        setHasChanged(true)\r\n        const { name, value } = e.target\r\n\r\n        if (productObj.type === 0) {\r\n            handleLensesChange(e)\r\n        }\r\n\r\n        if (productObj.type === 6) {\r\n            handleProductChange(e)\r\n        }\r\n        if (productObj.type === 5) {\r\n            handleProductChange(e)\r\n        }\r\n\r\n        if (productObj.type === 4) {\r\n            handleProductChange(e)\r\n        }\r\n        if (productObj.type === 3) {\r\n            handleProductChange(e)\r\n        }\r\n        if (productObj.type === 2) {\r\n            handleProductChange(e)\r\n        }\r\n        if (productObj.type === 1) {\r\n            handleProductChange(e)\r\n        }\r\n\r\n\r\n\r\n        if (value === '') {\r\n            delete productObj[name]\r\n            return\r\n        }\r\n\r\n        if (isUpdating) {\r\n            if (name === 'name') {\r\n                setProductObj({\r\n                    ...productObj,\r\n                    [name]: value,\r\n                    link: formatLink(value)\r\n                })\r\n                return\r\n            }\r\n        }\r\n\r\n        setProductObj({\r\n            ...productObj,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleGlassesParametersChange = e => {\r\n        setHasChanged(true)\r\n        const { name, value } = e.target\r\n\r\n        handleGlassesParameterChange(e)\r\n\r\n        if (value === '') {\r\n            delete productObj[name]\r\n            return\r\n        }\r\n\r\n        setProductObj({\r\n            ...productObj,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSpecsChange = (e) => {\r\n        setHasChanged(true)\r\n        const { name, value } = e.target\r\n\r\n        handleGlassesParameterSpecsChange(e)\r\n\r\n        if (value === '') {\r\n            delete productObj.specs[name]\r\n\r\n            if (Object.keys(productObj.specs).length === 0) {\r\n                delete productObj[\"specs\"]\r\n            }\r\n            return\r\n        }\r\n\r\n        setProductObj({\r\n            ...productObj,\r\n            specs: {\r\n                ...productObj.specs,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleGlassesSpecsSizeChange = (e, idx) => {\r\n        const { name, value } = e.target\r\n        let arr = glassesParameters.specs[name]\r\n        arr[idx] = value === '' ? 1001 : value\r\n\r\n        handleGlassesSizeChange(e, idx)\r\n\r\n        if (value === '') {\r\n            if (productObj.specs[name].length > 1) {\r\n                arr[idx] = 1001\r\n\r\n                const firstIndex = arr[0]\r\n                const canDeleteSpecs = arr.map(value => {\r\n                    if (firstIndex !== value) {\r\n                        return false\r\n                    } else {\r\n                        return true\r\n                    }\r\n                })\r\n\r\n                const verdict = canDeleteSpecs.find(value => value === false)\r\n\r\n                if (verdict === false) {\r\n                    setProductObj({\r\n                        ...productObj,\r\n                        specs: {\r\n                            ...productObj.specs,\r\n                            [name]: arr\r\n                        }\r\n                    })\r\n                } else {\r\n                    delete productObj.specs[name]\r\n                }\r\n\r\n            }\r\n            if (Object.keys(productObj.specs).length === 0) {\r\n                delete productObj[\"specs\"]\r\n            }\r\n            // delete userObj.company[]\r\n            return\r\n        }\r\n\r\n        setProductObj({\r\n            ...productObj,\r\n            specs: {\r\n                ...productObj.specs,\r\n                [name]: arr\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleAvailableChange = (e, idx) => {\r\n        const { name, value } = e.target\r\n        let arr = product[name]\r\n        arr[idx] = value === '' ? 1001 : Number(value)\r\n\r\n        handleProductAvailableChange(e, idx)\r\n        setProductObj({\r\n            ...productObj,\r\n            [name]: arr\r\n        })\r\n    }\r\n\r\n    const handleContactLensesChange = (e, idx) => {\r\n        const { name, value } = e.target\r\n        let arr = contactLensesParameters[name]\r\n        arr[idx] = value === '' ? 1001 : value\r\n\r\n        handleContactLensesParameterChange(e, idx)\r\n\r\n        if (value === '') {\r\n            if (productObj.contactLenses[name].length > 1) {\r\n                arr.splice(idx, 1)\r\n                setProductObj({\r\n                    ...productObj,\r\n                    contactLenses: {\r\n                        ...productObj.contactLenses,\r\n                        [name]: arr\r\n                    }\r\n                })\r\n            } else {\r\n                delete productObj.contactLenses[name]\r\n            }\r\n            if (Object.keys(productObj.contactLenses).length === 0) {\r\n                delete productObj[\"contactLenses\"]\r\n            }\r\n            // delete userObj.company[]\r\n            return\r\n        }\r\n\r\n        setProductObj({\r\n            ...productObj,\r\n            contactLenses: {\r\n                ...productObj.contactLenses,\r\n                [name]: arr\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleParameterChange = (e, idx) => {\r\n        const { name, value } = e.target\r\n        let arr = lenses[name]\r\n        arr[idx] = value === '' ? 1001 : Number(value)\r\n\r\n        handleLensesParameterChange(e, idx)\r\n        setProductObj({\r\n            ...productObj,\r\n            [name]: arr\r\n        })\r\n    }\r\n\r\n    const handleSelectImage = (imgId = '', bonusImages, img) => {\r\n        setHasChanged(true)\r\n        setSelectedImage(img)\r\n        setProductObj({\r\n            ...productObj,\r\n            image: imgId,\r\n            ...(bonusImages) && { bonusImages }\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        let newProductObj = {\r\n            ...productObj,\r\n            ...(productObj.type === 0) && { lensType: lenses.lensType },\r\n            ...(productObj.type === 0) && { dioptric: lenses.dioptric }\r\n        }\r\n\r\n        // console.log(\"PRODUCT OBJECT\")\r\n        // console.log(lensObj)\r\n        // console.log(productObj)\r\n\r\n\r\n\r\n        if (currentUser.admin < 2) {\r\n            if (newProductObj.available) {\r\n                newProductObj = {\r\n                    ...productObj,\r\n                    available: productObj.available[currentUser.premises]\r\n                }\r\n            }\r\n        } else {\r\n            if (newProductObj.available) {\r\n                newProductObj = {\r\n                    ...productObj,\r\n                    available: newProductObj.available ? newProductObj.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0, 0]\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isUpdating) {\r\n            if (newProductObj.type === 0) {\r\n                setHasChanged(false)\r\n                delete newProductObj['link']\r\n                delete newProductObj['type']\r\n                const updatedObj = {\r\n                    ...newProductObj,\r\n                    // type: newProductObj.lensType,\r\n                    eanCode: lenses.eanCode\r\n                }\r\n                // delete updatedObj['lensType']\r\n                updateLenses(updatedObj, id)\r\n                return\r\n            } else if (newProductObj.type === 3) {\r\n                setHasChanged(false)\r\n                delete newProductObj['type']\r\n                updateProduct({ ...newProductObj, contactLenses: {} })\r\n                return\r\n            } else {\r\n                setHasChanged(false)\r\n                delete newProductObj['type']\r\n\r\n                const obj = {\r\n                    ...newProductObj,\r\n                    ...(newProductObj.bonusImages) && { bonusImages: newProductObj.bonusImages.map(img => img._id) }\r\n                }\r\n\r\n                updateProduct(obj)\r\n                return\r\n            }\r\n        } else {\r\n            if (productObj.type === 0) {\r\n                setHasChanged(false)\r\n                delete newProductObj['type']\r\n                // const updatedObg = {\r\n                //     ...newProductObj,\r\n                //     type: newProductObj.lensType\r\n                // }\r\n                // delete updatedObg['lensType']\r\n\r\n                createLenses(newProductObj)\r\n            }\r\n            if (newProductObj.type === 6 || newProductObj.type === 5 || newProductObj.type === 4 || newProductObj.type === 3 || newProductObj.type === 2 || newProductObj.type === 1) {\r\n                if (!newProductObj.name || !newProductObj.price) {\r\n                    setShowModal(true)\r\n                    getMessage(\"Povinné údaje sú prázdne\")\r\n                    return\r\n                } else {\r\n                    setHasChanged(false)\r\n                    delete newProductObj['_id']\r\n\r\n                    const obj = {\r\n                        ...newProductObj,\r\n                        ...(newProductObj.bonusImages) && { bonusImages: newProductObj.bonusImages.map(img => img._id) }\r\n                    }\r\n\r\n\r\n                    createProduct(obj)\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const [lensObj, setLensObj] = useState(null)\r\n\r\n    const fillProductData = (productData) => {\r\n\r\n        setLensObj({\r\n            ...productObj,\r\n            ...productData\r\n        })\r\n\r\n        setProductObj({\r\n            ...productObj,\r\n            ...productData\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!productObj?.type) return\r\n        setFilters(null)\r\n        refetch()\r\n    }, [productObj?.type])\r\n\r\n    useEffect(() => {\r\n        if (productObj.type === 0) {\r\n            if (productObj.lensType) return\r\n            handleChange({\r\n                target: {\r\n                    name: \"lensType\",\r\n                    value: lenses?.lensType\r\n                }\r\n            })\r\n        }\r\n    }, [lenses.lensType])\r\n\r\n    useEffect(() => {\r\n        if (isLoadingFilters) return\r\n        if (response?.filters) {\r\n            setFilters(response?.filters)\r\n        }\r\n    }, [isLoadingFilters])\r\n\r\n    useEffect(() => {\r\n        if (id === \"novy-produkt\") {\r\n            if (!eanCode) {\r\n                getEanCode()\r\n            } else {\r\n                if (productObj.type !== undefined && !productObj.eanCode) {\r\n                    handleChange({\r\n                        target: {\r\n                            name: \"eanCode\",\r\n                            value: eanCode\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }, [id, eanCode, productObj.type, productObj.eanCode, product.type])\r\n\r\n    useEffect(() => {\r\n        if (id !== 'novy-produkt') {\r\n            getSingleProduct(id, (data) => {\r\n                console.log(\"PRODUCT\")\r\n                console.log(data)\r\n\r\n\r\n                handleSelectImage(data?.product?.image?._id, data.product.bonusImages, data.product.image)\r\n                setProductObj(prevValue => ({\r\n                    ...prevValue,\r\n                    type: data.product.type,\r\n                }))\r\n            })\r\n            setIsUpdating(true)\r\n            if (!productObj.type) {\r\n                handleChangeType({\r\n                    target: {\r\n                        name: \"type\",\r\n                        value: product.type\r\n                    }\r\n                })\r\n\r\n            }\r\n        }\r\n    }, [id,])\r\n\r\n    useEffect(() => {\r\n        // if (product.image) {\r\n        //     setSelectedImage(product.image)\r\n        // }\r\n        if (lenses.image) {\r\n            setSelectedImage(lenses.image)\r\n        }\r\n    }, [lenses.image])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            resetProduct()\r\n            resetLenses()\r\n            resetContactLenses()\r\n            resetGlassesParameters()\r\n            setProductObj({})\r\n            setSelectedImage(null)\r\n            setIsUpdating(false)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <section>\r\n            <Prompt\r\n                when={hasChanged}\r\n                message=\"Chcete opustiť formulár?\"\r\n            />\r\n\r\n            {isGetLensesDataModalVisible && <GetLensesDataModal close={() => handleGetLensesData(false)} getSingleProduct={getSingleProduct} productObj={productObj} setProductObj={setProductObj} getSingleLenses={getSingleLenses} fillProductData={fillProductData} />}\r\n            {isGetProductDataModalVisible && <GetProductDataModal close={() => setIsGetProductDataModalVisible(false)} getSingleProduct={getSingleProduct} productObj={productObj} setProductObj={setProductObj} />}\r\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\r\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={handleSelectImage} />}\r\n            {showOldImageModal && <OldModalImage close={() => setOldImageModal(false)} setImage={handleSelectImage} />}\r\n            <Header>\r\n                <FixedContainer>\r\n\r\n                    <div>\r\n                        <h1>{isUpdating ? \"Upraviť produkt\" : \"Nový produkt\"}</h1>\r\n                    </div>\r\n                    <div>\r\n                        <IsPublicCheckbox\r\n                            label=\"Verejné\"\r\n                            // value={product.ehop}\r\n                            name='eshop'\r\n                            isActive={product.eshop}\r\n                            handleClick={() => handleChange({\r\n                                target: {\r\n                                    name: \"eshop\",\r\n                                    value: !product.eshop\r\n                                }\r\n                            })}\r\n                        />\r\n                        <SubmitButton onClick={handleSubmit}>{isUpdating ? \"Upraviť\" : \"Vytvoriť\"}</SubmitButton>\r\n                    </div>\r\n                </FixedContainer>\r\n            </Header>\r\n\r\n            <ScrollContainer>\r\n                {!isUpdating && <CategoryContainer>\r\n                    <h3>Aký produkt chcete pridať?</h3>\r\n                    {productCategories.map((category, idx) => (\r\n                        <CategoryCheckbox\r\n                            key={idx}\r\n                            label={category.name}\r\n                            value={category.value}\r\n                            name='type'\r\n                            isActive={category.value === productObj.type}\r\n                            handleClick={() => handleChangeType({\r\n                                target: {\r\n                                    name: \"type\",\r\n                                    value: category.value\r\n                                }\r\n                            })}\r\n                        />\r\n                    ))}\r\n                </CategoryContainer>}\r\n\r\n                {productObj.type === 0 && (\r\n                    <ProductLensesForm\r\n                        lenses={lenses}\r\n                        selectedImage={selectedImage}\r\n                        setImageModal={setOldImageModal}\r\n                        handleChange={handleChange}\r\n                        handleParameterChange={handleParameterChange}\r\n                        checkParameter={checkParameter}\r\n                        filters={filters}\r\n                        handleGetProductData={handleGetLensesData}\r\n                    />\r\n                )}\r\n\r\n                {productObj.type === 6 && (\r\n                    <ProductServiceForm\r\n                        product={product}\r\n                        isUpdating={isUpdating}\r\n                        handleChange={handleChange}\r\n                        selectedImage={selectedImage}\r\n                        setImageModal={setImageModal}\r\n                        filters={filters}\r\n                    />\r\n                )}\r\n\r\n                {productObj.type === 5 && (\r\n                    <ProductAccessoriesForm\r\n                        product={product}\r\n                        productObj={productObj}\r\n                        isUpdating={isUpdating}\r\n                        currentUser={currentUser}\r\n                        retailNames={retailNames}\r\n                        selectedImage={selectedImage}\r\n                        handleChange={handleChange}\r\n                        setImageModal={setImageModal}\r\n                        checkParameter={checkParameter}\r\n                        handleAvailableChange={handleAvailableChange}\r\n                        filters={filters}\r\n                    />\r\n                )}\r\n\r\n                {productObj.type === 3 && (\r\n                    <ProductContactLensesForm\r\n                        product={product}\r\n                        productObj={productObj}\r\n\r\n                        isUpdating={isUpdating}\r\n                        retailNames={retailNames}\r\n                        currentUser={currentUser}\r\n                        selectedImage={selectedImage}\r\n                        contactLensesParameters={contactLensesParameters}\r\n                        handleChange={handleChange}\r\n                        setImageModal={setImageModal}\r\n                        checkParameter={checkParameter}\r\n                        handleAddNewParameter={handleAddNewParameter}\r\n                        handleAvailableChange={handleAvailableChange}\r\n                        handleContactLensesChange={handleContactLensesChange}\r\n                        filters={filters}\r\n                        handleGetProductData={handleGetProductData}\r\n                    />\r\n                )}\r\n\r\n                {(productObj.type === 1 || productObj.type === 2 || productObj.type === 4) && (\r\n                    <ProductGlassesForm\r\n                        product={product}\r\n                        productObj={productObj}\r\n                        isUpdating={isUpdating}\r\n                        retailNames={retailNames}\r\n                        currentUser={currentUser}\r\n                        selectedImage={selectedImage}\r\n                        glassesParameters={glassesParameters}\r\n                        handleChange={handleChange}\r\n                        setImageModal={setImageModal}\r\n                        checkParameter={checkParameter}\r\n                        handleSpecsChange={handleSpecsChange}\r\n                        handleAvailableChange={handleAvailableChange}\r\n                        handleGlassesSpecsSizeChange={handleGlassesSpecsSizeChange}\r\n                        handleGlassesParametersChange={handleGlassesParametersChange}\r\n                        filters={filters}\r\n                        handleGetProductData={handleGetProductData}\r\n                    />\r\n                )}\r\n\r\n            </ScrollContainer>\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default ProductSection\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport const useFetch = (path, skip = false, method = \"GET\") => {\r\n    const [response, setResponse] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [message, setMessage] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [refetchIndex, setRefetchIndex] = useState(0)\r\n\r\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\r\n\r\n    const requestOptions = {\r\n        method: method,\r\n        // headers: myHeaders,\r\n        // body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            if (skip) return\r\n            setIsLoading(true)\r\n            try {\r\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\r\n                const data = await res.json()\r\n\r\n                setMessage(data.message)\r\n                setResponse(data)\r\n                setIsLoading(false)\r\n            } catch (err) {\r\n                setError(err)\r\n                setIsLoading(false)\r\n                setMessage(\"Niečo sa pokazilo\")\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [refetchIndex])\r\n\r\n    return { response, isLoading, error, message, refetch }\r\n}\r\n\r\nexport const useFetchByQuery = (path, queryObj, skip = false) => {\r\n    const [response, setResponse] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [refetchIndex, setRefetchIndex] = useState(0)\r\n\r\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    const raw = JSON.stringify(queryObj)\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            if (skip) return\r\n            setIsLoading(true)\r\n            try {\r\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\r\n                const data = await res.json()\r\n\r\n                setResponse(data)\r\n                setIsLoading(false)\r\n            } catch (err) {\r\n                setError(err)\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [refetchIndex, path])\r\n\r\n    return { response, isLoading, error, refetch }\r\n}\r\n\r\nexport const useFetchById = (path, id, skip = false) => {\r\n    const [response, setResponse] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [refetchIndex, setRefetchIndex] = useState(0)\r\n\r\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            if (skip) return\r\n            setIsLoading(true)\r\n            try {\r\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}/${id}`, requestOptions)\r\n                const data = await res.json()\r\n\r\n                setResponse(data)\r\n                setIsLoading(false)\r\n            } catch (err) {\r\n                setError(err)\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [refetchIndex, path, id])\r\n\r\n    return { response, isLoading, error, refetch }\r\n}\r\n","\r\nexport const isAvailable = (available) => {\r\n    if (!available) return false\r\n    if (typeof available === \"number\") {\r\n        return available > 0 ? true : false\r\n    } else {\r\n        return available.reduce((acc, currValue) => acc + currValue) > 0 ? true : false\r\n    }\r\n\r\n}\r\n\r\nexport const formatAvailable = (available) => {\r\n    if (!available) return \"Nedostupné\"\r\n    if (typeof available === \"number\") {\r\n        return available > 0 ? `${available}ks` : \"Nedostupné\"\r\n    } else {\r\n        const totalCount = available.reduce((acc, currValue) => acc + currValue)\r\n        return totalCount > 0 ? `${totalCount}ks` : \"Nedostupné\"\r\n    }\r\n}\r\n\r\nexport const translatePaymentMethod = value => {\r\n    if (value === 'cash') return \"Hotovosť\"\r\n    if (value === 'card') return \"Karta\"\r\n    if (value === 'coupon') return \"Kupón\"\r\n    return value\r\n}\r\n\r\nexport const translateStatus = status => {\r\n    if (status === 'finished') return \"Dokončené\"\r\n    if (status === 'fulfilled') return \"Vybavené\"\r\n    if (status === 'pending') return \"Čaká na vybavenie\"\r\n    if (status === 'paid') return \"Zaplatené\"\r\n    if (status === 'half-paid') return \"Zálohované\"\r\n    if (status === 'cancelled') return \"Zrušené\"\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/modal-images/modal-images.styles.jsx","components/modal-images/modal-images.component.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","components/custom-checkbox/custom-checkbox.styles.jsx","components/custom-checkbox/custom-checkbox.component.jsx","components/custom-textarea/custom-textarea.styles.jsx","components/custom-textarea/custom-textarea.component.jsx","context/image/image.queries.jsx","context/image/image.context.jsx"],"names":["ModalContainer","styled","div","Modal","UploadButton","label","CloseButton","button","FlexContainer","ImageContainer","DeleteButton","ImagePreviewContainer","TabOptions","TabButton","isActive","CropButton","CustomButton","ButtonOptions","FetchButtons","toDataUrl","url","callback","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","str","result","lastPos","indexOf","cuttedstr","slice","length","readAsDataURL","response","open","responseType","send","ModalImages","close","setImage","useContext","ImageContext","isDisabled","getImages","handleDeleteImage","handleImage","images","setSelectedImage","getNextImages","getPrevImage","useState","showTab","setShowTab","imageToUpload","setImageToUpload","imgUrl","setImgUrl","imageName","setImageName","imageAlt","setImageAlt","handleClick","e","tab","preventDefault","console","log","useEffect","URL","createObjectURL","ReactDOM","createPortal","onClick","htmlFor","id","type","name","accept","onChange","target","files","Fragment","src","value","handleChange","imgData","handleSubmit","disabled","map","img","_id","selectImage","process","imagePath","document","getElementById","shrinkLabel","css","InputGroup","CustomInput","otherProps","className","Container","paddingStyles","FixedContainer","ScrollContainer","children","CheckboxContainer","CustomCheckbox","otherprops","CustomTextarea","uploadImage","token","imgName","imgAlt","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","redirect","fetch","fetchFilteredImages","limit","skip","sortBy","dateCreated","deleteImage","createContext","selectedImage","ImageProvider","LoadingModalContext","getMessage","setIsLoading","setShowModal","closeModal","AuthContext","setIsDisabled","setImages","setSkip","a","json","data","image","addToSkip","message","respone","Provider"],"mappings":"k2JAGO,IAAMA,EAAiBC,IAAOC,IAAV,KAedC,EAAQF,IAAOC,IAAV,KAwCLE,EAAeH,IAAOI,MAAV,KAgCZC,EAAcL,IAAOM,OAAV,KAkBXC,EAAgBP,IAAOC,IAAV,KAWbO,EAAiBR,IAAOC,IAAV,KAsBdQ,EAAeT,IAAOM,OAAV,KAoBZI,EAAwBV,IAAOC,IAAV,KAWrBU,EAAaX,IAAOC,IAAV,KAOVW,EAAYZ,IAAOM,OAAV,KAIE,qBAAGO,SAA0B,uBAAyB,0CACjE,qBAAGA,SAA0B,2BAA6B,+BACpD,qBAAGA,SAA0B,MAAQ,SAa3CC,EAAad,YAAOe,IAAPf,CAAH,KAUVgB,EAAgBhB,IAAOC,IAAV,KAKbgB,EAAejB,IAAOM,OAAV,KCFZY,EAAY,SAACC,EAAKC,GAC3B,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,OAAS,WACT,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,WACf,IAAMC,EAAMH,EAAOI,OACbC,EAAUF,EAAIG,QAAQ,KACtBC,EAAYJ,EAAIK,MAAMH,EAASF,EAAIM,QAEzCb,EADe,iBAAmBW,IAGtCP,EAAOU,cAAcb,EAAIc,WAE7Bd,EAAIe,KAAK,MAAOjB,GAChBE,EAAIgB,aAAe,OACnBhB,EAAIiB,QAGOC,IA1MK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAUrCC,qBAAWC,gBARXC,EAFqC,EAErCA,WACAC,EAHqC,EAGrCA,UACAC,EAJqC,EAIrCA,kBACAC,EALqC,EAKrCA,YACAC,EANqC,EAMrCA,OACAC,EAPqC,EAOrCA,iBACAC,EARqC,EAQrCA,cACAC,EATqC,EASrCA,aATqC,EA8BXC,mBAAS,UA9BE,mBA8BlCC,EA9BkC,KA8BzBC,EA9ByB,OA+BCF,mBAAS,MA/BV,mBA+BlCG,EA/BkC,KA+BnBC,EA/BmB,OAgCbJ,mBAAS,IAhCI,mBAgClCK,EAhCkC,KAgC1BC,EAhC0B,OAoCPN,mBAAS,IApCF,mBAoClCO,EApCkC,KAoCvBC,EApCuB,OAqCTR,mBAAS,IArCA,mBAqClCS,EArCkC,KAqCxBC,EArCwB,KAwCnCC,EAAc,SAACC,EAAGC,GACpBD,EAAEE,iBACFZ,EAAWW,GAEC,WAARA,IACKjB,IACDmB,QAAQC,IAAI,kBACZvB,OAKZwB,qBAAU,WACFd,GACAG,EAAUY,IAAIC,gBAAgBhB,MAEnC,CAACA,IAwCJ,OAAOiB,IAASC,aACZ,eAAC1E,EAAD,WACI,cAACM,EAAD,CAAaqE,QAASlC,IACtB,eAACtC,EAAD,WACI,eAACS,EAAD,WACI,cAACC,EAAD,CAAWC,SAAsB,WAAZwC,EAAsBqB,QAAS,SAACV,GAAD,OAAOD,EAAYC,EAAG,WAA1E,6BACA,cAACpD,EAAD,CAAWC,SAAsB,WAAZwC,EAAsBqB,QAAS,SAACV,GAAD,OAAOD,EAAYC,EAAG,WAA1E,2BAGY,WAAZX,EACI,gCACI,eAAClD,EAAD,CAAcwE,QAAQ,QAAtB,UACI,uBACIC,GAAG,QACHC,KAAK,OACLC,KAAK,QACLC,OAAO,wBACPC,SAAU,SAAAhB,GAAC,OAAIR,EAAiBQ,EAAEiB,OAAOC,MAAM,OANvD,4BAUCzB,GACG,eAAC,IAAM0B,SAAP,WACI,cAACzE,EAAD,UACI,qBAAK0E,IAAK3B,MAed,cAAC,IAAD,CACIrD,MAAM,WACNyE,KAAK,OACLC,KAAK,YACLO,MAAO1B,EACP2B,aAAc,SAACtB,GAAD,OAAOJ,EAAaI,EAAEiB,OAAOI,UAE/C,cAAC,IAAD,CACIjF,MAAM,MACNyE,KAAK,OACLC,KAAK,WACLO,MAAOxB,EACPyB,aAAc,SAACtB,GAAD,OAAOF,EAAYE,EAAEiB,OAAOI,UAG9C,cAACvE,EAAD,CAAY4D,QAAS,SAACV,GAAD,OA9DhC,SAACA,GAClBA,EAAEE,iBAEFhD,EAAUuC,GAAQ,SAAC8B,GACfxC,EAAYwC,EAAS5B,EAAWE,EAAUpB,EAAUD,MA0DAgD,CAAaxB,IAAIyB,SAAU7C,EAAvD,0CAKR,gCACI,iDACA,cAACrC,EAAD,UACKyC,GAAUA,EAAO0C,KAAI,SAAAC,GAAG,OACrB,eAACnF,EAAD,WACI,cAACC,EAAD,CAAciE,QAAS,SAACV,GAAD,OAAOlB,EAAkB6C,EAAIC,IAAK5B,IAAzD,oBACA,qBAAKU,QAAS,kBA9IlC,SAACiB,GACjBlD,EAASkD,EAAIC,KACb3C,EAAiB0C,GACjBnD,IA2IwDqD,CAAYF,IAAMP,IAAG,UAAKU,6BAAL,oBAAuDH,EAAII,eAFnFJ,EAAIC,UAOjC,eAAC5E,EAAD,WACI,cAACC,EAAD,CAAcyD,QAAS,kBAAMvB,EAAa,IAA1C,SACK,MAEL,cAAClC,EAAD,CAAcyD,QAAS,kBAAMxB,EAAc,IAA3C,SACK,kBAUlC8C,SAASC,eAAe,a,+7CC9M/B,IAAMC,EAAcC,YAAH,KAMJC,EAAapG,IAAOC,IAAV,IAwBTiG,EAmBAA,GC5BCG,IAnBK,SAAC,GAAkD,IAAhDf,EAA+C,EAA/CA,aAAclF,EAAiC,EAAjCA,MAAO0E,EAA0B,EAA1BA,KAASwB,EAAiB,+CAClE,OACI,eAACF,EAAD,WACI,mCACIG,UAAU,aACVzB,KAAMA,EACNE,SAAUM,GACNgB,IAEPlG,EACG,uBAAOuE,QAASG,EAAMyB,UAAS,UAAKD,EAAWjB,MAAMpD,OAAS,SAAW,GAA1C,qBAA/B,SACK7B,IAEL,U,q8BCdT,IAAMoG,EAAYxG,IAAOC,IAAV,IAOhBwG,KAgCOC,EAAiB1G,IAAOC,IAAV,KC7BZ0G,IAVS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACI,cAACJ,EAAD,UACI,cAACE,EAAD,UACKE,Q,iiBCLV,IAAMC,E,KAAoB7G,EAAOC,IAAV,KAMN,qBAAGY,SAA0B,uBAAyB,0CACjE,qBAAGA,SAA0B,2BAA6B,iCACjD,qBAAGA,SAA0B,SAAW,YCE/CiG,IARQ,SAAC,GAAqD,IAAnD1G,EAAkD,EAAlDA,MAAOS,EAA2C,EAA3CA,SAAUkD,EAAiC,EAAjCA,YAAgBgD,EAAiB,kDACxE,OACI,cAACF,EAAD,yBAAmBhG,SAAUA,EAAU6D,QAASX,GAAiBgD,GAAjE,aACK3G,O,suCCLb,IAAM8F,EAAcC,YAAH,KAMJC,EAAapG,IAAOC,IAAV,IAyBTiG,EAeAA,GCzBCc,IAnBQ,SAAC,GAAkD,IAAhD1B,EAA+C,EAA/CA,aAAclF,EAAiC,EAAjCA,MAAO0E,EAA0B,EAA1BA,KAASwB,EAAiB,+CACrE,OACI,eAACF,EAAD,WACI,sCACIG,UAAU,aACVzB,KAAMA,EACNE,SAAUM,GACNgB,IAEPlG,EACG,uBAAOuE,QAASG,EAAMyB,UAAS,UAAKD,EAAWjB,MAAMpD,OAAS,SAAW,GAA1C,qBAA/B,SACK7B,IAEL,U,sJCjBH6G,EAAc,SAACC,EAAOvB,EAAKwB,EAASC,GAC7C,IAAMC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAcL,GAC/BG,EAAUE,OAAO,eAAgB,oBAGjC,IAEMC,EAAiB,CACnBC,OAAQ,OACRC,QAASL,EACTM,KALQC,KAAKC,UAAU,CAAE,KAAQV,GAAW,IAAK,IAAOC,GAAU,IAAK,MAASzB,IAMhFmC,SAAU,UAGd,OAAOC,MAAM,GAAD,OAAIjC,6BAAJ,4BAAsE0B,IAOzEQ,EAAsB,SAACd,EAAOe,EAAOC,GAC9C,IAAMb,EAAY,IAAIC,QAEtBD,EAAUE,OAAO,eAAgB,oBAGjC,IAQMC,EAAiB,CACnBC,OAAQ,OACRC,QAASL,EACTM,KAXQC,KAAKC,UAAU,CACvBM,OAAQ,CACJC,aAAc,GAElBH,QACAC,SAOAJ,SAAU,UAGd,OAAOC,MAAM,GAAD,OAAIjC,6BAAJ,sBAAgE0B,IAGnEa,EAAc,SAACnB,EAAOtC,GAC/B,IAAMyC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAcL,GAE/B,IAAMM,EAAiB,CACnBC,OAAQ,SACRC,QAASL,EACTS,SAAU,UAGd,OAAOC,MAAM,GAAD,OAAIjC,6BAAJ,6BAA+DlB,GAAM4C,IC9CxE7E,EAAe2F,wBAAc,CACtC1F,YAAY,EACZI,OAAQ,KACRuF,cAAe,KACf1F,UAAW,aACXE,YAAa,aACbD,kBAAmB,aACnBG,iBAAkB,aAClBC,cAAe,aACfC,aAAc,eAwJHqF,UArJO,SAAC,GAAkB,IAAhB5B,EAAe,EAAfA,SAAe,EAMhClE,qBAAW+F,KAJXC,EAFgC,EAEhCA,WACAC,EAHgC,EAGhCA,aACAC,EAJgC,EAIhCA,aACAC,EALgC,EAKhCA,WAGI3B,EAAUxE,qBAAWoG,KAArB5B,MAR4B,EAUA9D,oBAAS,GAVT,mBAU7BR,EAV6B,KAUjBmG,EAViB,OAWR3F,mBAAS,MAXD,mBAW7BJ,EAX6B,KAWrBgG,EAXqB,OAYM5F,mBAAS,MAZf,mBAY7BmF,EAZ6B,KAYdtF,EAZc,OAapBG,mBAAS,GAAlB6E,EAb6B,sBAcZ7E,mBAAS,GAdG,mBAc7B8E,EAd6B,KAcvBe,EAduB,KAgB9BlG,EAAW,uCAAG,WAAO4C,EAAKwB,EAASC,EAAQ3E,EAAUD,GAAvC,iBAAA0G,EAAA,6DAChBN,GAAa,GACbD,GAAa,GACbI,GAAc,GAHE,kBAMW9B,EAAYC,EAAOvB,EAAKwB,EAASC,GAN5C,cAMNjF,EANM,gBAOOA,EAASgH,OAPhB,OAONC,EAPM,OAQZjF,QAAQC,IAAIgF,GAERA,EAAKC,QACLpG,EAAiBmG,EAAKC,OACtB5G,EAAS2G,EAAKC,MAAMzD,KACpB/C,IACAL,KAGJoG,GAAa,GACbD,GAAa,GACbI,GAAc,GAnBF,kDAsBZ5E,QAAQC,IAAR,MACAsE,EAAW,qBACXC,GAAa,GACbI,GAAc,GAzBF,0DAAH,8DA6BX7F,EAAa,uCAAG,WAAOoG,GAAP,iBAAAJ,EAAA,kEAEVlG,EAAOf,SAAWgG,EAFR,iEAISD,EAAoBd,EAAOe,EAAOC,EAAOoB,GAJlD,cAIRnH,EAJQ,gBAKKA,EAASgH,OALd,QAKRC,EALQ,QAOLpG,SACLgG,EAAUI,EAAKpG,QAEfiG,EAAQf,EAAOoB,IAVL,kDAednF,QAAQC,IAAR,MACAsE,EAAW,qBACXC,GAAa,GAjBC,0DAAH,sDAqBbxF,EAAY,uCAAG,WAAOmG,GAAP,iBAAAJ,EAAA,yDACJ,IAAThB,EADa,0EAGUF,EAAoBd,EAAOe,EAAOC,EAAOoB,GAHnD,cAGPnH,EAHO,gBAIMA,EAASgH,OAJf,QAIPC,EAJO,QAMJpG,SACLgG,EAAUI,EAAKpG,QAEfiG,EAAQf,EAAOoB,IATN,kDAcbnF,QAAQC,IAAR,MACAsE,EAAW,qBACXC,GAAa,GAhBA,0DAAH,sDAoBZ9F,EAAS,uCAAG,8BAAAqG,EAAA,6DACdN,GAAa,GACbD,GAAa,GAFC,kBAMaX,EAAoBd,EAAOe,EAAOC,GAN/C,cAMJ/F,EANI,gBAQSA,EAASgH,OARlB,QAQJC,EARI,QAUDpG,QACLgG,EAAUI,EAAKpG,QAGnB0F,EAAWU,EAAKG,SAChBZ,GAAa,GACbE,IAhBU,kDAmBV1E,QAAQC,IAAR,MACAsE,EAAW,qBACXC,GAAa,GArBH,0DAAH,qDAyBT7F,EAAiB,uCAAG,WAAO8B,EAAIZ,GAAX,iBAAAkF,EAAA,6DACtBlF,EAAEE,iBACF0E,GAAa,GACbD,GAAa,GAHS,kBAMIN,EAAYnB,EAAOtC,GANvB,cAMZ4E,EANY,gBAOCA,EAAQL,OAPT,OAOZC,EAPY,OASlBV,EAAWU,EAAKG,SAChBZ,GAAa,GACb9F,IAXkB,kDAalBsB,QAAQC,IAAR,MACAsE,EAAW,qBACXC,GAAa,GAfK,0DAAH,wDAmBvB,OACI,cAAChG,EAAa8G,SAAd,CACIpE,MAAO,CACHzC,aACAI,SACAuF,gBACA1F,YACAE,cACAD,oBACAG,mBACAC,gBACAC,gBAVR,SAaKyD","file":"static/js/3.098ea6a6.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 50rem;\n    max-height: 60rem;\n\n    overflow-y: scroll;\n\n    /* display: flex;\n    flex-direction: column;\n    align-items: center; */\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: var(--body-background-primary-color);\n    color: var(--primary-text-color);\n\n    position: relative;\n    z-index: 999999;\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n\n`\n\nexport const UploadButton = styled.label`\n    input[type=\"file\"] {\n        position: absolute;\n        left: -999999999rem;\n    }\n    cursor: pointer;\n        background-color: transparent;\n\n    max-width: 18rem;\n    font-size: 1.4rem;\n    font-family: inherit;\n    font-weight: bolder;\n    padding: .8rem 1rem;\n    text-align: center;\n    display: block;\n    border: 1px solid var(--primary-color);\n    color: var(--primary-color);\n    transition: background-color .1s ease-out,\n                color .2s ease-out;\n    outline: none;\n    margin: 0 auto 2rem;\n\n    &:focus {\n        outline:none;\n    }\n\n    &:hover {\n        background-color: var(--primary-color);\n        color: var(--button-font-color);\n    }\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const FlexContainer = styled.div`\n    /* max-width: 46rem; */\n\n    /* width: 100%; */\n    /* overflow-x: scroll; */\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    margin: 2rem auto;\n`\n\nexport const ImageContainer = styled.div`\n    position: relative;\n    cursor: pointer;\n    width: 20rem;\n    margin: 1rem 0;\n\n    &:hover button {\n        display: block\n    }\n\n    /* &:not(:last-child) {\n        margin-right: 1.5rem;\n    } */\n\n    img {\n        width:100%;\n        height:100%;\n        object-fit: contain;\n        object-position: center;\n    }\n`\n\nexport const DeleteButton = styled.button`\n    cursor: pointer;\n    display:none;\n    border-radius:50%;\n    position: absolute;\n    border: none;\n    background-color: var(--color-red);\n    color: #fff;\n    padding: .5rem .75rem;\n    font-size: 1rem;\n    right: .5rem;\n    top: .5rem;\n\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const ImagePreviewContainer = styled.div`\n    display: block;\n    width: 100%;\n\n    img {\n        display: block;\n        max-width: 100%;\n        /* width: inherit; */\n    }\n`\n\nexport const TabOptions = styled.div`\n    max-width: 18rem;\n    display: flex;\n    justify-content: space-between;\n    margin: 0 auto;\n`\n\nexport const TabButton = styled.button`\n    cursor: pointer;\n    outline:none;\n    border: none;\n    background-color: ${({ isActive }) => isActive ? \"var(--primary-color)\" : \"var(--body-background-primary-color)\"};\n    color: ${({ isActive }) => isActive ? \"var(--button-font-color)\" : \"var(--primary-text-color)\"} ;\n    font-weight: ${({ isActive }) => isActive ? \"700\" : \"400\"};\n    font-family: inherit;\n    font-size: 1.2rem;\n    padding: .8rem 1.5rem;\n    border-radius: .2rem;\n    margin-bottom: 2rem;\n    transition: all .3s ease-out;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const CropButton = styled(CustomButton)`\n    display: block;\n    margin: 2rem auto 0;\n\n    &:disabled {\n        cursor: not-allowed;\n        background-color: gray;\n    }\n`\n\nexport const ButtonOptions = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nexport const FetchButtons = styled.button`\n    cursor: pointer;\n    outline: none;\n    border: none;\n    padding: .4rem 1rem;\n    border-radius: 50%;\n    color: var(--button-font-color);\n    background-color: var(--color-black);\n    font-size: 1.2rem;\n    font-family: inherit;\n    margin: 0 .5rem;\n\n    &:focus {\n        outline: none;\n    }\n`","import React, { useEffect, useContext, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\n// import { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\n// import CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    // const {\n    //     getMessage,\n    //     setIsLoading,\n    //     setShowModal,\n    //     closeModal\n    // } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    // const getCropData = async (e) => {\n    //     e.preventDefault()\n    //     setShowModal(true)\n    //     setIsLoading(true)\n\n    //     try {\n    //         // if (typeof cropper !== 'undefined') {\n    //         toDataUrl(imgUrl, async (imgData) => {\n    //             const data = await handleImage(imgData, imageName, imageAlt)\n\n    //             if (data.image) {\n    //                 setImage(data.image._id)\n    //                 setSelectedImage(data.image)\n    //                 getImages()\n    //                 close()\n    //             }\n    //         })\n\n    //         // }\n    //         setShowModal(false)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    //     closeModal()\n    // };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Vybrať obrázok</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: var(--input-color);\n`\nexport const InputGroup = styled.div`\n    position: relative;\n\n    /* margin: 45px 0; */\n\n    .form-input {\n        /* background: none; */\n        background-color: var(--input-background-color);\n        color: var(--input-color);\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: var(--input-color);\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n    color: var(--primary-text-color);\n\n\n\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const FixedContainer = styled.div`\n    max-width: 125rem;\n`","import React from 'react'\nimport { Container, FixedContainer } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            <FixedContainer>\n                {children}\n            </FixedContainer>\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import styled from 'styled-components'\n\nexport const CheckboxContainer = styled.div`\n    display: inline-block;\n    cursor: pointer;\n    font-size: 1.5rem;\n    font-weight: 700;\n    /* margin-right: 2rem; */\n    background-color: ${({ isActive }) => isActive ? \"var(--primary-color)\" : \"var(--body-background-primary-color)\"};\n    color: ${({ isActive }) => isActive ? \"var(--button-font-color)\" : \"var(--secondary-text-color)\"};\n    /* font-weight: ${({ isActive }) => isActive ? \"border\" : \"normal\"}; */\n    padding: .8rem 3rem;\n    border-radius: .2rem;\n    transition: all .2s ease-out;\n\n    @media all and (max-width: 500px) {\n        padding: 0.5rem 1.5rem;\n        font-size: 1.4rem;\n    }\n`","import React from 'react'\n\nimport { CheckboxContainer } from './custom-checkbox.styles'\n\nconst CustomCheckbox = ({ label, isActive, handleClick, ...otherprops }) => {\n    return (\n        <CheckboxContainer isActive={isActive} onClick={handleClick} {...otherprops}>\n            {label}\n        </CheckboxContainer>\n    )\n}\n\nexport default CustomCheckbox\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: var(--input-color);\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: var(--input-background-color);\n        color: var(--input-color);\n\n        font-size: 1.5rem;\n        padding: .5rem .5rem .5rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 25px 0;\n        font-family: inherit;\n        resize: none;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    .form-input-label {\n        color: var(--input-color);\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: .6rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-textarea.styles'\n\nconst CustomTextarea = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <textarea\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomTextarea","export const uploadImage = (token, img, imgName, imgAlt) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({ \"name\": imgName || \" \", \"alt\": imgAlt || \" \", 'image': img });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/images/upload`, requestOptions)\n}\n\nexport const fetchImages = () => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/images`)\n}\n\nexport const fetchFilteredImages = (token, limit, skip) => {\n    const myHeaders = new Headers();\n    // myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        sortBy: {\n            dateCreated: -1\n        },\n        limit,\n        skip\n    });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/images/filter`, requestOptions)\n}\n\nexport const deleteImage = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n    const requestOptions = {\n        method: 'DELETE',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/images/${id}`, requestOptions)\n}","import React, { createContext, useState, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport {\n    deleteImage,\n    // fetchImages, \n    uploadImage,\n    fetchFilteredImages\n} from './image.queries'\n\nexport const ImageContext = createContext({\n    isDisabled: false,\n    images: null,\n    selectedImage: null,\n    getImages: () => { },\n    handleImage: () => { },\n    handleDeleteImage: () => { },\n    setSelectedImage: () => { },\n    getNextImages: () => { },\n    getPrevImage: () => { }\n})\n\nconst ImageProvider = ({ children }) => {\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const { token } = useContext(AuthContext)\n\n    const [isDisabled, setIsDisabled] = useState(false)\n    const [images, setImages] = useState(null)\n    const [selectedImage, setSelectedImage] = useState(null)\n    const [limit] = useState(4)\n    const [skip, setSkip] = useState(0)\n\n    const handleImage = async (img, imgName, imgAlt, setImage, close) => {\n        setShowModal(true)\n        setIsLoading(true)\n        setIsDisabled(true)\n\n        try {\n            const response = await uploadImage(token, img, imgName, imgAlt)\n            const data = await response.json()\n            console.log(data)\n\n            if (data.image) {\n                setSelectedImage(data.image)\n                setImage(data.image._id)\n                getImages()\n                close()\n            }\n\n            setShowModal(false)\n            setIsLoading(false)\n            setIsDisabled(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n            setIsDisabled(false)\n        }\n    }\n\n    const getNextImages = async (addToSkip) => {\n        try {\n            if (images.length !== limit) return\n\n            const response = await fetchFilteredImages(token, limit, skip + addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip + addToSkip)\n            }\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getPrevImage = async (addToSkip) => {\n        if (skip === 0) return\n        try {\n            const response = await fetchFilteredImages(token, limit, skip - addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip - addToSkip)\n\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getImages = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            // const response = await fetchImages()\n            const response = await fetchFilteredImages(token, limit, skip)\n\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n            closeModal()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleDeleteImage = async (id, e) => {\n        e.preventDefault()\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const respone = await deleteImage(token, id)\n            const data = await respone.json()\n\n            getMessage(data.message)\n            setIsLoading(false)\n            getImages()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <ImageContext.Provider\n            value={{\n                isDisabled,\n                images,\n                selectedImage,\n                getImages,\n                handleImage,\n                handleDeleteImage,\n                setSelectedImage,\n                getNextImages,\n                getPrevImage\n            }}\n        >\n            {children}\n        </ImageContext.Provider>\n    )\n}\n\nexport default ImageProvider"],"sourceRoot":""}
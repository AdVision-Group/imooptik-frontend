{"version":3,"sources":["sections/customers/customers.styles.jsx","sections/customers/customers.section.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","components/section-header/section-header.styles.jsx","components/section-header/section-header.component.jsx"],"names":["CustomerContainer","styled","div","Content","ProductId","p","Description","Options","UpdateButton","CustomButton","DeleteButton","CustomersSection","useState","searchQuery","setSearchQuery","push","useHistory","useContext","UserContext","users","totalCount","isLoading","message","showModal","getUsers","closeModal","useEffect","loading","title","close","handleChange","e","target","value","handleAddButton","count","map","user","name","email","_id","onClick","Container","paddingStyles","ScrollContainer","children","HeaderContainer","Left","Right","SearchButton","AddButton","SectionHeader","type","label"],"mappings":"s4CAGO,IAAMA,EAAoBC,IAAOC,IAAV,KAgBjBC,EAAUF,IAAOC,IAAV,KAMPE,EAAYH,IAAOI,EAAV,KAMTC,EAAcL,IAAOI,EAAV,KAUXE,EAAUN,IAAOC,IAAV,KAKPM,EAAeP,YAAOQ,IAAPR,CAAH,KAKZS,EAAeT,YAAOQ,IAAPR,CAAH,KC2BVU,UA5DU,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACpBC,EADoB,KACPC,EADO,KAEnBC,EAASC,cAATD,KAFmB,EAYvBE,qBAAWC,KAPXC,EALuB,EAKvBA,MACAC,EANuB,EAMvBA,WACAC,EAPuB,EAOvBA,UACAC,EARuB,EAQvBA,QACAC,EATuB,EASvBA,UACAC,EAVuB,EAUvBA,SACAC,EAXuB,EAWvBA,WASJ,OANAC,qBAAU,WACDP,GACDK,MAEL,CAACL,IAGA,oCACKI,GAAa,cAAC,IAAD,CAAOI,QAASN,EAAWO,MAAON,EAASO,MAAOJ,IAEhE,cAAC,IAAD,CACIZ,YAAaA,EACbiB,aAAc,SAAAC,GAAC,OAAIjB,EAAeiB,EAAEC,OAAOC,QAC3CC,gBAAiB,kBAAMnB,EAAK,4BAC5BoB,MAAOf,EACPQ,MAAM,oBAGV,cAAC,IAAD,UAEQT,GAASA,EAAMiB,KAAI,SAAAC,GAAI,OACnB,eAACrC,EAAD,WACI,eAACG,EAAD,WACI,6BAAKkC,EAAKC,MAAQD,EAAKE,QACvB,cAACnC,EAAD,UAAYiC,EAAKG,MACjB,cAAClC,EAAD,wHAGJ,eAACC,EAAD,WACI,cAACC,EAAD,CAAciC,QAAS,kBAAM1B,EAAK,aAAD,OAAcsB,EAAKG,OAApD,0BAGA,cAAC9B,EAAD,gCAXgB2B,EAAKG,e,gbClD9C,IAAME,EAAYzC,IAAOC,IAAV,IAOhByC,KCCSC,IARS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACI,cAACH,EAAD,UACKG,M,oiCCFN,IAAMC,EAAkB7C,IAAOC,IAAV,IAItByC,KAOOI,EAAO9C,IAAOC,IAAV,KAQJ8C,EAAQ/C,IAAOC,IAAV,KAeL+C,GAVehD,IAAOC,IAAV,KAUGD,YAAOQ,IAAPR,CAAH,MAMZiD,EAAYjD,YAAOQ,IAAPR,CAAH,KCPPkD,IAxBO,SAAC,GAAoF,IAAlFtC,EAAiF,EAAjFA,YAAaiB,EAAoE,EAApEA,aAAcF,EAAsD,EAAtDA,MAAsD,KAA/CO,MAA+C,EAAlCD,wBAAkC,MAAhB,aAAgB,EACtG,OACI,eAACY,EAAD,WACI,cAACC,EAAD,UACI,6BAAKnB,MAGT,eAACoB,EAAD,WACI,8BACI,cAAC,IAAD,CACII,KAAK,SACLd,KAAK,YACLL,MAAOpB,EACPiB,aAAcA,EACduB,MAAM,yBAGd,cAACJ,EAAD,iCACA,cAACC,EAAD,CAAWT,QAASP,EAApB","file":"static/js/11.838cdf8e.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nexport const CustomerContainer = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 25rem;\n\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    padding: 2rem;\n\n    &:not(:last-child) {\n        margin-bottom: 2rem;\n    }\n\n    @media all and (max-width: 500px) {\n        grid-template-columns: 1fr;   \n    }\n`\nexport const Content = styled.div`\n    h2 {\n        font-size: 1.6rem;\n    }\n`\n\nexport const ProductId = styled.p`\n    font-size: 1.2rem;\n    color: gray;\n    margin-bottom: 2rem;\n`\n\nexport const Description = styled.p`\n    max-width: 45rem;\n    font-size: 1.4rem;\n    color: gray;\n\n    @media all and (max-width: 500px) {\n        margin-bottom: 2rem;\n    }\n`\n\nexport const Options = styled.div`\n    align-self: end;\n    justify-self: end;\n`\n\nexport const UpdateButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    margin-right: 1rem;\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    background-color: rgb(235, 172, 1);\n`","import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { UserContext } from '../../context/user/user.context'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    CustomerContainer,\n    Content,\n    Options,\n    ProductId,\n    Description,\n    UpdateButton,\n    DeleteButton\n} from './customers.styles'\n\nconst CustomersSection = () => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n\n    const {\n        users,\n        totalCount,\n        isLoading,\n        message,\n        showModal,\n        getUsers,\n        closeModal\n    } = useContext(UserContext)\n\n    useEffect(() => {\n        if (!users) {\n            getUsers()\n        }\n    }, [users])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('zakaznici/novy-zakaznik')}\n                count={totalCount}\n                title=\"Zákazníci\"\n            />\n\n            <ScrollContainer>\n                {\n                    users && users.map(user => (\n                        <CustomerContainer key={user._id}>\n                            <Content>\n                                <h2>{user.name || user.email}</h2>\n                                <ProductId>{user._id}</ProductId>\n                                <Description>Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion daikon amaranth tatsoi...</Description>\n                            </Content>\n\n                            <Options>\n                                <UpdateButton onClick={() => push(`zakaznici/${user._id}`)}>\n                                    Upraviť\n                        </UpdateButton>\n                                <DeleteButton>\n                                    Vymazať\n                        </DeleteButton>\n                            </Options>\n                        </CustomerContainer>\n                    ))\n                }\n\n            </ScrollContainer>\n\n        </section>\n    )\n}\n\nexport default CustomersSection\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`","import React from 'react'\nimport { Container } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            {children}\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { paddingStyles } from '../../global.styles'\n\nexport const HeaderContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 3rem;\n    ${paddingStyles};    \n\n    @media all and (max-width: 600px) {\n        flex-wrap: wrap;\n    }\n`\n\nexport const Left = styled.div`\n    margin-top: 2rem;\n\n    display: flex;\n    align-items: center;\n\n`\n\nexport const Right = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport const Notification = styled.div`\n    background-color: #DD4C4C;\n    margin-left: 1.5rem;\n    color: #fff;\n    padding: .5rem 1rem;\n    border-radius: 1.5rem;\n    font-size: 1.4rem;\n`\n\n\nexport const SearchButton = styled(CustomButton)`\n    margin-top: 2rem;\n\n    margin-left: 2rem;\n`\n\nexport const AddButton = styled(CustomButton)`\n    margin-top: 2rem;\n\n    margin-left: 1rem;\n\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    HeaderContainer,\n    Left,\n    Right,\n    SearchButton,\n    // Notification,\n    AddButton,\n} from './section-header.styles'\n\nconst SectionHeader = ({ searchQuery, handleChange, title, count = 999, handleAddButton = () => { } }) => {\n    return (\n        <HeaderContainer>\n            <Left>\n                <h1>{title}</h1>\n                {/* <Notification>{count}</Notification> */}\n            </Left>\n            <Right>\n                <div>\n                    <CustomInput\n                        type='search'\n                        name='searchbox'\n                        value={searchQuery}\n                        handleChange={handleChange}\n                        label='Vyhľadať'\n                    />\n                </div>\n                <SearchButton>Vyhľadať</SearchButton>\n                <AddButton onClick={handleAddButton}>Pridať</AddButton>\n            </Right>\n        </HeaderContainer>\n    )\n}\n\nexport default SectionHeader\n"],"sourceRoot":""}
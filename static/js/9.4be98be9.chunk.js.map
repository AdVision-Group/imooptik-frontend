{"version":3,"sources":["sections/blog-posts/blog-posts.styles.jsx","sections/blog-posts/blog-posts.section.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","hooks/useFetch.jsx","components/section-header/section-header.styles.jsx","components/section-header/section-header.component.jsx","components/section-navbar/section-navbar.styles.jsx","components/section-navbar/section-navbar.component.jsx","components/pagination/pagination.styles.jsx","components/pagination/pagination.component.jsx","context/blog/blog.queries.jsx","context/blog/blog.context.jsx"],"names":["PostContainer","styled","div","PostImage","PostContent","Options","UpdateButton","CustomButton","DeleteButton","BlogPosts","stats","useContext","AuthContext","LoadingModalContext","closeModal","isLoading","message","showModal","BlogContext","postsCount","handlePostDelete","push","useHistory","useState","posts","setPosts","limit","sortBy","date","filterQuery","setFilterQuery","searchQuery","setSearchQuery","activeIndex","setActiveIndex","blogsData","useFetchByQuery","currentPage","setCurrentPage","productsPerPage","useEffect","refetch","response","blogs","console","log","loading","title","close","handleChange","e","target","value","handleSearch","query","handleAddButton","count","items","id","name","length","map","post","image","src","process","imagePath","alt","description","onClick","_id","totalProducts","paginate","pageNumber","skip","activePage","shrinkLabel","css","InputGroup","CustomInput","label","otherProps","className","onChange","htmlFor","Container","paddingStyles","FixedContainer","ScrollContainer","children","path","queryObj","setResponse","error","setError","setIsLoading","refetchIndex","setRefetchIndex","prevRefetchIndex","myHeaders","Headers","append","localStorage","getItem","raw","JSON","stringify","requestOptions","method","headers","body","redirect","a","fetch","res","json","data","fetchData","useFetchById","HeaderContainer","Left","Right","SearchButton","AddButton","SectionHeader","type","onKeyPress","key","NavbarContainer","NavButton","active","SectionNavbar","item","PaginationContainer","PageNumber","button","isActive","Pagination","pageNumbers","i","Math","ceil","number","fetchSinglePost","createNewPost","token","draft","html","img","updatePost","deletePost","createContext","getPosts","createPost","getPost","handlePostUpdate","resetBlog","BlogProvider","getMessage","setShowModal","setPost","setPostsCount","blog","postResponse","postData","Provider"],"mappings":"y8DAGO,IAAMA,EAAgBC,IAAOC,IAAV,KAuBbC,EAAYF,IAAOC,IAAV,KAyBTE,EAAcH,IAAOC,IAAV,KAeXG,EAAUJ,IAAOC,IAAV,KAKPI,EAAeL,YAAOM,IAAPN,CAAH,KAKZO,EAAeP,YAAOM,IAAPN,CAAH,KC0GVQ,UA/JG,WAAO,IACbC,EAAUC,qBAAWC,KAArBF,MADY,EAOhBC,qBAAWE,KAJXC,EAHgB,EAGhBA,WACAC,EAJgB,EAIhBA,UACAC,EALgB,EAKhBA,QACAC,EANgB,EAMhBA,UANgB,EAQqBN,qBAAWO,eAA5CC,EARY,EAQZA,WAAYC,EARA,EAQAA,iBACZC,EAASC,cAATD,KATY,EAWME,mBAAS,IAXf,mBAWbC,EAXa,KAWNC,EAXM,OAakBF,mBAAS,CAC3CG,MAAO,GACPC,OAAQ,CACJC,MAAO,KAhBK,mBAabC,EAba,KAaAC,EAbA,OAoBkBP,mBAAS,IApB3B,mBAoBbQ,EApBa,KAoBAC,EApBA,OAwBkBT,mBAAS,GAxB3B,mBAwBbU,EAxBa,KAwBAC,EAxBA,KAoCdC,EAAYC,YAAgB,mBAAoBP,GApClC,EAmDkBN,mBAAS,GAnD3B,mBAmDbc,EAnDa,KAmDAC,EAnDA,OAoDMf,mBAAS,IAA5BgB,EApDa,oBA4GpB,OA3CAC,qBAAU,WACc,KAAhBT,IACAD,EAAe,CACXJ,MAAO,GACPC,OAAQ,CACJC,MAAO,KAGfO,EAAUM,aAEf,CAACV,IAEJS,qBAAU,WACc,IAAhBP,GACAH,EAAe,CACXJ,MAAO,GACPC,OAAQ,CACJC,MAAO,KAIfO,EAAUM,YAEVX,EAAe,CACXJ,MAAO,GACPC,OAAQ,CACJC,KAAM,KAIdO,EAAUM,aAEf,CAACR,IAEJO,qBAAU,WACqB,IAAD,EAArBL,EAAUpB,WACXU,EAAQ,UAACU,EAAUO,gBAAX,aAAC,EAAoBC,SAElC,CAACR,EAAUpB,YAEd6B,QAAQC,IAAIV,GACZS,QAAQC,IAAInC,GAGR,oCACKO,GAAa,cAAC,IAAD,CAAO6B,QAAS/B,EAAWgC,MAAO/B,EAASgC,MAAOlC,IAEhE,cAAC,IAAD,CACIiB,YAAaA,EACbkB,aAAc,SAAAC,GAAC,OAAIlB,EAAekB,EAAEC,OAAOC,QAC3CC,aA7ES,WACG,KAAhBtB,IACAD,EAAe,CACXJ,MAAO,GACPC,OAAQ,CACJC,MAAO,GAEX0B,MAAOvB,IAEXI,EAAUM,YAqENc,gBAAiB,kBAAMlC,EAAK,wBAC5BmC,MAAOrC,EACP4B,MAAM,SAGV,cAAC,IAAD,CACIU,MAjGE,CACV,CACIC,GAAI,EACJC,KAAM,qBAEV,CACID,GAAI,EACJC,KAAM,aA2FF1B,YAAaA,EACbC,eAAgBA,IAGpB,eAAC,IAAD,WACKV,GAASA,EAAMoC,OAASpC,EAAMqC,KAAI,SAAAC,GAAI,OACnC,eAAC9D,EAAD,WACI,cAACG,EAAD,UACK2D,EAAKC,OAAS,qBAAKC,IAAG,UAAKC,6BAAL,oBAAuDH,EAAKC,MAAMG,WAAaC,IAAKL,EAAKC,MAAMI,QAE1H,eAAC/D,EAAD,WACI,6BAAK0D,EAAKH,OACV,4BAAIG,EAAKM,iBAEb,eAAC/D,EAAD,WACI,cAACC,EAAD,CAAc+D,QAAS,kBAAMhD,EAAK,QAAD,OAASyC,EAAKQ,OAA/C,0BACA,cAAC9D,EAAD,CAAc6D,QAAS,kBAAMjD,EAAiB0C,EAAKQ,MAAnD,+BAVYR,EAAKQ,QAcrB,2DAKR,cAAC,IAAD,CACI/B,gBAAiB,GACjBgC,cAAe7D,EAAMiC,MACrB6B,SAjGC,SAACC,GACd3C,EAAe,CACXJ,MAAO,GACPC,OAAQ,CACJC,MAAO,GAEX8C,MAAOD,EAAa,GAAKlC,IAE7BD,EAAemC,IA0FHE,WAAYtC,Y,03CC7KhC,IAAMuC,EAAcC,YAAH,KAMJC,EAAa7E,IAAOC,IAAV,IAuBT0E,EAmBAA,GC3BCG,IAnBK,SAAC,GAAkD,IAAhD9B,EAA+C,EAA/CA,aAAc+B,EAAiC,EAAjCA,MAAOrB,EAA0B,EAA1BA,KAASsB,EAAiB,+CAClE,OACI,eAACH,EAAD,WACI,mCACII,UAAU,aACVvB,KAAMA,EACNwB,SAAUlC,GACNgC,IAEPD,EACG,uBAAOI,QAASzB,EAAMuB,UAAS,UAAKD,EAAW7B,MAAMQ,OAAS,SAAW,GAA1C,qBAA/B,SACKoB,IAEL,U,+gBCdT,IAAMK,EAAYpF,IAAOC,IAAV,IAOhBoF,KASOC,EAAiBtF,IAAOC,IAAV,KCNZsF,IAVS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACI,cAACJ,EAAD,UACI,cAACE,EAAD,UACKE,Q,+ICoBJrD,EAAkB,SAACsD,EAAMC,GAA4B,IAAlBjB,EAAiB,0DAC7BnD,mBAAS,MADoB,mBACtDmB,EADsD,KAC5CkD,EAD4C,OAEnCrE,mBAAS,MAF0B,mBAEtDsE,EAFsD,KAE/CC,EAF+C,OAG3BvE,oBAAS,GAHkB,mBAGtDR,EAHsD,KAG3CgF,EAH2C,OAIrBxE,mBAAS,GAJY,mBAItDyE,EAJsD,KAIxCC,EAJwC,KAMvDxD,EAAU,kBAAMwD,GAAgB,SAAAC,GAAgB,OAAIA,EAAmB,MAEvEC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAcC,aAAaC,QAAQtC,cACpDkC,EAAUE,OAAO,eAAgB,oBAEjC,IAAMG,EAAMC,KAAKC,UAAUf,GAErBgB,EAAiB,CACnBC,OAAQ,OACRC,QAASV,EACTW,KAAMN,EACNO,SAAU,UAqBd,OAlBAvE,qBAAU,YACS,uCAAG,8BAAAwE,EAAA,0DACVtC,EADU,wDAEdqB,GAAa,GAFC,kBAIQkB,MAAM,GAAD,OAAIhD,6BAAJ,YAA8CyB,GAAQiB,GAJnE,cAIJO,EAJI,gBAKSA,EAAIC,OALb,OAKJC,EALI,OAOVxB,EAAYwB,GACZrB,GAAa,GARH,kDAUVD,EAAS,EAAD,IACRC,GAAa,GAXH,0DAAH,qDAcfsB,KACD,CAACrB,EAAcN,IAEX,CAAEhD,WAAU3B,YAAW8E,QAAOpD,YAG5B6E,EAAe,SAAC5B,EAAMhC,GAAsB,IAAlBgB,EAAiB,0DACpBnD,mBAAS,MADW,mBAC7CmB,EAD6C,KACnCkD,EADmC,OAE1BrE,mBAAS,MAFiB,mBAE7CsE,EAF6C,KAEtCC,EAFsC,OAGlBvE,oBAAS,GAHS,mBAG7CR,EAH6C,KAGlCgF,EAHkC,OAIZxE,mBAAS,GAJG,mBAI7CyE,EAJ6C,KAI/BC,EAJ+B,KAM9CxD,EAAU,kBAAMwD,GAAgB,SAAAC,GAAgB,OAAIA,EAAmB,MAEvEC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAcC,aAAaC,QAAQtC,cACpDkC,EAAUE,OAAO,eAAgB,oBAEjC,IAAMM,EAAiB,CACnBC,OAAQ,MACRC,QAASV,EACTY,SAAU,UAqBd,OAlBAvE,qBAAU,YACS,uCAAG,8BAAAwE,EAAA,0DACVtC,EADU,wDAEdqB,GAAa,GAFC,kBAIQkB,MAAM,GAAD,OAAIhD,6BAAJ,YAA8CyB,EAA9C,YAAsDhC,GAAMiD,GAJzE,cAIJO,EAJI,gBAKSA,EAAIC,OALb,OAKJC,EALI,OAOVxB,EAAYwB,GACZrB,GAAa,GARH,kDAUVD,EAAS,EAAD,IACRC,GAAa,GAXH,0DAAH,qDAcfsB,KACD,CAACrB,EAAcN,EAAMhC,IAEjB,CAAEhB,WAAU3B,YAAW8E,QAAOpD,a,mmCCrGlC,IAAM8E,EAAkBtH,IAAOC,IAAV,IAItBoF,KAOOkC,EAAOvH,IAAOC,IAAV,KAQJuH,EAAQxH,IAAOC,IAAV,KAeLwH,GAVezH,IAAOC,IAAV,KAUGD,YAAOM,IAAPN,CAAH,MAMZ0H,EAAY1H,YAAOM,IAAPN,CAAH,KCEP2H,IAjCO,SAAC,GAAkG,IAAhG7F,EAA+F,EAA/FA,YAAasB,EAAkF,EAAlFA,aAAcJ,EAAoE,EAApEA,aAAcF,EAAsD,EAAtDA,MAAsD,KAA/CS,MAA+C,EAAlCD,wBAAkC,MAAhB,aAAgB,EASpH,OACI,eAACgE,EAAD,WACI,cAACC,EAAD,UACI,6BAAKzE,MAGT,eAAC0E,EAAD,WACKpE,GAAgB,8BACb,cAAC,IAAD,CACIwE,KAAK,SACLlE,KAAK,YACLP,MAAOrB,EACPkB,aAAcA,EACd6E,WArBQ,SAAC5E,GACL,KAAhBnB,GACc,UAAVmB,EAAE6E,KACF1E,KAmBQ2B,MAAM,yBAGb3B,GAAgB,cAACqE,EAAD,CAAcrD,QAAShB,EAAvB,gCACjB,cAACsE,EAAD,CAAWtD,QAASd,EAApB,iC,ggBCnCT,IAAMyE,EAAkB/H,IAAOC,IAAV,IAEtBoF,KAYO2C,EAAYhI,YAAOM,IAAPN,CAAH,KAEE,qBAAGiI,OAAsB,OAAS,UAC7C,qBAAGA,OAAsB,OAAS,UAC5B,qBAAGA,OAAsB,IAAM,OACnC,qBAAGA,OAAsB,eAAiB,wBCC1CC,IAlBO,SAAC,GAA4C,IAA1C1E,EAAyC,EAAzCA,MAAOxB,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAEzC,OACI,cAAC8F,EAAD,UACI,6BAEQvE,EAAMI,KAAI,SAAAuE,GAAI,OACV,6BACI,cAACH,EAAD,CAAWC,OAAQE,EAAK1E,KAAOzB,EAAaoC,QAAS,kBAAMnC,EAAekG,EAAK1E,KAA/E,SAAsF0E,EAAKzE,QADtFyE,EAAK1E,a,0oBCZ/B,IAAM2E,EAAsBpI,IAAOC,IAAV,KAcnBoI,EAAarI,IAAOsI,OAAV,KAIC,qBAAGC,SAA0B,OAAS,iBACjD,qBAAGA,SAA0B,OAAS,UCQpCC,IAzBI,SAAC,GAIhB,IAJ8E,IAA5DlG,EAA2D,EAA3DA,gBAAiBgC,EAA0C,EAA1CA,cAAeC,EAA2B,EAA3BA,SAAUG,EAAiB,EAAjBA,WACtD+D,EAAc,GAGXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKtE,EAAgBhC,GAAkBoG,IAC7DD,EAAYrH,KAAKsH,GAGrB,OACI,cAACN,EAAD,UACI,6BAEQK,EAAY7E,KAAI,SAAAiF,GAAM,OAClB,6BACI,cAACR,EAAD,CAAYE,SAAU7D,IAAemE,EAAQzE,QAAS,kBAAMG,EAASsE,IAArE,SACKA,KAFAA,Y,qJCXpBC,EAAkB,SAACrF,GAC5B,OAAOuD,MAAM,GAAD,OAAIhD,6BAAJ,sBAAwDP,KAG3DsF,EAAgB,SAACC,EAAOtF,EAAMS,EAAa8E,EAAOC,EAAMC,GACjE,IAAMjD,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAc4C,GAC/B9C,EAAUE,OAAO,eAAgB,oBAEjC,IAEMM,EAAiB,CACnBC,OAAQ,OACRC,QAASV,EACTW,KALQL,KAAKC,UAAU,CAAE,KAAQ/C,EAAM,YAAeS,EAAa,MAAS8E,EAAO,KAAQC,EAAM,MAASC,IAM1GrC,SAAU,UAGd,OAAOE,MAAM,GAAD,OAAIhD,6BAAJ,oBAA8D0C,IAGjE0C,EAAa,SAACJ,EAAOtF,EAAMS,EAAa8E,EAAOC,EAAMC,EAAK1F,GACnE,IAAMyC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAc4C,GAC/B9C,EAAUE,OAAO,eAAgB,oBAEjC,IAEMM,EAAiB,CACnBC,OAAQ,QACRC,QAASV,EACTW,KALQL,KAAKC,UAAU,CAAE,KAAQ/C,EAAM,YAAeS,EAAa,MAAS8E,EAAO,KAAQC,EAAM,MAASC,IAM1GrC,SAAU,UAGd,OAAOE,MAAM,GAAD,OAAIhD,6BAAJ,4BAA8DP,GAAMiD,IAIvE2C,EAAa,SAACL,EAAOvF,GAC9B,IAAMyC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAc4C,GAC/B9C,EAAUE,OAAO,eAAgB,oBAGjC,IAAMM,EAAiB,CACnBC,OAAQ,SACRC,QAASV,EACTY,SAAU,UAGd,OAAOE,MAAM,GAAD,OAAIhD,6BAAJ,4BAA8DP,GAAMiD,IC7CvEzF,EAAcqI,wBAAc,CACrC/H,MAAO,KACPsC,KAAM,KACN3C,WAAY,EACZqI,SAAU,aACVC,WAAY,aACZC,QAAS,aACTC,iBAAkB,aAClBvI,iBAAkB,aAClBwI,UAAW,eA6IAC,UA1IM,SAAC,GAAkB,IAAhBpE,EAAe,EAAfA,SACZwD,EAAUtI,qBAAWC,KAArBqI,MAD2B,EAO/BtI,qBAAWE,KAHXiJ,EAJ+B,EAI/BA,WACA/D,EAL+B,EAK/BA,aACAgE,EAN+B,EAM/BA,aAN+B,EASTxI,mBAAS,MATA,mBAS5BC,EAT4B,KASrBC,EATqB,OAUXF,mBAAS,MAVE,mBAU5BuC,EAV4B,KAUtBkG,EAVsB,OAWCzI,mBAAS,GAXV,mBAW5BJ,EAX4B,KAWhB8I,EAXgB,KAa7BT,EAAQ,uCAAG,8BAAAxC,EAAA,6DACb+C,GAAa,GACbhE,GAAa,GAFA,SDlCVkB,MAAM,GAAD,OAAIhD,6BAAJ,eCkCK,cAIPvB,EAJO,gBAKMA,EAASyE,OALf,OAKPC,EALO,OAOb3F,EAAS2F,EAAKzE,OACdsH,EAAc7C,EAAK5D,OAEnBuG,GAAa,GACbhE,GAAa,GAXA,4CAAH,qDAcR2D,EAAO,uCAAG,WAAOhG,GAAP,iBAAAsD,EAAA,6DACZ+C,GAAa,GACbhE,GAAa,GAFD,kBAMegD,EAAgBrF,GAN/B,cAMFhB,EANE,gBAOWA,EAASyE,OAPpB,UAOFC,EAPE,OASRxE,QAAQC,IAAIuE,IAERA,EAAK8C,KAXD,wBAYJF,EAAQ5C,EAAK8C,MACbnE,GAAa,GACb+D,EAAW1C,EAAKpG,SAdZ,2BAkBR+E,GAAa,GACb+D,EAAW1C,EAAKpG,SAnBR,kDAuBR4B,QAAQC,IAAR,MACAiH,EAAW,qBACX/D,GAAa,GAzBL,QA6BZgE,GAAa,GACbhE,GAAa,GA9BD,0DAAH,sDAiCP0D,EAAU,uCAAG,WAAOL,EAAKzF,EAAMS,EAAa8E,EAAOC,GAAtC,iBAAAnC,EAAA,6DACf+C,GAAa,GACbhE,GAAa,GAFE,kBAKgBiD,EAAcC,EAAOtF,EAAMS,EAAa8E,EAAOC,EAAMC,GALrE,cAKLe,EALK,gBAMYA,EAAahD,OANzB,OAMLiD,EANK,OAQXN,EAAWM,EAASpJ,SACpB+E,GAAa,GACbyD,IAVW,kDAYX5G,QAAQC,IAAR,MACAiH,EAAW,qBACX/D,GAAa,GAdF,0DAAH,8DAkBV4D,EAAgB,uCAAG,WAAOhG,EAAMS,EAAa8E,EAAOC,EAAMC,EAAK1F,GAA5C,iBAAAsD,EAAA,6DACrB+C,GAAa,GACbhE,GAAa,GAFQ,kBAKUsD,EAAWJ,EAAOtF,EAAMS,EAAa8E,EAAOC,EAAMC,EAAK1F,GALjE,cAKXyG,EALW,gBAMMA,EAAahD,OANnB,OAMXiD,EANW,OAQjBN,EAAWM,EAASpJ,SACpB+E,GAAa,GACbyD,IAViB,kDAYjB5G,QAAQC,IAAR,MACAiH,EAAW,qBACX/D,GAAa,GAdI,0DAAH,gEAkBhB3E,EAAgB,uCAAG,WAAOsC,GAAP,iBAAAsD,EAAA,6DACrB+C,GAAa,GACbhE,GAAa,GAFQ,kBAKUuD,EAAWL,EAAOvF,GAL5B,cAKXyG,EALW,gBAMMA,EAAahD,OANnB,OAMXiD,EANW,OAQjBN,EAAWM,EAASpJ,SACpB+E,GAAa,GACbyD,IAViB,kDAajB5G,QAAQC,IAAR,MACAiH,EAAW,qBACX/D,GAAa,GAfI,0DAAH,sDAuBtB,OACI,cAAC7E,EAAYmJ,SAAb,CACIjH,MAAO,CACH5B,QACAsC,OACA3C,aACAqI,WACAC,aACAC,UACAC,mBACAvI,mBACAwI,UAfM,WACdI,EAAQ,QAIR,SAaKvE","file":"static/js/9.4be98be9.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nexport const PostContainer = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 25rem 1fr 25rem;\n\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    padding: 2rem;\n\n    &:not(:last-child) {\n        margin-bottom: 2rem;\n    }\n\n        @media all and (max-width: 800px) {\n        grid-template-columns : 20rem 1fr;\n        grid-template-rows: 1fr 1fr;\n\n        @media all and (max-width: 500px) {\n            grid-template-columns : 1fr;\n            grid-template-rows: unset;\n        }\n    }\n`\n\nexport const PostImage = styled.div`\n    /* width: 100%; */\n    /* height: 100%; */\n    margin-right: 2rem;\n\n    img {\n        width: 100%;\n        height: 100%;\n        object-position: top;\n        object-fit: contain;\n    }\n\n        @media all and (max-width: 800px) {\n        align-self: start;\n        grid-row-start: 1;\n        grid-row-end: 3;   \n\n        @media all and (max-width: 500px) {\n            justify-self: center;\n            margin-bottom: 2rem;\n        }\n\n    }\n`\n\nexport const PostContent = styled.div`\n    h2 {\n        font-size: 1.6rem;\n    }\n\n    p {\n        font-size: 1.4rem;\n        color: gray;\n    }\n\n        @media all and (max-width: 500px) {\n            margin-bottom: 2rem;\n        }\n`\n\nexport const Options = styled.div`\n    align-self: end;\n    justify-self: end;\n`\n\nexport const UpdateButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    margin-right: 1rem;\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    background-color: rgb(235, 172, 1);\n`","import React, { useState, useEffect, useContext } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport Popup from '../../components/popup/pop-up.component'\nimport Pagination from '../../components/pagination/pagination.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    PostContainer,\n    PostImage,\n    PostContent,\n    Options,\n    UpdateButton,\n    DeleteButton\n} from './blog-posts.styles'\n\nconst BlogPosts = () => {\n    const { stats } = useContext(AuthContext)\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { postsCount, handlePostDelete } = useContext(BlogContext)\n    const { push } = useHistory()\n\n    const [posts, setPosts] = useState([])\n\n    const [filterQuery, setFilterQuery] = useState({\n        limit: 10,\n        sortBy: {\n            date: -1\n        },\n        // query: \"\"\n    })\n    const [searchQuery, setSearchQuery] = useState('')\n\n\n\n    const [activeIndex, setActiveIndex] = useState(0)\n    const items = [\n        {\n            id: 0,\n            name: \"Dátum pridania\"\n        },\n        {\n            id: 1,\n            name: \"Abecedne\"\n        },\n    ]\n\n    const blogsData = useFetchByQuery('api/blogs/filter', filterQuery)\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n                query: searchQuery\n            })\n            blogsData.refetch()\n        }\n    }\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [productsPerPage] = useState(10)\n\n    const paginate = (pageNumber) => {\n        setFilterQuery({\n            limit: 10,\n            sortBy: {\n                date: -1\n            },\n            skip: (pageNumber - 1) * productsPerPage\n        })\n        setCurrentPage(pageNumber)\n    }\n\n    useEffect(() => {\n        if (searchQuery === '') {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n            })\n            blogsData.refetch()\n        }\n    }, [searchQuery])\n\n    useEffect(() => {\n        if (activeIndex === 0) {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n                // query: \"\"\n            })\n            blogsData.refetch()\n        } else {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: 1\n                },\n                // query: \"\"\n            })\n            blogsData.refetch()\n        }\n    }, [activeIndex])\n\n    useEffect(() => {\n        if (!blogsData.isLoading) {\n            setPosts(blogsData.response?.blogs)\n        }\n    }, [blogsData.isLoading])\n\n    console.log(blogsData)\n    console.log(stats)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleSearch={handleSearch}\n                handleAddButton={() => push('blog/novy-prispevok')}\n                count={postsCount}\n                title=\"Blog\"\n            />\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                {posts && posts.length ? posts.map(post => (\n                    <PostContainer key={post._id}>\n                        <PostImage>\n                            {post.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${post.image.imagePath}`} alt={post.image.alt} />}\n                        </PostImage>\n                        <PostContent>\n                            <h2>{post.name}</h2>\n                            <p>{post.description}</p>\n                        </PostContent>\n                        <Options>\n                            <UpdateButton onClick={() => push(`blog/${post._id}`)}>Upraviť</UpdateButton>\n                            <DeleteButton onClick={() => handlePostDelete(post._id)}>Vymazať</DeleteButton>\n                        </Options>\n                    </PostContainer>\n                )) : (\n                        <div>\n                            Žiadne príspevky\n                        </div>\n                    )}\n\n                <Pagination\n                    productsPerPage={10}\n                    totalProducts={stats.blogs}\n                    paginate={paginate}\n                    activePage={currentPage}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BlogPosts\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`\n\nexport const FixedContainer = styled.div`\n    max-width: 115rem;\n`","import React from 'react'\nimport { Container, FixedContainer } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            <FixedContainer>\n                {children}\n            </FixedContainer>\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import { useEffect, useState } from 'react'\n\nexport const useFetch = (path, options, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, options)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [])\n\n    return { response, isLoading, error }\n}\n\nexport const useFetchByQuery = (path, queryObj, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify(queryObj)\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path])\n\n    return { response, isLoading, error, refetch }\n}\n\nexport const useFetchById = (path, id, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}/${id}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path, id])\n\n    return { response, isLoading, error, refetch }\n}\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { paddingStyles } from '../../global.styles'\n\nexport const HeaderContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 3rem;\n    ${paddingStyles};    \n\n    @media all and (max-width: 600px) {\n        flex-wrap: wrap;\n    }\n`\n\nexport const Left = styled.div`\n    margin-top: 2rem;\n\n    display: flex;\n    align-items: center;\n\n`\n\nexport const Right = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport const Notification = styled.div`\n    background-color: #DD4C4C;\n    margin-left: 1.5rem;\n    color: #fff;\n    padding: .5rem 1rem;\n    border-radius: 1.5rem;\n    font-size: 1.4rem;\n`\n\n\nexport const SearchButton = styled(CustomButton)`\n    margin-top: 2rem;\n\n    margin-left: 2rem;\n`\n\nexport const AddButton = styled(CustomButton)`\n    margin-top: 2rem;\n    margin-left: 1rem;\n    background-color: rgb(235, 172, 1);\n    font-weight: bolder;\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    HeaderContainer,\n    Left,\n    Right,\n    SearchButton,\n    // Notification,\n    AddButton,\n} from './section-header.styles'\n\nconst SectionHeader = ({ searchQuery, handleSearch, handleChange, title, count = 999, handleAddButton = () => { } }) => {\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== '') {\n            if (e.key === 'Enter') {\n                handleSearch()\n            }\n        }\n    }\n\n    return (\n        <HeaderContainer>\n            <Left>\n                <h1>{title}</h1>\n                {/* <Notification>{count}</Notification> */}\n            </Left>\n            <Right>\n                {handleSearch && <div>\n                    <CustomInput\n                        type='search'\n                        name='searchbox'\n                        value={searchQuery}\n                        handleChange={handleChange}\n                        onKeyPress={handleSearchOnEnter}\n                        label='Vyhľadať'\n                    />\n                </div>}\n                {handleSearch && <SearchButton onClick={handleSearch}>Vyhľadať</SearchButton>}\n                <AddButton onClick={handleAddButton}>Pridať</AddButton>\n            </Right>\n        </HeaderContainer>\n    )\n}\n\nexport default SectionHeader\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { paddingStyles } from '../../global.styles'\n\n\nexport const NavbarContainer = styled.div`\n    margin-bottom: 3rem;\n    ${paddingStyles}\n\n    ul {\n        display: flex;\n        list-style: none;\n\n        li {\n            margin-right: 1.5rem;\n        }\n    }\n`\n\nexport const NavButton = styled(CustomButton)`\n    transition: all 0.3s ease-out;\n    background-color: ${({ active }) => active ? '#000' : '#fff'};\n    color: ${({ active }) => active ? '#fff' : '#000'};\n    font-weight: ${({ active }) => active ? 400 : 700};\n    padding: ${({ active }) => active ? \".5rem 2.5rem\" : \".5rem 1rem .5rem 0\"};\n`","import React from 'react'\n\nimport {\n    NavbarContainer,\n    NavButton\n} from './section-navbar.styles'\n\nconst SectionNavbar = ({ items, activeIndex, setActiveIndex }) => {\n\n    return (\n        <NavbarContainer>\n            <ul>\n                {\n                    items.map(item => (\n                        <li key={item.id}>\n                            <NavButton active={item.id === activeIndex} onClick={() => setActiveIndex(item.id)} >{item.name}</NavButton>\n                        </li>\n                    ))\n                }\n\n            </ul>\n        </NavbarContainer >\n    )\n}\n\nexport default SectionNavbar\n","import styled from 'styled-components'\n\nexport const PaginationContainer = styled.div`\n    ul {\n        width:3rem;\n        list-style: none;\n        display: flex;\n        justify-content: space-between;\n        margin: 0 auto;\n\n        li {\n\n        }\n    }\n`\n\nexport const PageNumber = styled.button`\n    cursor: pointer;\n    outline: none;\n    border: none;\n    background-color: ${({ isActive }) => isActive ? \"#000\" : \"transparent\"};\n    color: ${({ isActive }) => isActive ? \"#fff\" : \"#000\"};\n    font-family: inherit;\n    font-size: inherit;\n    border-radius: 50%;\n    padding: 0.3rem 1rem;\n\n\n    &:focus {\n        outline: none;\n    }\n`","import React from 'react'\n\nimport { PaginationContainer, PageNumber } from './pagination.styles'\n\nconst Pagination = ({ productsPerPage, totalProducts, paginate, activePage }) => {\n    const pageNumbers = []\n\n\n    for (let i = 1; i <= Math.ceil(totalProducts / productsPerPage); i++) {\n        pageNumbers.push(i)\n    }\n\n    return (\n        <PaginationContainer>\n            <ul>\n                {\n                    pageNumbers.map(number => (\n                        <li key={number}>\n                            <PageNumber isActive={activePage === number} onClick={() => paginate(number)}>\n                                {number}\n                            </PageNumber>\n                        </li>\n                    ))\n                }\n            </ul>\n        </PaginationContainer>\n    )\n}\n\nexport default Pagination\n","\n\nexport const fetchPosts = () => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/blogs`)\n}\n\nexport const fetchSinglePost = (id) => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/blogs/${id}`)\n}\n\nexport const createNewPost = (token, name, description, draft, html, img) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify({ \"name\": name, \"description\": description, \"draft\": draft, \"html\": html, 'image': img });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs`, requestOptions)\n}\n\nexport const updatePost = (token, name, description, draft, html, img, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify({ \"name\": name, \"description\": description, \"draft\": draft, \"html\": html, 'image': img });\n\n    const requestOptions = {\n        method: 'PATCH',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs/${id}`, requestOptions)\n\n}\n\nexport const deletePost = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const requestOptions = {\n        method: 'DELETE',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs/${id}`, requestOptions)\n\n}\n\n","import React, { createContext, useState, useContext } from 'react'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport {\n    fetchPosts,\n    createNewPost,\n    fetchSinglePost,\n    updatePost,\n    deletePost,\n} from './blog.queries'\n\n\nexport const BlogContext = createContext({\n    posts: null,\n    post: null,\n    postsCount: 0,\n    getPosts: () => { },\n    createPost: () => { },\n    getPost: () => { },\n    handlePostUpdate: () => { },\n    handlePostDelete: () => { },\n    resetBlog: () => { }\n})\n\nconst BlogProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const [posts, setPosts] = useState(null)\n    const [post, setPost] = useState(null)\n    const [postsCount, setPostsCount] = useState(0)\n\n    const getPosts = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const response = await fetchPosts()\n        const data = await response.json()\n\n        setPosts(data.blogs)\n        setPostsCount(data.count)\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const getPost = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n\n            const response = await fetchSinglePost(id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.blog) {\n                setPost(data.blog)\n                setIsLoading(false)\n                getMessage(data.message)\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n            // setPosts(data.blogs)\n            // setPostsCount(data.count)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const createPost = async (img, name, description, draft, html) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await createNewPost(token, name, description, draft, html, img)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostUpdate = async (name, description, draft, html, img, id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await updatePost(token, name, description, draft, html, img, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostDelete = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await deletePost(token, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const resetBlog = () => {\n        setPost(null)\n    }\n\n    return (\n        <BlogContext.Provider\n            value={{\n                posts,\n                post,\n                postsCount,\n                getPosts,\n                createPost,\n                getPost,\n                handlePostUpdate,\n                handlePostDelete,\n                resetBlog,\n            }}\n        >\n            {children}\n        </BlogContext.Provider>\n    )\n}\n\nexport default BlogProvider"],"sourceRoot":""}
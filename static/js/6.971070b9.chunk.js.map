{"version":3,"sources":["components/product-glasses-form/product-glasses-form.styles.jsx","components/product-glasses-form/product-glasses-form.component.jsx","components/product-lenses-form/product-lenses-form.styles.jsx","components/product-lenses-form/product-lenses-form.component.jsx","sections/product/product.styles.jsx","sections/product/product.section.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/product-input-row/product-input-row.styles.jsx","components/product-input-row/product-input-row.component.jsx","components/custom-checkbox/custom-checkbox.styles.jsx","components/custom-checkbox/custom-checkbox.component.jsx","components/custom-form-switch/custom-form-switch.styles.jsx","components/custom-form-switch/custom-form-switch.component.jsx","components/custom-textarea/custom-textarea.styles.jsx","components/custom-textarea/custom-textarea.component.jsx","components/modal-images/modal-images.styles.jsx","components/modal-images/modal-images.component.jsx"],"names":["CategoryTitle","styled","h3","CategoryContainer","div","CategoryCheckbox","CustomCheckbox","TextareaRow","CustomSelect","select","Title","ProductGlassesForm","product","handleChange","handleSizeChange","handleSpecsChange","handleAvailableChange","categories","handleCategoryChange","activeCategoryIndex","lensesParameters","handleParameterChange","currentUser","Fragment","map","category","idx","label","name","value","isActive","handleClick","example","type","eanCode","e","required","brand","list","autoComplete","id","brands","price","toString","rows","description","diopters","curvature","average","colorCode","specs","sex","onChange","frameColor","frameMaterial","frameStyle","lensColor","size","available","admin","retailNames","premises","ProductLensesForm","lense","handleLensesCylinderRangeChange","handleLensesDioptersRangeChange","dioptersRange","cylinderRange","Header","paddingStyles","DeleteButton","CustomButton","AddButton","ImageContainer","ProductImage","hasImage","DraftCheckBox","ProductSection","useState","showImageModal","setImageModal","useContext","AuthContext","useParams","warData","WarehouseContext","switchFormButtons","formToShow","toggleProductForms","isUpdating","toggleDraft","selectImage","createNewProduct","updateProduct","handleProductDelete","resetProduct","lenses","handleLensesChange","getSigleLenses","createNewLenses","updateLenses","deleteLenses","getSingleProduct","LoadingModalContext","closeModal","isLoading","showModal","message","selectedImage","ImageContext","useEffect","console","log","onSubmit","preventDefault","imagePath","alert","handleSubmit","loading","title","close","setImage","eshop","onClick","_id","items","activeIndex","src","process","alt","shrinkLabel","css","InputGroup","CustomInput","otherProps","className","htmlFor","length","Container","ScrollContainer","children","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","InputRow","ProductInputRow","otherprops","CheckboxContainer","ToggleOptionsContainer","ToggleFormButton","CustomFormSwitch","item","CustomTextarea","ModalContainer","Modal","UploadButton","CloseButton","button","FlexContainer","ImagePreviewContainer","TabOptions","TabButton","CropButton","ButtonOptions","FetchButtons","toDataUrl","url","callback","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","str","result","lastPos","indexOf","cuttedstr","slice","readAsDataURL","response","open","responseType","send","ModalImages","isDisabled","getImages","handleDeleteImage","handleImage","images","setSelectedImage","getNextImages","getPrevImage","showTab","setShowTab","imageToUpload","setImageToUpload","imgUrl","setImgUrl","imageName","setImageName","imageAlt","setImageAlt","tab","URL","createObjectURL","ReactDOM","createPortal","accept","target","files","imgData","disabled","img","document","getElementById"],"mappings":"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","file":"static/js/6.971070b9.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\nexport const CategoryTitle = styled.h3`\n    margin-bottom: 2rem;\n`\n\nexport const CategoryContainer = styled.div`\n    width:100%;\n    display: flex;\n    /* justify-content: space-evenly; */\n    margin-bottom: 1rem;\n    flex-wrap: wrap;\n\n`\n\nexport const CategoryCheckbox = styled(CustomCheckbox)`\n    margin: 0 1rem 2rem;\n`\n\n\nexport const TextareaRow = styled.div`\n    display: grid;\n    grid-template-columns: 35rem 1fr;\n    /* align-items: center; */\n    /* max-width: 45rem; */\n\n    p {\n        margin-top: 2.5rem;\n        margin-left: 2rem;\n        opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n    @media all and (max-width: 800px) {\n        display: flex;\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n\n        div {\n            width: 100%;\n        }\n    }\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: #F5F5F5;\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`\n\nexport const Title = styled.h3`\n    margin-top: 2rem;\n`\n\n","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport ProductInputRow from '../product-input-row/product-input-row.component'\n\nimport {\n    TextareaRow,\n    CustomSelect,\n    Title,\n    CategoryContainer,\n    CategoryCheckbox,\n    CategoryTitle,\n} from './product-glasses-form.styles.jsx'\n\nimport { brands, retailNames } from '../../context/warehouse/warehouse.utils'\n\n\nconst ProductGlassesForm = ({\n    product,\n    handleChange,\n    handleSizeChange,\n    handleSpecsChange,\n    handleAvailableChange,\n    categories,\n    handleCategoryChange,\n    activeCategoryIndex,\n    lensesParameters,\n    handleParameterChange,\n    currentUser\n}) => {\n\n    return (\n        <React.Fragment>\n\n            <div>\n                <CategoryTitle>Kategória</CategoryTitle>\n                <CategoryContainer>\n                    {\n                        categories.map((category, idx) => {\n                            return (\n                                <CategoryCheckbox\n                                    key={idx}\n                                    label={category.name}\n                                    value={category.value}\n                                    name='type'\n                                    isActive={category.value === activeCategoryIndex}\n                                    handleClick={() => handleCategoryChange(category.value)}\n                                />\n                            )\n                        })\n                    }\n                </CategoryContainer>\n            </div>\n            <div>\n\n                <h3>Základné informacie</h3>\n                <ProductInputRow\n                    label=\"Unikátny kód produktu\"\n                    example=\"napr: TH1590807\"\n                >\n                    <CustomInput\n                        label=\"Ean kód*\"\n                        type='text'\n                        name='eanCode'\n                        value={product.eanCode}\n                        handleChange={(e) => handleChange(e)}\n                        required\n                    />\n                </ProductInputRow>\n                <ProductInputRow\n                    label=\"Názov produktu\"\n                    example=\"napr: Tommy Hilfiger\"\n                >\n                    <CustomInput\n                        label=\"Názov*\"\n                        type='text'\n                        name='name'\n                        value={product.name}\n                        handleChange={(e) => handleChange(e)}\n                        required\n\n                    />\n                </ProductInputRow>\n                <ProductInputRow\n                    label=\"Značka\"\n                    example=\"napr: Tommy Hilfiger\"\n                >\n                    <CustomInput\n                        label=\"Značka\"\n                        type='text'\n                        name='brand'\n                        value={product.brand}\n                        handleChange={(e) => handleChange(e)}\n                        list={\"brands\"}\n                        autoComplete='off'\n                    />\n                    <datalist id=\"brands\">\n                        {brands.map(brand => (\n                            <option key={brand} value={brand} />\n                        ))}\n                    </datalist>\n                </ProductInputRow>\n                <ProductInputRow\n                    label=\"Cena v centoch\"\n                    example=\"napr: 1055 = 10,55€\"\n                >\n                    <CustomInput\n                        label=\"Cena*\"\n                        type='number'\n                        name='price'\n                        value={product.price.toString()}\n                        handleChange={(e) => handleChange(e)}\n                        required\n\n                    />\n                </ProductInputRow>\n                <TextareaRow>\n                    <div>\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={product.description}\n                            handleChange={(e) => handleChange(e)}\n                        />\n                    </div>\n                    <div>\n                        <p>Popis produktu</p>\n                    </div>\n                </TextareaRow>\n\n                {\n                    product.type === 4 && (\n                        <React.Fragment>\n                            <h3>Parametre</h3>\n                            <ProductInputRow\n                                label={`Dioptrie`}\n                                example=\"napr: 0\"\n                            >\n                                <CustomInput\n                                    label={\"minimum\"}\n                                    type='number'\n                                    name='diopters'\n                                    value={lensesParameters.diopters[0].toString()}\n                                    handleChange={e => handleParameterChange(e, 0)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label={`Dioptrie`}\n                                example=\"napr: 0\"\n                            >\n                                <CustomInput\n                                    label={\"maximum\"}\n                                    type='number'\n                                    value={\"\"}\n                                    name='diopters'\n                                    value={lensesParameters.diopters[1].toString()}\n                                    handleChange={e => handleParameterChange(e, 1)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label={``}\n                                example=\"napr: 8.5\"\n                            >\n                                <CustomInput\n                                    label={\"Zakrivenie\"}\n                                    type='number'\n                                    value={\"\"}\n                                    name='curvature'\n                                    value={lensesParameters.curvature.toString()}\n                                // handleChange={e => handleLensesDioptersRangeChange(e, idx)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label={``}\n                                example=\"napr: 14\"\n                            >\n                                <CustomInput\n                                    label={\"Priemer\"}\n                                    type='number'\n                                    value={\"\"}\n                                    name=\"average\"\n                                    value={lensesParameters.average.toString()}\n                                // handleChange={e => handleLensesDioptersRangeChange(e, idx)}\n                                />\n                            </ProductInputRow>\n                        </React.Fragment>\n                    )\n                }\n\n                {\n                    !(product.type === 5 || product.type === 4) && (\n                        <React.Fragment>\n                            <h3>Špecifikacie</h3>\n                            <ProductInputRow\n                                label=\"Farebný kód produktu\"\n                                example=\"napr: #000000\"\n                            >\n                                <CustomInput\n                                    label=\"Color code\"\n                                    type='text'\n                                    name='colorCode'\n                                    value={product.colorCode}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Pohlavie pre ktoré je produkt určený\"\n                                example=\"\"\n                            >\n                                <CustomSelect name='sex' value={product.specs.sex} onChange={e => handleSpecsChange(e)}>\n                                    <option value='M'>Pánske</option>\n                                    <option value='W'>Dámske</option>\n                                    <option value='D'>Detské</option>\n                                    <option value='U'>Nezáleží</option>\n                                </CustomSelect>\n                            </ProductInputRow>\n\n                            <ProductInputRow\n                                label=\"Farba\"\n                                example=\"napr: Čierna\"\n                            >\n                                <CustomInput\n                                    label=\"Farba rámu\"\n                                    type='text'\n                                    name='frameColor'\n                                    value={product.specs.frameColor}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Materiál\"\n                                example=\"napr: Titán\"\n                            >\n                                <CustomInput\n                                    label=\"Materiál rámu\"\n                                    type='text'\n                                    name='frameMaterial'\n                                    value={product.specs.frameMaterial}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Tvar\"\n                                example=\"napr: Okruhlý\"\n                            >\n                                <CustomInput\n                                    label=\"Tvar rámu\"\n                                    type='text'\n                                    name='frameStyle'\n                                    value={product.specs.frameStyle}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Farba skla\"\n                                example=\"napr: Priehľadná\"\n                            >\n                                <CustomInput\n                                    label=\"Farba\"\n                                    type='text'\n                                    name='lensColor'\n                                    value={product.specs.lensColor}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n\n                            <Title>Velikosť</Title>\n\n                            {product.specs.size.map((value, idx) => {\n                                return (\n                                    <ProductInputRow\n                                        key={idx}\n                                        label={`Velkosť`}\n                                        example=\"napr: 0\"\n                                    >\n                                        <CustomInput\n                                            label={`${idx}`}\n                                            type='number'\n                                            // name={store.name}\n                                            value={value.toString()}\n                                            handleChange={e => handleSizeChange(e, idx)}\n                                        />\n                                    </ProductInputRow>\n                                )\n                            })}\n                        </React.Fragment>\n                    )\n                }\n\n                <Title>Skladové zásoby</Title>\n                {product && product.available.map((value, idx) => {\n\n                    return (\n                        <ProductInputRow\n                            key={idx}\n                            label={`Počet kusov na predajni,`}\n                            example=\"napr: 0\"\n                        >\n                            <CustomInput\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                type='number'\n                                // name={store.name}\n                                value={value.toString()}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        </ProductInputRow>\n                    )\n                })}\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default ProductGlassesForm\n","import styled from 'styled-components'\n\nexport const TextareaRow = styled.div`\n    display: grid;\n    grid-template-columns: 35rem 1fr;\n    /* align-items: center; */\n    /* max-width: 45rem; */\n\n    p {\n        margin-top: 2.5rem;\n        margin-left: 2rem;\n        opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n        @media all and (max-width: 800px) {\n        display: flex;\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n\n        div {\n            width: 100%;\n        }\n    }\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport ProductInputRow from '../product-input-row/product-input-row.component'\n\nimport {\n    TextareaRow\n} from './product-lenses-form.styles'\n\nconst ProductLensesForm = ({ lense, handleChange, handleLensesCylinderRangeChange, handleLensesDioptersRangeChange }) => {\n    return (\n        <div>\n            <h3>Základné informacie</h3>\n            <ProductInputRow\n                label=\"Názov šošoviek\"\n                example=\"napr: Smile\"\n            >\n                <CustomInput\n                    label=\"Názov*\"\n                    type='text'\n                    name='name'\n                    value={lense.name}\n                    handleChange={(e) => handleChange(e)}\n                    required\n\n                />\n            </ProductInputRow>\n            <ProductInputRow\n                label=\"Značka\"\n                example=\"napr: Zeiss\"\n            >\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={lense.brand}\n                    handleChange={(e) => handleChange(e)}\n                />\n            </ProductInputRow>\n            <ProductInputRow\n                label=\"Cena v centoch\"\n                example=\"napr: 1055 = 10,55€\"\n            >\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={lense.price.toString()}\n                    handleChange={(e) => handleChange(e)}\n                    required\n\n                />\n            </ProductInputRow>\n            <TextareaRow>\n                <div>\n                    <CustomTextarea\n                        label=\"Popis*\"\n                        name='description'\n                        rows='5'\n                        value={lense.description}\n                        handleChange={(e) => handleChange(e)}\n                        required\n                    />\n                </div>\n                <div>\n                    <p>Popis produktu</p>\n                </div>\n            </TextareaRow>\n\n            <h3>Špecifikacie</h3>\n\n            {lense && lense.dioptersRange.map((value, idx) => {\n                return (\n                    <ProductInputRow\n                        key={idx}\n                        label={`Dioptrie`}\n                        example=\"napr: 0\"\n                    >\n                        <CustomInput\n                            label={idx === 0 ? \"minimum\" : \"maximum\"}\n                            type='number'\n                            // name={store.name}\n                            value={value.toString()}\n                            handleChange={e => handleLensesDioptersRangeChange(e, idx)}\n                        />\n                    </ProductInputRow>\n                )\n            })}\n\n            {lense && lense.cylinderRange.map((value, idx) => {\n                return (\n                    <ProductInputRow\n                        key={idx}\n                        label={`Cylinder`}\n                        example=\"napr: 0\"\n                    >\n                        <CustomInput\n                            label={idx === 0 ? \"minimum\" : \"maximum\"}\n                            type='number'\n                            // name={store.name}\n                            value={value.toString()}\n                            handleChange={e => handleLensesCylinderRangeChange(e, idx)}\n                        />\n                    </ProductInputRow>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProductLensesForm\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\nimport CustomButton from '../../components/custom-button/custom-button.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n\n    @media all and (max-width: 800px) {\n        flex-wrap: wrap;\n\n        div:nth-child(2) {\n            margin-bottom: 2rem;\n        }\n    }\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    margin: 0 2rem 0 0;\n    background-color: #DD4C4C;\n`\nexport const AddButton = styled(CustomButton)`\n    font-size: 1.4rem;\n`\n\nexport const Title = styled.h3`\n    margin-top: 2rem;\n    /* margin-bottom: 2rem; */\n`\n\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"#eee\"};\n    margin: 3rem 0 5rem;\n    padding: 6rem;\n    position: relative;\n    max-width: 45rem;\n\n    img {\n        position: absolute;\n        width: 100%;\n        /* max-height: 40rem; */\n        object-fit:cover;\n        object-position:center;\n\n        /* height: 100%; */\n        left: 0;\n        top: 0;\n\n    }\n`\n\nexport const DraftCheckBox = styled(CustomCheckbox)`\n    margin-right: 2rem;\n`\n\n","import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\n\nimport CustomFormSwitch from '../../components/custom-form-switch/custom-form-switch.component'\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\n\nimport {\n    Header,\n    AddButton,\n    DeleteButton,\n    Title,\n    ProductImage,\n    DraftCheckBox,\n    ImageContainer,\n} from './product.styles'\n\nconst ProductSection = () => {\n    const [showImageModal, setImageModal] = useState(false)\n    const { currentUser } = useContext(AuthContext)\n    const { id } = useParams()\n    const warData = useContext(WarehouseContext)\n    const {\n        switchFormButtons,\n        formToShow,\n        toggleProductForms,\n        isUpdating,\n        activeCategoryIndex,\n        categories,\n        toggleDraft,\n        handleCategoryChange,\n        handleAvailableChange,\n        handleSizeChange,\n        selectImage,\n        product,\n        createNewProduct,\n        updateProduct,\n        handleProductDelete,\n        resetProduct,\n        lenses,\n        handleLensesChange,\n        handleLensesDioptersRangeChange,\n        handleLensesCylinderRangeChange,\n        getSigleLenses,\n        createNewLenses,\n        updateLenses,\n        deleteLenses,\n        getSingleProduct,\n        handleChange,\n        handleSpecsChange,\n        lensesParameters,\n        handleParameterChange\n    } = warData\n\n    const {\n        closeModal,\n        isLoading,\n        showModal,\n        message\n    } = useContext(LoadingModalContext)\n\n    const { selectedImage } = useContext(ImageContext)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (formToShow === 0) {\n            if (!product.imagePath) {\n                alert(\"Žiaden obrazok!\")\n                return\n            }\n\n            if (id === 'novy-produkt') {\n                createNewProduct(product)\n                resetProduct()\n            } else {\n                updateProduct(product)\n                resetProduct()\n            }\n        } else {\n            if (!lenses.imagePath) {\n                alert(\"Žiaden obrazok!\")\n                return\n            }\n\n            if (id === 'novy-produkt') {\n                createNewLenses(lenses)\n            } else {\n                updateLenses(lenses)\n            }\n\n        }\n\n    }\n\n    useEffect(() => {\n        if (id !== \"novy-produkt\") {\n\n            console.log(\"formToShow\")\n            console.log(formToShow)\n            console.log(\"formToShow\")\n            if (formToShow === 0) {\n                getSingleProduct(id)\n            } else {\n                getSigleLenses(id)\n            }\n        }\n    }, [id])\n\n    useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            resetProduct()\n        }\n    }, [])\n\n    return (\n        <form onSubmit={e => handleSubmit(e)}>\n            { showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={selectImage} />}\n            <Header>\n                <div>\n                    <h1>{isUpdating ? \"Upraviť produkt\" : \"Pridať nový produkt\"}</h1>\n                </div>\n                <div>\n                    <DraftCheckBox\n                        label='Verejný'\n                        isActive={formToShow === 0 ? product.eshop : lenses.eshop}\n                        handleClick={() => toggleDraft()}\n                    />\n                    {isUpdating && <DeleteButton onClick={formToShow === 0 ? () => handleProductDelete(product._id) : () => deleteLenses(lenses._id)}>Vymazať</DeleteButton>}\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť produkt\" : \"Pridať product\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating &&\n                    <CustomFormSwitch\n                        items={switchFormButtons}\n                        title=\"Aký produkt chcete pridať?\"\n                        activeIndex={formToShow}\n                        handleClick={toggleProductForms}\n                    />\n                }\n\n                {formToShow === 0 ? (\n                    <ProductGlassesForm\n                        activeCategoryIndex={activeCategoryIndex}\n                        categories={categories}\n                        product={product}\n                        handleChange={handleChange}\n                        handleSizeChange={handleSizeChange}\n                        handleSpecsChange={handleSpecsChange}\n                        handleCategoryChange={handleCategoryChange}\n                        handleAvailableChange={handleAvailableChange}\n                        lensesParameters={lensesParameters}\n                        handleParameterChange={handleParameterChange}\n                        currentUser={currentUser}\n                    />\n                ) : (\n                        <ProductLensesForm\n                            lense={lenses}\n                            handleChange={handleLensesChange}\n                            handleLensesDioptersRangeChange={handleLensesDioptersRangeChange}\n                            handleLensesCylinderRangeChange={handleLensesCylinderRangeChange}\n                        />\n                    )\n                }\n\n                <div>\n                    <ImageContainer>\n\n                        <Title>Obrázok</Title>\n\n                        <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </ProductImage>\n                    </ImageContainer>\n                </div>\n            </ScrollContainer>\n\n        </form >\n    )\n}\n\nexport default ProductSection\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`","import React from 'react'\nimport { Container } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            {children}\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components'\n\nexport const InputRow = styled.div`\n    display:flex;\n    align-items: center;\n\n    p {\n        margin-top: 1.8rem;\n        margin-left: 2rem;\n            opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n    @media all and (max-width: 800px) {\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n    }\n`","import React from 'react'\n\nimport { InputRow } from './product-input-row.styles'\n\nconst ProductInputRow = ({ children, label, example, ...otherprops }) => {\n    return (\n        <InputRow {...otherprops}>\n            <div>\n                {children}\n            </div>\n            <div>\n                <p>{label + \" \"}<span>{example}</span></p>\n            </div>\n        </InputRow>\n    )\n}\n\nexport default ProductInputRow\n","import styled from 'styled-components'\n\nexport const CheckboxContainer = styled.div`\n    display: inline-block;\n    cursor: pointer;\n    font-size: 1.5rem;\n    font-weight: 700;\n    /* margin-right: 2rem; */\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"rgba(0,0,0,.06)\"};\n    color: ${({ isActive }) => isActive ? \"#fff\" : \"#000\"};\n    padding: .8rem 3rem;\n    border-radius: .2rem;\n    transition: all .2s ease-out;\n\n    @media all and (max-width: 500px) {\n        padding: 0.5rem 1.5rem;\n        font-size: 1.4rem;\n    }\n`","import React from 'react'\n\nimport { CheckboxContainer } from './custom-checkbox.styles'\n\nconst CustomCheckbox = ({ label, isActive, handleClick, ...otherprops }) => {\n    return (\n        <CheckboxContainer isActive={isActive} onClick={handleClick} {...otherprops}>\n            {label}\n        </CheckboxContainer>\n    )\n}\n\nexport default CustomCheckbox\n","import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nexport const Title = styled.h3`\n    margin-top: 2rem;\n    /* margin-bottom: 2rem; */\n`\n\nexport const ToggleOptionsContainer = styled.div`\n    display: flex;\n    margin: 2rem 0;\n`\n\nexport const ToggleFormButton = styled(CustomButton)`\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"#000\"};\n    font-weight: 700;\n    margin-right: 2rem;\n`","import React from 'react'\n\nimport {\n    Title,\n    ToggleFormButton,\n    ToggleOptionsContainer\n} from './custom-form-switch.styles'\n\nconst CustomFormSwitch = ({ title, activeIndex, handleClick, items }) => {\n    return (\n        <React.Fragment>\n            <Title>{title}</Title>\n            <ToggleOptionsContainer>\n                {\n                    items.map((item, idx) => (\n                        <ToggleFormButton key={idx} isActive={activeIndex === idx} onClick={(e) => handleClick(e, idx)}>{item.name}</ToggleFormButton>\n                    ))\n                }\n            </ToggleOptionsContainer>\n        </React.Fragment>\n    )\n}\n\nexport default CustomFormSwitch\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: .5rem .5rem .5rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 25px 0;\n        font-family: inherit;\n        resize: none;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: .6rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-textarea.styles'\n\nconst CustomTextarea = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <textarea\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomTextarea","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 50rem;\n    max-height: 60rem;\n\n    overflow-y: scroll;\n\n    /* display: flex;\n    flex-direction: column;\n    align-items: center; */\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: white;\n\n    position: relative;\n    z-index: 999999;\n\n`\n\nexport const UploadButton = styled.label`\n    input[type=\"file\"] {\n        position: absolute;\n        left: -999999999rem;\n    }\n    cursor: pointer;\n    background-color: #000;\n    color: #fff;\n    max-width: 18rem;\n    font-size: 1.4rem;\n    font-family: inherit;\n    padding: .8rem 1rem;\n    text-align: center;\n    display: block;\n    border: 1px solid #000;\n    transition: background-color .1s ease-out,\n                color .2s ease-out;\n    outline: none;\n    margin: 0 auto 2rem;\n\n    &:focus {\n        outline:none;\n    }\n\n    &:hover {\n        background-color: transparent;\n        color: #000;\n    }\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const FlexContainer = styled.div`\n    /* max-width: 46rem; */\n\n    /* width: 100%; */\n    /* overflow-x: scroll; */\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    margin: 2rem auto;\n`\n\nexport const ImageContainer = styled.div`\n    position: relative;\n    cursor: pointer;\n    width: 20rem;\n    margin: 1rem 0;\n\n    &:hover button {\n        display: block\n    }\n\n    /* &:not(:last-child) {\n        margin-right: 1.5rem;\n    } */\n\n    img {\n        width:100%;\n        height:100%;\n        object-fit: contain;\n        object-position: center;\n    }\n`\n\nexport const DeleteButton = styled.button`\n    cursor: pointer;\n    display:none;\n    border-radius:50%;\n    position: absolute;\n    border: none;\n    background-color: rgb(235, 172, 1);\n    padding: .5rem .75rem;\n    font-size: 1rem;\n    right: .5rem;\n    top: .5rem;\n\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const ImagePreviewContainer = styled.div`\n    display: block;\n    width: 100%;\n\n    img {\n        display: block;\n        max-width: 100%;\n        /* width: inherit; */\n    }\n`\n\nexport const TabOptions = styled.div`\n    max-width: 18rem;\n    display: flex;\n    justify-content: space-between;\n    margin: 0 auto;\n`\n\nexport const TabButton = styled.button`\n    cursor: pointer;\n    outline:none;\n    border: none;\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"#000\"};\n    color: #fff;\n    font-weight: ${({ isActive }) => isActive ? \"700\" : \"400\"};\n    font-family: inherit;\n    font-size: 1.2rem;\n    padding: .8rem 1.5rem;\n    border-radius: .2rem;\n    margin-bottom: 2rem;\n    transition: all .3s ease-out;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const CropButton = styled(CustomButton)`\n    display: block;\n    margin: 2rem auto 0;\n\n    &:disabled {\n        cursor: not-allowed;\n        background-color: gray;\n    }\n`\n\nexport const ButtonOptions = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nexport const FetchButtons = styled.button`\n    cursor: pointer;\n    outline: none;\n    border: none;\n    padding: .4rem 1rem;\n    border-radius: 50%;\n    color: #fff;\n    background-color: #000;\n    font-size: 1.2rem;\n    font-family: inherit;\n    margin: 0 .5rem;\n\n    &:focus {\n        outline: none;\n    }\n`","import React, { useEffect, useContext, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\n// import { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\n// import CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    // const {\n    //     getMessage,\n    //     setIsLoading,\n    //     setShowModal,\n    //     closeModal\n    // } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    // const getCropData = async (e) => {\n    //     e.preventDefault()\n    //     setShowModal(true)\n    //     setIsLoading(true)\n\n    //     try {\n    //         // if (typeof cropper !== 'undefined') {\n    //         toDataUrl(imgUrl, async (imgData) => {\n    //             const data = await handleImage(imgData, imageName, imageAlt)\n\n    //             if (data.image) {\n    //                 setImage(data.image._id)\n    //                 setSelectedImage(data.image)\n    //                 getImages()\n    //                 close()\n    //             }\n    //         })\n\n    //         // }\n    //         setShowModal(false)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    //     closeModal()\n    // };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Vybrať obrázok</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n"],"sourceRoot":""}
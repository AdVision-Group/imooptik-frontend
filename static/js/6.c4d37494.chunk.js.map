{"version":3,"sources":["components/product-glasses-form/product-glasses-form.styles.jsx","components/product-glasses-form/product-glasses-form.component.jsx","components/product-lenses-form/product-lenses-form.styles.jsx","components/product-lenses-form/product-lenses-form.component.jsx","components/product-accessories-form/product-accessories-form.styles.jsx","components/product-accessories-form/product-accessories-form.component.jsx","components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx","components/product-contact-lenses-form/product-contact-lenses-form.component.jsx","sections/product/product.styles.jsx","sections/product/product.section.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/product-input-row/product-input-row.styles.jsx","components/product-input-row/product-input-row.component.jsx","components/custom-checkbox/custom-checkbox.styles.jsx","components/custom-checkbox/custom-checkbox.component.jsx","components/custom-textarea/custom-textarea.styles.jsx","components/custom-textarea/custom-textarea.component.jsx","context/image/image.queries.jsx","context/image/image.context.jsx","components/modal-images/modal-images.styles.jsx","components/modal-images/modal-images.component.jsx"],"names":["ImageContainer","styled","div","ProductImage","hasImage","GlassesContainerForm","GlassesContainer","GlassesParameterContainer","StockContainer","CustomSelect","select","ProductGlassesForm","product","handleChange","selectedImage","retailNames","currentUser","checkParameter","handleAvailableChange","handleGlassesParametersChange","handleGlassesSpecsSizeChange","handleSpecsChange","glassesParameters","setImageModal","isUpdating","label","type","name","value","eanCode","toString","e","brand","category","link","rows","description","required","price","onClick","src","process","imagePath","alt","colorCode","specs","frameColor","frameMaterial","frameStyle","lensColor","sex","onChange","size","map","idx","available","admin","premises","LensesFormContainer","LensesContainer","LensesParametersContainer","ProductLensesForm","lenses","handleParameterChange","Array","inputLabel","dioptersRange","cylinderRange","AccessoriesFormContainer","AccessoriesContainer","ProductAccessoriesForm","ContactLensesFormContainer","ContactLensesContainer","ContactLensesParametersContainer","IncreaseButton","CustomButton","ProductContactLensesForm","handleContactLensesChange","handleAddNewParameter","contactLensesParameters","allowedCurves","target","allowedDiameters","Header","paddingStyles","SubmitButton","IsPublicCheckbox","CustomCheckbox","CategoryContainer","CategoryCheckbox","ProductSection","id","useParams","useContext","AuthContext","LoadingModalContext","closeModal","message","isLoading","showModal","getMessage","setShowModal","ImageContext","setSelectedImage","useState","showImageModal","setIsUpdating","WarehouseContext","handleLensesChange","handleLensesParameterChange","createProduct","updateProduct","resetProduct","resetLenses","resetContactLenses","resetGlassesParameters","createLenses","updateLenses","handleProductChange","handleProductAvailableChange","getEanCode","handleContactLensesParameterChange","handleGlassesParameterChange","handleGlassesParameterSpecsChange","handleGlassesSizeChange","getSingleProduct","hasChanged","setHasChanged","productObj","setProductObj","handleChangeType","Object","keys","length","window","confirm","formatLink","arr","Number","console","log","useEffect","image","when","loading","title","close","setImage","imgId","isActive","eshop","handleClick","preventDefault","contactLenses","productCategories","splice","firstIndex","find","shrinkLabel","css","InputGroup","CustomInput","otherProps","className","htmlFor","Container","FixedContainer","ScrollContainer","children","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","InputRow","ProductInputRow","example","otherprops","CheckboxContainer","CustomTextarea","uploadImage","token","img","imgName","imgAlt","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","redirect","fetch","fetchFilteredImages","limit","skip","sortBy","dateCreated","deleteImage","createContext","isDisabled","images","getImages","handleImage","handleDeleteImage","getNextImages","getPrevImage","ImageProvider","setIsLoading","setIsDisabled","setImages","setSkip","a","response","json","data","_id","addToSkip","respone","Provider","ModalContainer","Modal","UploadButton","CloseButton","button","FlexContainer","DeleteButton","ImagePreviewContainer","TabOptions","TabButton","CropButton","ButtonOptions","FetchButtons","toDataUrl","url","callback","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","str","result","lastPos","indexOf","cuttedstr","slice","readAsDataURL","open","responseType","send","ModalImages","showTab","setShowTab","imageToUpload","setImageToUpload","imgUrl","setImgUrl","imageName","setImageName","imageAlt","setImageAlt","tab","URL","createObjectURL","ReactDOM","createPortal","accept","files","Fragment","imgData","handleSubmit","disabled","selectImage","document","getElementById"],"mappings":"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","file":"static/js/6.c4d37494.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"#eee\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const GlassesContainerForm = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const GlassesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n`\n\nexport const GlassesParameterContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n    margin-bottom: 3rem;\n\n    h4 {\n        margin-top: 1rem;\n    }\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: #F5F5F5;\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport ProductInputRow from '../product-input-row/product-input-row.component'\n\nimport {\n    ImageContainer,\n    ProductImage,\n    GlassesContainerForm,\n    GlassesContainer,\n    GlassesParameterContainer,\n    StockContainer,\n    CustomSelect\n} from './product-glasses-form.styles.jsx'\n\nconst ProductGlassesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    retailNames,\n    currentUser,\n    checkParameter,\n    handleAvailableChange,\n    handleGlassesParametersChange,\n    handleGlassesSpecsSizeChange,\n    handleSpecsChange,\n    glassesParameters,\n    setImageModal,\n    isUpdating,\n}) => {\n\n    return (\n        <GlassesContainerForm>\n            <GlassesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </GlassesContainer>\n            <div>\n                <GlassesParameterContainer>\n                    <h3>Parametre</h3>\n                    <CustomInput\n                        label=\"Farebný kód\"\n                        type='text'\n                        name='colorCode'\n                        value={glassesParameters.colorCode ?? \"\"}\n                        handleChange={(e) => handleGlassesParametersChange(e)}\n                    />\n                    <div>\n                        <CustomInput\n                            label=\"Farba rámu\"\n                            type='text'\n                            name='frameColor'\n                            value={glassesParameters.specs.frameColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Materiál rámu\"\n                            type='text'\n                            name='frameMaterial'\n                            value={glassesParameters.specs.frameMaterial ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Tvar rámu\"\n                            type='text'\n                            name='frameStyle'\n                            value={glassesParameters.specs.frameStyle ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Farba šošovky\"\n                            type='text'\n                            name='lensColor'\n                            value={glassesParameters.specs.lensColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomSelect\n                            label=\"Pohlavie\"\n                            type='text'\n                            name='sex'\n                            value={glassesParameters.specs.sex ?? \"\"}\n                            onChange={(e) => handleSpecsChange(e)}\n                        >\n                            <option value='M'>Pánske</option>\n                            <option value='W'>Dámske</option>\n                            <option value='D'>Detské</option>\n                            <option value='U'>Nezáleží</option>\n                        </CustomSelect>\n                    </div>\n                    <div>\n                        <h4>Velkosť</h4>\n                        {glassesParameters.specs.size.map((value, idx) => (\n                            <CustomInput\n                                key={idx}\n                                label={idx === 0 ? \"Veľkosť očnice\" : idx === 1 ? \"Veľkosť mostika\" : \"Veľkosť stranice\"}\n                                type='text'\n                                name='size'\n                                value={checkParameter(glassesParameters.specs.size, idx)}\n                                handleChange={(e) => handleGlassesSpecsSizeChange(e, idx)}\n                            />\n                        ))}\n                    </div>\n                </GlassesParameterContainer>\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    {\n                        product.available.map((value, idx) => {\n                            if (idx === 4) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })\n                    }\n                </StockContainer>\n\n            </div>\n        </GlassesContainerForm>\n    )\n}\n\nexport default ProductGlassesForm\n","import styled from 'styled-components'\n\n\nexport const LensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const LensesContainer = styled.div`\n    /* width: 45rem; */\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n    /* display: inline-block; */\n    /* padding-bottom: 4rem;  */\n    margin-bottom: 5rem;\n`\n\nexport const LensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n\n    h3 {\n        /* margin-bottom: 1rem; */\n    }\n\n    h4 {\n        margin-top: 2rem;\n    }\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"#eee\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    LensesFormContainer,\n    LensesContainer,\n    LensesParametersContainer,\n    ProductImage,\n    ImageContainer,\n} from './product-lenses-form.styles'\n\nconst ProductLensesForm = ({\n    lenses,\n    selectedImage,\n    setImageModal,\n    handleChange,\n    handleParameterChange,\n    checkParameter,\n}) => {\n    return (\n        <LensesFormContainer>\n            <LensesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"Názov šošoviek*\"\n                    type='text'\n                    name='name'\n                    value={lenses.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka*\"\n                    type='text'\n                    name='brand'\n                    value={lenses.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomTextarea\n                    label=\"Popis*\"\n                    name='description'\n                    rows='5'\n                    value={lenses.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={lenses.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </LensesContainer>\n            <LensesParametersContainer>\n                <h3>Parametre</h3>\n\n                <h4>Dioptrie</h4>\n                {[...Array(2)].map((value, idx) => {\n                    const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\n\n                    return (\n                        <div key={idx}>\n                            <CustomInput\n                                label={inputLabel}\n                                type='number'\n                                name='dioptersRange'\n                                value={checkParameter(lenses.dioptersRange, idx)}\n                                handleChange={(e) => handleParameterChange(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n\n                <h4>Cylinder</h4>\n                {[...Array(2)].map((value, idx) => {\n                    const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\n\n                    return (\n                        <div key={idx}>\n                            <CustomInput\n                                label={inputLabel}\n                                type='number'\n                                name='cylinderRange'\n                                value={checkParameter(lenses.cylinderRange, idx)}\n                                handleChange={(e) => handleParameterChange(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n            </LensesParametersContainer>\n        </LensesFormContainer>\n    )\n}\n\nexport default ProductLensesForm\n","import styled from 'styled-components'\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"#eee\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const AccessoriesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const AccessoriesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    AccessoriesFormContainer,\n    AccessoriesContainer,\n    StockContainer,\n    ImageContainer,\n    ProductImage,\n} from './product-accessories-form.styles'\n\nconst ProductAccessoriesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    setImageModal,\n    handleAvailableChange,\n    checkParameter,\n    retailNames,\n    currentUser,\n    isUpdating\n}) => {\n    return (\n        <AccessoriesFormContainer>\n            <AccessoriesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </AccessoriesContainer>\n            <StockContainer>\n                <h3>Skladové zásoby</h3>\n                {\n                    product.available.map((value, idx) => {\n                        if (idx === 4) return\n                        return (\n                            <CustomInput\n                                key={idx}\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, idx)}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        )\n                    })\n                }\n            </StockContainer>\n\n        </AccessoriesFormContainer>\n    )\n}\n\nexport default ProductAccessoriesForm\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"#eee\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const ContactLensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const ContactLensesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n`\n\nexport const ContactLensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n    margin-bottom: 3rem;\n\n    h4 {\n        margin-top: 1rem;\n    }\n`\n\nexport const IncreaseButton = styled(CustomButton)`\n    margin-top: 2rem;\n    font-size: 1.4rem;\n\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    ContactLensesContainer,\n    ContactLensesFormContainer,\n    StockContainer,\n    ContactLensesParametersContainer,\n    IncreaseButton,\n    ImageContainer,\n    ProductImage,\n} from './product-contact-lenses-form.styles'\n\nconst ProductContactLensesForm = ({\n    product,\n    handleChange,\n    setImageModal,\n    selectedImage,\n    checkParameter,\n    handleContactLensesChange,\n    handleAddNewParameter,\n    contactLensesParameters,\n    retailNames,\n    currentUser,\n    handleAvailableChange,\n    isUpdating\n}) => {\n    return (\n        <ContactLensesFormContainer>\n            <ContactLensesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </ContactLensesContainer>\n            <div>\n                <ContactLensesParametersContainer>\n                    <h3>Parametre</h3>\n                    <div>\n                        <h4>Zakrivenie</h4>\n                        {contactLensesParameters.allowedCurves.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedCurves\"}\n                                    value={checkParameter(contactLensesParameters.allowedCurves, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedCurves'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n                    <div>\n                        <h4>Priemery</h4>\n                        {contactLensesParameters.allowedDiameters.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedDiameters\"}\n                                    value={checkParameter(contactLensesParameters.allowedDiameters, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedDiameters'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n\n                    <div>\n                        <h4>Dioptrie</h4>\n                        {contactLensesParameters.dioptersRange.map((value, idx) => {\n                            const inputLabel = idx === 0 ? \"minimum\" : \"maximum\"\n\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={inputLabel}\n                                    type='text'\n                                    name={\"dioptersRange\"}\n                                    value={checkParameter(contactLensesParameters.dioptersRange, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </div>\n                </ContactLensesParametersContainer>\n\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    {\n                        product.available.map((value, idx) => {\n                            if (idx === 4) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })\n                    }\n                </StockContainer>\n            </div>\n        </ContactLensesFormContainer>\n    )\n}\n\nexport default ProductContactLensesForm\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\nimport CustomButton from '../../components/custom-button/custom-button.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n\n`\n\nexport const SubmitButton = styled(CustomButton)`\n\n`\n\nexport const IsPublicCheckbox = styled(CustomCheckbox)`\n    margin-right: 2rem;\n`\n\n\nexport const CategoryContainer = styled.div`\n    padding: 2rem; \n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    border-radius: .5rem;\n    display: inline-block;\n    margin-bottom: 3rem;\n\n    h3 {\n        margin-bottom: 1.5rem;\n    }\n`\nexport const CategoryCheckbox = styled(CustomCheckbox)`\n    &:not(:last-child) {\n        margin-right: 2rem;\n    }\n`","import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport Popup from '../../components/popup/pop-up.component'\n\n// import CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n// import CustomFormSwitch from '../../components/custom-form-switch/custom-form-switch.component'\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\nimport ProductAccessoriesForm from '../../components/product-accessories-form/product-accessories-form.component'\nimport ProductContactLensesForm from '../../components/product-contact-lenses-form/product-contact-lenses-form.component'\n\n// import { useFetch } from '../../hooks/useFetch'\n\nimport { productCategories, checkParameter, retailNames, formatLink } from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Header,\n    CategoryContainer,\n    CategoryCheckbox,\n    SubmitButton,\n    IsPublicCheckbox,\n\n} from './product.styles'\n\nconst ProductSection = () => {\n    const { id } = useParams()\n    const { currentUser } = useContext(AuthContext)\n    const { closeModal, message, isLoading, showModal, getMessage, setShowModal } = useContext(LoadingModalContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const {\n        eanCode,\n        product,\n        lenses,\n        contactLensesParameters,\n        glassesParameters,\n        handleLensesChange,\n        handleLensesParameterChange,\n        createProduct,\n        updateProduct,\n        resetProduct,\n        resetLenses,\n        resetContactLenses,\n        resetGlassesParameters,\n        createLenses,\n        updateLenses,\n        handleProductChange,\n        handleProductAvailableChange,\n        getEanCode,\n        handleAddNewParameter,\n        handleContactLensesParameterChange,\n        handleGlassesParameterChange,\n        handleGlassesParameterSpecsChange,\n        handleGlassesSizeChange,\n        getSingleProduct\n    } = useContext(WarehouseContext)\n\n    const [hasChanged, setHasChanged] = useState(false)\n    const [productObj, setProductObj] = useState({})\n\n\n\n    const handleChangeType = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (!isUpdating) {\n            if (productObj.type === 0) {\n                if (Object.keys(productObj).length > 1) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetLenses()\n                    } else {\n                        return\n                    }\n                }\n            } else {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetProduct()\n                        resetContactLenses()\n                        resetGlassesParameters()\n                    } else {\n                        return\n                    }\n                }\n            }\n        }\n        setProductObj({\n            [name]: value\n        })\n\n    }\n\n    const handleChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (productObj.type === 0) {\n            handleLensesChange(e)\n        }\n\n        if (productObj.type === 5) {\n            handleProductChange(e)\n        }\n\n        if (productObj.type === 4) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 3) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 2) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 1) {\n            handleProductChange(e)\n        }\n\n\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        if (isUpdating) {\n            if (name === 'name') {\n                setProductObj({\n                    ...productObj,\n                    [name]: value,\n                    link: formatLink(value)\n                })\n                return\n            }\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParametersChange = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterChange(e)\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleSpecsChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterSpecsChange(e)\n\n        if (value === '') {\n            delete productObj.specs[name]\n\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSpecsSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleGlassesSizeChange(e, idx)\n\n        if (value === '') {\n            if (productObj.specs[name].length > 1) {\n                arr[idx] = 1001\n\n                const firstIndex = arr[0]\n                const canDeleteSpecs = arr.map(value => {\n                    if (firstIndex !== value) {\n                        return false\n                    } else {\n                        return true\n                    }\n                })\n\n                const verdict = canDeleteSpecs.find(value => value === false)\n\n                if (verdict === false) {\n                    setProductObj({\n                        ...productObj,\n                        specs: {\n                            ...productObj.specs,\n                            [name]: arr\n                        }\n                    })\n                } else {\n                    delete productObj.specs[name]\n                }\n\n            }\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleProductAvailableChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleContactLensesChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleContactLensesParameterChange(e, idx)\n\n        if (value === '') {\n            if (productObj.contactLenses[name].length > 1) {\n                arr.splice(idx, 1)\n                setProductObj({\n                    ...productObj,\n                    contactLenses: {\n                        ...productObj.contactLenses,\n                        [name]: arr\n                    }\n                })\n            } else {\n                delete productObj.contactLenses[name]\n            }\n            if (Object.keys(productObj.contactLenses).length === 0) {\n                delete productObj[\"contactLenses\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            contactLenses: {\n                ...productObj.contactLenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleLensesParameterChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleSelectImage = (imgId) => {\n        setHasChanged(true)\n        setProductObj({\n            ...productObj,\n            image: imgId\n        })\n    }\n\n    console.log(\"PRODUCT OBJECT\")\n    console.log(productObj)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (isUpdating) {\n            if (productObj.type === 0) {\n                setHasChanged(false)\n                delete productObj['link']\n                delete productObj['type']\n                updateLenses(productObj)\n                return\n            } else if (productObj.type === 3) {\n                setHasChanged(false)\n                delete productObj['type']\n                updateProduct({ ...productObj, contactLenses: {} })\n                return\n            } else {\n                setHasChanged(false)\n                delete productObj['type']\n                updateProduct(productObj)\n                return\n            }\n        } else {\n            if (productObj.type === 0) {\n                if (!productObj.name || !productObj.brand || !productObj.description || !productObj.price || !productObj.image || !productObj.dioptersRange || !productObj.cylinderRange) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    delete productObj['type']\n                    createLenses(productObj)\n                }\n            }\n            if (productObj.type === 5 || productObj.type === 4 || productObj.type === 3 || productObj.type === 2 || productObj.type === 1) {\n                if (!productObj.name || !productObj.price || !productObj.image) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    createProduct(productObj)\n                }\n            }\n        }\n\n\n    }\n\n    useEffect(() => {\n        if (id === \"novy-produkt\") {\n            if (!eanCode) {\n                getEanCode()\n            } else {\n                if (productObj.type) {\n                    handleChange({\n                        target: {\n                            name: \"eanCode\",\n                            value: eanCode\n                        }\n                    })\n                }\n            }\n        }\n    }, [id, eanCode, productObj.type, productObj.eanCode, product.type])\n\n    useEffect(() => {\n        if (id !== 'novy-produkt') {\n            getSingleProduct(id)\n            setIsUpdating(true)\n            if (!productObj.type) {\n                handleChangeType({\n                    target: {\n                        name: \"type\",\n                        value: product.type\n                    }\n                })\n\n            }\n        }\n    }, [id, product.type])\n\n    useEffect(() => {\n        if (product.image) {\n            setSelectedImage(product.image)\n        }\n        if (lenses.image) {\n            setSelectedImage(lenses.image)\n        }\n    }, [product.image, lenses.image])\n\n    useEffect(() => {\n        return () => {\n            resetProduct()\n            resetLenses()\n            resetContactLenses()\n            resetGlassesParameters()\n            setProductObj({})\n            setSelectedImage(null)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <section>\n            <Prompt\n                when={hasChanged}\n                message=\"Chcete opustiť formulár?\"\n            />\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={handleSelectImage} />}\n            <Header>\n                <div>\n                    <h1>Nový Produkt</h1>\n                </div>\n                <div>\n                    <IsPublicCheckbox\n                        label=\"Verejné\"\n                        // value={product.ehop}\n                        name='eshop'\n                        isActive={product.eshop}\n                        handleClick={() => handleChange({\n                            target: {\n                                name: \"eshop\",\n                                value: !product.eshop\n                            }\n                        })}\n                    />\n                    <SubmitButton onClick={handleSubmit}>Vytvoriť</SubmitButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating && <CategoryContainer>\n                    <h3>Aký produkt chcete pridať?</h3>\n                    {productCategories.map((category, idx) => (\n                        <CategoryCheckbox\n                            key={idx}\n                            label={category.name}\n                            value={category.value}\n                            name='type'\n                            isActive={category.value === productObj.type}\n                            handleClick={() => handleChangeType({\n                                target: {\n                                    name: \"type\",\n                                    value: category.value\n                                }\n                            })}\n                        />\n                    ))}\n                </CategoryContainer>}\n\n                {productObj.type === 0 && (\n                    <ProductLensesForm\n                        lenses={lenses}\n                        selectedImage={selectedImage}\n                        setImageModal={setImageModal}\n                        handleChange={handleChange}\n                        handleParameterChange={handleParameterChange}\n                        checkParameter={checkParameter}\n                    />\n                )}\n\n                {productObj.type === 5 && (\n                    <ProductAccessoriesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        currentUser={currentUser}\n                        retailNames={retailNames}\n                        selectedImage={selectedImage}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAvailableChange={handleAvailableChange}\n                    />\n                )}\n\n                {productObj.type === 3 && (\n                    <ProductContactLensesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        contactLensesParameters={contactLensesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAddNewParameter={handleAddNewParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        handleContactLensesChange={handleContactLensesChange}\n                    />\n                )}\n\n                {(productObj.type === 1 || productObj.type === 2 || productObj.type === 4) && (\n                    <ProductGlassesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        glassesParameters={glassesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleSpecsChange={handleSpecsChange}\n                        handleAvailableChange={handleAvailableChange}\n                        handleGlassesSpecsSizeChange={handleGlassesSpecsSizeChange}\n                        handleGlassesParametersChange={handleGlassesParametersChange}\n                    />\n                )}\n\n            </ScrollContainer>\n\n        </section >\n    )\n}\n\nexport default ProductSection\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`\n\nexport const FixedContainer = styled.div`\n    max-width: 115rem;\n`","import React from 'react'\nimport { Container, FixedContainer } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            <FixedContainer>\n                {children}\n            </FixedContainer>\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components'\n\nexport const InputRow = styled.div`\n    display:flex;\n    align-items: center;\n\n    p {\n        margin-top: 1.8rem;\n        margin-left: 2rem;\n            opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n    @media all and (max-width: 800px) {\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n    }\n`","import React from 'react'\n\nimport { InputRow } from './product-input-row.styles'\n\nconst ProductInputRow = ({ children, label, example, ...otherprops }) => {\n    return (\n        <InputRow {...otherprops}>\n            <div>\n                {children}\n            </div>\n            <div>\n                <p>{label + \" \"}<span>{example}</span></p>\n            </div>\n        </InputRow>\n    )\n}\n\nexport default ProductInputRow\n","import styled from 'styled-components'\n\nexport const CheckboxContainer = styled.div`\n    display: inline-block;\n    cursor: pointer;\n    font-size: 1.5rem;\n    font-weight: 700;\n    /* margin-right: 2rem; */\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"rgba(0,0,0,.06)\"};\n    color: ${({ isActive }) => isActive ? \"#fff\" : \"#000\"};\n    padding: .8rem 3rem;\n    border-radius: .2rem;\n    transition: all .2s ease-out;\n\n    @media all and (max-width: 500px) {\n        padding: 0.5rem 1.5rem;\n        font-size: 1.4rem;\n    }\n`","import React from 'react'\n\nimport { CheckboxContainer } from './custom-checkbox.styles'\n\nconst CustomCheckbox = ({ label, isActive, handleClick, ...otherprops }) => {\n    return (\n        <CheckboxContainer isActive={isActive} onClick={handleClick} {...otherprops}>\n            {label}\n        </CheckboxContainer>\n    )\n}\n\nexport default CustomCheckbox\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: .5rem .5rem .5rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 25px 0;\n        font-family: inherit;\n        resize: none;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: .6rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-textarea.styles'\n\nconst CustomTextarea = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <textarea\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomTextarea","export const uploadImage = (token, img, imgName, imgAlt) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({ \"name\": imgName || \" \", \"alt\": imgAlt || \" \", 'image': img });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/images/upload`, requestOptions)\n}\n\nexport const fetchImages = () => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/images`)\n}\n\nexport const fetchFilteredImages = (token, limit, skip) => {\n    const myHeaders = new Headers();\n    // myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        sortBy: {\n            dateCreated: -1\n        },\n        limit,\n        skip\n    });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/images/filter`, requestOptions)\n}\n\nexport const deleteImage = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n    const requestOptions = {\n        method: 'DELETE',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/images/${id}`, requestOptions)\n}","import React, { createContext, useState, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport {\n    deleteImage,\n    // fetchImages, \n    uploadImage,\n    fetchFilteredImages\n} from './image.queries'\n\nexport const ImageContext = createContext({\n    isDisabled: false,\n    images: null,\n    selectedImage: null,\n    getImages: () => { },\n    handleImage: () => { },\n    handleDeleteImage: () => { },\n    setSelectedImage: () => { },\n    getNextImages: () => { },\n    getPrevImage: () => { }\n})\n\nconst ImageProvider = ({ children }) => {\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const { token } = useContext(AuthContext)\n\n    const [isDisabled, setIsDisabled] = useState(false)\n    const [images, setImages] = useState(null)\n    const [selectedImage, setSelectedImage] = useState(null)\n    const [limit] = useState(4)\n    const [skip, setSkip] = useState(0)\n\n    const handleImage = async (img, imgName, imgAlt, setImage, close) => {\n        setShowModal(true)\n        setIsLoading(true)\n        setIsDisabled(true)\n\n        try {\n            const response = await uploadImage(token, img, imgName, imgAlt)\n            const data = await response.json()\n            console.log(data)\n\n            if (data.image) {\n                setSelectedImage(data.image)\n                setImage(data.image._id)\n                getImages()\n                close()\n            }\n\n            setShowModal(false)\n            setIsLoading(false)\n            setIsDisabled(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n            setIsDisabled(false)\n        }\n    }\n\n    const getNextImages = async (addToSkip) => {\n        try {\n            if (images.length !== limit) return\n\n            const response = await fetchFilteredImages(token, limit, skip + addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip + addToSkip)\n            }\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getPrevImage = async (addToSkip) => {\n        if (skip === 0) return\n        try {\n            const response = await fetchFilteredImages(token, limit, skip - addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip - addToSkip)\n\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getImages = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            // const response = await fetchImages()\n            const response = await fetchFilteredImages(token, limit, skip)\n\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n            closeModal()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleDeleteImage = async (id, e) => {\n        e.preventDefault()\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const respone = await deleteImage(token, id)\n            const data = await respone.json()\n\n            getMessage(data.message)\n            setIsLoading(false)\n            getImages()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <ImageContext.Provider\n            value={{\n                isDisabled,\n                images,\n                selectedImage,\n                getImages,\n                handleImage,\n                handleDeleteImage,\n                setSelectedImage,\n                getNextImages,\n                getPrevImage\n            }}\n        >\n            {children}\n        </ImageContext.Provider>\n    )\n}\n\nexport default ImageProvider","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 50rem;\n    max-height: 60rem;\n\n    overflow-y: scroll;\n\n    /* display: flex;\n    flex-direction: column;\n    align-items: center; */\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: white;\n\n    position: relative;\n    z-index: 999999;\n\n`\n\nexport const UploadButton = styled.label`\n    input[type=\"file\"] {\n        position: absolute;\n        left: -999999999rem;\n    }\n    cursor: pointer;\n    background-color: #000;\n    color: #fff;\n    max-width: 18rem;\n    font-size: 1.4rem;\n    font-family: inherit;\n    padding: .8rem 1rem;\n    text-align: center;\n    display: block;\n    border: 1px solid #000;\n    transition: background-color .1s ease-out,\n                color .2s ease-out;\n    outline: none;\n    margin: 0 auto 2rem;\n\n    &:focus {\n        outline:none;\n    }\n\n    &:hover {\n        background-color: transparent;\n        color: #000;\n    }\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const FlexContainer = styled.div`\n    /* max-width: 46rem; */\n\n    /* width: 100%; */\n    /* overflow-x: scroll; */\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    margin: 2rem auto;\n`\n\nexport const ImageContainer = styled.div`\n    position: relative;\n    cursor: pointer;\n    width: 20rem;\n    margin: 1rem 0;\n\n    &:hover button {\n        display: block\n    }\n\n    /* &:not(:last-child) {\n        margin-right: 1.5rem;\n    } */\n\n    img {\n        width:100%;\n        height:100%;\n        object-fit: contain;\n        object-position: center;\n    }\n`\n\nexport const DeleteButton = styled.button`\n    cursor: pointer;\n    display:none;\n    border-radius:50%;\n    position: absolute;\n    border: none;\n    background-color: rgb(235, 172, 1);\n    padding: .5rem .75rem;\n    font-size: 1rem;\n    right: .5rem;\n    top: .5rem;\n\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const ImagePreviewContainer = styled.div`\n    display: block;\n    width: 100%;\n\n    img {\n        display: block;\n        max-width: 100%;\n        /* width: inherit; */\n    }\n`\n\nexport const TabOptions = styled.div`\n    max-width: 18rem;\n    display: flex;\n    justify-content: space-between;\n    margin: 0 auto;\n`\n\nexport const TabButton = styled.button`\n    cursor: pointer;\n    outline:none;\n    border: none;\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"#000\"};\n    color: #fff;\n    font-weight: ${({ isActive }) => isActive ? \"700\" : \"400\"};\n    font-family: inherit;\n    font-size: 1.2rem;\n    padding: .8rem 1.5rem;\n    border-radius: .2rem;\n    margin-bottom: 2rem;\n    transition: all .3s ease-out;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const CropButton = styled(CustomButton)`\n    display: block;\n    margin: 2rem auto 0;\n\n    &:disabled {\n        cursor: not-allowed;\n        background-color: gray;\n    }\n`\n\nexport const ButtonOptions = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nexport const FetchButtons = styled.button`\n    cursor: pointer;\n    outline: none;\n    border: none;\n    padding: .4rem 1rem;\n    border-radius: 50%;\n    color: #fff;\n    background-color: #000;\n    font-size: 1.2rem;\n    font-family: inherit;\n    margin: 0 .5rem;\n\n    &:focus {\n        outline: none;\n    }\n`","import React, { useEffect, useContext, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\n// import { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\n// import CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    // const {\n    //     getMessage,\n    //     setIsLoading,\n    //     setShowModal,\n    //     closeModal\n    // } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    // const getCropData = async (e) => {\n    //     e.preventDefault()\n    //     setShowModal(true)\n    //     setIsLoading(true)\n\n    //     try {\n    //         // if (typeof cropper !== 'undefined') {\n    //         toDataUrl(imgUrl, async (imgData) => {\n    //             const data = await handleImage(imgData, imageName, imageAlt)\n\n    //             if (data.image) {\n    //                 setImage(data.image._id)\n    //                 setSelectedImage(data.image)\n    //                 getImages()\n    //                 close()\n    //             }\n    //         })\n\n    //         // }\n    //         setShowModal(false)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    //     closeModal()\n    // };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Vybrať obrázok</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n"],"sourceRoot":""}
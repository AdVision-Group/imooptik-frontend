{"version":3,"sources":["components/user-form/user.form-styles.jsx","components/profile-order-overview/profile-order-overview.styles.jsx","components/profile-order-overview/profile-order-overview.component.jsx","components/examination-user/examination-user.styles.jsx","components/examination-user/examination-user.component.jsx","utils/parameters.utils.jsx","components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx","components/modal-optometrist-examination/modal-optometrist-examination.component.jsx","components/examinations-overview/examinations-overview.styles.jsx","components/examinations-overview/examinations-overview.component.jsx","components/user-form/user-form.component.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","hooks/useFetch.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","components/custom-checkbox/custom-checkbox.styles.jsx","components/custom-checkbox/custom-checkbox.component.jsx","components/custom-textarea/custom-textarea.styles.jsx","components/custom-textarea/custom-textarea.component.jsx","context/warehouse/warehouse.utils.jsx","context/user/user.queries.jsx","context/user/user.utils.jsx","context/user/user.context.jsx","components/product-input-row/product-input-row.styles.jsx","components/product-input-row/product-input-row.component.jsx","context/examination/examination.context.jsx","components/parameters-table/parameters-table.styles.jsx","components/parameters-table/parameters-table.component.jsx"],"names":["Profile","styled","div","GridContainer","ZeroMargin","GridRow","Row","Title","h2","Container","OrderHeader","OrderButton","CustomButton","AdminPanelContainer","CustomSelect","select","OrderContainer","OrderContent","Options","UpdateButton","DeleteButton","OrderId","p","ProfileOrderOverview","id","handleUpdateClick","orderData","useFetchById","console","log","isLoading","order","response","dateData","Date","date","error","customId","toLocaleDateString","weekday","month","day","year","onClick","ExaminationUserContainer","ExaminationUser","userId","user","name","checkParameterValue","value","ModalContainer","Modal","CloseButton","button","OptometristExaminationModal","CustomCheckbox","close","examinationToUpdate","refetch","examinationData","useContext","ExaminationContext","createExamination","updateExamination","useState","examinationObj","setExaminationObj","setParameters","useEffect","exam","parameters","ExaminationsOverviewContainer","Header","ExaminationContainer","ExamHead","ExamTableContainer","HeadTableCol","TableCol","ExaminationOptions","AddButton","ExaminationsOverview","params","useParams","deleteExamination","showOptometristModal","setShowOptometristModal","examinations","setExaminations","setExaminationToUpdate","exams","type","map","examination","idx","sph","cyl","ax","vizusD","vizusBino","vizusB","prizma","basis","pd","add","doneBy","e","preventDefault","_id","handleDelete","UserForm","isAdmin","isUpdating","handleChange","handleParameterChange","handleCompanyChange","isOptometrist","isOrder","push","useHistory","label","example","premises","onChange","retailNames","admin","handleClick","target","optometrist","isActive","fName","lName","birthDate","email","phone","address","psc","city","country","company","ico","dic","lenses","handleAddOrderButtonClick","orders","length","reverse","slice","shrinkLabel","css","InputGroup","CustomInput","otherProps","className","htmlFor","useFetch","path","skip","setResponse","setError","message","setMessage","setIsLoading","refetchIndex","setRefetchIndex","prevRefetchIndex","a","fetch","process","res","json","data","fetchData","useFetchByQuery","queryObj","myHeaders","Headers","append","localStorage","getItem","raw","JSON","stringify","requestOptions","method","headers","body","redirect","paddingStyles","FixedContainer","ScrollContainer","children","CheckboxContainer","otherprops","CustomTextarea","initProductObj","description","price","brand","soldAmount","available","eanCode","image","eshop","link","category","initGlassesObj","colorCode","specs","frameColor","frameMaterial","frameStyle","lensColor","sex","size","initContactLensesObj","allowedCurves","allowedDiameters","dioptersRange","initLensesObj","cylinderRange","productCategories","premisesTabs","categoryTabs","formatPrice","includes","split","Number","formatfloatNumber","number","formatAvailable","activePremisesTab","undefined","reduce","acc","currValue","checkParameter","parameter","toString","dia","diaConvert","text","convertText","i","indexOf","charAt","formatLink","replaceAll","toLowerCase","trim","fetchUser","token","patchUser","postUser","postAdmin","password","initUserObj","boughtProducts","finishedRegistration","icdph","cylinder","cylinderAxes","diopters","distance","addition","prism","tempUser","totalSpent","watchList","confirmPassword","now","UserContext","createContext","activeIndex","handleChangeFilterItem","filterItems","totalCount","users","getUser","updateUser","resetUser","formToShow","switchFormButtons","toggleUserForm","createUser","getFilteredUsers","getUserByQuery","UserProvider","AuthContext","LoadingModalContext","closeModal","getMessage","setShowModal","setUser","setUsers","setIsUpdating","setActiveIndex","setFormToShow","refetchUser","addUser","messageSK","filters","filter","query","Provider","itemIndex","arr","InputRow","ProductInputRow","ExaminationProvider","examsToAdd","examToUpdate","examId","TableContainer","TitleCol","Col","OsContainer","ParametersTable","disabledInputs","checkParameters","toFixed","Array","disabled"],"mappings":"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","file":"static/js/1.431f4211.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\n\nexport const Profile = styled.div`\n    padding: 2rem;\n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    margin-right: 2rem;\n\n`\n\nexport const GridContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: start;\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n    }\n`\n\nexport const ZeroMargin = styled.div`\n    input {\n        margin-bottom: 0 !important;\n    }\n`\n\nexport const GridRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n`\n\n\nexport const ThreeColRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-items: center;\n\n    input {\n        margin-bottom: 0 !important;\n    }\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr 1fr;\n        grid-template-areas:\n            \"a a\"\n            \"b c\";\n\n        div:nth-child(1){\n            grid-area: a;\n            margin-bottom: 0;\n        }\n        div:nth-child(2){\n            grid-area: b;\n            margin-bottom: 2rem;\n\n        }\n        div:nth-child(3){\n            grid-area: c;\n            margin-bottom: 2rem;\n        }\n    }\n`\n\nexport const Row = styled.div`\n    width: 75%;\n`\n\n\nexport const Title = styled.h2`\n    margin-bottom: 2rem;\n`\n\nexport const Container = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const OrderHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n`\n\nexport const OrderButton = styled(CustomButton)`\n    margin-top: .2rem;\n    font-size: 1.2rem;\n`\n\nexport const AdminPanelContainer = styled.div`\n    margin-bottom: 3rem;\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: var(--input-background-color);\n    color: var(--input-color);\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const OrderContainer = styled.div`\n    width: 100%;\n    /* display: grid;\n    grid-template-columns: 1fr 25rem; */\n\n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    padding: 2rem;\n\n    &:not(:last-child) {\n        margin-bottom: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n\n    }\n`\n\nexport const OrderContent = styled.div`\n    display: flex;\n    justify-content: space-between;\n    /* align-items: center; */\n    margin-bottom: 2rem;\n    h2 {\n        font-size: 1.6rem;\n    }\n`\n\nexport const Options = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    align-items: flex-end;\n    /* align-self: end;\n    justify-self: end; */\n`\n\nexport const UpdateButton = styled(CustomButton)`\n    font-size: 1.2rem;\n    /* margin-left: auto; */\n    display:block;\n\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1.2rem;\n    /* background-color: rgb(235, 172, 1); */\n    background-color: #DD4C4C;\n    /* margin-bottom: 1rem; */\n    margin-left: 1rem;\n    display:block;\n\n`\n\nexport const OrderId = styled.p`\n    opacity: .83;\n    /* font-size: 1.2rem; */\n    /* color: gray; */\n    /* margin-bottom: 2rem; */\n`","import React from 'react'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport {\n    DeleteButton,\n    Options,\n    OrderContainer,\n    OrderContent,\n    UpdateButton,\n    OrderId\n} from './profile-order-overview.styles'\n\nconst ProfileOrderOverview = ({ id, handleUpdateClick }) => {\n    const orderData = useFetchById('api/admin/orders', id, !id)\n\n    console.log(orderData)\n\n    if (orderData.isLoading) return <OrderContainer>\n        <h3>Načítavam</h3>\n    </OrderContainer>\n\n    const { order } = orderData.response\n\n    const dateData = new Date(order?.date)\n\n    return (\n        <OrderContainer>\n            {orderData.response?.error === 'invalid-branch' ? <OrderContent>\n                <h2>Táto objednávka patri inej prevadzke</h2>\n            </OrderContent> : <OrderContent>\n                    <div>\n                        <h2>ID Objednávky</h2>\n                        <OrderId>{order?.customId}</OrderId>\n                    </div>\n                    <div>\n                        <p>{dateData.toLocaleDateString(\"sk-SK\", { weekday: 'long', month: 'long', day: 'numeric', year: \"numeric\" })}</p>\n                    </div>\n                </OrderContent>}\n\n            {!orderData.response?.error && <Options>\n                <UpdateButton onClick={handleUpdateClick}>\n                    Zobraziť\n                </UpdateButton>\n                <DeleteButton>\n                    Vymazať\n                </DeleteButton>\n            </Options>}\n\n        </OrderContainer>\n    )\n}\n\nexport default ProfileOrderOverview\n","import styled from 'styled-components'\n\nexport const ExaminationUserContainer = styled.div`\n    font-size: 1.4rem;\n\n    span {\n        font-weight: bolder\n    }\n`","import React from 'react'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport {\n    ExaminationUserContainer\n} from './examination-user.styles'\n\nconst ExaminationUser = ({ userId }) => {\n    const { isLoading, response } = useFetchById(\"api/admin/users\", userId)\n\n    return (\n        <ExaminationUserContainer>\n            <p>Vystavoval:</p> <span>{isLoading ? \"Hľadám...\" : response?.user?.name}</span>\n        </ExaminationUserContainer>\n    )\n}\n\nexport default ExaminationUser\n","\nexport const checkParameter = (parametersArr, idx) => {\n    if (parametersArr) {\n        if (parametersArr.length === 0) {\n            return \"\"\n        }\n        if (parametersArr[idx] === 1001) {\n            return \"\"\n        }\n        return parametersArr[idx]\n    } else {\n        return \"\"\n    }\n}\n\nexport const checkParameterValue = (value) => {\n    if (value) {\n        if (value === 0) {\n            return \"\"\n        }\n        if (value === 1001) {\n            return \"\"\n        }\n        return value\n    } else {\n        return \"\"\n    }\n}\n\n// check if valid number othervise return 1001\nexport const formatParameter = parameter => {\n    if (parameter) {\n        const changeNumber = parameter.toString().replace(',', '.')\n        return isNaN(changeNumber) ? 1001 : Number(changeNumber)\n    }\n}","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 65rem;\n    max-height: 60rem;\n    color: var(--primary-text-color);\n\n    overflow-y: scroll;\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: var(--background-primary-color);\n\n    position: relative;\n    z-index: 999999;\n\n    h3 {\n        margin-bottom: 2rem;\n    }\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const SubmitButton = styled(CustomButton)`\n    background-color: var(--primary-color);\n    font-weight: bolder;\n    display: block;\n    margin: 2rem auto 0;\n`\n\nexport const Container = styled.div`\n    margin-bottom: 2rem;\n    h4 {\n        margin-bottom: 1rem;\n    }\n\n    div {\n    }\n`\n\nexport const ExamTypeCheckbox = styled(CustomCheckbox)`\n    margin-right: 1rem;\n`\n\nexport const IsSuitableCheckbox = styled(CustomCheckbox)`\n    margin-top: 2.2rem;\n`\n\nexport const TwoColContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n`\n\nexport const InputContainer = styled.div`\n    margin-bottom: 2rem;\n`\n\nexport const Table = styled.div``\n\nexport const TableTitleCol = styled.div``\n\nexport const Col = styled.div``","import React, { useState, useContext, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { ExaminationContext } from '../../context/examination/examination.context'\nimport { useFetchById } from '../../hooks/useFetch'\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    checkParameter,\n    formatParameter,\n} from '../../utils/parameters.utils'\n\nimport {\n    CloseButton,\n    Modal,\n    ModalContainer,\n    SubmitButton,\n    Container,\n    ExamTypeCheckbox,\n    TwoColContainer,\n    InputContainer,\n    IsSuitableCheckbox,\n    Col,\n    Table,\n    TableTitleCol\n} from './modal-optometrist-examination.styles'\n\nconst OptometristExaminationModal = ({ close, refetch, userId, examinationToUpdate }) => {\n    const examinationData = useFetchById('api/admin/exams', examinationToUpdate, !examinationToUpdate)\n\n    const { createExamination, updateExamination } = useContext(ExaminationContext)\n    const [examinationObj, setExaminationObj] = useState({})\n    const [parameters, setParameters] = useState({})\n\n    const [activeExamType, setActiveExamType] = useState(1)\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = parameters[name] || [1001, 1001, 1001, 1001]\n        arr[idx] = value === '' ? 1001 : value\n\n        setParameters({\n            ...parameters,\n            [name]: arr\n        })\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete examinationObj[name]\n            setExaminationObj({\n                ...examinationObj,\n            })\n            return\n        }\n\n        setExaminationObj({\n            ...examinationObj,\n            [name]: value\n        })\n    }\n\n    const formatParameters = (e, newParameters) => {\n        if (newParameters) {\n            const { name } = e.target\n            setParameters({\n                ...parameters,\n                [name]: newParameters.map(value => formatParameter(value))\n            })\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        let examObj = {\n            ...examinationObj,\n            doneTo: userId,\n            parameters: {\n                ...parameters\n            }\n        }\n\n        console.log(\"EXAMINATION OBJECT BEFORE SEND\")\n        console.log(examObj)\n\n        if (examinationToUpdate) {\n            console.log(\"UPDATE EXAMINATION\")\n            delete examObj[\"doneTo\"]\n            delete examObj[\"doneBy\"]\n            delete examObj[\"date\"]\n            delete examObj[\"_id\"]\n            delete examObj[\"__v\"]\n\n            console.log(examObj)\n            updateExamination(examObj, examinationToUpdate)\n\n        } else {\n            console.log(\"CREATE EXAMINATION\")\n\n            createExamination(examObj)\n        }\n        refetch()\n        close()\n    }\n\n    console.log(examinationObj)\n\n    useEffect(() => {\n        if (!examinationData.isLoading) {\n            if (examinationData.response) {\n                setParameters(examinationData.response?.exam?.parameters)\n                setExaminationObj(examinationData.response?.exam)\n            }\n        }\n    }, [examinationToUpdate, examinationData.isLoading])\n\n    useEffect(() => {\n        return () => {\n            setExaminationObj({})\n            setParameters({})\n        }\n    }, [])\n\n    if (true) return (\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h1>Tu sa práve pracuje.</h1>\n            </Modal>\n        </ModalContainer>\n    )\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Vyšetrenie</h3>\n                <Container>\n                    <h4>Typ prehliadky</h4>\n                    <div>\n                        {examTypes.map((type, idx) => (\n                            <ExamTypeCheckbox\n                                key={idx}\n                                label={type.name}\n                                isActive={activeExamType === type.value}\n                                handleClick={() => setActiveExamType(type.value)}\n                            />\n                        ))}\n                    </div>\n                </Container>\n\n                {activeExamType === 1 && (\n                    <Container>\n                        <h4>Refrakcia</h4>\n                        <TwoColContainer>\n                            <div>\n                                <h5>Nosi od:</h5>\n                                <CustomInput\n                                    label={''}\n                                    value={examinationObj?.nosi_od || \"\"}\n                                    type=\"date\"\n                                    name=\"nosi_od\"\n                                    handleChange={handleChange}\n                                />\n                            </div>\n                            <div>\n                                <h5>Posledná korekcia:</h5>\n                                <CustomInput\n                                    label={''}\n                                    value={examinationObj?.posledna_korekcia || \"\"}\n                                    type=\"date\"\n                                    name=\"posledna_korekcia\"\n                                    handleChange={handleChange}\n                                />\n                            </div>\n                        </TwoColContainer>\n                        <TwoColContainer>\n                            <InputContainer>\n                                <CustomInput\n                                    label={'Typ, spôsob'}\n                                    value={examinationObj?.typ_sposob || \"\"}\n                                    type=\"text\"\n                                    name=\"typ_sposob\"\n                                    handleChange={handleChange}\n                                />\n                            </InputContainer>\n                            <InputContainer>\n                                <IsSuitableCheckbox\n                                    label={\"Vyhovuje\"}\n                                    isActive={examinationObj?.vyhovuje || false}\n                                    handleClick={() => handleChange({\n                                        target: {\n                                            name: \"vyhovuje\",\n                                            value: examinationObj?.vyhovuje ? !examinationObj.vyhovuje : true\n                                        }\n                                    })}\n                                />\n                            </InputContainer>\n                        </TwoColContainer>\n                        <InputContainer>\n                            <CustomTextarea\n                                label='Anamnéza'\n                                name=\"anamneza\"\n                                value={examinationObj?.anamneza || ''}\n                                rows=\"5\"\n                                handleChange={handleChange}\n                            />\n                        </InputContainer>\n                        <InputContainer>\n                            <CustomTextarea\n                                label='Doplňujúce informácie'\n                                name=\"dopl_info\"\n                                value={examinationObj?.dopl_info || \"\"}\n                                rows=\"3\"\n                                handleChange={handleChange}\n                            />\n                        </InputContainer>\n\n                        <h4>Vlastné okuliare</h4>\n\n                        <Table>\n                            <TableTitleCol>\n                                <Col>{\" \"}</Col>\n                                <Col>P.</Col>\n                                <Col>L.</Col>\n                            </TableTitleCol>\n                        </Table>\n\n                    </Container>\n                )}\n\n                {activeExamType === 2 && (\n                    <Container>\n                        <h4>Anamnéza</h4>\n                    </Container>\n                )}\n\n                {activeExamType === 3 && (\n                    <Container>\n                        <h4>Kontrola</h4>\n                    </Container>\n                )}\n\n                <SubmitButton onClick={handleSubmit}>{examinationToUpdate ? \"Uložiť\" : \"Odoslať prehliadku\"}</SubmitButton>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default OptometristExaminationModal\n\nconst examTypes = [\n    {\n        name: \"Refrakcia\",\n        value: 1\n    },\n    {\n        name: \"Anamnéza\",\n        value: 2\n    },\n    {\n        name: \"Kontrola\",\n        value: 3\n    },\n]","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ExaminationsOverviewContainer = styled.div`\n\n`\n\nexport const Header = styled.div`\n    margin-top: 2rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    h2 {\n        margin: 2rem 0;\n    }\n`\n\nexport const ExaminationContainer = styled.div`\n    border-radius: .5rem;\n    padding: 2rem;\n    /* box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08); */\n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n\n    margin-bottom: 2rem;\n`\n\nexport const ExamHead = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport const ExamTableContainer = styled.div`\n    display: grid;\n    grid-template-columns: 3rem repeat(10, 1fr);\n    font-size: 1.2rem;  \n`\n\nexport const HeadTableCol = styled.div`\n    display: grid;\n    grid-template-rows: repeat(5, 5rem);\n    div {\n        align-self: center;\n        display:flex;\n        justify-content: space-between;\n    }\n`\n\nexport const TableCol = styled.div`\n    display: grid;\n    grid-template-rows: repeat(5, 5rem);\n\n    div {\n        text-align:center;\n        align-self: center;\n        margin-left: .5rem;\n\n        &:not(:first-child) {\n            background-color: var(--input-background-color);\n            padding: .5rem;\n            border-radius: .5rem;\n            min-height: 2.5rem;\n        }\n    }\n`\nexport const ExaminationOptions = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport const AddButton = styled(CustomButton)`\n    font-size: 1.2rem;\n`\n\nexport const UpdateButton = styled(CustomButton)`\n    font-size: 1.2rem;\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1.2rem;\n    background-color: var(--color-red);\n    margin-left: 1rem;\n\n`","import React, { useState, useEffect, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useFetchById } from '../../hooks/useFetch'\nimport { ExaminationContext } from '../../context/examination/examination.context'\n\nimport ExaminationUser from '../examination-user/examination-user.component'\nimport OptometristExaminationModal from '../modal-optometrist-examination/modal-optometrist-examination.component'\n\nimport {\n    checkParameterValue\n} from '../../utils/parameters.utils'\n\nimport {\n    ExaminationsOverviewContainer,\n    Header,\n    ExaminationContainer,\n    ExamHead,\n    ExamTableContainer,\n    HeadTableCol,\n    TableCol,\n    ExaminationOptions,\n    AddButton,\n    UpdateButton,\n    DeleteButton\n} from './examinations-overview.styles'\n\nconst ExaminationsOverview = () => {\n    const params = useParams()\n    const examinationData = useFetchById(\"api/admin/exams/user\", params.id)\n    const { deleteExamination } = useContext(ExaminationContext)\n    const [showOptometristModal, setShowOptometristModal] = useState(false)\n    const [examinations, setExaminations] = useState([])\n    const [examinationToUpdate, setExaminationToUpdate] = useState(null)\n\n    const handleUpdateClick = (e, id) => {\n        e.preventDefault()\n        setExaminationToUpdate(id)\n        setShowOptometristModal(true)\n    }\n\n    const handleDelete = (e, id) => {\n        e.preventDefault()\n        deleteExamination(id)\n        examinationData.refetch()\n    }\n\n    const handleCloseModal = () => {\n        setShowOptometristModal(false)\n        setExaminationToUpdate(null)\n    }\n\n    useEffect(() => {\n        if (!examinationData.isLoading) {\n            if (examinationData.response) {\n                setExaminations(examinationData.response.exams)\n            }\n        }\n    }, [examinationData.isLoading])\n\n    return (\n        <ExaminationsOverviewContainer>\n            {showOptometristModal && <OptometristExaminationModal\n                userId={params.id}\n                examinationToUpdate={examinationToUpdate}\n                refetch={examinationData.refetch}\n                close={handleCloseModal}\n            />}\n            <Header>\n                <h2>Vyšetrenia</h2>\n                <div>\n                    <AddButton type='button' onClick={() => setShowOptometristModal(true)}>Pridať prehliadku</AddButton>\n                </div>\n            </Header>\n\n\n            <div>\n                {examinations && examinations.map((examination, idx) => (\n                    <ExaminationContainer key={idx}>\n                        <ExamHead>\n                            <h3>Dátum</h3>\n                            <p>{new Date(examination?.date).toLocaleDateString(\"sk-SK\", { weekday: 'long', month: 'long', day: 'numeric' })}</p>\n                        </ExamHead>\n                        <ExamTableContainer>\n                            <HeadTableCol>\n                                <div>-</div>\n                                <div>PO</div>\n                                <div>ĽO</div>\n                                <div>PO</div>\n                                <div>ĽO</div>\n                            </HeadTableCol>\n                            <TableCol>\n                                <div>sph</div>\n                                {examination?.parameters?.sph.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>cyl</div>\n                                {examination?.parameters?.cyl.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>ax</div>\n                                {examination?.parameters?.ax.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus D</div>\n                                {examination?.parameters?.vizusD.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus bino</div>\n                                {examination?.parameters?.vizusBino.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus B</div>\n                                {examination?.parameters?.vizusB.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>prizma</div>\n                                {examination?.parameters?.prizma.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>basis</div>\n                                {examination?.parameters?.basis.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>PD</div>\n                                {examination?.parameters?.pd.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>ADD</div>\n                                {examination?.parameters?.add.map((value, idx) => {\n                                    if (idx > 1) return\n                                    return (\n                                        <div key={idx}>\n                                            {checkParameterValue(value)}\n                                        </div>\n                                    )\n                                })}\n                            </TableCol>\n                        </ExamTableContainer>\n                        <ExaminationOptions>\n                            <ExaminationUser userId={examination.doneBy} />\n                            <div>\n                                <UpdateButton onClick={e => handleUpdateClick(e, examination._id)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={e => handleDelete(e, examination._id)}>Vymazať</DeleteButton>\n                            </div>\n                        </ExaminationOptions>\n                    </ExaminationContainer>\n                ))}\n            </div>\n        </ExaminationsOverviewContainer>\n    )\n}\n\nexport default ExaminationsOverview\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ProfileOrderOverview from '../profile-order-overview/profile-order-overview.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\nimport ExaminationsOverview from '../examinations-overview/examinations-overview.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Profile,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    Title,\n    Container,\n    OrderHeader,\n    OrderButton,\n    CustomSelect,\n    AdminPanelContainer\n} from './user.form-styles'\n\nconst UserForm = ({\n    isAdmin,\n    isUpdating,\n    user,\n    handleChange,\n    handleParameterChange,\n    handleCompanyChange,\n    isOptometrist,\n    isOrder = false\n}) => {\n    const { push } = useHistory()\n\n    const handleAddOrderButtonClick = e => {\n        e.preventDefault()\n        push(`/dashboard/objednavky/${user._id}`)\n    }\n\n    console.log(user)\n\n\n    return (\n        <GridContainer>\n            <Profile>\n                {isAdmin && <AdminPanelContainer>\n                    <h2>Admin panel</h2>\n                    <InputRow\n                        label=\"Predajňa na ktorej uživatel pracuje\"\n                        example=''\n                    >\n                        <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Nezadané</option>\n                            {\n                                retailNames.map((name, idx) => {\n                                    if (idx === 4) return\n                                    return (\n                                        <option key={idx} value={idx + 1}>{name}</option>\n                                    )\n                                })\n                            }\n                        </CustomSelect>\n                    </InputRow>\n                    <InputRow\n                        label=\"Výška administrativných práv\"\n                        example=\"\"\n                    >\n                        <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Zákaznik</option>\n                            <option value={1}>Predavač</option>\n                            <option value={2}>Vedúci</option>\n                        </CustomSelect>\n                    </InputRow>\n\n                    <Container>\n                        <CustomCheckbox\n                            label='Optometrista'\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"optometrist\",\n                                    value: !user.optometrist\n                                }\n                            })}\n                            isActive={user.optometrist}\n                        />\n                    </Container>\n                </AdminPanelContainer>}\n                <div>\n                    <h2>Informácie</h2>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                // label=\"Priezvisko*\"\n                                type='date'\n                                name='birthDate'\n                                value={user.birthDate}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </div>\n\n                <Container>\n                    <h2>Kontaktné údaje</h2>\n                    <Row>\n                        <div>\n                            <CustomInput\n                                label=\"E-mail*\"\n                                type='email'\n                                name='email'\n                                value={user.email ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Telefónne číslo\"\n                                type='text'\n                                name='phone'\n                                value={user.phone ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <h2>Fakturačné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.address ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.psc ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.city ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.country ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n                <Container>\n                    <h2>Firemné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"IČO\"\n                                type='text'\n                                name='ico'\n                                value={user.company.ico ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"DIČ\"\n                                type='text'\n                                name='dic'\n                                value={user.company.dic ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.company.address ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.company.psc ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.company.city ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.company.country ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n\n                <Container>\n                    <h2>Parametre</h2>\n\n                    <ParametersTable\n                        parameters={user.lenses}\n                        handleChange={handleParameterChange}\n                    />\n                </Container>\n\n\n            </Profile>\n\n            {!isOrder && isUpdating && <div>\n                <OrderHeader>\n                    <Title>\n                        Objednávky\n                    </Title>\n                    <OrderButton onClick={e => handleAddOrderButtonClick(e)}>Pridať objednávku</OrderButton>\n                </OrderHeader>\n                <div>\n                    {user.orders.length > 0 ? user.orders.map((order, idx) => (\n                        <ProfileOrderOverview\n                            key={idx}\n                            id={order}\n                            handleUpdateClick={() => push(`/dashboard/objednavky/${user._id}/${order}`)}\n                        />\n                    )).reverse().slice(0, 5) : (\n                            <p>Žiadné objednávky</p>\n                        )}\n                </div>\n                {isOptometrist && <ExaminationsOverview />}\n            </div>}\n        </GridContainer>\n    )\n}\n\nexport default UserForm\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: var(--input-color);\n`\nexport const InputGroup = styled.div`\n    position: relative;\n\n    /* margin: 45px 0; */\n\n    .form-input {\n        /* background: none; */\n        background-color: var(--input-background-color);\n        color: var(--input-color);\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: var(--input-color);\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput","import { useEffect, useState } from 'react'\n\nexport const useFetch = (path, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [message, setMessage] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`)\n                const data = await res.json()\n\n                setMessage(data.message)\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n                setMessage(\"Niečo sa pokazilo\")\n            }\n        }\n        fetchData()\n    }, [refetchIndex])\n\n    return { response, isLoading, error, message, refetch }\n}\n\nexport const useFetchByQuery = (path, queryObj, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify(queryObj)\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path])\n\n    return { response, isLoading, error, refetch }\n}\n\nexport const useFetchById = (path, id, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}/${id}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path, id])\n\n    return { response, isLoading, error, refetch }\n}\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n    color: var(--primary-text-color);\n\n\n\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const FixedContainer = styled.div`\n    /* max-width: 115rem; */\n`","import React from 'react'\nimport { Container, FixedContainer } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            <FixedContainer>\n                {children}\n            </FixedContainer>\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import styled from 'styled-components'\n\nexport const CheckboxContainer = styled.div`\n    display: inline-block;\n    cursor: pointer;\n    font-size: 1.5rem;\n    font-weight: 700;\n    /* margin-right: 2rem; */\n    background-color: ${({ isActive }) => isActive ? \"var(--primary-color)\" : \"var(--body-background-primary-color)\"};\n    color: ${({ isActive }) => isActive ? \"var(--button-font-color)\" : \"var(--secondary-text-color)\"};\n    /* font-weight: ${({ isActive }) => isActive ? \"border\" : \"normal\"}; */\n    padding: .8rem 3rem;\n    border-radius: .2rem;\n    transition: all .2s ease-out;\n\n    @media all and (max-width: 500px) {\n        padding: 0.5rem 1.5rem;\n        font-size: 1.4rem;\n    }\n`","import React from 'react'\n\nimport { CheckboxContainer } from './custom-checkbox.styles'\n\nconst CustomCheckbox = ({ label, isActive, handleClick, ...otherprops }) => {\n    return (\n        <CheckboxContainer isActive={isActive} onClick={handleClick} {...otherprops}>\n            {label}\n        </CheckboxContainer>\n    )\n}\n\nexport default CustomCheckbox\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: var(--input-color);\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: var(--input-background-color);\n        color: var(--input-color);\n\n        font-size: 1.5rem;\n        padding: .5rem .5rem .5rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 25px 0;\n        font-family: inherit;\n        resize: none;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    .form-input-label {\n        color: var(--input-color);\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: .6rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-textarea.styles'\n\nconst CustomTextarea = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <textarea\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomTextarea","export const initProductObj = {\n    name: \"\",\n    description: \"\",\n    price: 0,\n    type: 0,\n    brand: \"\",\n    soldAmount: 0,\n    available: [0, 1001, 1001, 1001, 1001],\n    eanCode: \"\",\n    image: \"\",\n    eshop: true,\n    link: '',\n    category: ''\n}\n\nexport const initGlassesObj = {\n    colorCode: \"\",\n    specs: {\n        frameColor: \"\",\n        frameMaterial: \"\",\n        frameStyle: \"\",\n        lensColor: \"\",\n        sex: \"M\",\n        size: [1001, 1001, 1001, 1001],\n    }\n}\n\nexport const initContactLensesObj = {\n    allowedCurves: [1001],\n    allowedDiameters: [1001],\n    dioptersRange: [1001, 1001]\n}\n\nexport const initLensesObj = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    dioptersRange: [1001, 1001],\n    cylinderRange: [1001, 1001],\n    price: 0,\n    brand: \"\",\n    image: ''\n}\n\nexport const retailNames = [\n    \"Obchodná 57, Bratislava\",\n    \"Miletičova 38, Bratislava\",\n    \"Vajnory, Bratislava\",\n    \"Senica, OC Branč\",\n    \"Trnava, City Aréna\"\n]\n\n// Category variables\nexport const productCategories = [\n    {\n        name: \"Dioptrické\",\n        value: 1\n    },\n    {\n        name: \"Slnečné\",\n        value: 2\n    },\n    {\n        name: \"Kontaktné Šošovky\",\n        value: 3\n    },\n    {\n        name: \"Športové\",\n        value: 4\n    },\n    {\n        name: \"Doplnky\",\n        value: 5\n    },\n    {\n        name: \"Služby\",\n        value: 6\n    },\n    {\n        name: \"Šošovky\",\n        value: 0\n    },\n]\n\nexport const premisesTabs = [\n    {\n        id: 0,\n        name: \"Všetko\",\n        premises: 0,\n\n    },\n    {\n        id: 1,\n        name: \"Obchodná 57, Bratislava\",\n        premises: 1,\n    },\n    {\n        id: 2,\n        name: \"Miletičova 38, Bratislava\",\n        premises: 2,\n    },\n    {\n        id: 3,\n        name: \"Vajnory, Bratislava\",\n        premises: 3,\n    },\n    {\n        id: 4,\n        name: \"Senica, OC Branč\",\n        premises: 4,\n    },\n\n    // {\n    //     id: 5,\n    //     name: \"Trnava, City Aréna\",\n    //     permission: 5,\n    // },\n]\n\nexport const categoryTabs = [\n    {\n        id: 0,\n        name: \"Okuliare\",\n    },\n    {\n        id: 1,\n        name: \"Šosovky\",\n    },\n]\n\nexport const lensesBrands = [\n    \"Acuvue\",\n    \"Adore\",\n    \"Air Optix\",\n    \"Biofinity\",\n    \"Biomedics\",\n    \"Clariti\",\n    \"ColourVue\",\n    \"Comfilcon A\",\n    \"Dailies\",\n    \"Freshlook\",\n    \"Lenjoy\",\n    \"Proclear\",\n    \"Purevision\",\n    \"Soflens\",\n]\n\nexport const brands = [\n    \"Adidas\",\n    \"Armani Exchange\",\n    \"Arnette\",\n    \"Blackfin\",\n    \"Blumarine\",\n    \"Burberry\",\n    \"Bvlgari\",\n    \"Calvin Klein\",\n    \"Carolina Herrera\",\n    \"Carrera\",\n    \"David Beckham\",\n    \"Dior\",\n    \"Dolce & Gabbana\",\n    \"Elle\",\n    \"Emporio Armani\",\n    \"Esprit\",\n    \"Etnia Barcelona\",\n    \"Fendi\",\n    \"Fossil\",\n    \"Furla\",\n    \"Giorgio Armani\",\n    \"Givenchy\",\n    \"Gucci\",\n    \"Guess\",\n    \"H.I.S\",\n    \"Hawkers\",\n    \"Hugo Boss\",\n    \"Jaguar\",\n    \"Jimmy Choo\",\n    \"Lacoste\",\n    \"Liu Jo\",\n    \"Marc Jacobs\",\n    \"Max Mara\",\n    \"Max&Co\",\n    \"Meller\",\n    \"Mexx\",\n    \"Michael Kors\",\n    \"Moschino\",\n    \"Oakley\",\n    \"Persol\",\n    \"Polaroid\",\n    \"Police\",\n    \"Polo Ralph Lauren\",\n    \"Prada\",\n    \"Prada Linea Rossa\",\n    \"Ralph\",\n    \"Ralph Lauren\",\n    \"Ray-Ban\",\n    \"Salvatore Ferragamo\",\n    \"Smith\",\n    \"Strellson\",\n    \"Tiffany&Co.\",\n    \"Tom Ford\",\n    \"Tommy Hilfiger\",\n    \"Versace\",\n    \"Vogue\"\n]\n\nexport const formatPrice = price => {\n    let value = 0\n    if (price.includes(',')) {\n        if (price.split(',')[1].length === 1) {\n            value = price.split(',')[0] + price.split(',')[1] + \"0\"\n            return Number(value)\n        } else {\n            value = price.split(',')[0] + price.split(',')[1]\n            return Number(value)\n        }\n    } else {\n        return Number(price * 100)\n    }\n}\n\nexport const formatfloatNumber = number => {\n    let value = 0\n    if (number.includes(',')) {\n        value = number.split(',')[0] + '.' + number.split(',')[1]\n        return Number(value)\n    } else {\n        return Number(number)\n\n    }\n}\n\nexport const formatAvailable = (available, activePremisesTab) => {\n    if (available === undefined) return \"Šosovka\"\n    console.log(activePremisesTab)\n    console.log(available)\n    if (typeof available === \"number\") {\n        return `Na sklade ${available} kusov`\n    } else {\n        if (activePremisesTab === 0) {\n            return `Vo všetkých skladoch je ${available.reduce((acc, currValue) => acc + currValue)} kusov`\n        } else {\n            return `Na sklade ${available[activePremisesTab]} kusov`\n        }\n    }\n}\n\nexport const checkParameter = (parameter, idx) => {\n    if (parameter.length === 0) {\n        return \"\"\n    }\n    if (parameter[idx] === 1001) {\n        return \"\"\n    }\n\n    return parameter[idx].toString()\n}\n\nconst dia = \"áäčďéíľĺňóôŕšťúýžÁČĎÉÍĽĹŇÓŠŤÚÝŽ\";\nconst nodia = \"aacdeillnoorstuyzACDEILLNOSTUYZ\";\n\nexport const diaConvert = (text) => {\n    let convertText = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (dia.indexOf(text.charAt(i)) !== -1) {\n            convertText += nodia.charAt(dia.indexOf(text.charAt(i)));\n        }\n        else {\n            convertText += text.charAt(i);\n        }\n    }\n    return convertText;\n}\n\nexport const formatLink = (text) => {\n    return diaConvert(text).replaceAll(\" \", \"-\").toLowerCase().trim()\n}","export const fetchUsers = (token) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users`, requestOptions)\n\n}\n\nexport const fetchUser = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\n}\n\nexport const patchUser = (token, user, id) => {\n    // const {\n    //     _id: id,\n    //     address,\n    //     admin,\n    //     city,\n    //     country,\n    //     email,\n    //     lenses: {\n    //         cylinder,\n    //         cylinderAxes,\n    //         diopters,\n    //         distance,\n    //         addition,\n    //         basis,\n    //         prism,\n    //     },\n    //     name,\n    //     phone,\n    //     psc,\n    //     premises\n    // } = user\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        ...user\n        // address: address || undefined,\n        // admin: admin,\n        // premises: Number(premises) === 0 ? undefined : premises,\n        // city: city || undefined,\n        // country: country || undefined,\n        // email: email || undefined,\n        // lenses: {\n        //     cylinder: cylinder,\n        //     cylinderAxes: cylinderAxes,\n        //     diopters: diopters,\n        //     distance: distance,\n        //     addition: addition,\n        //     basis: basis,\n        //     prism: prism,\n        // },\n        // name: name,\n        // phone: phone || undefined,\n        // psc: psc || undefined,\n    })\n\n    const requestOptions = {\n        method: 'PATCH',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\n}\n\nexport const postUser = (token, user) => {\n    const {\n        name,\n        email,\n    } = user\n\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        email: email,\n        name: name,\n    })\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\n}\n\nexport const postAdmin = (token, user) => {\n    console.log(user)\n\n    const {\n        name,\n        email,\n        password,\n        premises,\n        admin\n    } = user\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        admin: Number(admin),\n        email: email,\n        name: name,\n        premises: Number(premises),\n        password\n    })\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\n}","export const initUserObj = {\n    address: \"\",\n    admin: 0,\n    premises: 0,\n    boughtProducts: {},\n    city: \"\",\n    country: \"\",\n    date: \"\",\n    email: \"\",\n    finishedRegistration: false,\n    company: {\n        ico: \"\",\n        dic: \"\",\n        icdph: \"\",\n        address: '',\n        psc: '',\n        country: '',\n    },\n    lenses: {\n        cylinder: [1001, 1001, 1001, 1001],\n        cylinderAxes: [1001, 1001, 1001, 1001],\n        diopters: [1001, 1001, 1001, 1001],\n        distance: [1001, 1001, 1001, 1001],\n        addition: [1001, 1001, 1001, 1001],\n        basis: [1001, 1001, 1001, 1001],\n        prism: [1001, 1001, 1001, 1001],\n    },\n    name: \"\",\n    orders: [],\n    phone: \"\",\n    psc: \"\",\n    tempUser: false,\n    totalSpent: 0,\n    watchList: [],\n    fName: \"\",\n    lName: \"\",\n    password: '',\n    confirmPassword: \"\",\n    birthDate: Date.now(),\n    optometrist: false\n\n}","import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\n// import { OrderContext } from '../order/order.context'\n\nimport {\n    // fetchUsers,\n    fetchUser,\n    patchUser,\n    postAdmin,\n    postUser,\n} from './user.queries'\n\nimport {\n    initUserObj\n} from './user.utils'\n\nexport const UserContext = createContext({\n    isUpdating: false,\n    activeIndex: 0,\n    handleChangeFilterItem: () => { },\n    filterItems: [],\n    totalCount: 0,\n    users: null,\n    user: null,\n    // getUsers: () => { },\n    getUser: () => { },\n    handleChange: () => { },\n    handleParameterChange: () => { },\n    handleCompanyChange: () => { },\n    updateUser: () => { },\n    resetUser: () => { },\n    formToShow: 0,\n    switchFormButtons: [],\n    toggleUserForm: () => { },\n    createUser: () => { },\n    getFilteredUsers: () => { },\n    getUserByQuery: () => { },\n})\n\nconst UserProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token } = useContext(AuthContext)\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    // ------------------------\n\n    const [user, setUser] = useState(initUserObj)\n    const [users, setUsers] = useState(null)\n    const [totalCount] = useState(0)\n\n    // ------------------------\n\n    const [isUpdating, setIsUpdating] = useState(false)\n    const [activeIndex, setActiveIndex] = useState(0)\n    const filterItems = [\n        {\n            id: 0,\n            name: \"Zákaznici\",\n            filter: 0,\n        },\n        {\n            id: 1,\n            name: \"Zamestnanci\",\n            filter: 1,\n        },\n        {\n            id: 2,\n            name: \"Vedúci\",\n            filter: 2,\n        },\n        // {\n        //     id: 3,\n        //     name: \"Velký brat\",\n        //     filter: 3,\n        // },\n        // {\n        //     id: 4,\n        //     name: \"Odstránené\",\n        //     filter: 3\n        // }\n    ]\n\n    // ------------------------\n\n    const [formToShow, setFormToShow] = useState(0)\n    const switchFormButtons = [\n        {\n            name: \"Zákazník\"\n        },\n        {\n            name: \"Zamestnanec\"\n        }\n    ]\n\n    const toggleUserForm = (e, idx) => {\n        e.preventDefault()\n        setFormToShow(idx)\n    }\n\n    // ------------------------\n\n\n    const handleChangeFilterItem = (itemIndex) => {\n        setActiveIndex(itemIndex)\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n\n        console.log(name, value)\n        setUser({\n            ...user,\n            [name]: value\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = user.lenses[name]\n        arr[idx] = value === '' ? 1001 : value\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleCompanyChange = (e) => {\n        const { name, value } = e.target\n        setUser({\n            ...user,\n            company: {\n                ...user.company,\n                [name]: value\n            }\n        })\n    }\n\n    useEffect(() => {\n        setUser({\n            ...user,\n            name: user?.fName + \" \" + user?.lName\n        })\n    }, [user?.fName, user?.lName])\n\n    const resetUser = () => {\n        setUser(initUserObj)\n        setIsUpdating(false)\n        setFormToShow(0)\n    }\n\n    // ------------------------\n    // USER ACTIONS\n    // ------------------------\n\n    // Get all users\n    // const getUsers = async () => {\n    //     setIsLoading(true)\n    //     setShowModal(true)\n\n    //     try {\n    //         const response = await fetchUsers(token)\n    //         const data = await response.json()\n\n    //         console.log(data)\n    //         if (data.users) {\n    //             setUsers(data.users)\n    //             setTotalCount(data.count)\n    //             setIsLoading(false)\n    //             closeModal()\n\n    //         } else {\n    //             getMessage(data.message)\n    //             setIsLoading(false)\n    //         }\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n    // }\n\n    // Get single user\n    const getUser = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n        setIsUpdating(true)\n\n        try {\n            const response = await fetchUser(token, id)\n            const data = await response.json()\n\n            if (data.user) {\n                setUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n                setIsLoading(false)\n                closeModal()\n\n            } else {\n                getMessage(data.message)\n                setIsLoading(false)\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Update user\n    const updateUser = async (user, id, path, refetchUser, close, addUser) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(user)\n\n        try {\n            const response = await patchUser(token, user, id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.messageSK)\n                setIsLoading(false)\n                return\n            }\n\n\n            setIsLoading(false)\n            closeModal()\n\n            if (path === 'order') {\n                push(`/dashboard/objednavky/${id}`)\n            } else if (path === 'profile') {\n                push(`/dashboard/zakaznici/${id}`)\n            } else if (path === 'isOrder') {\n                setUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n\n                addUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n                // console.log(\"REFETCH USER\")\n                // console.log(\"REFETCH USER\")\n                // console.log(\"REFETCH USER\")\n                // refetchUser()\n                close()\n            } else {\n                push(\"/dashboard/zakaznici\")\n            }\n\n            getFilteredUsers({\n                filters: {\n                    admin: activeIndex\n                }\n            })\n            // http://localhost:1000/#/dashboard/zakaznici\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createUser = async (user, path) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            if (formToShow === 0) {\n                let data = {}\n                if (!user._id) {\n                    console.log('creating new user')\n                    const response = await postUser(token, user)\n                    data = await response.json()\n\n                    if (data.error) {\n                        getMessage(data.message)\n\n                        if (data.type === 'email') {\n                            getMessage(\"Email existuje\")\n                        }\n                        if (data.error === 'format' && data.message.includes('email')) {\n                            getMessage(\"Email musi byt platny email\")\n                        }\n                        setIsLoading(false)\n                        return\n                    }\n\n                    setUser({\n                        ...data.user,\n                        _id: data.user._id\n                    })\n                }\n\n                const userId = data.user ? data.user._id : user._id\n\n                updateUser({\n                    ...user\n                }, userId, path)\n\n                // setIsLoading(false)\n                // getUsers()\n                // push('/dashboard/zakaznici')\n                // closeModal()\n\n            } else {\n                if (user.password !== user.confirmPassword) {\n                    getMessage(\"Heslá sa nezhodujú\")\n                    setIsLoading(false)\n                    return\n                }\n\n                const response = await postAdmin(token, user)\n                const data = await response.json()\n\n                console.log(data)\n\n                if (data.error) {\n                    getMessage(data.message)\n                    setIsLoading(false)\n                    return\n                }\n\n                setIsLoading(false)\n                getFilteredUsers({\n                    filters: {\n                        admin: activeIndex\n                    }\n                })\n\n                push(\"/dashboard/zakaznici\")\n                closeModal()\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // ----------------------------------------------\n    // ----------------------------------------------\n    // ----------------------------------------------\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n\n    const getFilteredUsers = async (filter) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(filter)\n        const raw = JSON.stringify(filter)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getUserByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(query)\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <UserContext.Provider\n            value={{\n                isUpdating,\n                activeIndex,\n                handleChangeFilterItem,\n                filterItems,\n                users,\n                user,\n                totalCount,\n                // getUsers,\n                getUser,\n                handleChange,\n                handleParameterChange,\n                handleCompanyChange,\n                updateUser,\n                resetUser,\n                formToShow,\n                switchFormButtons,\n                toggleUserForm,\n                createUser,\n                getFilteredUsers,\n                getUserByQuery,\n            }}\n        >\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserProvider","import styled from 'styled-components'\n\nexport const InputRow = styled.div`\n    display:flex;\n    align-items: center;\n\n    p {\n        margin-top: 1.8rem;\n        margin-left: 2rem;\n            opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n    @media all and (max-width: 800px) {\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n    }\n`","import React from 'react'\n\nimport { InputRow } from './product-input-row.styles'\n\nconst ProductInputRow = ({ children, label, example, ...otherprops }) => {\n    return (\n        <InputRow {...otherprops}>\n            <div>\n                {children}\n            </div>\n            <div>\n                <p>{label + \" \"}<span>{example}</span></p>\n            </div>\n        </InputRow>\n    )\n}\n\nexport default ProductInputRow\n","import React, { createContext, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\n\nexport const ExaminationContext = createContext({\n    createExamination: () => { },\n    updateExamination: () => { },\n    deleteExamination: () => { },\n})\n\nconst ExaminationProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const createExamination = async (examsToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(examsToAdd)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/exams/`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.exam) {\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateExamination = async (examToUpdate, examId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(examToUpdate)\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/exams/${examId}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.exam) {\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteExamination = async (examId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/exams/${examId}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.exam) {\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <ExaminationContext.Provider\n            value={{\n                createExamination,\n                updateExamination,\n                deleteExamination\n            }}\n        >\n            {children}\n        </ExaminationContext.Provider>\n    )\n}\n\nexport default ExaminationProvider","import styled from 'styled-components'\n\nexport const TableContainer = styled.div`\n    display: grid;\n    grid-template-columns: 2rem repeat(7, 7.5rem);\n    margin-bottom: 3rem;\n`\n\nexport const TitleCol = styled.div`\n    display: grid;\n    grid-template-rows: repeat(4, 5rem);\n    div {\n        align-self: center;\n        display:flex;\n        justify-content: space-between;\n    }\n`\n\nexport const Col = styled.div`\n    display: grid;\n    grid-template-rows: repeat(4, 5rem);\n    div {\n        text-align:center;\n        align-self: center;\n        margin-left: .5rem;\n\n\n        &:nth-child(1) {\n            align-self: center;\n        }\n\n        input {\n            display:block;\n            width: 100%;\n            border: none;\n            padding: 1rem .5rem;\n            text-align: center;\n            font-family: inherit;\n            font-size: inherit;\n            background-color: var(--input-background-color);\n            color: var(--input-color);\n            border-radius: .5rem;\n            outline: none;\n\n            &:focus {\n                outline: none;\n            }\n\n            &:disabled {\n                opacity: .83;\n            }\n        }\n\n        input[type=number]::-webkit-inner-spin-button, \n        input[type=number]::-webkit-outer-spin-button {  \n            opacity: 1;\n\n        }\n    }\n`\n\nexport const OsContainer = styled.div`\n        text-align:center;\n        align-self: center;\n        margin-left: .5rem;\n\n\n        &:nth-child(1) {\n            align-self: center;\n        }\n\n        input {\n            display:block;\n            width: 100%;\n            border: none;\n            padding: 1rem .5rem;\n            text-align: center;\n            font-family: inherit;\n            font-size: inherit;\n            background-color: var(--input-background-color);\n            color: var(--input-color);\n            border-radius: .5rem;\n            outline: none;\n\n            &:focus {\n                outline: none;\n            }\n        }\n\n        input[type=number]::-webkit-inner-spin-button, \n        input[type=number]::-webkit-outer-spin-button {  \n            display:none;\n            opacity: 0;\n\n        }\n`","import React, { useEffect } from 'react'\n\nimport {\n    TableContainer,\n    TitleCol,\n    Col,\n    OsContainer\n} from './parameters-table.styles'\n\nconst ParametersTable = ({ parameters, handleChange, disabledInputs = false }) => {\n    const checkParameters = (parameter, idx) => {\n        if (parameter.length === 0) {\n            return \"\"\n        }\n        if (parameter[idx] === 1001) {\n            return \"\"\n        }\n\n        return parameter[idx]\n    }\n\n    console.log((Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))).toFixed(2) === 0)\n\n    useEffect(() => {\n        if (handleChange) {\n            if (parameters.diopters && parameters.addition) {\n                handleChange({\n                    target: {\n                        name: \"diopters\",\n                        value: (Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))) === 0 ? \"\" : (Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))).toFixed(2)\n                    }\n                }, 2)\n                handleChange({\n                    target: {\n                        name: \"diopters\",\n                        value: (Number(checkParameters(parameters.diopters, 1)) + Number(checkParameters(parameters.addition, 1))) === 0 ? \"\" : (Number(checkParameters(parameters.diopters, 1)) + Number(checkParameters(parameters.addition, 1))).toFixed(2)\n                    }\n                }, 3)\n            }\n        }\n    }, [parameters.diopters[0], parameters.addition[0], parameters.diopters[1], parameters.addition[1]])\n\n    return (\n        <TableContainer>\n            <TitleCol>\n                <div>{\" \"}</div>\n                <div>\n                    <p>P</p>\n                </div>\n                <div>\n                    <p>Ľ</p>\n                </div>\n                <div>\n                    <p>P</p>\n                </div>\n                <div>\n                    <p>Ľ</p>\n                </div>\n            </TitleCol>\n\n\n            <Col>\n                <div>sph</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.diopters, idx)}\n                                name=\"diopters\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>cyl</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.cylinder, idx)}\n                                name=\"cylinder\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>ax</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <OsContainer key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.cylinderAxes, idx)}\n                                name=\"cylinderAxes\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </OsContainer>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>PD</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.distance, idx)}\n                                name=\"distance\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>prizma</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.prism, idx)}\n                                name=\"prism\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>basis</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.basis, idx)}\n                                name=\"basis\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>addicia</div>\n\n                {[...Array(2)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.addition, idx)}\n                                name=\"addition\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n\n\n        </TableContainer>\n    )\n}\n\nexport default ParametersTable\n"],"sourceRoot":""}
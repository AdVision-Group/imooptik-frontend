{"version":3,"sources":["sections/post/post.styles.jsx","sections/post/post.section.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","context/image/image.queries.jsx","context/image/image.context.jsx","components/custom-checkbox/custom-checkbox.styles.jsx","components/custom-checkbox/custom-checkbox.component.jsx","context/blog/blog.queries.jsx","context/blog/blog.context.jsx","components/custom-textarea/custom-textarea.styles.jsx","components/custom-textarea/custom-textarea.component.jsx","components/modal-images/modal-images.styles.jsx","components/modal-images/modal-images.component.jsx"],"names":["Header","styled","div","paddingStyles","GridContainer","PostImage","hasImage","DeleteButton","CustomButtom","AddButton","Title","h2","ContentTextare","ReactQuill","CustomUndo","viewBox","className","points","d","CustomRedo","Size","Quill","import","whitelist","register","Font","modules","toolbar","container","handlers","undo","this","quill","history","redo","delay","maxStack","userOnly","formats","QuillToolbar","id","defaultValue","value","PostSection","useParams","push","useHistory","useContext","BlogContext","createPost","isLoading","message","showLoading","setIsLoading","getPost","post","handlePostUpdate","ImageContext","selectedImage","setSelectedImage","useState","title","setTitle","description","setDescription","content","setContent","image","setImage","draft","toggleDraft","showImageModal","setImageModal","isUpdating","setIsUpdating","useEffect","console","log","name","html","_id","onSubmit","e","preventDefault","length","loading","close","label","checked","onChange","type","handleChange","target","required","rows","onClick","src","process","imagePath","alt","shrinkLabel","css","InputGroup","CustomInput","otherProps","htmlFor","Container","ScrollContainer","children","uploadImage","token","img","imgName","imgAlt","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","redirect","fetch","fetchFilteredImages","limit","skip","sortBy","dateCreated","deleteImage","createContext","isDisabled","images","getImages","handleImage","handleDeleteImage","getNextImages","getPrevImage","ImageProvider","LoadingModalContext","getMessage","setShowModal","closeModal","AuthContext","setIsDisabled","setImages","setSkip","a","response","json","data","addToSkip","respone","Provider","CheckboxContainer","isActive","CustomCheckbox","handleClick","otherprops","fetchSinglePost","createNewPost","updatePost","deletePost","posts","postsCount","getPosts","handlePostDelete","BlogProvider","setPosts","setPost","setPostsCount","blogs","count","blog","postResponse","postData","CustomTextarea","ModalContainer","Modal","UploadButton","CloseButton","button","FlexContainer","ImageContainer","ImagePreviewContainer","TabOptions","TabButton","CropButton","CustomButton","ButtonOptions","FetchButtons","toDataUrl","url","callback","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","str","result","lastPos","indexOf","cuttedstr","slice","readAsDataURL","open","responseType","send","ModalImages","showTab","setShowTab","imageToUpload","setImageToUpload","imgUrl","setImgUrl","imageName","setImageName","imageAlt","setImageAlt","tab","URL","createObjectURL","ReactDOM","createPortal","accept","files","Fragment","imgData","handleSubmit","disabled","map","selectImage","document","getElementById"],"mappings":"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","file":"static/js/8.c123fd63.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\nimport CustomButtom from '../../components/custom-button/custom-button.component'\nimport ReactQuill from 'react-quill';\n\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n\n    @media all and (max-width: 500px) {\n        flex-direction: column;\n    }\n`\n\nexport const GridContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 2rem;\n    height: inherit;\n    height: 100%;\n\n        @media all and (max-width: 800px) {\n            grid-template-columns: 1fr ;\n        }\n\n`\n\nexport const PostImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    width: 100%;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"#eee\"};\n    margin-top: 3rem;\n    padding: 6rem;\n\n    position: relative;\n\n    img {\n        position: absolute;\n        width: 100%;\n        /* height: 100%; */\n        max-height: 40rem;\n        left: 0;\n        top: 0;\n        object-fit: cover;\n        object-position: center;\n\n    }\n`\n\nexport const DeleteButton = styled(CustomButtom)`\n    font-size: 1.4rem;\n    margin: 0 2rem;\n    background-color: #DD4C4C;\n\n    @media all and (max-width: 500px) {\n        margin: 0 .8rem;\n    }\n`\nexport const AddButton = styled(CustomButtom)`\n    font-size: 1.4rem;\n`\n\nexport const Title = styled.h2`\n    margin-bottom: 2rem;\n`\n\nexport const ContentTextare = styled(ReactQuill)`\n    height: 100%;\n    background-color: #F5F5F5;\n    .ql-container, .ql-toolbar {\n        border: none;\n    }\n`\n","import React, { useState, useContext, useEffect } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport CustomTextarea from '../../components/custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport { Quill } from 'react-quill'\n\nimport {\n    Header,\n    GridContainer,\n    PostImage,\n    DeleteButton,\n    AddButton,\n    Title,\n    ContentTextare,\n} from './post.styles'\n\nconst PostSection = () => {\n    const { id } = useParams()\n    const { push } = useHistory()\n    const {\n        createPost,\n        isLoading,\n        message,\n        showLoading,\n        setIsLoading,\n        getPost,\n        post,\n        handlePostUpdate\n    } = useContext(BlogContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [content, setContent] = useState('')\n    const [image, setImage] = useState('')\n    const [draft, toggleDraft] = useState(false)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (image.length <= 0) return\n        if (content.length <= 0) return\n\n        if (id === 'novy-prispevok') {\n            createPost(image, title, description, draft, content)\n        } else {\n            handlePostUpdate(title, description, draft, content, image, id)\n        }\n\n        push('/dashboard/blog')\n\n    }\n\n    useEffect(() => {\n        setSelectedImage(null)\n\n        if (id !== 'novy-prispevok') {\n            getPost(id)\n            setIsUpdating(true)\n        }\n    }, [id])\n\n    useEffect(() => {\n        console.log(post)\n        if (post) {\n            console.log(post)\n            setTitle(post.name)\n            setDescription(post.description)\n            setContent(post.html)\n            toggleDraft(post.draft)\n            if (post.image) {\n                setImage(post.image._id)\n                setSelectedImage(post.image)\n            }\n        }\n    }, [post])\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {isLoading && <Popup loading={showLoading} title={message} close={() => setIsLoading(false)} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={setImage} />}\n\n            <Header>\n                <div>\n                    <h1>Post</h1>\n                </div>\n                <div>\n                    <CustomCheckbox\n                        label='Draft'\n                        checked={draft}\n                        onChange={() => toggleDraft(!draft)}\n                    />\n                    <DeleteButton>Vymazať</DeleteButton>\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť príspevok\" : \"Pridať príspevok\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n\n                <GridContainer>\n                    <div>\n                        <h2>Informácia</h2>\n                        <CustomInput\n                            label=\"Nadpis\"\n                            type='text'\n                            name='title'\n                            value={title}\n                            handleChange={(e) => setTitle(e.target.value)}\n                            required\n                        />\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={description}\n                            handleChange={(e) => setDescription(e.target.value)}\n                            required\n                        />\n                        <h2>Titulná fotka</h2>\n                        <PostImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </PostImage>\n                    </div>\n                    <div>\n                        <Title>Obsah</Title>\n                        <QuillToolbar />\n                        <ContentTextare\n                            value={content}\n                            onChange={setContent}\n                            modules={modules}\n                            formats={formats}\n                        />\n                    </div>\n\n                </GridContainer>\n\n            </ScrollContainer>\n        </form>\n    )\n}\n\n\nconst CustomUndo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n        />\n    </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n        />\n    </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n    this.quill.history.undo();\n}\nfunction redoChange() {\n    this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n    \"arial\",\n    \"comic-sans\",\n    \"courier-new\",\n    \"georgia\",\n    \"helvetica\",\n    \"lucida\"\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nconst modules = {\n    toolbar: {\n        container: \"#toolbar\",\n        handlers: {\n            undo: undoChange,\n            redo: redoChange\n        }\n    },\n    history: {\n        delay: 500,\n        maxStack: 100,\n        userOnly: true\n    }\n};\n\n// Formats objects for setting up the Quill editor\nconst formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"align\",\n    \"strike\",\n    \"script\",\n    \"blockquote\",\n    \"background\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"color\",\n    \"code-block\"\n];\n\n// Quill Toolbar component\nconst QuillToolbar = () => (\n    <div id=\"toolbar\" className=\"toolbar\">\n        <span className=\"ql-formats\">\n            <select className=\"ql-size\" defaultValue=\"medium\">\n                <option value=\"extra-small\">Size 1</option>\n                <option value=\"small\">Size 2</option>\n                <option value=\"medium\">Size 3</option>\n                <option value=\"large\">Size 4</option>\n            </select>\n            <select className=\"ql-header\" defaultValue=\"3\">\n                <option value=\"1\">Heading</option>\n                <option value=\"2\">Subheading</option>\n                <option value=\"3\">Normal</option>\n            </select>\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n        </span>\n        <span className=\"ql-formats\">\n            <select className=\"ql-align\" />\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n                <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n                <CustomRedo />\n            </button>\n        </span>\n    </div>\n);\n\n\nexport default PostSection\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`","import React from 'react'\nimport { Container } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            {children}\n        </Container>\n    )\n}\n\nexport default ScrollContainer","export const uploadImage = (token, img, imgName, imgAlt) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({ \"name\": imgName || \" \", \"alt\": imgAlt || \" \", 'image': img });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/images/upload`, requestOptions)\n}\n\nexport const fetchImages = () => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/images`)\n}\n\nexport const fetchFilteredImages = (token, limit, skip) => {\n    const myHeaders = new Headers();\n    // myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        sortBy: {\n            dateCreated: -1\n        },\n        limit,\n        skip\n    });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/images/filter`, requestOptions)\n}\n\nexport const deleteImage = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n    const requestOptions = {\n        method: 'DELETE',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/images/${id}`, requestOptions)\n}","import React, { createContext, useState, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport { deleteImage, fetchImages, uploadImage, fetchFilteredImages } from './image.queries'\n\nexport const ImageContext = createContext({\n    isDisabled: false,\n    images: null,\n    selectedImage: null,\n    getImages: () => { },\n    handleImage: () => { },\n    handleDeleteImage: () => { },\n    setSelectedImage: () => { },\n    getNextImages: () => { },\n    getPrevImage: () => { }\n})\n\nconst ImageProvider = ({ children }) => {\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const { token } = useContext(AuthContext)\n\n    const [isDisabled, setIsDisabled] = useState(false)\n    const [images, setImages] = useState(null)\n    const [selectedImage, setSelectedImage] = useState(null)\n    const [limit, setLimit] = useState(4)\n    const [skip, setSkip] = useState(0)\n\n    const handleImage = async (img, imgName, imgAlt, setImage, close) => {\n        setShowModal(true)\n        setIsLoading(true)\n        setIsDisabled(true)\n\n        try {\n            const response = await uploadImage(token, img, imgName, imgAlt)\n            const data = await response.json()\n            console.log(data)\n\n            if (data.image) {\n                setSelectedImage(data.image)\n                setImage(data.image._id)\n                getImages()\n                close()\n            }\n\n            setShowModal(false)\n            setIsLoading(false)\n            setIsDisabled(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n            setIsDisabled(false)\n        }\n    }\n\n    const getNextImages = async (addToSkip) => {\n        try {\n            if (images.length !== limit) return\n\n            const response = await fetchFilteredImages(token, limit, skip + addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip + addToSkip)\n            }\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getPrevImage = async (addToSkip) => {\n        if (skip === 0) return\n        try {\n            const response = await fetchFilteredImages(token, limit, skip - addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip - addToSkip)\n\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getImages = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            // const response = await fetchImages()\n            const response = await fetchFilteredImages(token, limit, skip)\n\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n            closeModal()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleDeleteImage = async (id, e) => {\n        e.preventDefault()\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const respone = await deleteImage(token, id)\n            const data = await respone.json()\n\n            getMessage(data.message)\n            setIsLoading(false)\n            getImages()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <ImageContext.Provider\n            value={{\n                isDisabled,\n                images,\n                selectedImage,\n                getImages,\n                handleImage,\n                handleDeleteImage,\n                setSelectedImage,\n                getNextImages,\n                getPrevImage\n            }}\n        >\n            {children}\n        </ImageContext.Provider>\n    )\n}\n\nexport default ImageProvider","import styled from 'styled-components'\n\nexport const CheckboxContainer = styled.div`\n    display: inline-block;\n    cursor: pointer;\n    font-size: 1.5rem;\n    font-weight: 700;\n    /* margin-right: 2rem; */\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"rgba(0,0,0,.06)\"};\n    color: ${({ isActive }) => isActive ? \"#fff\" : \"#000\"};\n    padding: .8rem 3rem;\n    border-radius: .2rem;\n    transition: all .2s ease-out;\n\n    @media all and (max-width: 500px) {\n        padding: 0.5rem 1.5rem;\n        font-size: 1.4rem;\n    }\n`","import React from 'react'\n\nimport { CheckboxContainer } from './custom-checkbox.styles'\n\nconst CustomCheckbox = ({ label, isActive, handleClick, ...otherprops }) => {\n    return (\n        <CheckboxContainer isActive={isActive} onClick={handleClick} {...otherprops}>\n            {label}\n        </CheckboxContainer>\n    )\n}\n\nexport default CustomCheckbox\n","\n\nexport const fetchPosts = () => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/blogs`)\n}\n\nexport const fetchSinglePost = (id) => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/blogs/${id}`)\n}\n\nexport const createNewPost = (token, name, description, draft, html, img) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify({ \"name\": name, \"description\": description, \"draft\": draft, \"html\": html, 'image': img });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs`, requestOptions)\n}\n\nexport const updatePost = (token, name, description, draft, html, img, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify({ \"name\": name, \"description\": description, \"draft\": draft, \"html\": html, 'image': img });\n\n    const requestOptions = {\n        method: 'PATCH',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs/${id}`, requestOptions)\n\n}\n\nexport const deletePost = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const requestOptions = {\n        method: 'DELETE',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs/${id}`, requestOptions)\n\n}\n\n","import React, { createContext, useState, useContext } from 'react'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport {\n    fetchPosts,\n    createNewPost,\n    fetchSinglePost,\n    updatePost,\n    deletePost,\n} from './blog.queries'\n\n\nexport const BlogContext = createContext({\n    posts: null,\n    post: null,\n    postsCount: 0,\n    getPosts: () => { },\n    createPost: () => { },\n    getPost: () => { },\n    handlePostUpdate: () => { },\n    handlePostDelete: () => { },\n})\n\nconst BlogProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const [posts, setPosts] = useState(null)\n    const [post, setPost] = useState(null)\n    const [postsCount, setPostsCount] = useState(0)\n\n    const getPosts = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const response = await fetchPosts()\n        const data = await response.json()\n\n        setPosts(data.blogs)\n        setPostsCount(data.count)\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const getPost = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n\n            const response = await fetchSinglePost(id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.blog) {\n                setPost(data.blog)\n                setIsLoading(false)\n                getMessage(data.message)\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n            // setPosts(data.blogs)\n            // setPostsCount(data.count)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const createPost = async (img, name, description, draft, html) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await createNewPost(token, name, description, draft, html, img)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostUpdate = async (name, description, draft, html, img, id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await updatePost(token, name, description, draft, html, img, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostDelete = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await deletePost(token, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <BlogContext.Provider\n            value={{\n                posts,\n                post,\n                postsCount,\n                getPosts,\n                createPost,\n                getPost,\n                handlePostUpdate,\n                handlePostDelete,\n            }}\n        >\n            {children}\n        </BlogContext.Provider>\n    )\n}\n\nexport default BlogProvider","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: .5rem .5rem .5rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 25px 0;\n        font-family: inherit;\n        resize: none;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: .6rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-textarea.styles'\n\nconst CustomTextarea = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <textarea\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomTextarea","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 50rem;\n    max-height: 60rem;\n\n    overflow-y: scroll;\n\n    /* display: flex;\n    flex-direction: column;\n    align-items: center; */\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: white;\n\n    position: relative;\n    z-index: 999999;\n\n`\n\nexport const UploadButton = styled.label`\n    input[type=\"file\"] {\n        position: absolute;\n        left: -999999999rem;\n    }\n    cursor: pointer;\n    background-color: #000;\n    color: #fff;\n    max-width: 18rem;\n    font-size: 1.4rem;\n    font-family: inherit;\n    padding: .8rem 1rem;\n    text-align: center;\n    display: block;\n    border: 1px solid #000;\n    transition: background-color .1s ease-out,\n                color .2s ease-out;\n    outline: none;\n    margin: 0 auto 2rem;\n\n    &:focus {\n        outline:none;\n    }\n\n    &:hover {\n        background-color: transparent;\n        color: #000;\n    }\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const FlexContainer = styled.div`\n    /* max-width: 46rem; */\n\n    /* width: 100%; */\n    /* overflow-x: scroll; */\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    margin: 2rem auto;\n`\n\nexport const ImageContainer = styled.div`\n    position: relative;\n    cursor: pointer;\n    width: 20rem;\n    margin: 1rem 0;\n\n    &:hover button {\n        display: block\n    }\n\n    /* &:not(:last-child) {\n        margin-right: 1.5rem;\n    } */\n\n    img {\n        width:100%;\n        height:100%;\n        object-fit: contain;\n        object-position: center;\n    }\n`\n\nexport const DeleteButton = styled.button`\n    cursor: pointer;\n    display:none;\n    border-radius:50%;\n    position: absolute;\n    border: none;\n    background-color: rgb(235, 172, 1);\n    padding: .5rem .75rem;\n    font-size: 1rem;\n    right: .5rem;\n    top: .5rem;\n\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const ImagePreviewContainer = styled.div`\n    display: block;\n    width: 100%;\n\n    img {\n        display: block;\n        max-width: 100%;\n        /* width: inherit; */\n    }\n`\n\nexport const TabOptions = styled.div`\n    max-width: 18rem;\n    display: flex;\n    justify-content: space-between;\n    margin: 0 auto;\n`\n\nexport const TabButton = styled.button`\n    cursor: pointer;\n    outline:none;\n    border: none;\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"#000\"};\n    color: #fff;\n    font-weight: ${({ isActive }) => isActive ? \"700\" : \"400\"};\n    font-family: inherit;\n    font-size: 1.2rem;\n    padding: .8rem 1.5rem;\n    border-radius: .2rem;\n    margin-bottom: 2rem;\n    transition: all .3s ease-out;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const CropButton = styled(CustomButton)`\n    display: block;\n    margin: 2rem auto 0;\n\n    &:disabled {\n        cursor: not-allowed;\n        background-color: gray;\n    }\n`\n\nexport const ButtonOptions = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nexport const FetchButtons = styled.button`\n    cursor: pointer;\n    outline: none;\n    border: none;\n    padding: .4rem 1rem;\n    border-radius: 50%;\n    color: #fff;\n    background-color: #000;\n    font-size: 1.2rem;\n    font-family: inherit;\n    margin: 0 .5rem;\n\n    &:focus {\n        outline: none;\n    }\n`","import React, { useEffect, useContext, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\n// import { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\n// import CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    // const {\n    //     getMessage,\n    //     setIsLoading,\n    //     setShowModal,\n    //     closeModal\n    // } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    // const getCropData = async (e) => {\n    //     e.preventDefault()\n    //     setShowModal(true)\n    //     setIsLoading(true)\n\n    //     try {\n    //         // if (typeof cropper !== 'undefined') {\n    //         toDataUrl(imgUrl, async (imgData) => {\n    //             const data = await handleImage(imgData, imageName, imageAlt)\n\n    //             if (data.image) {\n    //                 setImage(data.image._id)\n    //                 setSelectedImage(data.image)\n    //                 getImages()\n    //                 close()\n    //             }\n    //         })\n\n    //         // }\n    //         setShowModal(false)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    //     closeModal()\n    // };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Orezať a nahrať</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n"],"sourceRoot":""}
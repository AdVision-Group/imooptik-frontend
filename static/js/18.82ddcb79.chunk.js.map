{"version":3,"sources":["components/modal-product-image-gallery/modal-product-image-gallery.styles.jsx","components/modal-product-image-gallery/modal-product-image-gallery.component.jsx","components/modal-get-product-data/modal-get-product-data.styles.jsx","components/modal-get-product-data/modal-get-product-data.component.jsx","components/modal-get-lenses-data/modal-get-lenses-data.styles.jsx","components/modal-get-lenses-data/modal-get-lenses-data.component.jsx","components/product-glasses-form/product-glasses-form.styles.jsx","components/product-glasses-form/product-glasses-form.component.jsx","components/product-lenses-form/product-lenses-form.styles.jsx","components/product-lenses-form/product-lenses-form.component.jsx","components/product-accessories-form/product-accessories-form.styles.jsx","components/product-accessories-form/product-accessories-form.component.jsx","components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx","components/product-contact-lenses-form/product-contact-lenses-form.component.jsx","components/product-service-form/product-service-form.styles.jsx","components/product-service-form/product-service-form.component.jsx","sections/product/product.styles.jsx","sections/product/product.section.jsx","hooks/useFetch.jsx","utils/orders.utils.jsx"],"names":["ModalContainer","styled","div","Modal","CloseButton","button","DeleteButton","label","NewImageContainer","isPrimary","NewImagesContainer","SubmitButton","CustomButton","UploadImageButton","ProductImageGalleryModal","close","setImage","useState","images","setImages","isModalVisible","setIsModalVisible","selectedImages","setSelectedImages","primaryImage","setPrimaryImage","useFetchByQuery","sortBy","dateCreated","limit","skip","response","isLoading","refetch","useEffect","ReactDOM","createPortal","onClick","length","map","img","prevValue","selectImage","src","process","imagePath","alt","_id","arr","filter","image","removeSelectedImage","selectPrimaryImage","primaryImg","otherImages","filteredArr","firstIndex","handleSubmit","document","getElementById","SearchButton","TableContainer","TableCol","isHead","ProductTableHead","ProductTableRow","GetProductDataModal","getSingleProduct","productObj","setProductObj","searchQuery","setSearchQuery","productItems","setProductItems","filters","type","date","query","setQuery","products","value","handleChange","e","target","onKeyPress","key","product","idx","id","data","price","toFixed","eanCode","specs","size","Array","name","brand","formatAvailable","available","GetLensesDataModal","getSingleLenses","fillProductData","lenses","lensType","dioptric","dioptersRange","cylinderRange","BrandedCheckbox","CustomCheckbox","ImageContainer","ProductImage","hasImage","GlassesContainerForm","GlassesContainer","GlassesParameterContainer","StockContainer","CustomSelect","select","CopyButton","ProductGlassesForm","selectedImage","retailNames","currentUser","checkParameter","handleAvailableChange","handleGlassesParametersChange","handleGlassesSpecsSizeChange","handleSpecsChange","glassesParameters","setImageModal","handleGetProductData","isBranded","setIsBranded","allBrands","setAllBrands","brands","toString","subname","isActive","handleClick","Fragment","list","rows","description","required","bonusImages","colorCode","frameColor","glassesColors","color","frameMaterial","glassesMaterials","material","frameStyle","glassesShapes","shape","sex","onChange","admin","premises","LensesFormContainer","LensesContainer","LensesParametersContainer","SubGridContainer","TypesContainer","TypeCheckbox","ProductLensesForm","handleParameterChange","console","log","lensesTypes","photochromic","inputLabel","onBlur","formatfloatNumber","Number","formatParameter","AccessoriesFormContainer","AccessoriesContainer","ProductAccessoriesForm","isUpdating","ContactLensesFormContainer","ContactLensesContainer","ContactLensesParametersContainer","IncreaseButton","ProductContactLensesForm","handleContactLensesChange","handleAddNewParameter","contactLensesParameters","allowedCurves","allowedDiameters","ServiceFormContainer","ServiceContainer","ProductServiceForm","Header","paddingStyles","IsPublicCheckbox","CategoryContainer","CategoryCheckbox","ProductSection","useParams","useContext","AuthContext","LoadingModalContext","closeModal","message","showModal","getMessage","setShowModal","ImageContext","setSelectedImage","showImageModal","showOldImageModal","setOldImageModal","isGetProductDataModalVisible","setIsGetProductDataModalVisible","isGetLensesDataModalVisible","setIsGetLensesDataModalVisible","setIsUpdating","WarehouseContext","handleLensesChange","handleLensesParameterChange","createProduct","updateProduct","resetProduct","resetLenses","resetContactLenses","resetGlassesParameters","createLenses","updateLenses","handleProductChange","handleProductAvailableChange","getEanCode","handleContactLensesParameterChange","handleGlassesParameterChange","handleGlassesParameterSpecsChange","handleGlassesSizeChange","hasChanged","setHasChanged","useFetch","isLoadingFilters","setFilters","boolean","handleGetLensesData","handleChangeType","Object","keys","window","confirm","formatLink","handleSelectImage","imgId","setLensObj","undefined","when","productData","loading","title","eshop","preventDefault","newProductObj","updatedObj","contactLenses","obj","productCategories","category","splice","find","path","method","setResponse","error","setError","setMessage","setIsLoading","refetchIndex","setRefetchIndex","prevRefetchIndex","requestOptions","redirect","a","fetch","res","json","fetchData","queryObj","myHeaders","Headers","append","localStorage","getItem","raw","JSON","stringify","headers","body","useFetchById","isAvailable","reduce","acc","currValue","totalCount","translatePaymentMethod","translateStatus","status"],"mappings":"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","file":"static/js/18.82ddcb79.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 100rem;\n    max-height: 80rem;\n\n    overflow-y: scroll;\n\n    /* display: flex;\n    flex-direction: column;\n    align-items: center; */\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: var(--body-background-primary-color);\n    color: var(--primary-text-color);\n\n    position: relative;\n    z-index: 999999;\n\n    h2 {\n        margin-bottom: 2rem;\n    }\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const UploadButton = styled.label`\n    input[type=\"file\"] {\n        position: absolute;\n        left: -999999999rem;\n    }\n    cursor: pointer;\n        background-color: transparent;\n\n    max-width: 18rem;\n    font-size: 1.4rem;\n    font-family: inherit;\n    font-weight: bolder;\n    padding: .8rem 1rem;\n    text-align: center;\n    display: block;\n    border: 1px solid var(--primary-color);\n    color: var(--primary-color);\n    transition: background-color .1s ease-out,\n                color .2s ease-out;\n    outline: none;\n    margin-bottom: 2rem;\n\n    &:focus {\n        outline:none;\n    }\n\n    &:hover {\n        background-color: var(--primary-color);\n        color: var(--button-font-color);\n    }\n`\n\n\n\nexport const DeleteButton = styled.button`\n    cursor: pointer;\n    display:none;\n    border-radius:50%;\n    position: absolute;\n    border: none;\n    background-color: var(--color-red);\n    color: #fff;\n    padding: .5rem .75rem;\n    font-size: 1rem;\n    right: .5rem;\n    top: .5rem;\n\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const NewImageContainer = styled.div`\n    cursor: pointer;\n\n    position: relative;\n    min-width: 15rem;\n    width: 15rem;\n    height: 15rem;\n\n    border: ${({ isPrimary }) => isPrimary ? '1px solid var(--primary-color)' : 'unset'};\n    \n    img {\n        width: 100%;\n        height: 100%;\n        object-fit: contain;\n    }\n\n    &:hover ${DeleteButton} {\n        display: block\n    }\n`\n\nexport const NewImagesContainer = styled.div`\n    display: flex;\n    gap: 3rem;\n    overflow-x: auto;\n    padding-bottom: 2rem;\n    margin-bottom: 2rem;\n\n`\n\nexport const SubmitButton = styled(CustomButton)`\n    background-color: var(--primary-color);\n    font-weight: bolder;\n`\n\nexport const UploadImageButton = styled(CustomButton)`\n    position: absolute;\n    right: 1rem;\n    top: 1rem;\n`","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\nimport ImageModal from '../modal-images/modal-images.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    UploadButton,\n    NewImageContainer,\n    DeleteButton,\n    NewImagesContainer,\n    SubmitButton,\n    UploadImageButton\n} from './modal-product-image-gallery.styles'\n\nconst ProductImageGalleryModal = ({ close, setImage }) => {\n    const tabs = [\n        'upload',\n        'select'\n    ]\n    const [tab, setTab] = useState(tabs[0])\n    const [images, setImages] = useState([])\n    const [files, setFiles] = useState([])\n\n    const [isModalVisible, setIsModalVisible] = useState(false)\n\n    const [selectedImages, setSelectedImages] = useState([])\n    const [primaryImage, setPrimaryImage] = useState(null)\n\n    const handleFileInputChange = (e) => {\n        const files = e.target.files;\n        var filesArr = Array.prototype.slice.call(files);\n        const filesArrWithUrl = filesArr.map((file) => ({\n            file: file,\n            url: URL.createObjectURL(file)\n        }))\n        setFiles(prevValue => ([...prevValue, ...filesArrWithUrl]))\n    }\n\n    const selectImage = (img) => {\n        setSelectedImages(prevValue => ([...prevValue, img]))\n    }\n\n    const removeSelectedImage = img => {\n        const arr = selectedImages.filter(image => image._id !== img._id)\n        setSelectedImages(arr)\n    }\n\n    const selectPrimaryImage = img => {\n        setPrimaryImage(img)\n    }\n\n    const handleSubmit = (primaryImg, otherImages) => {\n\n        // console.log(primaryImg._id)\n\n\n        if (primaryImg) {\n            const arr = otherImages.map(img => img._id)\n            const filteredArr = otherImages.filter(img => img._id !== primaryImg._id)\n            setImage(primaryImg._id, filteredArr, primaryImg)\n            close()\n        } else {\n            // const arr = otherImages.map(img => img._id)\n            // console.log(arr)\n            const firstIndex = otherImages[0]\n            const filteredArr = otherImages.filter(img => img._id !== firstIndex._id)\n            setImage(firstIndex._id, filteredArr, firstIndex)\n            close()\n        }\n\n\n    }\n\n    const { response, isLoading, refetch } = useFetchByQuery('api/images/filter', {\n        sortBy: {\n            dateCreated: -1\n        },\n        limit: 10,\n        skip: 0\n    })\n    useEffect(() => {\n        if (isLoading) return\n        if (!response) return\n        setImages(response.images)\n    }, [isLoading])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            {isModalVisible && <ImageModal close={() => setIsModalVisible(false)} setImage={refetch} />}\n\n            <CloseButton onClick={close} />\n            <Modal>\n                <UploadImageButton onClick={() => setIsModalVisible(true)}>Pridať</UploadImageButton>\n\n                <h2>1. Vybrať obrázky</h2>\n\n                <NewImagesContainer>\n                    {images?.length > 0 && images.map((img) => (\n                        <NewImageContainer key={img._id}>\n                            {/* <DeleteButton >&#10005;</DeleteButton> */}\n                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\n                        </NewImageContainer>\n                    ))}\n                </NewImagesContainer>\n\n                {selectedImages.length > 0 && <h2>2. Zvolené obrázky</h2>}\n                {selectedImages.length > 0 && <p>Vybrať hlavný obrázok</p>}\n\n                <NewImagesContainer>\n                    {selectedImages.length > 0 && selectedImages.map((img) => (\n                        <NewImageContainer key={img._id} isPrimary={img._id === primaryImage?._id}>\n                            <DeleteButton onClick={() => removeSelectedImage(img)} >&#10005;</DeleteButton>\n                            <img onClick={() => selectPrimaryImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\n                        </NewImageContainer>\n                    ))}\n                </NewImagesContainer>\n\n                <SubmitButton onClick={() => handleSubmit(primaryImage, selectedImages)}>Dokončiť</SubmitButton>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default ProductImageGalleryModal\n\n                // <h2>1. Vybrať obrázky</h2>\n\n                // <UploadButton htmlFor='image'>\n                //     <input\n                //         id='image'\n                //         type='file'\n                //         name='image'\n                //         multiple\n                //         accept=\"image/png, image/jpeg\"\n                //         onChange={handleFileInputChange}\n                //     />\n                //     Vybrať\n                // </UploadButton>\n\n                // {files.length > 0 && (\n                //     <div>\n                //         <h2>2. Vybrat hlavný obrázok</h2>\n                //     </div>\n                // )}\n\n                // <NewImagesContainer>\n                //     {files.length > 0 && files.map(({ url }, idx) => (\n                //         <NewImageContainer key={idx}>\n                //             <DeleteButton >&#10005;</DeleteButton>\n                //             <img src={url} alt={`new image ${idx}`} />\n                //         </NewImageContainer>\n                //     ))}\n                // </NewImagesContainer>\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 65rem;\n    max-height: 60rem;\n\n    overflow-y: scroll;\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: var(--background-primary-color);\n    color: var(--primary-text-color);\n\n    position: relative;\n    z-index: 999999;\n\n    h2{ \n        margin-bottom: 2rem;\n        text-align: center;\n    }\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const SearchButton = styled(CustomButton)`\n    display: block;\n    margin-left: auto;\n    margin-top: 2rem;\n    background-color: var(--primary-color);\n`\n\n\nexport const TableContainer = styled.div`\n    margin: 5rem 0;\n    overflow-x: auto;\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const TableCol = styled.div`\n    min-width: inherit;\n    padding: 2rem;\n    text-align: center;\n    background-color: ${({ isHead }) => !isHead ? \"var(--container-background-color)\" : \"unset\"};\n    border-bottom: ${({ isHead }) => isHead ? \"1px solid var(--secondary-text-color)\" : \"unset\"};\n\n    img {\n        width: 5rem;\n    }\n\n`\n\nexport const ProductTableHead = styled.div`\n    width: 100%;\n\n    display: grid;\n    align-items: center;\n    grid-template-columns: 15rem 10rem 35rem 20rem 10rem 20rem;\n    font-weight: bolder;\n\n`\nexport const ProductTableRow = styled.div`\n    cursor: pointer;\n    display: grid;\n    align-content: center;\n    grid-template-columns: 15rem 10rem 35rem 20rem 10rem 20rem;\n    margin-bottom: 1rem;\n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    transition: all .3s ease-out;\n\n\n    &:hover {\n        ${TableCol} {\n            background-color: var(--primary-color);\n            font-weight: bolder;\n            color: var(--button-font-color);\n        }\n    }\n\n\n`","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport { formatAvailable } from '../../utils/orders.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SearchButton,\n    ProductTableHead,\n    ProductTableRow,\n    TableCol,\n    TableContainer\n} from './modal-get-product-data.styles'\n\nconst GetProductDataModal = ({ close, getSingleProduct, productObj, setProductObj }) => {\n    const [searchQuery, setSearchQuery] = useState(\"\")\n\n    const [productItems, setProductItems] = useState([])\n\n    const [query, setQuery] = useState({\n        limit: 10,\n        skip: 0,\n        filters: {\n            type: productObj.type\n        },\n        sortBy: {\n            date: -1\n        }\n    })\n    const { response, isLoading, refetch } = useFetchByQuery(\"api/admin/products/filter\", query)\n\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        setQuery({\n            ...query,\n            query: searchQuery\n        })\n        refetch()\n    }\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== \"\") {\n            if (e.key === 'Enter') {\n                setQuery({\n                    ...query,\n                    query: searchQuery,\n                })\n                refetch()\n            }\n        }\n    }\n\n    const handleClick = (id) => {\n        getSingleProduct(id, (data) => {\n            const { product } = data\n\n            if (product.type === 1 || product.type === 2 || product.type === 4) {\n                delete product['__v']\n                delete product['soldAmount']\n                delete product['ordered']\n                delete product['_id']\n                delete product['boughtTogether']\n                delete product['contactLenses']\n                delete product['date']\n\n                setProductObj({\n                    ...product,\n                    // id: product._id,\n                    ...(!product._id) && { _id: product._id },\n                    price: (product.price / 100).toFixed(2),\n                    eanCode: product.eanCode,\n                    image: product.image._id,\n                    specs: {\n                        ...product.specs,\n                        size: [...Array(4)].map((value, idx) => product.specs.size[idx] ? product.specs.size[idx] : 0)\n                    }\n                })\n            }\n            if (product.type === 3) {\n                delete product['__v']\n                delete product['soldAmount']\n                delete product['ordered']\n                delete product['_id']\n                delete product['boughtTogether']\n                delete product['specs']\n                delete product['date']\n\n                setProductObj({\n                    ...product,\n                    // id: product._id,\n                    ...(!product._id) && { _id: product._id },\n                    price: (product.price / 100).toFixed(2),\n                    // colorCode: product.colorCode ?? \"\",\n                    image: product.image._id,\n                    // specs: {\n                    //     ...product.specs,\n                    //     size: [...Array(4)].map((value, idx) => product.specs.size[idx] ? product.specs.size[idx] : 0)\n                    // }\n                })\n            }\n        })\n        close()\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n\n        setProductItems(response.products)\n    }, [isLoading])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>Vyhľadať produkt</h2>\n                <div>\n                    <CustomInput\n                        label='Názov produktu, eanCode alebo popis'\n                        value={searchQuery}\n                        handleChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n\n                <TableContainer>\n                    <ProductTableHead>\n                        <TableCol isHead>eanKód</TableCol>\n                        <TableCol isHead>Obrázok</TableCol>\n                        <TableCol isHead>Názov</TableCol>\n                        <TableCol isHead>Značka</TableCol>\n                        <TableCol isHead>Cena</TableCol>\n                        <TableCol isHead>Na sklade</TableCol>\n                    </ProductTableHead>\n                    {productItems.map((product, idx) => (\n                        <ProductTableRow key={idx} onClick={() => handleClick(product._id)}>\n                            <TableCol>{product.eanCode}</TableCol>\n                            <TableCol>\n                                {product?.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${product.image.imagePath}`} alt={product.image.alt} />}\n                            </TableCol>\n                            <TableCol>{product.name}</TableCol>\n                            <TableCol>{product.brand}</TableCol>\n                            <TableCol>{(product.price / 100).toFixed(2)}€</TableCol>\n                            <TableCol>{product.type === 6 ? 'Služba' : formatAvailable(product.available)}</TableCol>\n                        </ProductTableRow>\n                    ))}\n                </TableContainer>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default GetProductDataModal\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 65rem;\n    max-height: 60rem;\n\n    overflow-y: scroll;\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: var(--background-primary-color);\n    color: var(--primary-text-color);\n\n    position: relative;\n    z-index: 999999;\n\n    h2{ \n        margin-bottom: 2rem;\n        text-align: center;\n    }\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const SearchButton = styled(CustomButton)`\n    display: block;\n    margin-left: auto;\n    margin-top: 2rem;\n    background-color: var(--primary-color);\n`\n\n\nexport const TableContainer = styled.div`\n    margin: 5rem 0;\n    overflow-x: auto;\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const TableCol = styled.div`\n    min-width: inherit;\n    padding: 2rem;\n    text-align: center;\n    background-color: ${({ isHead }) => !isHead ? \"var(--container-background-color)\" : \"unset\"};\n    border-bottom: ${({ isHead }) => isHead ? \"1px solid var(--secondary-text-color)\" : \"unset\"};\n\n    img {\n        width: 5rem;\n    }\n\n`\n\nexport const ProductTableHead = styled.div`\n    width: 100%;\n\n    display: grid;\n    align-items: center;\n    grid-template-columns: 15rem 10rem 35rem 20rem 10rem 20rem;\n    font-weight: bolder;\n\n`\nexport const ProductTableRow = styled.div`\n    cursor: pointer;\n    display: grid;\n    align-content: center;\n    grid-template-columns: 15rem 10rem 35rem 20rem 10rem 20rem;\n    margin-bottom: 1rem;\n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    transition: all .3s ease-out;\n\n\n    &:hover {\n        ${TableCol} {\n            background-color: var(--primary-color);\n            font-weight: bolder;\n            color: var(--button-font-color);\n        }\n    }\n\n\n`","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport { formatAvailable } from '../../utils/orders.utils'\n\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SearchButton,\n    ProductTableHead,\n    ProductTableRow,\n    TableCol,\n    TableContainer\n} from './modal-get-lenses-data.styles'\n\nconst GetLensesDataModal = ({ close, getSingleLenses, productObj, setProductObj, fillProductData }) => {\n    const [searchQuery, setSearchQuery] = useState(\"\")\n\n    const [productItems, setProductItems] = useState([])\n\n    const [query, setQuery] = useState({\n        limit: 10,\n        skip: 0,\n    })\n\n    const { response, isLoading, refetch } = useFetchByQuery(\"api/admin/lenses/filter\", query)\n\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        setQuery({\n            ...query,\n            query: searchQuery\n        })\n        refetch()\n    }\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== \"\") {\n            if (e.key === 'Enter') {\n                setQuery({\n                    ...query,\n                    query: searchQuery\n                })\n                refetch()\n            }\n        }\n    }\n\n    const handleClick = (id) => {\n        getSingleLenses(id, (data) => {\n            const { lenses } = data\n\n            delete lenses['__v']\n            delete lenses['_id']\n            delete lenses['soldAmount']\n            delete lenses['dateCreated']\n\n            fillProductData({\n                ...lenses,\n                image: lenses.image._id,\n                lensType: lenses.type || \"číre\",\n                dioptric: lenses.dioptric || false,\n                type: 0,\n                price: (lenses.price / 100).toFixed(2),\n            })\n\n        })\n        close()\n\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n\n        setProductItems(response.lenses)\n    }, [isLoading])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>Vyhľadať šošovky</h2>\n                <div>\n                    <CustomInput\n                        label='Názov šošoviek, eanCode alebo popis'\n                        value={searchQuery}\n                        handleChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n\n                <TableContainer>\n                    <ProductTableHead>\n                        <TableCol isHead>eanKód</TableCol>\n                        <TableCol isHead>Názov</TableCol>\n                        <TableCol isHead>Dioptrie</TableCol>\n                        <TableCol isHead>Cylinder</TableCol>\n                        <TableCol isHead>Cena</TableCol>\n                    </ProductTableHead>\n                    {productItems.map((product, idx) => (\n                        <ProductTableRow key={idx} onClick={() => handleClick(product._id)}>\n                            <TableCol>{product.eanCode}</TableCol>\n                            <TableCol>{product.name}</TableCol>\n                            <TableCol>\n                                {product.dioptersRange && <p>{`od ${product.dioptersRange[0]} do ${product.dioptersRange[1]}`}</p>}\n                            </TableCol>\n                            <TableCol>\n                                {product.cylinderRange && <p>{`od ${product.cylinderRange[0]} do ${product.cylinderRange[1]}`}</p>}\n                            </TableCol>\n                            <TableCol>{(product.price / 100).toFixed(2)}€</TableCol>\n                        </ProductTableRow>\n                    ))}\n                </TableContainer>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default GetLensesDataModal\n","import styled from 'styled-components'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\nexport const BrandedCheckbox = styled(CustomCheckbox)`\n    margin-top: 2rem;\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const GlassesContainerForm = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n    padding-bottom: 10rem;\n`\n\nexport const GlassesContainer = styled.div`\n    position: relative;\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`\n\nexport const GlassesParameterContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n    margin-bottom: 3rem;\n\n    h4 {\n        margin-top: 2rem;\n    }\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: var(--input-background-color);\n    color: var(--input-color);\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`\n\nexport const CopyButton = styled.button`\n    cursor: pointer;\n    position: absolute;\n    right: 2rem;\n    top: 2rem;\n    color: var(--primary-color);\n`\n\nexport const DeleteButton = styled.button`\n    cursor: pointer;\n    display:none;\n    border-radius:50%;\n    position: absolute;\n    border: none;\n    background-color: var(--color-red);\n    color: #fff;\n    padding: .5rem .75rem;\n    font-size: 1rem;\n    right: .5rem;\n    top: .5rem;\n\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const NewImageContainer = styled.div`\n    position: relative;\n    min-width: 15rem;\n    width: 15rem;\n    height: 15rem;\n\n\n    border: ${({ isPrimary }) => isPrimary ? '1px solid var(--primary-color)' : 'unset'};\n    \n    img {\n        width: 100%;\n        height: 100%;\n        object-fit: contain;\n    }\n\n    &:hover ${DeleteButton} {\n        display: block\n    }\n`\n\nexport const NewImagesContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 3rem;\n    /* overflow-x: auto; */\n    padding-bottom: 2rem;\n    margin-bottom: 2rem;\n\n`","import React, { useState, useEffect } from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport { glassesColors, glassesMaterials, glassesShapes, brands } from '../../utils/warehouse.utils'\n\nimport { AiOutlineCopy } from 'react-icons/ai'\n\nimport {\n    ImageContainer,\n    ProductImage,\n    GlassesContainerForm,\n    GlassesContainer,\n    GlassesParameterContainer,\n    StockContainer,\n    CustomSelect,\n    BrandedCheckbox,\n    CopyButton,\n    UploadButton,\n    DeleteButton,\n    NewImageContainer,\n    NewImagesContainer\n} from './product-glasses-form.styles.jsx'\n\nconst ProductGlassesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    retailNames,\n    currentUser,\n    checkParameter,\n    handleAvailableChange,\n    handleGlassesParametersChange,\n    handleGlassesSpecsSizeChange,\n    handleSpecsChange,\n    glassesParameters,\n    setImageModal,\n    // isUpdating,\n    filters,\n    handleGetProductData,\n    productObj\n}) => {\n    const [isBranded, setIsBranded] = useState(true)\n\n    const [allBrands, setAllBrands] = useState([])\n\n    const handleIsBrandedClick = (isBrandedBool) => {\n        if (isBrandedBool) {\n            handleChange({\n                target: {\n                    name: \"brand\",\n                    value: \"Neznačkové\"\n                }\n            })\n            setIsBranded(false)\n        } else {\n            handleChange({\n                target: {\n                    name: \"brand\",\n                    value: \"\"\n                }\n            })\n\n            setIsBranded(true)\n\n        }\n    }\n\n    useEffect(() => {\n        if (product.brand === \"Neznačkové\") setIsBranded(false)\n    }, [isBranded])\n\n    useEffect(() => {\n        if (!filters?.brands) return\n        setAllBrands([ ...filters?.brands , ...brands])\n    }, [brands, filters?.brands])\n\n    return (\n        <GlassesContainerForm>\n            <GlassesContainer>\n                <CopyButton onClick={() => handleGetProductData(true)}><AiOutlineCopy /></CopyButton>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='eanCode'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov produktu*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Kód\"\n                    type='text'\n                    name='subname'\n                    value={product.subname ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <BrandedCheckbox\n                    label={\"Značkové\"}\n                    isActive={isBranded}\n                    handleClick={() => handleIsBrandedClick(isBranded)}\n                />\n\n                {isBranded && (\n                    <React.Fragment>\n                        <CustomInput\n                            label=\"Značka\"\n                            type='text'\n                            name='brand'\n                            value={product.brand ?? \"\"}\n                            handleChange={(e) => handleChange(e)}\n                            list=\"brands\"\n                        />\n                        <datalist id=\"brands\">\n                            {allBrands.map((brand, idx) => (\n                                <option key={idx} value={brand} />\n                            ))}\n                        </datalist>\n                    </React.Fragment>\n                )}\n\n                {/* <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"categories\"\n\n                /> */}\n\n                {/* <datalist id=\"categories\">\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist> */}\n\n                {/* <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                /> */}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n\n                <NewImagesContainer>\n                    {productObj?.bonusImages && productObj?.bonusImages.map((img, idx) => (\n                        <NewImageContainer key={idx}>\n                            {/* <DeleteButton >&#10005;</DeleteButton> */}\n                            <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\n                        </NewImageContainer>\n                    ))}\n                </NewImagesContainer>\n            </GlassesContainer>\n            <div>\n                <GlassesParameterContainer>\n                    <h3>Parametre</h3>\n                    <CustomInput\n                        label=\"Farebný kód\"\n                        type='text'\n                        name='colorCode'\n                        value={glassesParameters.colorCode ?? \"\"}\n                        handleChange={(e) => handleGlassesParametersChange(e)}\n                    />\n                    <div>\n                        <CustomInput\n                            label=\"Farba rámu\"\n                            type='text'\n                            name='frameColor'\n                            value={glassesParameters.specs.frameColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                            list=\"colors\"\n\n                        />\n                        <datalist id=\"colors\">\n                            {glassesColors.map((color, idx) => (\n                                <option key={idx} value={color} />\n                            ))}\n                        </datalist>\n                        <CustomInput\n                            label=\"Materiál rámu\"\n                            type='text'\n                            name='frameMaterial'\n                            value={glassesParameters.specs.frameMaterial ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                            list=\"materials\"\n\n                        />\n                        <datalist id=\"materials\">\n                            {glassesMaterials.map((material, idx) => (\n                                <option key={idx} value={material} />\n                            ))}\n                        </datalist>\n                        <CustomInput\n                            label=\"Tvar rámu\"\n                            type='text'\n                            name='frameStyle'\n                            value={glassesParameters.specs.frameStyle ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                            list=\"shapes\"\n                        />\n                        <datalist id=\"shapes\">\n                            {glassesShapes.map((shape, idx) => (\n                                <option key={idx} value={shape} />\n                            ))}\n                        </datalist>\n                        {/* <CustomInput\n                            label=\"Farba šošovky\"\n                            type='text'\n                            name='lensColor'\n                            value={glassesParameters.specs.lensColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        /> */}\n                        <CustomSelect\n                            label=\"Pohlavie\"\n                            type='text'\n                            name='sex'\n                            value={glassesParameters?.specs?.sex || \"\"}\n                            onChange={(e) => handleSpecsChange(e)}\n                        >\n                            <option value=''>-</option>\n                            <option value='M'>Pánske</option>\n                            <option value='W'>Dámske</option>\n                            <option value='CH'>Detské</option>\n                            <option value='U'>Nezáleží</option>\n                        </CustomSelect>\n                    </div>\n                    <div>\n                        <h4>Velkosť</h4>\n                        {glassesParameters.specs.size.map((value, idx) => (\n                            <CustomInput\n                                key={idx}\n                                label={idx === 0 ? \"Šírka očnice (mm)\" : idx === 1 ? \"Výška očnice (mm)\" : idx === 2 ? \"Veľkosť nosníka (mm)\" : \"Dĺžka stranice (mm)\"}\n                                type='text'\n                                name='size'\n                                value={checkParameter(glassesParameters.specs.size, idx)}\n                                handleChange={(e) => handleGlassesSpecsSizeChange(e, idx)}\n                            />\n                        ))}\n                    </div>\n                </GlassesParameterContainer>\n                {currentUser.admin >= 2 ? (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        {product.available.map((value, idx) => {\n                            if (idx === 0) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </StockContainer>\n                ) : (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        <CustomInput\n                            label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[currentUser.premises]}\n                            type='number'\n                            name={\"available\"}\n                            value={checkParameter(product.available, currentUser.premises)}\n                            handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                        />\n                    </StockContainer>\n                )}\n            </div>\n        </GlassesContainerForm>\n    )\n}\n\nexport default ProductGlassesForm\n","import styled from 'styled-components'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\n\nexport const LensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n    padding-bottom: 10rem;\n\n\n    @media all and (max-width: 1000px) {\n        grid-template-columns: 1fr;\n    }\n`\n\nexport const LensesContainer = styled.div`\n    position: relative;\n    /* width: 45rem; */\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n    /* display: inline-block; */\n    /* padding-bottom: 4rem;  */\n    margin-bottom: 5rem;\n`\n\nexport const LensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    h3 {\n        /* margin-bottom: 1rem; */\n    }\n\n    h4 {\n        margin-top: 2rem;\n    }\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\nexport const SubGridContainer = styled.div`\n\n`\n\nexport const TypesContainer = styled.div`\n    padding: 2rem;\n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    margin-bottom: 3rem;\n\n    h3 {\n        margin-bottom: 1rem;\n    }\n\n    h4 {\n        margin-top: 2rem;\n    }\n\n    div {\n        :not(:last-child) {\n            margin-bottom: 1rem;\n        }\n    }\n`\n\nexport const TypeCheckbox = styled(CustomCheckbox)`\n    &:not(:last-child) {\n        margin-right: 2rem;\n    }\n`\n\nexport const CopyButton = styled.button`\n    cursor: pointer;\n    position: absolute;\n    right: 2rem;\n    top: 2rem;\n    color: var(--primary-color);\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\n// import CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    formatfloatNumber\n} from '../../utils/warehouse.utils'\n\nimport { lensesTypes } from '../../context/warehouse/warehouse.utils'\n\nimport { AiOutlineCopy } from 'react-icons/ai'\n\nimport {\n    LensesFormContainer,\n    LensesContainer,\n    LensesParametersContainer,\n    ProductImage,\n    ImageContainer,\n    TypesContainer,\n    SubGridContainer,\n    TypeCheckbox,\n    CopyButton\n} from './product-lenses-form.styles'\n\nconst ProductLensesForm = ({\n    lenses,\n    selectedImage,\n    setImageModal,\n    handleChange,\n    handleParameterChange,\n    checkParameter,\n    filters,\n    handleGetProductData\n}) => {\n\n    const formatParameter = (e, idx) => {\n        const value = formatfloatNumber(e.target.value)\n        handleParameterChange({\n            target: {\n                value: Number(value).toFixed(2),\n                name: e.target.name\n            }\n        }, idx)\n    }\n\n    console.log(lenses)\n\n    return (\n        <LensesFormContainer>\n            <LensesContainer>\n                <CopyButton onClick={() => handleGetProductData(true)}><AiOutlineCopy /></CopyButton>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='eanCode'\n                    value={lenses?.eanCode?.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov šošoviek*\"\n                    type='text'\n                    name='name'\n                    value={lenses.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka*\"\n                    type='text'\n                    name='brand'\n                    value={lenses.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"brands\"\n                />\n\n                <datalist id=\"brands\">\n                    {filters?.brands && filters?.brands.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist>\n\n                {/* <CustomTextarea\n                    label=\"Popis*\"\n                    name='description'\n                    rows='5'\n                    value={lenses.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                /> */}\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={lenses.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </LensesContainer>\n            <SubGridContainer>\n                <TypesContainer>\n                    <h3>Druh</h3>\n\n                    <div>\n                        {lensesTypes.map((type, idx) => (\n                            <TypeCheckbox\n                                key={idx}\n                                label={type}\n                                value={type}\n                                name='lensType'\n                                isActive={type === lenses?.lensType}\n                                handleClick={() => handleChange({\n                                    target: {\n                                        name: \"lensType\",\n                                        value: type\n                                    }\n                                })}\n                            />\n                        ))}\n                    </div>\n\n                    {lenses.lensType === \"slnečné\" && (\n                        <div>\n                            <TypeCheckbox\n                                label=\"Polarizované\"\n                                value={lenses.photochromic}\n                                name='photochromic'\n                                isActive={lenses.photochromic}\n                                handleClick={() => handleChange({\n                                    target: {\n                                        name: \"photochromic\",\n                                        value: !lenses.photochromic\n                                    }\n                                })}\n                            />\n                        </div>\n                    )}\n\n                    <div>\n                        <TypeCheckbox\n                            label=\"Dioptrické\"\n                            value={lenses.dioptric}\n                            name='dioptric'\n                            isActive={lenses.dioptric}\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"dioptric\",\n                                    value: !lenses.dioptric\n                                }\n                            })}\n                        />\n                    </div>\n\n                    <CustomInput\n                        label=\"Farba šošovky\"\n                        type='text'\n                        name='color'\n                        value={lenses.color ?? \"\"}\n                        handleChange={(e) => handleChange(e)}\n                    />\n                </TypesContainer>\n                {lenses?.dioptric && <LensesParametersContainer>\n                    <h3>Parametre</h3>\n\n                    <h4>Dioptrie</h4>\n                    {[...Array(2)].map((value, idx) => {\n                        const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\n\n                        return (\n                            <div key={idx}>\n                                <CustomInput\n                                    label={inputLabel}\n                                    type='number'\n                                    name='dioptersRange'\n                                    value={checkParameter(lenses.dioptersRange, idx)}\n                                    handleChange={(e) => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameter(e, idx)}\n                                />\n                            </div>\n                        )\n                    })}\n\n                    <h4>Cylinder</h4>\n                    {[...Array(2)].map((value, idx) => {\n                        const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\n\n                        return (\n                            <div key={idx}>\n                                <CustomInput\n                                    label={inputLabel}\n                                    type='number'\n                                    name='cylinderRange'\n                                    value={checkParameter(lenses.cylinderRange, idx)}\n                                    handleChange={(e) => handleParameterChange(e, idx)}\n                                />\n                            </div>\n                        )\n                    })}\n                </LensesParametersContainer>}\n            </SubGridContainer>\n        </LensesFormContainer>\n    )\n}\n\nexport default ProductLensesForm\n","import styled from 'styled-components'\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const AccessoriesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n    padding-bottom: 10rem;\n\n`\n\nexport const AccessoriesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`\n\nexport const DeleteButton = styled.button`\n    cursor: pointer;\n    display:none;\n    border-radius:50%;\n    position: absolute;\n    border: none;\n    background-color: var(--color-red);\n    color: #fff;\n    padding: .5rem .75rem;\n    font-size: 1rem;\n    right: .5rem;\n    top: .5rem;\n\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const NewImageContainer = styled.div`\n    position: relative;\n    min-width: 15rem;\n    width: 15rem;\n    height: 15rem;\n\n\n    border: ${({ isPrimary }) => isPrimary ? '1px solid var(--primary-color)' : 'unset'};\n    \n    img {\n        width: 100%;\n        height: 100%;\n        object-fit: contain;\n    }\n\n    &:hover ${DeleteButton} {\n        display: block\n    }\n`\n\nexport const NewImagesContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 3rem;\n    /* overflow-x: auto; */\n    padding-bottom: 2rem;\n    margin-bottom: 2rem;\n\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    AccessoriesFormContainer,\n    AccessoriesContainer,\n    StockContainer,\n    ImageContainer,\n    ProductImage,\n    DeleteButton,\n    NewImageContainer,\n    NewImagesContainer,\n} from './product-accessories-form.styles'\n\nconst ProductAccessoriesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    setImageModal,\n    handleAvailableChange,\n    checkParameter,\n    retailNames,\n    currentUser,\n    isUpdating,\n    filters,\n    productObj\n}) => {\n    return (\n        <AccessoriesFormContainer>\n            <AccessoriesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='eanCode'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"brands\"\n                />\n\n                <datalist id=\"brands\">\n                    {filters?.brands && filters?.brands.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist>\n\n                {/* <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"categories\"\n\n                />\n\n                <datalist id=\"categories\">\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist> */}\n\n                {/* {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />} */}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n\n                <NewImagesContainer>\n                    {productObj?.bonusImages && productObj?.bonusImages.map((img) => (\n                        <NewImageContainer key={img._id}>\n                            {/* <DeleteButton >&#10005;</DeleteButton> */}\n                            <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\n                        </NewImageContainer>\n                    ))}\n                </NewImagesContainer>\n            </AccessoriesContainer>\n            {currentUser.admin >= 2 ? (\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    {product.available.map((value, idx) => {\n                        if (idx === 0) return\n                        return (\n                            <CustomInput\n                                key={idx}\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, idx)}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        )\n                    })}\n                </StockContainer>\n            ) : (\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    <CustomInput\n                        label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[currentUser.premises]}\n                        type='number'\n                        name={\"available\"}\n                        value={checkParameter(product.available, currentUser.premises)}\n                        handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                    />\n                </StockContainer>\n            )}\n        </AccessoriesFormContainer>\n    )\n}\n\nexport default ProductAccessoriesForm\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const ContactLensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n    padding-bottom: 10rem;\n\n`\n\nexport const ContactLensesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n    position: relative;\n\n`\n\nexport const ContactLensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n    margin-bottom: 3rem;\n\n    h4 {\n        margin-top: 1rem;\n    }\n`\n\nexport const IncreaseButton = styled(CustomButton)`\n    margin-top: 2rem;\n    font-size: 1.4rem;\n\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`\n\nexport const CopyButton = styled.button`\n    cursor: pointer;\n    position: absolute;\n    right: 2rem;\n    top: 2rem;\n    color: var(--primary-color);\n`\n\nexport const DeleteButton = styled.button`\n    cursor: pointer;\n    display:none;\n    border-radius:50%;\n    position: absolute;\n    border: none;\n    background-color: var(--color-red);\n    color: #fff;\n    padding: .5rem .75rem;\n    font-size: 1rem;\n    right: .5rem;\n    top: .5rem;\n\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const NewImageContainer = styled.div`\n    position: relative;\n    min-width: 15rem;\n    width: 15rem;\n    height: 15rem;\n\n\n    border: ${({ isPrimary }) => isPrimary ? '1px solid var(--primary-color)' : 'unset'};\n    \n    img {\n        width: 100%;\n        height: 100%;\n        object-fit: contain;\n    }\n\n    &:hover ${DeleteButton} {\n        display: block\n    }\n`\n\nexport const NewImagesContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 3rem;\n    /* overflow-x: auto; */\n    padding-bottom: 2rem;\n    margin-bottom: 2rem;\n\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\n// import { lensesBrands } from '../../utils/warehouse.utils'\nimport {\n    AiOutlineCopy\n} from 'react-icons/ai'\n\nimport {\n    ContactLensesContainer,\n    ContactLensesFormContainer,\n    StockContainer,\n    ContactLensesParametersContainer,\n    IncreaseButton,\n    ImageContainer,\n    ProductImage,\n    CopyButton,\n    DeleteButton,\n    NewImageContainer,\n    NewImagesContainer\n} from './product-contact-lenses-form.styles'\n\nconst ProductContactLensesForm = ({\n    product,\n    handleChange,\n    setImageModal,\n    selectedImage,\n    checkParameter,\n    handleContactLensesChange,\n    handleAddNewParameter,\n    contactLensesParameters,\n    retailNames,\n    currentUser,\n    handleAvailableChange,\n    isUpdating,\n    filters,\n    productObj,\n    handleGetProductData\n}) => {\n    return (\n        <ContactLensesFormContainer>\n            <ContactLensesContainer>\n                <CopyButton onClick={() => handleGetProductData(true)}><AiOutlineCopy /></CopyButton>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='eanCode'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"brands\"\n                />\n                <datalist id=\"brands\">\n                    {filters?.brands && filters?.brands.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist>\n                {/* \n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"categories\"\n                />\n\n                <datalist id=\"categories\">\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist> */}\n\n                {/* {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />} */}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n\n                <NewImagesContainer>\n                    {productObj?.bonusImages && productObj?.bonusImages.map((img) => (\n                        <NewImageContainer key={img._id}>\n                            {/* <DeleteButton >&#10005;</DeleteButton> */}\n                            <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\n                        </NewImageContainer>\n                    ))}\n                </NewImagesContainer>\n            </ContactLensesContainer>\n            <div>\n                <ContactLensesParametersContainer>\n                    <h3>Parametre</h3>\n                    <div>\n                        <h4>Zakrivenie</h4>\n                        {contactLensesParameters.allowedCurves.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedCurves\"}\n                                    value={checkParameter(contactLensesParameters.allowedCurves, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedCurves'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n                    <div>\n                        <h4>Priemery</h4>\n                        {contactLensesParameters.allowedDiameters.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedDiameters\"}\n                                    value={checkParameter(contactLensesParameters.allowedDiameters, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedDiameters'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n\n                    <div>\n                        <h4>Dioptrie</h4>\n                        {contactLensesParameters.dioptersRange.map((value, idx) => {\n                            const inputLabel = idx === 0 ? \"minimum\" : \"maximum\"\n\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={inputLabel}\n                                    type='text'\n                                    name={\"dioptersRange\"}\n                                    value={checkParameter(contactLensesParameters.dioptersRange, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </div>\n                </ContactLensesParametersContainer>\n\n                {currentUser.admin >= 2 ? (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        {product.available.map((value, idx) => {\n                            if (idx === 0) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </StockContainer>\n                ) : (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        <CustomInput\n                            label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[currentUser.premises]}\n                            type='number'\n                            name={\"available\"}\n                            value={checkParameter(product.available, currentUser.premises)}\n                            handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                        />\n                    </StockContainer>\n                )}\n            </div>\n        </ContactLensesFormContainer>\n    )\n}\n\nexport default ProductContactLensesForm\n","import styled from 'styled-components'\n\nexport const ServiceFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n    padding-bottom: 10rem;\n\n`\n\nexport const ServiceContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\n\nimport {\n    ServiceFormContainer,\n    ServiceContainer,\n    ImageContainer,\n    ProductImage\n} from './product-service-form.styles'\n\nconst ProductServiceForm = ({\n    product,\n    // isUpdating,\n    handleChange,\n    selectedImage,\n    setImageModal,\n}) => {\n    return (\n        <ServiceFormContainer>\n            <ServiceContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='eanCode'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Názov služby*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                {/* <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer> */}\n            </ServiceContainer>\n        </ServiceFormContainer>\n    )\n}\n\nexport default ProductServiceForm\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\nimport CustomButton from '../../components/custom-button/custom-button.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n\nexport const Header = styled.div`\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n    color: var(--primary-text-color);\n\n`\n\nexport const SubmitButton = styled(CustomButton)`\n\n`\n\nexport const IsPublicCheckbox = styled(CustomCheckbox)`\n    margin-right: 2rem;\n`\n\n\nexport const CategoryContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n    display: inline-block;\n    margin-bottom: 3rem;\n\n    h3 {\n        margin-bottom: 1.5rem;\n    }\n`\nexport const CategoryCheckbox = styled(CustomCheckbox)`\n    &:not(:last-child) {\n        margin-right: 2rem;\n    }\n`","import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ModalImage from '../../components/modal-product-image-gallery/modal-product-image-gallery.component'\nimport OldModalImage from '../../components/modal-images/modal-images.component'\nimport GetProductDataModal from '../../components/modal-get-product-data/modal-get-product-data.component'\nimport GetLensesDataModal from '../../components/modal-get-lenses-data/modal-get-lenses-data.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\nimport ProductAccessoriesForm from '../../components/product-accessories-form/product-accessories-form.component'\nimport ProductContactLensesForm from '../../components/product-contact-lenses-form/product-contact-lenses-form.component'\nimport ProductServiceForm from '../../components/product-service-form/product-service-form.component'\n\nimport { productCategories, checkParameter, formatLink } from '../../context/warehouse/warehouse.utils'\nimport { retailNames } from '../../utils/warehouse.utils'\nimport { useFetch } from '../../hooks/useFetch'\n\nimport {\n    FixedContainer\n} from '../../global.styles'\n\nimport {\n    Header,\n    CategoryContainer,\n    CategoryCheckbox,\n    SubmitButton,\n    IsPublicCheckbox,\n\n} from './product.styles'\n\nconst ProductSection = () => {\n    const { id } = useParams()\n    const { currentUser } = useContext(AuthContext)\n    const { closeModal, message, isLoading, showModal, getMessage, setShowModal } = useContext(LoadingModalContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [showImageModal, setImageModal] = useState(false)\n    const [showOldImageModal, setOldImageModal] = useState(false)\n    const [isGetProductDataModalVisible, setIsGetProductDataModalVisible] = useState(false)\n    const [isGetLensesDataModalVisible, setIsGetLensesDataModalVisible] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const {\n        eanCode,\n        product,\n        lenses,\n        contactLensesParameters,\n        glassesParameters,\n        handleLensesChange,\n        handleLensesParameterChange,\n        createProduct,\n        updateProduct,\n        resetProduct,\n        resetLenses,\n        resetContactLenses,\n        resetGlassesParameters,\n        createLenses,\n        updateLenses,\n        handleProductChange,\n        handleProductAvailableChange,\n        getEanCode,\n        handleAddNewParameter,\n        handleContactLensesParameterChange,\n        handleGlassesParameterChange,\n        handleGlassesParameterSpecsChange,\n        handleGlassesSizeChange,\n        getSingleProduct,\n        getSingleLenses\n    } = useContext(WarehouseContext)\n\n    const [hasChanged, setHasChanged] = useState(false)\n    const [productObj, setProductObj] = useState({})\n\n\n    const { response, isLoading: isLoadingFilters, refetch } = useFetch(`api/store/products/${productObj?.type}/filters`, !productObj?.type, \"GET\")\n    const [filters, setFilters] = useState(null)\n\n    const handleGetProductData = (boolean) => {\n        setIsGetProductDataModalVisible(boolean)\n    }\n\n    const handleGetLensesData = (boolean) => {\n        setIsGetLensesDataModalVisible(boolean)\n    }\n\n    const handleChangeType = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (!isUpdating) {\n            if (productObj.type === 0) {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetLenses()\n                        setSelectedImage('')\n                    } else {\n                        return\n                    }\n                }\n            } else {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetProduct()\n                        resetContactLenses()\n                        resetGlassesParameters()\n                        setSelectedImage('')\n                    } else {\n                        return\n                    }\n                }\n            }\n        }\n        setProductObj({\n            [name]: value\n        })\n\n    }\n    // console.count(\"PRODUCT OBJ\")\n    // console.log(productObj)\n    // console.count(\"PRODUCT OBJ\")\n\n    const handleChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (productObj.type === 0) {\n            handleLensesChange(e)\n        }\n\n        if (productObj.type === 6) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 5) {\n            handleProductChange(e)\n        }\n\n        if (productObj.type === 4) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 3) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 2) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 1) {\n            handleProductChange(e)\n        }\n\n\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        if (isUpdating) {\n            if (name === 'name') {\n                setProductObj({\n                    ...productObj,\n                    [name]: value,\n                    link: formatLink(value)\n                })\n                return\n            }\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParametersChange = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterChange(e)\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleSpecsChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterSpecsChange(e)\n\n        if (value === '') {\n            delete productObj.specs[name]\n\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSpecsSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleGlassesSizeChange(e, idx)\n\n        if (value === '') {\n            if (productObj.specs[name].length > 1) {\n                arr[idx] = 1001\n\n                const firstIndex = arr[0]\n                const canDeleteSpecs = arr.map(value => {\n                    if (firstIndex !== value) {\n                        return false\n                    } else {\n                        return true\n                    }\n                })\n\n                const verdict = canDeleteSpecs.find(value => value === false)\n\n                if (verdict === false) {\n                    setProductObj({\n                        ...productObj,\n                        specs: {\n                            ...productObj.specs,\n                            [name]: arr\n                        }\n                    })\n                } else {\n                    delete productObj.specs[name]\n                }\n\n            }\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleProductAvailableChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleContactLensesChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleContactLensesParameterChange(e, idx)\n\n        if (value === '') {\n            if (productObj.contactLenses[name].length > 1) {\n                arr.splice(idx, 1)\n                setProductObj({\n                    ...productObj,\n                    contactLenses: {\n                        ...productObj.contactLenses,\n                        [name]: arr\n                    }\n                })\n            } else {\n                delete productObj.contactLenses[name]\n            }\n            if (Object.keys(productObj.contactLenses).length === 0) {\n                delete productObj[\"contactLenses\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            contactLenses: {\n                ...productObj.contactLenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleLensesParameterChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleSelectImage = (imgId = '', bonusImages, img) => {\n        setHasChanged(true)\n        setSelectedImage(img)\n        setProductObj({\n            ...productObj,\n            image: imgId,\n            ...(bonusImages) && { bonusImages }\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        let newProductObj = {\n            ...productObj,\n            ...(productObj.type === 0) && { lensType: lenses.lensType },\n            ...(productObj.type === 0) && { dioptric: lenses.dioptric }\n        }\n\n        // console.log(\"PRODUCT OBJECT\")\n        // console.log(lensObj)\n        // console.log(productObj)\n\n\n\n        if (currentUser.admin < 2) {\n            if (newProductObj.available) {\n                newProductObj = {\n                    ...productObj,\n                    available: productObj.available[currentUser.premises]\n                }\n            }\n        } else {\n            if (newProductObj.available) {\n                newProductObj = {\n                    ...productObj,\n                    available: newProductObj.available ? newProductObj.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0, 0]\n                }\n            }\n        }\n\n        if (isUpdating) {\n            if (newProductObj.type === 0) {\n                setHasChanged(false)\n                delete newProductObj['link']\n                delete newProductObj['type']\n                const updatedObj = {\n                    ...newProductObj,\n                    // type: newProductObj.lensType,\n                    eanCode: lenses.eanCode\n                }\n                // delete updatedObj['lensType']\n                updateLenses(updatedObj, id)\n                return\n            } else if (newProductObj.type === 3) {\n                setHasChanged(false)\n                delete newProductObj['type']\n                updateProduct({ ...newProductObj, contactLenses: {} })\n                return\n            } else {\n                setHasChanged(false)\n                delete newProductObj['type']\n\n                const obj = {\n                    ...newProductObj,\n                    ...(newProductObj.bonusImages) && { bonusImages: newProductObj.bonusImages.map(img => img._id) }\n                }\n\n                updateProduct(obj)\n                return\n            }\n        } else {\n            if (productObj.type === 0) {\n                setHasChanged(false)\n                delete newProductObj['type']\n                // const updatedObg = {\n                //     ...newProductObj,\n                //     type: newProductObj.lensType\n                // }\n                // delete updatedObg['lensType']\n\n                createLenses(newProductObj)\n            }\n            if (newProductObj.type === 6 || newProductObj.type === 5 || newProductObj.type === 4 || newProductObj.type === 3 || newProductObj.type === 2 || newProductObj.type === 1) {\n                if (!newProductObj.name || !newProductObj.price) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    delete newProductObj['_id']\n\n                    const obj = {\n                        ...newProductObj,\n                        ...(newProductObj.bonusImages) && { bonusImages: newProductObj.bonusImages.map(img => img._id) }\n                    }\n\n\n                    createProduct(obj)\n                }\n            }\n        }\n\n\n    }\n\n    const [lensObj, setLensObj] = useState(null)\n\n    const fillProductData = (productData) => {\n\n        setLensObj({\n            ...productObj,\n            ...productData\n        })\n\n        setProductObj({\n            ...productObj,\n            ...productData\n        })\n    }\n\n    useEffect(() => {\n        if (!productObj?.type) return\n        setFilters(null)\n        refetch()\n    }, [productObj?.type])\n\n    useEffect(() => {\n        if (productObj.type === 0) {\n            if (productObj.lensType) return\n            handleChange({\n                target: {\n                    name: \"lensType\",\n                    value: lenses?.lensType\n                }\n            })\n        }\n    }, [lenses.lensType])\n\n    useEffect(() => {\n        if (isLoadingFilters) return\n        if (response?.filters) {\n            setFilters(response?.filters)\n        }\n    }, [isLoadingFilters])\n\n    useEffect(() => {\n        if (id === \"novy-produkt\") {\n            if (!eanCode) {\n                getEanCode()\n            } else {\n                if (productObj.type !== undefined && !productObj.eanCode) {\n                    handleChange({\n                        target: {\n                            name: \"eanCode\",\n                            value: eanCode\n                        }\n                    })\n                }\n            }\n        }\n    }, [id, eanCode, productObj.type, productObj.eanCode, product.type])\n\n    useEffect(() => {\n        if (id !== 'novy-produkt') {\n            getSingleProduct(id, (data) => {\n                handleSelectImage(data?.product?.image?._id, data.product.bonusImages, data.product.image)\n                setProductObj(prevValue => ({\n                    ...prevValue,\n                    type: data.product.type,\n                }))\n            })\n            setIsUpdating(true)\n            if (!productObj.type) {\n                handleChangeType({\n                    target: {\n                        name: \"type\",\n                        value: product.type\n                    }\n                })\n\n            }\n        }\n    }, [id,])\n\n    useEffect(() => {\n        // if (product.image) {\n        //     setSelectedImage(product.image)\n        // }\n        if (lenses.image) {\n            setSelectedImage(lenses.image)\n        }\n    }, [lenses.image])\n\n    useEffect(() => {\n        return () => {\n            resetProduct()\n            resetLenses()\n            resetContactLenses()\n            resetGlassesParameters()\n            setProductObj({})\n            setSelectedImage(null)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <section>\n            <Prompt\n                when={hasChanged}\n                message=\"Chcete opustiť formulár?\"\n            />\n\n            {isGetLensesDataModalVisible && <GetLensesDataModal close={() => handleGetLensesData(false)} getSingleProduct={getSingleProduct} productObj={productObj} setProductObj={setProductObj} getSingleLenses={getSingleLenses} fillProductData={fillProductData} />}\n            {isGetProductDataModalVisible && <GetProductDataModal close={() => setIsGetProductDataModalVisible(false)} getSingleProduct={getSingleProduct} productObj={productObj} setProductObj={setProductObj} />}\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={handleSelectImage} />}\n            {showOldImageModal && <OldModalImage close={() => setOldImageModal(false)} setImage={handleSelectImage} />}\n            <Header>\n                <FixedContainer>\n\n                    <div>\n                        <h1>{isUpdating ? \"Upraviť produkt\" : \"Nový produkt\"}</h1>\n                    </div>\n                    <div>\n                        <IsPublicCheckbox\n                            label=\"Verejné\"\n                            // value={product.ehop}\n                            name='eshop'\n                            isActive={product.eshop}\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"eshop\",\n                                    value: !product.eshop\n                                }\n                            })}\n                        />\n                        <SubmitButton onClick={handleSubmit}>{isUpdating ? \"Upraviť\" : \"Vytvoriť\"}</SubmitButton>\n                    </div>\n                </FixedContainer>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating && <CategoryContainer>\n                    <h3>Aký produkt chcete pridať?</h3>\n                    {productCategories.map((category, idx) => (\n                        <CategoryCheckbox\n                            key={idx}\n                            label={category.name}\n                            value={category.value}\n                            name='type'\n                            isActive={category.value === productObj.type}\n                            handleClick={() => handleChangeType({\n                                target: {\n                                    name: \"type\",\n                                    value: category.value\n                                }\n                            })}\n                        />\n                    ))}\n                </CategoryContainer>}\n\n                {productObj.type === 0 && (\n                    <ProductLensesForm\n                        lenses={lenses}\n                        selectedImage={selectedImage}\n                        setImageModal={setOldImageModal}\n                        handleChange={handleChange}\n                        handleParameterChange={handleParameterChange}\n                        checkParameter={checkParameter}\n                        filters={filters}\n                        handleGetProductData={handleGetLensesData}\n                    />\n                )}\n\n                {productObj.type === 6 && (\n                    <ProductServiceForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        handleChange={handleChange}\n                        selectedImage={selectedImage}\n                        setImageModal={setImageModal}\n                        filters={filters}\n                    />\n                )}\n\n                {productObj.type === 5 && (\n                    <ProductAccessoriesForm\n                        product={product}\n                        productObj={productObj}\n                        isUpdating={isUpdating}\n                        currentUser={currentUser}\n                        retailNames={retailNames}\n                        selectedImage={selectedImage}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        filters={filters}\n                    />\n                )}\n\n                {productObj.type === 3 && (\n                    <ProductContactLensesForm\n                        product={product}\n                        productObj={productObj}\n\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        contactLensesParameters={contactLensesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAddNewParameter={handleAddNewParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        handleContactLensesChange={handleContactLensesChange}\n                        filters={filters}\n                        handleGetProductData={handleGetProductData}\n                    />\n                )}\n\n                {(productObj.type === 1 || productObj.type === 2 || productObj.type === 4) && (\n                    <ProductGlassesForm\n                        product={product}\n                        productObj={productObj}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        glassesParameters={glassesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleSpecsChange={handleSpecsChange}\n                        handleAvailableChange={handleAvailableChange}\n                        handleGlassesSpecsSizeChange={handleGlassesSpecsSizeChange}\n                        handleGlassesParametersChange={handleGlassesParametersChange}\n                        filters={filters}\n                        handleGetProductData={handleGetProductData}\n                    />\n                )}\n\n            </ScrollContainer>\n\n        </section >\n    )\n}\n\nexport default ProductSection\n","import { useEffect, useState } from 'react'\n\nexport const useFetch = (path, skip = false, method = \"GET\") => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [message, setMessage] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const requestOptions = {\n        method: method,\n        // headers: myHeaders,\n        // body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setMessage(data.message)\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n                setMessage(\"Niečo sa pokazilo\")\n            }\n        }\n        fetchData()\n    }, [refetchIndex])\n\n    return { response, isLoading, error, message, refetch }\n}\n\nexport const useFetchByQuery = (path, queryObj, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify(queryObj)\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path])\n\n    return { response, isLoading, error, refetch }\n}\n\nexport const useFetchById = (path, id, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}/${id}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path, id])\n\n    return { response, isLoading, error, refetch }\n}\n","\nexport const isAvailable = (available) => {\n    if (!available) return false\n    if (typeof available === \"number\") {\n        return available > 0 ? true : false\n    } else {\n        return available.reduce((acc, currValue) => acc + currValue) > 0 ? true : false\n    }\n\n}\n\nexport const formatAvailable = (available) => {\n    if (!available) return \"Nedostupné\"\n    if (typeof available === \"number\") {\n        return available > 0 ? `${available}ks` : \"Nedostupné\"\n    } else {\n        const totalCount = available.reduce((acc, currValue) => acc + currValue)\n        return totalCount > 0 ? `${totalCount}ks` : \"Nedostupné\"\n    }\n}\n\nexport const translatePaymentMethod = value => {\n    if (value === 'cash') return \"Hotovosť\"\n    if (value === 'card') return \"Karta\"\n    if (value === 'coupon') return \"Kupón\"\n    return value\n}\n\nexport const translateStatus = status => {\n    if (status === 'finished') return \"Dokončené\"\n    if (status === 'fulfilled') return \"Vybavené\"\n    if (status === 'pending') return \"Čaká na vybavenie\"\n    if (status === 'paid') return \"Zaplatené\"\n    if (status === 'half-paid') return \"Zálohované\"\n    if (status === 'cancelled') return \"Zrušené\"\n}\n"],"sourceRoot":""}
{"version":3,"sources":["context/examination/examination.context.jsx"],"names":["ExaminationContext","createContext","createExamination","updateExamination","deleteExamination","ExaminationProvider","children","token","useContext","AuthContext","LoadingModalContext","closeModal","getMessage","setIsLoading","setShowModal","myHeaders","Headers","append","examsToAdd","a","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","process","response","json","data","console","log","exam","message","examToUpdate","examId","Provider","value"],"mappings":"0NAIaA,EAAqBC,wBAAc,CAC5CC,kBAAmB,aACnBC,kBAAmB,aACnBC,kBAAmB,eA8HRC,UA3Ha,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnBC,EAAUC,qBAAWC,KAArBF,MADkC,EAOtCC,qBAAWE,KAJXC,EAHsC,EAGtCA,WACAC,EAJsC,EAItCA,WACAC,EALsC,EAKtCA,aACAC,EANsC,EAMtCA,aAGEC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAcV,GAC/BQ,EAAUE,OAAO,eAAgB,oBAEjC,IAAMf,EAAiB,uCAAG,WAAOgB,GAAP,qBAAAC,EAAA,6DACtBN,GAAa,GACbC,GAAa,GAEPM,EAAMC,KAAKC,UAAUJ,GAErBK,EAAiB,CACnBC,OAAQ,OACRC,QAASV,EACTW,KAAMN,EACNO,SAAU,UAVQ,kBAcKC,MAAM,GAAD,OAAIC,6BAAJ,qBAA+DN,GAdzE,cAcZO,EAdY,iBAeCA,EAASC,OAfV,WAeZC,EAfY,OAiBlBC,QAAQC,IAAIF,IAERA,EAAKG,KAnBS,wBAoBdxB,IApBc,2BAwBlBC,EAAWoB,EAAKI,SAChBvB,GAAa,GAzBK,kDA2BlBoB,QAAQC,IAAR,MACAtB,EAAW,qBACXC,GAAa,GA7BK,0DAAH,sDAiCjBV,EAAiB,uCAAG,WAAOkC,EAAcC,GAArB,qBAAAnB,EAAA,6DACtBN,GAAa,GACbC,GAAa,GAEPM,EAAMC,KAAKC,UAAUe,GAErBd,EAAiB,CACnBC,OAAQ,QACRC,QAASV,EACTW,KAAMN,EACNO,SAAU,UAVQ,kBAcKC,MAAM,GAAD,OAAIC,6BAAJ,4BAA8DS,GAAUf,GAdlF,cAcZO,EAdY,iBAeCA,EAASC,OAfV,WAeZC,EAfY,OAiBlBC,QAAQC,IAAIF,IAERA,EAAKG,KAnBS,wBAoBdxB,IApBc,2BAwBlBC,EAAWoB,EAAKI,SAChBvB,GAAa,GAzBK,kDA4BlBoB,QAAQC,IAAR,MACAtB,EAAW,qBACXC,GAAa,GA9BK,0DAAH,wDAkCjBT,EAAiB,uCAAG,WAAOkC,GAAP,mBAAAnB,EAAA,6DACtBN,GAAa,GACbC,GAAa,GAEPS,EAAiB,CACnBC,OAAQ,SACRC,QAASV,EACTY,SAAU,UAPQ,kBAWKC,MAAM,GAAD,OAAIC,6BAAJ,4BAA8DS,GAAUf,GAXlF,cAWZO,EAXY,gBAYCA,EAASC,OAZV,UAYZC,EAZY,OAclBC,QAAQC,IAAIF,IAERA,EAAKG,KAhBS,wBAiBdxB,IAjBc,2BAqBlBC,EAAWoB,EAAKI,SAChBvB,GAAa,GAtBK,kDAwBlBoB,QAAQC,IAAR,MACAtB,EAAW,qBACXC,GAAa,GA1BK,0DAAH,sDA8BvB,OACI,cAACb,EAAmBuC,SAApB,CACIC,MAAO,CACHtC,oBACAC,oBACAC,qBAJR,SAOKE","file":"static/js/27.8676eca0.chunk.js","sourcesContent":["import React, { createContext, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\n\nexport const ExaminationContext = createContext({\n    createExamination: () => { },\n    updateExamination: () => { },\n    deleteExamination: () => { },\n})\n\nconst ExaminationProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const createExamination = async (examsToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(examsToAdd)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/exams/`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.exam) {\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateExamination = async (examToUpdate, examId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(examToUpdate)\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/exams/${examId}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.exam) {\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteExamination = async (examId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/exams/${examId}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.exam) {\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <ExaminationContext.Provider\n            value={{\n                createExamination,\n                updateExamination,\n                deleteExamination\n            }}\n        >\n            {children}\n        </ExaminationContext.Provider>\n    )\n}\n\nexport default ExaminationProvider"],"sourceRoot":""}
{"version":3,"sources":["components/modal-product-image-gallery/modal-product-image-gallery.styles.jsx","components/modal-product-image-gallery/modal-product-image-gallery.component.jsx","components/modal-get-product-data/modal-get-product-data.styles.jsx","components/modal-get-product-data/modal-get-product-data.component.jsx","components/modal-get-lenses-data/modal-get-lenses-data.styles.jsx","components/modal-get-lenses-data/modal-get-lenses-data.component.jsx","components/product-glasses-form/product-glasses-form.styles.jsx","components/product-glasses-form/product-glasses-form.component.jsx","components/product-lenses-form/product-lenses-form.styles.jsx","components/product-lenses-form/product-lenses-form.component.jsx","components/product-accessories-form/product-accessories-form.styles.jsx","components/product-accessories-form/product-accessories-form.component.jsx","components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx","components/product-contact-lenses-form/product-contact-lenses-form.component.jsx","components/product-service-form/product-service-form.styles.jsx","components/product-service-form/product-service-form.component.jsx","sections/product/product.styles.jsx","sections/product/product.section.jsx","hooks/useFetch.jsx","utils/orders.utils.jsx"],"names":["ModalContainer","styled","div","Modal","CloseButton","button","DeleteButton","label","NewImageContainer","isPrimary","console","log","NewImagesContainer","SubmitButton","CustomButton","UploadImageButton","ProductImageGalleryModal","close","setImage","useState","images","setImages","isModalVisible","setIsModalVisible","selectedImages","setSelectedImages","primaryImage","setPrimaryImage","useFetchByQuery","sortBy","dateCreated","limit","skip","response","isLoading","refetch","useEffect","ReactDOM","createPortal","onClick","length","map","img","prevValue","selectImage","src","process","imagePath","alt","_id","arr","filter","image","removeSelectedImage","selectPrimaryImage","primaryImg","otherImages","filteredArr","firstIndex","handleSubmit","document","getElementById","SearchButton","TableContainer","TableCol","isHead","ProductTableHead","ProductTableRow","GetProductDataModal","getSingleProduct","productObj","setProductObj","searchQuery","setSearchQuery","productItems","setProductItems","filters","type","query","setQuery","products","value","handleChange","e","target","onKeyPress","key","product","idx","id","data","price","toFixed","eanCode","specs","size","Array","name","brand","formatAvailable","available","GetLensesDataModal","getSingleLenses","fillProductData","lenses","lensType","dioptric","dioptersRange","cylinderRange","BrandedCheckbox","CustomCheckbox","ImageContainer","ProductImage","hasImage","GlassesContainerForm","GlassesContainer","GlassesParameterContainer","StockContainer","CustomSelect","select","CopyButton","ProductGlassesForm","selectedImage","retailNames","currentUser","checkParameter","handleAvailableChange","handleGlassesParametersChange","handleGlassesSpecsSizeChange","handleSpecsChange","glassesParameters","setImageModal","isUpdating","handleGetProductData","isBranded","setIsBranded","toString","isActive","handleClick","Fragment","list","brands","rows","description","required","bonusImages","colorCode","frameColor","glassesColors","color","frameMaterial","glassesMaterials","material","frameStyle","glassesShapes","shape","sex","onChange","admin","premises","LensesFormContainer","LensesContainer","LensesParametersContainer","SubGridContainer","TypesContainer","TypeCheckbox","ProductLensesForm","handleParameterChange","lensesTypes","photochromic","inputLabel","AccessoriesFormContainer","AccessoriesContainer","ProductAccessoriesForm","ContactLensesFormContainer","ContactLensesContainer","ContactLensesParametersContainer","IncreaseButton","ProductContactLensesForm","handleContactLensesChange","handleAddNewParameter","contactLensesParameters","allowedCurves","allowedDiameters","ServiceFormContainer","ServiceContainer","ProductServiceForm","Header","paddingStyles","IsPublicCheckbox","CategoryContainer","CategoryCheckbox","ProductSection","useParams","useContext","AuthContext","LoadingModalContext","closeModal","message","showModal","getMessage","setShowModal","ImageContext","setSelectedImage","showImageModal","showOldImageModal","setOldImageModal","isGetProductDataModalVisible","setIsGetProductDataModalVisible","isGetLensesDataModalVisible","setIsGetLensesDataModalVisible","setIsUpdating","WarehouseContext","handleLensesChange","handleLensesParameterChange","createProduct","updateProduct","resetProduct","resetLenses","resetContactLenses","resetGlassesParameters","createLenses","updateLenses","handleProductChange","handleProductAvailableChange","getEanCode","handleContactLensesParameterChange","handleGlassesParameterChange","handleGlassesParameterSpecsChange","handleGlassesSizeChange","hasChanged","setHasChanged","useFetch","isLoadingFilters","setFilters","boolean","handleGetLensesData","handleChangeType","Object","keys","window","confirm","formatLink","Number","handleSelectImage","imgId","setLensObj","undefined","when","productData","loading","title","eshop","preventDefault","newProductObj","updatedObj","contactLenses","obj","updatedObg","productCategories","category","splice","find","path","method","setResponse","error","setError","setMessage","setIsLoading","refetchIndex","setRefetchIndex","prevRefetchIndex","requestOptions","redirect","a","fetch","res","json","fetchData","queryObj","myHeaders","Headers","append","localStorage","getItem","raw","JSON","stringify","headers","body","useFetchById","isAvailable","reduce","acc","currValue","totalCount","translatePaymentMethod","translateStatus","status"],"mappings":"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","file":"static/js/17.d0bbb3cf.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 100rem;\n    max-height: 80rem;\n\n    overflow-y: scroll;\n\n    /* display: flex;\n    flex-direction: column;\n    align-items: center; */\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: var(--body-background-primary-color);\n    color: var(--primary-text-color);\n\n    position: relative;\n    z-index: 999999;\n\n    h2 {\n        margin-bottom: 2rem;\n    }\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const UploadButton = styled.label`\n    input[type=\"file\"] {\n        position: absolute;\n        left: -999999999rem;\n    }\n    cursor: pointer;\n        background-color: transparent;\n\n    max-width: 18rem;\n    font-size: 1.4rem;\n    font-family: inherit;\n    font-weight: bolder;\n    padding: .8rem 1rem;\n    text-align: center;\n    display: block;\n    border: 1px solid var(--primary-color);\n    color: var(--primary-color);\n    transition: background-color .1s ease-out,\n                color .2s ease-out;\n    outline: none;\n    margin-bottom: 2rem;\n\n    &:focus {\n        outline:none;\n    }\n\n    &:hover {\n        background-color: var(--primary-color);\n        color: var(--button-font-color);\n    }\n`\n\n\n\nexport const DeleteButton = styled.button`\n    cursor: pointer;\n    display:none;\n    border-radius:50%;\n    position: absolute;\n    border: none;\n    background-color: var(--color-red);\n    color: #fff;\n    padding: .5rem .75rem;\n    font-size: 1rem;\n    right: .5rem;\n    top: .5rem;\n\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const NewImageContainer = styled.div`\n    cursor: pointer;\n\n    position: relative;\n    min-width: 15rem;\n    width: 15rem;\n    height: 15rem;\n\n\n    ${({ isPrimary }) => console.log(isPrimary)}\n\n    border: ${({ isPrimary }) => isPrimary ? '1px solid var(--primary-color)' : 'unset'};\n    \n    img {\n        width: 100%;\n        height: 100%;\n        object-fit: contain;\n    }\n\n    &:hover ${DeleteButton} {\n        display: block\n    }\n`\n\nexport const NewImagesContainer = styled.div`\n    display: flex;\n    gap: 3rem;\n    overflow-x: auto;\n    padding-bottom: 2rem;\n    margin-bottom: 2rem;\n\n`\n\nexport const SubmitButton = styled(CustomButton)`\n    background-color: var(--primary-color);\n    font-weight: bolder;\n`\n\nexport const UploadImageButton = styled(CustomButton)`\n    position: absolute;\n    right: 1rem;\n    top: 1rem;\n`","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\nimport ImageModal from '../modal-images/modal-images.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    UploadButton,\n    NewImageContainer,\n    DeleteButton,\n    NewImagesContainer,\n    SubmitButton,\n    UploadImageButton\n} from './modal-product-image-gallery.styles'\n\nconst ProductImageGalleryModal = ({ close, setImage }) => {\n    const tabs = [\n        'upload',\n        'select'\n    ]\n    const [tab, setTab] = useState(tabs[0])\n    const [images, setImages] = useState([])\n    const [files, setFiles] = useState([])\n\n    const [isModalVisible, setIsModalVisible] = useState(false)\n\n    const [selectedImages, setSelectedImages] = useState([])\n    const [primaryImage, setPrimaryImage] = useState(null)\n\n    const handleFileInputChange = (e) => {\n        const files = e.target.files;\n        var filesArr = Array.prototype.slice.call(files);\n        const filesArrWithUrl = filesArr.map((file) => ({\n            file: file,\n            url: URL.createObjectURL(file)\n        }))\n        setFiles(prevValue => ([...prevValue, ...filesArrWithUrl]))\n    }\n\n    const selectImage = (img) => {\n        setSelectedImages(prevValue => ([...prevValue, img]))\n    }\n\n    const removeSelectedImage = img => {\n        const arr = selectedImages.filter(image => image._id !== img._id)\n        setSelectedImages(arr)\n    }\n\n    const selectPrimaryImage = img => {\n        console.log(img)\n        setPrimaryImage(img)\n    }\n\n    const handleSubmit = (primaryImg, otherImages) => {\n        console.log(primaryImg)\n        console.log(otherImages)\n\n        // console.log(primaryImg._id)\n\n\n        if (primaryImg) {\n            const arr = otherImages.map(img => img._id)\n            console.log(arr)\n            const filteredArr = otherImages.filter(img => img._id !== primaryImg._id)\n            console.log(filteredArr)\n            setImage(primaryImg._id, filteredArr, primaryImg)\n            close()\n        } else {\n            // const arr = otherImages.map(img => img._id)\n            // console.log(arr)\n            const firstIndex = otherImages[0]\n            const filteredArr = otherImages.filter(img => img._id !== firstIndex._id)\n            console.log(filteredArr)\n            setImage(firstIndex._id, filteredArr, firstIndex)\n            close()\n        }\n\n\n    }\n\n    const { response, isLoading, refetch } = useFetchByQuery('api/images/filter', {\n        sortBy: {\n            dateCreated: -1\n        },\n        limit: 10,\n        skip: 0\n    })\n    useEffect(() => {\n        if (isLoading) return\n        if (!response) return\n        setImages(response.images)\n    }, [isLoading])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            {isModalVisible && <ImageModal close={() => setIsModalVisible(false)} setImage={refetch} />}\n\n            <CloseButton onClick={close} />\n            <Modal>\n                <UploadImageButton onClick={() => setIsModalVisible(true)}>Pridať</UploadImageButton>\n\n                <h2>1. Vybrať obrázky</h2>\n\n                <NewImagesContainer>\n                    {images?.length > 0 && images.map((img) => (\n                        <NewImageContainer key={img._id}>\n                            {/* <DeleteButton >&#10005;</DeleteButton> */}\n                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\n                        </NewImageContainer>\n                    ))}\n                </NewImagesContainer>\n\n                {selectedImages.length > 0 && <h2>2. Zvolené obrázky</h2>}\n                {selectedImages.length > 0 && <p>Vybrať hlavný obrázok</p>}\n\n                <NewImagesContainer>\n                    {selectedImages.length > 0 && selectedImages.map((img) => (\n                        <NewImageContainer key={img._id} isPrimary={img._id === primaryImage?._id}>\n                            <DeleteButton onClick={() => removeSelectedImage(img)} >&#10005;</DeleteButton>\n                            <img onClick={() => selectPrimaryImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\n                        </NewImageContainer>\n                    ))}\n                </NewImagesContainer>\n\n                <SubmitButton onClick={() => handleSubmit(primaryImage, selectedImages)}>Dokončiť</SubmitButton>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default ProductImageGalleryModal\n\n                // <h2>1. Vybrať obrázky</h2>\n\n                // <UploadButton htmlFor='image'>\n                //     <input\n                //         id='image'\n                //         type='file'\n                //         name='image'\n                //         multiple\n                //         accept=\"image/png, image/jpeg\"\n                //         onChange={handleFileInputChange}\n                //     />\n                //     Vybrať\n                // </UploadButton>\n\n                // {files.length > 0 && (\n                //     <div>\n                //         <h2>2. Vybrat hlavný obrázok</h2>\n                //     </div>\n                // )}\n\n                // <NewImagesContainer>\n                //     {files.length > 0 && files.map(({ url }, idx) => (\n                //         <NewImageContainer key={idx}>\n                //             <DeleteButton >&#10005;</DeleteButton>\n                //             <img src={url} alt={`new image ${idx}`} />\n                //         </NewImageContainer>\n                //     ))}\n                // </NewImagesContainer>\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 65rem;\n    max-height: 60rem;\n\n    overflow-y: scroll;\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: var(--background-primary-color);\n    color: var(--primary-text-color);\n\n    position: relative;\n    z-index: 999999;\n\n    h2{ \n        margin-bottom: 2rem;\n        text-align: center;\n    }\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const SearchButton = styled(CustomButton)`\n    display: block;\n    margin-left: auto;\n    margin-top: 2rem;\n    background-color: var(--primary-color);\n`\n\n\nexport const TableContainer = styled.div`\n    margin: 5rem 0;\n    overflow-x: auto;\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const TableCol = styled.div`\n    min-width: inherit;\n    padding: 2rem;\n    text-align: center;\n    background-color: ${({ isHead }) => !isHead ? \"var(--container-background-color)\" : \"unset\"};\n    border-bottom: ${({ isHead }) => isHead ? \"1px solid var(--secondary-text-color)\" : \"unset\"};\n\n    img {\n        width: 5rem;\n    }\n\n`\n\nexport const ProductTableHead = styled.div`\n    width: 100%;\n\n    display: grid;\n    align-items: center;\n    grid-template-columns: 15rem 10rem 35rem 20rem 10rem 20rem;\n    font-weight: bolder;\n\n`\nexport const ProductTableRow = styled.div`\n    cursor: pointer;\n    display: grid;\n    align-content: center;\n    grid-template-columns: 15rem 10rem 35rem 20rem 10rem 20rem;\n    margin-bottom: 1rem;\n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    transition: all .3s ease-out;\n\n\n    &:hover {\n        ${TableCol} {\n            background-color: var(--primary-color);\n            font-weight: bolder;\n            color: var(--button-font-color);\n        }\n    }\n\n\n`","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport { formatAvailable } from '../../utils/orders.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SearchButton,\n    ProductTableHead,\n    ProductTableRow,\n    TableCol,\n    TableContainer\n} from './modal-get-product-data.styles'\n\nconst GetProductDataModal = ({ close, getSingleProduct, productObj, setProductObj }) => {\n    const [searchQuery, setSearchQuery] = useState(\"\")\n\n    const [productItems, setProductItems] = useState([])\n\n    const [query, setQuery] = useState({\n        limit: 10,\n        skip: 0,\n        filters: {\n            type: productObj.type\n        }\n    })\n    const { response, isLoading, refetch } = useFetchByQuery(\"api/admin/products/filter\", query)\n\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        setQuery({\n            ...query,\n            query: searchQuery\n        })\n        refetch()\n    }\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== \"\") {\n            if (e.key === 'Enter') {\n                setQuery({\n                    ...query,\n                    query: searchQuery\n                })\n                refetch()\n            }\n        }\n    }\n\n    const handleClick = (id) => {\n        getSingleProduct(id, (data) => {\n            console.log(\"DATA\")\n            console.log(data)\n            const { product } = data\n\n            if (product.type === 1 || product.type === 2 || product.type === 4) {\n                delete product['__v']\n                delete product['soldAmount']\n                delete product['ordered']\n                delete product['_id']\n                delete product['boughtTogether']\n                delete product['contactLenses']\n                delete product['date']\n\n                console.log(product)\n\n                setProductObj({\n                    ...product,\n                    // id: product._id,\n                    ...(!product._id) && { _id: product._id },\n                    price: (product.price / 100).toFixed(2),\n                    eanCode: product.eanCode,\n                    image: product.image._id,\n                    specs: {\n                        ...product.specs,\n                        size: [...Array(4)].map((value, idx) => product.specs.size[idx] ? product.specs.size[idx] : 0)\n                    }\n                })\n            }\n            if (product.type === 3) {\n                delete product['__v']\n                delete product['soldAmount']\n                delete product['ordered']\n                delete product['_id']\n                delete product['boughtTogether']\n                delete product['specs']\n                delete product['date']\n\n                setProductObj({\n                    ...product,\n                    // id: product._id,\n                    ...(!product._id) && { _id: product._id },\n                    price: (product.price / 100).toFixed(2),\n                    // colorCode: product.colorCode ?? \"\",\n                    image: product.image._id,\n                    // specs: {\n                    //     ...product.specs,\n                    //     size: [...Array(4)].map((value, idx) => product.specs.size[idx] ? product.specs.size[idx] : 0)\n                    // }\n                })\n            }\n        })\n        close()\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n\n        setProductItems(response.products)\n    }, [isLoading])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>Vyhľadať produkt</h2>\n                <div>\n                    <CustomInput\n                        label='Názov produktu, eanCode alebo popis'\n                        value={searchQuery}\n                        handleChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n\n                <TableContainer>\n                    <ProductTableHead>\n                        <TableCol isHead>eanKód</TableCol>\n                        <TableCol isHead>Obrázok</TableCol>\n                        <TableCol isHead>Názov</TableCol>\n                        <TableCol isHead>Značka</TableCol>\n                        <TableCol isHead>Cena</TableCol>\n                        <TableCol isHead>Na sklade</TableCol>\n                    </ProductTableHead>\n                    {productItems.map((product, idx) => (\n                        <ProductTableRow key={idx} onClick={() => handleClick(product._id)}>\n                            <TableCol>{product.eanCode}</TableCol>\n                            <TableCol>\n                                {product?.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${product.image.imagePath}`} alt={product.image.alt} />}\n                            </TableCol>\n                            <TableCol>{product.name}</TableCol>\n                            <TableCol>{product.brand}</TableCol>\n                            <TableCol>{(product.price / 100).toFixed(2)}€</TableCol>\n                            <TableCol>{product.type === 6 ? 'Služba' : formatAvailable(product.available)}</TableCol>\n                        </ProductTableRow>\n                    ))}\n                </TableContainer>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default GetProductDataModal\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ModalContainer = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0,0,0,0.3);\n`\n\nexport const Modal = styled.div`\n    width:100%;\n    max-width: 65rem;\n    max-height: 60rem;\n\n    overflow-y: scroll;\n\n    padding: 2rem;\n    border-radius: .5rem;\n    background-color: var(--background-primary-color);\n    color: var(--primary-text-color);\n\n    position: relative;\n    z-index: 999999;\n\n    h2{ \n        margin-bottom: 2rem;\n        text-align: center;\n    }\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const CloseButton = styled.button`\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n\n    border: none;\n    outline: none;\n    opacity: 0;\n\n    &:focus {\n        outline: none\n    }\n`\n\nexport const SearchButton = styled(CustomButton)`\n    display: block;\n    margin-left: auto;\n    margin-top: 2rem;\n    background-color: var(--primary-color);\n`\n\n\nexport const TableContainer = styled.div`\n    margin: 5rem 0;\n    overflow-x: auto;\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const TableCol = styled.div`\n    min-width: inherit;\n    padding: 2rem;\n    text-align: center;\n    background-color: ${({ isHead }) => !isHead ? \"var(--container-background-color)\" : \"unset\"};\n    border-bottom: ${({ isHead }) => isHead ? \"1px solid var(--secondary-text-color)\" : \"unset\"};\n\n    img {\n        width: 5rem;\n    }\n\n`\n\nexport const ProductTableHead = styled.div`\n    width: 100%;\n\n    display: grid;\n    align-items: center;\n    grid-template-columns: 15rem 10rem 35rem 20rem 10rem 20rem;\n    font-weight: bolder;\n\n`\nexport const ProductTableRow = styled.div`\n    cursor: pointer;\n    display: grid;\n    align-content: center;\n    grid-template-columns: 15rem 10rem 35rem 20rem 10rem 20rem;\n    margin-bottom: 1rem;\n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    transition: all .3s ease-out;\n\n\n    &:hover {\n        ${TableCol} {\n            background-color: var(--primary-color);\n            font-weight: bolder;\n            color: var(--button-font-color);\n        }\n    }\n\n\n`","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport { formatAvailable } from '../../utils/orders.utils'\n\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SearchButton,\n    ProductTableHead,\n    ProductTableRow,\n    TableCol,\n    TableContainer\n} from './modal-get-lenses-data.styles'\n\nconst GetLensesDataModal = ({ close, getSingleLenses, productObj, setProductObj, fillProductData }) => {\n    const [searchQuery, setSearchQuery] = useState(\"\")\n\n    const [productItems, setProductItems] = useState([])\n\n    const [query, setQuery] = useState({\n        limit: 10,\n        skip: 0,\n    })\n\n    const { response, isLoading, refetch } = useFetchByQuery(\"api/admin/lenses/filter\", query)\n\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        setQuery({\n            ...query,\n            query: searchQuery\n        })\n        refetch()\n    }\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== \"\") {\n            if (e.key === 'Enter') {\n                setQuery({\n                    ...query,\n                    query: searchQuery\n                })\n                refetch()\n            }\n        }\n    }\n\n    const handleClick = (id) => {\n        getSingleLenses(id, (data) => {\n            const { lenses } = data\n\n            delete lenses['__v']\n            delete lenses['_id']\n            delete lenses['soldAmount']\n            delete lenses['dateCreated']\n\n            console.log(\"lenses\")\n            console.log(\"lenses\")\n            console.log(lenses)\n            console.log(setProductObj)\n\n            fillProductData({\n                ...lenses,\n                image: lenses.image._id,\n                lensType: lenses.type || \"číre\",\n                dioptric: lenses.dioptric || false,\n                type: 0,\n                price: (lenses.price / 100).toFixed(2),\n            })\n\n        })\n        close()\n\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n\n        setProductItems(response.lenses)\n    }, [isLoading])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>Vyhľadať šošovky</h2>\n                <div>\n                    <CustomInput\n                        label='Názov šošoviek, eanCode alebo popis'\n                        value={searchQuery}\n                        handleChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n\n                <TableContainer>\n                    <ProductTableHead>\n                        <TableCol isHead>eanKód</TableCol>\n                        <TableCol isHead>Názov</TableCol>\n                        <TableCol isHead>Dioptrie</TableCol>\n                        <TableCol isHead>Cylinder</TableCol>\n                        <TableCol isHead>Cena</TableCol>\n                    </ProductTableHead>\n                    {productItems.map((product, idx) => (\n                        <ProductTableRow key={idx} onClick={() => handleClick(product._id)}>\n                            <TableCol>{product.eanCode}</TableCol>\n                            <TableCol>{product.name}</TableCol>\n                            <TableCol>\n                                {product.dioptersRange && <p>{`od ${product.dioptersRange[0]} do ${product.dioptersRange[1]}`}</p>}\n                            </TableCol>\n                            <TableCol>\n                                {product.cylinderRange && <p>{`od ${product.cylinderRange[0]} do ${product.cylinderRange[1]}`}</p>}\n                            </TableCol>\n                            <TableCol>{(product.price / 100).toFixed(2)}€</TableCol>\n                        </ProductTableRow>\n                    ))}\n                </TableContainer>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default GetLensesDataModal\n","import styled from 'styled-components'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\nexport const BrandedCheckbox = styled(CustomCheckbox)`\n    margin-top: 2rem;\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const GlassesContainerForm = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const GlassesContainer = styled.div`\n    position: relative;\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`\n\nexport const GlassesParameterContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n    margin-bottom: 3rem;\n\n    h4 {\n        margin-top: 2rem;\n    }\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: var(--input-background-color);\n    color: var(--input-color);\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`\n\nexport const CopyButton = styled.button`\n    cursor: pointer;\n    position: absolute;\n    right: 2rem;\n    top: 2rem;\n    color: var(--primary-color);\n`\n\nexport const DeleteButton = styled.button`\n    cursor: pointer;\n    display:none;\n    border-radius:50%;\n    position: absolute;\n    border: none;\n    background-color: var(--color-red);\n    color: #fff;\n    padding: .5rem .75rem;\n    font-size: 1rem;\n    right: .5rem;\n    top: .5rem;\n\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const NewImageContainer = styled.div`\n    position: relative;\n    min-width: 15rem;\n    width: 15rem;\n    height: 15rem;\n\n\n    ${({ isPrimary }) => console.log(isPrimary)}\n\n    border: ${({ isPrimary }) => isPrimary ? '1px solid var(--primary-color)' : 'unset'};\n    \n    img {\n        width: 100%;\n        height: 100%;\n        object-fit: contain;\n    }\n\n    &:hover ${DeleteButton} {\n        display: block\n    }\n`\n\nexport const NewImagesContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 3rem;\n    /* overflow-x: auto; */\n    padding-bottom: 2rem;\n    margin-bottom: 2rem;\n\n`","import React, { useState, useEffect } from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport { glassesColors, glassesMaterials, glassesShapes } from '../../utils/warehouse.utils'\n\nimport { AiOutlineCopy } from 'react-icons/ai'\n\nimport {\n    ImageContainer,\n    ProductImage,\n    GlassesContainerForm,\n    GlassesContainer,\n    GlassesParameterContainer,\n    StockContainer,\n    CustomSelect,\n    BrandedCheckbox,\n    CopyButton,\n    UploadButton,\n    DeleteButton,\n    NewImageContainer,\n    NewImagesContainer\n} from './product-glasses-form.styles.jsx'\n\nconst ProductGlassesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    retailNames,\n    currentUser,\n    checkParameter,\n    handleAvailableChange,\n    handleGlassesParametersChange,\n    handleGlassesSpecsSizeChange,\n    handleSpecsChange,\n    glassesParameters,\n    setImageModal,\n    isUpdating,\n    filters,\n    handleGetProductData,\n    productObj\n}) => {\n    const [isBranded, setIsBranded] = useState(true)\n\n\n    const handleIsBrandedClick = (isBrandedBool) => {\n        if (isBrandedBool) {\n            handleChange({\n                target: {\n                    name: \"brand\",\n                    value: \"Neznačkové\"\n                }\n            })\n            setIsBranded(false)\n        } else {\n            handleChange({\n                target: {\n                    name: \"brand\",\n                    value: \"\"\n                }\n            })\n\n            setIsBranded(true)\n\n        }\n    }\n\n    useEffect(() => {\n        if (product.brand === \"Neznačkové\") setIsBranded(false)\n    }, [isBranded])\n\n    return (\n        <GlassesContainerForm>\n            <GlassesContainer>\n                <CopyButton onClick={() => handleGetProductData(true)}><AiOutlineCopy /></CopyButton>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='eanCode'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov produktu*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <BrandedCheckbox\n                    label={\"Značkové\"}\n                    isActive={isBranded}\n                    handleClick={() => handleIsBrandedClick(isBranded)}\n                />\n\n                {isBranded && (\n                    <React.Fragment>\n                        <CustomInput\n                            label=\"Značka\"\n                            type='text'\n                            name='brand'\n                            value={product.brand ?? \"\"}\n                            handleChange={(e) => handleChange(e)}\n                            list=\"brands\"\n                        />\n                        <datalist id=\"brands\">\n                            {filters?.brands && filters?.brands.map((brand, idx) => (\n                                <option key={idx} value={brand} />\n                            ))}\n                        </datalist>\n                    </React.Fragment>\n                )}\n\n                {/* <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"categories\"\n\n                /> */}\n\n                {/* <datalist id=\"categories\">\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist> */}\n\n                {/* <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                /> */}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n\n                <NewImagesContainer>\n                    {productObj?.bonusImages && productObj?.bonusImages.map((img, idx) => (\n                        <NewImageContainer key={idx}>\n                            {/* <DeleteButton >&#10005;</DeleteButton> */}\n                            <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\n                        </NewImageContainer>\n                    ))}\n                </NewImagesContainer>\n            </GlassesContainer>\n            <div>\n                <GlassesParameterContainer>\n                    <h3>Parametre</h3>\n                    <CustomInput\n                        label=\"Farebný kód\"\n                        type='text'\n                        name='colorCode'\n                        value={glassesParameters.colorCode ?? \"\"}\n                        handleChange={(e) => handleGlassesParametersChange(e)}\n                    />\n                    <div>\n                        <CustomInput\n                            label=\"Farba rámu\"\n                            type='text'\n                            name='frameColor'\n                            value={glassesParameters.specs.frameColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                            list=\"colors\"\n\n                        />\n                        <datalist id=\"colors\">\n                            {glassesColors.map((color, idx) => (\n                                <option key={idx} value={color} />\n                            ))}\n                        </datalist>\n                        <CustomInput\n                            label=\"Materiál rámu\"\n                            type='text'\n                            name='frameMaterial'\n                            value={glassesParameters.specs.frameMaterial ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                            list=\"materials\"\n\n                        />\n                        <datalist id=\"materials\">\n                            {glassesMaterials.map((material, idx) => (\n                                <option key={idx} value={material} />\n                            ))}\n                        </datalist>\n                        <CustomInput\n                            label=\"Tvar rámu\"\n                            type='text'\n                            name='frameStyle'\n                            value={glassesParameters.specs.frameStyle ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                            list=\"shapes\"\n                        />\n                        <datalist id=\"shapes\">\n                            {glassesShapes.map((shape, idx) => (\n                                <option key={idx} value={shape} />\n                            ))}\n                        </datalist>\n                        {/* <CustomInput\n                            label=\"Farba šošovky\"\n                            type='text'\n                            name='lensColor'\n                            value={glassesParameters.specs.lensColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        /> */}\n                        <CustomSelect\n                            label=\"Pohlavie\"\n                            type='text'\n                            name='sex'\n                            value={glassesParameters?.specs?.sex || \"\"}\n                            onChange={(e) => handleSpecsChange(e)}\n                        >\n                            <option value=''>-</option>\n                            <option value='M'>Pánske</option>\n                            <option value='W'>Dámske</option>\n                            <option value='CH'>Detské</option>\n                            <option value='U'>Nezáleží</option>\n                        </CustomSelect>\n                    </div>\n                    <div>\n                        <h4>Velkosť</h4>\n                        {glassesParameters.specs.size.map((value, idx) => (\n                            <CustomInput\n                                key={idx}\n                                label={idx === 0 ? \"Šírka očnice (mm)\" : idx === 1 ? \"Výška očnice (mm)\" : idx === 2 ? \"Veľkosť nosníka (mm)\" : \"Dĺžka stranice (mm)\"}\n                                type='text'\n                                name='size'\n                                value={checkParameter(glassesParameters.specs.size, idx)}\n                                handleChange={(e) => handleGlassesSpecsSizeChange(e, idx)}\n                            />\n                        ))}\n                    </div>\n                </GlassesParameterContainer>\n                {currentUser.admin >= 2 ? (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        {product.available.map((value, idx) => {\n                            if (idx === 0) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </StockContainer>\n                ) : (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        <CustomInput\n                            label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[currentUser.premises]}\n                            type='number'\n                            name={\"available\"}\n                            value={checkParameter(product.available, currentUser.premises)}\n                            handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                        />\n                    </StockContainer>\n                )}\n            </div>\n        </GlassesContainerForm>\n    )\n}\n\nexport default ProductGlassesForm\n","import styled from 'styled-components'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\n\nexport const LensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n\n    @media all and (max-width: 1000px) {\n        grid-template-columns: 1fr;\n    }\n`\n\nexport const LensesContainer = styled.div`\n    position: relative;\n    /* width: 45rem; */\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n    /* display: inline-block; */\n    /* padding-bottom: 4rem;  */\n    margin-bottom: 5rem;\n`\n\nexport const LensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    h3 {\n        /* margin-bottom: 1rem; */\n    }\n\n    h4 {\n        margin-top: 2rem;\n    }\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\nexport const SubGridContainer = styled.div`\n\n`\n\nexport const TypesContainer = styled.div`\n    padding: 2rem;\n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    margin-bottom: 3rem;\n\n    h3 {\n        margin-bottom: 1rem;\n    }\n\n    h4 {\n        margin-top: 2rem;\n    }\n\n    div {\n        :not(:last-child) {\n            margin-bottom: 1rem;\n        }\n    }\n`\n\nexport const TypeCheckbox = styled(CustomCheckbox)`\n    &:not(:last-child) {\n        margin-right: 2rem;\n    }\n`\n\nexport const CopyButton = styled.button`\n    cursor: pointer;\n    position: absolute;\n    right: 2rem;\n    top: 2rem;\n    color: var(--primary-color);\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport { lensesTypes } from '../../context/warehouse/warehouse.utils'\n\nimport { AiOutlineCopy } from 'react-icons/ai'\n\nimport {\n    LensesFormContainer,\n    LensesContainer,\n    LensesParametersContainer,\n    ProductImage,\n    ImageContainer,\n    TypesContainer,\n    SubGridContainer,\n    TypeCheckbox,\n    CopyButton\n} from './product-lenses-form.styles'\n\nconst ProductLensesForm = ({\n    lenses,\n    selectedImage,\n    setImageModal,\n    handleChange,\n    handleParameterChange,\n    checkParameter,\n    filters,\n    handleGetProductData\n}) => {\n    return (\n        <LensesFormContainer>\n            <LensesContainer>\n                <CopyButton onClick={() => handleGetProductData(true)}><AiOutlineCopy /></CopyButton>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='eanCode'\n                    value={lenses?.eanCode?.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov šošoviek*\"\n                    type='text'\n                    name='name'\n                    value={lenses.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka*\"\n                    type='text'\n                    name='brand'\n                    value={lenses.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"brands\"\n                />\n\n                <datalist id=\"brands\">\n                    {filters?.brands && filters?.brands.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist>\n\n                <CustomTextarea\n                    label=\"Popis*\"\n                    name='description'\n                    rows='5'\n                    value={lenses.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={lenses.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </LensesContainer>\n            <SubGridContainer>\n                <TypesContainer>\n                    <h3>Druh</h3>\n\n                    <div>\n                        {lensesTypes.map((type, idx) => (\n                            <TypeCheckbox\n                                key={idx}\n                                label={type}\n                                value={type}\n                                name='lensType'\n                                isActive={type === lenses?.lensType}\n                                handleClick={() => handleChange({\n                                    target: {\n                                        name: \"lensType\",\n                                        value: type\n                                    }\n                                })}\n                            />\n                        ))}\n                    </div>\n\n                    {console.log(lenses)}\n                    {lenses.lensType === \"slnečné\" && (\n                        <div>\n                            <TypeCheckbox\n                                label=\"Polarizované\"\n                                value={lenses.photochromic}\n                                name='photochromic'\n                                isActive={lenses.photochromic}\n                                handleClick={() => handleChange({\n                                    target: {\n                                        name: \"photochromic\",\n                                        value: !lenses.photochromic\n                                    }\n                                })}\n                            />\n                        </div>\n                    )}\n\n                    <div>\n                        <TypeCheckbox\n                            label=\"Dioptrické\"\n                            value={lenses.dioptric}\n                            name='dioptric'\n                            isActive={lenses.dioptric}\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"dioptric\",\n                                    value: !lenses.dioptric\n                                }\n                            })}\n                        />\n                    </div>\n\n                    <CustomInput\n                        label=\"Farba šošovky\"\n                        type='text'\n                        name='color'\n                        value={lenses.color ?? \"\"}\n                        handleChange={(e) => handleChange(e)}\n                    />\n                </TypesContainer>\n                <LensesParametersContainer>\n                    <h3>Parametre</h3>\n\n                    <h4>Dioptrie</h4>\n                    {[...Array(2)].map((value, idx) => {\n                        const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\n\n                        return (\n                            <div key={idx}>\n                                <CustomInput\n                                    label={inputLabel}\n                                    type='number'\n                                    name='dioptersRange'\n                                    value={checkParameter(lenses.dioptersRange, idx)}\n                                    handleChange={(e) => handleParameterChange(e, idx)}\n                                />\n                            </div>\n                        )\n                    })}\n\n                    <h4>Cylinder</h4>\n                    {[...Array(2)].map((value, idx) => {\n                        const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\n\n                        return (\n                            <div key={idx}>\n                                <CustomInput\n                                    label={inputLabel}\n                                    type='number'\n                                    name='cylinderRange'\n                                    value={checkParameter(lenses.cylinderRange, idx)}\n                                    handleChange={(e) => handleParameterChange(e, idx)}\n                                />\n                            </div>\n                        )\n                    })}\n                </LensesParametersContainer>\n            </SubGridContainer>\n        </LensesFormContainer>\n    )\n}\n\nexport default ProductLensesForm\n","import styled from 'styled-components'\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const AccessoriesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const AccessoriesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`\n\nexport const DeleteButton = styled.button`\n    cursor: pointer;\n    display:none;\n    border-radius:50%;\n    position: absolute;\n    border: none;\n    background-color: var(--color-red);\n    color: #fff;\n    padding: .5rem .75rem;\n    font-size: 1rem;\n    right: .5rem;\n    top: .5rem;\n\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const NewImageContainer = styled.div`\n    position: relative;\n    min-width: 15rem;\n    width: 15rem;\n    height: 15rem;\n\n\n    ${({ isPrimary }) => console.log(isPrimary)}\n\n    border: ${({ isPrimary }) => isPrimary ? '1px solid var(--primary-color)' : 'unset'};\n    \n    img {\n        width: 100%;\n        height: 100%;\n        object-fit: contain;\n    }\n\n    &:hover ${DeleteButton} {\n        display: block\n    }\n`\n\nexport const NewImagesContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 3rem;\n    /* overflow-x: auto; */\n    padding-bottom: 2rem;\n    margin-bottom: 2rem;\n\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    AccessoriesFormContainer,\n    AccessoriesContainer,\n    StockContainer,\n    ImageContainer,\n    ProductImage,\n    DeleteButton,\n    NewImageContainer,\n    NewImagesContainer,\n} from './product-accessories-form.styles'\n\nconst ProductAccessoriesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    setImageModal,\n    handleAvailableChange,\n    checkParameter,\n    retailNames,\n    currentUser,\n    isUpdating,\n    filters,\n    productObj\n}) => {\n    return (\n        <AccessoriesFormContainer>\n            <AccessoriesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"brands\"\n                />\n\n                <datalist id=\"brands\">\n                    {filters?.brands && filters?.brands.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist>\n\n                {/* <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"categories\"\n\n                />\n\n                <datalist id=\"categories\">\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist> */}\n\n                {/* {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />} */}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n\n                <NewImagesContainer>\n                    {productObj?.bonusImages && productObj?.bonusImages.map((img) => (\n                        <NewImageContainer key={img._id}>\n                            {/* <DeleteButton >&#10005;</DeleteButton> */}\n                            <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\n                        </NewImageContainer>\n                    ))}\n                </NewImagesContainer>\n            </AccessoriesContainer>\n            {currentUser.admin >= 2 ? (\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    {product.available.map((value, idx) => {\n                        if (idx === 0) return\n                        return (\n                            <CustomInput\n                                key={idx}\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, idx)}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        )\n                    })}\n                </StockContainer>\n            ) : (\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    <CustomInput\n                        label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[currentUser.premises]}\n                        type='number'\n                        name={\"available\"}\n                        value={checkParameter(product.available, currentUser.premises)}\n                        handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                    />\n                </StockContainer>\n            )}\n        </AccessoriesFormContainer>\n    )\n}\n\nexport default ProductAccessoriesForm\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const ContactLensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const ContactLensesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n    position: relative;\n\n`\n\nexport const ContactLensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n    margin-bottom: 3rem;\n\n    h4 {\n        margin-top: 1rem;\n    }\n`\n\nexport const IncreaseButton = styled(CustomButton)`\n    margin-top: 2rem;\n    font-size: 1.4rem;\n\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`\n\nexport const CopyButton = styled.button`\n    cursor: pointer;\n    position: absolute;\n    right: 2rem;\n    top: 2rem;\n    color: var(--primary-color);\n`\n\nexport const DeleteButton = styled.button`\n    cursor: pointer;\n    display:none;\n    border-radius:50%;\n    position: absolute;\n    border: none;\n    background-color: var(--color-red);\n    color: #fff;\n    padding: .5rem .75rem;\n    font-size: 1rem;\n    right: .5rem;\n    top: .5rem;\n\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const NewImageContainer = styled.div`\n    position: relative;\n    min-width: 15rem;\n    width: 15rem;\n    height: 15rem;\n\n\n    ${({ isPrimary }) => console.log(isPrimary)}\n\n    border: ${({ isPrimary }) => isPrimary ? '1px solid var(--primary-color)' : 'unset'};\n    \n    img {\n        width: 100%;\n        height: 100%;\n        object-fit: contain;\n    }\n\n    &:hover ${DeleteButton} {\n        display: block\n    }\n`\n\nexport const NewImagesContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 3rem;\n    /* overflow-x: auto; */\n    padding-bottom: 2rem;\n    margin-bottom: 2rem;\n\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\n// import { lensesBrands } from '../../utils/warehouse.utils'\nimport {\n    AiOutlineCopy\n} from 'react-icons/ai'\n\nimport {\n    ContactLensesContainer,\n    ContactLensesFormContainer,\n    StockContainer,\n    ContactLensesParametersContainer,\n    IncreaseButton,\n    ImageContainer,\n    ProductImage,\n    CopyButton,\n    DeleteButton,\n    NewImageContainer,\n    NewImagesContainer\n} from './product-contact-lenses-form.styles'\n\nconst ProductContactLensesForm = ({\n    product,\n    handleChange,\n    setImageModal,\n    selectedImage,\n    checkParameter,\n    handleContactLensesChange,\n    handleAddNewParameter,\n    contactLensesParameters,\n    retailNames,\n    currentUser,\n    handleAvailableChange,\n    isUpdating,\n    filters,\n    productObj,\n    handleGetProductData\n}) => {\n    return (\n        <ContactLensesFormContainer>\n            <ContactLensesContainer>\n                <CopyButton onClick={() => handleGetProductData(true)}><AiOutlineCopy /></CopyButton>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"brands\"\n                />\n                <datalist id=\"brands\">\n                    {filters?.brands && filters?.brands.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist>\n                {/* \n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"categories\"\n                />\n\n                <datalist id=\"categories\">\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist> */}\n\n                {/* {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />} */}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n\n                <NewImagesContainer>\n                    {productObj?.bonusImages && productObj?.bonusImages.map((img) => (\n                        <NewImageContainer key={img._id}>\n                            {/* <DeleteButton >&#10005;</DeleteButton> */}\n                            <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\n                        </NewImageContainer>\n                    ))}\n                </NewImagesContainer>\n            </ContactLensesContainer>\n            <div>\n                <ContactLensesParametersContainer>\n                    <h3>Parametre</h3>\n                    <div>\n                        <h4>Zakrivenie</h4>\n                        {contactLensesParameters.allowedCurves.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedCurves\"}\n                                    value={checkParameter(contactLensesParameters.allowedCurves, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedCurves'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n                    <div>\n                        <h4>Priemery</h4>\n                        {contactLensesParameters.allowedDiameters.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedDiameters\"}\n                                    value={checkParameter(contactLensesParameters.allowedDiameters, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedDiameters'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n\n                    <div>\n                        <h4>Dioptrie</h4>\n                        {contactLensesParameters.dioptersRange.map((value, idx) => {\n                            const inputLabel = idx === 0 ? \"minimum\" : \"maximum\"\n\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={inputLabel}\n                                    type='text'\n                                    name={\"dioptersRange\"}\n                                    value={checkParameter(contactLensesParameters.dioptersRange, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </div>\n                </ContactLensesParametersContainer>\n\n                {currentUser.admin >= 2 ? (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        {product.available.map((value, idx) => {\n                            if (idx === 0) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </StockContainer>\n                ) : (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        <CustomInput\n                            label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[currentUser.premises]}\n                            type='number'\n                            name={\"available\"}\n                            value={checkParameter(product.available, currentUser.premises)}\n                            handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                        />\n                    </StockContainer>\n                )}\n            </div>\n        </ContactLensesFormContainer>\n    )\n}\n\nexport default ProductContactLensesForm\n","import styled from 'styled-components'\n\nexport const ServiceFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const ServiceContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\n\nimport {\n    ServiceFormContainer,\n    ServiceContainer,\n    ImageContainer,\n    ProductImage\n} from './product-service-form.styles'\n\nconst ProductServiceForm = ({\n    product,\n    // isUpdating,\n    handleChange,\n    selectedImage,\n    setImageModal,\n}) => {\n    return (\n        <ServiceFormContainer>\n            <ServiceContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Názov služby*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                {/* <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer> */}\n            </ServiceContainer>\n        </ServiceFormContainer>\n    )\n}\n\nexport default ProductServiceForm\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\nimport CustomButton from '../../components/custom-button/custom-button.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n\nexport const Header = styled.div`\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n    color: var(--primary-text-color);\n\n`\n\nexport const SubmitButton = styled(CustomButton)`\n\n`\n\nexport const IsPublicCheckbox = styled(CustomCheckbox)`\n    margin-right: 2rem;\n`\n\n\nexport const CategoryContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n    display: inline-block;\n    margin-bottom: 3rem;\n\n    h3 {\n        margin-bottom: 1.5rem;\n    }\n`\nexport const CategoryCheckbox = styled(CustomCheckbox)`\n    &:not(:last-child) {\n        margin-right: 2rem;\n    }\n`","import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ModalImage from '../../components/modal-product-image-gallery/modal-product-image-gallery.component'\nimport OldModalImage from '../../components/modal-images/modal-images.component'\nimport GetProductDataModal from '../../components/modal-get-product-data/modal-get-product-data.component'\nimport GetLensesDataModal from '../../components/modal-get-lenses-data/modal-get-lenses-data.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\nimport ProductAccessoriesForm from '../../components/product-accessories-form/product-accessories-form.component'\nimport ProductContactLensesForm from '../../components/product-contact-lenses-form/product-contact-lenses-form.component'\nimport ProductServiceForm from '../../components/product-service-form/product-service-form.component'\n\nimport { productCategories, checkParameter, formatLink } from '../../context/warehouse/warehouse.utils'\nimport { retailNames } from '../../utils/warehouse.utils'\nimport { useFetch } from '../../hooks/useFetch'\n\nimport {\n    FixedContainer\n} from '../../global.styles'\n\nimport {\n    Header,\n    CategoryContainer,\n    CategoryCheckbox,\n    SubmitButton,\n    IsPublicCheckbox,\n\n} from './product.styles'\n\nconst ProductSection = () => {\n    const { id } = useParams()\n    const { currentUser } = useContext(AuthContext)\n    const { closeModal, message, isLoading, showModal, getMessage, setShowModal } = useContext(LoadingModalContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [showImageModal, setImageModal] = useState(false)\n    const [showOldImageModal, setOldImageModal] = useState(false)\n    const [isGetProductDataModalVisible, setIsGetProductDataModalVisible] = useState(false)\n    const [isGetLensesDataModalVisible, setIsGetLensesDataModalVisible] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const {\n        eanCode,\n        product,\n        lenses,\n        contactLensesParameters,\n        glassesParameters,\n        handleLensesChange,\n        handleLensesParameterChange,\n        createProduct,\n        updateProduct,\n        resetProduct,\n        resetLenses,\n        resetContactLenses,\n        resetGlassesParameters,\n        createLenses,\n        updateLenses,\n        handleProductChange,\n        handleProductAvailableChange,\n        getEanCode,\n        handleAddNewParameter,\n        handleContactLensesParameterChange,\n        handleGlassesParameterChange,\n        handleGlassesParameterSpecsChange,\n        handleGlassesSizeChange,\n        getSingleProduct,\n        getSingleLenses\n    } = useContext(WarehouseContext)\n\n    const [hasChanged, setHasChanged] = useState(false)\n    const [productObj, setProductObj] = useState({})\n\n\n    const { response, isLoading: isLoadingFilters, refetch } = useFetch(`api/store/products/${productObj?.type}/filters`, !productObj?.type, \"GET\")\n    const [filters, setFilters] = useState(null)\n\n    const handleGetProductData = (boolean) => {\n        setIsGetProductDataModalVisible(boolean)\n    }\n\n    const handleGetLensesData = (boolean) => {\n        setIsGetLensesDataModalVisible(boolean)\n    }\n\n    const handleChangeType = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (!isUpdating) {\n            if (productObj.type === 0) {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetLenses()\n                        setSelectedImage('')\n                    } else {\n                        return\n                    }\n                }\n            } else {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetProduct()\n                        resetContactLenses()\n                        resetGlassesParameters()\n                        setSelectedImage('')\n                    } else {\n                        return\n                    }\n                }\n            }\n        }\n        setProductObj({\n            [name]: value\n        })\n\n    }\n    // console.count(\"PRODUCT OBJ\")\n    // console.log(productObj)\n    // console.count(\"PRODUCT OBJ\")\n\n    const handleChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (productObj.type === 0) {\n            handleLensesChange(e)\n        }\n\n        if (productObj.type === 6) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 5) {\n            handleProductChange(e)\n        }\n\n        if (productObj.type === 4) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 3) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 2) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 1) {\n            handleProductChange(e)\n        }\n\n\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        if (isUpdating) {\n            if (name === 'name') {\n                setProductObj({\n                    ...productObj,\n                    [name]: value,\n                    link: formatLink(value)\n                })\n                return\n            }\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParametersChange = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterChange(e)\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleSpecsChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterSpecsChange(e)\n\n        if (value === '') {\n            delete productObj.specs[name]\n\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSpecsSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleGlassesSizeChange(e, idx)\n\n        if (value === '') {\n            if (productObj.specs[name].length > 1) {\n                arr[idx] = 1001\n\n                const firstIndex = arr[0]\n                const canDeleteSpecs = arr.map(value => {\n                    if (firstIndex !== value) {\n                        return false\n                    } else {\n                        return true\n                    }\n                })\n\n                const verdict = canDeleteSpecs.find(value => value === false)\n\n                if (verdict === false) {\n                    setProductObj({\n                        ...productObj,\n                        specs: {\n                            ...productObj.specs,\n                            [name]: arr\n                        }\n                    })\n                } else {\n                    delete productObj.specs[name]\n                }\n\n            }\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleProductAvailableChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleContactLensesChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleContactLensesParameterChange(e, idx)\n\n        if (value === '') {\n            if (productObj.contactLenses[name].length > 1) {\n                arr.splice(idx, 1)\n                setProductObj({\n                    ...productObj,\n                    contactLenses: {\n                        ...productObj.contactLenses,\n                        [name]: arr\n                    }\n                })\n            } else {\n                delete productObj.contactLenses[name]\n            }\n            if (Object.keys(productObj.contactLenses).length === 0) {\n                delete productObj[\"contactLenses\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            contactLenses: {\n                ...productObj.contactLenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleLensesParameterChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleSelectImage = (imgId = '', bonusImages, img) => {\n        setHasChanged(true)\n        setSelectedImage(img)\n        setProductObj({\n            ...productObj,\n            image: imgId,\n            ...(bonusImages) && { bonusImages }\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        let newProductObj = {\n            ...productObj,\n            ...(productObj.type === 0) && { type: lenses.lensType },\n            ...(productObj.type === 0) && { dioptric: lenses.dioptric }\n        }\n\n        // console.log(\"PRODUCT OBJECT\")\n        // console.log(lensObj)\n        // console.log(productObj)\n\n\n\n        if (currentUser.admin < 2) {\n            if (newProductObj.available) {\n                newProductObj = {\n                    ...productObj,\n                    available: productObj.available[currentUser.premises]\n                }\n            }\n        } else {\n            if (newProductObj.available) {\n                newProductObj = {\n                    ...productObj,\n                    available: newProductObj.available ? newProductObj.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0, 0]\n                }\n            }\n        }\n\n        if (isUpdating) {\n            console.log(newProductObj)\n            if (newProductObj.type === 0 || typeof newProductObj.type === 'string') {\n                setHasChanged(false)\n                delete newProductObj['link']\n                // delete newProductObj['type']\n                const updatedObj = {\n                    ...newProductObj,\n                    type: newProductObj.lensType,\n                    eanCode: lenses.eanCode\n                }\n                delete updatedObj['lensType']\n                console.log(id)\n                updateLenses(updatedObj, id)\n                return\n            } else if (newProductObj.type === 3) {\n                setHasChanged(false)\n                delete newProductObj['type']\n                updateProduct({ ...newProductObj, contactLenses: {} })\n                return\n            } else {\n                setHasChanged(false)\n                delete newProductObj['type']\n\n                const obj = {\n                    ...newProductObj,\n                    ...(newProductObj.bonusImages) && { bonusImages: newProductObj.bonusImages.map(img => img._id) }\n                }\n\n                console.log(obj)\n\n                updateProduct(obj)\n                return\n            }\n        } else {\n            if (productObj.type === 0) {\n                console.log(\"NEW LENSES OBJ\")\n                console.log(newProductObj)\n                if (!newProductObj.name || !newProductObj.brand || !newProductObj.description || !newProductObj.price || !newProductObj.image || !newProductObj.dioptersRange || !newProductObj.cylinderRange) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    // delete newProductObj['type']\n                    const updatedObg = {\n                        ...newProductObj,\n                        type: newProductObj.lensType\n                    }\n                    delete updatedObg['lensType']\n\n                    createLenses(updatedObg)\n                }\n            }\n            if (newProductObj.type === 6 || newProductObj.type === 5 || newProductObj.type === 4 || newProductObj.type === 3 || newProductObj.type === 2 || newProductObj.type === 1) {\n                if (!newProductObj.name || !newProductObj.price) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    delete newProductObj['_id']\n\n                    const obj = {\n                        ...newProductObj,\n                        ...(newProductObj.bonusImages) && { bonusImages: newProductObj.bonusImages.map(img => img._id) }\n                    }\n\n                    console.log(obj)\n\n                    createProduct(obj)\n                }\n            }\n        }\n\n\n    }\n\n    const [lensObj, setLensObj] = useState(null)\n\n    const fillProductData = (productData) => {\n        console.log(\"productData\")\n        console.log(\"productData\")\n        console.log(productData)\n\n        setLensObj({\n            ...productObj,\n            ...productData\n        })\n\n        setProductObj({\n            ...productObj,\n            ...productData\n        })\n    }\n\n    useEffect(() => {\n        if (!productObj?.type) return\n        setFilters(null)\n        refetch()\n    }, [productObj?.type])\n\n    useEffect(() => {\n        if (productObj.type === 0) {\n            if (productObj.lensType) return\n            console.log(\"SET LENS TYPE\")\n            console.log(lenses)\n            handleChange({\n                target: {\n                    name: \"lensType\",\n                    value: lenses?.type\n                }\n            })\n        }\n    }, [lenses.lensType])\n\n    useEffect(() => {\n        if (isLoadingFilters) return\n        if (response?.filters) {\n            setFilters(response?.filters)\n        }\n    }, [isLoadingFilters])\n\n    useEffect(() => {\n        if (id === \"novy-produkt\") {\n            if (!eanCode) {\n                getEanCode()\n            } else {\n                if (productObj.type !== undefined && !productObj.eanCode) {\n                    console.log(\"SET EANCODE\")\n                    console.log(productObj)\n                    handleChange({\n                        target: {\n                            name: \"eanCode\",\n                            value: eanCode\n                        }\n                    })\n                }\n            }\n        }\n    }, [id, eanCode, productObj.type, productObj.eanCode, product.type])\n\n    useEffect(() => {\n        if (id !== 'novy-produkt') {\n            getSingleProduct(id, (data) => {\n\n                handleSelectImage(data?.product?.image?._id, data.product.bonusImages, data.product.image)\n                setProductObj(prevValue => ({\n                    ...prevValue,\n                    type: data.product.type,\n                }))\n            })\n            setIsUpdating(true)\n            if (!productObj.type) {\n                handleChangeType({\n                    target: {\n                        name: \"type\",\n                        value: product.type\n                    }\n                })\n\n            }\n        }\n    }, [id,])\n\n    console.log(productObj)\n\n    useEffect(() => {\n        // if (product.image) {\n        //     setSelectedImage(product.image)\n        // }\n        if (lenses.image) {\n            setSelectedImage(lenses.image)\n        }\n    }, [lenses.image])\n\n    useEffect(() => {\n        return () => {\n            resetProduct()\n            resetLenses()\n            resetContactLenses()\n            resetGlassesParameters()\n            setProductObj({})\n            setSelectedImage(null)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <section>\n            <Prompt\n                when={hasChanged}\n                message=\"Chcete opustiť formulár?\"\n            />\n\n            {isGetLensesDataModalVisible && <GetLensesDataModal close={() => handleGetLensesData(false)} getSingleProduct={getSingleProduct} productObj={productObj} setProductObj={setProductObj} getSingleLenses={getSingleLenses} fillProductData={fillProductData} />}\n            {isGetProductDataModalVisible && <GetProductDataModal close={() => setIsGetProductDataModalVisible(false)} getSingleProduct={getSingleProduct} productObj={productObj} setProductObj={setProductObj} />}\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={handleSelectImage} />}\n            {showOldImageModal && <OldModalImage close={() => setOldImageModal(false)} setImage={handleSelectImage} />}\n            <Header>\n                <FixedContainer>\n\n                    <div>\n                        <h1>{isUpdating ? \"Upraviť produkt\" : \"Nový produkt\"}</h1>\n                    </div>\n                    <div>\n                        <IsPublicCheckbox\n                            label=\"Verejné\"\n                            // value={product.ehop}\n                            name='eshop'\n                            isActive={product.eshop}\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"eshop\",\n                                    value: !product.eshop\n                                }\n                            })}\n                        />\n                        <SubmitButton onClick={handleSubmit}>{isUpdating ? \"Upraviť\" : \"Vytvoriť\"}</SubmitButton>\n                    </div>\n                </FixedContainer>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating && <CategoryContainer>\n                    <h3>Aký produkt chcete pridať?</h3>\n                    {productCategories.map((category, idx) => (\n                        <CategoryCheckbox\n                            key={idx}\n                            label={category.name}\n                            value={category.value}\n                            name='type'\n                            isActive={category.value === productObj.type}\n                            handleClick={() => handleChangeType({\n                                target: {\n                                    name: \"type\",\n                                    value: category.value\n                                }\n                            })}\n                        />\n                    ))}\n                </CategoryContainer>}\n\n                {productObj.type === 0 && (\n                    <ProductLensesForm\n                        lenses={lenses}\n                        selectedImage={selectedImage}\n                        setImageModal={setOldImageModal}\n                        handleChange={handleChange}\n                        handleParameterChange={handleParameterChange}\n                        checkParameter={checkParameter}\n                        filters={filters}\n                        handleGetProductData={handleGetLensesData}\n                    />\n                )}\n\n                {productObj.type === 6 && (\n                    <ProductServiceForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        handleChange={handleChange}\n                        selectedImage={selectedImage}\n                        setImageModal={setImageModal}\n                        filters={filters}\n                    />\n                )}\n\n                {productObj.type === 5 && (\n                    <ProductAccessoriesForm\n                        product={product}\n                        productObj={productObj}\n                        isUpdating={isUpdating}\n                        currentUser={currentUser}\n                        retailNames={retailNames}\n                        selectedImage={selectedImage}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        filters={filters}\n                    />\n                )}\n\n                {productObj.type === 3 && (\n                    <ProductContactLensesForm\n                        product={product}\n                        productObj={productObj}\n\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        contactLensesParameters={contactLensesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAddNewParameter={handleAddNewParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        handleContactLensesChange={handleContactLensesChange}\n                        filters={filters}\n                        handleGetProductData={handleGetProductData}\n                    />\n                )}\n\n                {(productObj.type === 1 || productObj.type === 2 || productObj.type === 4) && (\n                    <ProductGlassesForm\n                        product={product}\n                        productObj={productObj}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        glassesParameters={glassesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleSpecsChange={handleSpecsChange}\n                        handleAvailableChange={handleAvailableChange}\n                        handleGlassesSpecsSizeChange={handleGlassesSpecsSizeChange}\n                        handleGlassesParametersChange={handleGlassesParametersChange}\n                        filters={filters}\n                        handleGetProductData={handleGetProductData}\n                    />\n                )}\n\n            </ScrollContainer>\n\n        </section >\n    )\n}\n\nexport default ProductSection\n","import { useEffect, useState } from 'react'\n\nexport const useFetch = (path, skip = false, method = \"GET\") => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [message, setMessage] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const requestOptions = {\n        method: method,\n        // headers: myHeaders,\n        // body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setMessage(data.message)\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n                setMessage(\"Niečo sa pokazilo\")\n            }\n        }\n        fetchData()\n    }, [refetchIndex])\n\n    return { response, isLoading, error, message, refetch }\n}\n\nexport const useFetchByQuery = (path, queryObj, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify(queryObj)\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path])\n\n    return { response, isLoading, error, refetch }\n}\n\nexport const useFetchById = (path, id, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}/${id}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path, id])\n\n    return { response, isLoading, error, refetch }\n}\n","\nexport const isAvailable = (available) => {\n    if (!available) return false\n    if (typeof available === \"number\") {\n        return available > 0 ? true : false\n    } else {\n        return available.reduce((acc, currValue) => acc + currValue) > 0 ? true : false\n    }\n\n}\n\nexport const formatAvailable = (available) => {\n    if (!available) return \"Nedostupné\"\n    if (typeof available === \"number\") {\n        return available > 0 ? `${available}ks` : \"Nedostupné\"\n    } else {\n        const totalCount = available.reduce((acc, currValue) => acc + currValue)\n        return totalCount > 0 ? `${totalCount}ks` : \"Nedostupné\"\n    }\n}\n\nexport const translatePaymentMethod = value => {\n    if (value === 'cash') return \"Hotovosť\"\n    if (value === 'card') return \"Karta\"\n    if (value === 'coupon') return \"Kupón\"\n    return value\n}\n\nexport const translateStatus = status => {\n    if (status === 'finished') return \"Dokončené\"\n    if (status === 'fulfilled') return \"Vybavené\"\n    if (status === 'pending') return \"Čaká na vybavenie\"\n    if (status === 'paid') return \"Zaplatené\"\n    if (status === 'half-paid') return \"Zálohované\"\n    if (status === 'cancelled') return \"Zrušené\"\n}\n"],"sourceRoot":""}
{"version":3,"sources":["sections/customer-profile/customer-profile.styles.jsx","sections/customer-profile/customer-profile.section.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","components/order-overview/order-overview.styles.jsx","components/order-overview/order-overview.component.jsx"],"names":["Header","styled","div","paddingStyles","Profile","DeleteProfileButton","CustomButton","GridContainer","ZeroMargin","GridRow","ThreeColRow","Row","SaveButton","Title","h2","Container","CustomerProfile","useContext","LoadingModalContext","closeModal","isLoading","message","showModal","UserContext","user","getUser","handleChange","handleDioptersChange","handleDistanceChange","handleCylinderChange","handleCylinderAxesChange","id","useParams","useEffect","loading","title","close","onSubmit","e","preventDefault","console","log","type","label","name","value","fName","lName","email","phone","address","psc","city","country","lenses","diopters","toString","distance","cylinder","cylinderAxes","date","totalPrice","ScrollContainer","children","OrderContainer","OrderContent","OrderId","p","Date","Price","Options","UpdateButton","DeleteButton","OrderOverview","props"],"mappings":"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","file":"static/js/10.44fa007a.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nimport { paddingStyles } from '../../global.styles'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n`\n\nexport const Profile = styled.div`\n    /* padding: 2rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08); */\n    margin-right: 2rem;\n\n`\n\nexport const Name = styled.div`\n    font-size: 4.5rem;\n    font-weight: 700;\n`\n\nexport const DeleteProfileButton = styled(CustomButton)`\n    background-color: #DD4C4C;\n    font-size: 1.4rem;\n`\n\nexport const GridContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: start;\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n    }\n`\n\nexport const ZeroMargin = styled.div`\n    input {\n        margin-bottom: 0 !important;\n    }\n`\n\nexport const GridRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n`\n\nexport const ThreeColRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-items: center;\n\n    input {\n        margin-bottom: 0 !important;\n    }\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr 1fr;\n        grid-template-areas:\n            \"a a\"\n            \"b c\";\n\n        div:nth-child(1){\n            grid-area: a;\n            margin-bottom: 0;\n        }\n        div:nth-child(2){\n            grid-area: b;\n            margin-bottom: 2rem;\n\n        }\n        div:nth-child(3){\n            grid-area: c;\n            margin-bottom: 2rem;\n        }\n    }\n`\n\nexport const Row = styled.div`\n    width: 75%;\n`\n\nexport const SaveButton = styled(CustomButton)`\n    margin-left: 2rem;\n    font-size: 1.4rem;\n`\n\nexport const Title = styled.h2`\n    margin-bottom: 2rem;\n`\n\nexport const Container = styled.div`\n    margin-top: 2rem;\n`","import React, { useState, useContext, useEffect } from 'react'\nimport { UserContext } from '../../context/user/user.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport OrderOverview from '../../components/order-overview/order-overview.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    Profile,\n    DeleteProfileButton,\n    // Name,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    SaveButton,\n    Title,\n    Container\n} from './customer-profile.styles'\n\nconst CustomerProfile = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal,\n    } = useContext(LoadingModalContext)\n\n    const {\n        user,\n        getUser,\n        handleChange,\n        handleDioptersChange,\n        handleDistanceChange,\n        handleCylinderChange,\n        handleCylinderAxesChange\n    } = useContext(UserContext)\n    const { id } = useParams()\n\n    useEffect(() => {\n        if (id !== 'novy-zakaznik') {\n            getUser(id)\n        }\n    }, [id])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (id === 'novy-zakaznik') {\n            console.log(\"Create new user\")\n        } else {\n            console.log(\"Update existing user\")\n        }\n    }\n\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <form onSubmit={handleSubmit}>\n                <Header>\n                    <h1>Profil</h1>\n                    <div>\n                        <DeleteProfileButton>Vymazať</DeleteProfileButton>\n                        <SaveButton type=\"submit\">\n                            Uložiť zmeny\n                        </SaveButton>\n                    </div>\n                </Header>\n\n                <ScrollContainer>\n                    <GridContainer>\n                        <Profile>\n                            <div>\n                                <h2>Informácie</h2>\n                                <GridRow>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Meno\"\n                                            type='text'\n                                            name='fName'\n                                            value={user.fName}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Priezvisko\"\n                                            type='text'\n                                            name='lName'\n                                            value={user.lName}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                </GridRow>\n                            </div>\n\n                            <Container>\n                                <h2>Kontaktné údaje</h2>\n                                <Row>\n                                    <div>\n                                        <CustomInput\n                                            label=\"E-mail\"\n                                            type='email'\n                                            name='email'\n                                            value={user.email}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Telefónne číslo\"\n                                            type='text'\n                                            name='phone'\n                                            value={user.phone}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                </Row>\n                            </Container>\n\n                            <Container>\n                                <h2>Fakturačné údaje</h2>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"Ulica a čislo domu\"\n                                            type='text'\n                                            name='address'\n                                            value={user.address}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"PSČ\"\n                                            type='text'\n                                            name='psc'\n                                            value={user.psc}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Mesto\"\n                                            type='text'\n                                            name='city'\n                                            value={user.city}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Krajina\"\n                                            type='text'\n                                            name='country'\n                                            value={user.country}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                </GridRow>\n                            </Container>\n\n                            <Container>\n                                <h2>Parametre</h2>\n\n                                <ThreeColRow>\n                                    <div>\n                                        Dioptrie\n                                </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Ľavé oko\"\n                                            type='text'\n                                            name='city'\n                                            value={user.lenses.diopters[0].toString()}\n                                            handleChange={(e) => handleDioptersChange(e, 0)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Pravé oko\"\n                                            type='text'\n                                            name='state'\n                                            value={user.lenses.diopters[1].toString()}\n                                            handleChange={(e) => handleDioptersChange(e, 1)}\n                                        />\n                                    </div>\n                                </ThreeColRow>\n\n                                <ThreeColRow>\n                                    <div>\n                                        Vzdialenosť\n                                </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Ľavé oko\"\n                                            type='text'\n                                            name='city'\n                                            value={user.lenses.distance[0].toString()}\n                                            handleChange={(e) => handleDistanceChange(e, 0)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Pravé oko\"\n                                            type='text'\n                                            name='state'\n                                            value={user.lenses.distance[1].toString()}\n                                            handleChange={(e) => handleDistanceChange(e, 1)}\n                                        />\n                                    </div>\n                                </ThreeColRow>\n\n                                <ThreeColRow>\n                                    <div>\n                                        Cylinder\n                                </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Ľavé oko\"\n                                            type='text'\n                                            name='city'\n                                            value={user.lenses.cylinder[0].toString()}\n                                            handleChange={(e) => handleCylinderChange(e, 0)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Pravé oko\"\n                                            type='text'\n                                            name='state'\n                                            value={user.lenses.cylinder[1].toString()}\n                                            handleChange={(e) => handleCylinderChange(e, 1)}\n                                        />\n                                    </div>\n                                </ThreeColRow>\n\n                                <ThreeColRow>\n                                    <div>\n                                        Os cylindrov\n                                </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Ľavé oko\"\n                                            type='text'\n                                            name='city'\n                                            value={user.lenses.cylinderAxes[0].toString()}\n                                            handleChange={(e) => handleCylinderAxesChange(e, 0)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Pravé oko\"\n                                            type='text'\n                                            name='state'\n                                            value={user.lenses.cylinderAxes[1].toString()}\n                                            handleChange={(e) => handleCylinderAxesChange(e, 1)}\n                                        />\n                                    </div>\n                                </ThreeColRow>\n                            </Container>\n\n\n                        </Profile>\n\n                        <div>\n                            <Title>\n                                Objednávky\n                        </Title>\n\n                            <div>\n                                <OrderOverview\n                                    name='Product name'\n                                    id='[Product ID]'\n                                    date='28. November 2020'\n                                    totalPrice='99.99'\n                                />\n                                <OrderOverview\n                                    name='Product name'\n                                    id='[Product ID]'\n                                    date='28. November 2020'\n                                    totalPrice='99.99'\n                                />\n                                <OrderOverview\n                                    name='Product name'\n                                    id='[Product ID]'\n                                    date='28. November 2020'\n                                    totalPrice='99.99'\n                                />\n                            </div>\n                        </div>\n                    </GridContainer>\n                </ScrollContainer>\n\n            </form>\n        </section>\n    )\n}\n\nexport default CustomerProfile\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`","import React from 'react'\nimport { Container } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            {children}\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const OrderContainer = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 25rem;\n\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    padding: 2rem;\n\n    &:not(:last-child) {\n        margin-bottom: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n\n    }\n`\n\nexport const OrderContent = styled.div`\n    h2 {\n        font-size: 1.6rem;\n    }\n`\n\nexport const OrderId = styled.p`\n    font-size: 1.2rem;\n    color: gray;\n    margin-bottom: 2rem;\n`\n\nexport const Date = styled.p`\n    font-size: 1.4rem;\n    /* font-weight: 700; */\n    color: gray;\n    margin-bottom: 2rem;\n`\n\nexport const Price = styled.p`\n    font-weight: 700;\n    font-size: 1.8rem;\n`\n\nexport const Options = styled.div`\n    align-self: end;\n    justify-self: end;\n`\n\nexport const UpdateButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    margin-right: 1rem;\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    background-color: rgb(235, 172, 1);\n`","import React from 'react'\n\nimport {\n    OrderContainer,\n    OrderContent,\n    Options,\n    OrderId,\n    Date,\n    DeleteButton,\n    Price,\n    UpdateButton\n} from './order-overview.styles'\n\nconst OrderOverview = (props) => {\n    const { name, id, date, totalPrice } = props\n\n    return (\n        <OrderContainer>\n\n            <OrderContent>\n                <h2>{name}</h2>\n                <OrderId>{id}</OrderId>\n                <Date>{date}</Date>\n                <Price>{totalPrice}€</Price>\n            </OrderContent>\n\n            <Options>\n                <UpdateButton>\n                    Upraviť\n                </UpdateButton>\n                <DeleteButton>\n                    Vymazať\n                </DeleteButton>\n            </Options>\n\n        </OrderContainer>\n    )\n}\n\nexport default OrderOverview\n"],"sourceRoot":""}
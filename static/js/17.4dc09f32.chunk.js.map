{"version":3,"sources":["components/product-glasses-form/product-glasses-form.styles.jsx","components/product-glasses-form/product-glasses-form.component.jsx","components/product-lenses-form/product-lenses-form.styles.jsx","components/product-lenses-form/product-lenses-form.component.jsx","components/product-accessories-form/product-accessories-form.styles.jsx","components/product-accessories-form/product-accessories-form.component.jsx","components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx","components/product-contact-lenses-form/product-contact-lenses-form.component.jsx","components/product-service-form/product-service-form.styles.jsx","components/product-service-form/product-service-form.component.jsx","sections/product/product.styles.jsx","sections/product/product.section.jsx","hooks/useFetch.jsx","utils/warehouse.utils.jsx"],"names":["BrandedCheckbox","styled","CustomCheckbox","ImageContainer","div","ProductImage","hasImage","GlassesContainerForm","GlassesContainer","GlassesParameterContainer","StockContainer","CustomSelect","select","ProductGlassesForm","product","handleChange","selectedImage","retailNames","currentUser","checkParameter","handleAvailableChange","handleGlassesParametersChange","handleGlassesSpecsSizeChange","handleSpecsChange","glassesParameters","setImageModal","isUpdating","filters","useState","isBranded","setIsBranded","useEffect","brand","label","type","name","value","eanCode","toString","e","isActive","handleClick","target","Fragment","list","id","brands","map","idx","link","rows","description","required","price","onClick","src","process","imagePath","alt","colorCode","specs","frameColor","frameMaterial","frameStyle","lensColor","sex","onChange","size","admin","available","premises","LensesFormContainer","LensesContainer","LensesParametersContainer","ProductLensesForm","lenses","handleParameterChange","Array","inputLabel","dioptersRange","cylinderRange","AccessoriesFormContainer","AccessoriesContainer","ProductAccessoriesForm","ContactLensesFormContainer","ContactLensesContainer","ContactLensesParametersContainer","IncreaseButton","CustomButton","ProductContactLensesForm","handleContactLensesChange","handleAddNewParameter","contactLensesParameters","allowedCurves","allowedDiameters","ServiceFormContainer","ServiceContainer","ProductServiceForm","Header","paddingStyles","SubmitButton","IsPublicCheckbox","CategoryContainer","CategoryCheckbox","ProductSection","useParams","useContext","AuthContext","LoadingModalContext","closeModal","message","isLoading","showModal","getMessage","setShowModal","ImageContext","setSelectedImage","showImageModal","setIsUpdating","WarehouseContext","handleLensesChange","handleLensesParameterChange","createProduct","updateProduct","resetProduct","resetLenses","resetContactLenses","resetGlassesParameters","createLenses","updateLenses","handleProductChange","handleProductAvailableChange","getEanCode","handleContactLensesParameterChange","handleGlassesParameterChange","handleGlassesParameterSpecsChange","handleGlassesSizeChange","getSingleProduct","hasChanged","setHasChanged","productObj","setProductObj","useFetch","response","isLoadingFilters","refetch","setFilters","handleChangeType","Object","keys","length","window","confirm","formatLink","arr","Number","undefined","image","when","loading","title","close","setImage","imgId","eshop","preventDefault","newProductObj","contactLenses","productCategories","category","splice","firstIndex","find","path","skip","method","setResponse","error","setError","setMessage","setIsLoading","refetchIndex","setRefetchIndex","prevRefetchIndex","requestOptions","redirect","a","fetch","res","json","data","fetchData","useFetchByQuery","queryObj","myHeaders","Headers","append","localStorage","getItem","raw","JSON","stringify","headers","body","useFetchById","retailNamesTabs","formatPrice","includes","split","formatfloatNumber","number","console","log"],"mappings":"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","file":"static/js/17.4dc09f32.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\nexport const BrandedCheckbox = styled(CustomCheckbox)`\n    margin-top: 2rem;\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const GlassesContainerForm = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const GlassesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`\n\nexport const GlassesParameterContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n    margin-bottom: 3rem;\n\n    h4 {\n        margin-top: 2rem;\n    }\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: var(--input-background-color);\n    color: var(--input-color);\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`","import React, { useState, useEffect } from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\n// import { brands } from '../../utils/warehouse.utils'\n\nimport {\n    ImageContainer,\n    ProductImage,\n    GlassesContainerForm,\n    GlassesContainer,\n    GlassesParameterContainer,\n    StockContainer,\n    CustomSelect,\n    BrandedCheckbox\n} from './product-glasses-form.styles.jsx'\n\nconst ProductGlassesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    retailNames,\n    currentUser,\n    checkParameter,\n    handleAvailableChange,\n    handleGlassesParametersChange,\n    handleGlassesSpecsSizeChange,\n    handleSpecsChange,\n    glassesParameters,\n    setImageModal,\n    isUpdating,\n    filters\n}) => {\n    const [isBranded, setIsBranded] = useState(true)\n\n\n    const handleIsBrandedClick = (isBrandedBool) => {\n        if (isBrandedBool) {\n            handleChange({\n                target: {\n                    name: \"brand\",\n                    value: \"Neznačkové\"\n                }\n            })\n            setIsBranded(false)\n        } else {\n            handleChange({\n                target: {\n                    name: \"brand\",\n                    value: \"\"\n                }\n            })\n\n            setIsBranded(true)\n\n        }\n    }\n\n    useEffect(() => {\n        if (product.brand === \"Neznačkové\") setIsBranded(false)\n    }, [isBranded])\n\n    return (\n        <GlassesContainerForm>\n            <GlassesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='eanCode'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov produktu*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <BrandedCheckbox\n                    label={\"Značkové\"}\n                    isActive={isBranded}\n                    handleClick={() => handleIsBrandedClick(isBranded)}\n                />\n\n                {isBranded && (\n                    <React.Fragment>\n                        <CustomInput\n                            label=\"Značka\"\n                            type='text'\n                            name='brand'\n                            value={product.brand ?? \"\"}\n                            handleChange={(e) => handleChange(e)}\n                            list=\"brands\"\n                        />\n                        <datalist id=\"brands\">\n                            {filters?.brands && filters?.brands.map((brand, idx) => (\n                                <option key={idx} value={brand} />\n                            ))}\n                        </datalist>\n                    </React.Fragment>\n                )}\n\n                {/* <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"categories\"\n\n                /> */}\n\n                {/* <datalist id=\"categories\">\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist> */}\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </GlassesContainer>\n            <div>\n                <GlassesParameterContainer>\n                    <h3>Parametre</h3>\n                    <CustomInput\n                        label=\"Farebný kód\"\n                        type='text'\n                        name='colorCode'\n                        value={glassesParameters.colorCode ?? \"\"}\n                        handleChange={(e) => handleGlassesParametersChange(e)}\n                    />\n                    <div>\n                        <CustomInput\n                            label=\"Farba rámu\"\n                            type='text'\n                            name='frameColor'\n                            value={glassesParameters.specs.frameColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Materiál rámu\"\n                            type='text'\n                            name='frameMaterial'\n                            value={glassesParameters.specs.frameMaterial ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Tvar rámu\"\n                            type='text'\n                            name='frameStyle'\n                            value={glassesParameters.specs.frameStyle ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Farba šošovky\"\n                            type='text'\n                            name='lensColor'\n                            value={glassesParameters.specs.lensColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomSelect\n                            label=\"Pohlavie\"\n                            type='text'\n                            name='sex'\n                            value={glassesParameters?.specs?.sex || \"\"}\n                            onChange={(e) => handleSpecsChange(e)}\n                        >\n                            <option value=''>-</option>\n                            <option value='M'>Pánske</option>\n                            <option value='W'>Dámske</option>\n                            <option value='CH'>Detské</option>\n                            <option value='U'>Nezáleží</option>\n                        </CustomSelect>\n                    </div>\n                    <div>\n                        <h4>Velkosť</h4>\n                        {glassesParameters.specs.size.map((value, idx) => (\n                            <CustomInput\n                                key={idx}\n                                label={idx === 0 ? \"Šírka očnice (mm)\" : idx === 1 ? \"Výška očnice (mm)\" : idx === 2 ? \"Veľkosť nosníka (mm)\" : \"Dĺžka stranice (mm)\"}\n                                type='text'\n                                name='size'\n                                value={checkParameter(glassesParameters.specs.size, idx)}\n                                handleChange={(e) => handleGlassesSpecsSizeChange(e, idx)}\n                            />\n                        ))}\n                    </div>\n                </GlassesParameterContainer>\n                {currentUser.admin >= 2 ? (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        {product.available.map((value, idx) => {\n                            if (idx === 0) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </StockContainer>\n                ) : (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        <CustomInput\n                            label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[currentUser.premises]}\n                            type='number'\n                            name={\"available\"}\n                            value={checkParameter(product.available, currentUser.premises)}\n                            handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                        />\n                    </StockContainer>\n                )}\n            </div>\n        </GlassesContainerForm>\n    )\n}\n\nexport default ProductGlassesForm\n","import styled from 'styled-components'\n\n\nexport const LensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const LensesContainer = styled.div`\n    /* width: 45rem; */\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n    /* display: inline-block; */\n    /* padding-bottom: 4rem;  */\n    margin-bottom: 5rem;\n`\n\nexport const LensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n\n    h3 {\n        /* margin-bottom: 1rem; */\n    }\n\n    h4 {\n        margin-top: 2rem;\n    }\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    LensesFormContainer,\n    LensesContainer,\n    LensesParametersContainer,\n    ProductImage,\n    ImageContainer,\n} from './product-lenses-form.styles'\n\nconst ProductLensesForm = ({\n    lenses,\n    selectedImage,\n    setImageModal,\n    handleChange,\n    handleParameterChange,\n    checkParameter,\n    filters\n\n}) => {\n    return (\n        <LensesFormContainer>\n            <LensesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='eanCode'\n                    value={lenses?.eanCode?.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov šošoviek*\"\n                    type='text'\n                    name='name'\n                    value={lenses.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka*\"\n                    type='text'\n                    name='brand'\n                    value={lenses.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"brands\"\n                />\n\n                <datalist id=\"brands\">\n                    {filters?.brands && filters?.brands.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist>\n\n                <CustomTextarea\n                    label=\"Popis*\"\n                    name='description'\n                    rows='5'\n                    value={lenses.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={lenses.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </LensesContainer>\n            <LensesParametersContainer>\n                <h3>Parametre</h3>\n\n                <h4>Dioptrie</h4>\n                {[...Array(2)].map((value, idx) => {\n                    const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\n\n                    return (\n                        <div key={idx}>\n                            <CustomInput\n                                label={inputLabel}\n                                type='number'\n                                name='dioptersRange'\n                                value={checkParameter(lenses.dioptersRange, idx)}\n                                handleChange={(e) => handleParameterChange(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n\n                <h4>Cylinder</h4>\n                {[...Array(2)].map((value, idx) => {\n                    const inputLabel = idx === 0 ? \"minimum*\" : \"maximum*\"\n\n                    return (\n                        <div key={idx}>\n                            <CustomInput\n                                label={inputLabel}\n                                type='number'\n                                name='cylinderRange'\n                                value={checkParameter(lenses.cylinderRange, idx)}\n                                handleChange={(e) => handleParameterChange(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n            </LensesParametersContainer>\n        </LensesFormContainer>\n    )\n}\n\nexport default ProductLensesForm\n","import styled from 'styled-components'\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const AccessoriesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const AccessoriesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    AccessoriesFormContainer,\n    AccessoriesContainer,\n    StockContainer,\n    ImageContainer,\n    ProductImage,\n} from './product-accessories-form.styles'\n\nconst ProductAccessoriesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    setImageModal,\n    handleAvailableChange,\n    checkParameter,\n    retailNames,\n    currentUser,\n    isUpdating,\n    filters\n}) => {\n    return (\n        <AccessoriesFormContainer>\n            <AccessoriesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"brands\"\n                />\n\n                <datalist id=\"brands\">\n                    {filters?.brands && filters?.brands.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist>\n\n                {/* <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"categories\"\n\n                />\n\n                <datalist id=\"categories\">\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist> */}\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </AccessoriesContainer>\n            {currentUser.admin >= 2 ? (\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    {product.available.map((value, idx) => {\n                        if (idx === 0) return\n                        return (\n                            <CustomInput\n                                key={idx}\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, idx)}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        )\n                    })}\n                </StockContainer>\n            ) : (\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    <CustomInput\n                        label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[currentUser.premises]}\n                        type='number'\n                        name={\"available\"}\n                        value={checkParameter(product.available, currentUser.premises)}\n                        handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                    />\n                </StockContainer>\n            )}\n        </AccessoriesFormContainer>\n    )\n}\n\nexport default ProductAccessoriesForm\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`\n\nexport const ContactLensesFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const ContactLensesContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`\n\nexport const ContactLensesParametersContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n    margin-bottom: 3rem;\n\n    h4 {\n        margin-top: 1rem;\n    }\n`\n\nexport const IncreaseButton = styled(CustomButton)`\n    margin-top: 2rem;\n    font-size: 1.4rem;\n\n`\n\nexport const StockContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n\n    border-radius: .5rem;\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\n// import { lensesBrands } from '../../utils/warehouse.utils'\n\nimport {\n    ContactLensesContainer,\n    ContactLensesFormContainer,\n    StockContainer,\n    ContactLensesParametersContainer,\n    IncreaseButton,\n    ImageContainer,\n    ProductImage,\n} from './product-contact-lenses-form.styles'\n\nconst ProductContactLensesForm = ({\n    product,\n    handleChange,\n    setImageModal,\n    selectedImage,\n    checkParameter,\n    handleContactLensesChange,\n    handleAddNewParameter,\n    contactLensesParameters,\n    retailNames,\n    currentUser,\n    handleAvailableChange,\n    isUpdating,\n    filters\n}) => {\n    return (\n        <ContactLensesFormContainer>\n            <ContactLensesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"brands\"\n                />\n                <datalist id=\"brands\">\n                    {filters?.brands && filters?.brands.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist>\n                {/* \n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"categories\"\n                />\n\n                <datalist id=\"categories\">\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist> */}\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </ContactLensesContainer>\n            <div>\n                <ContactLensesParametersContainer>\n                    <h3>Parametre</h3>\n                    <div>\n                        <h4>Zakrivenie</h4>\n                        {contactLensesParameters.allowedCurves.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedCurves\"}\n                                    value={checkParameter(contactLensesParameters.allowedCurves, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedCurves'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n                    <div>\n                        <h4>Priemery</h4>\n                        {contactLensesParameters.allowedDiameters.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedDiameters\"}\n                                    value={checkParameter(contactLensesParameters.allowedDiameters, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedDiameters'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n\n                    <div>\n                        <h4>Dioptrie</h4>\n                        {contactLensesParameters.dioptersRange.map((value, idx) => {\n                            const inputLabel = idx === 0 ? \"minimum\" : \"maximum\"\n\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={inputLabel}\n                                    type='text'\n                                    name={\"dioptersRange\"}\n                                    value={checkParameter(contactLensesParameters.dioptersRange, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </div>\n                </ContactLensesParametersContainer>\n\n                {currentUser.admin >= 2 ? (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        {product.available.map((value, idx) => {\n                            if (idx === 0) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </StockContainer>\n                ) : (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        <CustomInput\n                            label={currentUser.admin === 1 ? retailNames[currentUser.premises] : retailNames[currentUser.premises]}\n                            type='number'\n                            name={\"available\"}\n                            value={checkParameter(product.available, currentUser.premises)}\n                            handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                        />\n                    </StockContainer>\n                )}\n            </div>\n        </ContactLensesFormContainer>\n    )\n}\n\nexport default ProductContactLensesForm\n","import styled from 'styled-components'\n\nexport const ServiceFormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const ServiceContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n`\n\nexport const ImageContainer = styled.div`\n    margin-top: 2rem;\n    \n`\n\nexport const ProductImage = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items: center;\n    justify-content:center;\n    background-color: ${({ hasImage }) => hasImage ? \"transparent\" : \"var(--input-background-color)\"};\n    margin: 3rem 0 2rem;\n    min-height: 20rem;\n    position: relative;\n    /* max-width: 45rem; */\n\n    img {\n        width: 100%;\n        object-fit:cover;\n        object-position:center;\n        left: 0;\n        top: 0;\n    }\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\n\nimport {\n    ServiceFormContainer,\n    ServiceContainer,\n    ImageContainer,\n    ProductImage\n} from './product-service-form.styles'\n\nconst ProductServiceForm = ({\n    product,\n    isUpdating,\n    handleChange,\n    selectedImage,\n    setImageModal,\n}) => {\n    return (\n        <ServiceFormContainer>\n            <ServiceContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Názov služby*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </ServiceContainer>\n        </ServiceFormContainer>\n    )\n}\n\nexport default ProductServiceForm\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\nimport CustomButton from '../../components/custom-button/custom-button.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n\nexport const Header = styled.div`\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n    color: var(--primary-text-color);\n\n`\n\nexport const SubmitButton = styled(CustomButton)`\n\n`\n\nexport const IsPublicCheckbox = styled(CustomCheckbox)`\n    margin-right: 2rem;\n`\n\n\nexport const CategoryContainer = styled.div`\n    padding: 2rem; \n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    border-radius: .5rem;\n    display: inline-block;\n    margin-bottom: 3rem;\n\n    h3 {\n        margin-bottom: 1.5rem;\n    }\n`\nexport const CategoryCheckbox = styled(CustomCheckbox)`\n    &:not(:last-child) {\n        margin-right: 2rem;\n    }\n`","import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\nimport ProductAccessoriesForm from '../../components/product-accessories-form/product-accessories-form.component'\nimport ProductContactLensesForm from '../../components/product-contact-lenses-form/product-contact-lenses-form.component'\nimport ProductServiceForm from '../../components/product-service-form/product-service-form.component'\n\nimport { productCategories, checkParameter, formatLink } from '../../context/warehouse/warehouse.utils'\nimport { retailNames } from '../../utils/warehouse.utils'\nimport { useFetch } from '../../hooks/useFetch'\n\nimport {\n    FixedContainer\n} from '../../global.styles'\n\nimport {\n    Header,\n    CategoryContainer,\n    CategoryCheckbox,\n    SubmitButton,\n    IsPublicCheckbox,\n\n} from './product.styles'\n\nconst ProductSection = () => {\n    const { id } = useParams()\n    const { currentUser } = useContext(AuthContext)\n    const { closeModal, message, isLoading, showModal, getMessage, setShowModal } = useContext(LoadingModalContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const {\n        eanCode,\n        product,\n        lenses,\n        contactLensesParameters,\n        glassesParameters,\n        handleLensesChange,\n        handleLensesParameterChange,\n        createProduct,\n        updateProduct,\n        resetProduct,\n        resetLenses,\n        resetContactLenses,\n        resetGlassesParameters,\n        createLenses,\n        updateLenses,\n        handleProductChange,\n        handleProductAvailableChange,\n        getEanCode,\n        handleAddNewParameter,\n        handleContactLensesParameterChange,\n        handleGlassesParameterChange,\n        handleGlassesParameterSpecsChange,\n        handleGlassesSizeChange,\n        getSingleProduct\n    } = useContext(WarehouseContext)\n\n    const [hasChanged, setHasChanged] = useState(false)\n    const [productObj, setProductObj] = useState({})\n\n\n    const { response, isLoading: isLoadingFilters, refetch } = useFetch(`api/store/products/${productObj?.type}/filters`, !productObj?.type, \"GET\")\n    const [filters, setFilters] = useState(null)\n\n    const handleChangeType = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (!isUpdating) {\n            if (productObj.type === 0) {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetLenses()\n                    } else {\n                        return\n                    }\n                }\n            } else {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetProduct()\n                        resetContactLenses()\n                        resetGlassesParameters()\n                    } else {\n                        return\n                    }\n                }\n            }\n        }\n        setProductObj({\n            [name]: value\n        })\n\n    }\n\n    const handleChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (productObj.type === 0) {\n            handleLensesChange(e)\n        }\n\n        if (productObj.type === 6) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 5) {\n            handleProductChange(e)\n        }\n\n        if (productObj.type === 4) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 3) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 2) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 1) {\n            handleProductChange(e)\n        }\n\n\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        if (isUpdating) {\n            if (name === 'name') {\n                setProductObj({\n                    ...productObj,\n                    [name]: value,\n                    link: formatLink(value)\n                })\n                return\n            }\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParametersChange = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterChange(e)\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleSpecsChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterSpecsChange(e)\n\n        if (value === '') {\n            delete productObj.specs[name]\n\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSpecsSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleGlassesSizeChange(e, idx)\n\n        if (value === '') {\n            if (productObj.specs[name].length > 1) {\n                arr[idx] = 1001\n\n                const firstIndex = arr[0]\n                const canDeleteSpecs = arr.map(value => {\n                    if (firstIndex !== value) {\n                        return false\n                    } else {\n                        return true\n                    }\n                })\n\n                const verdict = canDeleteSpecs.find(value => value === false)\n\n                if (verdict === false) {\n                    setProductObj({\n                        ...productObj,\n                        specs: {\n                            ...productObj.specs,\n                            [name]: arr\n                        }\n                    })\n                } else {\n                    delete productObj.specs[name]\n                }\n\n            }\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleProductAvailableChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleContactLensesChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleContactLensesParameterChange(e, idx)\n\n        if (value === '') {\n            if (productObj.contactLenses[name].length > 1) {\n                arr.splice(idx, 1)\n                setProductObj({\n                    ...productObj,\n                    contactLenses: {\n                        ...productObj.contactLenses,\n                        [name]: arr\n                    }\n                })\n            } else {\n                delete productObj.contactLenses[name]\n            }\n            if (Object.keys(productObj.contactLenses).length === 0) {\n                delete productObj[\"contactLenses\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            contactLenses: {\n                ...productObj.contactLenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleLensesParameterChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleSelectImage = (imgId) => {\n        setHasChanged(true)\n        setProductObj({\n            ...productObj,\n            image: imgId\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        let newProductObj = {\n            ...productObj\n        }\n\n        if (currentUser.admin < 2) {\n            if (newProductObj.available) {\n                newProductObj = {\n                    ...productObj,\n                    available: productObj.available[currentUser.premises]\n                }\n            }\n        } else {\n            if (newProductObj.available) {\n                newProductObj = {\n                    ...productObj,\n                    available: newProductObj.available ? newProductObj.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0, 0]\n                }\n            }\n        }\n\n        if (isUpdating) {\n            if (newProductObj.type === 0) {\n                setHasChanged(false)\n                delete newProductObj['link']\n                delete newProductObj['type']\n                updateLenses(newProductObj)\n                return\n            } else if (newProductObj.type === 3) {\n                setHasChanged(false)\n                delete newProductObj['type']\n                updateProduct({ ...newProductObj, contactLenses: {} })\n                return\n            } else {\n                setHasChanged(false)\n                delete newProductObj['type']\n                updateProduct(newProductObj)\n                return\n            }\n        } else {\n            if (newProductObj.type === 0) {\n                if (!newProductObj.name || !newProductObj.brand || !newProductObj.description || !newProductObj.price || !newProductObj.image || !newProductObj.dioptersRange || !newProductObj.cylinderRange) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    delete newProductObj['type']\n                    createLenses(newProductObj)\n                }\n            }\n            if (newProductObj.type === 6 || newProductObj.type === 5 || newProductObj.type === 4 || newProductObj.type === 3 || newProductObj.type === 2 || newProductObj.type === 1) {\n                if (!newProductObj.name || !newProductObj.price || !newProductObj.image) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    createProduct(newProductObj)\n                }\n            }\n        }\n\n\n    }\n\n    useEffect(() => {\n        if (!productObj?.type) return\n        setFilters(null)\n        refetch()\n    }, [productObj?.type])\n\n    useEffect(() => {\n        if (isLoadingFilters) return\n        if (response?.filters) {\n            setFilters(response?.filters)\n        }\n    }, [isLoadingFilters])\n\n    useEffect(() => {\n        if (id === \"novy-produkt\") {\n            if (!eanCode) {\n                getEanCode()\n            } else {\n                if (productObj.type !== undefined) {\n                    handleChange({\n                        target: {\n                            name: \"eanCode\",\n                            value: eanCode\n                        }\n                    })\n                }\n            }\n        }\n    }, [id, eanCode, productObj.type, productObj.eanCode, product.type])\n\n    useEffect(() => {\n        if (id !== 'novy-produkt') {\n            getSingleProduct(id)\n            setIsUpdating(true)\n            if (!productObj.type) {\n                handleChangeType({\n                    target: {\n                        name: \"type\",\n                        value: product.type\n                    }\n                })\n\n            }\n        }\n    }, [id, product.type])\n\n    useEffect(() => {\n        if (product.image) {\n            setSelectedImage(product.image)\n        }\n        if (lenses.image) {\n            setSelectedImage(lenses.image)\n        }\n    }, [product.image, lenses.image])\n\n    useEffect(() => {\n        return () => {\n            resetProduct()\n            resetLenses()\n            resetContactLenses()\n            resetGlassesParameters()\n            setProductObj({})\n            setSelectedImage(null)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <section>\n            <Prompt\n                when={hasChanged}\n                message=\"Chcete opustiť formulár?\"\n            />\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={handleSelectImage} />}\n            <Header>\n                <FixedContainer>\n\n                    <div>\n                        <h1>{isUpdating ? \"Upraviť produkt\" : \"Nový produkt\"}</h1>\n                    </div>\n                    <div>\n                        <IsPublicCheckbox\n                            label=\"Verejné\"\n                            // value={product.ehop}\n                            name='eshop'\n                            isActive={product.eshop}\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"eshop\",\n                                    value: !product.eshop\n                                }\n                            })}\n                        />\n                        <SubmitButton onClick={handleSubmit}>{isUpdating ? \"Upraviť\" : \"Vytvoriť\"}</SubmitButton>\n                    </div>\n                </FixedContainer>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating && <CategoryContainer>\n                    <h3>Aký produkt chcete pridať?</h3>\n                    {productCategories.map((category, idx) => (\n                        <CategoryCheckbox\n                            key={idx}\n                            label={category.name}\n                            value={category.value}\n                            name='type'\n                            isActive={category.value === productObj.type}\n                            handleClick={() => handleChangeType({\n                                target: {\n                                    name: \"type\",\n                                    value: category.value\n                                }\n                            })}\n                        />\n                    ))}\n                </CategoryContainer>}\n\n                {productObj.type === 0 && (\n                    <ProductLensesForm\n                        lenses={lenses}\n                        selectedImage={selectedImage}\n                        setImageModal={setImageModal}\n                        handleChange={handleChange}\n                        handleParameterChange={handleParameterChange}\n                        checkParameter={checkParameter}\n                        filters={filters}\n                    />\n                )}\n\n                {productObj.type === 6 && (\n                    <ProductServiceForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        handleChange={handleChange}\n                        selectedImage={selectedImage}\n                        setImageModal={setImageModal}\n                        filters={filters}\n                    />\n                )}\n\n                {productObj.type === 5 && (\n                    <ProductAccessoriesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        currentUser={currentUser}\n                        retailNames={retailNames}\n                        selectedImage={selectedImage}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        filters={filters}\n                    />\n                )}\n\n                {productObj.type === 3 && (\n                    <ProductContactLensesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        contactLensesParameters={contactLensesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAddNewParameter={handleAddNewParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        handleContactLensesChange={handleContactLensesChange}\n                        filters={filters}\n                    />\n                )}\n\n                {(productObj.type === 1 || productObj.type === 2 || productObj.type === 4) && (\n                    <ProductGlassesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        glassesParameters={glassesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleSpecsChange={handleSpecsChange}\n                        handleAvailableChange={handleAvailableChange}\n                        handleGlassesSpecsSizeChange={handleGlassesSpecsSizeChange}\n                        handleGlassesParametersChange={handleGlassesParametersChange}\n                        filters={filters}\n                    />\n                )}\n\n            </ScrollContainer>\n\n        </section >\n    )\n}\n\nexport default ProductSection\n","import { useEffect, useState } from 'react'\n\nexport const useFetch = (path, skip = false, method = \"GET\") => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [message, setMessage] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const requestOptions = {\n        method: method,\n        // headers: myHeaders,\n        // body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setMessage(data.message)\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n                setMessage(\"Niečo sa pokazilo\")\n            }\n        }\n        fetchData()\n    }, [refetchIndex])\n\n    return { response, isLoading, error, message, refetch }\n}\n\nexport const useFetchByQuery = (path, queryObj, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify(queryObj)\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path])\n\n    return { response, isLoading, error, refetch }\n}\n\nexport const useFetchById = (path, id, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}/${id}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path, id])\n\n    return { response, isLoading, error, refetch }\n}\n","export const brands = [\n    \"Adidas\",\n    \"Armani Exchange\",\n    \"Arnette\",\n    \"Blackfin\",\n    \"Blumarine\",\n    \"Burberry\",\n    \"Bvlgari\",\n    \"Calvin Klein\",\n    \"Carolina Herrera\",\n    \"Carrera\",\n    \"David Beckham\",\n    \"Dior\",\n    \"Dolce & Gabbana\",\n    \"Elle\",\n    \"Emporio Armani\",\n    \"Esprit\",\n    \"Etnia Barcelona\",\n    \"Fendi\",\n    \"Fossil\",\n    \"Furla\",\n    \"Giorgio Armani\",\n    \"Givenchy\",\n    \"Gucci\",\n    \"Guess\",\n    \"H.I.S\",\n    \"Hawkers\",\n    \"Hugo Boss\",\n    \"Jaguar\",\n    \"Jimmy Choo\",\n    \"Lacoste\",\n    \"Liu Jo\",\n    \"Marc Jacobs\",\n    \"Max Mara\",\n    \"Max&Co\",\n    \"Meller\",\n    \"Mexx\",\n    \"Michael Kors\",\n    \"Moschino\",\n    \"Oakley\",\n    \"Persol\",\n    \"Polaroid\",\n    \"Police\",\n    \"Polo Ralph Lauren\",\n    \"Prada\",\n    \"Prada Linea Rossa\",\n    \"Ralph\",\n    \"Ralph Lauren\",\n    \"Ray-Ban\",\n    \"Salvatore Ferragamo\",\n    \"Smith\",\n    \"Strellson\",\n    \"Tiffany&Co.\",\n    \"Tom Ford\",\n    \"Tommy Hilfiger\",\n    \"Versace\",\n    \"Vogue\"\n]\n\nexport const lensesBrands = [\n    \"Acuvue\",\n    \"Adore\",\n    \"Air Optix\",\n    \"Biofinity\",\n    \"Biomedics\",\n    \"Clariti\",\n    \"ColourVue\",\n    \"Comfilcon A\",\n    \"Dailies\",\n    \"Freshlook\",\n    \"Lenjoy\",\n    \"Proclear\",\n    \"Purevision\",\n    \"Soflens\",\n]\n\nexport const retailNames = [\n    \"Obchodná 57, Bratislava\",\n    \"Obchodná 57, Bratislava\",\n    \"Miletičova 38, Bratislava\",\n    \"Vajnory, Bratislava\",\n    \"Senica, OC Branč\",\n    \"Vajnorská 53, Bratislava\",\n    // \"Trnava, City Aréna\"\n]\n\nexport const retailNamesTabs = [\n    {\n        id: 0,\n        name: \"E-shop\",\n    },\n    {\n        id: 1,\n        name: \"Obchodná 57, Bratislava\",\n    },\n    {\n        id: 2,\n        name: \"Miletičova 38, Bratislava\",\n    },\n    {\n        id: 3,\n        name: \"Vajnory, Bratislava\",\n    },\n    {\n        id: 4,\n        name: \"Senica, OC Branč\",\n    },\n    {\n        id: 5,\n        name: \"Vajnorská 53, Bratislava\",\n    },\n]\n\nexport const formatPrice = (price = \"\") => {\n    price.toString()\n    let value = 0\n    if (price.includes(',')) {\n        if (price.split(',')[1].length === 1) {\n            value = price.split(',')[0] + price.split(',')[1] + \"0\"\n            return Number(value)\n        } else {\n            value = price.split(',')[0] + price.split(',')[1]\n            return Number(value)\n        }\n    } else {\n        return Number(price * 100)\n    }\n}\n\nexport const formatfloatNumber = number => {\n    let value = 0\n\n    console.log(number)\n\n    if (number.includes(',')) {\n        value = number.split(',')[0] + '.' + number.split(',')[1]\n        return value\n    } else {\n        return number\n    }\n}"],"sourceRoot":""}
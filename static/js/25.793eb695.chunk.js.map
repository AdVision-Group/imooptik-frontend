{"version":3,"sources":["context/booking/booking.context.jsx"],"names":["BookingContext","createContext","createCalendar","updateCalendar","deleteCalendar","createBooking","updateBooking","deleteBooking","createUserBooking","BookingProvider","children","push","useHistory","token","useContext","AuthContext","LoadingModalContext","getMessage","setIsLoading","setShowModal","closeModal","myHeaders","Headers","append","calendarToAdd","a","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","process","response","json","data","calendar","message","console","log","calendarToUpdate","calendarId","bookingToAdd","booking","bookingToUpdate","bookingId","userBookingToAdd","Provider","value"],"mappings":"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","file":"static/js/25.793eb695.chunk.js","sourcesContent":["import React, { createContext, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport { useHistory } from 'react-router-dom'\n\nexport const BookingContext = createContext({\n    createCalendar: () => { },\n    updateCalendar: () => { },\n    deleteCalendar: () => { },\n    createBooking: () => { },\n    updateBooking: () => { },\n    deleteBooking: () => { },\n    createUserBooking: () => { },\n})\n\nconst BookingProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token } = useContext(AuthContext)\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const createCalendar = async (calendarToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(calendarToAdd);\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/booking/calendars`, requestOptions)\n            const data = await response.json()\n\n            if (data.calendar) {\n                setIsLoading(false)\n                closeModal()\n                push('/dashboard/rezervacie')\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateCalendar = async (calendarToUpdate, calendarId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(calendarToUpdate);\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/booking/calendars/${calendarId}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n\n            if (data.calendar) {\n                setIsLoading(false)\n                closeModal()\n                push('/dashboard/rezervacie')\n                return\n            }\n\n\n            setIsLoading(false)\n            getMessage(data.message)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteCalendar = async (calendarId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            // body: raw,\n            redirect: 'follow'\n        };\n\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/booking/calendars/${calendarId}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            setIsLoading(false)\n            getMessage(data.message)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createBooking = async (bookingToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(bookingToAdd);\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/booking/bookings`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.booking) {\n                setIsLoading(false)\n                closeModal()\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateBooking = async (bookingToUpdate, bookingId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(bookingToUpdate);\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/booking/bookings/${bookingId}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            setIsLoading(false)\n            getMessage(data.message)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteBooking = async (bookingId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/booking/bookings/${bookingId}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            setIsLoading(false)\n            getMessage(data.message)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createUserBooking = async (userBookingToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(userBookingToAdd);\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/booking/userBookings`, requestOptions)\n            const data = await response.json()\n\n            console.log(\"USERBOOKING RESPONSE\")\n            console.log(data)\n\n\n            setIsLoading(false)\n            getMessage(data.message)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n\n    return (\n        <BookingContext.Provider\n            value={{\n                createCalendar,\n                updateCalendar,\n                deleteCalendar,\n                createBooking,\n                updateBooking,\n                deleteBooking,\n                createUserBooking\n            }}\n        >\n            {children}\n        </BookingContext.Provider>\n    )\n}\n\nexport default BookingProvider"],"sourceRoot":""}
{"version":3,"sources":["context/booking/booking.context.jsx"],"names":["BookingContext","createContext","createCalendar","updateCalendar","deleteCalendar","BookingProvider","children","push","useHistory","token","useContext","AuthContext","LoadingModalContext","getMessage","setIsLoading","setShowModal","closeModal","myHeaders","Headers","append","calendarToAdd","a","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","process","response","json","data","calendar","message","console","log","calendarToUpdate","calendarId","Provider","value"],"mappings":"6NAKaA,EAAiBC,wBAAc,CACxCC,eAAgB,aAChBC,eAAgB,aAChBC,eAAgB,eAwHLC,UArHS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACfC,EAASC,cAATD,KACAE,EAAUC,qBAAWC,KAArBF,MAF8B,EAQlCC,qBAAWE,KAJXC,EAJkC,EAIlCA,WACAC,EALkC,EAKlCA,aACAC,EANkC,EAMlCA,aACAC,EAPkC,EAOlCA,WAGEC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAcV,GAC/BQ,EAAUE,OAAO,eAAgB,oBAEjC,IAAMjB,EAAc,uCAAG,WAAOkB,GAAP,qBAAAC,EAAA,6DACnBP,GAAa,GACbC,GAAa,GAEPO,EAAMC,KAAKC,UAAUJ,GAErBK,EAAiB,CACnBC,OAAQ,OACRC,QAASV,EACTW,KAAMN,EACNO,SAAU,UAVK,kBAcQC,MAAM,GAAD,OAAIC,6BAAJ,gCAA0EN,GAdvF,cAcTO,EAdS,iBAeIA,EAASC,OAfb,aAeTC,EAfS,QAiBNC,SAjBM,wBAkBXrB,GAAa,GACbE,IACAT,EAAK,yBApBM,2BAwBfO,GAAa,GACbD,EAAWqB,EAAKE,SAzBD,kDA4BfC,QAAQC,IAAR,MACAzB,EAAW,qBACXC,GAAa,GA9BE,0DAAH,sDAkCdX,EAAc,uCAAG,WAAOoC,EAAkBC,GAAzB,qBAAAnB,EAAA,6DACnBP,GAAa,GACbC,GAAa,GAEPO,EAAMC,KAAKC,UAAUe,GAErBd,EAAiB,CACnBC,OAAQ,QACRC,QAASV,EACTW,KAAMN,EACNO,SAAU,UAVK,kBAeQC,MAAM,GAAD,OAAIC,6BAAJ,wCAA0ES,GAAcf,GAfrG,cAeTO,EAfS,iBAgBIA,EAASC,OAhBb,QAgBTC,EAhBS,OAkBfG,QAAQC,IAAIJ,GAEZpB,GAAa,GACbD,EAAWqB,EAAKE,SArBD,kDAuBfC,QAAQC,IAAR,MACAzB,EAAW,qBACXC,GAAa,GAzBE,0DAAH,wDA6BdV,EAAc,uCAAG,WAAOoC,GAAP,mBAAAnB,EAAA,6DACnBP,GAAa,GACbC,GAAa,GAEPU,EAAiB,CACnBC,OAAQ,SACRC,QAASV,EAETY,SAAU,UARK,kBAaQC,MAAM,GAAD,OAAIC,6BAAJ,wCAA0ES,GAAcf,GAbrG,cAaTO,EAbS,gBAcIA,EAASC,OAdb,OAcTC,EAdS,OAgBfG,QAAQC,IAAIJ,GAEZpB,GAAa,GACbD,EAAWqB,EAAKE,SAnBD,kDAqBfC,QAAQC,IAAR,MACAzB,EAAW,qBACXC,GAAa,GAvBE,0DAAH,sDA2BpB,OACI,cAACd,EAAeyC,SAAhB,CACIC,MAAO,CACHxC,iBACAC,iBACAC,kBAJR,SAOKE","file":"static/js/25.65c01e5a.chunk.js","sourcesContent":["import React, { createContext, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport { useHistory } from 'react-router-dom'\n\nexport const BookingContext = createContext({\n    createCalendar: () => { },\n    updateCalendar: () => { },\n    deleteCalendar: () => { },\n})\n\nconst BookingProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token } = useContext(AuthContext)\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const createCalendar = async (calendarToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(calendarToAdd);\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/booking/calendars`, requestOptions)\n            const data = await response.json()\n\n            if (data.calendar) {\n                setIsLoading(false)\n                closeModal()\n                push('/dashboard/rezervacie')\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateCalendar = async (calendarToUpdate, calendarId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(calendarToUpdate);\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/booking/calendars/${calendarId}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            setIsLoading(false)\n            getMessage(data.message)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteCalendar = async (calendarId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            // body: raw,\n            redirect: 'follow'\n        };\n\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/booking/calendars/${calendarId}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            setIsLoading(false)\n            getMessage(data.message)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <BookingContext.Provider\n            value={{\n                createCalendar,\n                updateCalendar,\n                deleteCalendar,\n            }}\n        >\n            {children}\n        </BookingContext.Provider>\n    )\n}\n\nexport default BookingProvider"],"sourceRoot":""}
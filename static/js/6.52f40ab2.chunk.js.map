{"version":3,"sources":["components/profile-order-overview/profile-order-overview.styles.jsx","components/profile-order-overview/profile-order-overview.component.jsx","components/user-form/user.form-styles.jsx","components/user-form/user-form.component.jsx","components/new-user-form/new-user-form.styles.jsx","components/new-user-form/new-user-form.component.jsx","sections/customer-profile/customer-profile.styles.jsx","sections/customer-profile/customer-profile.section.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","context/user/user.utils.jsx","components/product-input-row/product-input-row.styles.jsx","components/product-input-row/product-input-row.component.jsx","context/warehouse/warehouse.utils.jsx","components/custom-checkbox/custom-checkbox.styles.jsx","components/custom-checkbox/custom-checkbox.component.jsx","context/user/user.queries.jsx","context/user/user.context.jsx","components/parameters-table/parameters-table.styles.jsx","components/parameters-table/parameters-table.component.jsx","components/custom-form-switch/custom-form-switch.styles.jsx","components/custom-form-switch/custom-form-switch.component.jsx"],"names":["OrderContainer","styled","div","OrderContent","Options","UpdateButton","CustomButton","DeleteButton","OrderId","p","ProfileOrderOverview","id","handleUpdateClick","onClick","Profile","GridContainer","ZeroMargin","GridRow","Row","Title","h2","Container","OrderHeader","OrderButton","AdminPanelContainer","CustomSelect","select","UserForm","isAdmin","isUpdating","user","handleChange","handleParameterChange","handleCompanyChange","push","useHistory","label","example","name","value","premises","onChange","e","retailNames","map","idx","admin","handleClick","target","optometrist","isActive","type","fName","lName","birthDate","email","phone","address","psc","city","country","company","ico","dic","parameters","lenses","preventDefault","_id","handleAddOrderButtonClick","orders","length","order","NewUserForm","formToShow","switchFormButtons","toggleUserForm","items","title","activeIndex","password","confirmPassword","Header","paddingStyles","DeleteProfileButton","SaveButton","CustomerProfile","useParams","useContext","AuthContext","LoadingModalContext","closeModal","isLoading","message","showModal","UserContext","getUser","updateUser","resetUser","createUser","useState","userObj","setUserObj","hasChanges","setHasChanges","handleUserChange","useEffect","console","log","loading","close","when","onSubmit","shrinkLabel","css","InputGroup","CustomInput","otherProps","className","htmlFor","FixedContainer","ScrollContainer","children","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","initUserObj","boughtProducts","date","finishedRegistration","icdph","cylinder","cylinderAxes","diopters","distance","addition","basis","prism","tempUser","totalSpent","watchList","Date","now","InputRow","ProductInputRow","otherprops","initProductObj","description","price","brand","soldAmount","available","eanCode","colorCode","colorName","imagePath","image","eshop","specs","frameColor","frameMaterial","frameStyle","lensColor","sex","size","initLensesObj","dioptersRange","cylinderRange","productCategories","brands","formatPrice","includes","split","Number","CheckboxContainer","CustomCheckbox","fetchUser","token","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","process","patchUser","body","JSON","stringify","postUser","postAdmin","createContext","handleChangeFilterItem","filterItems","totalCount","users","getFilteredUsers","getUserByQuery","UserProvider","getMessage","setIsLoading","setShowModal","setUser","setUsers","setIsUpdating","setActiveIndex","setFormToShow","a","response","json","data","error","filters","filter","raw","query","Provider","itemIndex","TableContainer","TitleCol","Col","OsContainer","ParametersTable","h3","ToggleOptionsContainer","ToggleFormButton","CustomFormSwitch","Fragment","item"],"mappings":"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","file":"static/js/6.52f40ab2.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\nexport const OrderContainer = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 25rem;\n\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    padding: 2rem;\n\n    &:not(:last-child) {\n        margin-bottom: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n\n    }\n`\n\nexport const OrderContent = styled.div`\n\n    h2 {\n        font-size: 1.6rem;\n    }\n`\n\nexport const Options = styled.div`\n    align-self: end;\n    justify-self: end;\n`\n\nexport const UpdateButton = styled(CustomButton)`\n    font-size: 1rem;\n    margin-left: auto;\n    display:block;\n\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1rem;\n    background-color: rgb(235, 172, 1);\n    margin-bottom: 1rem;\n    display:block;\n\n`\n\nexport const OrderId = styled.p`\n    font-size: 1.2rem;\n    color: gray;\n    /* margin-bottom: 2rem; */\n`","import React from 'react'\n\nimport {\n    DeleteButton,\n    Options,\n    OrderContainer,\n    OrderContent,\n    UpdateButton,\n    OrderId\n} from './profile-order-overview.styles'\n\nconst ProfileOrderOverview = ({ id, handleUpdateClick }) => {\n    return (\n        <OrderContainer>\n            <OrderContent>\n                <h2>ID Objednávky</h2>\n                <OrderId>{id}</OrderId>\n            </OrderContent>\n\n            <Options>\n                <DeleteButton>\n                    Vymazať\n                </DeleteButton>\n                <UpdateButton onClick={handleUpdateClick}>\n                    Upraviť\n                </UpdateButton>\n\n            </Options>\n\n        </OrderContainer>\n    )\n}\n\nexport default ProfileOrderOverview\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\n\nexport const Profile = styled.div`\n    padding: 2rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    margin-right: 2rem;\n\n`\n\nexport const GridContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: start;\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n    }\n`\n\nexport const ZeroMargin = styled.div`\n    input {\n        margin-bottom: 0 !important;\n    }\n`\n\nexport const GridRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n`\n\n\nexport const ThreeColRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-items: center;\n\n    input {\n        margin-bottom: 0 !important;\n    }\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr 1fr;\n        grid-template-areas:\n            \"a a\"\n            \"b c\";\n\n        div:nth-child(1){\n            grid-area: a;\n            margin-bottom: 0;\n        }\n        div:nth-child(2){\n            grid-area: b;\n            margin-bottom: 2rem;\n\n        }\n        div:nth-child(3){\n            grid-area: c;\n            margin-bottom: 2rem;\n        }\n    }\n`\n\nexport const Row = styled.div`\n    width: 75%;\n`\n\n\nexport const Title = styled.h2`\n    margin-bottom: 2rem;\n`\n\nexport const Container = styled.div`\n    margin-top: 2rem;\n`\n\nexport const OrderHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n`\n\nexport const OrderButton = styled(CustomButton)`\n    margin-top: .2rem;\n    font-size: 1.2rem;\n`\n\nexport const AdminPanelContainer = styled.div`\n    margin-bottom: 3rem;\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: #F5F5F5;\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ProfileOrderOverview from '../profile-order-overview/profile-order-overview.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Profile,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    Title,\n    Container,\n    OrderHeader,\n    OrderButton,\n    CustomSelect,\n    AdminPanelContainer\n} from './user.form-styles'\n\nconst UserForm = ({\n    isAdmin,\n    isUpdating,\n    user,\n    handleChange,\n    handleParameterChange,\n    handleCompanyChange\n}) => {\n    const { push } = useHistory()\n\n    const handleAddOrderButtonClick = e => {\n        e.preventDefault()\n        push(`/dashboard/objednavky/${user._id}`)\n    }\n\n    return (\n        <GridContainer>\n            <Profile>\n                {isAdmin && <AdminPanelContainer>\n                    <h2>Admin panel</h2>\n                    <InputRow\n                        label=\"Predajňa na ktorej uživatel pracuje\"\n                        example=''\n                    >\n                        <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Nezadané</option>\n                            {\n                                retailNames.map((name, idx) => {\n                                    if (idx === 4) return\n                                    return (\n                                        <option key={idx} value={idx + 1}>{name}</option>\n\n                                    )\n                                })\n                            }\n                        </CustomSelect>\n                    </InputRow>\n                    <InputRow\n                        label=\"Výška administrativných práv\"\n                        example=\"\"\n                    >\n                        <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Zákaznik</option>\n                            <option value={1}>Predavač</option>\n                            <option value={2}>Vedúci</option>\n                        </CustomSelect>\n                    </InputRow>\n\n                    <Container>\n                        <CustomCheckbox\n                            label='Optometrista'\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"optometrist\",\n                                    value: !user.optometrist\n                                }\n                            })}\n                            isActive={user.optometrist}\n                        />\n                    </Container>\n                </AdminPanelContainer>}\n                <div>\n                    <h2>Informácie</h2>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                // label=\"Priezvisko*\"\n                                type='date'\n                                name='birthDate'\n                                value={user.birthDate}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </div>\n\n                <Container>\n                    <h2>Kontaktné údaje</h2>\n                    <Row>\n                        <div>\n                            <CustomInput\n                                label=\"E-mail*\"\n                                type='email'\n                                name='email'\n                                value={user.email ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Telefónne číslo\"\n                                type='text'\n                                name='phone'\n                                value={user.phone ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <h2>Fakturačné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.address ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.psc ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.city ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.country ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n                <Container>\n                    <h2>Firemné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"IČO\"\n                                type='text'\n                                name='ico'\n                                value={user.company.ico ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"DIČ\"\n                                type='text'\n                                name='dic'\n                                value={user.company.dic ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.company.address ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.company.psc ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.company.city ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.company.country ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n\n                <Container>\n                    <h2>Parametre</h2>\n\n                    <ParametersTable\n                        parameters={user.lenses}\n                        handleChange={handleParameterChange}\n                    />\n                </Container>\n\n\n            </Profile>\n\n            {isUpdating && <div>\n                <OrderHeader>\n                    <Title>\n                        Objednávky\n                    </Title>\n                    <OrderButton onClick={e => handleAddOrderButtonClick(e)}>Pridať objednávku</OrderButton>\n                </OrderHeader>\n\n                <div>\n                    {user.orders.length > 0 ? user.orders.map((order, idx) => (\n                        <ProfileOrderOverview\n                            key={idx}\n                            id={order}\n                            handleUpdateClick={() => push(`/dashboard/objednavky/${user._id}/${order}`)}\n                        />\n                    )) : (\n                            <p>Žiadné objednávky</p>\n                        )}\n\n\n                </div>\n            </div>}\n        </GridContainer>\n    )\n}\n\nexport default UserForm\n","import styled from \"styled-components\"\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: #F5F5F5;\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`\n\nexport const ZeroMargin = styled.div`\n    input {\n        margin-bottom: 0 !important;\n    }\n`\n\nexport const GridRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    max-width: 50rem;\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n`\nexport const Container = styled.div`\n    margin-top: 2rem;\n`","import React, { useEffect } from 'react'\n\nimport CustomFormSwitch from '../custom-form-switch/custom-form-switch.component'\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    CustomSelect,\n    Container,\n    GridRow,\n    ZeroMargin\n} from './new-user-form.styles'\n\n\nconst NewUserForm = ({ formToShow, switchFormButtons, toggleUserForm, user, handleChange, isAdmin, handleParameterChange }) => {\n\n\n    return (\n        <div>\n            {/* Akého uživatela chcete vytvoriť? */}\n            {isAdmin && <CustomFormSwitch\n                items={switchFormButtons}\n                title=\"Akého uživatela chcete vytvoriť?\"\n                activeIndex={formToShow}\n                handleClick={toggleUserForm}\n            />}\n\n            {\n                formToShow === 0 ? (\n                    <div>\n                        <div>\n                            <h2>Informácie</h2>\n                            <InputRow\n                                label=\"\"\n                                example='napr: John'\n                            >\n                                <CustomInput\n                                    label=\"Meno*\"\n                                    type='text'\n                                    name='fName'\n                                    value={user.fName}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: Doe'\n                            >\n                                <CustomInput\n                                    label=\"Priezvisko*\"\n                                    type='text'\n                                    name='lName'\n                                    value={user.lName}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: priklad@email.com'\n                            >\n                                <CustomInput\n                                    label=\"E-mail*\"\n                                    type='email'\n                                    name='email'\n                                    value={user.email}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: 091234567'\n                            >\n                                <CustomInput\n                                    label=\"Telefónne číslo\"\n                                    type='text'\n                                    name='phone'\n                                    value={user.phone}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                        </div>\n\n                        <Container>\n                            <h2>Fakturačné údaje</h2>\n                            <GridRow>\n                                <ZeroMargin>\n                                    <CustomInput\n                                        label=\"Ulica a čislo domu\"\n                                        type='text'\n                                        name='address'\n                                        value={user.address}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </ZeroMargin>\n                                <ZeroMargin>\n                                    <CustomInput\n                                        label=\"PSČ\"\n                                        type='text'\n                                        name='psc'\n                                        value={user.psc}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </ZeroMargin>\n                            </GridRow>\n                            <GridRow>\n                                <div>\n                                    <CustomInput\n                                        label=\"Mesto\"\n                                        type='text'\n                                        name='city'\n                                        value={user.city}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Krajina\"\n                                        type='text'\n                                        name='country'\n                                        value={user.country}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </div>\n                            </GridRow>\n                        </Container>\n\n                        <Container>\n                            <h2>Parametre</h2>\n\n                            <ParametersTable\n                                parameters={user.lenses}\n                                handleChange={handleParameterChange}\n                            />\n                        </Container>\n                    </div>\n                ) : (\n                        <div>\n                            <div>\n                                <h2>Admin panel</h2>\n                                <InputRow\n                                    label=\"Predajňa na ktorej uživatel pracuje\"\n                                    example=''\n                                >\n\n                                    <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Nezadané</option>\n\n                                        {\n                                            retailNames.map((name, idx) => {\n                                                if (idx === 4) return\n                                                return (\n                                                    <option key={idx} value={idx + 1}>{name}</option>\n\n                                                )\n                                            })\n                                        }\n                                    </CustomSelect>\n\n                                </InputRow>\n                                <InputRow\n                                    label=\"Výška administrativných práv\"\n                                    example=\"\"\n                                >\n                                    <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Zákaznik</option>\n                                        <option value={1}>Predavač</option>\n                                        <option value={2}>Vedúci</option>\n                                    </CustomSelect>\n\n                                </InputRow>\n                            </div>\n                            <div>\n                                <h2>Informácie</h2>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: John'\n                                >\n                                    <CustomInput\n                                        label=\"Meno*\"\n                                        type='text'\n                                        name='fName'\n                                        value={user.fName}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: Doe'\n                                >\n                                    <CustomInput\n                                        label=\"Priezvisko*\"\n                                        type='text'\n                                        name='lName'\n                                        value={user.lName}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: priklad@email.com'\n                                >\n                                    <CustomInput\n                                        label=\"E-mail*\"\n                                        type='email'\n                                        name='email'\n                                        value={user.email}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"Heslo použivatela, aspoň 1 velké pismeno, 1 malé pismeno a 1 číslo*\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Heslo*\"\n                                        type='password'\n                                        name='password'\n                                        value={user.password}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Potvrď heslo*\"\n                                        type='password'\n                                        name='confirmPassword'\n                                        value={user.confirmPassword}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n\n\n                            </div>\n                        </div>\n                    )\n            }\n        </div>\n    )\n}\n\nexport default NewUserForm\n","import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nimport { paddingStyles } from '../../global.styles'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n`\n\nexport const DeleteProfileButton = styled(CustomButton)`\n    background-color: #DD4C4C;\n    font-size: 1.4rem;\n`\n\n\nexport const SaveButton = styled(CustomButton)`\n    margin-left: 2rem;\n    font-size: 1.4rem;\n`\n","import React, { useContext, useEffect, useState } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { UserContext } from '../../context/user/user.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport UserForm from '../../components/user-form/user-form.component'\nimport NewUserForm from '../../components/new-user-form/new-user-form.component'\n\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    DeleteProfileButton,\n    // Name,\n    SaveButton,\n} from './customer-profile.styles'\n\nconst CustomerProfile = () => {\n    const { id } = useParams()\n    const { isAdmin } = useContext(AuthContext)\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal,\n    } = useContext(LoadingModalContext)\n\n    const {\n        isUpdating,\n        user,\n        getUser,\n        handleChange,\n        handleParameterChange,\n        handleCompanyChange,\n        updateUser,\n        resetUser,\n        formToShow,\n        switchFormButtons,\n        toggleUserForm,\n        createUser,\n    } = useContext(UserContext)\n\n    const [userObj, setUserObj] = useState({})\n    const [hasChanges, setHasChanges] = useState(false)\n\n    const handleUserChange = (e) => {\n        setHasChanges(true)\n        const { name, value } = e.target\n\n        handleChange(e)\n        setUserObj({\n            ...userObj,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setHasChanges(false)\n\n        if (id === 'novy-zakaznik') {\n            console.log(\"Create new user\")\n            createUser(user)\n        } else {\n            console.log(\"Update existing user\")\n            if (userObj.fName || userObj.lName) {\n                delete userObj[\"fName\"]\n                delete userObj[\"lName\"]\n            } else if (!userObj.fName || !userObj.lName) {\n                delete userObj[\"name\"]\n            }\n            updateUser(userObj, user._id)\n        }\n    }\n\n    useEffect(() => {\n        setUserObj({\n            ...userObj,\n            name: user.fName + \" \" + user.lName\n        })\n    }, [userObj.fName, userObj.lName])\n\n    useEffect(() => {\n        if (id !== 'novy-zakaznik') {\n            getUser(id)\n        }\n    }, [id])\n\n    useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            resetUser()\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <Prompt\n                when={hasChanges}\n                message={\"Máte neuložené zmeny, chcete aj tak odísť ?\"}\n            />\n            <form onSubmit={handleSubmit}>\n                <Header>\n                    <h1>Profil</h1>\n                    <div>\n                        {isUpdating && <DeleteProfileButton>Vymazať</DeleteProfileButton>}\n                        <SaveButton type=\"submit\">\n                            {isUpdating ? \"Uložiť zmeny\" : \"Vytvoriť\"}\n                        </SaveButton>\n                    </div>\n                </Header>\n\n                <ScrollContainer>\n                    {\n                        isUpdating ? (\n                            <UserForm\n                                isAdmin={isAdmin}\n                                isUpdating={isUpdating}\n                                user={user}\n                                handleChange={handleUserChange}\n                                handleParameterChange={handleParameterChange}\n                                handleCompanyChange={handleCompanyChange}\n                            />\n                        ) : (\n                                <NewUserForm\n                                    isAdmin={isAdmin}\n                                    handleParameterChange={handleParameterChange}\n                                    formToShow={formToShow}\n                                    switchFormButtons={switchFormButtons}\n                                    toggleUserForm={toggleUserForm}\n                                    user={user}\n                                    handleChange={handleUserChange}\n                                />\n                            )\n                    }\n\n\n                </ScrollContainer>\n\n            </form>\n        </section>\n    )\n}\n\nexport default CustomerProfile\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`\n\nexport const FixedContainer = styled.div`\n    max-width: 115rem;\n`","import React from 'react'\nimport { Container, FixedContainer } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            <FixedContainer>\n                {children}\n            </FixedContainer>\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const initUserObj = {\n    address: \"\",\n    admin: 0,\n    premises: 0,\n    boughtProducts: {},\n    city: \"\",\n    country: \"\",\n    date: \"\",\n    email: \"\",\n    finishedRegistration: false,\n    company: {\n        ico: \"\",\n        dic: \"\",\n        icdph: \"\",\n        address: '',\n        psc: '',\n        country: '',\n    },\n    lenses: {\n        cylinder: [],\n        cylinderAxes: [],\n        diopters: [],\n        distance: [],\n        addition: [],\n        basis: [],\n        prism: [],\n    },\n    name: \"\",\n    orders: [],\n    phone: \"\",\n    psc: \"\",\n    tempUser: false,\n    totalSpent: 0,\n    watchList: [],\n    fName: \"\",\n    lName: \"\",\n    password: '',\n    confirmPassword: \"\",\n    birthDate: Date.now(),\n    optometrist: false\n\n}","import styled from 'styled-components'\n\nexport const InputRow = styled.div`\n    display:flex;\n    align-items: center;\n\n    p {\n        margin-top: 1.8rem;\n        margin-left: 2rem;\n            opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n    @media all and (max-width: 800px) {\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n    }\n`","import React from 'react'\n\nimport { InputRow } from './product-input-row.styles'\n\nconst ProductInputRow = ({ children, label, example, ...otherprops }) => {\n    return (\n        <InputRow {...otherprops}>\n            <div>\n                {children}\n            </div>\n            <div>\n                <p>{label + \" \"}<span>{example}</span></p>\n            </div>\n        </InputRow>\n    )\n}\n\nexport default ProductInputRow\n","export const initProductObj = {\n    // Product id\n    // Product name: Ultra glasses\n    name: \"\",\n    // Product description: Awesome product\n    description: \"\",\n    // price in cents: 1050 => 10.50\n    price: '0',\n    // product type: glesses, lenses, ...\n    type: 1,\n    // brand name: Adidas\n    brand: \"\",\n    //kolko sa ich zatial predalo\n    soldAmount: 0,\n    //kolko je kusov na ktorej prevádzke [arr] \n    available: [0],\n    //ean kod = unikatny kod ktory ma kazdy produkt\n    eanCode: \"\",\n    //farebny kod, ktory spolu s ean kodom tvori \"identitu\" produktu. Moze existovat viacero\n    //produktov s rovnakym ean kodom ale rozlicnym color kodom. Je to takto urobené kvôli skladovému\n    //systému napr. mam na sklade iny pocet zltych ramov isteho druhu ako ciernych\n    colorCode: \"\",\n    //meno farby\n    colorName: \"\",\n    //path k obrazku na serveri (toto bude mozno array este sa uvidi)\n    imagePath: \"\",\n    image: null,\n    eshop: true,\n\n    specs: {\n        frameColor: \"\",\n        frameMaterial: \"\",\n        frameStyle: \"\",\n        lensColor: \"\",\n        sex: \"M\",\n        size: [0, 0, 0],\n    }\n}\n\nexport const initLensesObj = {\n    // id [5fd4cae9f9432022689dd223]\n    id: \"\",\n    // Lense name\n    name: \"\",\n    // Paradne sosovky\n    description: \"\",\n    //vsetky skla su dostupne len pre isty interval dioptrií a cylindrov, ak si zvolím ze mam dioptrie\n    //mimo tohto intervalu tak si tieto skla k mojim okuliarom vybrat nemozem\n    dioptersRange: [\"0\", \"0\"],\n    cylinderRange: [\"0\", \"0\"],\n    //cena v centoch\n    price: \"0\",\n    brand: \"\",\n    imagePath: ''\n}\n\nexport const retailNames = [\n    \"Obchodná 57, Bratislava\",\n    \"Miletičova 38, Bratislava\",\n    \"Vajnory, Bratislava\",\n    \"Senica, OC Branč\",\n    \"Trnava, City Aréna\"\n]\n\n// Category variables\nexport const productCategories = [\n    {\n        name: \"Dioptrické\",\n        value: 1\n    },\n    {\n        name: \"Slnečné\",\n        value: 2\n    },\n    {\n        name: \"Športové\",\n        value: 3\n    },\n    {\n        name: \"Šošovky\",\n        value: 4\n    },\n    {\n        name: \"Doplnky\",\n        value: 5\n    },\n]\n\n\n\nexport const resetProductObj = () => {\n    return initProductObj\n}\n\nexport const resetLensesObj = () => {\n    return initLensesObj\n}\n\nexport const brands = [\n    \"Adidas\",\n    \"Armani Exchange\",\n    \"Arnette\",\n    \"Blackfin\",\n    \"Blumarine\",\n    \"Burberry\",\n    \"Bvlgari\",\n    \"Calvin Klein\",\n    \"Carolina Herrera\",\n    \"Carrera\",\n    \"David Beckham\",\n    \"Dior\",\n    \"Dolce & Gabbana\",\n    \"Elle\",\n    \"Emporio Armani\",\n    \"Esprit\",\n    \"Etnia Barcelona\",\n    \"Fendi\",\n    \"Fossil\",\n    \"Furla\",\n    \"Giorgio Armani\",\n    \"Givenchy\",\n    \"Gucci\",\n    \"Guess\",\n    \"H.I.S\",\n    \"Hawkers\",\n    \"Hugo Boss\",\n    \"Jaguar\",\n    \"Jimmy Choo\",\n    \"Lacoste\",\n    \"Liu Jo\",\n    \"Marc Jacobs\",\n    \"Max Mara\",\n    \"Max&Co\",\n    \"Meller\",\n    \"Mexx\",\n    \"Michael Kors\",\n    \"Moschino\",\n    \"Oakley\",\n    \"Persol\",\n    \"Polaroid\",\n    \"Police\",\n    \"Polo Ralph Lauren\",\n    \"Prada\",\n    \"Prada Linea Rossa\",\n    \"Ralph\",\n    \"Ralph Lauren\",\n    \"Ray-Ban\",\n    \"Salvatore Ferragamo\",\n    \"Smith\",\n    \"Strellson\",\n    \"Tiffany&Co.\",\n    \"Tom Ford\",\n    \"Tommy Hilfiger\",\n    \"Versace\",\n    \"Vogue\"\n]\n\nexport const formatPrice = price => {\n    let value = 0\n    if (price.includes(',')) {\n        if (price.split(',')[1].length === 1) {\n            value = price.split(',')[0] + price.split(',')[1] + \"0\"\n            return Number(value)\n        } else {\n            value = price.split(',')[0] + price.split(',')[1]\n            return Number(value)\n        }\n    } else {\n        return Number(price * 100)\n    }\n}","import styled from 'styled-components'\n\nexport const CheckboxContainer = styled.div`\n    display: inline-block;\n    cursor: pointer;\n    font-size: 1.5rem;\n    font-weight: 700;\n    /* margin-right: 2rem; */\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"rgba(0,0,0,.06)\"};\n    color: ${({ isActive }) => isActive ? \"#fff\" : \"#000\"};\n    padding: .8rem 3rem;\n    border-radius: .2rem;\n    transition: all .2s ease-out;\n\n    @media all and (max-width: 500px) {\n        padding: 0.5rem 1.5rem;\n        font-size: 1.4rem;\n    }\n`","import React from 'react'\n\nimport { CheckboxContainer } from './custom-checkbox.styles'\n\nconst CustomCheckbox = ({ label, isActive, handleClick, ...otherprops }) => {\n    return (\n        <CheckboxContainer isActive={isActive} onClick={handleClick} {...otherprops}>\n            {label}\n        </CheckboxContainer>\n    )\n}\n\nexport default CustomCheckbox\n","export const fetchUsers = (token) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users`, requestOptions)\n\n}\n\nexport const fetchUser = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\n}\n\nexport const patchUser = (token, user, id) => {\n    // const {\n    //     _id: id,\n    //     address,\n    //     admin,\n    //     city,\n    //     country,\n    //     email,\n    //     lenses: {\n    //         cylinder,\n    //         cylinderAxes,\n    //         diopters,\n    //         distance,\n    //         addition,\n    //         basis,\n    //         prism,\n    //     },\n    //     name,\n    //     phone,\n    //     psc,\n    //     premises\n    // } = user\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        ...user\n        // address: address || undefined,\n        // admin: admin,\n        // premises: Number(premises) === 0 ? undefined : premises,\n        // city: city || undefined,\n        // country: country || undefined,\n        // email: email || undefined,\n        // lenses: {\n        //     cylinder: cylinder,\n        //     cylinderAxes: cylinderAxes,\n        //     diopters: diopters,\n        //     distance: distance,\n        //     addition: addition,\n        //     basis: basis,\n        //     prism: prism,\n        // },\n        // name: name,\n        // phone: phone || undefined,\n        // psc: psc || undefined,\n    })\n\n    const requestOptions = {\n        method: 'PATCH',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\n}\n\nexport const postUser = (token, user) => {\n    const {\n        name,\n        email,\n    } = user\n\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        email: email,\n        name: name,\n    })\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\n}\n\nexport const postAdmin = (token, user) => {\n    console.log(user)\n\n    const {\n        name,\n        email,\n        password,\n        premises,\n        admin\n    } = user\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        admin: Number(admin),\n        email: email,\n        name: name,\n        premises: Number(premises),\n        password\n    })\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\n}","import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\n\nimport {\n    fetchUsers,\n    fetchUser,\n    patchUser,\n    postAdmin,\n    postUser,\n} from './user.queries'\n\nimport {\n    initUserObj\n} from './user.utils'\n\nexport const UserContext = createContext({\n    isUpdating: false,\n    activeIndex: 0,\n    handleChangeFilterItem: () => { },\n    filterItems: [],\n    totalCount: 0,\n    users: null,\n    user: null,\n    // getUsers: () => { },\n    getUser: () => { },\n    handleChange: () => { },\n    handleCompanyChange: () => { },\n    updateUser: () => { },\n    resetUser: () => { },\n    formToShow: 0,\n    switchFormButtons: [],\n    toggleUserForm: () => { },\n    createUser: () => { },\n    getFilteredUsers: () => { },\n    getUserByQuery: () => { }\n})\n\nconst UserProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token } = useContext(AuthContext)\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    // ------------------------\n\n    const [user, setUser] = useState(initUserObj)\n    const [users, setUsers] = useState(null)\n    const [totalCount, setTotalCount] = useState(0)\n\n    // ------------------------\n\n    const [isUpdating, setIsUpdating] = useState(false)\n    const [activeIndex, setActiveIndex] = useState(0)\n    const filterItems = [\n        {\n            id: 0,\n            name: \"Zákaznici\",\n            filter: 0,\n        },\n        {\n            id: 1,\n            name: \"Zamestnanci\",\n            filter: 1,\n        },\n        {\n            id: 2,\n            name: \"Vedúci\",\n            filter: 2,\n        },\n        // {\n        //     id: 3,\n        //     name: \"Velký brat\",\n        //     filter: 3,\n        // }\n    ]\n\n    // ------------------------\n\n    const [formToShow, setFormToShow] = useState(0)\n    const switchFormButtons = [\n        {\n            name: \"Zákazník\"\n        },\n        {\n            name: \"Admin\"\n        }\n    ]\n\n    const toggleUserForm = (e, idx) => {\n        e.preventDefault()\n        setFormToShow(idx)\n    }\n\n    // ------------------------\n\n\n    const handleChangeFilterItem = (itemIndex) => {\n        setActiveIndex(itemIndex)\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n\n        console.log(name, value)\n        setUser({\n            ...user,\n            [name]: value\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = user.lenses[name]\n        arr[idx] = Number(value)\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleCompanyChange = (e) => {\n        const { name, value } = e.target\n        setUser({\n            ...user,\n            company: {\n                ...user.company,\n                [name]: value\n            }\n        })\n    }\n\n    useEffect(() => {\n        setUser({\n            ...user,\n            name: user.fName + \" \" + user.lName\n        })\n    }, [user.fName, user.lName])\n\n    const resetUser = () => {\n        setUser({\n            ...initUserObj\n        })\n        setIsUpdating(false)\n        setFormToShow(0)\n    }\n\n    // ------------------------\n    // USER ACTIONS\n    // ------------------------\n\n    // Get all users\n    // const getUsers = async () => {\n    //     setIsLoading(true)\n    //     setShowModal(true)\n\n    //     try {\n    //         const response = await fetchUsers(token)\n    //         const data = await response.json()\n\n    //         console.log(data)\n    //         if (data.users) {\n    //             setUsers(data.users)\n    //             setTotalCount(data.count)\n    //             setIsLoading(false)\n    //             closeModal()\n\n    //         } else {\n    //             getMessage(data.message)\n    //             setIsLoading(false)\n    //         }\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n    // }\n\n    // Get single user\n    const getUser = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n        setIsUpdating(true)\n\n        try {\n            const response = await fetchUser(token, id)\n            const data = await response.json()\n\n            if (data.user) {\n                setUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n                setIsLoading(false)\n                closeModal()\n\n            } else {\n                getMessage(data.message)\n                setIsLoading(false)\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Update user\n    const updateUser = async (user, id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(user)\n\n        try {\n            const response = await patchUser(token, user, id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.message)\n                if (data.error === 'format' && data.message.includes('lenses.cylinderAxes')) {\n                    getMessage(\"Osa musí byt väčšia alebo rovná 0\")\n                }\n                if (data.error === 'phone-exists') {\n                    getMessage(\"Telefónne číslo už v databázy existuje\")\n                }\n                setIsLoading(false)\n                return\n            }\n\n\n            setIsLoading(false)\n            closeModal()\n            push('/dashboard/zakaznici')\n            getFilteredUsers({\n                filters: {\n                    admin: activeIndex\n                }\n            })\n            // http://localhost:1000/#/dashboard/zakaznici\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createUser = async (user) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            if (formToShow === 0) {\n                let data = {}\n                if (!user._id) {\n                    console.log('creating new user')\n                    const response = await postUser(token, user)\n\n                    data = await response.json()\n\n                    console.log(data)\n\n                    if (data.error) {\n                        getMessage(data.message)\n\n                        if (data.type === 'email') {\n                            getMessage(\"Email existuje\")\n                        }\n                        if (data.error === 'format' && data.message.includes('email')) {\n                            getMessage(\"Email musi byt platny email\")\n                        }\n                        setIsLoading(false)\n                        return\n                    }\n\n                    setUser({\n                        ...user,\n                        _id: data.user._id\n                    })\n                }\n\n                updateUser({\n                    _id: data.user ? data.user._id : user._id,\n                    lenses: {\n                        ...user.lenses\n                    },\n                    address: user.city,\n                    city: user.city,\n                    country: user.country,\n                    phone: user.phone,\n                    psc: user.phone,\n                })\n                // setIsLoading(false)\n                // getUsers()\n                // push('/dashboard/zakaznici')\n                // closeModal()\n\n            } else {\n                const response = await postAdmin(token, user)\n                const data = await response.json()\n\n                console.log(data)\n\n                if (data.error) {\n                    getMessage(data.message)\n                    setIsLoading(false)\n                    return\n                }\n\n                setIsLoading(false)\n                getFilteredUsers({\n                    filters: {\n                        admin: activeIndex\n                    }\n                })\n                push('/dashboard/zakaznici')\n                closeModal()\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // ----------------------------------------------\n    // ----------------------------------------------\n    // ----------------------------------------------\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const getFilteredUsers = async (filter) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(filter)\n        const raw = JSON.stringify(filter)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getUserByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(query)\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <UserContext.Provider\n            value={{\n                isUpdating,\n                activeIndex,\n                handleChangeFilterItem,\n                filterItems,\n                users,\n                user,\n                totalCount,\n                // getUsers,\n                getUser,\n                handleChange,\n                handleParameterChange,\n                handleCompanyChange,\n                updateUser,\n                resetUser,\n                formToShow,\n                switchFormButtons,\n                toggleUserForm,\n                createUser,\n                getFilteredUsers,\n                getUserByQuery\n            }}\n        >\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserProvider","import styled from 'styled-components'\n\nexport const TableContainer = styled.div`\n    display: grid;\n    grid-template-columns: 2rem repeat(7, 7.5rem);\n    margin-bottom: 3rem;\n`\n\nexport const TitleCol = styled.div`\n    display: grid;\n    grid-template-rows: repeat(4, 5rem);\n    div {\n        align-self: center;\n        display:flex;\n        justify-content: space-between;\n    }\n`\n\nexport const Col = styled.div`\n    display: grid;\n    grid-template-rows: repeat(4, 5rem);\n    div {\n        text-align:center;\n        align-self: center;\n        margin-left: .5rem;\n\n\n        &:nth-child(1) {\n            align-self: center;\n        }\n\n        input {\n            display:block;\n            width: 100%;\n            border: none;\n            padding: 1rem .5rem;\n            text-align: center;\n            font-family: inherit;\n            font-size: inherit;\n            background-color: #F5F5F5;\n            border-radius: .5rem;\n            outline: none;\n\n            &:focus {\n                outline: none;\n            }\n        }\n\n        input[type=number]::-webkit-inner-spin-button, \n        input[type=number]::-webkit-outer-spin-button {  \n            opacity: 1;\n\n        }\n    }\n`\n\nexport const OsContainer = styled.div`\n        text-align:center;\n        align-self: center;\n        margin-left: .5rem;\n\n\n        &:nth-child(1) {\n            align-self: center;\n        }\n\n        input {\n            display:block;\n            width: 100%;\n            border: none;\n            padding: 1rem .5rem;\n            text-align: center;\n            font-family: inherit;\n            font-size: inherit;\n            background-color: #F5F5F5;\n            border-radius: .5rem;\n            outline: none;\n\n            &:focus {\n                outline: none;\n            }\n        }\n\n        input[type=number]::-webkit-inner-spin-button, \n        input[type=number]::-webkit-outer-spin-button {  \n            display:none;\n            opacity: 0;\n\n        }\n`","import React from 'react'\n\nimport {\n    TableContainer,\n    TitleCol,\n    Col,\n    OsContainer\n} from './parameters-table.styles'\n\nconst ParametersTable = ({ parameters, handleChange }) => {\n\n    return (\n        <TableContainer>\n            <TitleCol>\n                <div>{\" \"}</div>\n                <div>\n                    <p>P</p>\n                </div>\n                <div>\n                    <p>Ľ</p>\n                </div>\n                <div>\n                    <p>P</p>\n                </div>\n                <div>\n                    <p>Ľ</p>\n                </div>\n            </TitleCol>\n\n\n            <Col>\n                <div>sph</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={parameters.diopters[idx] ?? \"\"}\n                                name=\"diopters\"\n                                onChange={(e) => handleChange(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>cyl</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={parameters.cylinder[idx] ?? \"\"}\n                                name=\"cylinder\"\n                                onChange={(e) => handleChange(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>ax</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <OsContainer key={idx}>\n                            <input\n                                type='text'\n                                value={parameters.cylinderAxes[idx] ?? \"\"}\n                                name=\"cylinderAxes\"\n                                onChange={(e) => handleChange(e, idx)}\n                            />\n                        </OsContainer>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>PD</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={parameters.distance[idx] ?? \"\"}\n                                name=\"distance\"\n                                onChange={(e) => handleChange(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>prizma</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={parameters.prism[idx] ?? \"\"}\n                                name=\"prism\"\n                                onChange={(e) => handleChange(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>basis</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={parameters.basis[idx] ?? \"\"}\n                                name=\"basis\"\n                                onChange={(e) => handleChange(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>addicia</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={parameters.addition[idx] ?? \"\"}\n                                name=\"addition\"\n                                onChange={(e) => handleChange(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n\n\n        </TableContainer>\n    )\n}\n\nexport default ParametersTable\n","import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nexport const Title = styled.h3`\n    margin-top: 2rem;\n    /* margin-bottom: 2rem; */\n`\n\nexport const ToggleOptionsContainer = styled.div`\n    display: flex;\n    margin: 2rem 0;\n`\n\nexport const ToggleFormButton = styled(CustomButton)`\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"#000\"};\n    font-weight: 700;\n    margin-right: 2rem;\n`","import React from 'react'\n\nimport {\n    Title,\n    ToggleFormButton,\n    ToggleOptionsContainer\n} from './custom-form-switch.styles'\n\nconst CustomFormSwitch = ({ title, activeIndex, handleClick, items }) => {\n    return (\n        <React.Fragment>\n            <Title>{title}</Title>\n            <ToggleOptionsContainer>\n                {\n                    items.map((item, idx) => (\n                        <ToggleFormButton key={idx} isActive={activeIndex === idx} onClick={(e) => handleClick(e, idx)}>{item.name}</ToggleFormButton>\n                    ))\n                }\n            </ToggleOptionsContainer>\n        </React.Fragment>\n    )\n}\n\nexport default CustomFormSwitch\n"],"sourceRoot":""}
{"version":3,"sources":["context/orders/orders.context.jsx"],"names":["OrdersContext","createContext","orders","getOrders","createOrder","finishOrder","OrdersProvider","children","push","useHistory","useContext","LoadingModalContext","setIsLoading","setShowModal","getMessage","closeModal","token","AuthContext","useState","setOrders","myHeaders","Headers","append","a","requestOptions","method","headers","redirect","fetch","process","response","json","data","console","log","message","orderToCreate","orderObj","raw","JSON","stringify","body","order","orderId","error","Provider","value"],"mappings":"4OAMaA,EAAgBC,wBAAc,CACvCC,OAAQ,KACRC,UAAW,aACXC,YAAa,aACbC,YAAa,eAyIFC,UAtIQ,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACdC,EAASC,cAATD,KAD6B,EAE0BE,qBAAWC,KAAlEC,EAF6B,EAE7BA,aAAcC,EAFe,EAEfA,aAAcC,EAFC,EAEDA,WAAYC,EAFX,EAEWA,WACxCC,EAAUN,qBAAWO,KAArBD,MAH6B,EAITE,mBAAS,MAJA,mBAI9BhB,EAJ8B,KAItBiB,EAJsB,KAM/BC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,aAAcN,GAC/BI,EAAUE,OAAO,eAAgB,oBAEjC,IAAMnB,EAAS,uCAAG,gCAAAoB,EAAA,6DACdX,GAAa,GACbC,GAAa,GAEPW,EAAiB,CACnBC,OAAQ,MACRC,QAASN,EACTO,SAAU,UAPA,kBAWaC,MAAM,GAAD,OAAIC,6BAAJ,qBAA+DL,GAXjF,cAWJM,EAXI,gBAYSA,EAASC,OAZlB,UAYJC,EAZI,OAcVC,QAAQC,IAAIF,IAERA,EAAK9B,OAhBC,wBAiBNiB,EAAUa,EAAK9B,QACfa,IAlBM,2BAsBVD,EAAWkB,EAAKG,SAChBvB,GAAa,GAvBH,kDA0BVqB,QAAQC,IAAR,MACApB,EAAW,qBACXF,GAAa,GA5BH,0DAAH,qDAiCTR,EAAW,uCAAG,WAAOgC,GAAP,uBAAAb,EAAA,6DAChBX,GAAa,GACbC,GAAa,GAETwB,EAJY,eAKTD,GAIPH,QAAQC,IAAI,qBACZD,QAAQC,IAAIG,GAENC,EAAMC,KAAKC,UAAUH,GAErBb,EAAiB,CACnBC,OAAQ,OACRC,QAASN,EACTqB,KAAMH,EACNX,SAAU,UAlBE,mBAsBWC,MAAM,GAAD,OAAIC,6BAAJ,qBAA+DL,GAtB/E,eAsBNM,EAtBM,iBAuBOA,EAASC,OAvBhB,QAuBNC,EAvBM,OAyBZC,QAAQC,IAAIF,GAERA,EAAKU,QACLvC,IACAY,IACAP,EAAK,0BAGTM,EAAWkB,EAAKG,SAChBvB,GAAa,GAlCD,kDAoCZqB,QAAQC,IAAR,MACApB,EAAW,qBACXF,GAAa,GAtCD,0DAAH,sDA0CXP,EAAW,uCAAG,WAAOsC,GAAP,mBAAApB,EAAA,6DAChBX,GAAa,GACbC,GAAa,GAEPW,EAAiB,CACnBC,OAAQ,OACRC,QAASN,EACTO,SAAU,UAPE,kBAWWC,MAAM,GAAD,OAAIC,6BAAJ,6BAA+Dc,EAA/D,YAAkFnB,GAXlG,cAWNM,EAXM,gBAYOA,EAASC,OAZhB,UAYNC,EAZM,OAcZC,QAAQC,IAAIF,GAEO,sBAAfA,EAAKY,MAhBG,wBAiBRhC,GAAa,GACbE,EAAW,gGAlBH,+BAsBRkB,EAAKU,MAtBG,wBAuBR3B,IAvBQ,2BA0BZD,EAAWkB,EAAKG,SAChBvB,GAAa,GA3BD,kDA6BZqB,QAAQC,IAAR,MACApB,EAAW,qBACXF,GAAa,GA/BD,0DAAH,sDAmCjB,OACI,cAACZ,EAAc6C,SAAf,CACIC,MAAO,CACH5C,SACAC,YACAC,cACAC,eALR,SAQKE","file":"static/js/28.a77ccdb7.chunk.js","sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\n\n\nexport const OrdersContext = createContext({\n    orders: null,\n    getOrders: () => { },\n    createOrder: () => { },\n    finishOrder: () => { },\n})\n\nconst OrdersProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { setIsLoading, setShowModal, getMessage, closeModal } = useContext(LoadingModalContext)\n    const { token } = useContext(AuthContext)\n    const [orders, setOrders] = useState(null)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const getOrders = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.orders) {\n                setOrders(data.orders)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n    }\n\n    const createOrder = async (orderToCreate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let orderObj = {\n            ...orderToCreate\n        }\n\n\n        console.log(\"ORDER BEFORE SEND\")\n        console.log(orderObj)\n\n        const raw = JSON.stringify(orderObj)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.order) {\n                getOrders()\n                closeModal()\n                push('/dashboard/objednavky')\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const finishOrder = async (orderId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders/${orderId}/fulfill`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error === 'undelegated-order') {\n                setIsLoading(false)\n                getMessage(\"Objednávka nemôže byť dokončená ak nieje priradená k prevádzke\")\n                return\n            }\n\n            if (data.order) {\n                closeModal()\n                return\n            }\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <OrdersContext.Provider\n            value={{\n                orders,\n                getOrders,\n                createOrder,\n                finishOrder\n            }}\n        >\n            {children}\n        </OrdersContext.Provider>\n    )\n}\n\nexport default OrdersProvider"],"sourceRoot":""}
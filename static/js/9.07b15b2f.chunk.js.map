{"version":3,"sources":["components/user-form/user.form-styles.jsx","components/user-form/user-form.component.jsx","components/new-user-form/new-user-form.styles.jsx","components/new-user-form/new-user-form.component.jsx","sections/customer-profile/customer-profile.styles.jsx","sections/customer-profile/customer-profile.section.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","context/user/user.utils.jsx","components/product-input-row/product-input-row.styles.jsx","components/product-input-row/product-input-row.component.jsx","context/user/user.queries.jsx","context/user/user.context.jsx","context/warehouse/warehouse.utils.jsx","components/custom-form-switch/custom-form-switch.styles.jsx","components/custom-form-switch/custom-form-switch.component.jsx"],"names":["Profile","styled","div","GridContainer","ZeroMargin","GridRow","ThreeColRow","Row","Title","h2","Container","OrderHeader","OrderButton","CustomButton","AdminPanelContainer","CustomSelect","select","UserForm","isAdmin","isUpdating","user","handleChange","handleDioptersChange","handleDistanceChange","handleCylinderChange","handleCylinderAxesChange","push","useHistory","label","example","name","value","premises","onChange","e","retailNames","map","idx","admin","type","fName","lName","email","phone","address","psc","city","country","lenses","diopters","toString","distance","cylinder","cylinderAxes","onClick","preventDefault","_id","handleAddOrderButtonClick","NewUserForm","formToShow","switchFormButtons","toggleUserForm","console","log","items","title","activeIndex","handleClick","password","confirmPassword","Header","paddingStyles","DeleteProfileButton","SaveButton","CustomerProfile","id","useParams","useContext","AuthContext","LoadingModalContext","closeModal","isLoading","message","showModal","UserContext","getUser","updateUser","resetUser","createUser","useEffect","loading","close","onSubmit","shrinkLabel","css","InputGroup","CustomInput","otherProps","className","htmlFor","length","ScrollContainer","children","initUserObj","boughtProducts","date","finishedRegistration","orders","tempUser","totalSpent","watchList","InputRow","ProductInputRow","otherprops","fetchUsers","token","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","process","fetchUser","patchUser","body","JSON","stringify","undefined","Number","postUser","postAdmin","createContext","handleChangeFilterItem","filterItems","totalCount","users","getUsers","UserProvider","getMessage","setIsLoading","setShowModal","useState","setUser","setUsers","setTotalCount","setIsUpdating","setActiveIndex","setFormToShow","a","response","json","data","count","split","error","Provider","itemIndex","filter","target","arr","initProductObj","description","price","brand","soldAmount","available","eanCode","colorCode","colorName","imagePath","image","eshop","specs","frameColor","frameMaterial","frameStyle","lensColor","sex","size","initLensesObj","dioptersRange","cylinderRange","productCategories","brands","h3","ToggleOptionsContainer","ToggleFormButton","isActive","CustomFormSwitch","Fragment","item"],"mappings":"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","file":"static/js/9.07b15b2f.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\n\n\nexport const Profile = styled.div`\n    /* padding: 2rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08); */\n    margin-right: 2rem;\n\n`\n\nexport const GridContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: start;\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr;\n    }\n`\n\nexport const ZeroMargin = styled.div`\n    input {\n        margin-bottom: 0 !important;\n    }\n`\n\nexport const GridRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n`\n\n\nexport const ThreeColRow = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-items: center;\n\n    input {\n        margin-bottom: 0 !important;\n    }\n\n    div:not(:last-child) {\n        padding-right: 2rem;\n    }\n\n    @media all and (max-width: 800px) {\n        grid-template-columns: 1fr 1fr;\n        grid-template-areas:\n            \"a a\"\n            \"b c\";\n\n        div:nth-child(1){\n            grid-area: a;\n            margin-bottom: 0;\n        }\n        div:nth-child(2){\n            grid-area: b;\n            margin-bottom: 2rem;\n\n        }\n        div:nth-child(3){\n            grid-area: c;\n            margin-bottom: 2rem;\n        }\n    }\n`\n\nexport const Row = styled.div`\n    width: 75%;\n`\n\n\nexport const Title = styled.h2`\n    margin-bottom: 2rem;\n`\n\nexport const Container = styled.div`\n    margin-top: 2rem;\n`\n\nexport const OrderHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n`\n\nexport const OrderButton = styled(CustomButton)`\n    margin-top: .2rem;\n    font-size: 1.2rem;\n`\n\nexport const AdminPanelContainer = styled.div`\n    margin-bottom: 3rem;\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: #F5F5F5;\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\n// import OrderOverview from '../order-overview/order-overview.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Profile,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    Title,\n    Container,\n    OrderHeader,\n    OrderButton,\n    CustomSelect,\n    AdminPanelContainer\n} from './user.form-styles'\n\nconst UserForm = ({ isAdmin, isUpdating, user, handleChange, handleDioptersChange, handleDistanceChange, handleCylinderChange, handleCylinderAxesChange }) => {\n    const { push } = useHistory()\n\n    const handleAddOrderButtonClick = e => {\n        e.preventDefault()\n        push(`/dashboard/objednavky/${user._id}`)\n    }\n\n    return (\n        <GridContainer>\n            <Profile>\n                {isAdmin && <AdminPanelContainer>\n                    <h2>Admin panel</h2>\n                    <InputRow\n                        label=\"Predajňa na ktorej uživatel pracuje\"\n                        example=''\n                    >\n                        <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Nezadané</option>\n                            {\n                                retailNames.map((name, idx) => {\n                                    if (idx === 4) return\n                                    return (\n                                        <option key={idx} value={idx + 1}>{name}</option>\n\n                                    )\n                                })\n                            }\n                        </CustomSelect>\n                    </InputRow>\n                    <InputRow\n                        label=\"Výška administrativných práv\"\n                        example=\"\"\n                    >\n                        <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Zákaznik</option>\n                            <option value={1}>Predavač</option>\n                            <option value={2}>Vedúci</option>\n                        </CustomSelect>\n                    </InputRow>\n                </AdminPanelContainer>}\n                <div>\n                    <h2>Informácie</h2>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </div>\n\n                <Container>\n                    <h2>Kontaktné údaje</h2>\n                    <Row>\n                        <div>\n                            <CustomInput\n                                label=\"E-mail*\"\n                                type='email'\n                                name='email'\n                                value={user.email}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Telefónne číslo\"\n                                type='text'\n                                name='phone'\n                                value={user.phone}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <h2>Fakturačné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.address}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.psc}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.city}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.country}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n\n                <Container>\n                    <h2>Parametre</h2>\n\n                    <ThreeColRow>\n                        <div>\n                            Dioptrie\n                                </div>\n                        <div>\n                            <CustomInput\n                                label=\"Ľavé oko\"\n                                type='text'\n                                name='city'\n                                value={user.lenses.diopters[0].toString()}\n                                handleChange={(e) => handleDioptersChange(e, 0)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Pravé oko\"\n                                type='text'\n                                name='state'\n                                value={user.lenses.diopters[1].toString()}\n                                handleChange={(e) => handleDioptersChange(e, 1)}\n                            />\n                        </div>\n                    </ThreeColRow>\n\n                    <ThreeColRow>\n                        <div>\n                            Vzdialenosť\n                                </div>\n                        <div>\n                            <CustomInput\n                                label=\"Ľavé oko\"\n                                type='text'\n                                name='city'\n                                value={user.lenses.distance[0].toString()}\n                                handleChange={(e) => handleDistanceChange(e, 0)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Pravé oko\"\n                                type='text'\n                                name='state'\n                                value={user.lenses.distance[1].toString()}\n                                handleChange={(e) => handleDistanceChange(e, 1)}\n                            />\n                        </div>\n                    </ThreeColRow>\n\n                    <ThreeColRow>\n                        <div>\n                            Cylinder\n                                </div>\n                        <div>\n                            <CustomInput\n                                label=\"Ľavé oko\"\n                                type='text'\n                                name='city'\n                                value={user.lenses.cylinder[0].toString()}\n                                handleChange={(e) => handleCylinderChange(e, 0)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Pravé oko\"\n                                type='text'\n                                name='state'\n                                value={user.lenses.cylinder[1].toString()}\n                                handleChange={(e) => handleCylinderChange(e, 1)}\n                            />\n                        </div>\n                    </ThreeColRow>\n\n                    <ThreeColRow>\n                        <div>\n                            Os cylindrov\n                                </div>\n                        <div>\n                            <CustomInput\n                                label=\"Ľavé oko\"\n                                type='text'\n                                name='city'\n                                value={user.lenses.cylinderAxes[0].toString()}\n                                handleChange={(e) => handleCylinderAxesChange(e, 0)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Pravé oko\"\n                                type='text'\n                                name='state'\n                                value={user.lenses.cylinderAxes[1].toString()}\n                                handleChange={(e) => handleCylinderAxesChange(e, 1)}\n                            />\n                        </div>\n                    </ThreeColRow>\n                </Container>\n\n\n            </Profile>\n\n            {isUpdating && <div>\n                <OrderHeader>\n                    <Title>\n                        Objednávky\n                    </Title>\n                    <OrderButton onClick={e => handleAddOrderButtonClick(e)}>Pridať objednávku</OrderButton>\n                </OrderHeader>\n\n                <div>\n                    <p>Žiadné objednávky</p>\n                    {/* <OrderOverview\n                        name='Product name'\n                        id='[Product ID]'\n                        date='28. November 2020'\n                        totalPrice='99.99'\n                    /> */}\n\n                </div>\n            </div>}\n        </GridContainer>\n    )\n}\n\nexport default UserForm\n","import styled from \"styled-components\"\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: #F5F5F5;\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n`","import React from 'react'\n\nimport CustomFormSwitch from '../custom-form-switch/custom-form-switch.component'\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    CustomSelect\n} from './new-user-form.styles'\n\n\nconst NewUserForm = ({ formToShow, switchFormButtons, toggleUserForm, user, handleChange }) => {\n    console.log(user)\n\n    return (\n        <div>\n            {/* Akého uživatela chcete vytvoriť? */}\n            <CustomFormSwitch\n                items={switchFormButtons}\n                title=\"Akého uživatela chcete vytvoriť?\"\n                activeIndex={formToShow}\n                handleClick={toggleUserForm}\n            />\n\n            {\n                formToShow === 0 ? (\n                    <div>\n                        <div>\n                            <h2>Informácie</h2>\n                            <InputRow\n                                label=\"\"\n                                example='napr: John'\n                            >\n                                <CustomInput\n                                    label=\"Meno*\"\n                                    type='text'\n                                    name='fName'\n                                    value={user.fName}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: Doe'\n                            >\n                                <CustomInput\n                                    label=\"Priezvisko*\"\n                                    type='text'\n                                    name='lName'\n                                    value={user.lName}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: priklad@email.com'\n                            >\n                                <CustomInput\n                                    label=\"E-mail*\"\n                                    type='email'\n                                    name='email'\n                                    value={user.email}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                        </div>\n                    </div>\n                ) : (\n                        <div>\n                            <div>\n                                <h2>Admin panel</h2>\n                                <InputRow\n                                    label=\"Predajňa na ktorej uživatel pracuje\"\n                                    example=''\n                                >\n\n                                    <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Nezadané</option>\n\n                                        {\n                                            retailNames.map((name, idx) => {\n                                                if (idx === 4) return\n                                                return (\n                                                    <option key={idx} value={idx + 1}>{name}</option>\n\n                                                )\n                                            })\n                                        }\n                                    </CustomSelect>\n\n                                </InputRow>\n                                <InputRow\n                                    label=\"Výška administrativných práv\"\n                                    example=\"\"\n                                >\n                                    <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Zákaznik</option>\n                                        <option value={1}>Predavač</option>\n                                        <option value={2}>Vedúci</option>\n                                    </CustomSelect>\n\n                                </InputRow>\n                            </div>\n                            <div>\n                                <h2>Informácie</h2>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: John'\n                                >\n                                    <CustomInput\n                                        label=\"Meno*\"\n                                        type='text'\n                                        name='fName'\n                                        value={user.fName}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: Doe'\n                                >\n                                    <CustomInput\n                                        label=\"Priezvisko*\"\n                                        type='text'\n                                        name='lName'\n                                        value={user.lName}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: priklad@email.com'\n                                >\n                                    <CustomInput\n                                        label=\"E-mail*\"\n                                        type='email'\n                                        name='email'\n                                        value={user.email}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"Heslo použivatela, aspoň 1 velké pismeno, 1 malé pismeno a 1 číslo*\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Heslo*\"\n                                        type='password'\n                                        name='password'\n                                        value={user.password}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Potvrď heslo*\"\n                                        type='password'\n                                        name='confirmPassword'\n                                        value={user.confirmPassword}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n\n\n                            </div>\n                        </div>\n                    )\n            }\n        </div>\n    )\n}\n\nexport default NewUserForm\n","import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nimport { paddingStyles } from '../../global.styles'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n`\n\nexport const DeleteProfileButton = styled(CustomButton)`\n    background-color: #DD4C4C;\n    font-size: 1.4rem;\n`\n\n\nexport const SaveButton = styled(CustomButton)`\n    margin-left: 2rem;\n    font-size: 1.4rem;\n`\n","import React, { useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { UserContext } from '../../context/user/user.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport UserForm from '../../components/user-form/user-form.component'\nimport NewUserForm from '../../components/new-user-form/new-user-form.component'\n\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    DeleteProfileButton,\n    // Name,\n    SaveButton,\n} from './customer-profile.styles'\n\nconst CustomerProfile = () => {\n    const { id } = useParams()\n    const { isAdmin } = useContext(AuthContext)\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal,\n    } = useContext(LoadingModalContext)\n\n    const {\n        isUpdating,\n        user,\n        getUser,\n        handleChange,\n        handleDioptersChange,\n        handleDistanceChange,\n        handleCylinderChange,\n        handleCylinderAxesChange,\n        updateUser,\n        resetUser,\n        formToShow,\n        switchFormButtons,\n        toggleUserForm,\n        createUser\n    } = useContext(UserContext)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (id === 'novy-zakaznik') {\n            console.log(\"Create new user\")\n            createUser(user)\n        } else {\n            console.log(\"Update existing user\")\n            updateUser(user)\n        }\n    }\n\n    useEffect(() => {\n        if (id !== 'novy-zakaznik') {\n            getUser(id)\n        }\n    }, [id])\n\n    useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            resetUser()\n        }\n    }, [])\n\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <form onSubmit={handleSubmit}>\n                <Header>\n                    <h1>Profil</h1>\n                    <div>\n                        {isUpdating && <DeleteProfileButton>Vymazať</DeleteProfileButton>}\n                        <SaveButton type=\"submit\">\n                            {isUpdating ? \"Uložiť zmeny\" : \"Vytvoriť\"}\n                        </SaveButton>\n                    </div>\n                </Header>\n\n                <ScrollContainer>\n                    {\n                        isUpdating ? (\n                            <UserForm\n                                isAdmin={isAdmin}\n                                isUpdating={isUpdating}\n                                user={user}\n                                handleChange={handleChange}\n                                handleDioptersChange={handleDioptersChange}\n                                handleDistanceChange={handleDistanceChange}\n                                handleCylinderChange={handleCylinderChange}\n                                handleCylinderAxesChange={handleCylinderAxesChange}\n                            />\n                        ) : (\n                                <NewUserForm\n                                    formToShow={formToShow}\n                                    switchFormButtons={switchFormButtons}\n                                    toggleUserForm={toggleUserForm}\n                                    user={user}\n                                    handleChange={handleChange}\n                                />\n                            )\n                    }\n\n\n                </ScrollContainer>\n\n            </form>\n        </section>\n    )\n}\n\nexport default CustomerProfile\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: #000;\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    /* margin: 45px 0; */\n\n    .form-input {\n        background: none;\n        background-color: #F5F5F5;\n        color: #000;\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: #B1B1B1;\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n`","import React from 'react'\nimport { Container } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            {children}\n        </Container>\n    )\n}\n\nexport default ScrollContainer","export const initUserObj = {\n    address: \"\",\n    admin: 0,\n    premises: 0,\n    boughtProducts: {},\n    city: \"\",\n    country: \"\",\n    date: \"\",\n    email: \"\",\n    finishedRegistration: false,\n    lenses: {\n        cylinder: [0, 0],\n        cylinderAxes: [0, 0],\n        diopters: [0, 0],\n        distance: [0, 0],\n    },\n    name: \"\",\n    orders: [],\n    phone: \"\",\n    psc: \"\",\n    tempUser: false,\n    totalSpent: 0,\n    watchList: [],\n    fName: \"\",\n    lName: \"\",\n    password: '',\n    confirmPassword: \"\"\n}","import styled from 'styled-components'\n\nexport const InputRow = styled.div`\n    display:flex;\n    align-items: center;\n\n    p {\n        margin-top: 1.8rem;\n        margin-left: 2rem;\n            opacity: .75;\n\n        span {\n            font-weight: 700;\n        }\n    }\n\n    @media all and (max-width: 800px) {\n        flex-direction: column-reverse;\n        align-items: flex-start;\n\n        p {\n            margin-left: unset;\n        }\n    }\n`","import React from 'react'\n\nimport { InputRow } from './product-input-row.styles'\n\nconst ProductInputRow = ({ children, label, example, ...otherprops }) => {\n    return (\n        <InputRow {...otherprops}>\n            <div>\n                {children}\n            </div>\n            <div>\n                <p>{label + \" \"}<span>{example}</span></p>\n            </div>\n        </InputRow>\n    )\n}\n\nexport default ProductInputRow\n","\n\nexport const fetchUsers = (token) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users`, requestOptions)\n\n}\n\nexport const fetchUser = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\n}\n\nexport const patchUser = (token, user) => {\n    const {\n        _id: id,\n        address,\n        admin,\n        city,\n        country,\n        email,\n        lenses: {\n            cylinder,\n            cylinderAxes,\n            diopters,\n            distance,\n        },\n        name,\n        phone,\n        psc,\n        premises\n    } = user\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        address: address || undefined,\n        admin: admin,\n        premises: Number(premises) === 0 ? undefined : premises,\n        city: city || undefined,\n        country: country || undefined,\n        // email: email || undefined,\n        lenses: {\n            cylinder: cylinder,\n            cylinderAxes: cylinderAxes,\n            diopters: diopters,\n            distance: distance,\n        },\n        name: name,\n        phone: phone || undefined,\n        psc: psc || undefined,\n    })\n\n    const requestOptions = {\n        method: 'PATCH',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    console.log(id)\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`, requestOptions)\n}\n\nexport const postUser = (token, user) => {\n    console.log(user)\n\n    const {\n        name,\n        email,\n    } = user\n\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        email: email,\n        name: name,\n    })\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\n}\n\nexport const postAdmin = (token, user) => {\n    console.log(user)\n\n    const {\n        name,\n        email,\n        password,\n        premises,\n        admin\n    } = user\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const raw = JSON.stringify({\n        admin: Number(admin),\n        email: email,\n        name: name,\n        premises: Number(premises),\n        password\n    })\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/auth/register`, requestOptions)\n}","import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\n\nimport {\n    fetchUsers,\n    fetchUser,\n    patchUser,\n    postAdmin,\n    postUser\n} from './user.queries'\n\nimport {\n    initUserObj\n} from './user.utils'\n\nexport const UserContext = createContext({\n    isUpdating: false,\n    activeIndex: 0,\n    handleChangeFilterItem: () => { },\n    filterItems: [],\n    totalCount: 0,\n    users: null,\n    user: null,\n    getUsers: () => { },\n    getUser: () => { },\n    handleChange: () => { },\n    handleDioptersChange: () => { },\n    handleDistanceChange: () => { },\n    handleCylinderChange: () => { },\n    handleCylinderAxesChange: () => { },\n    updateUser: () => { },\n    resetUser: () => { },\n    formToShow: 0,\n    switchFormButtons: [],\n    toggleUserForm: () => { },\n    createUser: () => { }\n})\n\nconst UserProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token } = useContext(AuthContext)\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    // ------------------------\n\n    const [user, setUser] = useState(initUserObj)\n    const [users, setUsers] = useState(null)\n    const [totalCount, setTotalCount] = useState(0)\n\n    // ------------------------\n\n    const [isUpdating, setIsUpdating] = useState(false)\n    const [activeIndex, setActiveIndex] = useState(0)\n    const filterItems = [\n        {\n            id: 0,\n            name: \"Zákaznici\",\n            filter: 0,\n        },\n        {\n            id: 1,\n            name: \"Zamestnanci\",\n            filter: 1,\n        },\n        {\n            id: 2,\n            name: \"Vedúci\",\n            filter: 2,\n        },\n        // {\n        //     id: 3,\n        //     name: \"Velký brat\",\n        //     filter: 3,\n        // }\n    ]\n\n    // ------------------------\n\n    const [formToShow, setFormToShow] = useState(0)\n    const switchFormButtons = [\n        {\n            name: \"Zákazník\"\n        },\n        {\n            name: \"Admin\"\n        }\n    ]\n\n    const toggleUserForm = (e, idx) => {\n        e.preventDefault()\n        setFormToShow(idx)\n    }\n\n    // ------------------------\n\n\n    const handleChangeFilterItem = (itemIndex) => {\n        setActiveIndex(itemIndex)\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        setUser({\n            ...user,\n            [name]: value\n        })\n    }\n\n    const handleDioptersChange = (e, idx) => {\n        let arr = user.lenses.diopters\n        arr[idx] = Number(e.target.value)\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                diopters: arr\n            }\n        })\n    }\n\n    const handleDistanceChange = (e, idx) => {\n        let arr = user.lenses.distance\n        arr[idx] = Number(e.target.value)\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                distance: arr\n            }\n        })\n    }\n\n    const handleCylinderChange = (e, idx) => {\n        let arr = user.lenses.cylinder\n        arr[idx] = Number(e.target.value)\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                cylinder: arr\n            }\n        })\n    }\n\n\n    const handleCylinderAxesChange = (e, idx) => {\n        let arr = user.lenses.cylinderAxes\n        arr[idx] = Number(e.target.value)\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                cylinderAxes: arr\n            }\n        })\n    }\n\n    useEffect(() => {\n        setUser({\n            ...user,\n            name: user.fName + \" \" + user.lName\n        })\n    }, [user.fName, user.lName])\n\n    const resetUser = () => {\n        setUser({\n            ...initUserObj\n        })\n        setIsUpdating(false)\n        setFormToShow(0)\n    }\n\n    // ------------------------\n    // USER ACTIONS\n    // ------------------------\n\n    // Get all users\n    const getUsers = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetchUsers(token)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                setTotalCount(data.count)\n                setIsLoading(false)\n                closeModal()\n\n            } else {\n                getMessage(data.message)\n                setIsLoading(false)\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n\n    // Get single user\n    const getUser = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n        setIsUpdating(true)\n\n        try {\n            const response = await fetchUser(token, id)\n            const data = await response.json()\n\n            if (data.user) {\n                setUser({\n                    ...user,\n                    ...data.user,\n                    lenses: {\n                        cylinder: data.user.lenses.cylinder.length ? data.user.lenses.cylinder : [0, 0],\n                        cylinderAxes: data.user.lenses.cylinderAxes.length ? data.user.lenses.cylinderAxes : [0, 0],\n                        diopters: data.user.lenses.diopters.length ? data.user.lenses.diopters : [0, 0],\n                        distance: data.user.lenses.distance.length ? data.user.lenses.distance : [0, 0],\n                    },\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n                setIsLoading(false)\n                closeModal()\n\n            } else {\n                getMessage(data.message)\n                setIsLoading(false)\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Update user\n    const updateUser = async (user) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(user)\n\n        try {\n            const response = await patchUser(token, user)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                setIsLoading(false)\n                getMessage(data.message)\n                return\n            }\n\n\n            setIsLoading(false)\n            closeModal()\n            push('/dashboard/zakaznici')\n            getUsers()\n            // http://localhost:1000/#/dashboard/zakaznici\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createUser = async (user) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            if (formToShow === 0) {\n                const response = await postUser(token, user)\n                const data = await response.json()\n\n                console.log(data)\n\n                if (data.error) {\n                    getMessage(data.message)\n                    setIsLoading(false)\n                    return\n                }\n\n                setIsLoading(false)\n                getUsers()\n                push('/dashboard/zakaznici')\n                closeModal()\n\n            } else {\n                const response = await postAdmin(token, user)\n                const data = await response.json()\n\n                console.log(data)\n\n                if (data.error) {\n                    getMessage(data.message)\n                    setIsLoading(false)\n                    return\n                }\n\n                setIsLoading(false)\n                getUsers()\n                push('/dashboard/zakaznici')\n                closeModal()\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <UserContext.Provider\n            value={{\n                isUpdating,\n                activeIndex,\n                handleChangeFilterItem,\n                filterItems,\n                users,\n                user,\n                totalCount,\n                getUsers,\n                getUser,\n                handleChange,\n                handleDioptersChange,\n                handleDistanceChange,\n                handleCylinderChange,\n                handleCylinderAxesChange,\n                updateUser,\n                resetUser,\n                formToShow,\n                switchFormButtons,\n                toggleUserForm,\n                createUser\n            }}\n        >\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserProvider","export const initProductObj = {\n    // Product id\n    // Product name: Ultra glasses\n    name: \"\",\n    // Product description: Awesome product\n    description: \"\",\n    // price in cents: 1050 => 10.50\n    price: '0',\n    // product type: glesses, lenses, ...\n    type: 1,\n    // brand name: Adidas\n    brand: \"\",\n    //kolko sa ich zatial predalo\n    soldAmount: 0,\n    //kolko je kusov na ktorej prevádzke [arr] \n    available: [0],\n    //ean kod = unikatny kod ktory ma kazdy produkt\n    eanCode: \"\",\n    //farebny kod, ktory spolu s ean kodom tvori \"identitu\" produktu. Moze existovat viacero\n    //produktov s rovnakym ean kodom ale rozlicnym color kodom. Je to takto urobené kvôli skladovému\n    //systému napr. mam na sklade iny pocet zltych ramov isteho druhu ako ciernych\n    colorCode: \"\",\n    //meno farby\n    colorName: \"\",\n    //path k obrazku na serveri (toto bude mozno array este sa uvidi)\n    imagePath: \"\",\n    image: null,\n    eshop: true,\n\n    specs: {\n        frameColor: \"\",\n        frameMaterial: \"\",\n        frameStyle: \"\",\n        lensColor: \"\",\n        sex: \"M\",\n        size: [0, 0, 0],\n    }\n}\n\nexport const initLensesObj = {\n    // id [5fd4cae9f9432022689dd223]\n    id: \"\",\n    // Lense name\n    name: \"\",\n    // Paradne sosovky\n    description: \"\",\n    //vsetky skla su dostupne len pre isty interval dioptrií a cylindrov, ak si zvolím ze mam dioptrie\n    //mimo tohto intervalu tak si tieto skla k mojim okuliarom vybrat nemozem\n    dioptersRange: [\"0\", \"0\"],\n    cylinderRange: [\"0\", \"0\"],\n    //cena v centoch\n    price: \"0\",\n    brand: \"\",\n    imagePath: ''\n}\n\nexport const retailNames = [\n    \"Obchodná 57, Bratislava\",\n    \"Miletičova 38, Bratislava\",\n    \"Vajnory, Bratislava\",\n    \"Senica, OC Branč\",\n    \"Trnava, City Aréna\"\n]\n\n// Category variables\nexport const productCategories = [\n    {\n        name: \"Dioptrické\",\n        value: 1\n    },\n    {\n        name: \"Slnečné\",\n        value: 2\n    },\n    {\n        name: \"Športové\",\n        value: 3\n    },\n    {\n        name: \"Šošovky\",\n        value: 4\n    },\n    {\n        name: \"Doplnky\",\n        value: 5\n    },\n]\n\n\n\nexport const resetProductObj = () => {\n    return initProductObj\n}\n\nexport const resetLensesObj = () => {\n    return initLensesObj\n}\n\nexport const brands = [\n    \"Adidas\",\n    \"Armani Exchange\",\n    \"Arnette\",\n    \"Blackfin\",\n    \"Blumarine\",\n    \"Burberry\",\n    \"Bvlgari\",\n    \"Calvin Klein\",\n    \"Carolina Herrera\",\n    \"Carrera\",\n    \"David Beckham\",\n    \"Dior\",\n    \"Dolce & Gabbana\",\n    \"Elle\",\n    \"Emporio Armani\",\n    \"Esprit\",\n    \"Etnia Barcelona\",\n    \"Fendi\",\n    \"Fossil\",\n    \"Furla\",\n    \"Giorgio Armani\",\n    \"Givenchy\",\n    \"Gucci\",\n    \"Guess\",\n    \"H.I.S\",\n    \"Hawkers\",\n    \"Hugo Boss\",\n    \"Jaguar\",\n    \"Jimmy Choo\",\n    \"Lacoste\",\n    \"Liu Jo\",\n    \"Marc Jacobs\",\n    \"Max Mara\",\n    \"Max&Co\",\n    \"Meller\",\n    \"Mexx\",\n    \"Michael Kors\",\n    \"Moschino\",\n    \"Oakley\",\n    \"Persol\",\n    \"Polaroid\",\n    \"Police\",\n    \"Polo Ralph Lauren\",\n    \"Prada\",\n    \"Prada Linea Rossa\",\n    \"Ralph\",\n    \"Ralph Lauren\",\n    \"Ray-Ban\",\n    \"Salvatore Ferragamo\",\n    \"Smith\",\n    \"Strellson\",\n    \"Tiffany&Co.\",\n    \"Tom Ford\",\n    \"Tommy Hilfiger\",\n    \"Versace\",\n    \"Vogue\"\n]","import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nexport const Title = styled.h3`\n    margin-top: 2rem;\n    /* margin-bottom: 2rem; */\n`\n\nexport const ToggleOptionsContainer = styled.div`\n    display: flex;\n    margin: 2rem 0;\n`\n\nexport const ToggleFormButton = styled(CustomButton)`\n    background-color: ${({ isActive }) => isActive ? \"rgb(235, 172, 1)\" : \"#000\"};\n    font-weight: 700;\n    margin-right: 2rem;\n`","import React from 'react'\n\nimport {\n    Title,\n    ToggleFormButton,\n    ToggleOptionsContainer\n} from './custom-form-switch.styles'\n\nconst CustomFormSwitch = ({ title, activeIndex, handleClick, items }) => {\n    return (\n        <React.Fragment>\n            <Title>{title}</Title>\n            <ToggleOptionsContainer>\n                {\n                    items.map((item, idx) => (\n                        <ToggleFormButton key={idx} isActive={activeIndex === idx} onClick={(e) => handleClick(e, idx)}>{item.name}</ToggleFormButton>\n                    ))\n                }\n            </ToggleOptionsContainer>\n        </React.Fragment>\n    )\n}\n\nexport default CustomFormSwitch\n"],"sourceRoot":""}
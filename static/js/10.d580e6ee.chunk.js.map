{"version":3,"sources":["sections/blog-posts/blog-posts.styles.jsx","sections/blog-posts/blog-posts.section.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","hooks/useFetch.jsx","components/scroll-container/scroll-container.styles.jsx","components/scroll-container/scroll-container.component.jsx","components/section-header/section-header.styles.jsx","components/section-header/section-header.component.jsx","components/section-navbar/section-navbar.styles.jsx","components/section-navbar/section-navbar.component.jsx","components/list-arrows/list-arrows.styles.jsx","components/list-arrows/list-arrows.component.jsx","context/blog/blog.queries.jsx","context/blog/blog.context.jsx"],"names":["PostContainer","styled","div","PostImage","PostContent","Options","UpdateButton","CustomButton","DeleteButton","BlogPosts","useContext","LoadingModalContext","closeModal","isLoading","message","showModal","BlogContext","postsCount","handlePostDelete","push","useHistory","useState","posts","setPosts","limit","sortBy","date","filterQuery","setFilterQuery","searchQuery","setSearchQuery","activeIndex","setActiveIndex","blogsData","useFetchByQuery","useEffect","refetch","response","blogs","loading","title","close","handleChange","e","target","value","handleSearch","query","handleAddButton","count","items","id","name","length","map","post","image","src","process","imagePath","alt","description","onClick","_id","postID","listItems","shrinkLabel","css","InputGroup","CustomInput","label","otherProps","className","onChange","htmlFor","useFetch","path","skip","setResponse","error","setError","setMessage","setIsLoading","refetchIndex","setRefetchIndex","prevRefetchIndex","a","fetch","res","json","data","fetchData","queryObj","myHeaders","Headers","append","localStorage","getItem","raw","JSON","stringify","requestOptions","method","headers","body","redirect","useFetchById","Container","paddingStyles","FixedContainer","ScrollContainer","children","HeaderContainer","Left","Right","SearchButton","AddButton","SectionHeader","type","onKeyPress","key","NavbarContainer","NavButton","active","SectionNavbar","item","ArrowsContainer","IconContainer","button","ListArrows","handleClickPrev","handleClickNext","isDisablePrev","setIsDisablePrev","isDisableNext","setIsDisableNext","currentPage","setCurrentPage","prevValue","disabled","fetchSinglePost","createNewPost","token","draft","html","img","updatePost","deletePost","createContext","getPosts","createPost","getPost","handlePostUpdate","resetBlog","BlogProvider","AuthContext","getMessage","setShowModal","setPost","setPostsCount","console","log","blog","postResponse","postData","Provider"],"mappings":"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","file":"static/js/10.d580e6ee.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nexport const PostContainer = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 25rem 1fr 25rem;\n\n    box-shadow: var(--container-shadow);\n    background-color: var(--container-background-color);\n    padding: 2rem;\n\n    &:not(:last-child) {\n        margin-bottom: 2rem;\n    }\n\n        @media all and (max-width: 800px) {\n        grid-template-columns : 20rem 1fr;\n        grid-template-rows: 1fr 1fr;\n\n        @media all and (max-width: 500px) {\n            grid-template-columns : 1fr;\n            grid-template-rows: unset;\n        }\n    }\n`\n\nexport const PostImage = styled.div`\n    height: 15rem;\n    /* width: 100%; */\n    /* height: 100%; */\n    margin-right: 2rem;\n\n    img {\n        width: 100%;\n        height: 100%;\n        object-position: center;\n        object-fit: cover;\n    }\n\n        @media all and (max-width: 800px) {\n        align-self: start;\n        grid-row-start: 1;\n        grid-row-end: 3;   \n\n        @media all and (max-width: 500px) {\n            justify-self: center;\n            margin-bottom: 2rem;\n        }\n\n    }\n`\n\nexport const PostContent = styled.div`\n    h2 {\n        font-size: 1.6rem;\n    }\n\n    p {\n        font-size: 1.4rem;\n        color: gray;\n    }\n\n        @media all and (max-width: 500px) {\n            margin-bottom: 2rem;\n        }\n`\n\nexport const Options = styled.div`\n    align-self: end;\n    justify-self: end;\n`\n\nexport const UpdateButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    margin-right: 1rem;\n`\n\nexport const DeleteButton = styled(CustomButton)`\n    font-size: 1.4rem;\n    background-color: rgb(235, 172, 1);\n`","import React, { useState, useEffect, useContext } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    PostContainer,\n    PostImage,\n    PostContent,\n    Options,\n    UpdateButton,\n    DeleteButton\n} from './blog-posts.styles'\n\nconst BlogPosts = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { postsCount, handlePostDelete } = useContext(BlogContext)\n    const { push } = useHistory()\n\n    const [posts, setPosts] = useState([])\n\n    const [filterQuery, setFilterQuery] = useState({\n        limit: 10,\n        sortBy: {\n            date: -1\n        },\n        // query: \"\"\n    })\n    const [searchQuery, setSearchQuery] = useState('')\n\n\n\n    const [activeIndex, setActiveIndex] = useState(0)\n    const items = [\n        {\n            id: 0,\n            name: \"Zostupne\"\n        },\n        {\n            id: 1,\n            name: \"Vzostupne\"\n        },\n    ]\n\n    const blogsData = useFetchByQuery('api/blogs/filter', filterQuery)\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n                query: searchQuery\n            })\n            blogsData.refetch()\n        }\n    }\n\n    const handlePostDeleteClick = (postID) => {\n        handlePostDelete(postID)\n        blogsData.refetch()\n    }\n\n    useEffect(() => {\n        if (searchQuery === '') {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n            })\n            blogsData.refetch()\n        }\n    }, [searchQuery])\n\n    useEffect(() => {\n        if (activeIndex === 0) {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n                // query: \"\"\n            })\n            blogsData.refetch()\n        } else {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: 1\n                },\n                // query: \"\"\n            })\n            blogsData.refetch()\n        }\n    }, [activeIndex])\n\n    useEffect(() => {\n        if (!blogsData.isLoading) {\n            setPosts(blogsData.response?.blogs)\n        }\n    }, [blogsData.isLoading])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleSearch={handleSearch}\n                handleAddButton={() => push('blog/novy-prispevok')}\n                count={postsCount}\n                title=\"Blog\"\n            />\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                {posts && posts.length ? posts.map(post => (\n                    <PostContainer key={post._id}>\n                        <PostImage>\n                            {post.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${post.image.imagePath}`} alt={post.image.alt} />}\n                        </PostImage>\n                        <PostContent>\n                            <h2>{post.name}</h2>\n                            <p>{post.description}</p>\n                        </PostContent>\n                        <Options>\n                            <UpdateButton onClick={() => push(`blog/${post._id}`)}>Upraviť</UpdateButton>\n                            <DeleteButton onClick={() => handlePostDeleteClick(post._id)}>Vymazať</DeleteButton>\n                        </Options>\n                    </PostContainer>\n                )) : (\n                        <div>\n                            Žiadne príspevky\n                        </div>\n                    )}\n\n                <ListArrows\n                    listItems={posts}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BlogPosts\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -14px;\n    font-size: 12px;\n    color: var(--input-color);\n`\nexport const InputGroup = styled.div`\n    position: relative;\n\n    /* margin: 45px 0; */\n\n    .form-input {\n        /* background: none; */\n        background-color: var(--input-background-color);\n        color: var(--input-color);\n        font-size: 1.5rem;\n        padding: 1rem .5rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        margin: 2rem 0 0;\n        font-family: inherit;\n\n        &:focus {\n        outline: none;\n        }\n\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n\n    .form-input-label {\n        color: var(--input-color);\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 1.5rem;\n        top: 1rem;\n        transition: 300ms ease all;\n\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`\n","import React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput","import { useEffect, useState } from 'react'\n\nexport const useFetch = (path, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [message, setMessage] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`)\n                const data = await res.json()\n\n                setMessage(data.message)\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n                setMessage(\"Niečo sa pokazilo\")\n            }\n        }\n        fetchData()\n    }, [refetchIndex])\n\n    return { response, isLoading, error, message, refetch }\n}\n\nexport const useFetchByQuery = (path, queryObj, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify(queryObj)\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path])\n\n    return { response, isLoading, error, refetch }\n}\n\nexport const useFetchById = (path, id, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}/${id}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path, id])\n\n    return { response, isLoading, error, refetch }\n}\n","import styled from 'styled-components'\nimport { paddingStyles } from '../../global.styles'\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    /* height: 100%; */\n    overflow-y: scroll;\n    overflow-x: visible;\n    scroll-behavior: smooth;\n    ${paddingStyles};\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n    color: var(--primary-text-color);\n\n\n\n\n    @media all and (max-width: 1150px) {\n        margin-bottom: 8rem;\n    }\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background:  var(--background-primary-color);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: var(--primary-color);\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--primary-color);\n    }\n`\n\nexport const FixedContainer = styled.div`\n    /* max-width: 115rem; */\n`","import React from 'react'\nimport { Container, FixedContainer } from './scroll-container.styles'\n\nconst ScrollContainer = ({ children }) => {\n    return (\n        <Container>\n            <FixedContainer>\n                {children}\n            </FixedContainer>\n        </Container>\n    )\n}\n\nexport default ScrollContainer","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { paddingStyles } from '../../global.styles'\n\nexport const HeaderContainer = styled.div`\n    display: flex;\n    color: var(--primary-text-color);\n    justify-content: space-between;\n    margin-bottom: 3rem;\n    ${paddingStyles};    \n\n    @media all and (max-width: 600px) {\n        flex-wrap: wrap;\n    }\n`\n\nexport const Left = styled.div`\n    margin-top: 2rem;\n\n    display: flex;\n    align-items: center;\n\n`\n\nexport const Right = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport const Notification = styled.div`\n    background-color: var(--color-red);\n    margin-left: 1.5rem;\n    color: var(--primary-text-color);\n    padding: .5rem 1rem;\n    border-radius: 1.5rem;\n    font-size: 1.4rem;\n`\n\n\nexport const SearchButton = styled(CustomButton)`\n    margin-top: 2rem;\n\n    margin-left: 2rem;\n`\n\nexport const AddButton = styled(CustomButton)`\n    margin-top: 2rem;\n    margin-left: 1rem;\n    background-color: var(--primary-color);\n    font-weight: bolder;\n`","import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    HeaderContainer,\n    Left,\n    Right,\n    SearchButton,\n    // Notification,\n    AddButton,\n} from './section-header.styles'\n\nconst SectionHeader = ({ searchQuery, handleSearch, handleChange, title, count = 999, handleAddButton = () => { } }) => {\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== '') {\n            if (e.key === 'Enter') {\n                handleSearch()\n            }\n        }\n    }\n\n    return (\n        <HeaderContainer>\n            <Left>\n                <h1>{title}</h1>\n                {/* <Notification>{count}</Notification> */}\n            </Left>\n            <Right>\n                {handleSearch && <div>\n                    <CustomInput\n                        type='search'\n                        name='searchbox'\n                        value={searchQuery}\n                        handleChange={handleChange}\n                        onKeyPress={handleSearchOnEnter}\n                        label='Vyhľadať'\n                    />\n                </div>}\n                {handleSearch && <SearchButton onClick={handleSearch}>Vyhľadať</SearchButton>}\n                <AddButton onClick={handleAddButton}>Pridať</AddButton>\n            </Right>\n        </HeaderContainer>\n    )\n}\n\nexport default SectionHeader\n","import styled from 'styled-components'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { paddingStyles } from '../../global.styles'\n\n\nexport const NavbarContainer = styled.div`\n    margin-bottom: 3rem;\n    ${paddingStyles}\n\n    ul {\n        display: flex;\n        list-style: none;\n\n        li {\n            margin-right: 1.5rem;\n        }\n    }\n`\n\nexport const NavButton = styled(CustomButton)`\n    transition: all 0.3s ease-out;\n    background-color: ${({ active }) => active ? 'var(--primary-color)' : 'var(--background-primary-color)'};\n    color: ${({ active }) => active ? '#fff' : 'var(--primary-text-color)'};\n    font-weight: ${({ active }) => active ? 400 : 700};\n    padding: ${({ active }) => active ? \".5rem 2.5rem\" : \".5rem 1rem .5rem 0\"};\n    font-weight: ${({ active }) => active ? \"bolder\" : \"normal\"};\n`","import React from 'react'\n\nimport {\n    NavbarContainer,\n    NavButton\n} from './section-navbar.styles'\n\nconst SectionNavbar = ({ items, activeIndex, setActiveIndex, ...otherProps }) => {\n\n    return (\n        <NavbarContainer {...otherProps}>\n            <ul>\n                {\n                    items.map(item => (\n                        <li key={item.id}>\n                            <NavButton active={item.id === activeIndex} onClick={() => setActiveIndex(item.id)} >{item.name}</NavButton>\n                        </li>\n                    ))\n                }\n\n            </ul>\n        </NavbarContainer >\n    )\n}\n\nexport default SectionNavbar\n","import styled from 'styled-components'\n\nexport const ArrowsContainer = styled.div`\n    margin-top: 3rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const IconContainer = styled.button`\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--text-primary-color);\n    font-size: 3.5rem;\n    transition: color .2s ease-in-out;\n\n    &:hover {\n        color: var(--primary-color);\n    }\n\n    &:disabled {\n        cursor: default;\n        opacity: .35;\n\n        &:hover {\n            color: var(--text-primary-color);\n        }\n    }\n`","import React, { useState, useEffect } from 'react'\n\nimport {\n    AiFillLeftCircle,\n    AiFillRightCircle\n} from 'react-icons/ai'\n\nimport {\n    ArrowsContainer,\n    IconContainer\n} from './list-arrows.styles'\n\nconst ListArrows = ({\n    listItems = [],\n    handleClickPrev = () => { },\n    handleClickNext = () => { }\n}) => {\n    const [isDisablePrev, setIsDisablePrev] = useState(true)\n    const [isDisableNext, setIsDisableNext] = useState(true)\n    const [currentPage, setCurrentPage] = useState(0)\n\n    useEffect(() => {\n        if (currentPage === 0) {\n            setIsDisablePrev(true)\n        } else {\n            setIsDisablePrev(false)\n            // setCurrentPage(0)\n        }\n    }, [listItems])\n\n    useEffect(() => {\n        if (listItems?.length < 10) {\n            setIsDisableNext(true)\n        } else {\n            setIsDisableNext(false)\n        }\n    }, [listItems])\n\n    useEffect(() => {\n        if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue--)\n    }, [handleClickPrev])\n    useEffect(() => {\n        // if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue++)\n    }, [handleClickNext])\n\n    const handlePrev = () => {\n        handleClickPrev()\n        if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue - 1)\n    }\n    const handleNext = () => {\n        handleClickNext()\n        setCurrentPage(prevValue => prevValue + 1)\n    }\n\n    return (\n        <ArrowsContainer>\n            <IconContainer disabled={isDisablePrev} onClick={handlePrev}>\n                <AiFillLeftCircle />\n            </IconContainer>\n            <IconContainer disabled={isDisableNext} onClick={handleNext}>\n                <AiFillRightCircle />\n            </IconContainer>\n        </ArrowsContainer>\n    )\n}\n\nexport default ListArrows\n","\n\nexport const fetchPosts = () => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/blogs`)\n}\n\nexport const fetchSinglePost = (id) => {\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/blogs/${id}`)\n}\n\nexport const createNewPost = (token, name, description, draft, html, img) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify({ \"name\": name, \"description\": description, \"draft\": draft, \"html\": html, 'image': img });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs`, requestOptions)\n}\n\nexport const updatePost = (token, name, description, draft, html, img, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify({ \"name\": name, \"description\": description, \"draft\": draft, \"html\": html, 'image': img });\n\n    const requestOptions = {\n        method: 'PATCH',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs/${id}`, requestOptions)\n\n}\n\nexport const deletePost = (token, id) => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const requestOptions = {\n        method: 'DELETE',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/blogs/${id}`, requestOptions)\n\n}\n\n","import React, { createContext, useState, useContext } from 'react'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport {\n    fetchPosts,\n    createNewPost,\n    fetchSinglePost,\n    updatePost,\n    deletePost,\n} from './blog.queries'\n\n\nexport const BlogContext = createContext({\n    posts: null,\n    post: null,\n    postsCount: 0,\n    getPosts: () => { },\n    createPost: () => { },\n    getPost: () => { },\n    handlePostUpdate: () => { },\n    handlePostDelete: () => { },\n    resetBlog: () => { }\n})\n\nconst BlogProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const [posts, setPosts] = useState(null)\n    const [post, setPost] = useState(null)\n    const [postsCount, setPostsCount] = useState(0)\n\n    const getPosts = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const response = await fetchPosts()\n        const data = await response.json()\n\n        setPosts(data.blogs)\n        setPostsCount(data.count)\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const getPost = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n\n            const response = await fetchSinglePost(id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.blog) {\n                setPost(data.blog)\n                setIsLoading(false)\n                getMessage(data.message)\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n            // setPosts(data.blogs)\n            // setPostsCount(data.count)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const createPost = async (img, name, description, draft, html) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await createNewPost(token, name, description, draft, html, img)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostUpdate = async (name, description, draft, html, img, id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await updatePost(token, name, description, draft, html, img, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostDelete = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await deletePost(token, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const resetBlog = () => {\n        setPost(null)\n    }\n\n    return (\n        <BlogContext.Provider\n            value={{\n                posts,\n                post,\n                postsCount,\n                getPosts,\n                createPost,\n                getPost,\n                handlePostUpdate,\n                handlePostDelete,\n                resetBlog,\n            }}\n        >\n            {children}\n        </BlogContext.Provider>\n    )\n}\n\nexport default BlogProvider"],"sourceRoot":""}
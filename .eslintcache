[{"/imooptik-frontend/src/index.js":"1","/imooptik-frontend/src/reportWebVitals.js":"2","/imooptik-frontend/src/App.jsx":"3","/imooptik-frontend/src/context/auth/auth.context.jsx":"4","/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx":"5","/imooptik-frontend/src/global.styles.jsx":"6","/imooptik-frontend/src/pages/dashboard/dashboard.jsx":"7","/imooptik-frontend/src/pages/reset-password/reset-password.jsx":"8","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx":"9","/imooptik-frontend/src/context/auth/auth.queries.jsx":"10","/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx":"11","/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx":"12","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx":"13","/imooptik-frontend/src/context/blog/blog.context.jsx":"14","/imooptik-frontend/src/context/warehouse/warehouse.context.jsx":"15","/imooptik-frontend/src/context/user/user.context.jsx":"16","/imooptik-frontend/src/context/image/image.context.jsx":"17","/imooptik-frontend/src/components/sidenav/sidenav.component.jsx":"18","/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx":"19","/imooptik-frontend/src/components/sign-in/sign-in.component.jsx":"20","/imooptik-frontend/src/components/custom-input/custom-input.component.jsx":"21","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx":"22","/imooptik-frontend/src/components/popup/pop-up.component.jsx":"23","/imooptik-frontend/src/sections/orders/orders.section.jsx":"24","/imooptik-frontend/src/sections/customers/customers.section.jsx":"25","/imooptik-frontend/src/sections/analytics/analytics.section.jsx":"26","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx":"27","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx":"28","/imooptik-frontend/src/sections/product/product.section.jsx":"29","/imooptik-frontend/src/sections/booking/booking.section.jsx":"30","/imooptik-frontend/src/sections/post/post.section.jsx":"31","/imooptik-frontend/src/context/warehouse/warehouse.queries.jsx":"32","/imooptik-frontend/src/components/custom-button/custom-button.component.jsx":"33","/imooptik-frontend/src/context/blog/blog.queries.jsx":"34","/imooptik-frontend/src/context/user/user.queries.jsx":"35","/imooptik-frontend/src/context/image/image.queries.jsx":"36","/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx":"37","/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx":"38","/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx":"39","/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx":"40","/imooptik-frontend/src/components/popup/pop.up.styles.jsx":"41","/imooptik-frontend/src/sections/customers/customers.styles.jsx":"42","/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx":"43","/imooptik-frontend/src/sections/analytics/analytics.styles.jsx":"44","/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx":"45","/imooptik-frontend/src/sections/product/product.styles.jsx":"46","/imooptik-frontend/src/sections/product/product.utils.jsx":"47","/imooptik-frontend/src/sections/post/post.styles.jsx":"48","/imooptik-frontend/src/sections/booking/booking.styles.jsx":"49","/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx":"50","/imooptik-frontend/src/components/section-header/section-header.component.jsx":"51","/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx":"52","/imooptik-frontend/src/components/product-overview/product-overview.component.jsx":"53","/imooptik-frontend/src/components/spinner/spinner.component.jsx":"54","/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx":"55","/imooptik-frontend/src/components/order-overview/order-overview.component.jsx":"56","/imooptik-frontend/src/components/modal-images/modal-images.component.jsx":"57","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx":"58","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx":"59","/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx":"60","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx":"61","/imooptik-frontend/src/components/calendar/calendar.component.jsx":"62","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx":"63","/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx":"64","/imooptik-frontend/src/components/section-header/section-header.styles.jsx":"65","/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx":"66","/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx":"67","/imooptik-frontend/src/components/spinner/spinner.styles.jsx":"68","/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx":"69","/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx":"70","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx":"71","/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx":"72","/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx":"73","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx":"74","/imooptik-frontend/src/components/calendar/calendar.styles.jsx":"75","/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx":"76","/imooptik-frontend/src/components/pagination/pagination.component.jsx":"77","/imooptik-frontend/src/components/pagination/pagination.styles.jsx":"78"},{"size":717,"mtime":1608670306490,"results":"79","hashOfConfig":"80"},{"size":362,"mtime":1608191294784,"results":"81","hashOfConfig":"80"},{"size":1127,"mtime":1609882191220,"results":"82","hashOfConfig":"80"},{"size":5367,"mtime":1609879992540,"results":"83","hashOfConfig":"80"},{"size":1074,"mtime":1608670205650,"results":"84","hashOfConfig":"80"},{"size":700,"mtime":1609637180940,"results":"85","hashOfConfig":"80"},{"size":3974,"mtime":1609882114050,"results":"86","hashOfConfig":"80"},{"size":1667,"mtime":1608613259561,"results":"87","hashOfConfig":"80"},{"size":840,"mtime":1609978179243,"results":"88","hashOfConfig":"80"},{"size":2292,"mtime":1609880010090,"results":"89","hashOfConfig":"80"},{"size":547,"mtime":1609637224870,"results":"90","hashOfConfig":"80"},{"size":731,"mtime":1608613281121,"results":"91","hashOfConfig":"80"},{"size":506,"mtime":1608208021900,"results":"92","hashOfConfig":"80"},{"size":3956,"mtime":1609882050220,"results":"93","hashOfConfig":"80"},{"size":6604,"mtime":1609971221073,"results":"94","hashOfConfig":"80"},{"size":2576,"mtime":1608664140760,"results":"95","hashOfConfig":"80"},{"size":2833,"mtime":1610030069906,"results":"96","hashOfConfig":"80"},{"size":1937,"mtime":1609881746090,"results":"97","hashOfConfig":"80"},{"size":1466,"mtime":1609978281513,"results":"98","hashOfConfig":"80"},{"size":1925,"mtime":1609978226453,"results":"99","hashOfConfig":"80"},{"size":639,"mtime":1608689089980,"results":"100","hashOfConfig":"80"},{"size":5456,"mtime":1610022298116,"results":"101","hashOfConfig":"80"},{"size":714,"mtime":1609965412857,"results":"102","hashOfConfig":"80"},{"size":2125,"mtime":1609172793237,"results":"103","hashOfConfig":"80"},{"size":2466,"mtime":1608663843770,"results":"104","hashOfConfig":"80"},{"size":1381,"mtime":1608483136504,"results":"105","hashOfConfig":"80"},{"size":15066,"mtime":1609811050056,"results":"106","hashOfConfig":"80"},{"size":3179,"mtime":1609802280536,"results":"107","hashOfConfig":"80"},{"size":12564,"mtime":1610033575766,"results":"108","hashOfConfig":"80"},{"size":5014,"mtime":1609634495750,"results":"109","hashOfConfig":"80"},{"size":9286,"mtime":1609878576620,"results":"110","hashOfConfig":"80"},{"size":7357,"mtime":1610032821026,"results":"111","hashOfConfig":"80"},{"size":283,"mtime":1608325857586,"results":"112","hashOfConfig":"80"},{"size":1793,"mtime":1608678905090,"results":"113","hashOfConfig":"80"},{"size":676,"mtime":1608665458520,"results":"114","hashOfConfig":"80"},{"size":995,"mtime":1610030118156,"results":"115","hashOfConfig":"80"},{"size":880,"mtime":1609978233033,"results":"116","hashOfConfig":"80"},{"size":4551,"mtime":1609701103064,"results":"117","hashOfConfig":"80"},{"size":898,"mtime":1609978275513,"results":"118","hashOfConfig":"80"},{"size":1263,"mtime":1609635810480,"results":"119","hashOfConfig":"80"},{"size":654,"mtime":1609965458477,"results":"120","hashOfConfig":"80"},{"size":1115,"mtime":1609635476450,"results":"121","hashOfConfig":"80"},{"size":2075,"mtime":1609637882290,"results":"122","hashOfConfig":"80"},{"size":753,"mtime":1608501615800,"results":"123","hashOfConfig":"80"},{"size":1658,"mtime":1609636415920,"results":"124","hashOfConfig":"80"},{"size":1847,"mtime":1609802183486,"results":"125","hashOfConfig":"80"},{"size":1788,"mtime":1610033533976,"results":"126","hashOfConfig":"80"},{"size":1711,"mtime":1609802520286,"results":"127","hashOfConfig":"80"},{"size":1999,"mtime":1609634745940,"results":"128","hashOfConfig":"80"},{"size":624,"mtime":1609280754422,"results":"129","hashOfConfig":"80"},{"size":1066,"mtime":1609810962606,"results":"130","hashOfConfig":"80"},{"size":241,"mtime":1608402129090,"results":"131","hashOfConfig":"80"},{"size":1207,"mtime":1609619098510,"results":"132","hashOfConfig":"80"},{"size":178,"mtime":1608409397640,"results":"133","hashOfConfig":"80"},{"size":425,"mtime":1609365301650,"results":"134","hashOfConfig":"80"},{"size":819,"mtime":1608478620604,"results":"135","hashOfConfig":"80"},{"size":6775,"mtime":1610030341816,"results":"136","hashOfConfig":"80"},{"size":4323,"mtime":1609631034680,"results":"137","hashOfConfig":"80"},{"size":6273,"mtime":1610032508626,"results":"138","hashOfConfig":"80"},{"size":651,"mtime":1608506295620,"results":"139","hashOfConfig":"80"},{"size":354,"mtime":1609286026892,"results":"140","hashOfConfig":"80"},{"size":1374,"mtime":1608696113560,"results":"141","hashOfConfig":"80"},{"size":1096,"mtime":1609639002640,"results":"142","hashOfConfig":"80"},{"size":440,"mtime":1609635534260,"results":"143","hashOfConfig":"80"},{"size":953,"mtime":1609636181490,"results":"144","hashOfConfig":"80"},{"size":718,"mtime":1608401951890,"results":"145","hashOfConfig":"80"},{"size":1806,"mtime":1609801810996,"results":"146","hashOfConfig":"80"},{"size":377,"mtime":1608409635720,"results":"147","hashOfConfig":"80"},{"size":447,"mtime":1609638204590,"results":"148","hashOfConfig":"80"},{"size":1127,"mtime":1609637931300,"results":"149","hashOfConfig":"80"},{"size":596,"mtime":1609639013590,"results":"150","hashOfConfig":"80"},{"size":1062,"mtime":1608505999020,"results":"151","hashOfConfig":"80"},{"size":3362,"mtime":1609977179343,"results":"152","hashOfConfig":"80"},{"size":554,"mtime":1609636648760,"results":"153","hashOfConfig":"80"},{"size":767,"mtime":1608686624820,"results":"154","hashOfConfig":"80"},{"size":419,"mtime":1609637307170,"results":"155","hashOfConfig":"80"},{"size":834,"mtime":1609973813373,"results":"156","hashOfConfig":"80"},{"size":646,"mtime":1609973838353,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"1lk1amn",{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"160"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"160"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"160"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"160"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"160"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"160"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"160"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/imooptik-frontend/src/index.js",[],["322","323"],"/imooptik-frontend/src/reportWebVitals.js",[],"/imooptik-frontend/src/App.jsx",[],"/imooptik-frontend/src/context/auth/auth.context.jsx",[],"/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx",[],"/imooptik-frontend/src/global.styles.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset-password.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx",[],"/imooptik-frontend/src/context/auth/auth.queries.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx",[],"/imooptik-frontend/src/context/blog/blog.context.jsx",["324"],"import React, { createContext, useState, useContext } from 'react'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport {\n    fetchPosts,\n    createNewPost,\n    fetchSinglePost,\n    updatePost,\n    deletePost,\n} from './blog.queries'\n\n\nexport const BlogContext = createContext({\n    posts: null,\n    post: null,\n    postsCount: 0,\n    getPosts: () => { },\n    createPost: () => { },\n    getPost: () => { },\n    handlePostUpdate: () => { },\n    handlePostDelete: () => { },\n})\n\nconst BlogProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const [posts, setPosts] = useState(null)\n    const [post, setPost] = useState(null)\n    const [postsCount, setPostsCount] = useState(0)\n\n    const getPosts = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const response = await fetchPosts()\n        const data = await response.json()\n\n        setPosts(data.blogs)\n        setPostsCount(data.count)\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const getPost = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n\n            const response = await fetchSinglePost(id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.blog) {\n                setPost(data.blog)\n                setIsLoading(false)\n                getMessage(data.message)\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n            // setPosts(data.blogs)\n            // setPostsCount(data.count)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const createPost = async (img, name, description, draft, html) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await createNewPost(token, name, description, draft, html, img)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostUpdate = async (name, description, draft, html, img, id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await updatePost(token, name, description, draft, html, img, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostDelete = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await deletePost(token, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <BlogContext.Provider\n            value={{\n                posts,\n                post,\n                postsCount,\n                getPosts,\n                createPost,\n                getPost,\n                handlePostUpdate,\n                handlePostDelete,\n            }}\n        >\n            {children}\n        </BlogContext.Provider>\n    )\n}\n\nexport default BlogProvider","/imooptik-frontend/src/context/warehouse/warehouse.context.jsx",["325"],"import React, { createContext, useState, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport {\n    fetchProducts,\n    postProduct,\n    deleteProduct,\n    patchProduct,\n    postLenses,\n    fetchLenses,\n    patchLenses,\n    delLense,\n    // fetchFilteredProducts\n} from './warehouse.queries'\n\n\nexport const WarehouseContext = createContext({\n    products: null,\n    lenses: null,\n    totalCount: 0,\n    getProducts: () => { },\n    createNewProduct: () => { },\n    handleProductDelete: () => { },\n    updateProduct: () => { },\n    createNewLenses: () => { },\n    getLenses: () => { },\n    updateLenses: () => { },\n    deleteLense: () => { }\n})\n\nconst WarehouseProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n    const { setIsLoading, setShowModal, getMessage, closeModal } = useContext(LoadingModalContext)\n    const { push } = useHistory()\n\n    const [products, setProducts] = useState(null)\n    const [lenses, setLenses] = useState(null)\n    const [totalCount, setTotalCount] = useState(0)\n\n    const getProducts = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetchProducts(token)\n            const data = await response.json()\n\n            if (data.products) {\n                setTotalCount(totalCount + data.count)\n                setProducts(data.products)\n                setIsLoading(false)\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getLenses = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetchLenses(token)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.lenses) {\n                setTotalCount(totalCount + data.count)\n                setLenses(data.lenses)\n                setIsLoading(false)\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n    const deleteLense = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await delLense(token, id)\n            const data = await response.json()\n\n            if (data.lenses) {\n                getLenses()\n                // closeModal()\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createNewLenses = async (productToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await postLenses(token, productToAdd)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data) {\n                setIsLoading(false)\n                getMessage(data.message)\n                push('/dashboard/obchod')\n                getLenses()\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n    const updateLenses = async (productToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await patchLenses(token, productToAdd)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data) {\n                setIsLoading(false)\n                getMessage(data.message)\n                push('/dashboard/obchod')\n                getLenses()\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createNewProduct = async (productToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await postProduct(token, productToAdd)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.message)\n                setIsLoading(false)\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.success)\n            push('/dashboard/obchod')\n            getProducts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateProduct = async (productToUpdate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await patchProduct(token, productToUpdate)\n            const data = await response.json()\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.message)\n                setIsLoading(false)\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n            push('/dashboard/obchod')\n            getProducts()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleProductDelete = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await deleteProduct(token, id)\n            const data = await response.json()\n\n            console.log(data)\n\n            setIsLoading(false)\n            getMessage(data.message)\n            getProducts()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <WarehouseContext.Provider\n            value={{\n                products,\n                lenses,\n                totalCount,\n                getProducts,\n                createNewProduct,\n                handleProductDelete,\n                updateProduct,\n                createNewLenses,\n                getLenses,\n                updateLenses,\n                deleteLense\n            }}\n        >\n            {children}\n        </WarehouseContext.Provider>\n    )\n}\n\nexport default WarehouseProvider","/imooptik-frontend/src/context/user/user.context.jsx",[],"/imooptik-frontend/src/context/image/image.context.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.component.jsx",["326","327"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { useHistory } from 'react-router-dom'\n\nimport {\n    AsideContainer,\n    LogoContainer,\n    NavLinksContainer,\n    ToggleButton,\n    NavLinksButton,\n    ActiveBorder\n} from './sidenav.styles'\n\nconst Sidenav = ({ routes, match }) => {\n    const { logOut, currentUser } = useContext(AuthContext)\n    const { push } = useHistory()\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const [activeLink, setActiveLink] = useState(0)\n\n    const handleClick = (path, idx) => {\n        if (isOpen) {\n            setIsOpen(false)\n        }\n        setActiveLink(idx)\n        push(path)\n    }\n\n    return (\n        <React.Fragment>\n\n            <ToggleButton onClick={() => setIsOpen(!isOpen)} isOpen={isOpen}>\n                <div />\n                <div />\n                <div />\n            </ToggleButton>\n            <AsideContainer isOpen={isOpen}>\n                <LogoContainer isOpen={isOpen}>\n                    IMOOPTIK\n            </LogoContainer>\n                <NavLinksContainer>\n                    {routes.map((route, idx) => (\n                        <li key={idx}>\n                            <NavLinksButton onClick={() => handleClick(match.url + route.path, idx)} >\n                                <div /> {route.name}\n                            </NavLinksButton>\n                            <ActiveBorder isActive={activeLink === idx} />\n                        </li>\n                    ))}\n                    <li>\n                        <NavLinksButton onClick={logOut}>\n                            <div /> Odhlásiť sa\n                            <ActiveBorder />\n                        </NavLinksButton>\n                    </li>\n                </NavLinksContainer>\n                <div />\n            </AsideContainer>\n        </React.Fragment>\n    )\n}\n\nexport default Sidenav\n","/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.component.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.component.jsx",[],"/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx",["328","329","330"],"/imooptik-frontend/src/components/popup/pop-up.component.jsx",[],"/imooptik-frontend/src/sections/orders/orders.section.jsx",[],"/imooptik-frontend/src/sections/customers/customers.section.jsx",["331"],"import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { UserContext } from '../../context/user/user.context'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    CustomerContainer,\n    Content,\n    Options,\n    ProductId,\n    Description,\n    UpdateButton,\n    DeleteButton\n} from './customers.styles'\n\nconst CustomersSection = () => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n\n    const {\n        users,\n        totalCount,\n        isLoading,\n        message,\n        showModal,\n        getUsers,\n        closeModal\n    } = useContext(UserContext)\n\n    useEffect(() => {\n        if (!users) {\n            getUsers()\n        }\n    }, [users])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('zakaznici/novy-zakaznik')}\n                count={totalCount}\n                title=\"Zákazníci\"\n            />\n\n            <ScrollContainer>\n                {\n                    users && users.map(user => (\n                        <CustomerContainer key={user._id}>\n                            <Content>\n                                <h2>{user.name || user.email}</h2>\n                                <ProductId>{user._id}</ProductId>\n                                <Description>Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion daikon amaranth tatsoi...</Description>\n                            </Content>\n\n                            <Options>\n                                <UpdateButton onClick={() => push(`zakaznici/${user._id}`)}>\n                                    Upraviť\n                        </UpdateButton>\n                                <DeleteButton>\n                                    Vymazať\n                        </DeleteButton>\n                            </Options>\n                        </CustomerContainer>\n                    ))\n                }\n\n            </ScrollContainer>\n\n        </section>\n    )\n}\n\nexport default CustomersSection\n","/imooptik-frontend/src/sections/analytics/analytics.section.jsx",[],"/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx",["332","333","334"],"import React, { useState, useContext, useEffect } from 'react'\nimport { UserContext } from '../../context/user/user.context'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport OrderOverview from '../../components/order-overview/order-overview.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    Profile,\n    DeleteProfileButton,\n    // Name,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    SaveButton,\n    Title,\n    Container\n} from './customer-profile.styles'\n\nconst CustomerProfile = () => {\n    const {\n        user,\n        getUser,\n        closeModal,\n        isLoading,\n        showModal,\n        message\n    } = useContext(UserContext)\n    const { id } = useParams()\n    // const { push } = useHistory()\n\n    const [fName, setFName] = useState('')\n    const [lName, setLName] = useState('')\n\n    const [email, setEmail] = useState('')\n    const [phoneNumber, setPhoneNumber] = useState('')\n\n    const [street, setStreet] = useState('')\n    const [psc, setPsc] = useState('')\n    const [city, setCity] = useState('')\n    const [state, setState] = useState('')\n\n    const [dLeftEye, setDLeftEye] = useState('')\n    const [dRightEye, setDRightEye] = useState('')\n\n    const [rLeftEye, setRLeftEye] = useState('')\n    const [rRightEye, setRRightEye] = useState('')\n\n    const [cLeftEye, setCLeftEye] = useState('')\n    const [cRightEye, setCRightEye] = useState('')\n\n    const [ocLeftEye, setOcLeftEye] = useState('')\n    const [ocRightEye, setOcRightEye] = useState('')\n\n    console.log(id)\n    console.log(user)\n\n    useEffect(() => {\n        if (id === 'novy-zakaznik') return\n        getUser(id)\n    }, [id])\n\n    useEffect(() => {\n        if (user) {\n            if (user.name) {\n                setFName(user.name.split(\" \")[0] || '')\n                setLName(user.name.split(\" \")[1] || '')\n            }\n            setEmail(user.email || '')\n            setPhoneNumber(user.phone || '')\n            setStreet(user.address || '')\n            setPsc(user.psc || '')\n            setCity(user.city || '')\n            setState(user.country || '')\n\n            if (user.lenses.diopters.length > 0) {\n                setDLeftEye(user.lenses.diopters[0] || '')\n                setDRightEye(user.lenses.diopters[1] || '')\n            }\n            if (user.lenses.distance.length > 0) {\n                setRLeftEye(user.lenses.distance[0] || '')\n                setRRightEye(user.lenses.distance[1] || '')\n\n            }\n            if (user.lenses.cylinder.length > 0) {\n                setCLeftEye(user.lenses.cylinder[0] || '')\n                setCRightEye(user.lenses.cylinder[1] || '')\n            }\n            if (user.lenses.cylinderAxes.length > 0) {\n                setOcLeftEye(user.lenses.cylinderAxes[0] || '')\n                setOcRightEye(user.lenses.cylinderAxes[1] || '')\n            }\n        }\n        return () => {\n            setFName('')\n            setLName('')\n\n            setEmail('')\n            setPhoneNumber('')\n\n            setStreet('')\n            setPsc('')\n            setCity('')\n            setState('')\n\n            setDLeftEye('')\n            setDRightEye('')\n\n            setRLeftEye('')\n            setRRightEye('')\n\n            setCLeftEye('')\n            setCRightEye('')\n\n            setOcLeftEye('')\n            setOcRightEye('')\n        }\n    }, [user])\n\n    useEffect(() => {\n        if (id === 'novy-zakaznik') {\n            setFName('')\n            setLName('')\n\n            setEmail('')\n            setPhoneNumber('')\n\n            setStreet('')\n            setPsc('')\n            setCity('')\n            setState('')\n\n            setDLeftEye('')\n            setDRightEye('')\n\n            setRLeftEye('')\n            setRRightEye('')\n\n            setCLeftEye('')\n            setCRightEye('')\n\n            setOcLeftEye('')\n            setOcRightEye('')\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n\n            <Header>\n                <h1>Profil</h1>\n                <div>\n                    <DeleteProfileButton>Vymazať</DeleteProfileButton>\n                    <SaveButton>\n                        Uložiť zmeny\n                    </SaveButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                <GridContainer>\n                    <Profile>\n                        <div>\n                            <h2>Informácie</h2>\n                            <GridRow>\n                                <div>\n                                    <CustomInput\n                                        label=\"Meno\"\n                                        type='text'\n                                        name='fname'\n                                        value={fName}\n                                        handleChange={(e) => setFName(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Priezvisko\"\n                                        type='text'\n                                        name='lname'\n                                        value={lName}\n                                        handleChange={(e) => setLName(e.target.value)}\n                                    />\n                                </div>\n                            </GridRow>\n                        </div>\n\n                        <Container>\n                            <h2>Kontaktné údaje</h2>\n                            <Row>\n                                <div>\n                                    <CustomInput\n                                        label=\"E-mail\"\n                                        type='email'\n                                        name='email'\n                                        value={email}\n                                        handleChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Telefónne číslo\"\n                                        type='text'\n                                        name='phone'\n                                        value={phoneNumber}\n                                        handleChange={(e) => setPhoneNumber(e.target.value)}\n                                    />\n                                </div>\n                            </Row>\n                        </Container>\n\n                        <Container>\n                            <h2>Fakturačné údaje</h2>\n                            <GridRow>\n                                <ZeroMargin>\n                                    <CustomInput\n                                        label=\"Ulica a čislo domu\"\n                                        type='text'\n                                        name='street'\n                                        value={street}\n                                        handleChange={(e) => setStreet(e.target.value)}\n                                    />\n                                </ZeroMargin>\n                                <ZeroMargin>\n                                    <CustomInput\n                                        label=\"PSČ\"\n                                        type='text'\n                                        name='psc'\n                                        value={psc}\n                                        handleChange={(e) => setPsc(e.target.value)}\n                                    />\n                                </ZeroMargin>\n                            </GridRow>\n                            <GridRow>\n                                <div>\n                                    <CustomInput\n                                        label=\"Mesto\"\n                                        type='text'\n                                        name='city'\n                                        value={city}\n                                        handleChange={(e) => setCity(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Krajina\"\n                                        type='text'\n                                        name='state'\n                                        value={state}\n                                        handleChange={(e) => setState(e.target.value)}\n                                    />\n                                </div>\n                            </GridRow>\n                        </Container>\n\n                        <Container>\n                            <h2>Parametre</h2>\n\n                            <ThreeColRow>\n                                <div>\n                                    Dioptrie\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Ľavé oko\"\n                                        type='text'\n                                        name='city'\n                                        value={dLeftEye}\n                                        handleChange={(e) => setDLeftEye(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Pravé oko\"\n                                        type='text'\n                                        name='state'\n                                        value={dRightEye}\n                                        handleChange={(e) => setDRightEye(e.target.value)}\n                                    />\n                                </div>\n                            </ThreeColRow>\n\n                            <ThreeColRow>\n                                <div>\n                                    Vzdialenosť\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Ľavé oko\"\n                                        type='text'\n                                        name='city'\n                                        value={rLeftEye}\n                                        handleChange={(e) => setRLeftEye(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Pravé oko\"\n                                        type='text'\n                                        name='state'\n                                        value={rRightEye}\n                                        handleChange={(e) => setRRightEye(e.target.value)}\n                                    />\n                                </div>\n                            </ThreeColRow>\n\n                            <ThreeColRow>\n                                <div>\n                                    Cylinder\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Ľavé oko\"\n                                        type='text'\n                                        name='city'\n                                        value={cLeftEye}\n                                        handleChange={(e) => setCLeftEye(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Pravé oko\"\n                                        type='text'\n                                        name='state'\n                                        value={cRightEye}\n                                        handleChange={(e) => setCRightEye(e.target.value)}\n                                    />\n                                </div>\n                            </ThreeColRow>\n\n                            <ThreeColRow>\n                                <div>\n                                    Os cylindrov\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Ľavé oko\"\n                                        type='text'\n                                        name='city'\n                                        value={ocLeftEye}\n                                        handleChange={(e) => setOcLeftEye(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Pravé oko\"\n                                        type='text'\n                                        name='state'\n                                        value={ocRightEye}\n                                        handleChange={(e) => setOcRightEye(e.target.value)}\n                                    />\n                                </div>\n                            </ThreeColRow>\n                        </Container>\n\n\n                    </Profile>\n\n                    <div>\n                        <Title>\n                            Objednávky\n                        </Title>\n\n                        <div>\n                            <OrderOverview\n                                name='Product name'\n                                id='[Product ID]'\n                                date='28. November 2020'\n                                totalPrice='99.99'\n                            />\n                            <OrderOverview\n                                name='Product name'\n                                id='[Product ID]'\n                                date='28. November 2020'\n                                totalPrice='99.99'\n                            />\n                            <OrderOverview\n                                name='Product name'\n                                id='[Product ID]'\n                                date='28. November 2020'\n                                totalPrice='99.99'\n                            />\n                        </div>\n                    </div>\n                </GridContainer>\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CustomerProfile\n","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx",["335"],"import React, { useState, useEffect, useContext } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    PostContainer,\n    PostImage,\n    PostContent,\n    Options,\n    UpdateButton,\n    DeleteButton\n} from './blog-posts.styles'\n\nconst BlogPosts = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { getPosts, posts, postsCount, handlePostDelete } = useContext(BlogContext)\n    const { push } = useHistory()\n    const [searchQuery, setSearchQuery] = useState('')\n    const items = [\n        {\n            id: 0,\n            name: \"Dátum pridania\"\n        },\n        {\n            id: 1,\n            name: \"Abecedne\"\n        },\n    ]\n\n    const [activeIndex, setActiveIndex] = useState(0)\n\n    useEffect(() => {\n        if (!posts) {\n            getPosts(items[activeIndex])\n        }\n    }, [posts])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('blog/novy-prispevok')}\n                count={postsCount}\n                title=\"Blog\"\n            />\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                {\n                    posts && posts.length ? posts.map(post => (\n                        <PostContainer key={post._id}>\n                            <PostImage>\n                                {post.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${post.image.imagePath}`} alt={post.image.alt} />}\n                            </PostImage>\n                            <PostContent>\n                                <h2>{post.name}</h2>\n                                <p>{post.description}</p>\n                            </PostContent>\n                            <Options>\n                                <UpdateButton onClick={() => push(`blog/${post._id}`)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={() => handlePostDelete(post._id)}>Vymazať</DeleteButton>\n                            </Options>\n                        </PostContainer>\n                    )) : (\n                            <div>\n                                Žiadne príspevky\n                            </div>\n                        )\n                }\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BlogPosts\n","/imooptik-frontend/src/sections/product/product.section.jsx",["336","337","338","339","340"],"/imooptik-frontend/src/sections/booking/booking.section.jsx",[],"/imooptik-frontend/src/sections/post/post.section.jsx",["341","342"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport CustomTextarea from '../../components/custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport { Quill } from 'react-quill'\n\nimport {\n    Header,\n    GridContainer,\n    PostImage,\n    DeleteButton,\n    AddButton,\n    Title,\n    ContentTextare,\n} from './post.styles'\n\nconst PostSection = () => {\n    const { id } = useParams()\n    const { push } = useHistory()\n    const {\n        createPost,\n        isLoading,\n        message,\n        showLoading,\n        setIsLoading,\n        getPost,\n        post,\n        handlePostUpdate\n    } = useContext(BlogContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [content, setContent] = useState('')\n    const [image, setImage] = useState('')\n    const [draft, toggleDraft] = useState(false)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (image.length <= 0) return\n        if (content.length <= 0) return\n\n        if (id === 'novy-prispevok') {\n            createPost(image, title, description, draft, content)\n        } else {\n            handlePostUpdate(title, description, draft, content, image, id)\n        }\n\n        push('/dashboard/blog')\n\n    }\n\n    useEffect(() => {\n        setSelectedImage(null)\n\n        if (id !== 'novy-prispevok') {\n            getPost(id)\n            setIsUpdating(true)\n        }\n    }, [id])\n\n    useEffect(() => {\n        console.log(post)\n        if (post) {\n            console.log(post)\n            setTitle(post.name)\n            setDescription(post.description)\n            setContent(post.html)\n            toggleDraft(post.draft)\n            if (post.image) {\n                setImage(post.image._id)\n                setSelectedImage(post.image)\n            }\n        }\n    }, [post])\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {isLoading && <Popup loading={showLoading} title={message} close={() => setIsLoading(false)} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={setImage} />}\n\n            <Header>\n                <div>\n                    <h1>Post</h1>\n                </div>\n                <div>\n                    <CustomCheckbox\n                        label='Draft'\n                        checked={draft}\n                        onChange={() => toggleDraft(!draft)}\n                    />\n                    <DeleteButton>Vymazať</DeleteButton>\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť príspevok\" : \"Pridať príspevok\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n\n                <GridContainer>\n                    <div>\n                        <h2>Informácia</h2>\n                        <CustomInput\n                            label=\"Nadpis\"\n                            type='text'\n                            name='title'\n                            value={title}\n                            handleChange={(e) => setTitle(e.target.value)}\n                            required\n                        />\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={description}\n                            handleChange={(e) => setDescription(e.target.value)}\n                            required\n                        />\n                        <h2>Titulná fotka</h2>\n                        <PostImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </PostImage>\n                    </div>\n                    <div>\n                        <Title>Obsah</Title>\n                        <QuillToolbar />\n                        <ContentTextare\n                            value={content}\n                            onChange={setContent}\n                            modules={modules}\n                            formats={formats}\n                        />\n                    </div>\n\n                </GridContainer>\n\n            </ScrollContainer>\n        </form>\n    )\n}\n\n\nconst CustomUndo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n        />\n    </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n        />\n    </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n    this.quill.history.undo();\n}\nfunction redoChange() {\n    this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n    \"arial\",\n    \"comic-sans\",\n    \"courier-new\",\n    \"georgia\",\n    \"helvetica\",\n    \"lucida\"\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nconst modules = {\n    toolbar: {\n        container: \"#toolbar\",\n        handlers: {\n            undo: undoChange,\n            redo: redoChange\n        }\n    },\n    history: {\n        delay: 500,\n        maxStack: 100,\n        userOnly: true\n    }\n};\n\n// Formats objects for setting up the Quill editor\nconst formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"align\",\n    \"strike\",\n    \"script\",\n    \"blockquote\",\n    \"background\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"color\",\n    \"code-block\"\n];\n\n// Quill Toolbar component\nconst QuillToolbar = () => (\n    <div id=\"toolbar\" className=\"toolbar\">\n        <span className=\"ql-formats\">\n            <select className=\"ql-size\" defaultValue=\"medium\">\n                <option value=\"extra-small\">Size 1</option>\n                <option value=\"small\">Size 2</option>\n                <option value=\"medium\">Size 3</option>\n                <option value=\"large\">Size 4</option>\n            </select>\n            <select className=\"ql-header\" defaultValue=\"3\">\n                <option value=\"1\">Heading</option>\n                <option value=\"2\">Subheading</option>\n                <option value=\"3\">Normal</option>\n            </select>\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n        </span>\n        <span className=\"ql-formats\">\n            <select className=\"ql-align\" />\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n                <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n                <CustomRedo />\n            </button>\n        </span>\n    </div>\n);\n\n\nexport default PostSection\n","/imooptik-frontend/src/context/warehouse/warehouse.queries.jsx",["343"],"/imooptik-frontend/src/components/custom-button/custom-button.component.jsx",[],"/imooptik-frontend/src/context/blog/blog.queries.jsx",[],"/imooptik-frontend/src/context/user/user.queries.jsx",[],"/imooptik-frontend/src/context/image/image.queries.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx",[],"/imooptik-frontend/src/components/popup/pop.up.styles.jsx",[],"/imooptik-frontend/src/sections/customers/customers.styles.jsx",[],"/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx",[],"/imooptik-frontend/src/sections/analytics/analytics.styles.jsx",[],"/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx",[],"/imooptik-frontend/src/sections/product/product.styles.jsx",[],"/imooptik-frontend/src/sections/product/product.utils.jsx",[],"/imooptik-frontend/src/sections/post/post.styles.jsx",[],"/imooptik-frontend/src/sections/booking/booking.styles.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.component.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.component.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.component.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.component.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.component.jsx",["344"],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx",[],"/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx",["345"],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.component.jsx",[],"/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.styles.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.styles.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx",[],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx",[],"/imooptik-frontend/src/components/pagination/pagination.component.jsx",[],"/imooptik-frontend/src/components/pagination/pagination.styles.jsx",[],{"ruleId":"346","replacedBy":"347"},{"ruleId":"348","replacedBy":"349"},{"ruleId":"350","severity":1,"message":"351","line":28,"column":9,"nodeType":"352","messageId":"353","endLine":28,"endColumn":19},{"ruleId":"350","severity":1,"message":"351","line":34,"column":53,"nodeType":"352","messageId":"353","endLine":34,"endColumn":63},{"ruleId":"350","severity":1,"message":"354","line":1,"column":39,"nodeType":"352","messageId":"353","endLine":1,"endColumn":48},{"ruleId":"350","severity":1,"message":"355","line":15,"column":21,"nodeType":"352","messageId":"353","endLine":15,"endColumn":32},{"ruleId":"356","severity":1,"message":"357","line":84,"column":8,"nodeType":"358","endLine":84,"endColumn":33,"suggestions":"359"},{"ruleId":"356","severity":1,"message":"360","line":90,"column":8,"nodeType":"358","endLine":90,"endColumn":10,"suggestions":"361"},{"ruleId":"350","severity":1,"message":"362","line":94,"column":29,"nodeType":"352","messageId":"353","endLine":94,"endColumn":47},{"ruleId":"356","severity":1,"message":"363","line":37,"column":8,"nodeType":"358","endLine":37,"endColumn":15,"suggestions":"364"},{"ruleId":"350","severity":1,"message":"365","line":3,"column":21,"nodeType":"352","messageId":"353","endLine":3,"endColumn":31},{"ruleId":"356","severity":1,"message":"366","line":66,"column":8,"nodeType":"358","endLine":66,"endColumn":12,"suggestions":"367"},{"ruleId":"356","severity":1,"message":"368","line":150,"column":8,"nodeType":"358","endLine":150,"endColumn":10,"suggestions":"369"},{"ruleId":"356","severity":1,"message":"370","line":47,"column":8,"nodeType":"358","endLine":47,"endColumn":15,"suggestions":"371"},{"ruleId":"350","severity":1,"message":"372","line":20,"column":5,"nodeType":"352","messageId":"353","endLine":20,"endColumn":20},{"ruleId":"356","severity":1,"message":"373","line":248,"column":8,"nodeType":"358","endLine":248,"endColumn":12,"suggestions":"374"},{"ruleId":"356","severity":1,"message":"375","line":257,"column":8,"nodeType":"358","endLine":257,"endColumn":36,"suggestions":"376"},{"ruleId":"356","severity":1,"message":"377","line":272,"column":8,"nodeType":"358","endLine":272,"endColumn":15,"suggestions":"378"},{"ruleId":"379","severity":1,"message":"380","line":350,"column":71,"nodeType":"381","messageId":"382","endLine":350,"endColumn":77},{"ruleId":"356","severity":1,"message":"383","line":69,"column":8,"nodeType":"358","endLine":69,"endColumn":12,"suggestions":"384"},{"ruleId":"356","severity":1,"message":"385","line":84,"column":8,"nodeType":"358","endLine":84,"endColumn":14,"suggestions":"386"},{"ruleId":"350","severity":1,"message":"387","line":234,"column":9,"nodeType":"352","messageId":"353","endLine":234,"endColumn":15},{"ruleId":"388","severity":1,"message":"389","line":169,"column":45,"nodeType":"390","endLine":169,"endColumn":160},{"ruleId":"350","severity":1,"message":"391","line":8,"column":5,"nodeType":"352","messageId":"353","endLine":8,"endColumn":17},"no-native-reassign",["392"],"no-negated-in-lhs",["393"],"no-unused-vars","'closeModal' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'currentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'closeModal', 'getLenses', 'getProducts', and 'message'. Either include them or remove the dependency array.","ArrayExpression",["394"],"React Hook useEffect has a missing dependency: 'filteredItems'. Either include it or remove the dependency array.",["395"],"'setProductsPerPage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["396"],"'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["397"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["398"],"React Hook useEffect has missing dependencies: 'activeIndex', 'getPosts', and 'items'. Either include them or remove the dependency array.",["399"],"'resetProductObj' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser.admin', 'lenses', 'products', 'resetProduct', and 'setSelectedImage'. Either include them or remove the dependency array.",["400"],"React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array. You can also do a functional update 'setProduct(p => ...)' if you only need 'product' in the 'setProduct' call.",["401"],"React Hook useEffect has missing dependencies: 'activeProductCategoryIndex', 'lense', and 'product'. Either include them or remove the dependency array. You can also do a functional update 'setProduct(p => ...)' if you only need 'product' in the 'setProduct' call.",["402"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has missing dependencies: 'getPost' and 'setSelectedImage'. Either include them or remove the dependency array.",["403"],"React Hook useEffect has a missing dependency: 'setSelectedImage'. Either include it or remove the dependency array.",["404"],"'newArr' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FormCheckbox' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},"Update the dependencies array to be: [products, lenses, token, message, getProducts, getLenses, closeModal]",{"range":"427","text":"428"},"Update the dependencies array to be: [filteredItems]",{"range":"429","text":"430"},"Update the dependencies array to be: [getUsers, users]",{"range":"431","text":"432"},"Update the dependencies array to be: [getUser, id]",{"range":"433","text":"434"},"Update the dependencies array to be: [id]",{"range":"435","text":"436"},"Update the dependencies array to be: [activeIndex, getPosts, items, posts]",{"range":"437","text":"438"},"Update the dependencies array to be: [currentUser.admin, id, lenses, products, resetProduct, setSelectedImage]",{"range":"439","text":"440"},"Update the dependencies array to be: [activeProductCategoryIndex, product]",{"range":"441","text":"442"},"Update the dependencies array to be: [activeProductCategoryIndex, image, lense, product]",{"range":"443","text":"444"},"Update the dependencies array to be: [getPost, id, setSelectedImage]",{"range":"445","text":"446"},"Update the dependencies array to be: [post, setSelectedImage]",{"range":"447","text":"448"},[2326,2351],"[products, lenses, token, message, getProducts, getLenses, closeModal]",[2477,2479],"[filteredItems]",[942,949],"[getUsers, users]",[1870,1874],"[getUser, id]",[4081,4083],"[id]",[1376,1383],"[activeIndex, getPosts, items, posts]",[7000,7004],"[currentUser.admin, id, lenses, products, resetProduct, setSelectedImage]",[7205,7233],"[activeProductCategoryIndex, product]",[7572,7579],"[activeProductCategoryIndex, image, lense, product]",[2185,2189],"[getPost, id, setSelectedImage]",[2584,2590],"[post, setSelectedImage]"]
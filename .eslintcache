[{"/imooptik-frontend/src/index.js":"1","/imooptik-frontend/src/reportWebVitals.js":"2","/imooptik-frontend/src/App.jsx":"3","/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx":"4","/imooptik-frontend/src/context/auth/auth.context.jsx":"5","/imooptik-frontend/src/global.styles.jsx":"6","/imooptik-frontend/src/components/popup/pop-up.component.jsx":"7","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx":"8","/imooptik-frontend/src/pages/reset-password/reset-password.jsx":"9","/imooptik-frontend/src/pages/dashboard/dashboard.jsx":"10","/imooptik-frontend/src/context/auth/auth.queries.jsx":"11","/imooptik-frontend/src/components/popup/pop.up.styles.jsx":"12","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx":"13","/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx":"14","/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx":"15","/imooptik-frontend/src/components/custom-button/custom-button.component.jsx":"16","/imooptik-frontend/src/components/spinner/spinner.component.jsx":"17","/imooptik-frontend/src/components/sign-in/sign-in.component.jsx":"18","/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx":"19","/imooptik-frontend/src/components/custom-input/custom-input.component.jsx":"20","/imooptik-frontend/src/components/sidenav/sidenav.component.jsx":"21","/imooptik-frontend/src/context/image/image.context.jsx":"22","/imooptik-frontend/src/context/blog/blog.context.jsx":"23","/imooptik-frontend/src/context/user/user.context.jsx":"24","/imooptik-frontend/src/context/warehouse/warehouse.context.jsx":"25","/imooptik-frontend/src/context/booking/booking.context.jsx":"26","/imooptik-frontend/src/context/orders/orders.context.jsx":"27","/imooptik-frontend/src/context/analytics/analytics.context.jsx":"28","/imooptik-frontend/src/context/coupons/coupons.context.jsx":"29","/imooptik-frontend/src/context/examination/examination.context.jsx":"30","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx":"31","/imooptik-frontend/src/sections/customers/customers.section.jsx":"32","/imooptik-frontend/src/sections/orders/orders.section.jsx":"33","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx":"34","/imooptik-frontend/src/sections/product/product.section.jsx":"35","/imooptik-frontend/src/sections/analytics/analytics.section.jsx":"36","/imooptik-frontend/src/sections/booking/booking.section.jsx":"37","/imooptik-frontend/src/sections/post/post.section.jsx":"38","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx":"39","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx":"40","/imooptik-frontend/src/sections/order/order.section.jsx":"41","/imooptik-frontend/src/sections/coupons/coupons.section.jsx":"42","/imooptik-frontend/src/sections/calendar/calendar.section.jsx":"43","/imooptik-frontend/src/sections/coupon/coupon.section.jsx":"44","/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx":"45","/imooptik-frontend/src/components/spinner/spinner.styles.jsx":"46","/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx":"47","/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx":"48","/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx":"49","/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx":"50","/imooptik-frontend/src/context/image/image.queries.jsx":"51","/imooptik-frontend/src/context/user/user.queries.jsx":"52","/imooptik-frontend/src/context/blog/blog.queries.jsx":"53","/imooptik-frontend/src/context/user/user.utils.jsx":"54","/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx":"55","/imooptik-frontend/src/sections/customers/customers.styles.jsx":"56","/imooptik-frontend/src/sections/orders/orders.styles.jsx":"57","/imooptik-frontend/src/context/orders/orders.utils.jsx":"58","/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx":"59","/imooptik-frontend/src/sections/analytics/analytics.styles.jsx":"60","/imooptik-frontend/src/sections/product/product.styles.jsx":"61","/imooptik-frontend/src/sections/coupon/coupon.styles.jsx":"62","/imooptik-frontend/src/sections/calendar/calendar.styles.jsx":"63","/imooptik-frontend/src/sections/coupons/coupons.styles.jsx":"64","/imooptik-frontend/src/sections/order/order.styles.jsx":"65","/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx":"66","/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx":"67","/imooptik-frontend/src/sections/post/post.styles.jsx":"68","/imooptik-frontend/src/components/section-header/section-header.component.jsx":"69","/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx":"70","/imooptik-frontend/src/components/list-arrows/list-arrows.component.jsx":"71","/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx":"72","/imooptik-frontend/src/components/product-overview/product-overview.component.jsx":"73","/imooptik-frontend/src/hooks/useFetch.jsx":"74","/imooptik-frontend/src/components/user-form/user-form.component.jsx":"75","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx":"76","/imooptik-frontend/src/components/order-overview/order-overview.component.jsx":"77","/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx":"78","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx":"79","/imooptik-frontend/src/components/modal-images/modal-images.component.jsx":"80","/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.component.jsx":"81","/imooptik-frontend/src/utils/warehouse.utils.jsx":"82","/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.component.jsx":"83","/imooptik-frontend/src/utils/calendar.utils.jsx":"84","/imooptik-frontend/src/utils/analytics.utils.jsx":"85","/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx":"86","/imooptik-frontend/src/components/custom-select/custom-select.component.jsx":"87","/imooptik-frontend/src/components/modal-finish-combined-product/modal-finish-combined-product.component.jsx":"88","/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx":"89","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx":"90","/imooptik-frontend/src/sections/order/steps/4-summary/summary.component.jsx":"91","/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.component.jsx":"92","/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.component.jsx":"93","/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.component.jsx":"94","/imooptik-frontend/src/sections/booking/booking.styles.jsx":"95","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx":"96","/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.component.jsx":"97","/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.component.jsx":"98","/imooptik-frontend/src/components/calendar/calendar.component.jsx":"99","/imooptik-frontend/src/components/booking-appoinments/booking-appoinment.component.jsx":"100","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx":"101","/imooptik-frontend/src/components/section-header/section-header.styles.jsx":"102","/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx":"103","/imooptik-frontend/src/components/user-form/user.form-styles.jsx":"104","/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx":"105","/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx":"106","/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx":"107","/imooptik-frontend/src/components/list-arrows/list-arrows.styles.jsx":"108","/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx":"109","/imooptik-frontend/src/hooks/useOutsideAlerter.jsx":"110","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx":"111","/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx":"112","/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx":"113","/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.styles.jsx":"114","/imooptik-frontend/src/components/custom-select/custom-select.styles.jsx":"115","/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx":"116","/imooptik-frontend/src/components/modal-finish-combined-product/modal-finish-combined-product.styles.jsx":"117","/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx":"118","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx":"119","/imooptik-frontend/src/components/examinations-overview/examinations-overview.component.jsx":"120","/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx":"121","/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx":"122","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx":"123","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx":"124","/imooptik-frontend/src/sections/order/steps/4-summary/summary.styles.jsx":"125","/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.styles.jsx":"126","/imooptik-frontend/src/utils/orders.utils.jsx":"127","/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.styles.jsx":"128","/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.styles.jsx":"129","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.component.jsx":"130","/imooptik-frontend/src/components/order-summary-lenses-name/order-summary-lenses-name.component.jsx":"131","/imooptik-frontend/src/components/order-summary-product-name/order-summary-product-name.component.jsx":"132","/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx":"133","/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.styles.jsx":"134","/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.styles.jsx":"135","/imooptik-frontend/src/components/calendar/calendar.styles.jsx":"136","/imooptik-frontend/src/components/booking-appoinments/booking-appoinment.styles.jsx":"137","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx":"138","/imooptik-frontend/src/components/booking-appoinment/booking-appoinment.component.jsx":"139","/imooptik-frontend/src/components/modal-booking/modal-booking.component.jsx":"140","/imooptik-frontend/src/utils/parameters.utils.jsx":"141","/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx":"142","/imooptik-frontend/src/components/examinations-overview/examinations-overview.styles.jsx":"143","/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx":"144","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx":"145","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx":"146","/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.component.jsx":"147","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.styles.jsx":"148","/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx":"149","/imooptik-frontend/src/components/examination-user/examination-user.component.jsx":"150","/imooptik-frontend/src/components/modal-booking/modal-booking.styles.jsx":"151","/imooptik-frontend/src/components/examination-user/examination-user.styles.jsx":"152","/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx":"153","/imooptik-frontend/src/sections/e-shop/e-shop.styles.jsx":"154","/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.component.jsx":"155","/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.styles.jsx":"156","/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.component.jsx":"157","/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.styles.jsx":"158","/imooptik-frontend/src/utils/user.utils.jsx":"159"},{"size":717,"mtime":1608670306490,"results":"160","hashOfConfig":"161"},{"size":362,"mtime":1608191294784,"results":"162","hashOfConfig":"161"},{"size":1717,"mtime":1612809435787,"results":"163","hashOfConfig":"161"},{"size":1076,"mtime":1610126635393,"results":"164","hashOfConfig":"161"},{"size":6931,"mtime":1612361908070,"results":"165","hashOfConfig":"161"},{"size":4155,"mtime":1613074329810,"results":"166","hashOfConfig":"161"},{"size":714,"mtime":1609965412857,"results":"167","hashOfConfig":"161"},{"size":840,"mtime":1609978179243,"results":"168","hashOfConfig":"161"},{"size":1667,"mtime":1608613259561,"results":"169","hashOfConfig":"161"},{"size":8769,"mtime":1612394282200,"results":"170","hashOfConfig":"161"},{"size":2292,"mtime":1610635788267,"results":"171","hashOfConfig":"161"},{"size":721,"mtime":1612808901067,"results":"172","hashOfConfig":"161"},{"size":545,"mtime":1612808589467,"results":"173","hashOfConfig":"161"},{"size":772,"mtime":1610476886850,"results":"174","hashOfConfig":"161"},{"size":652,"mtime":1612801843627,"results":"175","hashOfConfig":"161"},{"size":283,"mtime":1608325857586,"results":"176","hashOfConfig":"161"},{"size":178,"mtime":1608409397640,"results":"177","hashOfConfig":"161"},{"size":1925,"mtime":1609978226453,"results":"178","hashOfConfig":"161"},{"size":1466,"mtime":1609978281513,"results":"179","hashOfConfig":"161"},{"size":639,"mtime":1608689089980,"results":"180","hashOfConfig":"161"},{"size":2388,"mtime":1613160245370,"results":"181","hashOfConfig":"161"},{"size":4422,"mtime":1611960472114,"results":"182","hashOfConfig":"161"},{"size":4047,"mtime":1612461301680,"results":"183","hashOfConfig":"161"},{"size":12048,"mtime":1613172911659,"results":"184","hashOfConfig":"161"},{"size":25431,"mtime":1612900533359,"results":"185","hashOfConfig":"161"},{"size":7108,"mtime":1613084180800,"results":"186","hashOfConfig":"161"},{"size":5033,"mtime":1612890182449,"results":"187","hashOfConfig":"161"},{"size":1778,"mtime":1611793524374,"results":"188","hashOfConfig":"161"},{"size":7011,"mtime":1611198583300,"results":"189","hashOfConfig":"161"},{"size":3493,"mtime":1612458174320,"results":"190","hashOfConfig":"161"},{"size":5640,"mtime":1613165485770,"results":"191","hashOfConfig":"161"},{"size":4869,"mtime":1613225661911,"results":"192","hashOfConfig":"161"},{"size":6137,"mtime":1613225620441,"results":"193","hashOfConfig":"161"},{"size":6670,"mtime":1613175029639,"results":"194","hashOfConfig":"161"},{"size":18010,"mtime":1613229257881,"results":"195","hashOfConfig":"161"},{"size":4716,"mtime":1612902039629,"results":"196","hashOfConfig":"161"},{"size":9587,"mtime":1613238228571,"results":"197","hashOfConfig":"161"},{"size":9758,"mtime":1612970796630,"results":"198","hashOfConfig":"161"},{"size":4810,"mtime":1612970338420,"results":"199","hashOfConfig":"161"},{"size":810,"mtime":1610132345623,"results":"200","hashOfConfig":"161"},{"size":6506,"mtime":1613175777179,"results":"201","hashOfConfig":"161"},{"size":2965,"mtime":1612745938976,"results":"202","hashOfConfig":"161"},{"size":12058,"mtime":1612988270310,"results":"203","hashOfConfig":"161"},{"size":5575,"mtime":1612745901696,"results":"204","hashOfConfig":"161"},{"size":440,"mtime":1609635534260,"results":"205","hashOfConfig":"161"},{"size":377,"mtime":1608409635720,"results":"206","hashOfConfig":"161"},{"size":898,"mtime":1609978275513,"results":"207","hashOfConfig":"161"},{"size":975,"mtime":1612808569627,"results":"208","hashOfConfig":"161"},{"size":1331,"mtime":1612803190107,"results":"209","hashOfConfig":"161"},{"size":4993,"mtime":1612832549277,"results":"210","hashOfConfig":"161"},{"size":1560,"mtime":1610106635382,"results":"211","hashOfConfig":"161"},{"size":3530,"mtime":1611960472114,"results":"212","hashOfConfig":"161"},{"size":1793,"mtime":1608678905090,"results":"213","hashOfConfig":"161"},{"size":897,"mtime":1611960472114,"results":"214","hashOfConfig":"161"},{"size":5293,"mtime":1613229296151,"results":"215","hashOfConfig":"161"},{"size":1027,"mtime":1612890733849,"results":"216","hashOfConfig":"161"},{"size":1115,"mtime":1612827087027,"results":"217","hashOfConfig":"161"},{"size":834,"mtime":1612485945670,"results":"218","hashOfConfig":"161"},{"size":688,"mtime":1612805274117,"results":"219","hashOfConfig":"161"},{"size":1106,"mtime":1612902689849,"results":"220","hashOfConfig":"161"},{"size":1008,"mtime":1612827031697,"results":"221","hashOfConfig":"161"},{"size":1157,"mtime":1612828486397,"results":"222","hashOfConfig":"161"},{"size":3206,"mtime":1612979284800,"results":"223","hashOfConfig":"161"},{"size":1294,"mtime":1612826862757,"results":"224","hashOfConfig":"161"},{"size":454,"mtime":1612803607557,"results":"225","hashOfConfig":"161"},{"size":1708,"mtime":1612831863237,"results":"226","hashOfConfig":"161"},{"size":728,"mtime":1610132354653,"results":"227","hashOfConfig":"161"},{"size":2024,"mtime":1612970501200,"results":"228","hashOfConfig":"161"},{"size":1370,"mtime":1611960472114,"results":"229","hashOfConfig":"161"},{"size":655,"mtime":1613076713220,"results":"230","hashOfConfig":"161"},{"size":1807,"mtime":1613160077810,"results":"231","hashOfConfig":"161"},{"size":320,"mtime":1611163718930,"results":"232","hashOfConfig":"161"},{"size":1416,"mtime":1611960472114,"results":"233","hashOfConfig":"161"},{"size":3631,"mtime":1612564271900,"results":"234","hashOfConfig":"161"},{"size":11444,"mtime":1612474871810,"results":"235","hashOfConfig":"161"},{"size":3741,"mtime":1611960472114,"results":"236","hashOfConfig":"161"},{"size":4034,"mtime":1612892288139,"results":"237","hashOfConfig":"161"},{"size":16547,"mtime":1611960472104,"results":"238","hashOfConfig":"161"},{"size":8404,"mtime":1613154476020,"results":"239","hashOfConfig":"161"},{"size":8363,"mtime":1611078296630,"results":"240","hashOfConfig":"161"},{"size":4598,"mtime":1612900413619,"results":"241","hashOfConfig":"161"},{"size":2192,"mtime":1613154537280,"results":"242","hashOfConfig":"161"},{"size":8225,"mtime":1613154581560,"results":"243","hashOfConfig":"161"},{"size":8179,"mtime":1613236344731,"results":"244","hashOfConfig":"161"},{"size":403,"mtime":1612912179069,"results":"245","hashOfConfig":"161"},{"size":425,"mtime":1609365301650,"results":"246","hashOfConfig":"161"},{"size":693,"mtime":1612972806200,"results":"247","hashOfConfig":"161"},{"size":18664,"mtime":1613001027700,"results":"248","hashOfConfig":"161"},{"size":651,"mtime":1608506295620,"results":"249","hashOfConfig":"161"},{"size":354,"mtime":1610748624680,"results":"250","hashOfConfig":"161"},{"size":9344,"mtime":1612891468039,"results":"251","hashOfConfig":"161"},{"size":4062,"mtime":1612805777737,"results":"252","hashOfConfig":"161"},{"size":3083,"mtime":1612401214790,"results":"253","hashOfConfig":"161"},{"size":2999,"mtime":1612400717780,"results":"254","hashOfConfig":"161"},{"size":1705,"mtime":1613160316530,"results":"255","hashOfConfig":"161"},{"size":1698,"mtime":1612826981347,"results":"256","hashOfConfig":"161"},{"size":5293,"mtime":1613158931290,"results":"257","hashOfConfig":"161"},{"size":3283,"mtime":1613151536940,"results":"258","hashOfConfig":"161"},{"size":3110,"mtime":1612991892600,"results":"259","hashOfConfig":"161"},{"size":1559,"mtime":1613150212680,"results":"260","hashOfConfig":"161"},{"size":999,"mtime":1612984003740,"results":"261","hashOfConfig":"161"},{"size":1088,"mtime":1612802413197,"results":"262","hashOfConfig":"161"},{"size":782,"mtime":1612802325417,"results":"263","hashOfConfig":"161"},{"size":2225,"mtime":1612827757387,"results":"264","hashOfConfig":"161"},{"size":908,"mtime":1612832700117,"results":"265","hashOfConfig":"161"},{"size":2193,"mtime":1612808323487,"results":"266","hashOfConfig":"161"},{"size":1000,"mtime":1612827711647,"results":"267","hashOfConfig":"161"},{"size":602,"mtime":1612796947987,"results":"268","hashOfConfig":"161"},{"size":2624,"mtime":1612827167197,"results":"269","hashOfConfig":"161"},{"size":1400,"mtime":1611365536654,"results":"270","hashOfConfig":"161"},{"size":1301,"mtime":1612828444267,"results":"271","hashOfConfig":"161"},{"size":447,"mtime":1609638204590,"results":"272","hashOfConfig":"161"},{"size":1564,"mtime":1612828401497,"results":"273","hashOfConfig":"161"},{"size":1115,"mtime":1612828420327,"results":"274","hashOfConfig":"161"},{"size":364,"mtime":1612973498140,"results":"275","hashOfConfig":"161"},{"size":4564,"mtime":1613054876220,"results":"276","hashOfConfig":"161"},{"size":4077,"mtime":1612892565019,"results":"277","hashOfConfig":"161"},{"size":1124,"mtime":1612806552957,"results":"278","hashOfConfig":"161"},{"size":698,"mtime":1612898195179,"results":"279","hashOfConfig":"161"},{"size":8127,"mtime":1612447257340,"results":"280","hashOfConfig":"161"},{"size":6582,"mtime":1613155269070,"results":"281","hashOfConfig":"161"},{"size":3159,"mtime":1612467346790,"results":"282","hashOfConfig":"161"},{"size":1550,"mtime":1612478391310,"results":"283","hashOfConfig":"161"},{"size":681,"mtime":1610146980773,"results":"284","hashOfConfig":"161"},{"size":3112,"mtime":1612891492129,"results":"285","hashOfConfig":"161"},{"size":1497,"mtime":1612892455469,"results":"286","hashOfConfig":"161"},{"size":587,"mtime":1612445089420,"results":"287","hashOfConfig":"161"},{"size":1593,"mtime":1612827539257,"results":"288","hashOfConfig":"161"},{"size":1458,"mtime":1612888993149,"results":"289","hashOfConfig":"161"},{"size":9563,"mtime":1612898517019,"results":"290","hashOfConfig":"161"},{"size":434,"mtime":1612445561440,"results":"291","hashOfConfig":"161"},{"size":442,"mtime":1612445565000,"results":"292","hashOfConfig":"161"},{"size":341,"mtime":1610810143010,"results":"293","hashOfConfig":"161"},{"size":2637,"mtime":1613236796611,"results":"294","hashOfConfig":"161"},{"size":1867,"mtime":1613151668320,"results":"295","hashOfConfig":"161"},{"size":1274,"mtime":1613074426100,"results":"296","hashOfConfig":"161"},{"size":613,"mtime":1612906653229,"results":"297","hashOfConfig":"161"},{"size":1060,"mtime":1612969996230,"results":"298","hashOfConfig":"161"},{"size":408,"mtime":1612906966259,"results":"299","hashOfConfig":"161"},{"size":4826,"mtime":1613004237010,"results":"300","hashOfConfig":"161"},{"size":806,"mtime":1612387601160,"results":"301","hashOfConfig":"161"},{"size":1432,"mtime":1612827268487,"results":"302","hashOfConfig":"161"},{"size":1903,"mtime":1612827794387,"results":"303","hashOfConfig":"161"},{"size":2165,"mtime":1612803915567,"results":"304","hashOfConfig":"161"},{"size":1345,"mtime":1612827781337,"results":"305","hashOfConfig":"161"},{"size":486,"mtime":1610505703940,"results":"306","hashOfConfig":"161"},{"size":14401,"mtime":1613074645350,"results":"307","hashOfConfig":"161"},{"size":2763,"mtime":1612889149139,"results":"308","hashOfConfig":"161"},{"size":349,"mtime":1612803624657,"results":"309","hashOfConfig":"161"},{"size":492,"mtime":1612389141090,"results":"310","hashOfConfig":"161"},{"size":1721,"mtime":1613001456440,"results":"311","hashOfConfig":"161"},{"size":162,"mtime":1612389165420,"results":"312","hashOfConfig":"161"},{"size":2760,"mtime":1613075254680,"results":"313","hashOfConfig":"161"},{"size":546,"mtime":1613058970630,"results":"314","hashOfConfig":"161"},{"size":5782,"mtime":1613154392180,"results":"315","hashOfConfig":"161"},{"size":1934,"mtime":1613059142660,"results":"316","hashOfConfig":"161"},{"size":10441,"mtime":1613237898701,"results":"317","hashOfConfig":"161"},{"size":3058,"mtime":1613236507011,"results":"318","hashOfConfig":"161"},{"size":431,"mtime":1613172969079,"results":"319","hashOfConfig":"161"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},"1lk1amn",{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"322"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"370","messages":"371","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"322"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"322"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"390","messages":"391","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"392","messages":"393","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"322"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"399","messages":"400","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"322"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"322"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"322"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"322"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"322"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"322"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"322"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"322"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"491","messages":"492","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"322"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"322"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"501","messages":"502","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"322"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520","usedDeprecatedRules":"322"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"322"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"322"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"322"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"322"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"322"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"584","messages":"585","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"322"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"322"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"322"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"322"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/imooptik-frontend/src/index.js",[],["664","665"],"/imooptik-frontend/src/reportWebVitals.js",[],"/imooptik-frontend/src/App.jsx",[],"/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx",[],"/imooptik-frontend/src/context/auth/auth.context.jsx",["666"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { getUser, createNewUser, resetPassword, setNewPassword, fetchUser } from './auth.queries'\n\nexport const AuthContext = createContext({\n    currentUser: null,\n    isAdmin: false,\n    isOptometrist: false,\n    token: null,\n    stats: null,\n    logIn: () => { },\n    logOut: () => { },\n    register: () => { },\n    handleResetPassword: () => { },\n    handleCreatingNewPassword: () => { }\n})\n\nconst AuthProvider = ({ children }) => {\n    const { setShowModal, setIsLoading, getMessage, closeModal } = useContext(LoadingModalContext)\n    const [currentUser, setCurrentUser] = useState(null)\n    const [token, setToken] = useState(null)\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [isOptometrist, setIsOptometrist] = useState(false)\n    const [stats, setStats] = useState(null)\n\n    const checkIfOptometrist = user => {\n        if (user.optometrist) {\n            setIsOptometrist(true)\n        } else {\n            setIsOptometrist(false)\n        }\n    }\n\n    const checkIfAdmin = (user) => {\n        if (user.admin > 1) {\n            setIsAdmin(true)\n        } else {\n            setIsAdmin(false)\n        }\n    }\n\n    const logIn = async (email, password) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await getUser({ email, password })\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n            if (user.user) {\n                setCurrentUser(user.user)\n                setToken(user.authToken)\n                localStorage.setItem(process.env.REACT_APP_ADMIN_TOKEN, user.authToken)\n                checkIfAdmin(user.user)\n\n                closeModal()\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const logOut = () => {\n        localStorage.removeItem(process.env.REACT_APP_ADMIN_TOKEN)\n        setCurrentUser(null)\n        setToken(null)\n    }\n\n    const register = async (name, email, password, confirmPassword) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!name) {\n            console.log(\"Ziadne meno\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n\n        if (password !== confirmPassword) {\n            console.log(\"hesla sa nezhoduju\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await createNewUser({ name, email, password })\n            const data = await response.json()\n\n            setIsLoading(false)\n            getMessage(data.message)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleResetPassword = async (email) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await resetPassword(email)\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleCreatingNewPassword = async (resetSecret, password) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        console.log(resetSecret)\n\n        if (!resetSecret) {\n            console.log(\"Ziadny reset token\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await setNewPassword(resetSecret, password)\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const getStats = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/stats/collectionCounts`, requestOptions)\n            const data = await response.json()\n\n            setStats(data)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN)) {\n            setToken(localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (token) {\n            const getUserProfile = async () => {\n                const response = await fetchUser(token)\n                const data = await response.json()\n                if (data.user) {\n                    setCurrentUser(data.user)\n                    checkIfAdmin(data.user)\n                    checkIfOptometrist(data.user)\n                }\n            }\n            getUserProfile()\n            getStats()\n        }\n    }, [token])\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token,\n                currentUser,\n                isAdmin,\n                isOptometrist,\n                stats,\n                logIn,\n                logOut,\n                register,\n                handleResetPassword,\n                handleCreatingNewPassword\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthProvider","/imooptik-frontend/src/global.styles.jsx",[],"/imooptik-frontend/src/components/popup/pop-up.component.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset-password.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.jsx",[],"/imooptik-frontend/src/context/auth/auth.queries.jsx",[],"/imooptik-frontend/src/components/popup/pop.up.styles.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.component.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.component.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.component.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.component.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.component.jsx",[],"/imooptik-frontend/src/context/image/image.context.jsx",[],"/imooptik-frontend/src/context/blog/blog.context.jsx",[],"/imooptik-frontend/src/context/user/user.context.jsx",["667","668","669"],"/imooptik-frontend/src/context/warehouse/warehouse.context.jsx",["670","671"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\n\nimport {\n    premisesTabs,\n    categoryTabs,\n    initLensesObj,\n    initProductObj,\n    formatPrice,\n    diaConvert,\n    initContactLensesObj,\n    initGlassesObj,\n    formatfloatNumber,\n    formatLink\n} from './warehouse.utils'\n\nexport const WarehouseContext = createContext({\n    eanCode: null,\n    product: {},\n    lenses: {},\n    contactLensesParameters: {},\n    glassesParameters: {},\n    totalProducts: 0,\n    totalLenses: 0,\n    activePremisesTab: 0,\n    activeCategoryTypeTab: 0,\n    retailPremisesTabs: [],\n    productCategoryTypeTabs: [],\n    products: null,\n    lensesProducts: null,\n    handleChangeCategoryTypeTab: () => { },\n    handleChangePremisesTab: () => { },\n    getProductsByQuery: () => { },\n    handleProductChange: () => { },\n    handleProductAvailableChange: () => { },\n    getSingleProduct: () => { },\n    createProduct: () => { },\n    updateProduct: () => { },\n    deleteProduct: () => { },\n    getSingleLenses: () => { },\n    getLenses: () => { },\n    createLenses: () => { },\n    updateLenses: () => { },\n    deleteLenses: () => { },\n    handleLensesChange: () => { },\n    handleLensesParameterChange: () => { },\n    resetProduct: () => { },\n    resetLenses: () => { },\n    resetContactLenses: () => { },\n    resetGlassesParameters: () => { },\n    getEanCode: () => { },\n    handleAddNewParameter: () => { },\n    handleContactLensesParameterChange: () => { },\n    handleGlassesParameterChange: () => { },\n    handleGlassesParameterSpecsChange: () => { },\n    handleGlassesSizeChange: () => { },\n})\n\nconst WarehouseProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token, isAdmin, currentUser, stats } = useContext(AuthContext)\n    const { closeModal, setIsLoading, setShowModal, getMessage } = useContext(LoadingModalContext)\n\n    const [totalProducts, setTotalProducts] = useState(0)\n    const [totalLenses, setTotalLenses] = useState(0)\n    const [eanCode, setEanCode] = useState(null)\n\n    const [product, setProduct] = useState({ ...initProductObj })\n    const [lenses, setLenses] = useState({ ...initLensesObj })\n    const [contactLensesParameters, setContactLensesParameters] = useState({ ...initContactLensesObj })\n    const [glassesParameters, setGlassesParameters] = useState({ ...initGlassesObj })\n\n    const [products, setProducts] = useState(null)\n    const [lensesProducts, setLensesProducts] = useState(null)\n    const [activePremisesTab, setActivePremisesTab] = useState(0)\n    const [retailPremisesTabs, setRetailPremisesTabs] = useState([])\n\n    const [productCategoryTypeTabs] = useState(categoryTabs)\n    const [activeCategoryTypeTab, setActiveCategoryTypeTab] = useState(0)\n\n    const handleGlassesParameterChange = e => {\n        const { name, value } = e.target\n        setGlassesParameters({\n            ...glassesParameters,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParameterSpecsChange = e => {\n        const { name, value } = e.target\n        setGlassesParameters({\n            ...glassesParameters,\n            specs: {\n                ...glassesParameters.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n        setGlassesParameters({\n            ...glassesParameters,\n            specs: {\n                ...glassesParameters.specs,\n                [name]: arr\n            }\n        })\n\n    }\n\n    const handleAddNewParameter = e => {\n        const { name } = e.target\n        setContactLensesParameters({\n            ...contactLensesParameters,\n            [name]: [...contactLensesParameters[name], 1001]\n        })\n    }\n\n    const handleContactLensesParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n        setContactLensesParameters({\n            ...contactLensesParameters,\n            [name]: arr\n        })\n    }\n\n    const handleProductChange = e => {\n        const { name, value } = e.target\n\n        setProduct({\n            ...product,\n            [name]: value\n        })\n    }\n\n    const handleProductAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setProduct({\n            ...product,\n            [name]: arr\n        })\n    }\n\n    const handleLensesChange = e => {\n        const { name, value } = e.target\n\n        setLenses({\n            ...lenses,\n            [name]: value\n        })\n    }\n\n    const handleLensesParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setLenses({\n            ...lenses,\n            [name]: arr\n        })\n    }\n\n    const resetProduct = () => {\n        setProduct({\n            ...initProductObj,\n            available: [1001, 1001, 1001, 1001, 0],\n        })\n        setEanCode(null)\n    }\n\n    const resetLenses = () => {\n        // setLenses({ ...initLensesObj })\n        setLenses({\n            ...initLensesObj,\n            dioptersRange: [1001, 1001],\n            cylinderRange: [1001, 1001],\n        })\n    }\n\n    const resetContactLenses = () => {\n        setContactLensesParameters({\n            ...initContactLensesObj,\n            allowedCurves: [1001],\n            allowedDiameters: [1001],\n            dioptersRange: [1001, 1001]\n        })\n    }\n\n    const resetGlassesParameters = () => {\n        setGlassesParameters({\n            ...initGlassesObj,\n            specs: {\n                ...initGlassesObj.specs,\n                size: [1001, 1001, 1001]\n            }\n        })\n    }\n\n    const handleChangePremisesTab = (idx) => {\n        setActivePremisesTab(idx)\n    }\n\n    const handleChangeCategoryTypeTab = (idx) => {\n        setActiveCategoryTypeTab(idx)\n    }\n\n\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const getEanCode = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/nextEanCode`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.eanCode) {\n                setEanCode(data.eanCode)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getProductsByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(query)\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.products) {\n                setProducts(data.products)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getLenses = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.lenses) {\n                setProducts(data.lenses)\n                setLensesProducts(data.lenses)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getSingleProduct = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/products/${id}`)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error === 'not-found') {\n                getSingleLenses(id)\n            }\n\n            if (data.product) {\n                setProduct({\n                    ...data.product,\n                    price: (data.product.price / 100).toFixed(2)\n                })\n                if (data.product.type === 3) {\n                    setContactLensesParameters({\n                        ...data.product.contactLenses\n                    })\n                } else {\n                    setGlassesParameters({\n                        colorCode: data.product.colorCode ?? \"\",\n                        specs: {\n                            ...data.product.specs,\n                            size: [...Array(3)].map((value, idx) => data.product.specs.size[idx] ? data.product.specs.size[idx] : 0)\n                        }\n                    })\n                }\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createProduct = async (productToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const slug = diaConvert(productToAdd.name).replaceAll(\" \", \"-\").toLowerCase().trim()\n\n        let modifiedProduct = {\n            ...productToAdd,\n            price: formatPrice(productToAdd.price.toString()),\n            link: slug,\n        }\n\n        if (productToAdd.specs) {\n            if (productToAdd.specs.size) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    specs: {\n                        ...modifiedProduct.specs,\n                        size: productToAdd.specs.size.map(value => value === 1001 ? 0 : formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        if (productToAdd.contactLenses) {\n            if (productToAdd.contactLenses.allowedCurves) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: productToAdd.contactLenses.allowedCurves.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n            if (productToAdd.contactLenses.allowedDiameters) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: productToAdd.contactLenses.allowedDiameters.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n            if (productToAdd.contactLenses.dioptersRange) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: productToAdd.contactLenses.dioptersRange.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        console.log(\"modifiedProduct\")\n        console.log(modifiedProduct)\n\n\n        const raw = JSON.stringify({\n            ...modifiedProduct,\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.product) {\n                push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10\n                })\n                setEanCode(null)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateProduct = async (productToUpdate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let modifiedProduct = {\n            ...productToUpdate,\n        }\n\n        if (modifiedProduct.price) {\n            modifiedProduct = {\n                ...modifiedProduct,\n                price: formatPrice(productToUpdate.price.toString()),\n            }\n        }\n\n        if (modifiedProduct.available) {\n            modifiedProduct = {\n                ...modifiedProduct,\n                available: productToUpdate.available ? productToUpdate.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0]\n            }\n        }\n\n        if (productToUpdate.link) {\n            const slug = diaConvert(productToUpdate.link).replaceAll(\" \", \"-\").toLowerCase().trim()\n            modifiedProduct = {\n                ...modifiedProduct,\n                link: slug\n            }\n        }\n\n        if (productToUpdate.specs) {\n            if (productToUpdate.specs.size) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    specs: {\n                        ...modifiedProduct.specs,\n                        size: productToUpdate.specs.size.map(value => value === 1001 ? 0 : formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        if (productToUpdate.contactLenses) {\n            if (productToUpdate.contactLenses.allowedCurves) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: productToUpdate.contactLenses.allowedCurves.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: contactLensesParameters.allowedCurves\n                    }\n                }\n            }\n\n            if (productToUpdate.contactLenses.allowedDiameters) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: productToUpdate.contactLenses.allowedDiameters.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: contactLensesParameters.allowedDiameters\n                    }\n                }\n            }\n            if (productToUpdate.contactLenses.dioptersRange) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: productToUpdate.contactLenses.dioptersRange.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: contactLensesParameters.dioptersRange\n                    }\n                }\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedProduct,\n        })\n\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/${product._id}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.message)\n                setIsLoading(false)\n                return\n\n            }\n\n            if (data.product) {\n                push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteProduct = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/${id}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.product) {\n                // push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getSingleLenses = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/lenses/${id}`)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                setLenses(data.lenses)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createLenses = async (lensesToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify({\n            ...lensesToAdd,\n            price: formatPrice(lensesToAdd.price.toString())\n        });\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                push('/dashboard/obchod')\n                getLenses()\n                closeModal()\n                return\n            }\n\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateLenses = async (lensesToUpdate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let modifiedLenses = {\n            ...lensesToUpdate\n        }\n\n        if (modifiedLenses.price) {\n            modifiedLenses = {\n                ...modifiedLenses,\n                price: formatPrice(lensesToUpdate.price.toString()),\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedLenses,\n        });\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/${lenses._id}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                push('/dashboard/obchod')\n                getLenses()\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteLenses = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/${id}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                getLenses()\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (products) {\n            console.log(`GET ${productCategoryTypeTabs[activeCategoryTypeTab].name} DATA`)\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    limit: 10\n                })\n            } else {\n                getLenses()\n            }\n        }\n    }, [activeCategoryTypeTab])\n\n    useEffect(() => {\n        console.log(\"SET PREMISES\")\n        if (currentUser) {\n            if (isAdmin) {\n                setRetailPremisesTabs(premisesTabs)\n                setActivePremisesTab(0)\n            } else {\n                setRetailPremisesTabs(premisesTabs.filter(tab => tab.premises === currentUser.premises))\n                setActivePremisesTab(0)\n            }\n        }\n    }, [currentUser, isAdmin])\n\n    useEffect(() => {\n        if (stats) {\n            console.log(\"SET STATS\")\n            setTotalProducts(stats.products)\n            setTotalLenses(stats.lenses)\n        }\n    }, [stats])\n\n    useEffect(() => {\n        if (product.name !== '') {\n            setProduct({\n                ...product,\n                link: formatLink(product.name)\n            })\n        }\n    }, [product.name])\n\n    return (\n        <WarehouseContext.Provider\n            value={{\n                eanCode,\n                product,\n                lenses,\n                contactLensesParameters,\n                glassesParameters,\n                totalProducts,\n                totalLenses,\n                activePremisesTab,\n                activeCategoryTypeTab,\n                retailPremisesTabs,\n                productCategoryTypeTabs,\n                products,\n                lensesProducts,\n                handleChangeCategoryTypeTab,\n                handleChangePremisesTab,\n                getProductsByQuery,\n                handleProductChange,\n                handleProductAvailableChange,\n                getLenses,\n                getSingleProduct,\n                createProduct,\n                updateProduct,\n                deleteProduct,\n                getSingleLenses,\n                createLenses,\n                updateLenses,\n                deleteLenses,\n                handleLensesChange,\n                handleLensesParameterChange,\n                resetProduct,\n                resetLenses,\n                resetContactLenses,\n                resetGlassesParameters,\n                getEanCode,\n                handleAddNewParameter,\n                handleContactLensesParameterChange,\n                handleGlassesParameterChange,\n                handleGlassesParameterSpecsChange,\n                handleGlassesSizeChange,\n            }}\n        >\n            {children}\n        </WarehouseContext.Provider>\n    )\n}\n\nexport default WarehouseProvider","/imooptik-frontend/src/context/booking/booking.context.jsx",[],"/imooptik-frontend/src/context/orders/orders.context.jsx",["672"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\n\n\nexport const OrdersContext = createContext({\n    orders: null,\n    getOrders: () => { },\n    createOrder: () => { },\n    updateOrder: () => { },\n    finishOrder: () => { },\n})\n\nconst OrdersProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { setIsLoading, setShowModal, getMessage, closeModal } = useContext(LoadingModalContext)\n    const { token } = useContext(AuthContext)\n    const [orders, setOrders] = useState(null)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const getOrders = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.orders) {\n                setOrders(data.orders)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n    }\n\n    const createOrder = async (orderToCreate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let orderObj = {\n            ...orderToCreate\n        }\n\n\n        console.log(\"ORDER BEFORE SEND\")\n        console.log(orderObj)\n\n        const raw = JSON.stringify(orderObj)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.order) {\n                getOrders()\n                closeModal()\n                push('/dashboard/objednavky')\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateOrder = async (orderToUpdate, orderId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let orderObj = {\n            ...orderToUpdate\n        }\n\n\n        console.log(\"ORDER BEFORE SEND\")\n        console.log(orderObj)\n\n        const raw = JSON.stringify(orderObj)\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders/${orderId}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.order) {\n                getOrders()\n                closeModal()\n                push('/dashboard/objednavky')\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const finishOrder = async (orderId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders/${orderId}/fulfill`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error === 'undelegated-order') {\n                setIsLoading(false)\n                getMessage(\"Objednávka nemôže byť dokončená ak nieje priradená k prevádzke\")\n                return\n            }\n\n            if (data.order) {\n                closeModal()\n                return\n            }\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <OrdersContext.Provider\n            value={{\n                orders,\n                getOrders,\n                createOrder,\n                updateOrder,\n                finishOrder\n            }}\n        >\n            {children}\n        </OrdersContext.Provider>\n    )\n}\n\nexport default OrdersProvider","/imooptik-frontend/src/context/analytics/analytics.context.jsx",[],"/imooptik-frontend/src/context/coupons/coupons.context.jsx",[],"/imooptik-frontend/src/context/examination/examination.context.jsx",[],"/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx",["673","674"],"/imooptik-frontend/src/sections/customers/customers.section.jsx",["675","676"],"/imooptik-frontend/src/sections/orders/orders.section.jsx",["677"],"/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx",["678","679","680","681","682"],"/imooptik-frontend/src/sections/product/product.section.jsx",["683","684","685","686"],"/imooptik-frontend/src/sections/analytics/analytics.section.jsx",["687"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AnalyticsContext } from '../../context/analytics/analytics.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../../context/auth/auth.context'\n\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport { retailNamesTabs } from '../../utils/warehouse.utils'\nimport { analyticsTabItems } from '../../utils/analytics.utils'\n\nimport {\n    Header,\n    GridContainer,\n    StatsContainer,\n    StatsGrid\n} from './analytics.styles'\n\nconst AnalyticsSection = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { stats: storeData, isAdmin, currentUser } = useContext(AuthContext)\n    const { stats, getAnalytics } = useContext(AnalyticsContext)\n    const premisesTabs = isAdmin ? retailNamesTabs : retailNamesTabs.filter(tab => tab.id === currentUser.premises || tab.id === 0)\n\n    const [activePremiseIndex, setActivePremiseIndex] = useState(0)\n    const [activeIndex, setActiveIndex] = useState(2)\n\n    useEffect(() => {\n        getAnalytics(analyticsTabItems[activeIndex - 1].value)\n    }, [activeIndex])\n\n    console.log(stats)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <Header>\n                <h1>Analytiká</h1>\n            </Header>\n\n            <SectionNavbar\n                items={premisesTabs}\n                activeIndex={activePremiseIndex}\n                setActiveIndex={setActivePremiseIndex}\n            />\n            <SectionNavbar\n                items={analyticsTabItems}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                <GridContainer>\n                    <div>\n                        <h3>Uživatelia</h3>\n                        <p>{storeData?.users}</p>\n                    </div>\n                    <div>\n                        <h3>Produkty</h3>\n                        <p>{storeData?.products}</p>\n                    </div>\n                    <div>\n                        <h3>Šošovky</h3>\n                        <p>{storeData?.lenses}</p>\n                    </div>\n                    <div>\n                        <h3>Objednávky</h3>\n                        <p>{storeData?.orders}</p>\n                    </div>\n                    <div>\n                        <h3>Prehliadky</h3>\n                        <p>{storeData?.bookings}</p>\n                    </div>\n                </GridContainer>\n\n                {stats && (\n                    <StatsGrid>\n                        <StatsContainer>\n                            <div>\n                                <h3>Hotovosť</h3>\n                                <p>{(stats[0]?.cash / 100).toFixed(2)}€</p>\n                            </div>\n                            <div>\n                                <h3>Karta</h3>\n                                <p>{(stats[0]?.card / 100).toFixed(2)}€</p>\n                            </div>\n                            <div>\n                                <h3>Kupóny</h3>\n                                <p>{stats[0]?.coupons}</p>\n                            </div>\n                            <div>\n                                <h3>Objednávky</h3>\n                                <p>{stats[0]?.orders}</p>\n                            </div>\n                        </StatsContainer>\n                        <StatsContainer>\n                            <div>\n                                <h3>Hotovosť</h3>\n                                <p>{(stats[1]?.cash / 100).toFixed(2)}€</p>\n                            </div>\n                            <div>\n                                <h3>Karta</h3>\n                                <p>{(stats[1]?.card / 100).toFixed(2)}€</p>\n                            </div>\n                            <div>\n                                <h3>Kupóny</h3>\n                                <p>{stats[1]?.coupons}</p>\n                            </div>\n                            <div>\n                                <h3>Objednávky</h3>\n                                <p>{stats[1]?.orders}</p>\n                            </div>\n                        </StatsContainer>\n                    </StatsGrid>\n                )}\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default AnalyticsSection\n","/imooptik-frontend/src/sections/booking/booking.section.jsx",["688"],"/imooptik-frontend/src/sections/post/post.section.jsx",["689","690","691"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport CustomTextarea from '../../components/custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport { Quill } from 'react-quill'\n\nimport {\n    Header,\n    GridContainer,\n    PostImage,\n    DeleteButton,\n    AddButton,\n    Title,\n    ContentTextare,\n    Container,\n} from './post.styles'\n\nconst PostSection = () => {\n    const { id } = useParams()\n    const { push } = useHistory()\n    const {\n        createPost,\n        isLoading,\n        message,\n        showLoading,\n        setIsLoading,\n        getPost,\n        post,\n        handlePostUpdate,\n        resetBlog\n    } = useContext(BlogContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [content, setContent] = useState('')\n    const [image, setImage] = useState('')\n    const [draft, toggleDraft] = useState(false)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (image.length <= 0) return\n        if (content.length <= 0) return\n\n        if (id === 'novy-prispevok') {\n            createPost(image, title, description, draft, content)\n        } else {\n            handlePostUpdate(title, description, draft, content, image, id)\n        }\n\n        push('/dashboard/blog')\n\n    }\n\n    useEffect(() => {\n        setSelectedImage(null)\n\n        if (id !== 'novy-prispevok') {\n            getPost(id)\n            setIsUpdating(true)\n        }\n    }, [id])\n\n    useEffect(() => {\n        if (id !== 'novy-prispevok') {\n            console.log(post)\n            if (post) {\n                console.log(post)\n                setTitle(post.name)\n                setDescription(post.description)\n                setContent(post.html)\n                toggleDraft(post.draft)\n                if (post.image) {\n                    setImage(post.image._id)\n                    setSelectedImage(post.image)\n                }\n            }\n        }\n    }, [post])\n\n    useEffect(() => {\n        return () => {\n            resetBlog()\n            setTitle('')\n            setDescription('')\n            setContent('')\n            setImage('')\n            toggleDraft(false)\n            setImageModal(false)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {isLoading && <Popup loading={showLoading} title={message} close={() => setIsLoading(false)} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={setImage} />}\n\n            <Header>\n                <div>\n                    <h1>Post</h1>\n                </div>\n                <div>\n                    <CustomCheckbox\n                        label='Draft'\n                        isActive={draft}\n                        handleClick={() => toggleDraft(prevValue => !prevValue)}\n                    />\n                    <DeleteButton>Vymazať</DeleteButton>\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť príspevok\" : \"Pridať príspevok\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n\n                <GridContainer>\n                    <Container>\n                        <h2>Informácia</h2>\n                        <CustomInput\n                            label=\"Nadpis\"\n                            type='text'\n                            name='title'\n                            value={title}\n                            handleChange={(e) => setTitle(e.target.value)}\n                            required\n                        />\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={description}\n                            handleChange={(e) => setDescription(e.target.value)}\n                            required\n                        />\n                        <h2>Titulná fotka</h2>\n                        <PostImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </PostImage>\n                    </Container>\n                    <Container>\n                        <Title>Obsah</Title>\n                        <QuillToolbar />\n                        <ContentTextare\n                            value={content}\n                            onChange={setContent}\n                            modules={modules}\n                            formats={formats}\n                        />\n                    </Container>\n\n                </GridContainer>\n\n            </ScrollContainer>\n        </form>\n    )\n}\n\n\nconst CustomUndo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n        />\n    </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n        />\n    </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n    this.quill.history.undo();\n}\nfunction redoChange() {\n    this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n    \"arial\",\n    \"comic-sans\",\n    \"courier-new\",\n    \"georgia\",\n    \"helvetica\",\n    \"lucida\"\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nconst modules = {\n    toolbar: {\n        container: \"#toolbar\",\n        handlers: {\n            undo: undoChange,\n            redo: redoChange\n        }\n    },\n    history: {\n        delay: 500,\n        maxStack: 100,\n        userOnly: true\n    }\n};\n\n// Formats objects for setting up the Quill editor\nconst formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"align\",\n    \"strike\",\n    \"script\",\n    \"blockquote\",\n    \"background\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"color\",\n    \"code-block\"\n];\n\n// Quill Toolbar component\nconst QuillToolbar = () => (\n    <div id=\"toolbar\" className=\"toolbar\">\n        <span className=\"ql-formats\">\n            <select className=\"ql-size\" defaultValue=\"medium\">\n                <option value=\"extra-small\">Size 1</option>\n                <option value=\"small\">Size 2</option>\n                <option value=\"medium\">Size 3</option>\n                <option value=\"large\">Size 4</option>\n            </select>\n            <select className=\"ql-header\" defaultValue=\"3\">\n                <option value=\"1\">Heading</option>\n                <option value=\"2\">Subheading</option>\n                <option value=\"3\">Normal</option>\n            </select>\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n        </span>\n        <span className=\"ql-formats\">\n            <select className=\"ql-align\" />\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n                <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n                <CustomRedo />\n            </button>\n        </span>\n    </div>\n);\n\n\nexport default PostSection\n","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx",["692","693","694"],"import React, { useState, useEffect, useContext } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    PostContainer,\n    PostImage,\n    PostContent,\n    Options,\n    UpdateButton,\n    DeleteButton\n} from './blog-posts.styles'\n\nconst BlogPosts = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { postsCount, handlePostDelete } = useContext(BlogContext)\n    const { push } = useHistory()\n\n    const [posts, setPosts] = useState([])\n\n    const [filterQuery, setFilterQuery] = useState({\n        limit: 10,\n        sortBy: {\n            date: -1\n        },\n        // query: \"\"\n    })\n    const [searchQuery, setSearchQuery] = useState('')\n\n\n\n    const [activeIndex, setActiveIndex] = useState(0)\n    const items = [\n        {\n            id: 0,\n            name: \"Zostupne\"\n        },\n        {\n            id: 1,\n            name: \"Vzostupne\"\n        },\n    ]\n\n    const blogsData = useFetchByQuery('api/blogs/filter', filterQuery)\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n                query: searchQuery\n            })\n            blogsData.refetch()\n        }\n    }\n\n    const handlePostDeleteClick = (postID) => {\n        handlePostDelete(postID)\n        blogsData.refetch()\n    }\n\n    useEffect(() => {\n        if (searchQuery === '') {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n            })\n            blogsData.refetch()\n        }\n    }, [searchQuery])\n\n    useEffect(() => {\n        if (activeIndex === 0) {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n                // query: \"\"\n            })\n            blogsData.refetch()\n        } else {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: 1\n                },\n                // query: \"\"\n            })\n            blogsData.refetch()\n        }\n    }, [activeIndex])\n\n    useEffect(() => {\n        if (!blogsData.isLoading) {\n            setPosts(blogsData.response?.blogs)\n        }\n    }, [blogsData.isLoading])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleSearch={handleSearch}\n                handleAddButton={() => push('blog/novy-prispevok')}\n                count={postsCount}\n                title=\"Blog\"\n            />\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                {posts && posts.length ? posts.map(post => (\n                    <PostContainer key={post._id}>\n                        <PostImage>\n                            {post.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${post.image.imagePath}`} alt={post.image.alt} />}\n                        </PostImage>\n                        <PostContent>\n                            <h2>{post.name}</h2>\n                            <p>{post.description}</p>\n                        </PostContent>\n                        <Options>\n                            <UpdateButton onClick={() => push(`blog/${post._id}`)}>Upraviť</UpdateButton>\n                            <DeleteButton onClick={() => handlePostDeleteClick(post._id)}>Vymazať</DeleteButton>\n                        </Options>\n                    </PostContainer>\n                )) : (\n                        <div>\n                            Žiadne príspevky\n                        </div>\n                    )}\n\n                <ListArrows\n                    listItems={posts}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BlogPosts\n","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx",[],"/imooptik-frontend/src/sections/order/order.section.jsx",["695"],"/imooptik-frontend/src/sections/coupons/coupons.section.jsx",["696","697","698","699"],"import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { CouponsContext } from '../../context/coupons/coupons.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport {\n    CouponOverviewContainer,\n    DeleteButton,\n    OpenButton,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TableCol\n} from './coupons.styles'\n\nconst CouponsSection = () => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        coupons,\n        getCoupons,\n        deleteCoupon\n    } = useContext(CouponsContext)\n\n    useEffect(() => {\n        if (!coupons) {\n            getCoupons()\n        }\n    }, [coupons])\n\n    console.log(coupons)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                title='Kupóny'\n                // searchQuery={searchQuery}\n                // handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('kupony/novy-kupon')}\n            />\n            <ScrollContainer>\n\n                <TableContainer>\n                    <TableHead>\n                        <TableCol>#</TableCol>\n                        <TableCol>Kód</TableCol>\n                        <TableCol>Typ</TableCol>\n                        <TableCol>Hodnota</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {coupons && coupons.map((coupon, idx) => (\n                        <TableRow key={idx}>\n                            <TableCol>{idx + 1}</TableCol>\n                            <TableCol>{coupon.code}</TableCol>\n                            <TableCol>{coupon.type === \"percentage\" ? \"Percentá\" : \"Fixná suma\"}</TableCol>\n                            <TableCol>{coupon.value}</TableCol>\n                            <TableCol>\n                                <OpenButton onClick={() => push(`kupony/${coupon._id}`)}>Zobraziť</OpenButton>\n                                <DeleteButton onClick={() => deleteCoupon(coupon._id)}>Ostrániť</DeleteButton>\n                            </TableCol>\n                        </TableRow>\n                    ))}\n                </TableContainer>\n                <ListArrows\n                    listItems={coupons}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CouponsSection\n","/imooptik-frontend/src/sections/calendar/calendar.section.jsx",["700"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BookingContext } from '../../context/booking/booking.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomRetailSelect from '../../components/custom-select/custom-select.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport { retailNames } from '../../utils/warehouse.utils'\nimport {\n    dayNames,\n    calendarTimes,\n    formatCalendarObj,\n    formatExceptDays,\n    formatExceptDaysToObj\n} from '../../utils/calendar.utils'\n\nimport {\n    Header,\n    CreateCalendarButton,\n    Container,\n    GridContainer,\n    ContainerRow,\n    TableHead,\n    TableCol,\n    TableRow,\n    AddDayButton,\n    DeleteCalendarButton\n} from './calendar.styles'\n\nconst CalendarSection = () => {\n    const {\n        closeModal,\n        getMessage,\n        setShowModal,\n        isLoading,\n        message,\n        showModal,\n    } = useContext(LoadingModalContext)\n    const { createCalendar, updateCalendar, deleteCalendar } = useContext(BookingContext)\n    const { calendarId } = useParams()\n    const { response, isLoading: isFetching } = useFetchById(\"api/booking/calendars\", calendarId, calendarId === 'novy-kalendar')\n    const [calendar, setCalendar] = useState({})\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleCalendarValueChange = (e) => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete calendar[name]\n            setCalendar({\n                ...calendar\n            })\n            return\n        }\n\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const handleCalendarTimeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = calendar[name] ? calendar[name] : ['X', 'X', 'X', 'X', 'X', 'X', 'X']\n        arr[idx] = value\n\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: arr\n        }))\n    }\n\n    const handleCalendarExceptDaysChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = calendar[name]\n        arr[idx] = value\n\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: arr\n        }))\n    }\n\n    const handleAddNewDay = () => {\n        setCalendar(prevValue => ({\n            ...prevValue,\n            exceptDays: prevValue.exceptDays ? [...prevValue.exceptDays, \"\"] : [\"\"]\n        }))\n    }\n\n    const handleSubmit = () => {\n        if (!calendar.name) {\n            getMessage(\"Meno Kalendára je povinné\")\n            setShowModal(true)\n            return\n        }\n        if (!calendar.premises) {\n            getMessage(\"Nie je zvolená prevádzka ku ktorej patrí kalendár\")\n            setShowModal(true)\n            return\n        }\n        if (!calendar.endTimes && !calendar.startTimes) {\n            getMessage(\"Nie sú vyplnené časy na prehliadky\")\n            setShowModal(true)\n            return\n        }\n        if (!calendar.interval) {\n            getMessage(\"Nie je zvolený interval\")\n            setShowModal(true)\n            return\n        }\n\n        if (isUpdating) {\n            const calendarToUpdate = formatCalendarObj(calendar)\n\n            console.log(\"CALENDAR BEFORE UPDATE\")\n            console.log(calendarToUpdate)\n\n\n            updateCalendar(calendarToUpdate, calendar._id)\n        } else {\n            let calendarToCreate = {}\n            if (calendar.exceptDays) {\n                calendarToCreate = {\n                    ...calendar,\n                    exceptDays: formatExceptDaysToObj(calendar.exceptDays)\n                }\n            } else {\n                calendarToCreate = { ...calendar }\n            }\n\n\n            console.log(\"CALENDAR BEFORE CREATE\")\n            console.log(calendarToCreate)\n            createCalendar(calendarToCreate)\n        }\n    }\n\n    useEffect(() => {\n        if (isFetching) return\n        if (response.calendar) {\n            setIsUpdating(true)\n            if (response.calendar.exceptDays) {\n                const exceptDaysArr = formatExceptDays(response.calendar.exceptDays)\n\n                setCalendar({\n                    ...response.calendar,\n                    exceptDays: exceptDaysArr\n                })\n\n            } else {\n                setCalendar(response.calendar)\n            }\n        }\n    }, [isFetching])\n\n    useEffect(() => {\n        return () => {\n            setIsUpdating(false)\n            setCalendar({})\n        }\n    }, [])\n\n    return (\n        <section>\n            {(showModal) && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <Header>\n                <div>\n                    {isUpdating ? (\n                        <h1>Kalendár: {calendar?.name}</h1>\n                    ) : (\n                            <h1>Nový kalendár</h1>\n                        )}\n                </div>\n                <div>\n                    {isUpdating && <DeleteCalendarButton onClick={() => deleteCalendar(calendar?._id)}>Vymazať</DeleteCalendarButton>}\n                    <CreateCalendarButton onClick={handleSubmit}>{isUpdating ? \"Upraviť\" : \"Vytvoriť\"}</CreateCalendarButton>\n                </div>\n            </Header>\n            <ScrollContainer>\n                <GridContainer>\n                    <div>\n                        <Container>\n                            <h3>Základné informácie</h3>\n                            <div>\n                                <h4>Kalendar je pre prevádzku</h4>\n                                <CustomRetailSelect\n                                    name='premises'\n                                    value={calendar?.premises || \"0\"}\n                                    listItems={retailNames}\n                                    defaultOption\n                                    defaultValue={0}\n                                    defaultLabel=\"Nezadané\"\n                                    handleChange={handleCalendarValueChange}\n                                />\n                            </div>\n                            <div>\n                                <h4>Meno kalendára</h4>\n                                <CustomInput\n                                    type=\"text\"\n                                    label='Meno*'\n                                    name=\"name\"\n                                    value={calendar?.name || \"\"}\n                                    handleChange={handleCalendarValueChange}\n                                />\n                            </div>\n                        </Container>\n                        <Container>\n                            <h3>Dni kedy sa nerobia prehliadky</h3>\n                            {calendar?.exceptDays && calendar?.exceptDays?.map((value, idx) => (\n                                <div key={idx}>\n                                    <CustomInput\n                                        type=\"date\"\n                                        // label='Dátum'\n                                        name=\"exceptDays\"\n                                        value={value || \"\"}\n                                        handleChange={(e) => handleCalendarExceptDaysChange(e, idx)}\n                                    />\n                                </div>\n                            ))}\n                            <AddDayButton onClick={handleAddNewDay}>Pridať</AddDayButton>\n                        </Container>\n                    </div>\n\n                    <Container>\n                        <h3>Nastavenie kalendára</h3>\n\n                        <div>\n                            <h4>Interval medzi prehliadkami</h4>\n                            <select\n                                name='interval'\n                                value={calendar?.interval || \"\"}\n                                onChange={handleCalendarValueChange}\n                            >\n                                <option value={\"\"}>Nezadané</option>\n                                <option value={30}>30min</option>\n                                <option value={60}>60min</option>\n                            </select>\n                        </div>\n                        <div>\n                            <h4>Čas pred objednaním</h4>\n                            <CustomInput\n                                type=\"text\"\n                                label='Počet minút'\n                                name=\"allowMinutesBefore\"\n                                value={calendar?.allowMinutesBefore?.toString() || \"\"}\n                                handleChange={handleCalendarValueChange}\n                            />\n                        </div>\n                        <div>\n                            <h4>Koľko dní dopredu sa dá objednať</h4>\n                            <CustomInput\n                                type=\"text\"\n                                label='Počet dní'\n                                name=\"daysIntoFuture\"\n                                value={calendar?.daysIntoFuture?.toString() || \"\"}\n                                handleChange={handleCalendarValueChange}\n                            />\n                        </div>\n                    </Container>\n\n                    <ContainerRow>\n                        <h3>Ordinačné hodiny</h3>\n                        <TableHead>\n                            <TableCol isFirst>\n                                Čas \\ Den\n                            </TableCol>\n                            {dayNames.map((name, idx) => (\n                                <TableCol key={idx}>\n                                    {name}\n                                </TableCol>\n                            ))}\n                        </TableHead>\n                        <TableRow>\n                            <TableCol isFirst>\n                                Začiatok\n                            </TableCol>\n                            {[...Array(7)].map((value, idx) => (\n                                <TableCol key={idx}>\n                                    <select name='startTimes' value={calendar?.startTimes ? calendar?.startTimes[idx] : \"x\"} onChange={(e) => handleCalendarTimeChange(e, idx)}>\n                                        <option value={\"X\"}>Žiadný</option>\n                                        {calendarTimes.map(({ name, value }, idx) => (\n                                            <option key={idx} value={value}>{name}</option>\n                                        ))}\n                                    </select>\n                                </TableCol>\n                            ))}\n                        </TableRow>\n                        <TableRow>\n                            <TableCol isFirst>\n                                Koniec\n                            </TableCol>\n                            {[...Array(7)].map((value, idx) => (\n                                <TableCol key={idx}>\n                                    <select name='endTimes' value={calendar?.endTimes ? calendar?.endTimes[idx] : \"x\"} onChange={(e) => handleCalendarTimeChange(e, idx)}>\n                                        <option value={\"X\"}>Žiadný</option>\n                                        {calendarTimes.map(({ name, value }, idx) => (\n                                            <option key={idx} value={value}>{name}</option>\n                                        ))}\n                                    </select>\n                                </TableCol>\n                            ))}\n                        </TableRow>\n                    </ContainerRow>\n                </GridContainer>\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CalendarSection\n","/imooptik-frontend/src/sections/coupon/coupon.section.jsx",["701","702"],"import React, { useContext, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { CouponsContext } from '../../context/coupons/coupons.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport InputRow from '../../components/product-input-row/product-input-row.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport Popup from \"../../components/popup/pop-up.component\"\n\nimport {\n    Header,\n    CustomSelect,\n    SubmitButton,\n    DeleteButton,\n    GridRow,\n    GridCol\n} from './coupon.styles'\n\nconst CouponSection = () => {\n    const { couponId } = useParams()\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const {\n        coupon,\n        getCoupon,\n        handleChange,\n        createCoupon,\n        isUpdating,\n        deleteCoupon,\n        resetCoupons\n    } = useContext(CouponsContext)\n\n    useEffect(() => {\n        if (couponId !== 'novy-kupon') {\n            getCoupon(couponId)\n        }\n    }, [couponId])\n\n    useEffect(() => {\n        return () => {\n            resetCoupons()\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <Header>\n                <div>\n                    <h1>Nový kupón</h1>\n                </div>\n\n                <div>\n                    {isUpdating && <DeleteButton onClick={() => deleteCoupon(couponId)}>Odstrániť</DeleteButton>}\n                    {!isUpdating && <SubmitButton onClick={() => createCoupon(coupon)}>Vytvoriť</SubmitButton>}\n                </div>\n            </Header>\n            <ScrollContainer>\n                <GridRow>\n                    <GridCol>\n                        <h3>Základné informácie</h3>\n                        <InputRow\n                            label=\"Kód kupónu\"\n                            example=\"napr: 50off\"\n                        >\n                            <CustomInput\n                                label=\"Kód\"\n                                type='text'\n                                name='code'\n                                value={coupon.code}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Typ kupónu\"\n                            example=\"\"\n                        >\n                            <CustomSelect name='type' value={coupon.type} onChange={(e) => handleChange(e)}>\n                                <option value={\"percentage\"}>Percentá</option>\n                                <option value={\"flat\"}>Fixná suma</option>\n                            </CustomSelect>\n                        </InputRow>\n                    </GridCol>\n                    <GridCol>\n                        <h3>Parametre</h3>\n\n                        <InputRow\n                            label=\"Hodnota\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='value'\n                                value={coupon.value.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Koľko maximálne krát môže tento kupón byt použitý jedným človek.\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='maxUses'\n                                value={coupon.maxUses.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Minimálna hodnota objednávky v centoch, aby bol tento kupón aplikovateľný.\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='minValue'\n                                value={coupon.minValue.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Koľko maximálne krát môže tento kupón byt použitý dohromady všetkými užívateľmi.\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='maxUsesTotal'\n                                value={coupon.maxUsesTotal.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                    </GridCol>\n                </GridRow>\n\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CouponSection\n","/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.styles.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx",[],"/imooptik-frontend/src/context/image/image.queries.jsx",[],"/imooptik-frontend/src/context/user/user.queries.jsx",[],"/imooptik-frontend/src/context/blog/blog.queries.jsx",[],"/imooptik-frontend/src/context/user/user.utils.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx",["703"],"/imooptik-frontend/src/sections/customers/customers.styles.jsx",[],"/imooptik-frontend/src/sections/orders/orders.styles.jsx",[],"/imooptik-frontend/src/context/orders/orders.utils.jsx",[],"/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx",[],"/imooptik-frontend/src/sections/analytics/analytics.styles.jsx",[],"/imooptik-frontend/src/sections/product/product.styles.jsx",[],"/imooptik-frontend/src/sections/coupon/coupon.styles.jsx",[],"/imooptik-frontend/src/sections/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/sections/coupons/coupons.styles.jsx",[],"/imooptik-frontend/src/sections/order/order.styles.jsx",[],"/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx",[],"/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx",[],"/imooptik-frontend/src/sections/post/post.styles.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.component.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx",[],"/imooptik-frontend/src/components/list-arrows/list-arrows.component.jsx",["704","705"],"/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.component.jsx",[],"/imooptik-frontend/src/hooks/useFetch.jsx",["706","707","708"],"import { useEffect, useState } from 'react'\n\nexport const useFetch = (path, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [message, setMessage] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`)\n                const data = await res.json()\n\n                setMessage(data.message)\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n                setMessage(\"Niečo sa pokazilo\")\n            }\n        }\n        fetchData()\n    }, [refetchIndex])\n\n    return { response, isLoading, error, message, refetch }\n}\n\nexport const useFetchByQuery = (path, queryObj, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify(queryObj)\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path])\n\n    return { response, isLoading, error, refetch }\n}\n\nexport const useFetchById = (path, id, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}/${id}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path, id])\n\n    return { response, isLoading, error, refetch }\n}\n","/imooptik-frontend/src/components/user-form/user-form.component.jsx",["709","710"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ProfileOrderOverview from '../profile-order-overview/profile-order-overview.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\nimport ExaminationsOverview from '../examinations-overview/examinations-overview.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Profile,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    Title,\n    Container,\n    OrderHeader,\n    OrderButton,\n    CustomSelect,\n    AdminPanelContainer\n} from './user.form-styles'\n\nconst UserForm = ({\n    isAdmin,\n    isUpdating,\n    user,\n    handleChange,\n    handleParameterChange,\n    handleCompanyChange,\n    isOptometrist\n}) => {\n    const { push } = useHistory()\n\n    const handleAddOrderButtonClick = e => {\n        e.preventDefault()\n        push(`/dashboard/objednavky/${user._id}`)\n    }\n\n    console.log(user)\n\n\n    return (\n        <GridContainer>\n            <Profile>\n                {isAdmin && <AdminPanelContainer>\n                    <h2>Admin panel</h2>\n                    <InputRow\n                        label=\"Predajňa na ktorej uživatel pracuje\"\n                        example=''\n                    >\n                        <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Nezadané</option>\n                            {\n                                retailNames.map((name, idx) => {\n                                    if (idx === 4) return\n                                    return (\n                                        <option key={idx} value={idx + 1}>{name}</option>\n                                    )\n                                })\n                            }\n                        </CustomSelect>\n                    </InputRow>\n                    <InputRow\n                        label=\"Výška administrativných práv\"\n                        example=\"\"\n                    >\n                        <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Zákaznik</option>\n                            <option value={1}>Predavač</option>\n                            <option value={2}>Vedúci</option>\n                        </CustomSelect>\n                    </InputRow>\n\n                    <Container>\n                        <CustomCheckbox\n                            label='Optometrista'\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"optometrist\",\n                                    value: !user.optometrist\n                                }\n                            })}\n                            isActive={user.optometrist}\n                        />\n                    </Container>\n                </AdminPanelContainer>}\n                <div>\n                    <h2>Informácie</h2>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                // label=\"Priezvisko*\"\n                                type='date'\n                                name='birthDate'\n                                value={user.birthDate}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </div>\n\n                <Container>\n                    <h2>Kontaktné údaje</h2>\n                    <Row>\n                        <div>\n                            <CustomInput\n                                label=\"E-mail*\"\n                                type='email'\n                                name='email'\n                                value={user.email ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Telefónne číslo\"\n                                type='text'\n                                name='phone'\n                                value={user.phone ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <h2>Fakturačné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.address ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.psc ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.city ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.country ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n                <Container>\n                    <h2>Firemné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"IČO\"\n                                type='text'\n                                name='ico'\n                                value={user.company.ico ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"DIČ\"\n                                type='text'\n                                name='dic'\n                                value={user.company.dic ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.company.address ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.company.psc ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.company.city ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.company.country ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n\n                <Container>\n                    <h2>Parametre</h2>\n\n                    <ParametersTable\n                        parameters={user.lenses}\n                        handleChange={handleParameterChange}\n                    />\n                </Container>\n\n\n            </Profile>\n\n            {isUpdating && <div>\n                <OrderHeader>\n                    <Title>\n                        Objednávky\n                    </Title>\n                    <OrderButton onClick={e => handleAddOrderButtonClick(e)}>Pridať objednávku</OrderButton>\n                </OrderHeader>\n                <div>\n                    {user.orders.length > 0 ? user.orders.map((order, idx) => (\n                        <ProfileOrderOverview\n                            key={idx}\n                            id={order}\n                            handleUpdateClick={() => push(`/dashboard/objednavky/${user._id}/${order}`)}\n                        />\n                    )).reverse().slice(0, 5) : (\n                            <p>Žiadné objednávky</p>\n                        )}\n                </div>\n                {isOptometrist && <ExaminationsOverview />}\n            </div>}\n        </GridContainer>\n    )\n}\n\nexport default UserForm\n","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.component.jsx",[],"/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx",["711"],"import React from 'react'\n\nimport CustomFormSwitch from '../custom-form-switch/custom-form-switch.component'\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from \"../custom-checkbox/custom-checkbox.component\"\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    CustomSelect,\n    Container,\n    GridRow,\n    ZeroMargin,\n    ColContainer,\n    CustomerForm\n} from './new-user-form.styles'\n\n\nconst NewUserForm = ({\n    formToShow,\n    switchFormButtons,\n    toggleUserForm,\n    user,\n    handleChange,\n    isAdmin,\n    handleParameterChange,\n    handleCompanyChange\n}) => {\n\n    return (\n        <div>\n            {/* Akého uživatela chcete vytvoriť? */}\n            {isAdmin && <CustomFormSwitch\n                items={switchFormButtons}\n                title=\"Akého uživatela chcete vytvoriť?\"\n                activeIndex={formToShow}\n                handleClick={toggleUserForm}\n            />}\n\n            {\n                formToShow === 0 ? (\n                    <CustomerForm>\n                        <ColContainer>\n                            <h2>Informácie</h2>\n                            <InputRow\n                                label=\"\"\n                                example='napr: John'\n                            >\n                                <CustomInput\n                                    label=\"Meno*\"\n                                    type='text'\n                                    name='fName'\n                                    value={user.fName ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: Doe'\n                            >\n                                <CustomInput\n                                    label=\"Priezvisko*\"\n                                    type='text'\n                                    name='lName'\n                                    value={user.lName ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: priklad@email.com'\n                            >\n                                <CustomInput\n                                    label=\"E-mail*\"\n                                    type='email'\n                                    name='email'\n                                    value={user.email ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: 091234567'\n                            >\n                                <CustomInput\n                                    label=\"Telefónne číslo\"\n                                    type='text'\n                                    name='phone'\n                                    value={user.phone ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"Dátum narodenia\"\n                                example=''\n                            >\n                                <CustomInput\n                                    // label=\"Priezvisko*\"\n                                    type='date'\n                                    name='birthDate'\n                                    value={user.birthDate}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n\n                            <Container>\n                                <h2>Parametre</h2>\n\n                                <ParametersTable\n                                    parameters={user.lenses}\n                                    handleChange={handleParameterChange}\n                                />\n                            </Container>\n                        </ColContainer>\n\n                        <ColContainer>\n                            <div>\n                                <h2>Fakturačné údaje</h2>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"Ulica a čislo domu\"\n                                            type='text'\n                                            name='address'\n                                            value={user.address ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"PSČ\"\n                                            type='text'\n                                            name='psc'\n                                            value={user.psc ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Mesto\"\n                                            type='text'\n                                            name='city'\n                                            value={user.city ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Krajina\"\n                                            type='text'\n                                            name='country'\n                                            value={user.country ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                </GridRow>\n                            </div>\n\n                            <Container>\n                                <h2>Firemné údaje</h2>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"IČO\"\n                                            type='text'\n                                            name='ico'\n                                            value={user.company.ico ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"DIČ\"\n                                            type='text'\n                                            name='dic'\n                                            value={user.company.dic ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"Ulica a čislo domu\"\n                                            type='text'\n                                            name='address'\n                                            value={user.company.address ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"PSČ\"\n                                            type='text'\n                                            name='psc'\n                                            value={user.company.psc ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Mesto\"\n                                            type='text'\n                                            name='city'\n                                            value={user.company.city ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Krajina\"\n                                            type='text'\n                                            name='country'\n                                            value={user.company.country ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </div>\n                                </GridRow>\n                            </Container>\n                        </ColContainer>\n\n                    </CustomerForm>\n                ) : (\n                        <CustomerForm>\n\n                            <ColContainer>\n                                <h2>Informácie</h2>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: John'\n                                >\n                                    <CustomInput\n                                        label=\"Meno*\"\n                                        type='text'\n                                        name='fName'\n                                        value={user.fName ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: Doe'\n                                >\n                                    <CustomInput\n                                        label=\"Priezvisko*\"\n                                        type='text'\n                                        name='lName'\n                                        value={user.lName ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: priklad@email.com'\n                                >\n                                    <CustomInput\n                                        label=\"E-mail*\"\n                                        type='email'\n                                        name='email'\n                                        value={user.email ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"Aspoň 1 velké pismeno, 1 malé pismeno a 1 číslo*\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Heslo*\"\n                                        type='password'\n                                        name='password'\n                                        value={user.password ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Potvrď heslo*\"\n                                        type='password'\n                                        name='confirmPassword'\n                                        value={user.confirmPassword ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n\n\n                            </ColContainer>\n\n                            <ColContainer>\n                                <h2>Admin privilégia</h2>\n                                <InputRow\n                                    label=\"Predajňa na ktorej uživatel pracuje\"\n                                    example=''\n                                >\n\n                                    <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Nezadané</option>\n\n                                        {\n                                            retailNames.map((name, idx) => {\n                                                if (idx === 4) return\n                                                return (\n                                                    <option key={idx} value={idx + 1}>{name}</option>\n\n                                                )\n                                            })\n                                        }\n                                    </CustomSelect>\n\n                                </InputRow>\n                                <InputRow\n                                    label=\"Výška administrativných práv\"\n                                    example=\"\"\n                                >\n                                    <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Zákaznik</option>\n                                        <option value={1}>Predavač</option>\n                                        <option value={2}>Vedúci</option>\n                                    </CustomSelect>\n\n                                </InputRow>\n                                <Container>\n                                    <CustomCheckbox\n                                        label='Optometrista'\n                                        handleClick={() => handleChange({\n                                            target: {\n                                                name: \"optometrist\",\n                                                value: !user.optometrist\n                                            }\n                                        })}\n                                        isActive={user.optometrist}\n                                    />\n                                </Container>\n                            </ColContainer>\n                        </CustomerForm>\n                    )\n            }\n        </div>\n    )\n}\n\nexport default NewUserForm\n","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx",["712"],"/imooptik-frontend/src/components/modal-images/modal-images.component.jsx",["713","714"],"import React, { useEffect, useContext, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\n// import { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\n// import CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    // const {\n    //     getMessage,\n    //     setIsLoading,\n    //     setShowModal,\n    //     closeModal\n    // } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    // const getCropData = async (e) => {\n    //     e.preventDefault()\n    //     setShowModal(true)\n    //     setIsLoading(true)\n\n    //     try {\n    //         // if (typeof cropper !== 'undefined') {\n    //         toDataUrl(imgUrl, async (imgData) => {\n    //             const data = await handleImage(imgData, imageName, imageAlt)\n\n    //             if (data.image) {\n    //                 setImage(data.image._id)\n    //                 setSelectedImage(data.image)\n    //                 getImages()\n    //                 close()\n    //             }\n    //         })\n\n    //         // }\n    //         setShowModal(false)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    //     closeModal()\n    // };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Vybrať obrázok</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n","/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.component.jsx",["715"],"import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    AccessoriesFormContainer,\n    AccessoriesContainer,\n    StockContainer,\n    ImageContainer,\n    ProductImage,\n} from './product-accessories-form.styles'\n\nconst ProductAccessoriesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    setImageModal,\n    handleAvailableChange,\n    checkParameter,\n    retailNames,\n    currentUser,\n    isUpdating\n}) => {\n    return (\n        <AccessoriesFormContainer>\n            <AccessoriesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </AccessoriesContainer>\n            {currentUser.admin >= 2 ? (\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    {product.available.map((value, idx) => {\n                        if (idx === 4) return\n                        return (\n                            <CustomInput\n                                key={idx}\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, idx)}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        )\n                    })}\n                </StockContainer>\n            ) : (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        <CustomInput\n                            label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[currentUser.premises]}\n                            type='number'\n                            name={\"available\"}\n                            value={checkParameter(product.available, currentUser.premises)}\n                            handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                        />\n                    </StockContainer>\n                )}\n        </AccessoriesFormContainer>\n    )\n}\n\nexport default ProductAccessoriesForm\n","/imooptik-frontend/src/utils/warehouse.utils.jsx",[],"/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.component.jsx",["716"],"/imooptik-frontend/src/utils/calendar.utils.jsx",["717","718"],"/imooptik-frontend/src/utils/analytics.utils.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx",[],"/imooptik-frontend/src/components/custom-select/custom-select.component.jsx",["719"],"import React from 'react'\n\nimport { CustomSelectContainer } from './custom-select.styles'\n\nconst CustomRetailSelect = ({ name, value, handleChange, listItems, defaultOption = false, defaultValue, defaultLabel }) => {\n    return (\n        <CustomSelectContainer name={name} value={value} onChange={(e) => handleChange(e)}>\n            {defaultOption && <option value={defaultValue}>{defaultLabel}</option>}\n            {listItems.map((name, idx) => {\n                if (idx === 4) return\n                return (\n                    <option key={idx} value={idx + 1}>{name}</option>\n                )\n            })}\n        </CustomSelectContainer>\n    )\n}\n\nexport default CustomRetailSelect\n","/imooptik-frontend/src/components/modal-finish-combined-product/modal-finish-combined-product.component.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx",[],"/imooptik-frontend/src/sections/order/steps/4-summary/summary.component.jsx",[],"/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.component.jsx",["720","721"],"import React, { useState, useEffect, useContext } from 'react'\nimport { WarehouseContext } from '../../../../context/warehouse/warehouse.context'\n\nimport CustomInput from '../../../../components/custom-input/custom-input.component'\nimport BackButton from '../../../../components/custom-back-button/custom-back-button.component'\n\nimport {\n    formatAvailable,\n    isAvailable\n} from '../../../../utils/orders.utils'\n\nimport {\n    SearchContainer,\n    SearchButton,\n    TableContainer,\n    ProductTableHead,\n    ProductTableRow,\n    TableCol\n} from './select-product.styles'\n\nconst SelectProductComponent = ({ back, next, addToOrder, showModal, showErrorMessage }) => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const [productItems, setProductItems] = useState([])\n\n    const {\n        products,\n        getProductsByQuery\n    } = useContext(WarehouseContext)\n\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        getProductsByQuery({\n            query: searchQuery\n        })\n    }\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== \"\") {\n            if (e.key === 'Enter') {\n                getProductsByQuery({\n                    query: searchQuery\n                })\n            }\n        }\n    }\n\n    const handleClick = (product) => {\n        addToOrder({\n            name: \"product\",\n            value: product\n        })\n        if (product.type === 1) {\n            next(\"selectLenses\")\n            // next(\"summary\")\n        } else {\n            showModal()\n        }\n    }\n\n    useEffect(() => {\n        if (!products || productItems.length < 1) {\n            getProductsByQuery({\n                limit: 10\n            })\n        }\n        if (products) {\n            setProductItems(products)\n        }\n    }, [products])\n\n    useEffect(() => {\n        if (products) {\n            if (searchQuery === '') {\n                getProductsByQuery({\n                    limit: 10\n                })\n            }\n        }\n    }, [searchQuery])\n\n    useEffect(() => {\n        return () => {\n            setProductItems([])\n        }\n    }, [])\n\n    return (\n        <div>\n            <BackButton onClick={back} />\n            <SearchContainer>\n                <h3>Vyhľadať produkt</h3>\n                <div>\n                    <CustomInput\n                        label='Názov produktu, eanCode alebo popis'\n                        value={searchQuery}\n                        handleChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n            </SearchContainer>\n\n            <TableContainer>\n                <ProductTableHead>\n                    <TableCol>eanCode</TableCol>\n                    <TableCol>Obrázok</TableCol>\n                    <TableCol>Názov</TableCol>\n                    <TableCol>Značka</TableCol>\n                    <TableCol>Cena</TableCol>\n                    <TableCol>Dostupnosť</TableCol>\n                </ProductTableHead>\n                {productItems.map((product, idx) => (\n                    <ProductTableRow key={idx} onClick={() => isAvailable(product.available) ? handleClick(product) : showErrorMessage(\"Produkt nieje na sklade.\")}>\n                        <TableCol>{product.eanCode}</TableCol>\n                        <TableCol>\n                            {product?.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${product.image.imagePath}`} alt={product.image.alt} />}\n                        </TableCol>\n                        <TableCol>{product.name}</TableCol>\n                        <TableCol>{product.brand}</TableCol>\n                        <TableCol>{(product.price / 100).toFixed(2)}€</TableCol>\n                        <TableCol>{formatAvailable(product.available)}</TableCol>\n                    </ProductTableRow>\n                ))}\n            </TableContainer>\n        </div>\n    )\n}\n\nexport default SelectProductComponent\n","/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.component.jsx",["722"],"import React, { useState, useEffect, useContext } from 'react'\nimport { WarehouseContext } from '../../../../context/warehouse/warehouse.context'\n\nimport BackButton from '../../../../components/custom-back-button/custom-back-button.component'\nimport ParametersTable from '../../../../components/parameters-table/parameters-table.component'\n\nimport {\n    ParametersContainer,\n    LensesContainer,\n    LensesImg,\n    SelectLensesContainer,\n    LensesFlexContainer\n} from './select-lenses.styles'\n\nconst SelectLensesComponent = ({ back, next, addToOrder, order, showModal }) => {\n    const [lensesItems, setLensesItems] = useState([])\n    const {\n        lensesProducts,\n        getLenses\n    } = useContext(WarehouseContext)\n\n    const handleClick = (lenses) => {\n        // if (!lenses) return showModal()\n        addToOrder({\n            name: \"lenses\",\n            value: lenses\n        })\n        showModal()\n    }\n\n    useEffect(() => {\n        if (!lensesProducts) {\n            getLenses()\n        }\n        if (lensesProducts) {\n            setLensesItems(lensesProducts)\n        }\n    }, [lensesProducts])\n\n    return (\n        <div>\n            <BackButton onClick={back} />\n            <div>\n                <ParametersContainer>\n                    <h3>Parametre zákaznika</h3>\n                    <ParametersTable\n                        parameters={order.user.lenses}\n                        disabledInputs={true}\n                    />\n                </ParametersContainer>\n\n            </div>\n            <SelectLensesContainer>\n                <h3>Výber Šošoviek</h3>\n                <LensesFlexContainer>\n                    {lensesItems.map((lenses, idx) => (\n                        <LensesContainer key={idx} onClick={() => handleClick(lenses)}>\n                            <h4>{lenses.name}</h4>\n                            <LensesImg>\n                                {/* <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${lenses.image.imagePath}`} alt={lenses.image.alt} /> */}\n                            </LensesImg>\n                            <p>{lenses.description}</p>\n                            {lenses.dioptersRange && <p>{`Dioptrie od ${lenses.dioptersRange[0]} do ${lenses.dioptersRange[1]}`}</p>}\n                            {lenses.cylinderRange && <p>{`Cylinder  od ${lenses.cylinderRange[0]} do ${lenses.cylinderRange[1]}`}</p>}\n                            <h5>{(lenses.price / 100).toFixed(2)}€</h5>\n                        </LensesContainer>\n                    ))}\n                    <LensesContainer onClick={() => handleClick(null)}>\n                        <h4>Žiadné sklá</h4>\n                        <LensesImg>\n                            {/* <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${lenses.image.imagePath}`} alt={lenses.image.alt} /> */}\n                        </LensesImg>\n                        <h5>0€</h5>\n\n                    </LensesContainer>\n                </LensesFlexContainer>\n            </SelectLensesContainer>\n        </div >\n    )\n}\n\nexport default SelectLensesComponent\n","/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.component.jsx",["723","724"],"import React, { useState, useEffect, useContext } from 'react'\nimport { UserContext } from '../../../../context/user/user.context'\n\nimport CustomInput from '../../../../components/custom-input/custom-input.component'\n\nimport {\n    SearchContainer,\n    TableContainer,\n    UserTableHead,\n    UserTableRow,\n    TableCol,\n    SearchButton\n} from './select-user.styles'\n\nconst SelectUserComponent = ({ next, addToOrder }) => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const [userItems, setUserItems] = useState([])\n\n    const {\n        users,\n        getFilteredUsers,\n        getUserByQuery\n    } = useContext(UserContext)\n\n    const handleClick = (user) => {\n        addToOrder({\n            name: \"user\",\n            value: user\n        })\n        next()\n    }\n\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== '') {\n            if (e.key === 'Enter') {\n                getUserByQuery({\n                    query: searchQuery\n                })\n            }\n        }\n    }\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        getUserByQuery({\n            query: searchQuery\n        })\n    }\n\n    useEffect(() => {\n        if (!users) {\n            getFilteredUsers({\n                limit: 5\n            })\n        }\n        if (users) {\n            setUserItems(users)\n        }\n    }, [users])\n\n    useEffect(() => {\n        if (users) {\n            if (searchQuery === '') {\n                getFilteredUsers({\n                    limit: 5\n                })\n                setUserItems(users)\n            }\n        }\n    }, [searchQuery])\n\n    useEffect(() => {\n        return () => {\n            setSearchQuery('')\n            setUserItems([])\n        }\n    }, [])\n\n    return (\n        <div>\n            <SearchContainer>\n                <h3>Vyhľadať zákaznika</h3>\n                <div>\n                    <CustomInput\n                        label={\"Meno, priezvisko, email alebo tel. číslo\"}\n                        value={searchQuery}\n                        onChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n            </SearchContainer>\n\n            <TableContainer>\n                <UserTableHead>\n                    <TableCol>Meno a priezvisko</TableCol>\n                    <TableCol>Email</TableCol>\n                    <TableCol>Možnosti</TableCol>\n                </UserTableHead>\n                {userItems.map((user, idx) => (\n                    <UserTableRow key={idx} onClick={() => handleClick(user)}>\n                        <TableCol>{user.name}</TableCol>\n                        <TableCol>{user.email}</TableCol>\n                        <TableCol>{user.phone}</TableCol>\n                    </UserTableRow>\n                ))}\n            </TableContainer>\n\n        </div>\n    )\n}\n\nexport default SelectUserComponent\n","/imooptik-frontend/src/sections/booking/booking.styles.jsx",[],"/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx",[],"/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.component.jsx",["725","726","727","728"],"/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.component.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.component.jsx",["729","730","731"],"import React, { useState, useEffect } from 'react'\n\nimport {\n    dayNames,\n    getPreviousMonthDays,\n    getNextMonthDays,\n    getCurrentMonthDays,\n    getBooking\n} from '../../utils/calendar.utils'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport {\n    Container,\n    HeaderBlock,\n    Dayblock,\n\n} from './calendar.styles'\n\nconst Calendar = ({\n    calendar,\n    month,\n    year,\n    handleCalendarBlockClick\n}) => {\n    const date = new Date()\n\n    date.setDate(1)\n    const lastDay = new Date(year, month + 1, 0).getDate()\n    const prevLastDay = new Date(year, month, 0).getDate()\n\n    const firstDayIndex = new Date(year, month, 0).getDay();\n    const lastDayIndex = new Date(year, month + 1, 0).getDay()\n\n    const nextDays = 7 - lastDayIndex\n\n    const { response, isLoading, refetch } = useFetchById('api/booking/calendars', calendar, !calendar)\n    const [prevDays, setPrevDays] = useState([])\n    const [currentMonthDays, setCurrentMonthDays] = useState([])\n    const [nextMonthDays, setMonthNextDays] = useState([])\n\n    useEffect(() => {\n        refetch()\n    }, [month])\n\n    useEffect(() => {\n        if (calendar) {\n            refetch()\n        }\n    }, [calendar])\n\n    useEffect(() => {\n        if (!isLoading) {\n            if (response?.calendar) {\n                const prevDaysArr = getPreviousMonthDays(firstDayIndex)\n                const arr = getCurrentMonthDays(lastDay)\n                const nextDaysArr = getNextMonthDays(nextDays)\n                const checkedArr = getBooking(arr, response.calendar, month, year)\n\n                setPrevDays(prevDaysArr)\n                setCurrentMonthDays(checkedArr)\n                setMonthNextDays(nextDaysArr)\n            }\n        }\n    }, [isLoading])\n\n    return (\n        <Container>\n\n            {dayNames.map((name, idx) => (\n                <HeaderBlock key={idx}>\n                    {name}\n                </HeaderBlock>\n            ))}\n\n            {prevDays.map((value, idx) => (\n                <Dayblock faded={true} key={idx}>\n                    <p>\n                    </p>\n                    <p>\n                        {prevLastDay - idx}\n                    </p>\n                </Dayblock>\n            ))}\n\n            {currentMonthDays.map((data, idx) => {\n                const { dayNumber, bookings } = data\n                return (\n                    <Dayblock key={idx} onClick={() => handleCalendarBlockClick(data)}>\n                        <p>\n                            {bookings && <span>\n                                {bookings.length}\n                            </span>}\n                        </p>\n                        <p>\n                            {dayNumber}\n                        </p>\n                    </Dayblock>\n                )\n            })}\n            {nextMonthDays.map((value, idx) => (\n                <Dayblock faded={true} key={idx}>\n                    <p>\n                    </p>\n                    <p>\n                        {idx + 1}\n                    </p>\n                </Dayblock>\n            ))}\n        </Container>\n    )\n}\n\nexport default Calendar\n","/imooptik-frontend/src/components/booking-appoinments/booking-appoinment.component.jsx",["732"],"/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.styles.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx",[],"/imooptik-frontend/src/components/user-form/user.form-styles.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx",[],"/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx",[],"/imooptik-frontend/src/components/list-arrows/list-arrows.styles.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx",[],"/imooptik-frontend/src/hooks/useOutsideAlerter.jsx",["733"],"import React, { useRef, useEffect } from \"react\";\n\nexport const useOutsideHandler = (ref, action) => {\n    useEffect(() => {\n        const handleClickOutside = e => {\n            if (ref.current && !ref.current.contains(e.target)) {\n                action()\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n\n    }, [ref])\n}\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(ref) {\n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                alert(\"You clicked outside of me!\");\n            }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [ref]);\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nfunction OutsideAlerter(props) {\n    const wrapperRef = useRef(null);\n    useOutsideAlerter(wrapperRef);\n\n    return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport default OutsideAlerter;\n","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx",[],"/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.styles.jsx",[],"/imooptik-frontend/src/components/custom-select/custom-select.styles.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx",[],"/imooptik-frontend/src/components/modal-finish-combined-product/modal-finish-combined-product.styles.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx",[],"/imooptik-frontend/src/components/examinations-overview/examinations-overview.component.jsx",["734","735"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useFetchById } from '../../hooks/useFetch'\nimport { ExaminationContext } from '../../context/examination/examination.context'\n\nimport ExaminationUser from '../examination-user/examination-user.component'\nimport OptometristExaminationModal from '../modal-optometrist-examination/modal-optometrist-examination.component'\n\nimport {\n    checkParameterValue\n} from '../../utils/parameters.utils'\n\nimport {\n    ExaminationsOverviewContainer,\n    Header,\n    ExaminationContainer,\n    ExamHead,\n    ExamTableContainer,\n    HeadTableCol,\n    TableCol,\n    ExaminationOptions,\n    AddButton,\n    UpdateButton,\n    DeleteButton\n} from './examinations-overview.styles'\n\nconst ExaminationsOverview = () => {\n    const params = useParams()\n    const examinationData = useFetchById(\"api/admin/exams/user\", params.id)\n    const { deleteExamination } = useContext(ExaminationContext)\n    const [showOptometristModal, setShowOptometristModal] = useState(false)\n    const [examinations, setExaminations] = useState([])\n    const [examinationToUpdate, setExaminationToUpdate] = useState(null)\n\n    const handleUpdateClick = (e, id) => {\n        e.preventDefault()\n        setExaminationToUpdate(id)\n        setShowOptometristModal(true)\n    }\n\n    const handleDelete = (e, id) => {\n        e.preventDefault()\n        deleteExamination(id)\n        examinationData.refetch()\n    }\n\n    const handleCloseModal = () => {\n        setShowOptometristModal(false)\n        setExaminationToUpdate(null)\n    }\n\n    useEffect(() => {\n        if (!examinationData.isLoading) {\n            if (examinationData.response) {\n                setExaminations(examinationData.response.exams)\n            }\n        }\n    }, [examinationData.isLoading])\n\n    return (\n        <ExaminationsOverviewContainer>\n            {showOptometristModal && <OptometristExaminationModal\n                userId={params.id}\n                examinationToUpdate={examinationToUpdate}\n                refetch={examinationData.refetch}\n                close={handleCloseModal}\n            />}\n            <Header>\n                <h2>Vyšetrenia</h2>\n                <div>\n                    <AddButton type='button' onClick={() => setShowOptometristModal(true)}>Pridať prehliadku</AddButton>\n                </div>\n            </Header>\n\n\n            <div>\n                {examinations.map((examination, idx) => (\n                    <ExaminationContainer key={idx}>\n                        <ExamHead>\n                            <h3>Dátum</h3>\n                            <p>{new Date(examination?.date).toLocaleDateString(\"sk-SK\", { weekday: 'long', month: 'long', day: 'numeric' })}</p>\n                        </ExamHead>\n                        <ExamTableContainer>\n                            <HeadTableCol>\n                                <div>-</div>\n                                <div>PO</div>\n                                <div>ĽO</div>\n                                <div>PO</div>\n                                <div>ĽO</div>\n                            </HeadTableCol>\n                            <TableCol>\n                                <div>sph</div>\n                                {examination?.parameters?.sph.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>cyl</div>\n                                {examination?.parameters?.cyl.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>ax</div>\n                                {examination?.parameters?.ax.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus D</div>\n                                {examination?.parameters?.vizusD.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus bino</div>\n                                {examination?.parameters?.vizusBino.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus B</div>\n                                {examination?.parameters?.vizusB.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>prizma</div>\n                                {examination?.parameters?.prizma.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>basis</div>\n                                {examination?.parameters?.basis.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>PD</div>\n                                {examination?.parameters?.pd.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>ADD</div>\n                                {examination?.parameters?.add.map((value, idx) => {\n                                    if (idx > 1) return\n                                    return (\n                                        <div key={idx}>\n                                            {checkParameterValue(value)}\n                                        </div>\n                                    )\n                                })}\n                            </TableCol>\n                        </ExamTableContainer>\n                        <ExaminationOptions>\n                            <ExaminationUser userId={examination.doneBy} />\n                            <div>\n                                <UpdateButton onClick={e => handleUpdateClick(e, examination._id)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={e => handleDelete(e, examination._id)}>Vymazať</DeleteButton>\n                            </div>\n                        </ExaminationOptions>\n                    </ExaminationContainer>\n                ))}\n            </div>\n        </ExaminationsOverviewContainer>\n    )\n}\n\nexport default ExaminationsOverview\n","/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx",["736","737","738","739","740"],"/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx",["741","742"],"import React, { useState, useContext } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { OrdersContext } from '../../context/orders/orders.context'\nimport ReactDOM from 'react-dom'\n\nimport Popup from '../popup/pop-up.component'\n\nimport { retailNames } from '../../context/warehouse/warehouse.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    CustomSelect,\n    SubmitButton\n} from './order-deligate-modal.styles'\n\n\nconst OrderDeligateModal = ({ close, premise, id, refetch }) => {\n    const [value, setValue] = useState(premise)\n    const { token } = useContext(AuthContext)\n    const { getOrders } = useContext(OrdersContext)\n    const {\n        getMessage,\n        message,\n        isLoading,\n        setIsLoading,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const handleClick = async () => {\n        setIsLoading(true)\n        const myHeaders = new Headers();\n        myHeaders.append(\"auth-token\", token);\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const raw = JSON.stringify({\n            premises: Number(value),\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders/${id}/delegate`, requestOptions)\n            console.log(response)\n            if (response.status === 400) {\n                getMessage(\"Faktúra musí byt zaplatená, aby mohla byť priradená prevádzke\")\n            }\n            if (response.status === 401) {\n                getMessage(\"Musíš byt vedúci, aby si mohol manipulovať s priradovanim\")\n            }\n            const data = await response.json()\n\n            if (data.order) {\n                refetch()\n                setIsLoading(false)\n                close()\n                return\n            }\n\n            // getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            setIsLoading(false)\n        }\n    }\n\n    if (isLoading || message) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Priradiť k prevádzke</h3>\n                <CustomSelect value={value} onChange={(e) => setValue(e.target.value)}>\n                    <option value={0}>Nezadané</option>\n                    {retailNames.map((name, idx) => {\n                        if (idx === 4) return\n                        return (\n                            <option key={idx} value={idx + 1}>{name}</option>\n                        )\n                    })}\n                </CustomSelect>\n                <SubmitButton onClick={handleClick}>Priradiť</SubmitButton>\n            </Modal>\n        </ModalContainer >\n    ), document.getElementById('portal'))\n}\n\nexport default OrderDeligateModal\n","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx",[],"/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx",[],"/imooptik-frontend/src/sections/order/steps/4-summary/summary.styles.jsx",[],"/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.styles.jsx",[],"/imooptik-frontend/src/utils/orders.utils.jsx",[],"/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.styles.jsx",[],"/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.styles.jsx",[],"/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.component.jsx",["743"],"import React, { useState, useEffect } from 'react'\n\nimport {\n    formatPrice\n} from '../../utils/warehouse.utils'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    CloseButton,\n    Modal,\n    ModalContainer,\n    AddButton,\n    CustomSelect,\n    OptionsCheckbox,\n    OverwriteAddressCheckbox,\n    DiscountCheckboxContainer\n} from './modal-finish-order.styles'\n\nconst FinishOrderModal = ({\n    close,\n    order,\n    combinedProducts,\n    createOrder,\n    setHasChanged,\n    isUpdating,\n    updateOrder\n}) => {\n    const [orderDetail, setOrderDetails] = useState({\n        paymentType: \"cash\"\n    })\n    const [hasDeposit, setHasDeposit] = useState(false)\n    const [overwrite, setOverwrite] = useState(false)\n\n    const toggleDeposit = prevValue => {\n        if (prevValue) {\n            setHasDeposit(false)\n            if (orderDetail.paidAlready) {\n                delete orderDetail[\"paidAlready\"]\n                setOrderDetails({\n                    ...orderDetail\n                })\n            }\n        } else {\n            setHasDeposit(true)\n        }\n    }\n\n    const toggleOverwriteAddress = prevValue => {\n        if (prevValue) {\n            setOverwrite(false)\n            if (orderDetail.overwrite) {\n                delete orderDetail[\"overwrite\"]\n                setOrderDetails({\n                    ...orderDetail\n                })\n            }\n        } else {\n            setOverwrite(true)\n        }\n    }\n\n    const handleOrderDetailChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete orderDetail[name]\n            setOrderDetails({\n                ...orderDetail\n            })\n            return\n        }\n\n        setOrderDetails({\n            ...orderDetail,\n            [name]: value\n        })\n    }\n\n    const handleAddressOverwriteChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete orderDetail.overwrite[name]\n            setOrderDetails({\n                ...orderDetail\n            })\n            return\n        }\n\n        setOrderDetails({\n            ...orderDetail,\n            overwrite: {\n                ...orderDetail.overwrite,\n                [name]: value\n            }\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (isUpdating) {\n            let orderObj = {\n                ...orderDetail,\n            }\n            delete orderObj['paymentType']\n            delete orderObj['shouldDeliver']\n\n            setHasChanged(false)\n            updateOrder(orderObj, order.order._id)\n\n        } else {\n            let orderObj = {\n                ...orderDetail,\n                user: order.user._id,\n                combinedProducts: combinedProducts.map(product => product._id),\n                status: hasDeposit ? \"half-paid\" : \"paid\"\n            }\n\n            if (orderDetail.paidAlready) {\n                orderObj = {\n                    ...orderObj,\n                    paidAlready: formatPrice(orderDetail.paidAlready)\n                }\n            }\n\n            console.log(orderObj)\n            setHasChanged(false)\n            createOrder(orderObj)\n        }\n    }\n\n    useEffect(() => {\n        if (isUpdating) {\n            if (order?.order) {\n                handleOrderDetailChange({\n                    target: {\n                        name: 'shouldDeliver',\n                        value: order?.order?.shouldDeliver\n                    }\n                })\n                handleOrderDetailChange({\n                    target: {\n                        name: 'buyingAsCompany',\n                        value: order?.order?.buyingAsCompany\n                    }\n                })\n            }\n        }\n    }, [isUpdating, order])\n\n    useEffect(() => {\n        return () => {\n            setOrderDetails({\n                paymentType: \"cash\"\n            })\n            setHasDeposit(false)\n            setOverwrite(false)\n        }\n    }, [])\n\n    return (\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>{isUpdating ? \"Upraviť objednávku\" : 'Dokončeniť objednávky'}</h2>\n\n                {!isUpdating && <div>\n                    <h4>Spôsob platby</h4>\n\n                    <CustomSelect\n                        name='paymentType'\n                        value={orderDetail?.paymentType ?? \"cash\"}\n                        onChange={(e) => handleOrderDetailChange(e)}\n                    >\n                        <option value={\"cash\"}>Hotovosť</option>\n                        <option value={\"card\"}>Karta</option>\n                        <option value={\"coupon\"}>Kupón</option>\n                    </CustomSelect>\n\n                    <DiscountCheckboxContainer>\n                        <input id=\"hasDeposit\" name='hasDeposit' type='checkbox' value={hasDeposit} onChange={() => toggleDeposit(hasDeposit)} />\n                        <label htmlFor='hasDeposit'>Pridať zálohu</label>\n                    </DiscountCheckboxContainer>\n\n                    {hasDeposit && (\n                        <CustomInput\n                            label=\"Zaplatená záloha\"\n                            name=\"paidAlready\"\n                            type='text'\n                            value={orderDetail?.paidAlready ?? \"\"}\n                            onChange={e => handleOrderDetailChange(e)}\n                        />\n                    )}\n                </div>\n                }\n                <div>\n                    <h4>Informácie o doručení</h4>\n                    <OptionsCheckbox\n                        label={\"Doručiť na adresu\"}\n                        isActive={orderDetail?.shouldDeliver}\n                        handleClick={() => handleOrderDetailChange({\n                            target: {\n                                name: 'shouldDeliver',\n                                value: orderDetail?.shouldDeliver ? !orderDetail?.shouldDeliver : true\n                            }\n                        })}\n                    />\n                    <OptionsCheckbox\n                        label={\"Nákup na firmu\"}\n                        isActive={orderDetail?.buyingAsCompany}\n                        handleClick={() => handleOrderDetailChange({\n                            target: {\n                                name: 'buyingAsCompany',\n                                value: orderDetail?.buyingAsCompany ? !orderDetail?.buyingAsCompany : true\n                            }\n                        })}\n                    />\n\n                    {orderDetail?.shouldDeliver && (\n                        <div>\n                            <h4>Adresa</h4>\n                            <p>{order.user.psc}</p>\n                            <p>{order.user.address}</p>\n                            <p>{order.user.city}</p>\n                            <p>{order.user.country}</p>\n\n                            <div>\n                                <OverwriteAddressCheckbox>\n                                    <input id=\"overwrite\" name='overwrite' type='checkbox' value={overwrite} onChange={() => toggleOverwriteAddress(overwrite)} />\n                                    <label htmlFor='overwrite'>Iná adresa</label>\n                                </OverwriteAddressCheckbox>\n\n                                {overwrite && (\n                                    <div>\n                                        <CustomInput\n                                            label=\"Adresa\"\n                                            name=\"address\"\n                                            type='text'\n                                            value={orderDetail?.overwrite?.address ?? \"\"}\n                                            onChange={e => handleAddressOverwriteChange(e)}\n                                        />\n                                        <CustomInput\n                                            label=\"PSČ\"\n                                            name=\"psc\"\n                                            type='text'\n                                            value={orderDetail?.overwrite?.psc ?? \"\"}\n                                            onChange={e => handleAddressOverwriteChange(e)}\n                                        />\n                                        <CustomInput\n                                            label=\"Mesto\"\n                                            name=\"city\"\n                                            type='text'\n                                            value={orderDetail?.overwrite?.city ?? \"\"}\n                                            onChange={e => handleAddressOverwriteChange(e)}\n                                        />\n                                        <CustomInput\n                                            label=\"Štát\"\n                                            name=\"country\"\n                                            type='text'\n                                            value={orderDetail?.overwrite?.country ?? \"\"}\n                                            onChange={e => handleAddressOverwriteChange(e)}\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    )}\n                </div>\n\n                <AddButton onClick={handleSubmit}>Vytvoriť objednávku</AddButton>\n            </Modal>\n        </ModalContainer>\n    )\n}\n\nexport default FinishOrderModal\n","/imooptik-frontend/src/components/order-summary-lenses-name/order-summary-lenses-name.component.jsx",[],"/imooptik-frontend/src/components/order-summary-product-name/order-summary-product-name.component.jsx",[],"/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx",[],"/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.styles.jsx",[],"/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.styles.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/components/booking-appoinments/booking-appoinment.styles.jsx",[],"/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx",[],"/imooptik-frontend/src/components/booking-appoinment/booking-appoinment.component.jsx",[],"/imooptik-frontend/src/components/modal-booking/modal-booking.component.jsx",["744"],"import React, { useState, useContext, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { BookingContext } from '../../context/booking/booking.context'\n\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\nimport { useFetchById } from '../../hooks/useFetch'\nimport {\n    formatBookingObj\n} from '../../utils/calendar.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SubmitButton,\n    InputContainer,\n    ModalHeader\n} from './modal-booking.styles'\n\nconst BookingModal = ({ close, calendarId, refetch, selectedBooking }) => {\n    const { createBooking, updateBooking } = useContext(BookingContext)\n    const { response, isLoading } = useFetchById(\"api/booking/bookings\", selectedBooking, !selectedBooking)\n\n    const [booking, setBooking] = useState({})\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleBookingChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete booking[name]\n            setBooking({\n                ...booking\n            })\n            return\n        }\n\n        setBooking(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const handleSubmit = () => {\n        if (!booking?.name) return\n\n        if (isUpdating) {\n            let bookingToUpdate = formatBookingObj(booking)\n\n            console.log(\"BOOKING BEFORE UPDATE\")\n            console.log(bookingToUpdate)\n\n            updateBooking(bookingToUpdate, booking._id)\n        } else {\n            let bookingToAdd = {\n                ...booking,\n                calendar: calendarId\n            }\n\n            console.log(\"BOOKING BEFORE CREATE\")\n            console.log(bookingToAdd)\n            createBooking(bookingToAdd)\n        }\n\n        refetch()\n        close()\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n        if (response?.booking) {\n            setIsUpdating(true)\n            setBooking(response?.booking)\n        }\n    }, [selectedBooking, isLoading])\n\n    useEffect(() => {\n        return () => {\n            setIsUpdating(false)\n            setBooking({})\n        }\n    }, [])\n\n    console.log(booking)\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <ModalHeader>\n                    {!isUpdating && <h2>Nové vyšetrenie</h2>}\n                    {isUpdating && <h2>Upraviť vyšetrenie</h2>}\n                    <div>\n                        <CustomCheckbox\n                            label=\"Aktivné\"\n                            isActive={booking?.active || false}\n                            name='active'\n                            handleClick={() => handleBookingChange({\n                                target: {\n                                    name: 'active',\n                                    value: booking?.active ? !booking?.active : true\n                                }\n                            })}\n                        />\n                    </div>\n                </ModalHeader>\n                <InputContainer>\n                    <CustomInput\n                        label=\"Názov vyšetrenia*\"\n                        name=\"name\"\n                        value={booking?.name || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                <InputContainer>\n                    <CustomInput\n                        label=\"Cena\"\n                        name=\"price\"\n                        value={booking?.price || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                <InputContainer>\n                    <CustomInput\n                        label=\"Čas\"\n                        name=\"time\"\n                        value={booking?.time || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                <InputContainer>\n                    <CustomTextarea\n                        label=\"Popis\"\n                        rows='5'\n                        name=\"description\"\n                        value={booking?.description || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                {!isUpdating && <SubmitButton onClick={handleSubmit}>Pridať</SubmitButton>}\n                {isUpdating && <SubmitButton onClick={handleSubmit}>Uložiť</SubmitButton>}\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById(\"portal\"))\n}\n\nexport default BookingModal\n","/imooptik-frontend/src/utils/parameters.utils.jsx",[],"/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx",[],"/imooptik-frontend/src/components/examinations-overview/examinations-overview.styles.jsx",[],"/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx",[],"/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx",[],"/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx",[],"/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.component.jsx",["745"],"import React, { useState, useContext, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { ExaminationContext } from '../../context/examination/examination.context'\nimport { useFetchById } from '../../hooks/useFetch'\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    checkParameter,\n    formatParameter,\n} from '../../utils/parameters.utils'\n\nimport {\n    CloseButton,\n    Modal,\n    ModalContainer,\n    TableContainer,\n    HeadTableCol,\n    TableCol,\n    TableBlock,\n    TwoCols,\n    SubmitButton\n} from './modal-optometrist-examination.styles'\n\nconst OptometristExaminationModal = ({ close, refetch, userId, examinationToUpdate }) => {\n    const examinationData = useFetchById('api/admin/exams', examinationToUpdate, !examinationToUpdate)\n\n    const { createExamination, updateExamination } = useContext(ExaminationContext)\n    const [examinationObj, setExaminationObj] = useState({})\n    const [parameters, setParameters] = useState({})\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = parameters[name] || [1001, 1001, 1001, 1001]\n        arr[idx] = value === '' ? 1001 : value\n\n        setParameters({\n            ...parameters,\n            [name]: arr\n        })\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete examinationObj[name]\n            setExaminationObj({\n                ...examinationObj,\n            })\n            return\n        }\n\n        setExaminationObj({\n            ...examinationObj,\n            [name]: value\n        })\n    }\n\n    const formatParameters = (e, newParameters) => {\n        if (newParameters) {\n            const { name } = e.target\n            setParameters({\n                ...parameters,\n                [name]: newParameters.map(value => formatParameter(value))\n            })\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        let examObj = {\n            ...examinationObj,\n            doneTo: userId,\n            parameters: {\n                ...parameters\n            }\n        }\n\n        console.log(\"EXAMINATION OBJECT BEFORE SEND\")\n        console.log(examObj)\n\n        if (examinationToUpdate) {\n            console.log(\"UPDATE EXAMINATION\")\n            delete examObj[\"doneTo\"]\n            delete examObj[\"doneBy\"]\n            delete examObj[\"date\"]\n            delete examObj[\"_id\"]\n            delete examObj[\"__v\"]\n\n            console.log(examObj)\n            updateExamination(examObj, examinationToUpdate)\n\n        } else {\n            console.log(\"CREATE EXAMINATION\")\n\n            createExamination(examObj)\n        }\n        refetch()\n        close()\n    }\n\n    console.log(examinationData)\n\n    useEffect(() => {\n        if (!examinationData.isLoading) {\n            if (examinationData.response) {\n                setParameters(examinationData.response?.exam?.parameters)\n                setExaminationObj(examinationData.response?.exam)\n            }\n        }\n    }, [examinationToUpdate, examinationData.isLoading])\n\n    useEffect(() => {\n        return () => {\n            setExaminationObj({})\n            setParameters({})\n        }\n    }, [])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Nová prehliadka</h3>\n\n                <TableContainer>\n                    <HeadTableCol>\n                        <TableBlock>\n                            <p>-</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>PO</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>ĽO</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>PO</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>ĽO</p>\n                        </TableBlock>\n                    </HeadTableCol>\n                    {/* sph */}\n                    <TableCol>\n                        <TableBlock>\n                            sph\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='sph'\n                                    type='text'\n                                    value={checkParameter(parameters?.sph, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.sph)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* cyl */}\n                    <TableCol>\n                        <TableBlock>\n                            cyl\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='cyl'\n                                    type='text'\n                                    value={checkParameter(parameters?.cyl, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.cyl)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* ax */}\n                    <TableCol>\n                        <TableBlock>\n                            ax\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='ax'\n                                    type='text'\n                                    value={checkParameter(parameters?.ax, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.ax)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* vizus D */}\n                    <TableCol>\n                        <TableBlock>\n                            vizus D\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='vizusD'\n                                    type='text'\n                                    value={checkParameter(parameters?.vizusD, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.vizusD)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* vizus Bino */}\n                    <TableCol>\n                        <TableBlock>\n                            vizus Bino\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='vizusBino'\n                                    type='text'\n                                    value={checkParameter(parameters?.vizusBino, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.vizusBino)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* vizus B */}\n                    <TableCol>\n                        <TableBlock>\n                            vizus B\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='vizusB'\n                                    type='text'\n                                    value={checkParameter(parameters?.vizusB, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.vizusB)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* prizma */}\n                    <TableCol>\n                        <TableBlock>\n                            prizma\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='prizma'\n                                    type='text'\n                                    value={checkParameter(parameters?.prizma, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.prizma)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* basis */}\n                    <TableCol>\n                        <TableBlock>\n                            basis\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='basis'\n                                    type='text'\n                                    value={checkParameter(parameters?.basis, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.basis)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* PD */}\n                    <TableCol>\n                        <TableBlock>\n                            PD\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='pd'\n                                    type='text'\n                                    value={checkParameter(parameters?.pd, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.pd)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* ADD */}\n                    <TableCol>\n                        <TableBlock>\n                            ADD\n                        </TableBlock>\n                        {[...Array(2)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='add'\n                                    type='text'\n                                    value={checkParameter(parameters?.add, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.add)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n                </TableContainer>\n\n\n                <TwoCols>\n                    <div>\n                        <CustomInput\n                            label=\"Typ\"\n                            name='type'\n                            value={examinationObj?.type || \"\"}\n                            handleChange={handleChange}\n                        />\n                        <CustomInput\n                            label=\"Bc\"\n                            name='bc'\n                            value={examinationObj?.bc || \"\"}\n                            handleChange={handleChange}\n                        />\n                    </div>\n                    <div>\n                        <CustomInput\n                            label=\"dptr PO\"\n                            name='dptrPO'\n                            value={examinationObj?.dptrPO || \"\"}\n                            handleChange={handleChange}\n                        />\n                        <CustomInput\n                            label=\"dptr ĽO\"\n                            name='dptrLO'\n                            value={examinationObj?.dptrLO || \"\"}\n                            handleChange={handleChange}\n                        />\n                    </div>\n                </TwoCols>\n                <div>\n                    <CustomTextarea\n                        label='Poznámka'\n                        name='note'\n                        value={examinationObj?.note || \"\"}\n                        handleChange={handleChange}\n                        rows='5'\n                    />\n                    <CustomInput\n                        label=\"Doporučenie\"\n                        name='recommendation'\n                        value={examinationObj?.recommendation || \"\"}\n                        handleChange={handleChange}\n                    />\n                </div>\n\n\n                <SubmitButton onClick={handleSubmit}>{examinationToUpdate ? \"Uložiť\" : \"Odoslať prehliadku\"}</SubmitButton>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default OptometristExaminationModal\n","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.styles.jsx",[],"/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx",[],"/imooptik-frontend/src/components/examination-user/examination-user.component.jsx",[],"/imooptik-frontend/src/components/modal-booking/modal-booking.styles.jsx",[],"/imooptik-frontend/src/components/examination-user/examination-user.styles.jsx",[],"/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx",[],"/imooptik-frontend/src/sections/e-shop/e-shop.styles.jsx",[],"/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.component.jsx",[],"/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.styles.jsx",[],"/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.component.jsx",["746"],"/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.styles.jsx",[],"/imooptik-frontend/src/utils/user.utils.jsx",[],{"ruleId":"747","replacedBy":"748"},{"ruleId":"749","replacedBy":"750"},{"ruleId":"751","severity":1,"message":"752","line":237,"column":8,"nodeType":"753","endLine":237,"endColumn":15,"suggestions":"754"},{"ruleId":"755","severity":1,"message":"756","line":7,"column":5,"nodeType":"757","messageId":"758","endLine":7,"endColumn":15},{"ruleId":"755","severity":1,"message":"759","line":55,"column":24,"nodeType":"757","messageId":"758","endLine":55,"endColumn":37},{"ruleId":"751","severity":1,"message":"760","line":152,"column":8,"nodeType":"753","endLine":152,"endColumn":32,"suggestions":"761"},{"ruleId":"751","severity":1,"message":"762","line":788,"column":8,"nodeType":"753","endLine":788,"endColumn":31,"suggestions":"763"},{"ruleId":"751","severity":1,"message":"764","line":818,"column":8,"nodeType":"753","endLine":818,"endColumn":22,"suggestions":"765"},{"ruleId":"755","severity":1,"message":"766","line":1,"column":54,"nodeType":"757","messageId":"758","endLine":1,"endColumn":63},{"ruleId":"751","severity":1,"message":"767","line":88,"column":8,"nodeType":"753","endLine":88,"endColumn":18,"suggestions":"768"},{"ruleId":"751","severity":1,"message":"769","line":98,"column":8,"nodeType":"753","endLine":98,"endColumn":21,"suggestions":"770"},{"ruleId":"751","severity":1,"message":"771","line":96,"column":8,"nodeType":"753","endLine":96,"endColumn":19,"suggestions":"772"},{"ruleId":"751","severity":1,"message":"773","line":107,"column":8,"nodeType":"753","endLine":107,"endColumn":21,"suggestions":"774"},{"ruleId":"751","severity":1,"message":"775","line":127,"column":8,"nodeType":"753","endLine":127,"endColumn":43,"suggestions":"776"},{"ruleId":"755","severity":1,"message":"777","line":5,"column":21,"nodeType":"757","messageId":"758","endLine":5,"endColumn":27},{"ruleId":"755","severity":1,"message":"778","line":46,"column":12,"nodeType":"757","messageId":"758","endLine":46,"endColumn":22},{"ruleId":"751","severity":1,"message":"779","line":140,"column":8,"nodeType":"753","endLine":140,"endColumn":38,"suggestions":"780"},{"ruleId":"751","severity":1,"message":"781","line":146,"column":8,"nodeType":"753","endLine":146,"endColumn":12,"suggestions":"782"},{"ruleId":"751","severity":1,"message":"783","line":168,"column":8,"nodeType":"753","endLine":168,"endColumn":10,"suggestions":"784"},{"ruleId":"751","severity":1,"message":"785","line":398,"column":8,"nodeType":"753","endLine":398,"endColumn":72,"suggestions":"786"},{"ruleId":"751","severity":1,"message":"787","line":414,"column":8,"nodeType":"753","endLine":414,"endColumn":26,"suggestions":"788"},{"ruleId":"751","severity":1,"message":"789","line":423,"column":8,"nodeType":"753","endLine":423,"endColumn":37,"suggestions":"790"},{"ruleId":"751","severity":1,"message":"791","line":435,"column":8,"nodeType":"753","endLine":435,"endColumn":10,"suggestions":"792"},{"ruleId":"751","severity":1,"message":"793","line":36,"column":8,"nodeType":"753","endLine":36,"endColumn":21,"suggestions":"794"},{"ruleId":"751","severity":1,"message":"795","line":129,"column":8,"nodeType":"753","endLine":129,"endColumn":19,"suggestions":"796"},{"ruleId":"751","severity":1,"message":"797","line":71,"column":8,"nodeType":"753","endLine":71,"endColumn":12,"suggestions":"798"},{"ruleId":"751","severity":1,"message":"799","line":88,"column":8,"nodeType":"753","endLine":88,"endColumn":14,"suggestions":"800"},{"ruleId":"751","severity":1,"message":"801","line":101,"column":8,"nodeType":"753","endLine":101,"endColumn":10,"suggestions":"802"},{"ruleId":"751","severity":1,"message":"803","line":88,"column":8,"nodeType":"753","endLine":88,"endColumn":21,"suggestions":"804"},{"ruleId":"751","severity":1,"message":"803","line":110,"column":8,"nodeType":"753","endLine":110,"endColumn":21,"suggestions":"805"},{"ruleId":"751","severity":1,"message":"806","line":116,"column":8,"nodeType":"753","endLine":116,"endColumn":29,"suggestions":"807"},{"ruleId":"751","severity":1,"message":"808","line":100,"column":8,"nodeType":"753","endLine":100,"endColumn":64,"suggestions":"809"},{"ruleId":"755","severity":1,"message":"810","line":13,"column":5,"nodeType":"757","messageId":"758","endLine":13,"endColumn":28},{"ruleId":"755","severity":1,"message":"811","line":23,"column":12,"nodeType":"757","messageId":"758","endLine":23,"endColumn":23},{"ruleId":"755","severity":1,"message":"812","line":23,"column":25,"nodeType":"757","messageId":"758","endLine":23,"endColumn":39},{"ruleId":"751","severity":1,"message":"813","line":43,"column":8,"nodeType":"753","endLine":43,"endColumn":17,"suggestions":"814"},{"ruleId":"751","severity":1,"message":"815","line":160,"column":8,"nodeType":"753","endLine":160,"endColumn":20,"suggestions":"816"},{"ruleId":"751","severity":1,"message":"817","line":42,"column":8,"nodeType":"753","endLine":42,"endColumn":18,"suggestions":"818"},{"ruleId":"751","severity":1,"message":"819","line":48,"column":8,"nodeType":"753","endLine":48,"endColumn":10,"suggestions":"820"},{"ruleId":"821","severity":1,"message":"822","line":261,"column":41,"nodeType":"823","messageId":"824","endLine":261,"endColumn":43},{"ruleId":"751","severity":1,"message":"825","line":29,"column":8,"nodeType":"753","endLine":29,"endColumn":19,"suggestions":"826"},{"ruleId":"751","severity":1,"message":"825","line":42,"column":8,"nodeType":"753","endLine":42,"endColumn":25,"suggestions":"827"},{"ruleId":"751","severity":1,"message":"828","line":29,"column":8,"nodeType":"753","endLine":29,"endColumn":22,"suggestions":"829"},{"ruleId":"751","severity":1,"message":"830","line":71,"column":8,"nodeType":"753","endLine":71,"endColumn":28,"suggestions":"831"},{"ruleId":"751","severity":1,"message":"830","line":110,"column":8,"nodeType":"753","endLine":110,"endColumn":32,"suggestions":"832"},{"ruleId":"755","severity":1,"message":"833","line":20,"column":5,"nodeType":"757","messageId":"758","endLine":20,"endColumn":16},{"ruleId":"834","severity":1,"message":"835","line":62,"column":52,"nodeType":"836","messageId":"837","endLine":62,"endColumn":58},{"ruleId":"834","severity":1,"message":"835","line":312,"column":64,"nodeType":"836","messageId":"837","endLine":312,"endColumn":70},{"ruleId":"834","severity":1,"message":"835","line":178,"column":44,"nodeType":"836","messageId":"837","endLine":178,"endColumn":50},{"ruleId":"838","severity":1,"message":"839","line":148,"column":41,"nodeType":"840","endLine":148,"endColumn":61},{"ruleId":"838","severity":1,"message":"839","line":189,"column":45,"nodeType":"840","endLine":189,"endColumn":160},{"ruleId":"834","severity":1,"message":"835","line":97,"column":40,"nodeType":"836","messageId":"837","endLine":97,"endColumn":46},{"ruleId":"834","severity":1,"message":"835","line":173,"column":44,"nodeType":"836","messageId":"837","endLine":173,"endColumn":50},{"ruleId":"821","severity":1,"message":"841","line":221,"column":41,"nodeType":"823","messageId":"824","endLine":221,"endColumn":43},{"ruleId":"834","severity":1,"message":"842","line":263,"column":55,"nodeType":"843","messageId":"844","endLine":263,"endColumn":57},{"ruleId":"834","severity":1,"message":"835","line":10,"column":32,"nodeType":"836","messageId":"837","endLine":10,"endColumn":38},{"ruleId":"751","severity":1,"message":"845","line":68,"column":8,"nodeType":"753","endLine":68,"endColumn":18,"suggestions":"846"},{"ruleId":"751","severity":1,"message":"847","line":78,"column":8,"nodeType":"753","endLine":78,"endColumn":21,"suggestions":"848"},{"ruleId":"751","severity":1,"message":"849","line":38,"column":8,"nodeType":"753","endLine":38,"endColumn":24,"suggestions":"850"},{"ruleId":"751","severity":1,"message":"851","line":58,"column":8,"nodeType":"753","endLine":58,"endColumn":15,"suggestions":"852"},{"ruleId":"751","severity":1,"message":"853","line":69,"column":8,"nodeType":"753","endLine":69,"endColumn":21,"suggestions":"854"},{"ruleId":"751","severity":1,"message":"855","line":70,"column":8,"nodeType":"753","endLine":70,"endColumn":19,"suggestions":"856"},{"ruleId":"834","severity":1,"message":"835","line":104,"column":108,"nodeType":"836","messageId":"837","endLine":104,"endColumn":114},{"ruleId":"834","severity":1,"message":"835","line":105,"column":106,"nodeType":"836","messageId":"837","endLine":105,"endColumn":112},{"ruleId":"834","severity":1,"message":"835","line":106,"column":80,"nodeType":"836","messageId":"837","endLine":106,"endColumn":86},{"ruleId":"751","severity":1,"message":"857","line":44,"column":8,"nodeType":"753","endLine":44,"endColumn":15,"suggestions":"858"},{"ruleId":"751","severity":1,"message":"857","line":50,"column":8,"nodeType":"753","endLine":50,"endColumn":18,"suggestions":"859"},{"ruleId":"751","severity":1,"message":"855","line":65,"column":8,"nodeType":"753","endLine":65,"endColumn":19,"suggestions":"860"},{"ruleId":"751","severity":1,"message":"857","line":24,"column":8,"nodeType":"753","endLine":24,"endColumn":13,"suggestions":"861"},{"ruleId":"751","severity":1,"message":"862","line":15,"column":8,"nodeType":"753","endLine":15,"endColumn":13,"suggestions":"863"},{"ruleId":"751","severity":1,"message":"864","line":58,"column":8,"nodeType":"753","endLine":58,"endColumn":35,"suggestions":"865"},{"ruleId":"834","severity":1,"message":"835","line":166,"column":50,"nodeType":"836","messageId":"837","endLine":166,"endColumn":56},{"ruleId":"751","severity":1,"message":"866","line":41,"column":8,"nodeType":"753","endLine":41,"endColumn":104,"suggestions":"867"},{"ruleId":"751","severity":1,"message":"868","line":41,"column":9,"nodeType":"869","endLine":41,"endColumn":31},{"ruleId":"751","severity":1,"message":"868","line":41,"column":33,"nodeType":"869","endLine":41,"endColumn":55},{"ruleId":"751","severity":1,"message":"868","line":41,"column":57,"nodeType":"869","endLine":41,"endColumn":79},{"ruleId":"751","severity":1,"message":"868","line":41,"column":81,"nodeType":"869","endLine":41,"endColumn":103},{"ruleId":"755","severity":1,"message":"870","line":23,"column":13,"nodeType":"757","messageId":"758","endLine":23,"endColumn":22},{"ruleId":"834","severity":1,"message":"835","line":85,"column":40,"nodeType":"836","messageId":"837","endLine":85,"endColumn":46},{"ruleId":"751","severity":1,"message":"871","line":151,"column":8,"nodeType":"753","endLine":151,"endColumn":27,"suggestions":"872"},{"ruleId":"751","severity":1,"message":"873","line":79,"column":8,"nodeType":"753","endLine":79,"endColumn":36,"suggestions":"874"},{"ruleId":"751","severity":1,"message":"864","line":114,"column":8,"nodeType":"753","endLine":114,"endColumn":56,"suggestions":"875"},{"ruleId":"834","severity":1,"message":"835","line":265,"column":71,"nodeType":"836","messageId":"837","endLine":265,"endColumn":77},"no-native-reassign",["876"],"no-negated-in-lhs",["877"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStats'. Either include it or remove the dependency array.","ArrayExpression",["878"],"no-unused-vars","'fetchUsers' is defined but never used.","Identifier","unusedVar","'setTotalCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["879"],"React Hook useEffect has missing dependencies: 'getLenses', 'getProductsByQuery', 'productCategoryTypeTabs', and 'products'. Either include them or remove the dependency array.",["880"],"React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array. You can also do a functional update 'setProduct(p => ...)' if you only need 'product' in the 'setProduct' call.",["881"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'getProductsByQuery'. Either include it or remove the dependency array.",["882"],"React Hook useEffect has missing dependencies: 'activeCategoryTypeTab', 'getProductsByQuery', and 'products'. Either include them or remove the dependency array.",["883"],"React Hook useEffect has missing dependencies: 'closeModal' and 'response'. Either include them or remove the dependency array.",["884"],"React Hook useEffect has missing dependencies: 'activeIndex' and 'refetch'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilterQuery' needs the current value of 'activeIndex'.",["885"],"React Hook useEffect has a missing dependency: 'closeModal'. Either include it or remove the dependency array.",["886"],"'Prompt' is defined but never used.","'hasChanges' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'user.fName', 'user.lName', and 'userObj'. Either include them or remove the dependency array. You can also do a functional update 'setUserObj(u => ...)' if you only need 'userObj' in the 'setUserObj' call.",["887"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["888"],"React Hook useEffect has missing dependencies: 'handleChange' and 'resetUser'. Either include them or remove the dependency array.",["889"],"React Hook useEffect has missing dependencies: 'getEanCode' and 'handleChange'. Either include them or remove the dependency array.",["890"],"React Hook useEffect has missing dependencies: 'getSingleProduct', 'handleChangeType', and 'productObj.type'. Either include them or remove the dependency array.",["891"],"React Hook useEffect has a missing dependency: 'setSelectedImage'. Either include it or remove the dependency array.",["892"],"React Hook useEffect has missing dependencies: 'resetContactLenses', 'resetGlassesParameters', 'resetLenses', 'resetProduct', and 'setSelectedImage'. Either include them or remove the dependency array.",["893"],"React Hook useEffect has a missing dependency: 'getAnalytics'. Either include it or remove the dependency array.",["894"],"React Hook useEffect has missing dependencies: 'currentUser.premises', 'handleShowCalendarClick', 'isAdmin', and 'response'. Either include them or remove the dependency array.",["895"],"React Hook useEffect has missing dependencies: 'getPost' and 'setSelectedImage'. Either include them or remove the dependency array.",["896"],"React Hook useEffect has missing dependencies: 'id' and 'setSelectedImage'. Either include them or remove the dependency array.",["897"],"React Hook useEffect has a missing dependency: 'resetBlog'. Either include it or remove the dependency array.",["898"],"React Hook useEffect has a missing dependency: 'blogsData'. Either include it or remove the dependency array.",["899"],["900"],"React Hook useEffect has a missing dependency: 'blogsData.response?.blogs'. Either include it or remove the dependency array.",["901"],"React Hook useEffect has a missing dependency: 'order'. Either include it or remove the dependency array. You can also do a functional update 'setOrder(o => ...)' if you only need 'order' in the 'setOrder' call.",["902"],"'CouponOverviewContainer' is defined but never used.","'searchQuery' is assigned a value but never used.","'setSearchQuery' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCoupons'. Either include it or remove the dependency array.",["903"],"React Hook useEffect has a missing dependency: 'response.calendar'. Either include it or remove the dependency array.",["904"],"React Hook useEffect has a missing dependency: 'getCoupon'. Either include it or remove the dependency array.",["905"],"React Hook useEffect has a missing dependency: 'resetCoupons'. Either include it or remove the dependency array.",["906"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'currentPage'. Either include it or remove the dependency array.",["907"],["908"],"React Hook useEffect has missing dependencies: 'path' and 'skip'. Either include them or remove the dependency array.",["909"],"React Hook useEffect has missing dependencies: 'requestOptions' and 'skip'. Either include them or remove the dependency array.",["910"],["911"],"'ThreeColRow' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '===' and instead saw '=='.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'getProductsByQuery' and 'productItems.length'. Either include them or remove the dependency array.",["912"],"React Hook useEffect has missing dependencies: 'getProductsByQuery' and 'products'. Either include them or remove the dependency array.",["913"],"React Hook useEffect has a missing dependency: 'getLenses'. Either include it or remove the dependency array.",["914"],"React Hook useEffect has a missing dependency: 'getFilteredUsers'. Either include it or remove the dependency array.",["915"],"React Hook useEffect has missing dependencies: 'getFilteredUsers' and 'users'. Either include them or remove the dependency array.",["916"],"React Hook useEffect has missing dependencies: 'firstDayIndex', 'lastDay', 'month', 'nextDays', 'response.calendar', and 'year'. Either include them or remove the dependency array.",["917"],"React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["918"],["919"],["920"],["921"],"React Hook useEffect has a missing dependency: 'action'. Either include it or remove the dependency array. If 'action' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["922"],"React Hook useEffect has a missing dependency: 'examinationData.response'. Either include it or remove the dependency array.",["923"],"React Hook useEffect has missing dependencies: 'handleChange', 'parameters.addition', and 'parameters.diopters'. Either include them or remove the dependency array. If 'handleChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["924"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'getOrders' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleOrderDetailChange'. Either include it or remove the dependency array.",["925"],"React Hook useEffect has a missing dependency: 'response?.booking'. Either include it or remove the dependency array.",["926"],["927"],"no-global-assign","no-unsafe-negation",{"desc":"928","fix":"929"},{"desc":"930","fix":"931"},{"desc":"932","fix":"933"},{"desc":"934","fix":"935"},{"desc":"936","fix":"937"},{"desc":"938","fix":"939"},{"desc":"940","fix":"941"},{"desc":"942","fix":"943"},{"desc":"944","fix":"945"},{"desc":"946","fix":"947"},{"desc":"948","fix":"949"},{"desc":"950","fix":"951"},{"desc":"952","fix":"953"},{"desc":"954","fix":"955"},{"desc":"956","fix":"957"},{"desc":"958","fix":"959"},{"desc":"960","fix":"961"},{"desc":"962","fix":"963"},{"desc":"964","fix":"965"},{"desc":"966","fix":"967"},{"desc":"968","fix":"969"},{"desc":"970","fix":"971"},{"desc":"972","fix":"973"},{"desc":"974","fix":"975"},{"desc":"976","fix":"977"},{"desc":"978","fix":"979"},{"desc":"980","fix":"981"},{"desc":"982","fix":"983"},{"desc":"984","fix":"985"},{"desc":"986","fix":"987"},{"desc":"988","fix":"989"},{"desc":"990","fix":"991"},{"desc":"992","fix":"993"},{"desc":"994","fix":"995"},{"desc":"996","fix":"997"},{"desc":"998","fix":"999"},{"desc":"1000","fix":"1001"},{"desc":"1002","fix":"1003"},{"desc":"1004","fix":"1005"},{"desc":"1006","fix":"1007"},{"desc":"1008","fix":"1009"},{"desc":"1010","fix":"1011"},{"desc":"1006","fix":"1012"},{"desc":"1013","fix":"1014"},{"desc":"1015","fix":"1016"},{"desc":"1017","fix":"1018"},{"desc":"1019","fix":"1020"},{"desc":"1021","fix":"1022"},{"desc":"1023","fix":"1024"},{"desc":"1025","fix":"1026"},"Update the dependencies array to be: [getStats, token]",{"range":"1027","text":"1028"},"Update the dependencies array to be: [user, user.fName, user.lName]",{"range":"1029","text":"1030"},"Update the dependencies array to be: [activeCategoryTypeTab, getLenses, getProductsByQuery, productCategoryTypeTabs, products]",{"range":"1031","text":"1032"},"Update the dependencies array to be: [product, product.name]",{"range":"1033","text":"1034"},"Update the dependencies array to be: [getProductsByQuery, products]",{"range":"1035","text":"1036"},"Update the dependencies array to be: [activeCategoryTypeTab, getProductsByQuery, products, searchQuery]",{"range":"1037","text":"1038"},"Update the dependencies array to be: [closeModal, isLoading, response]",{"range":"1039","text":"1040"},"Update the dependencies array to be: [activeIndex, refetch, searchQuery]",{"range":"1041","text":"1042"},"Update the dependencies array to be: [isFetching, response, activeIndex, closeModal]",{"range":"1043","text":"1044"},"Update the dependencies array to be: [user.fName, user.lName, userObj, userObj.fName, userObj.lName]",{"range":"1045","text":"1046"},"Update the dependencies array to be: [getUser, id]",{"range":"1047","text":"1048"},"Update the dependencies array to be: [handleChange, resetUser]",{"range":"1049","text":"1050"},"Update the dependencies array to be: [id, eanCode, productObj.type, productObj.eanCode, product.type, getEanCode, handleChange]",{"range":"1051","text":"1052"},"Update the dependencies array to be: [getSingleProduct, handleChangeType, id, product.type, productObj.type]",{"range":"1053","text":"1054"},"Update the dependencies array to be: [product.image, lenses.image, setSelectedImage]",{"range":"1055","text":"1056"},"Update the dependencies array to be: [resetContactLenses, resetGlassesParameters, resetLenses, resetProduct, setSelectedImage]",{"range":"1057","text":"1058"},"Update the dependencies array to be: [activeIndex, getAnalytics]",{"range":"1059","text":"1060"},"Update the dependencies array to be: [currentUser.premises, handleShowCalendarClick, isAdmin, isLoading, response]",{"range":"1061","text":"1062"},"Update the dependencies array to be: [getPost, id, setSelectedImage]",{"range":"1063","text":"1064"},"Update the dependencies array to be: [id, post, setSelectedImage]",{"range":"1065","text":"1066"},"Update the dependencies array to be: [resetBlog]",{"range":"1067","text":"1068"},"Update the dependencies array to be: [blogsData, searchQuery]",{"range":"1069","text":"1070"},"Update the dependencies array to be: [activeIndex, blogsData]",{"range":"1071","text":"1072"},"Update the dependencies array to be: [blogsData.isLoading, blogsData.response?.blogs]",{"range":"1073","text":"1074"},"Update the dependencies array to be: [userId, orderId, userData.response, orderData.response, order]",{"range":"1075","text":"1076"},"Update the dependencies array to be: [coupons, getCoupons]",{"range":"1077","text":"1078"},"Update the dependencies array to be: [isFetching, response.calendar]",{"range":"1079","text":"1080"},"Update the dependencies array to be: [couponId, getCoupon]",{"range":"1081","text":"1082"},"Update the dependencies array to be: [resetCoupons]",{"range":"1083","text":"1084"},"Update the dependencies array to be: [currentPage, listItems]",{"range":"1085","text":"1086"},"Update the dependencies array to be: [currentPage, handleClickPrev]",{"range":"1087","text":"1088"},"Update the dependencies array to be: [path, refetchIndex, skip]",{"range":"1089","text":"1090"},"Update the dependencies array to be: [refetchIndex, path, skip, requestOptions]",{"range":"1091","text":"1092"},"Update the dependencies array to be: [refetchIndex, path, id, skip, requestOptions]",{"range":"1093","text":"1094"},"Update the dependencies array to be: [getProductsByQuery, productItems.length, products]",{"range":"1095","text":"1096"},"Update the dependencies array to be: [getProductsByQuery, products, searchQuery]",{"range":"1097","text":"1098"},"Update the dependencies array to be: [getLenses, lensesProducts]",{"range":"1099","text":"1100"},"Update the dependencies array to be: [getFilteredUsers, users]",{"range":"1101","text":"1102"},"Update the dependencies array to be: [getFilteredUsers, searchQuery, users]",{"range":"1103","text":"1104"},"Update the dependencies array to be: [firstDayIndex, isLoading, lastDay, month, nextDays, response.calendar, year]",{"range":"1105","text":"1106"},"Update the dependencies array to be: [month, refetch]",{"range":"1107","text":"1108"},"Update the dependencies array to be: [calendar, refetch]",{"range":"1109","text":"1110"},{"range":"1111","text":"1106"},"Update the dependencies array to be: [day, refetch]",{"range":"1112","text":"1113"},"Update the dependencies array to be: [action, ref]",{"range":"1114","text":"1115"},"Update the dependencies array to be: [examinationData.isLoading, examinationData.response]",{"range":"1116","text":"1117"},"Update the dependencies array to be: [handleChange, parameters.addition, parameters.diopters]",{"range":"1118","text":"1119"},"Update the dependencies array to be: [handleOrderDetailChange, isUpdating, order]",{"range":"1120","text":"1121"},"Update the dependencies array to be: [selectedBooking, isLoading, response?.booking]",{"range":"1122","text":"1123"},"Update the dependencies array to be: [examinationToUpdate, examinationData.isLoading, examinationData.response]",{"range":"1124","text":"1125"},[6458,6465],"[getStats, token]",[3440,3464],"[user, user.fName, user.lName]",[23011,23034],"[activeCategoryTypeTab, getLenses, getProductsByQuery, productCategoryTypeTabs, products]",[23845,23859],"[product, product.name]",[2680,2690],"[getProductsByQuery, products]",[2919,2932],"[activeCategoryTypeTab, getProductsByQuery, products, searchQuery]",[2619,2630],"[closeModal, isLoading, response]",[2856,2869],"[activeIndex, refetch, searchQuery]",[3441,3476],"[isFetching, response, activeIndex, closeModal]",[3597,3627],"[user.fName, user.lName, userObj, userObj.fName, userObj.lName]",[3731,3735],"[getUser, id]",[4465,4467],"[handleChange, resetUser]",[12112,12176],"[id, eanCode, productObj.type, productObj.eanCode, product.type, getEanCode, handleChange]",[12559,12577],"[getSingleProduct, handleChangeType, id, product.type, productObj.type]",[12773,12802],"[product.image, lenses.image, setSelectedImage]",[13088,13090],"[resetContactLenses, resetGlassesParameters, resetLenses, resetProduct, setSelectedImage]",[1410,1423],"[activeIndex, getAnalytics]",[4649,4660],"[currentUser.premises, handleShowCalendarClick, isAdmin, isLoading, response]",[2219,2223],"[getPost, id, setSelectedImage]",[2715,2721],"[id, post, setSelectedImage]",[3015,3017],"[resetBlog]",[2315,2328],"[blogsData, searchQuery]",[2831,2844],"[activeIndex, blogsData]",[2970,2991],"[blogsData.isLoading, blogsData.response?.blogs]",[3266,3322],"[userId, orderId, userData.response, orderData.response, order]",[1187,1196],"[coupons, getCoupons]",[4661,4673],"[isFetching, response.calendar]",[1197,1207],"[couponId, getCoupon]",[1299,1301],"[resetCoupons]",[691,702],"[currentPage, listItems]",[1000,1017],"[currentPage, handleClickPrev]",[988,1002],"[path, refetchIndex, skip]",[2303,2323],"[refetchIndex, path, skip, requestOptions]",[3550,3574],"[refetchIndex, path, id, skip, requestOptions]",[1783,1793],"[getProductsByQuery, productItems.length, products]",[1997,2010],"[getProductsByQuery, products, searchQuery]",[1095,1111],"[getLenses, lensesProducts]",[1353,1360],"[getFilteredUsers, users]",[1594,1607],"[getFilteredUsers, searchQuery, users]",[2086,2097],"[firstDayIndex, isLoading, lastDay, month, nextDays, response.calendar, year]",[1086,1093],"[month, refetch]",[1181,1191],"[calendar, refetch]",[1722,1733],[610,615],"[day, refetch]",[467,472],"[action, ref]",[1801,1828],"[examinationData.isLoading, examinationData.response]",[1541,1637],"[handleChange, parameters.addition, parameters.diopters]",[3752,3771],"[handleOrderDetailChange, isUpdating, order]",[2140,2168],"[selectedBooking, isLoading, response?.booking]",[3125,3173],"[examinationToUpdate, examinationData.isLoading, examinationData.response]"]
[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.jsx":"3","/app/src/context/loading-modal/loading-modal.contenxt.jsx":"4","/app/src/context/auth/auth.context.jsx":"5","/app/src/context/fetch-context/fetch.context.jsx":"6","/app/src/global.styles.jsx":"7","/app/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx":"8","/app/src/components/protected-route/protected-route.component.jsx":"9","/app/src/components/popup/pop-up.component.jsx":"10","/app/src/pages/dashboard/dashboard.jsx":"11","/app/src/context/auth/auth.queries.jsx":"12","/app/src/utils/errors.jsx":"13","/app/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx":"14","/app/src/components/popup/pop.up.styles.jsx":"15","/app/src/pages/dashboard/dashboard.styles.jsx":"16","/app/src/components/sign-in/sign-in.component.jsx":"17","/app/src/components/forgot-password/forgot-password.component.jsx":"18","/app/src/components/spinner/spinner.component.jsx":"19","/app/src/components/custom-button/custom-button.component.jsx":"20","/app/src/components/sidenav/sidenav.component.jsx":"21","/app/src/context/image/image.context.jsx":"22","/app/src/context/blog/blog.context.jsx":"23","/app/src/context/user/user.context.jsx":"24","/app/src/context/warehouse/warehouse.context.jsx":"25","/app/src/context/orders/orders.context.jsx":"26","/app/src/context/booking/booking.context.jsx":"27","/app/src/context/coupons/coupons.context.jsx":"28","/app/src/context/examination/examination.context.jsx":"29","/app/src/context/analytics/analytics.context.jsx":"30","/app/src/context/order/order.context.jsx":"31","/app/src/sections/orders/orders.section.jsx":"32","/app/src/sections/e-shop/e-shop.section.jsx":"33","/app/src/sections/customers/customers.section.jsx":"34","/app/src/sections/product/product.section.jsx":"35","/app/src/sections/customer-profile/customer-profile.section.jsx":"36","/app/src/sections/analytics/analytics.section.jsx":"37","/app/src/sections/blog-posts/blog-posts.section.jsx":"38","/app/src/sections/no-permission/no-permission.section.jsx":"39","/app/src/sections/post/post.section.jsx":"40","/app/src/sections/order/order.section.jsx":"41","/app/src/sections/booking/booking.section.jsx":"42","/app/src/sections/coupons/coupons.section.jsx":"43","/app/src/sections/calendar/calendar.section.jsx":"44","/app/src/sections/coupon/coupon.section.jsx":"45","/app/src/components/sign-in/sign-in.styles.jsx":"46","/app/src/components/forgot-password/forgot-password.styles.jsx":"47","/app/src/components/spinner/spinner.styles.jsx":"48","/app/src/components/custom-button/custom-button.styles.jsx":"49","/app/src/components/sidenav/sidenav.styles.jsx":"50","/app/src/context/blog/blog.queries.jsx":"51","/app/src/context/image/image.queries.jsx":"52","/app/src/context/user/user.queries.jsx":"53","/app/src/context/user/user.utils.jsx":"54","/app/src/utils/warehouse.utils.jsx":"55","/app/src/context/warehouse/warehouse.utils.jsx":"56","/app/src/components/custom-input/custom-input.component.jsx":"57","/app/src/hooks/slug.jsx":"58","/app/src/hooks/useFetch.jsx":"59","/app/src/context/orders/orders.utils.jsx":"60","/app/src/sections/orders/orders.styles.jsx":"61","/app/src/utils/user.utils.jsx":"62","/app/src/sections/e-shop/e-shop.styles.jsx":"63","/app/src/sections/customers/customers.styles.jsx":"64","/app/src/sections/product/product.styles.jsx":"65","/app/src/sections/customer-profile/customer-profile.styles.jsx":"66","/app/src/sections/coupon/coupon.styles.jsx":"67","/app/src/utils/calendar.utils.jsx":"68","/app/src/sections/calendar/calendar.styles.jsx":"69","/app/src/sections/coupons/coupons.styles.jsx":"70","/app/src/sections/order/order.styles.jsx":"71","/app/src/utils/orders.utils.jsx":"72","/app/src/sections/booking/booking.styles.jsx":"73","/app/src/components/section-navbar/section-navbar.component.jsx":"74","/app/src/components/section-header/section-header.component.jsx":"75","/app/src/components/scroll-container/scroll-container.component.jsx":"76","/app/src/components/list-arrows/list-arrows.component.jsx":"77","/app/src/components/modal-eshop-filter/modal-eshop-filter.component.jsx":"78","/app/src/components/product-overview/product-overview.component.jsx":"79","/app/src/components/modal-images/modal-images.component.jsx":"80","/app/src/components/modal-get-product-data/modal-get-product-data.component.jsx":"81","/app/src/components/modal-product-image-gallery/modal-product-image-gallery.component.jsx":"82","/app/src/components/modal-get-lenses-data/modal-get-lenses-data.component.jsx":"83","/app/src/components/product-accessories-form/product-accessories-form.component.jsx":"84","/app/src/components/product-glasses-form/product-glasses-form.component.jsx":"85","/app/src/components/product-contact-lenses-form/product-contact-lenses-form.component.jsx":"86","/app/src/components/product-lenses-form/product-lenses-form.component.jsx":"87","/app/src/components/product-service-form/product-service-form.component.jsx":"88","/app/src/components/new-user-form/new-user-form.component.jsx":"89","/app/src/components/product-input-row/product-input-row.component.jsx":"90","/app/src/components/custom-select/custom-select.component.jsx":"91","/app/src/components/calendar-weekdays/calendar-weekdays.component.jsx":"92","/app/src/components/booking-calendar-bookings/booking-calendar-bookings.component.jsx":"93","/app/src/context/week-calendar/week-calendar.context.jsx":"94","/app/src/components/calendar/calendar.component.jsx":"95","/app/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx":"96","/app/src/components/order-summary-lenses-name/order-summary-lenses-name.component.jsx":"97","/app/src/components/order-summary-product-name/order-summary-product-name.component.jsx":"98","/app/src/sections/order/steps/3-select-lenses/select-lenses.component.jsx":"99","/app/src/sections/order/steps/4-summary/summary.component.jsx":"100","/app/src/components/product-glasses-form/product-glasses-form.styles.jsx":"101","/app/src/sections/post/post.styles.jsx":"102","/app/src/sections/no-permission/no-permission.styles.jsx":"103","/app/src/sections/blog-posts/blog-posts.styles.jsx":"104","/app/src/utils/analytics.utils.jsx":"105","/app/src/sections/analytics/analytics.styles.jsx":"106","/app/src/sections/order/steps/2-select-product/select-product.component.jsx":"107","/app/src/sections/order/steps/1-select-user/select-user.component.jsx":"108","/app/src/components/custom-checkbox/custom-checkbox.component.jsx":"109","/app/src/components/custom-textarea/custom-textarea.component.jsx":"110","/app/src/components/modal-update-registry/modal-update-registry.component.jsx":"111","/app/src/components/user-form/user-form.component.jsx":"112","/app/src/components/custom-input/custom-input.styles.jsx":"113","/app/src/components/section-navbar/section-navbar.styles.jsx":"114","/app/src/components/section-header/section-header.styles.jsx":"115","/app/src/components/scroll-container/scroll-container.styles.jsx":"116","/app/src/components/order-overview/order-overview.component.jsx":"117","/app/src/components/order-overview/order-overview.styles.jsx":"118","/app/src/components/list-arrows/list-arrows.styles.jsx":"119","/app/src/hooks/useProduct.jsx":"120","/app/src/components/modal-eshop-filter/modal-eshop-filter.styles.jsx":"121","/app/src/components/product-overview/product-overview.styles.jsx":"122","/app/src/components/modal-get-product-data/modal-get-product-data.styles.jsx":"123","/app/src/components/modal-images/modal-images.styles.jsx":"124","/app/src/components/product-input-row/product-input-row.styles.jsx":"125","/app/src/components/new-user-form/new-user-form.styles.jsx":"126","/app/src/components/product-lenses-form/product-lenses-form.styles.jsx":"127","/app/src/components/product-service-form/product-service-form.styles.jsx":"128","/app/src/components/product-accessories-form/product-accessories-form.styles.jsx":"129","/app/src/components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx":"130","/app/src/components/modal-get-lenses-data/modal-get-lenses-data.styles.jsx":"131","/app/src/components/custom-select/custom-select.styles.jsx":"132","/app/src/utils/week-calendar.utils.jsx":"133","/app/src/components/modal-product-image-gallery/modal-product-image-gallery.styles.jsx":"134","/app/src/components/calendar-weekdays/calendar-weekdays.styles.jsx":"135","/app/src/components/booking-calendar-bookings/booking-calendar-bookings.styles.jsx":"136","/app/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx":"137","/app/src/components/calendar/calendar.styles.jsx":"138","/app/src/components/parameters-table/parameters-table.component.jsx":"139","/app/src/components/custom-form-switch/custom-form-switch.component.jsx":"140","/app/src/components/calendar-booked-day/calendar-booked-day.component.jsx":"141","/app/src/components/modal-userbookings-details/modal-userbookings-details.component.jsx":"142","/app/src/components/modal-user-bookings/modal-user-booking.component.jsx":"143","/app/src/components/modal-booking/modal-booking.component.jsx":"144","/app/src/sections/order/steps/3-select-lenses/select-lenses.styles.jsx":"145","/app/src/sections/order/steps/4-summary/summary.styles.jsx":"146","/app/src/components/custom-back-button/custom-back-button.component.jsx":"147","/app/src/components/order-cart-lenses-row/order-cart-lenses-row.component.jsx":"148","/app/src/components/modal-finish-order/modal-finish-order.component.jsx":"149","/app/src/components/modal-order-update-user/modal-order-update-user.component.jsx":"150","/app/src/sections/order/steps/2-select-product/select-product.styles.jsx":"151","/app/src/sections/order/steps/1-select-user/select-user.styles.jsx":"152","/app/src/components/custom-checkbox/custom-checkbox.styles.jsx":"153","/app/src/components/modal-update-registry/modal-update-registry.styles.jsx":"154","/app/src/components/custom-textarea/custom-textarea.styles.jsx":"155","/app/src/components/user-form/user.form-styles.jsx":"156","/app/src/components/order-cart-row/order-cart-row.component.jsx":"157","/app/src/components/profile-order-overview/profile-order-overview.component.jsx":"158","/app/src/components/examinations-overview/examinations-overview.component.jsx":"159","/app/src/hooks/useOutsideAlerter.jsx":"160","/app/src/components/order-deligate-modal/order-deligate-modal.component.jsx":"161","/app/src/components/modal-finish-deposited-order/modal-finish-deposited-order.component.jsx":"162","/app/src/components/parameters-table/parameters-table.styles.jsx":"163","/app/src/components/calendar-booked-day/calendar-booked-day.styles.jsx":"164","/app/src/components/modal-booking/modal-booking.styles.jsx":"165","/app/src/components/modal-userbookings-details/modal-userbookings-details.styles.jsx":"166","/app/src/components/modal-user-bookings/modal-user-booking.styles.jsx":"167","/app/src/components/custom-form-switch/custom-form-switch.styles.jsx":"168","/app/src/components/custom-back-button/custom-back-button.styles.jsx":"169","/app/src/components/modal-finish-order/modal-finish-order.styles.jsx":"170","/app/src/components/order-cart-lenses-row/order-cart-lenses-row.styles.jsx":"171","/app/src/components/modal-order-update-user/modal-order-update-user.styles.jsx":"172","/app/src/components/order-cart-row/order-cart-row.styles.jsx":"173","/app/src/components/profile-order-overview/profile-order-overview.styles.jsx":"174","/app/src/components/examinations-overview/examinations-overview.styles.jsx":"175","/app/src/components/examination-user/examination-user.component.jsx":"176","/app/src/components/modal-optometrist-examination/modal-optometrist-examination.component.jsx":"177","/app/src/components/modal-finish-deposited-order/modal-finish-deposited-order.styles.jsx":"178","/app/src/components/order-deligate-modal/order-deligate-modal.styles.jsx":"179","/app/src/components/examination-user/examination-user.styles.jsx":"180","/app/src/utils/object.utils.jsx":"181","/app/src/utils/parameters.utils.jsx":"182","/app/src/components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx":"183"},{"size":834,"mtime":1617873965462,"results":"184","hashOfConfig":"185"},{"size":362,"mtime":1617279821919,"results":"186","hashOfConfig":"185"},{"size":1660,"mtime":1624903245180,"results":"187","hashOfConfig":"185"},{"size":1076,"mtime":1617279821919,"results":"188","hashOfConfig":"185"},{"size":7152,"mtime":1624908407420,"results":"189","hashOfConfig":"185"},{"size":1952,"mtime":1619354187182,"results":"190","hashOfConfig":"185"},{"size":5422,"mtime":1622465277844,"results":"191","hashOfConfig":"185"},{"size":840,"mtime":1617279821919,"results":"192","hashOfConfig":"185"},{"size":608,"mtime":1622465277844,"results":"193","hashOfConfig":"185"},{"size":714,"mtime":1617279821919,"results":"194","hashOfConfig":"185"},{"size":9066,"mtime":1624903245190,"results":"195","hashOfConfig":"185"},{"size":2292,"mtime":1617279821919,"results":"196","hashOfConfig":"185"},{"size":156,"mtime":1619353855062,"results":"197","hashOfConfig":"185"},{"size":545,"mtime":1617279821919,"results":"198","hashOfConfig":"185"},{"size":721,"mtime":1617279821919,"results":"199","hashOfConfig":"185"},{"size":658,"mtime":1617279821919,"results":"200","hashOfConfig":"185"},{"size":1912,"mtime":1624903245180,"results":"201","hashOfConfig":"185"},{"size":1466,"mtime":1617279821909,"results":"202","hashOfConfig":"185"},{"size":178,"mtime":1617279821919,"results":"203","hashOfConfig":"185"},{"size":283,"mtime":1617279821909,"results":"204","hashOfConfig":"185"},{"size":2093,"mtime":1625650823444,"results":"205","hashOfConfig":"185"},{"size":4391,"mtime":1617279821919,"results":"206","hashOfConfig":"185"},{"size":4952,"mtime":1618253984620,"results":"207","hashOfConfig":"185"},{"size":10463,"mtime":1624908359230,"results":"208","hashOfConfig":"185"},{"size":30893,"mtime":1620044873860,"results":"209","hashOfConfig":"185"},{"size":7256,"mtime":1618440283310,"results":"210","hashOfConfig":"185"},{"size":9619,"mtime":1619474165780,"results":"211","hashOfConfig":"185"},{"size":6964,"mtime":1617279821919,"results":"212","hashOfConfig":"185"},{"size":3284,"mtime":1619351993102,"results":"213","hashOfConfig":"185"},{"size":3689,"mtime":1618248579140,"results":"214","hashOfConfig":"185"},{"size":8935,"mtime":1624911788050,"results":"215","hashOfConfig":"185"},{"size":5784,"mtime":1624977060070,"results":"216","hashOfConfig":"185"},{"size":6613,"mtime":1624903268960,"results":"217","hashOfConfig":"185"},{"size":5837,"mtime":1617708928929,"results":"218","hashOfConfig":"185"},{"size":24069,"mtime":1622458720624,"results":"219","hashOfConfig":"185"},{"size":5935,"mtime":1624905578900,"results":"220","hashOfConfig":"185"},{"size":16225,"mtime":1621332355560,"results":"221","hashOfConfig":"185"},{"size":5376,"mtime":1617279821919,"results":"222","hashOfConfig":"185"},{"size":810,"mtime":1617279821929,"results":"223","hashOfConfig":"185"},{"size":10483,"mtime":1619352094642,"results":"224","hashOfConfig":"185"},{"size":8973,"mtime":1624911875540,"results":"225","hashOfConfig":"185"},{"size":15468,"mtime":1621936709820,"results":"226","hashOfConfig":"185"},{"size":3073,"mtime":1617279821929,"results":"227","hashOfConfig":"185"},{"size":35363,"mtime":1620765447570,"results":"228","hashOfConfig":"185"},{"size":5610,"mtime":1617279821929,"results":"229","hashOfConfig":"185"},{"size":975,"mtime":1617279821919,"results":"230","hashOfConfig":"185"},{"size":898,"mtime":1617279821909,"results":"231","hashOfConfig":"185"},{"size":377,"mtime":1617279821919,"results":"232","hashOfConfig":"185"},{"size":440,"mtime":1617279821909,"results":"233","hashOfConfig":"185"},{"size":5222,"mtime":1617279821919,"results":"234","hashOfConfig":"185"},{"size":1793,"mtime":1617279821919,"results":"235","hashOfConfig":"185"},{"size":1560,"mtime":1617279821919,"results":"236","hashOfConfig":"185"},{"size":3508,"mtime":1617279821919,"results":"237","hashOfConfig":"185"},{"size":936,"mtime":1618487420915,"results":"238","hashOfConfig":"185"},{"size":3109,"mtime":1617279821929,"results":"239","hashOfConfig":"185"},{"size":6934,"mtime":1622458639324,"results":"240","hashOfConfig":"185"},{"size":639,"mtime":1617279821909,"results":"241","hashOfConfig":"185"},{"size":1132,"mtime":1617353319644,"results":"242","hashOfConfig":"185"},{"size":3835,"mtime":1617279821919,"results":"243","hashOfConfig":"185"},{"size":889,"mtime":1617279821919,"results":"244","hashOfConfig":"185"},{"size":2261,"mtime":1617279821929,"results":"245","hashOfConfig":"185"},{"size":431,"mtime":1617279821929,"results":"246","hashOfConfig":"185"},{"size":709,"mtime":1622494103074,"results":"247","hashOfConfig":"185"},{"size":1734,"mtime":1617279821929,"results":"248","hashOfConfig":"185"},{"size":952,"mtime":1617279821929,"results":"249","hashOfConfig":"185"},{"size":632,"mtime":1617279821929,"results":"250","hashOfConfig":"185"},{"size":1170,"mtime":1617279821929,"results":"251","hashOfConfig":"185"},{"size":19082,"mtime":1621937994920,"results":"252","hashOfConfig":"185"},{"size":4052,"mtime":1620137020270,"results":"253","hashOfConfig":"185"},{"size":1785,"mtime":1617279821929,"results":"254","hashOfConfig":"185"},{"size":2360,"mtime":1624903245200,"results":"255","hashOfConfig":"185"},{"size":2605,"mtime":1625647218774,"results":"256","hashOfConfig":"185"},{"size":2199,"mtime":1617279821919,"results":"257","hashOfConfig":"185"},{"size":655,"mtime":1617279821919,"results":"258","hashOfConfig":"185"},{"size":1521,"mtime":1617279821919,"results":"259","hashOfConfig":"185"},{"size":320,"mtime":1617279821919,"results":"260","hashOfConfig":"185"},{"size":1810,"mtime":1617279821909,"results":"261","hashOfConfig":"185"},{"size":8604,"mtime":1620939850600,"results":"262","hashOfConfig":"185"},{"size":2429,"mtime":1624903268960,"results":"263","hashOfConfig":"185"},{"size":8267,"mtime":1617279821909,"results":"264","hashOfConfig":"185"},{"size":5647,"mtime":1617279821909,"results":"265","hashOfConfig":"185"},{"size":5695,"mtime":1617279821909,"results":"266","hashOfConfig":"185"},{"size":4055,"mtime":1617279821909,"results":"267","hashOfConfig":"185"},{"size":5624,"mtime":1624903268960,"results":"268","hashOfConfig":"185"},{"size":10284,"mtime":1624903268960,"results":"269","hashOfConfig":"185"},{"size":8049,"mtime":1624903268960,"results":"270","hashOfConfig":"185"},{"size":9291,"mtime":1620828561560,"results":"271","hashOfConfig":"185"},{"size":2906,"mtime":1624903268960,"results":"272","hashOfConfig":"185"},{"size":14834,"mtime":1617688383059,"results":"273","hashOfConfig":"185"},{"size":425,"mtime":1617279821919,"results":"274","hashOfConfig":"185"},{"size":689,"mtime":1617279821909,"results":"275","hashOfConfig":"185"},{"size":8130,"mtime":1621938093890,"results":"276","hashOfConfig":"185"},{"size":3418,"mtime":1618413851546,"results":"277","hashOfConfig":"185"},{"size":18152,"mtime":1621937155700,"results":"278","hashOfConfig":"185"},{"size":3274,"mtime":1617279821909,"results":"279","hashOfConfig":"185"},{"size":999,"mtime":1617279821909,"results":"280","hashOfConfig":"185"},{"size":1305,"mtime":1619359111192,"results":"281","hashOfConfig":"185"},{"size":1859,"mtime":1619357726652,"results":"282","hashOfConfig":"185"},{"size":6808,"mtime":1617279821929,"results":"283","hashOfConfig":"185"},{"size":12385,"mtime":1619352084352,"results":"284","hashOfConfig":"185"},{"size":2969,"mtime":1617279821919,"results":"285","hashOfConfig":"185"},{"size":1888,"mtime":1617279821929,"results":"286","hashOfConfig":"185"},{"size":728,"mtime":1617279821929,"results":"287","hashOfConfig":"185"},{"size":1728,"mtime":1617279821919,"results":"288","hashOfConfig":"185"},{"size":404,"mtime":1617279821929,"results":"289","hashOfConfig":"185"},{"size":4165,"mtime":1621332424260,"results":"290","hashOfConfig":"185"},{"size":5754,"mtime":1620043658010,"results":"291","hashOfConfig":"185"},{"size":3313,"mtime":1617279821929,"results":"292","hashOfConfig":"185"},{"size":354,"mtime":1617279821909,"results":"293","hashOfConfig":"185"},{"size":651,"mtime":1617279821909,"results":"294","hashOfConfig":"185"},{"size":2803,"mtime":1619351976612,"results":"295","hashOfConfig":"185"},{"size":13007,"mtime":1618913037440,"results":"296","hashOfConfig":"185"},{"size":1331,"mtime":1617279821909,"results":"297","hashOfConfig":"185"},{"size":854,"mtime":1617279821919,"results":"298","hashOfConfig":"185"},{"size":1186,"mtime":1617279821919,"results":"299","hashOfConfig":"185"},{"size":1039,"mtime":1617279821919,"results":"300","hashOfConfig":"185"},{"size":4692,"mtime":1625647274764,"results":"301","hashOfConfig":"185"},{"size":2933,"mtime":1617279821919,"results":"302","hashOfConfig":"185"},{"size":624,"mtime":1617279821909,"results":"303","hashOfConfig":"185"},{"size":334,"mtime":1624903268960,"results":"304","hashOfConfig":"185"},{"size":1934,"mtime":1617279821909,"results":"305","hashOfConfig":"185"},{"size":2448,"mtime":1617279821919,"results":"306","hashOfConfig":"185"},{"size":3044,"mtime":1617279821909,"results":"307","hashOfConfig":"185"},{"size":4564,"mtime":1617279821909,"results":"308","hashOfConfig":"185"},{"size":447,"mtime":1617279821919,"results":"309","hashOfConfig":"185"},{"size":1096,"mtime":1617279821909,"results":"310","hashOfConfig":"185"},{"size":2186,"mtime":1617279821919,"results":"311","hashOfConfig":"185"},{"size":1100,"mtime":1620829023020,"results":"312","hashOfConfig":"185"},{"size":2211,"mtime":1620829104430,"results":"313","hashOfConfig":"185"},{"size":2838,"mtime":1620829343630,"results":"314","hashOfConfig":"185"},{"size":3044,"mtime":1617279821909,"results":"315","hashOfConfig":"185"},{"size":364,"mtime":1617279821909,"results":"316","hashOfConfig":"185"},{"size":3555,"mtime":1621937151450,"results":"317","hashOfConfig":"185"},{"size":3279,"mtime":1617279821909,"results":"318","hashOfConfig":"185"},{"size":2985,"mtime":1617279821909,"results":"319","hashOfConfig":"185"},{"size":1867,"mtime":1617279821899,"results":"320","hashOfConfig":"185"},{"size":1060,"mtime":1617279821909,"results":"321","hashOfConfig":"185"},{"size":1274,"mtime":1617279821909,"results":"322","hashOfConfig":"185"},{"size":9261,"mtime":1619351975982,"results":"323","hashOfConfig":"185"},{"size":681,"mtime":1617279821909,"results":"324","hashOfConfig":"185"},{"size":2827,"mtime":1617279821909,"results":"325","hashOfConfig":"185"},{"size":7552,"mtime":1619474182010,"results":"326","hashOfConfig":"185"},{"size":12247,"mtime":1621334193520,"results":"327","hashOfConfig":"185"},{"size":5335,"mtime":1618486832185,"results":"328","hashOfConfig":"185"},{"size":4952,"mtime":1618407997526,"results":"329","hashOfConfig":"185"},{"size":4284,"mtime":1618940925750,"results":"330","hashOfConfig":"185"},{"size":341,"mtime":1617279821909,"results":"331","hashOfConfig":"185"},{"size":5564,"mtime":1618482806805,"results":"332","hashOfConfig":"185"},{"size":11004,"mtime":1618941884970,"results":"333","hashOfConfig":"185"},{"size":3962,"mtime":1617701635859,"results":"334","hashOfConfig":"185"},{"size":3409,"mtime":1617279821929,"results":"335","hashOfConfig":"185"},{"size":1458,"mtime":1617279821929,"results":"336","hashOfConfig":"185"},{"size":698,"mtime":1617279821909,"results":"337","hashOfConfig":"185"},{"size":1874,"mtime":1618244198460,"results":"338","hashOfConfig":"185"},{"size":1124,"mtime":1617279821909,"results":"339","hashOfConfig":"185"},{"size":2294,"mtime":1617279821919,"results":"340","hashOfConfig":"185"},{"size":10716,"mtime":1618408462696,"results":"341","hashOfConfig":"185"},{"size":1533,"mtime":1617279821919,"results":"342","hashOfConfig":"185"},{"size":3818,"mtime":1624905627380,"results":"343","hashOfConfig":"185"},{"size":1400,"mtime":1617279821919,"results":"344","hashOfConfig":"185"},{"size":3006,"mtime":1617279821919,"results":"345","hashOfConfig":"185"},{"size":5540,"mtime":1620831647940,"results":"346","hashOfConfig":"185"},{"size":2163,"mtime":1618487458115,"results":"347","hashOfConfig":"185"},{"size":668,"mtime":1617279821909,"results":"348","hashOfConfig":"185"},{"size":2041,"mtime":1617279821909,"results":"349","hashOfConfig":"185"},{"size":2890,"mtime":1619353185902,"results":"350","hashOfConfig":"185"},{"size":3368,"mtime":1619431895960,"results":"351","hashOfConfig":"185"},{"size":486,"mtime":1617279821909,"results":"352","hashOfConfig":"185"},{"size":349,"mtime":1617279821909,"results":"353","hashOfConfig":"185"},{"size":1719,"mtime":1617279821909,"results":"354","hashOfConfig":"185"},{"size":3990,"mtime":1618407965336,"results":"355","hashOfConfig":"185"},{"size":1679,"mtime":1617279821909,"results":"356","hashOfConfig":"185"},{"size":3161,"mtime":1618257842970,"results":"357","hashOfConfig":"185"},{"size":1414,"mtime":1617279821919,"results":"358","hashOfConfig":"185"},{"size":2161,"mtime":1618858044322,"results":"359","hashOfConfig":"185"},{"size":492,"mtime":1617279821909,"results":"360","hashOfConfig":"185"},{"size":61727,"mtime":1624918150630,"results":"361","hashOfConfig":"185"},{"size":2826,"mtime":1617279821909,"results":"362","hashOfConfig":"185"},{"size":1432,"mtime":1617279821919,"results":"363","hashOfConfig":"185"},{"size":162,"mtime":1617279821909,"results":"364","hashOfConfig":"185"},{"size":125,"mtime":1617883588912,"results":"365","hashOfConfig":"185"},{"size":906,"mtime":1617885761652,"results":"366","hashOfConfig":"185"},{"size":4140,"mtime":1624903245180,"results":"367","hashOfConfig":"185"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},"iuro77",{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"370"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"370"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"370"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"370"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"370"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"370"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"370"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"370"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"370"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"370"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"370"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"370"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"370"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"370"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"370"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"370"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"370"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"370"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"370"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"370"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"370"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"370"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"370"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"370"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"370"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"370"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"370"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"370"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"370"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"370"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"370"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"370"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"370"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"370"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"370"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"370"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"370"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"370"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"370"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"370"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"370"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"370"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"370"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"370"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"370"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"370"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"370"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"370"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"370"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"370"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715","usedDeprecatedRules":"370"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"370"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"370"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"736","usedDeprecatedRules":"370"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"741","usedDeprecatedRules":"370"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744","usedDeprecatedRules":"370"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"370"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750","usedDeprecatedRules":"370"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781","usedDeprecatedRules":"370"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},"/app/src/index.js",[],["794","795"],"/app/src/reportWebVitals.js",[],"/app/src/App.jsx",[],"/app/src/context/loading-modal/loading-modal.contenxt.jsx",[],"/app/src/context/auth/auth.context.jsx",["796","797"],"import React, { createContext, useState, useContext, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { LoadingModalContext } from \"../loading-modal/loading-modal.contenxt\"\nimport {\n\tgetUser,\n\tcreateNewUser,\n\tresetPassword,\n\tsetNewPassword,\n\tfetchUser,\n} from \"./auth.queries\"\n\nexport const AuthContext = createContext({\n\tuserID: null,\n\ttoken: null,\n\tcurrentUser: null,\n\tisAuthenticated: false,\n\tisAuthorized: false,\n\tisAdmin: false,\n\tisEditor: false,\n\tisOptometrist: false,\n\tgetToken: () => {},\n\tlogout: () => {},\n\n\tstats: null,\n\tlogIn: () => {},\n\tlogOut: () => {},\n\tregister: () => {},\n\thandleResetPassword: () => {},\n\thandleCreatingNewPassword: () => {},\n})\n\nexport const useAuth = () => useContext(AuthContext)\n\nconst AuthProvider = ({ children }) => {\n\tconst [token, setToken] = useState(\n\t\tlocalStorage.getItem(\"accessToken\") || null\n\t)\n\tconst [currentUser, setCurrentUser] = useState(null)\n\tconst [userID, setUserID] = useState(localStorage.getItem(\"userId\") || null)\n\tconst [isAuthenticated, setIsAuthenticated] = useState(\n\t\tlocalStorage.getItem(\"accessToken\") ? true : false\n\t)\n\tconst [isAuthorized, setIsAuthorized] = useState(false)\n\n\tconst [isAdmin, setIsAdmin] = useState(\n\t\tlocalStorage.getItem(\"admin\") > 1 ? true : false\n\t)\n\tconst [isOptometrist, setIsOptometrist] = useState(false)\n\n\tconst getUserID = (id) => {\n\t\tsetUserID(id)\n\t\tlocalStorage.setItem(\"userId\", id)\n\t}\n\n\tconst getToken = (token) => {\n\t\tsetToken(token)\n\t\t// setUserID(user.sub)\n\t\t// localStorage.setItem(\"userId\", user.sub)\n\t\tlocalStorage.setItem(\"accessToken\", token)\n\t\tsetIsAuthenticated(true)\n\t\t// client.resetStore()\n\t}\n\n\tconst checkIfOptometrist = (user) => {\n\t\tif (user.optometrist) {\n\t\t\tlocalStorage.setItem(\"optimetrist\", user.optometrist)\n\t\t\tsetIsOptometrist(true)\n\t\t} else {\n\t\t\tsetIsOptometrist(false)\n\t\t}\n\t}\n\n\tconst checkIfAdmin = (user) => {\n\t\tif (user.admin === 0) return setIsAuthorized(false)\n\t\tif (user.admin > 1) {\n\t\t\tsetIsAdmin(true)\n\t\t\tlocalStorage.setItem(\"admin\", user.admin)\n\t\t} else {\n\t\t\tsetIsAdmin(false)\n\t\t}\n\t\tsetIsAuthorized(true)\n\t}\n\n\tconst logout = () => {\n\t\tlocalStorage.removeItem(\"accessToken\")\n\t\tlocalStorage.removeItem(\"userId\")\n\t\tsetCurrentUser(null)\n\t\tsetIsAuthenticated(false)\n\t\tsetUserID(null)\n\t\t// client.resetStore()\n\t}\n\n\tconst { setShowModal, setIsLoading, getMessage, closeModal } =\n\t\tuseContext(LoadingModalContext)\n\t// const [currentUser, setCurrentUser] = useState(null)\n\t// const [token, setToken] = useState(localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN) || null)\n\t// const [isAdmin, setIsAdmin] = useState(false)\n\t// const [isOptometrist, setIsOptometrist] = useState(false)\n\tconst [stats, setStats] = useState(null)\n\n\tconst logIn = async (email, password, callback = () => {}) => {\n\t\tsetShowModal(true)\n\t\tsetIsLoading(true)\n\n\t\tif (!email) {\n\t\t\tconsole.log(\"Ziadny e-mail\")\n\t\t\tsetShowModal(false)\n\t\t\tsetIsLoading(false)\n\t\t\treturn\n\t\t}\n\n\t\tif (!password) {\n\t\t\tconsole.log(\"Ziadne heslo\")\n\t\t\tsetShowModal(false)\n\t\t\tsetIsLoading(false)\n\t\t\treturn\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await getUser({ email, password })\n\t\t\tconst user = await response.json()\n\n\t\t\tgetMessage(user.message)\n\t\t\tsetIsLoading(false)\n\t\t\tif (user.user) {\n\t\t\t\tsetCurrentUser(user.user)\n\t\t\t\tsetToken(user.authToken)\n\t\t\t\tlocalStorage.setItem(process.env.REACT_APP_ADMIN_TOKEN, user.authToken)\n\t\t\t\tcheckIfAdmin(user.user)\n\t\t\t\tgetUserID(user.user._id)\n\t\t\t\tgetToken(user.authToken)\n\t\t\t\tcloseModal()\n\t\t\t\tcallback(user)\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err)\n\t\t\tgetMessage(\"Nieco sa pokazilo\")\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}\n\n\tconst logOut = () => {\n\t\tlocalStorage.removeItem(process.env.REACT_APP_ADMIN_TOKEN)\n\t\tsetCurrentUser(null)\n\t\tsetToken(null)\n\t}\n\n\tconst register = async (name, email, password, confirmPassword) => {\n\t\tsetShowModal(true)\n\t\tsetIsLoading(true)\n\n\t\tif (!name) {\n\t\t\tconsole.log(\"Ziadne meno\")\n\t\t\tsetShowModal(false)\n\t\t\tsetIsLoading(false)\n\t\t\treturn\n\t\t}\n\n\t\tif (!email) {\n\t\t\tconsole.log(\"Ziadny e-mail\")\n\t\t\tsetShowModal(false)\n\t\t\tsetIsLoading(false)\n\t\t\treturn\n\t\t}\n\n\t\tif (!password) {\n\t\t\tconsole.log(\"Ziadne heslo\")\n\t\t\tsetShowModal(false)\n\t\t\tsetIsLoading(false)\n\t\t\treturn\n\t\t}\n\n\t\tif (password !== confirmPassword) {\n\t\t\tconsole.log(\"hesla sa nezhoduju\")\n\t\t\tsetShowModal(false)\n\t\t\tsetIsLoading(false)\n\t\t\treturn\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await createNewUser({ name, email, password })\n\t\t\tconst data = await response.json()\n\n\t\t\tsetIsLoading(false)\n\t\t\tgetMessage(data.messageSK)\n\t\t} catch (err) {\n\t\t\tconsole.log(err)\n\t\t\tgetMessage(\"Nieco sa pokazilo\")\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}\n\n\tconst handleResetPassword = async (email) => {\n\t\tsetShowModal(true)\n\t\tsetIsLoading(true)\n\n\t\tif (!email) {\n\t\t\tconsole.log(\"Ziadny e-mail\")\n\t\t\tsetShowModal(false)\n\t\t\tsetIsLoading(false)\n\t\t\treturn\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await resetPassword(email)\n\t\t\tconst user = await response.json()\n\n\t\t\tgetMessage(user.messageSK)\n\t\t\tsetIsLoading(false)\n\t\t} catch (err) {\n\t\t\tconsole.log(err)\n\t\t\tgetMessage(\"Nieco sa pokazilo\")\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}\n\n\tconst handleCreatingNewPassword = async (resetSecret, password) => {\n\t\tsetShowModal(true)\n\t\tsetIsLoading(true)\n\n\t\tif (!resetSecret) {\n\t\t\tconsole.log(\"Ziadny reset token\")\n\t\t\tsetShowModal(false)\n\t\t\tsetIsLoading(false)\n\t\t\treturn\n\t\t}\n\t\tif (!password) {\n\t\t\tconsole.log(\"Ziadne heslo\")\n\t\t\tsetShowModal(false)\n\t\t\tsetIsLoading(false)\n\t\t\treturn\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await setNewPassword(resetSecret, password)\n\t\t\tconst user = await response.json()\n\n\t\t\tgetMessage(user.messageSK)\n\t\t\tsetIsLoading(false)\n\t\t} catch (err) {\n\t\t\tconsole.log(err)\n\t\t\tgetMessage(\"Nieco sa pokazilo\")\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}\n\n\tconst myHeaders = new Headers()\n\tmyHeaders.append(\"auth-token\", token)\n\tmyHeaders.append(\"Content-Type\", \"application/json\")\n\n\tconst getStats = async () => {\n\t\tsetShowModal(true)\n\t\tsetIsLoading(true)\n\n\t\tconst requestOptions = {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: myHeaders,\n\t\t\tredirect: \"follow\",\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/stats/collectionCounts`,\n\t\t\t\trequestOptions\n\t\t\t)\n\t\t\tconst data = await response.json()\n\n\t\t\tsetStats(data)\n\t\t} catch (err) {\n\t\t\tconsole.log(err)\n\t\t\tgetMessage(\"Nieco sa pokazilo\")\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}\n\n\t// useEffect(() => {\n\t//     if (localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN)) {\n\t//         setToken(localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN))\n\t//     }\n\t// }, [])\n\n\tuseEffect(() => {\n\t\tif (token) {\n\t\t\t// console.log(\"GET USER\")\n\t\t\tconst getUserProfile = async () => {\n\t\t\t\tconst response = await fetchUser(token)\n\t\t\t\tconst data = await response.json()\n\t\t\t\t// console.log(data)\n\t\t\t\tif (data.user) {\n\t\t\t\t\tsetCurrentUser(data.user)\n\t\t\t\t\tcheckIfAdmin(data.user)\n\t\t\t\t\tcheckIfOptometrist(data.user)\n\t\t\t\t}\n\t\t\t}\n\t\t\tgetUserProfile()\n\t\t\tgetStats()\n\t\t}\n\t}, [token])\n\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{\n\t\t\t\ttoken,\n\t\t\t\tuserID,\n\t\t\t\tcurrentUser,\n\t\t\t\tisAuthenticated,\n\t\t\t\tisAuthorized,\n\t\t\t\tgetToken,\n\t\t\t\tlogout,\n\n\t\t\t\tisAdmin,\n\t\t\t\tisOptometrist,\n\t\t\t\tstats,\n\t\t\t\tlogIn,\n\t\t\t\tlogOut,\n\t\t\t\tregister,\n\t\t\t\thandleResetPassword,\n\t\t\t\thandleCreatingNewPassword,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</AuthContext.Provider>\n\t)\n}\n\nexport default AuthProvider\n","/app/src/context/fetch-context/fetch.context.jsx",["798","799"],"import React, { createContext, useContext, useState, useEffect} from 'react'\n\nimport {fetchError} from '../../utils/errors'\n\nexport const FetchContext = createContext({\n    isLoading: false,\n    response: null,\n    error: null,\n    message: null,\n    fetchData: () => {},\n})\n\nexport const useFetchContext = () => useContext(FetchContext)\n\nconst FetchProvider = ({children}) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [message, setMessage] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n\n    const fetchData = async (path, data, callback, method = \"GET\", hasHeader = true) => {\n        setIsLoading(true)\n\n        console.log(\"FETCH_DATA\")\n        console.log({\n            hasHeader,\n            method,\n            path,\n            data,\n        })\n\n        const myHeaders = new Headers();\n        myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const requestOptions = {\n            method: method,\n            ...(hasHeader) && {headers: myHeaders},\n            ...(data) && {body: JSON.stringify(data)},\n            redirect: 'follow'\n        };\n\n        try {\n            const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}${path}`, requestOptions)\n            const data = await res.json()\n\n            callback(data)\n            setIsLoading(false)\n        } catch (err) {\n            setError(err)\n            fetchError(err, setMessage, () => {\n                setIsLoading(false)\n            })\n        }\n    } \n\n    return (\n        <FetchContext.Provider\n            value={{\n                isLoading,\n                response,\n                error,\n                message,\n                fetchData\n            }}\n        >\n            {children}\n        </FetchContext.Provider>\n    )\n}\n\nexport default FetchProvider","/app/src/global.styles.jsx",[],"/app/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx",[],"/app/src/components/protected-route/protected-route.component.jsx",[],"/app/src/components/popup/pop-up.component.jsx",[],"/app/src/pages/dashboard/dashboard.jsx",["800"],"import React, { lazy, Suspense, useContext } from 'react'\nimport { Switch, Route, useRouteMatch, Redirect } from 'react-router-dom'\nimport { AuthContext } from '../../context/auth/auth.context'\n\nimport SideNav from '../../components/sidenav/sidenav.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport { DashboardContainer } from './dashboard.styles'\n\nimport {\n    AiOutlineHome,\n    AiOutlineUser,\n    AiOutlineInbox,\n    AiOutlineCalendar,\n    AiOutlineFileDone,\n    AiOutlineLineChart,\n    AiOutlineTag\n} from 'react-icons/ai'\n\nconst ImageProvider = lazy(() => import('../../context/image/image.context'))\n\nconst BlogProvider = lazy(() => import('../../context/blog/blog.context'))\nconst UserProvider = lazy(() => import('../../context/user/user.context'))\nconst WarehouseProvider = lazy(() => import('../../context/warehouse/warehouse.context'))\nconst BookingProvider = lazy(() => import('../../context/booking/booking.context'))\nconst OrdersProvider = lazy(() => import(\"../../context/orders/orders.context\"))\nconst CouponsProvider = lazy(() => import('../../context/coupons/coupons.context'))\nconst AnalyticsProvider = lazy(() => import('../../context/analytics/analytics.context'))\nconst ExaminationProvider = lazy(() => import('../../context/examination/examination.context'))\nconst OrderProvider = lazy(() => import(\"../../context/order/order.context\"))\n\nconst EshopSection = lazy(() => import('../../sections/e-shop/e-shop.section'))\nconst CustomersSection = lazy(() => import('../../sections/customers/customers.section'))\nconst OrdersSection = lazy(() => import('../../sections/orders/orders.section'))\nconst AnalyticsSection = lazy(() => import('../../sections/analytics/analytics.section'))\nconst CustomerProfileSection = lazy(() => import('../../sections/customer-profile/customer-profile.section'))\nconst ProductSection = lazy(() => import('../../sections/product/product.section'))\nconst BlogSection = lazy(() => import(\"../../sections/blog-posts/blog-posts.section\"))\nconst BookingSection = lazy(() => import('../../sections/booking/booking.section'))\nconst PostSection = lazy(() => import('../../sections/post/post.section'))\nconst NoPermisionSection = lazy(() => import('../../sections/no-permission/no-permission.section'))\nconst OrderSection = lazy(() => import('../../sections/order/order.section'))\nconst CalendarSection = lazy(() => import('../../sections/calendar/calendar.section'))\nconst CouponsSection = lazy(() => import('../../sections/coupons/coupons.section'))\nconst CouponSection = lazy(() => import('../../sections/coupon/coupon.section'))\n\nconst Dashboard = () => {\n    const match = useRouteMatch()\n    const routes = [\n        {\n            name: 'Zákazníci',\n            path: '/zakaznici',\n            permission: 1,\n            icon: AiOutlineUser\n        },\n        {\n            name: 'Zákazky',\n            path: '/objednavky',\n            permission: 0,\n            icon: AiOutlineInbox\n\n        },\n        {\n            name: 'Sklad',\n            path: '/obchod',\n            permission: 1,\n            icon: AiOutlineHome\n        },\n        {\n            name: 'Kupóny',\n            path: '/kupony',\n            permission: 1,\n            icon: AiOutlineTag\n        },\n        {\n            name: 'Rezervácie',\n            path: '/rezervacie',\n            permission: 0,\n            icon: AiOutlineCalendar\n\n        },\n        {\n            name: 'Blog',\n            path: '/blog',\n            permission: 0,\n            icon: AiOutlineFileDone\n\n        },\n        {\n            name: 'Analytika',\n            path: '/analytika',\n            permission: 1,\n            icon: AiOutlineLineChart\n\n        },\n    ]\n\n    const { isAuthorized } = useContext(AuthContext)\n\n    if (!isAuthorized) return (\n        <Suspense fallback={<Popup loading={true} />}>\n            <NoPermisionSection />\n        </Suspense>\n    )\n\n    return (\n        <DashboardContainer>\n            <SideNav routes={routes} match={match} />\n            <WarehouseProvider>\n            <main>\n                <Suspense fallback={<Popup loading={true} />}>\n                    <ImageProvider>\n                        <Switch>\n                            <Route exact path={`${match.path}/obchod`} component={EshopSection} />\n\n                            <Route path={`${match.path}/sklad/:id`} render={() => (\n                                <WarehouseProvider>\n                                    <ProductSection />\n                                </WarehouseProvider>\n                            )} />\n\n\n                            <Route exact path={`${match.path}/objednavky`} render={() => (\n                                <OrdersProvider>\n                                    <OrdersSection />\n                                </OrdersProvider>\n                            )} />\n                            <Route exact path={`${match.path}/objednavky/:userId`} render={() => (\n                                <UserProvider>\n                                    <WarehouseProvider>\n                                        <OrdersProvider>\n                                            <OrderProvider>\n                                                <OrderSection />\n\n                                            </OrderProvider>\n                                        </OrdersProvider>\n                                    </WarehouseProvider>\n                                </UserProvider>\n                            )\n                            } />\n                            <Route path={`${match.path}/objednavky/:userId/:orderId`} render={() => (\n                                <UserProvider>\n                                    <WarehouseProvider>\n                                        <OrdersProvider>\n                                            <OrderProvider>\n                                                <OrderSection />\n                                            </OrderProvider>\n                                        </OrdersProvider>\n                                    </WarehouseProvider>\n                                </UserProvider>\n                            )\n                            } />\n\n                            <Route exact path={`${match.path}/kupony`} render={() => (\n                                <CouponsProvider>\n                                    <CouponsSection />\n                                </CouponsProvider>\n                            )} />\n                            <Route path={`${match.path}/kupony/:couponId`} render={() => (\n                                <CouponsProvider>\n                                    <CouponSection />\n                                </CouponsProvider>\n                            )} />\n\n\n                            <Route path={`${match.path}/analytika`} render={() => (\n                                <AnalyticsProvider>\n                                    <AnalyticsSection />\n                                </AnalyticsProvider>\n                            )} />\n\n                            <Route exact path={`${match.path}/rezervacie`} render={() => (\n                                <BookingProvider>\n                                    <BookingSection />\n                                </BookingProvider>\n                            )} />\n                            <Route path={`${match.path}/rezervacie/:calendarId`} render={() => (\n                                <BookingProvider>\n                                    <CalendarSection />\n                                </BookingProvider>\n                            )} />\n\n                            <Route exact path={`${match.path}/blog`} render={() => (\n                                <BlogProvider>\n                                    <BlogSection />\n                                </BlogProvider>\n                            )} />\n                            <Route path={`${match.path}/blog/:id`} render={() => (\n                                <BlogProvider>\n                                    <PostSection />\n                                </BlogProvider>\n                            )} />\n\n                            <UserProvider>\n                                <ExaminationProvider>\n                                    <Route exact path={`${match.path}/zakaznici`} component={CustomersSection} />\n                                    <Route path={`${match.path}/zakaznici/:id`} component={CustomerProfileSection} />\n                                </ExaminationProvider>\n                            </UserProvider>\n\n                        </Switch>\n                        {/* {currentUser.admin === 0 ? <Redirect to={`${match.path}/objednavky`} /> : <Redirect to={`${match.path}/obchod`} />} */}\n                        {/* <Redirect to={`${match.path}/zakaznici`} /> */}\n                        {/* <Redirect to={`${match.path}/rezervacie`} /> */}\n                    </ImageProvider>\n                </Suspense>\n            </main>\n            </WarehouseProvider>\n\n        </DashboardContainer>\n    )\n}\n\nexport default Dashboard\n","/app/src/context/auth/auth.queries.jsx",[],"/app/src/utils/errors.jsx",[],"/app/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx",[],"/app/src/components/popup/pop.up.styles.jsx",[],"/app/src/pages/dashboard/dashboard.styles.jsx",[],"/app/src/components/sign-in/sign-in.component.jsx",["801","802"],"import React, { useState, useContext, useEffect } from 'react'\nimport {useHistory} from 'react-router-dom'\nimport { AuthContext } from '../../context/auth/auth.context'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport { FormContainer, SubmitButton, ForgotPasswordButton } from './sign-in.styles'\n\nconst SignIn = ({ showForgotPwsForm }) => {\n    const history = useHistory()\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const {\n        isAuthenticated,\n        logIn,\n        getToken,\n        \n    } = useContext(AuthContext)\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        logIn(email, password, () => {\n            history.push('/dashboard/rezervacie')\n        })\n\n        setEmail('')\n        setPassword('')\n    }\n\n    useEffect(() => {\n        if(!isAuthenticated) return\n\n        history.push(\"/dashboard/rezervacie\")\n    }, [isAuthenticated])\n\n    return (\n        <React.Fragment>\n            <FormContainer onSubmit={handleSubmit}>\n                <h2>Prihlásiť sa</h2>\n\n                <CustomInput\n                    label=\"E-mail\"\n                    type='email'\n                    name='email'\n                    value={email}\n                    handleChange={(e) => setEmail(e.target.value)}\n                    required\n                />\n                <CustomInput\n                    label=\"Heslo\"\n                    type='password'\n                    name='pwd'\n                    value={password}\n                    handleChange={(e) => setPassword(e.target.value)}\n                    required\n\n                />\n\n                <SubmitButton>Prihlásiť sa</SubmitButton>\n            </FormContainer>\n            <ForgotPasswordButton onClick={() => showForgotPwsForm()}>Zabudol som heslo</ForgotPasswordButton>\n\n        </React.Fragment>\n    )\n}\n\nexport default SignIn\n","/app/src/components/forgot-password/forgot-password.component.jsx",[],"/app/src/components/spinner/spinner.component.jsx",[],"/app/src/components/custom-button/custom-button.component.jsx",[],"/app/src/components/sidenav/sidenav.component.jsx",["803"],"/app/src/context/image/image.context.jsx",[],"/app/src/context/blog/blog.context.jsx",[],"/app/src/context/user/user.context.jsx",["804"],"import React, { createContext, useState, useContext, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { AuthContext } from \"../auth/auth.context\"\nimport { LoadingModalContext } from \"../loading-modal/loading-modal.contenxt\"\n// import { OrderContext } from '../order/order.context'\n\nimport {\n\t// fetchUsers,\n\tfetchUser,\n\tpatchUser,\n\tpostAdmin,\n\tpostUser,\n} from \"./user.queries\"\n\nimport { initUserObj } from \"./user.utils\"\n\nexport const UserContext = createContext({\n\tisUpdating: false,\n\tactiveIndex: 0,\n\thandleChangeFilterItem: () => {},\n\tfilterItems: [],\n\ttotalCount: 0,\n\tusers: null,\n\tuser: null,\n\t// getUsers: () => { },\n\tgetUser: () => {},\n\thandleChange: () => {},\n\thandleParameterChange: () => {},\n\thandleCompanyChange: () => {},\n\tupdateUser: () => {},\n\tresetUser: () => {},\n\tformToShow: 0,\n\tswitchFormButtons: [],\n\ttoggleUserForm: () => {},\n\tcreateUser: () => {},\n\tgetFilteredUsers: () => {},\n\tgetUserByQuery: () => {},\n\tdeleteUser: () => {},\n\tsaveUserExamination: () => {},\n\tgetUserExamination: () => {},\n})\n\nexport const useUserContext = () => useContext(UserContext)\n\nconst UserProvider = ({ children }) => {\n\tconst { push } = useHistory()\n\tconst { token } = useContext(AuthContext)\n\tconst { closeModal, getMessage, setIsLoading, setShowModal } =\n\t\tuseContext(LoadingModalContext)\n\n\t// ------------------------\n\n\tconst [user, setUser] = useState(initUserObj)\n\tconst [users, setUsers] = useState(null)\n\tconst [totalCount] = useState(0)\n\n\t// ------------------------\n\n\tconst saveUserExamination = (obj, userID) => {\n\t\tif (!userID) return\n\t\tconsole.log(\"Saving parameters\")\n\t\tconsole.log({\n\t\t\tuserID,\n\t\t\tobj,\n\t\t})\n\t\tlocalStorage.setItem(userID, JSON.stringify(obj))\n\t}\n\n\tconst getUserExamination = (userID) => {\n\t\tif (!userID) return null\n\t\tconst obj = localStorage.getItem(userID)\n\t\treturn JSON.parse(obj)\n\t}\n\n\t// ------------------------\n\n\t// console.count(\"USERCONTEXT\")\n\t// console.log(user)\n\n\tconst [isUpdating, setIsUpdating] = useState(false)\n\tconst [activeIndex, setActiveIndex] = useState(0)\n\tconst filterItems = [\n\t\t{\n\t\t\tid: 0,\n\t\t\tname: \"Zákazníci\",\n\t\t\tfilter: 0,\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tname: \"Zamestnanci\",\n\t\t\tfilter: 1,\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tname: \"Vedúci\",\n\t\t\tfilter: 2,\n\t\t},\n\t\t// {\n\t\t//     id: 3,\n\t\t//     name: \"Velký brat\",\n\t\t//     filter: 3,\n\t\t// },\n\t\t// {\n\t\t//     id: 4,\n\t\t//     name: \"Odstránené\",\n\t\t//     filter: 3\n\t\t// }\n\t]\n\n\t// ------------------------\n\n\tconst [formToShow, setFormToShow] = useState(0)\n\tconst switchFormButtons = [\n\t\t{\n\t\t\tname: \"Zákazník\",\n\t\t},\n\t\t{\n\t\t\tname: \"Zamestnanec\",\n\t\t},\n\t]\n\n\tconst toggleUserForm = (e, idx) => {\n\t\te.preventDefault()\n\t\tsetFormToShow(idx)\n\t}\n\n\t// ------------------------\n\n\tconst handleChangeFilterItem = (itemIndex) => {\n\t\tsetActiveIndex(itemIndex)\n\t}\n\n\tconst handleChange = (e) => {\n\t\tconst { name, value } = e.target\n\n\t\tsetUser({\n\t\t\t...user,\n\t\t\t[name]: value,\n\t\t})\n\t}\n\n\tconst handleParameterChange = (e, idx) => {\n\t\tconst { name, value } = e.target\n\t\tlet arr = user.lenses[name]\n\t\tarr[idx] = value === \"\" ? 1001 : value\n\t\tsetUser({\n\t\t\t...user,\n\t\t\tlenses: {\n\t\t\t\t...user.lenses,\n\t\t\t\t[name]: arr,\n\t\t\t},\n\t\t})\n\t}\n\n\tconst handleCompanyChange = (e) => {\n\t\tconst { name, value } = e.target\n\t\tsetUser({\n\t\t\t...user,\n\t\t\tcompany: {\n\t\t\t\t...user.company,\n\t\t\t\t[name]: value,\n\t\t\t},\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tsetUser({\n\t\t\t...user,\n\t\t\tname: user?.fName + \" \" + user?.lName,\n\t\t})\n\t}, [user?.fName, user?.lName])\n\n\tconst resetUser = () => {\n\t\tsetUser(initUserObj)\n\t\tsetIsUpdating(false)\n\t\tsetFormToShow(0)\n\t}\n\n\t// ------------------------\n\t// USER ACTIONS\n\t// ------------------------\n\n\t// Get all users\n\t// const getUsers = async () => {\n\t//     setIsLoading(true)\n\t//     setShowModal(true)\n\n\t//     try {\n\t//         const response = await fetchUsers(token)\n\t//         const data = await response.json()\n\n\t//         console.log(data)\n\t//         if (data.users) {\n\t//             setUsers(data.users)\n\t//             setTotalCount(data.count)\n\t//             setIsLoading(false)\n\t//             closeModal()\n\n\t//         } else {\n\t//             getMessage(data.message)\n\t//             setIsLoading(false)\n\t//         }\n\t//     } catch (err) {\n\t//         console.log(err)\n\t//         getMessage(\"Nieco sa pokazilo\")\n\t//         setIsLoading(false)\n\t//     }\n\t// }\n\n\t// Get single user\n\tconst getUser = async (id) => {\n\t\tsetIsLoading(true)\n\t\tsetShowModal(true)\n\t\tsetIsUpdating(true)\n\n\t\ttry {\n\t\t\tconst response = await fetchUser(token, id)\n\t\t\tconst data = await response.json()\n\n\t\t\tif (data.user) {\n\t\t\t\tsetUser({\n\t\t\t\t\t...user,\n\t\t\t\t\t...data.user,\n\t\t\t\t\tfName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n\t\t\t\t\tlName: data.user.name ? data.user.name.split(\" \")[1] : \"\",\n\t\t\t\t})\n\t\t\t\tsetIsLoading(false)\n\t\t\t\tcloseModal()\n\t\t\t} else {\n\t\t\t\tgetMessage(data.message)\n\t\t\t\tsetIsLoading(false)\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err)\n\t\t\tgetMessage(\"Nieco sa pokazilo\")\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}\n\n\t// Update user\n\tconst updateUser = async (user, id, path, refetchUser, close, addUser) => {\n\t\tsetIsLoading(true)\n\t\tsetShowModal(true)\n\n\t\ttry {\n\t\t\tconst response = await patchUser(token, user, id)\n\t\t\tconst data = await response.json()\n\n\t\t\tif (data.error) {\n\t\t\t\tgetMessage(data.messageSK)\n\t\t\t\tsetIsLoading(false)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tsetIsLoading(false)\n\t\t\tcloseModal()\n\n\t\t\tif (path === \"order\") {\n\t\t\t\tpush(`/dashboard/objednavky/${id}`)\n\t\t\t} else if (path === \"profile\") {\n\t\t\t\tpush(`/dashboard/zakaznici/${id}`)\n\t\t\t} else if (path === \"isOrder\") {\n\t\t\t\tsetUser({\n\t\t\t\t\t...user,\n\t\t\t\t\t...data.user,\n\t\t\t\t\tfName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n\t\t\t\t\tlName: data.user.name ? data.user.name.split(\" \")[1] : \"\",\n\t\t\t\t})\n\n\t\t\t\taddUser({\n\t\t\t\t\t...user,\n\t\t\t\t\t...data.user,\n\t\t\t\t\tfName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n\t\t\t\t\tlName: data.user.name ? data.user.name.split(\" \")[1] : \"\",\n\t\t\t\t})\n\t\t\t\t// console.log(\"REFETCH USER\")\n\t\t\t\t// console.log(\"REFETCH USER\")\n\t\t\t\t// console.log(\"REFETCH USER\")\n\t\t\t\t// refetchUser()\n\t\t\t\tclose()\n\t\t\t} else {\n\t\t\t\tpush(\"/dashboard/zakaznici\")\n\t\t\t}\n\n\t\t\tgetFilteredUsers({\n\t\t\t\tfilters: {\n\t\t\t\t\tadmin: activeIndex,\n\t\t\t\t},\n\t\t\t})\n\t\t\t// http://localhost:1000/#/dashboard/zakaznici\n\t\t} catch (err) {\n\t\t\tconsole.log(err)\n\t\t\tgetMessage(\"Nieco sa pokazilo\")\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}\n\n\tconst createUser = async (user, path) => {\n\t\tsetIsLoading(true)\n\t\tsetShowModal(true)\n\n\t\ttry {\n\t\t\tif (formToShow === 0) {\n\t\t\t\tlet data = {}\n\t\t\t\tif (!user._id) {\n\t\t\t\t\tconst response = await postUser(token, user)\n\t\t\t\t\tdata = await response.json()\n\n\t\t\t\t\tif (data.error) {\n\t\t\t\t\t\tgetMessage(data.message)\n\n\t\t\t\t\t\tif (data.type === \"email\") {\n\t\t\t\t\t\t\tgetMessage(\"Email existuje\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (data.error === \"format\" && data.message.includes(\"email\")) {\n\t\t\t\t\t\t\tgetMessage(\"Email musi byt platny email\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tsetUser({\n\t\t\t\t\t\t...data.user,\n\t\t\t\t\t\t_id: data.user._id,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst userId = data.user ? data.user._id : user._id\n\n\t\t\t\tupdateUser(\n\t\t\t\t\t{\n\t\t\t\t\t\t...user,\n\t\t\t\t\t},\n\t\t\t\t\tuserId,\n\t\t\t\t\tpath\n\t\t\t\t)\n\n\t\t\t\t// setIsLoading(false)\n\t\t\t\t// getUsers()\n\t\t\t\t// push('/dashboard/zakaznici')\n\t\t\t\t// closeModal()\n\t\t\t} else {\n\t\t\t\tif (user.password !== user.confirmPassword) {\n\t\t\t\t\tgetMessage(\"Heslá sa nezhodujú\")\n\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst response = await postAdmin(token, user)\n\t\t\t\tconst data = await response.json()\n\n\t\t\t\tif (data.error) {\n\t\t\t\t\tgetMessage(data.message)\n\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tsetIsLoading(false)\n\t\t\t\tgetFilteredUsers({\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\tadmin: activeIndex,\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tpush(\"/dashboard/zakaznici\")\n\t\t\t\tcloseModal()\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err)\n\t\t\tgetMessage(\"Niečo sa pokazilo\")\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}\n\n\t// ----------------------------------------------\n\t// ----------------------------------------------\n\t// ----------------------------------------------\n\n\tconst myHeaders = new Headers()\n\tmyHeaders.append(\"auth-token\", token)\n\tmyHeaders.append(\"Content-Type\", \"application/json\")\n\n\tconst deleteUser = async (id) => {\n\t\tsetIsLoading(true)\n\t\tsetShowModal(true)\n\n\t\tconst requestOptions = {\n\t\t\tmethod: \"DELETE\",\n\t\t\theaders: myHeaders,\n\t\t\t// body: raw,\n\t\t\tredirect: \"follow\",\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/${id}`,\n\t\t\t\trequestOptions\n\t\t\t)\n\t\t\tconst data = await response.json()\n\n\t\t\tif (data.user) {\n\t\t\t\tpush(\"/dashboard/zakaznici\")\n\t\t\t\tsetIsLoading(false)\n\t\t\t\tcloseModal()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tgetMessage(data.messageSK)\n\t\t\tsetIsLoading(false)\n\t\t} catch (err) {\n\t\t\tconsole.log(err)\n\t\t\tgetMessage(\"Niečo sa pokazilo\")\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}\n\n\tconst getFilteredUsers = async (filter) => {\n\t\tsetIsLoading(true)\n\t\tsetShowModal(true)\n\n\t\tconst raw = JSON.stringify(filter)\n\n\t\tconst requestOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: myHeaders,\n\t\t\tbody: raw,\n\t\t\tredirect: \"follow\",\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`,\n\t\t\t\trequestOptions\n\t\t\t)\n\t\t\tconst data = await response.json()\n\n\t\t\tif (data.users) {\n\t\t\t\tsetUsers(data.users)\n\t\t\t\tcloseModal()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tgetMessage(data.messageSK)\n\t\t\tsetIsLoading(false)\n\t\t} catch (err) {\n\t\t\tconsole.log(err)\n\t\t\tgetMessage(\"Nieco sa pokazilo\")\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}\n\n\tconst getUserByQuery = async (query) => {\n\t\tsetIsLoading(true)\n\t\tsetShowModal(true)\n\n\t\tconst raw = JSON.stringify(query)\n\n\t\tconst requestOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: myHeaders,\n\t\t\tbody: raw,\n\t\t\tredirect: \"follow\",\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`,\n\t\t\t\trequestOptions\n\t\t\t)\n\t\t\tconst data = await response.json()\n\n\t\t\tif (data.users) {\n\t\t\t\tsetUsers(data.users)\n\t\t\t\tcloseModal()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tgetMessage(data.message)\n\t\t\tsetIsLoading(false)\n\t\t} catch (err) {\n\t\t\tconsole.log(err)\n\t\t\tgetMessage(\"Nieco sa pokazilo\")\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}\n\n\treturn (\n\t\t<UserContext.Provider\n\t\t\tvalue={{\n\t\t\t\tisUpdating,\n\t\t\t\tactiveIndex,\n\t\t\t\thandleChangeFilterItem,\n\t\t\t\tfilterItems,\n\t\t\t\tusers,\n\t\t\t\tuser,\n\t\t\t\ttotalCount,\n\t\t\t\t// getUsers,\n\t\t\t\tgetUser,\n\t\t\t\thandleChange,\n\t\t\t\thandleParameterChange,\n\t\t\t\thandleCompanyChange,\n\t\t\t\tupdateUser,\n\t\t\t\tresetUser,\n\t\t\t\tformToShow,\n\t\t\t\tswitchFormButtons,\n\t\t\t\ttoggleUserForm,\n\t\t\t\tcreateUser,\n\t\t\t\tgetFilteredUsers,\n\t\t\t\tgetUserByQuery,\n\t\t\t\tdeleteUser,\n\t\t\t\tsaveUserExamination,\n\t\t\t\tgetUserExamination,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</UserContext.Provider>\n\t)\n}\n\nexport default UserProvider\n","/app/src/context/warehouse/warehouse.context.jsx",["805","806","807"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport { useSlug } from '../../hooks/slug'\n\nimport {\n    // premisesTabs,\n    categoryTabs,\n    initLensesObj,\n    initProductObj,\n    formatPrice,\n    diaConvert,\n    initContactLensesObj,\n    initGlassesObj,\n    formatfloatNumber,\n    formatLink,\n} from './warehouse.utils'\n\nimport {\n    retailNamesTabs\n} from '../../utils/warehouse.utils'\n\nexport const WarehouseContext = createContext({\n    searchQuery: null,\n    eanCode: null,\n    product: {},\n    lenses: {},\n    contactLensesParameters: {},\n    glassesParameters: {},\n    totalProducts: 0,\n    totalLenses: 0,\n    activePremisesTab: 0,\n    activeCategoryTypeTab: 0,\n    retailPremisesTabs: [],\n    productCategoryTypeTabs: [],\n    products: null,\n    lensesProducts: null,\n    handleChangeCategoryTypeTab: () => { },\n    handleChangePremisesTab: () => { },\n    getProductsByQuery: () => { },\n    handleProductChange: () => { },\n    handleProductAvailableChange: () => { },\n    getSingleProduct: () => { },\n    createProduct: () => { },\n    updateProduct: () => { },\n    deleteProduct: () => { },\n    getSingleLenses: () => { },\n    getLenses: () => { },\n    createLenses: () => { },\n    updateLenses: () => { },\n    deleteLenses: () => { },\n    handleLensesChange: () => { },\n    handleLensesParameterChange: () => { },\n    resetProduct: () => { },\n    resetLenses: () => { },\n    resetContactLenses: () => { },\n    resetGlassesParameters: () => { },\n    getEanCode: () => { },\n    handleAddNewParameter: () => { },\n    handleContactLensesParameterChange: () => { },\n    handleGlassesParameterChange: () => { },\n    handleGlassesParameterSpecsChange: () => { },\n    handleGlassesSizeChange: () => { },\n    deactivateMany: () => { },\n    getFilteredLenses: () => {},\n    handleSearchQueryChange: () => {}\n})\n\nconst WarehouseProvider = ({ children }) => {\n    const { getSlug } = useSlug()\n    const { push } = useHistory()\n    const { token, isAdmin, currentUser, stats } = useContext(AuthContext)\n    const { closeModal, setIsLoading, setShowModal, getMessage } = useContext(LoadingModalContext)\n\n    const [searchQuery, setSearchQuery] = useState(null)\n\n    const [totalProducts, setTotalProducts] = useState(0)\n    const [totalLenses, setTotalLenses] = useState(0)\n    const [eanCode, setEanCode] = useState(null)\n\n    const [product, setProduct] = useState({ ...initProductObj })\n    const [lenses, setLenses] = useState({ ...initLensesObj })\n    const [contactLensesParameters, setContactLensesParameters] = useState({ ...initContactLensesObj })\n    const [glassesParameters, setGlassesParameters] = useState({ ...initGlassesObj })\n\n    const [products, setProducts] = useState(null)\n    const [lensesProducts, setLensesProducts] = useState(null)\n    const [activePremisesTab, setActivePremisesTab] = useState(0)\n    const [retailPremisesTabs, setRetailPremisesTabs] = useState([])\n\n    const [productCategoryTypeTabs] = useState(categoryTabs)\n    const [activeCategoryTypeTab, setActiveCategoryTypeTab] = useState(0)\n\n    const handleSearchQueryChange = (string) => {\n        setSearchQuery(string)\n    }\n\n    const handleGlassesParameterChange = e => {\n        const { name, value } = e.target\n        setGlassesParameters({\n            ...glassesParameters,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParameterSpecsChange = e => {\n        const { name, value } = e.target\n        setGlassesParameters({\n            ...glassesParameters,\n            specs: {\n                ...glassesParameters.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n        setGlassesParameters({\n            ...glassesParameters,\n            specs: {\n                ...glassesParameters.specs,\n                [name]: arr\n            }\n        })\n\n    }\n\n    const handleAddNewParameter = e => {\n        const { name } = e.target\n        setContactLensesParameters({\n            ...contactLensesParameters,\n            [name]: [...contactLensesParameters[name], 1001]\n        })\n    }\n\n    const handleContactLensesParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n        setContactLensesParameters({\n            ...contactLensesParameters,\n            [name]: arr\n        })\n    }\n\n    const handleProductChange = e => {\n        const { name, value } = e.target\n\n        setProduct({\n            ...product,\n            [name]: value\n        })\n    }\n\n    const handleProductAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setProduct({\n            ...product,\n            [name]: arr\n        })\n    }\n\n    const handleLensesChange = e => {\n        const { name, value } = e.target\n\n        setLenses({\n            ...lenses,\n            [name]: value\n        })\n    }\n\n    const handleLensesParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setLenses({\n            ...lenses,\n            [name]: arr\n        })\n    }\n\n    const resetProduct = () => {\n        setProduct({\n            ...initProductObj,\n            available: [0, 1001, 1001, 1001, 1001, 1001, 1001],\n        })\n        setEanCode(null)\n    }\n\n    const resetLenses = () => {\n        // setLenses({ ...initLensesObj })\n        setLenses({\n            ...initLensesObj,\n            dioptersRange: [1001, 1001],\n            cylinderRange: [1001, 1001],\n        })\n    }\n\n    const resetContactLenses = () => {\n        setContactLensesParameters({\n            ...initContactLensesObj,\n            allowedCurves: [1001],\n            allowedDiameters: [1001],\n            dioptersRange: [1001, 1001]\n        })\n    }\n\n    const resetGlassesParameters = () => {\n        setGlassesParameters({\n            ...initGlassesObj,\n            specs: {\n                ...initGlassesObj.specs,\n                size: [1001, 1001, 1001, 1001]\n            }\n        })\n    }\n\n    const handleChangePremisesTab = (idx) => {\n        setActivePremisesTab(idx)\n    }\n\n    const handleChangeCategoryTypeTab = (idx) => {\n        setActiveCategoryTypeTab(idx)\n    }\n\n\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const getEanCode = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/nextEanCode`, requestOptions)\n            const data = await response.json()\n\n            if (data.eanCode) {\n                setEanCode(data.eanCode)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getProductsByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/filter`, requestOptions)\n            const data = await response.json()\n\n            if (data.products) {\n                setProducts(data.products)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getLenses = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/filter`, requestOptions)\n            const data = await response.json()\n\n            if (data.lenses) {\n                setProducts(data.lenses)\n                setLensesProducts(data.lenses)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getFilteredLenses = async (filterObj) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(filterObj)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/filter`, requestOptions)\n            const data = await response.json()\n\n            if (data.lenses) {\n                setProducts(data.lenses)\n                setLensesProducts(data.lenses)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getSingleProduct = async (id, callback) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/products/${id}`)\n            const data = await response.json()\n\n            if (data.error === 'not-found') {\n                getSingleLenses(id, () => { })\n            }\n\n            if (data.product) {\n                setProduct({\n                    ...data.product,\n                    price: (data.product.price / 100).toFixed(2)\n                })\n                if (data.product.type === 3) {\n                    setContactLensesParameters({\n                        ...data.product.contactLenses\n                    })\n                } else {\n                    setGlassesParameters({\n                        colorCode: data.product.colorCode ?? \"\",\n                        specs: {\n                            ...data.product.specs,\n                            size: [...Array(4)].map((value, idx) => data.product.specs.size[idx] ? data.product.specs.size[idx] : 0)\n                        }\n                    })\n                }\n                callback(data)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createProduct = async (productToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let linkSize1 = null\n\n        if (productToAdd?.specs?.size) {\n            linkSize1 = diaConvert(productToAdd?.specs?.size[0].toString() || '').replaceAll(\" \", \"-\").replaceAll(\",\", \"-\").replaceAll(\".\", \"-\").toLowerCase().trim()\n        }\n\n        const finalSlug = getSlug(`${productToAdd?.name || \"neuvedene\"}-${productToAdd?.specs?.frameColor || \"neuvedene\"}-${productToAdd?.specs?.size || \"neuvedene\"}`)\n\n        let modifiedProduct = {\n            ...productToAdd,\n            price: formatPrice(productToAdd?.price?.toString() || \"\"),\n            link: finalSlug,\n        }\n\n        if (productToAdd.specs) {\n            if (productToAdd.specs.size) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    specs: {\n                        ...modifiedProduct.specs,\n                        size: productToAdd.specs.size.map(value => value === 1001 ? 0 : formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        if (productToAdd.contactLenses) {\n            if (productToAdd.contactLenses.allowedCurves) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: productToAdd.contactLenses.allowedCurves.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n            if (productToAdd.contactLenses.allowedDiameters) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: productToAdd.contactLenses.allowedDiameters.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n            if (productToAdd.contactLenses.dioptersRange) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: productToAdd.contactLenses.dioptersRange.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedProduct,\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products`, requestOptions)\n            const data = await response.json()\n\n            if (data.product) {\n                push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10,\n                    skip: 0,\n                    sortBy: {\n                        date: -1\n                    }\n                })\n                setEanCode(null)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateProduct = async (productToUpdate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        // console.log(productToUpdate)\n\n        const finalSlug = getSlug(`${productToUpdate?.name || product?.name}-${productToUpdate?.specs?.frameColor || product?.specs?.frameColor || \"\"}-${productToUpdate?.specs?.size || product?.specs?.size}`)\n\n\n        let modifiedProduct = {\n            ...productToUpdate,\n            link: finalSlug,\n            ...(!(productToUpdate.image === \"\")) && { image: productToUpdate.image},\n            ...(productToUpdate.specs) && { specs: {\n                frameColor: productToUpdate?.specs?.frameColor || product?.specs?.frameColor,\n                size: productToUpdate?.specs?.size || product?.specs?.size,\n                frameMaterial: productToUpdate?.specs?.frameMaterial || product?.specs.frameMaterial,\n                frameStyle: productToUpdate?.specs?.frameStyle || product?.specs.frameStyle,\n                lensColor: productToUpdate?.specs?.lensColor || product?.specs.lensColor,\n                sex: productToUpdate?.specs?.sex || product?.specs.sex,\n            }}\n        }\n\n        // console.log(modifiedProduct)\n\n        // return\n\n        if (modifiedProduct.price) {\n            modifiedProduct = {\n                ...modifiedProduct,\n                price: formatPrice(productToUpdate.price.toString()),\n            }\n        }\n\n        if (modifiedProduct.available) {\n            if (typeof modifiedProduct.available === \"number\") {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    available: productToUpdate.available\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    available: productToUpdate.available ? productToUpdate.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0, 0, 0]\n                }\n            }\n        }\n\n        // if (productToUpdate.name || productToUpdate?.specs?.frameColor || productToUpdate?.specs?.size) {\n        //     const linkName = diaConvert(productToUpdate?.name || product?.name || \"\").replaceAll(\" \", \"-\").toLowerCase().trim()\n        //     const linkFrameColor = diaConvert(productToUpdate?.specs?.frameColor || product?.specs?.frameColor || '').replaceAll(\" \", \"-\").toLowerCase().trim()\n\n        //     let linkSize1 = null\n\n        //     if (product?.specs?.size) {\n        //         linkSize1 = diaConvert(productToUpdate?.specs?.size[0].toString() || product?.specs?.size[0].toString() || '').replaceAll(\" \", \"-\").replaceAll(\",\", \"-\").replaceAll(\".\", \"-\").toLowerCase().trim()\n        //     }\n\n        //     const slug = linkName + (linkFrameColor ? `-${linkFrameColor}` : \"\") + (linkSize1 !== null ? `-${linkSize1}` : \"\")\n\n        //     const finalSlug = getSlug(slug)\n\n        //     console.log(finalSlug)\n\n        //     modifiedProduct = {\n        //         ...modifiedProduct,\n        //         link: finalSlug\n        //     }\n        // }\n\n        if (productToUpdate.specs) {\n            if (productToUpdate.specs.size) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    specs: {\n                        ...modifiedProduct.specs,\n                        size: productToUpdate.specs.size.map(value => value === 1001 ? 0 : formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        if (productToUpdate.contactLenses) {\n            if (productToUpdate.contactLenses.allowedCurves) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: productToUpdate.contactLenses.allowedCurves.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: contactLensesParameters.allowedCurves\n                    }\n                }\n            }\n\n            if (productToUpdate.contactLenses.allowedDiameters) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: productToUpdate.contactLenses.allowedDiameters.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: contactLensesParameters.allowedDiameters\n                    }\n                }\n            }\n            if (productToUpdate.contactLenses.dioptersRange) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: productToUpdate.contactLenses.dioptersRange.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: contactLensesParameters.dioptersRange\n                    }\n                }\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedProduct,\n        })\n\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/${product._id}`, requestOptions)\n            const data = await response.json()\n\n            if (data.error) {\n                getMessage(data.messageSK)\n                setIsLoading(false)\n                return\n\n            }\n\n            if (data.product) {\n                push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10,\n                    skip: 0,\n                    sortBy: {\n                        date: -1\n                    }\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteProduct = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/${id}`, requestOptions)\n            const data = await response.json()\n\n            if (data.product) {\n                // push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10,\n                    skip: 0,\n                    sortBy: {\n                        date: -1\n                    }\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getSingleLenses = async (id, callback) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/lenses/${id}`)\n            const data = await response.json()\n\n            if (data.lenses) {\n                setLenses(data.lenses)\n                callback(data)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createLenses = async (lensesToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify({\n            ...lensesToAdd,\n            price: formatPrice(lensesToAdd.price.toString())\n        });\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses`, requestOptions)\n            const data = await response.json()\n\n            if (data.lenses) {\n                push('/dashboard/obchod')\n                getLenses({\n                    sortBy: {\n                        dateCreated: -1\n                    }\n                })\n                closeModal()\n                return\n            }\n\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateLenses = async (lensesToUpdate, id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let modifiedLenses = {\n            ...lensesToUpdate\n        }\n\n        if (modifiedLenses.price) {\n            modifiedLenses = {\n                ...modifiedLenses,\n                price: formatPrice(lensesToUpdate.price.toString()),\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedLenses,\n        });\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/${id}`, requestOptions)\n            const data = await response.json()\n\n            if (data.lenses) {\n                push('/dashboard/obchod')\n                getLenses({\n                    sortBy: {\n                        dateCreated: -1\n                    }\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteLenses = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/${id}`, requestOptions)\n            const data = await response.json()\n\n            if (data.lenses) {\n                getLenses({\n                    sortBy: {\n                        dateCreated: -1\n                    }\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deactivateMany = async (databObj) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify(databObj);\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/deactivateMany`, requestOptions)\n            const data = await response.json()\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (products) {\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    limit: 10,\n                    skip: 0,\n                    sortBy: {\n                        date: -1\n                    }\n                })\n            } else if (activeCategoryTypeTab === 1) {\n                getLenses({\n                    sortBy: {\n                        dateCreated: -1\n                    }\n                })\n            } else {\n                getProductsByQuery({\n                    limit: 10,\n                    filters: {\n                        type: 3\n                    },\n                    sortBy: {\n                        date: -1\n                    }\n                })\n            }\n        }\n    }, [activeCategoryTypeTab])\n\n    useEffect(() => {\n        if (currentUser) {\n            if (isAdmin) {\n                setRetailPremisesTabs(retailNamesTabs)\n                setActivePremisesTab(0)\n            } else {\n                setRetailPremisesTabs(retailNamesTabs.filter(tab => tab.premises === currentUser.premises))\n                setActivePremisesTab(0)\n            }\n        }\n    }, [currentUser, isAdmin])\n\n    useEffect(() => {\n        if (stats) {\n            setTotalProducts(stats.products)\n            setTotalLenses(stats.lenses)\n        }\n    }, [stats])\n\n    useEffect(() => {\n        if (product.name !== '') {\n            setProduct({\n                ...product,\n                link: formatLink(product.name)\n            })\n        }\n    }, [product.name])\n\n    return (\n        <WarehouseContext.Provider\n            value={{\n                searchQuery,\n                eanCode,\n                product,\n                lenses,\n                contactLensesParameters,\n                glassesParameters,\n                totalProducts,\n                totalLenses,\n                activePremisesTab,\n                activeCategoryTypeTab,\n                retailPremisesTabs,\n                productCategoryTypeTabs,\n                products,\n                lensesProducts,\n                handleChangeCategoryTypeTab,\n                handleChangePremisesTab,\n                getProductsByQuery,\n                handleProductChange,\n                handleProductAvailableChange,\n                getLenses,\n                getSingleProduct,\n                createProduct,\n                updateProduct,\n                deleteProduct,\n                getSingleLenses,\n                createLenses,\n                updateLenses,\n                deleteLenses,\n                handleLensesChange,\n                handleLensesParameterChange,\n                resetProduct,\n                resetLenses,\n                resetContactLenses,\n                resetGlassesParameters,\n                getEanCode,\n                handleAddNewParameter,\n                handleContactLensesParameterChange,\n                handleGlassesParameterChange,\n                handleGlassesParameterSpecsChange,\n                handleGlassesSizeChange,\n                deactivateMany,\n                getFilteredLenses,\n                handleSearchQueryChange\n            }}\n        >\n            {children}\n        </WarehouseContext.Provider>\n    )\n}\n\nexport default WarehouseProvider","/app/src/context/orders/orders.context.jsx",[],"/app/src/context/booking/booking.context.jsx",[],"/app/src/context/coupons/coupons.context.jsx",["808"],"import React, { createContext, useContext, useState } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport { useHistory } from 'react-router-dom'\nimport { formatPrice } from '../../utils/warehouse.utils'\n\nexport const CouponsContext = createContext({\n    coupon: null,\n    coupons: null,\n    handleChange: () => { },\n    getCoupon: () => { },\n    getCoupons: () => { },\n    createCoupon: () => { },\n    // updateCoupon: () => { },\n    deleteCoupon: () => { },\n    isUpdating: false,\n    resetCoupons: () => { }\n})\n\nconst initCouponObj = {\n    code: '',\n    type: 'percentage', // flat\n    value: 0,\n    maxUses: 0,\n    minValue: 0,\n    maxUsesTotal: 0\n}\n\n\nconst CouponsProvider = ({ children }) => {\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n    const { token } = useContext(AuthContext)\n    const { push } = useHistory()\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const [coupon, setCoupon] = useState(initCouponObj)\n    const [coupons, setCoupons] = useState(null)\n\n    const [isUpdating, setIsupdating] = useState(false)\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n\n        setCoupon({\n            ...coupon,\n            [name]: value\n        })\n    }\n\n    const getCoupon = async (id) => {\n        setIsupdating(true)\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/coupons/${id}`, requestOptions)\n            const data = await response.json()\n\n            if (data.coupon) {\n                setCoupon({\n                    ...coupon,\n                    ...data.coupon\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n\n    }\n\n    const getCoupons = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/coupons`, requestOptions)\n            const data = await response.json()\n\n            if (data.coupons) {\n                setCoupons(data.coupons)\n            }\n            setIsLoading(false)\n            closeModal()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createCoupon = async (couponToCreate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(couponToCreate.value)\n\n        const raw = JSON.stringify({\n            code: couponToCreate.code,\n            type: couponToCreate.type, // flat\n            ...(couponToCreate.value) && { value: couponToCreate.type === \"flat\" ? formatPrice(couponToCreate.value) : Number(couponToCreate.value) },\n            // value: couponToCreate.value === '' || couponToCreate.value === '0' ? undefined : Number(couponToCreate.value),\n            maxUses: couponToCreate.maxUses === '' || couponToCreate.maxUses === '0' ? undefined : Number(couponToCreate.maxUses),\n            ...(couponToCreate.minValue) && { minValue: formatPrice(couponToCreate.minValue) },\n            maxUsesTotal: couponToCreate.maxUsesTotal === '' || couponToCreate.maxUsesTotal === '0' ? undefined : Number(couponToCreate.maxUsesTotal)\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/coupons/create`, requestOptions)\n            const data = await response.json()\n\n            if (data.error === \"format\") {\n                getMessage(\"Kód kupónu je povinný\")\n            }\n            if (data.error === 'exists') {\n                getMessage(\"Kupón už existuje\")\n            }\n\n            if (response.ok) {\n                getCoupons()\n                push('/dashboard/kupony')\n            }\n\n            // getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n\n    }\n\n    // const updateCoupon = async () => {\n    //     console.log(\"Update coupon\")\n\n    //     setIsLoading(true)\n    //     setShowModal(true)\n\n    //     const requestOptions = {\n    //         method: 'GET',\n    //         headers: myHeaders,\n    //         redirect: 'follow'\n    //     };\n\n    //     try {\n    //         const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/coupons/${id}`, requestOptions)\n    //         const data = await response.json()\n\n    //         getMessage(data.message)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Niečo sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    // }\n\n    const deleteCoupon = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/coupons/${id}`, requestOptions)\n            const data = await response.json()\n\n            if (response.ok) {\n                getCoupons()\n                push('/dashboard/kupony')\n            }\n            // getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const resetCoupons = async () => {\n        setIsupdating(false)\n        setCoupon(initCouponObj)\n    }\n\n    return (\n        <CouponsContext.Provider\n            value={{\n                coupon,\n                coupons,\n                handleChange,\n                getCoupon,\n                getCoupons,\n                createCoupon,\n                // updateCoupon,\n                deleteCoupon,\n                isUpdating,\n                resetCoupons\n            }}\n        >\n            {children}\n        </CouponsContext.Provider>\n    )\n}\n\nexport default CouponsProvider","/app/src/context/examination/examination.context.jsx",["809","810","811"],"import React, { createContext, useContext, useState } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport {useFetchContext} from '../fetch-context/fetch.context'\nimport examSchema from './exam.json'\nimport lodash from 'lodash'\n\nexport const ExaminationContext = createContext({\n    createExamination: () => { },\n    updateExamination: () => { },\n    deleteExamination: () => { },\n    getPDF: () => {},\n})\n\nexport const useExaminationContext = () => useContext(ExaminationContext)\n\nconst ExaminationProvider = ({ children }) => {\n    const { fetchData } = useFetchContext()\n\n\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const getPDF = async (examId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        fetchData(`/api/admin/exams/${examId}/createPdf`, null, (data) => {\n            getMessage(data.messageSK)\n            \n            setTimeout(() => {\n                const win = window.open(`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/pdf/${data.filename}`, \"_blank\", \"noreferrer noopener\");\n                win?.focus();\n            }, 100)\n            setIsLoading(false)\n\n        }, \"POST\")\n    }\n\n    const createExamination = (examsToAdd, callback = () => {}) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        // console.log(examSchema)\n        // console.log(examsToAdd)\n\n        fetchData(\"/api/admin/exams/\", examsToAdd, (data) => {\n            console.log(\"CREATE new examination\")\n            console.log(data)\n            setIsLoading(false)\n\n            if (data.exam) {\n                callback(data)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        }, \"POST\")\n\n    }\n\n    const updateExamination = async (examToUpdate, examId, callback = () => {}) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        fetchData(`/api/admin/exams/${examId}`, examToUpdate, (data) => {\n            console.log(\"UPDATE existed examination\")\n            console.log(data)\n            setIsLoading(false)\n\n            if (data.exam) {\n                callback(data)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        }, \"PATCH\")\n\n    }\n\n    const deleteExamination = async (examId, callback = () => {}) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        fetchData(`/api/admin/exams/${examId}`, null, (data) => {\n            console.log(\"DELETE existed examination\")\n            console.log(data)\n            setIsLoading(false)\n\n            if (data.exam) {\n                callback(data)\n                closeModal()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        }, \"DELETE\")\n    }\n\n    return (\n        <ExaminationContext.Provider\n            value={{\n                createExamination,\n                updateExamination,\n                deleteExamination,\n                getPDF\n            }}\n        >\n            {children}\n        </ExaminationContext.Provider>\n    )\n}\n\nexport default ExaminationProvider","/app/src/context/analytics/analytics.context.jsx",[],"/app/src/context/order/order.context.jsx",[],"/app/src/sections/orders/orders.section.jsx",["812"],"import React, { useState, useContext, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\n\nimport { LoadingModalContext } from \"../../context/loading-modal/loading-modal.contenxt\"\n\nimport SectionHeader from \"../../components/section-header/section-header.component\"\nimport SectionNavbar from \"../../components/section-navbar/section-navbar.component\"\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\n// import OrderDeligateModal from '../../components/order-deligate-modal/order-deligate-modal.component'\nimport Popup from \"../../components/popup/pop-up.component\"\nimport ListArrows from \"../../components/list-arrows/list-arrows.component\"\n\nimport { GoArrowSmallDown, GoArrowSmallUp } from \"react-icons/go\"\n\nimport { useFetchByQuery } from \"../../hooks/useFetch\"\n\nimport { tabItems } from \"../../context/orders/orders.utils\"\n\nimport { FixedContainer, FlexContainer } from \"../../global.styles\"\n\nimport {\n\tTableHead,\n\tOrdersTable,\n\tTableCol,\n\tIconContainer,\n\tOrderOverviewRow,\n} from \"./orders.styles\"\n\nconst OrdersSection = () => {\n\tconst { push } = useHistory()\n\tconst { closeModal, isLoading, message, showModal } =\n\t\tuseContext(LoadingModalContext)\n\n\tconst [searchQuery, setSearchQuery] = useState(\"\")\n\tconst [activeIndex, setActiveIndex] = useState(1)\n\tconst [orders, setOrders] = useState([])\n\tconst [fetchQueryObj, setFetchQueryObj] = useState({\n\t\tlimit: 10,\n\t\tskip: 0,\n\t\tsortBy: {\n\t\t\tdate: -1,\n\t\t},\n\t\tfilters: {\n\t\t\tfinished: false,\n\t\t},\n\t})\n\n\tconst {\n\t\tisLoading: isFetching,\n\t\tresponse,\n\t\trefetch,\n\t} = useFetchByQuery(\"api/admin/orders/filter\", fetchQueryObj)\n\n\tconst handleRefetch = () => {\n\t\trefetch()\n\t}\n\n\tconst handleIndexChange = (idx) => {\n\t\tsetActiveIndex(idx)\n\t\tif (idx === 1) {\n\t\t\tsetFetchQueryObj({\n\t\t\t\tlimit: 10,\n\t\t\t\tskip: 0,\n\t\t\t\tsortBy: {\n\t\t\t\t\tdate: -1,\n\t\t\t\t},\n\t\t\t\tfilters: {\n\t\t\t\t\tfinished: false,\n\t\t\t\t},\n\t\t\t})\n\t\t} else if (idx === 2) {\n\t\t\tsetFetchQueryObj({\n\t\t\t\tlimit: 10,\n\t\t\t\tskip: 0,\n\t\t\t\tsortBy: {\n\t\t\t\t\tdate: -1,\n\t\t\t\t},\n\t\t\t\tfilters: {\n\t\t\t\t\tfinished: true,\n\t\t\t\t},\n\t\t\t})\n\t\t} else if (idx === 3) {\n\t\t\tsetFetchQueryObj({\n\t\t\t\tlimit: 10,\n\t\t\t\tskip: 0,\n\t\t\t\tsortBy: {\n\t\t\t\t\tdate: -1,\n\t\t\t\t},\n\t\t\t\tfilters: {\n\t\t\t\t\tstatus: \"cancelled\",\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t\thandleRefetch()\n\t}\n\n\tconst handleSearch = () => {\n\t\tif (searchQuery !== \"\") {\n\t\t\tsetFetchQueryObj((prevValue) => ({\n\t\t\t\t// ...prevValue,\n\t\t\t\t// sortBy: {\n\t\t\t\t//     date: -1\n\t\t\t\t// },\n\t\t\t\tfilters: {\n\t\t\t\t\tcustomId: Number(searchQuery),\n\t\t\t\t},\n\t\t\t}))\n\t\t}\n\t\trefetch()\n\t}\n\n\tconst getNextPage = () => {\n\t\tif (orders.length < 10) return\n\t\tsetFetchQueryObj((prevValue) => ({\n\t\t\t...prevValue,\n\t\t\tskip: prevValue.skip + 10,\n\t\t}))\n\t\trefetch()\n\t}\n\n\tconst getPrevPage = () => {\n\t\tif (fetchQueryObj.skip === 0) return\n\t\tsetFetchQueryObj((prevValue) => ({\n\t\t\t...prevValue,\n\t\t\tskip: prevValue.skip - 10,\n\t\t}))\n\t\trefetch()\n\t}\n\n\tuseEffect(() => {\n\t\tif (searchQuery === \"\") {\n\t\t\tif (activeIndex === 1) {\n\t\t\t\tsetFetchQueryObj({\n\t\t\t\t\tlimit: 10,\n\t\t\t\t\tskip: 0,\n\t\t\t\t\tsortBy: {\n\t\t\t\t\t\tdate: -1,\n\t\t\t\t\t},\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\tfinished: false,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t} else if (activeIndex === 2) {\n\t\t\t\tsetFetchQueryObj({\n\t\t\t\t\tlimit: 10,\n\t\t\t\t\tskip: 0,\n\t\t\t\t\tsortBy: {\n\t\t\t\t\t\tdate: -1,\n\t\t\t\t\t},\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\tfinished: true,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t} else if (activeIndex === 3) {\n\t\t\t\tsetFetchQueryObj({\n\t\t\t\t\tlimit: 10,\n\t\t\t\t\tskip: 0,\n\t\t\t\t\tsortBy: {\n\t\t\t\t\t\tdate: -1,\n\t\t\t\t\t},\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\tstatus: \"cancelled\",\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\t\t\thandleRefetch()\n\t\t}\n\t}, [searchQuery, activeIndex])\n\n\tuseEffect(() => {\n\t\tif (!isFetching) {\n\t\t\tif (response) {\n\t\t\t\tif (activeIndex === 1) {\n\t\t\t\t\tsetOrders(response?.orders)\n\t\t\t\t} else {\n\t\t\t\t\tsetOrders(response?.orders)\n\t\t\t\t}\n\t\t\t\tcloseModal()\n\t\t\t}\n\t\t}\n\t}, [isFetching, response, activeIndex, closeModal])\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tsetActiveIndex(1)\n\t\t\tsetSearchQuery(\"\")\n\t\t\tsetOrders([])\n\t\t\tsetFetchQueryObj({\n\t\t\t\tlimit: 10,\n\t\t\t\tskip: 0,\n\t\t\t\tsortBy: {\n\t\t\t\t\tdate: -1,\n\t\t\t\t},\n\t\t\t\tfilters: {\n\t\t\t\t\tfinished: false,\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t}, [])\n\n\tconsole.log(orders)\n\n\treturn (\n\t\t<section>\n\t\t\t{showModal && (\n\t\t\t\t<Popup loading={isLoading} title={message} close={closeModal} />\n\t\t\t)}\n\t\t\t<SectionHeader\n\t\t\t\tsearchQuery={searchQuery}\n\t\t\t\thandleSearch={handleSearch}\n\t\t\t\thandleChange={(e) => setSearchQuery(e.target.value)}\n\t\t\t\thandleAddButton={() => push(\"/dashboard/objednavky/nova-objednavka\")}\n\t\t\t\ttitle=\"Zákazky\"\n\t\t\t/>\n\n\t\t\t<FlexContainer>\n\t\t\t\t<FixedContainer>\n\t\t\t\t\t<SectionNavbar\n\t\t\t\t\t\titems={tabItems}\n\t\t\t\t\t\tactiveIndex={activeIndex}\n\t\t\t\t\t\tsetActiveIndex={handleIndexChange}\n\t\t\t\t\t/>\n\t\t\t\t</FixedContainer>\n\t\t\t</FlexContainer>\n\n\t\t\t<ScrollContainer>\n\t\t\t\t<OrdersTable>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableCol>ID</TableCol>\n\t\t\t\t\t\t<TableCol\n\t\t\t\t\t\t\tclickable\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFetchQueryObj((prevObj) => ({\n\t\t\t\t\t\t\t\t\t...fetchQueryObj,\n\t\t\t\t\t\t\t\t\tsortBy: {\n\t\t\t\t\t\t\t\t\t\tdate: prevObj?.sortBy?.date === 1 ? -1 : 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\thandleRefetch()\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tDátum{\" \"}\n\t\t\t\t\t\t\t\t{fetchQueryObj?.sortBy?.date === 1 ? (\n\t\t\t\t\t\t\t\t\t<IconContainer>\n\t\t\t\t\t\t\t\t\t\t<GoArrowSmallDown />\n\t\t\t\t\t\t\t\t\t</IconContainer>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<IconContainer>\n\t\t\t\t\t\t\t\t\t\t<GoArrowSmallUp />\n\t\t\t\t\t\t\t\t\t</IconContainer>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t<TableCol>Prevádzka</TableCol>\n\t\t\t\t\t\t<TableCol>Meno</TableCol>\n\t\t\t\t\t\t<TableCol>Tel. číslo</TableCol>\n\t\t\t\t\t\t<TableCol>Spôsob doručenia</TableCol>\n\t\t\t\t\t\t<TableCol>Status</TableCol>\n\t\t\t\t\t\t<TableCol>Možnosti</TableCol>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t{orders?.map((order, idx) => (\n\t\t\t\t\t\t<OrderOverviewRow key={idx} order={order} refetch={handleRefetch} />\n\t\t\t\t\t))}\n\t\t\t\t</OrdersTable>\n\n\t\t\t\t<ListArrows\n\t\t\t\t\tlistItems={orders}\n\t\t\t\t\thandleClickNext={getNextPage}\n\t\t\t\t\thandleClickPrev={getPrevPage}\n\t\t\t\t/>\n\t\t\t</ScrollContainer>\n\t\t</section>\n\t)\n}\n\nexport default OrdersSection\n","/app/src/sections/e-shop/e-shop.section.jsx",["813","814"],"import React, { useState, useContext, useEffect } from \"react\"\n// import { AuthContext } from '../..//context/auth/auth.context'\nimport { WarehouseContext } from \"../../context/warehouse/warehouse.context\"\nimport { LoadingModalContext } from \"../../context/loading-modal/loading-modal.contenxt\"\nimport { useHistory } from \"react-router-dom\"\n\nimport SectionHeader from \"../../components/section-header/section-header.component\"\nimport SectionNavbar from \"../../components/section-navbar/section-navbar.component\"\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport ProductOverview from \"../../components/product-overview/product-overview.component\"\nimport Popup from \"../../components/popup/pop-up.component\"\nimport EshopFilterModal from \"../../components/modal-eshop-filter/modal-eshop-filter.component\"\n\nimport ListArrows from \"../../components/list-arrows/list-arrows.component\"\n\nimport { FixedContainer, FlexContainer } from \"../../global.styles\"\n\nimport { Filterbutton, ResetButton, PublicButton } from \"./e-shop.styles\"\n\nconst EshopSection = () => {\n\tconst { push } = useHistory()\n\tconst { closeModal, showModal, isLoading, message } =\n\t\tuseContext(LoadingModalContext)\n\tconst [productItems, setProductItems] = useState([])\n\tconst [queryFilter, setQueryFilter] = useState({\n\t\tlimit: 100,\n\t\tskip: 0,\n\t\tsortBy: {\n\t\t\tdate: -1,\n\t\t},\n\t})\n\n\tconst [showFilterModal, setShowFilterModal] = useState(false)\n\tconst [hasFilter, setHasFilter] = useState(false)\n\n\tconst [selectedProducts, setSelectedProducts] = useState([])\n\n\tconst selectProduct = (productID) => {\n\t\tsetSelectedProducts((prevValue) => [...prevValue, productID])\n\t}\n\n\tconst deselectProduct = (selectedProductsArr, productID) => {\n\t\tconst newArr = selectedProductsArr.filter(\n\t\t\t(product) => product !== productID\n\t\t)\n\n\t\tsetSelectedProducts(newArr)\n\t}\n\n\tconst {\n\t\tactivePremisesTab,\n\t\tproducts,\n\t\tretailPremisesTabs,\n\t\tgetProductsByQuery,\n\t\thandleChangePremisesTab,\n\t\tproductCategoryTypeTabs,\n\t\tactiveCategoryTypeTab,\n\t\thandleChangeCategoryTypeTab,\n\t\tdeleteProduct,\n\t\tdeleteLenses,\n\t\tdeactivateMany,\n\t\tgetFilteredLenses,\n\t\tgetLenses,\n\t\tsearchQuery: savedSearchQuery,\n\t\thandleSearchQueryChange,\n\t} = useContext(WarehouseContext)\n\n\tconst [searchQuery, setSearchQuery] = useState(\n\t\tsavedSearchQuery ? savedSearchQuery : \"\"\n\t)\n\n\tconst handleSearchQuery = (e) => {\n\t\tconst { value } = e.target\n\n\t\thandleSearchQueryChange(value)\n\t\tsetSearchQuery(value)\n\t}\n\n\tconst handleDeactivateMany = (productIDs, boolean) => {\n\t\tconst dataObj = {\n\t\t\tproducts: productIDs,\n\t\t\tactivate: boolean,\n\t\t}\n\t\tdeactivateMany(dataObj)\n\t\tsetSelectedProducts([])\n\t}\n\n\tconst applyFilter = (filter) => {\n\t\tgetProductsByQuery(filter)\n\t\tsetShowFilterModal(false)\n\t\tsetHasFilter(true)\n\t}\n\n\tconst resetFilter = () => {\n\t\tgetProductsByQuery({\n\t\t\tlimit: 100,\n\t\t\tskip: 0,\n\t\t\tsortBy: {\n\t\t\t\tdate: -1,\n\t\t\t},\n\t\t})\n\t\tsetShowFilterModal(false)\n\t\tsetHasFilter(false)\n\t}\n\n\tconst handleSearch = () => {\n\t\tif (searchQuery !== \"\") {\n\t\t\tif (activeCategoryTypeTab === 0) {\n\t\t\t\tgetProductsByQuery({\n\t\t\t\t\tquery: searchQuery,\n\t\t\t\t\tsortBy: {\n\t\t\t\t\t\tdate: -1,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\t\t\tif (activeCategoryTypeTab === 1) {\n\t\t\t\tgetFilteredLenses({\n\t\t\t\t\tquery: searchQuery,\n\t\t\t\t\t// sortBy: {\n\t\t\t\t\t//     date: -1\n\t\t\t\t\t// }\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tconst handleDeleteProduct = (id) => {\n\t\tdeleteProduct(id)\n\t}\n\n\tuseEffect(() => {\n\t\tif (!products) {\n\t\t\tgetProductsByQuery({\n\t\t\t\tlimit: 100,\n\t\t\t\tsortBy: {\n\t\t\t\t\tdate: -1,\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t\tif (products) {\n\t\t\tsetProductItems(products)\n\t\t}\n\t}, [products])\n\n\tuseEffect(() => {\n\t\tif (!searchQuery && products) {\n\t\t\tif (activeCategoryTypeTab === 0) {\n\t\t\t\tgetProductsByQuery({\n\t\t\t\t\tlimit: 100,\n\t\t\t\t\tsortBy: {\n\t\t\t\t\t\tdate: -1,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\t\t\tif (activeCategoryTypeTab === 1) {\n\t\t\t\tgetLenses({\n\t\t\t\t\tsortBy: {\n\t\t\t\t\t\tdateCreated: -1,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}, [searchQuery])\n\n\tconst getNextPage = () => {\n\t\tif (productItems.length < 100) return\n\t\tgetProductsByQuery({\n\t\t\t...queryFilter,\n\t\t\tskip: queryFilter.skip + 100,\n\t\t})\n\t\tsetQueryFilter({\n\t\t\t...queryFilter,\n\t\t\tskip: queryFilter.skip + 100,\n\t\t})\n\t}\n\n\tconst getPrevPage = () => {\n\t\tif (queryFilter.skip === 0) return\n\t\tgetProductsByQuery({\n\t\t\t...queryFilter,\n\t\t\tskip: queryFilter.skip - 100,\n\t\t})\n\t\tsetQueryFilter({\n\t\t\t...queryFilter,\n\t\t\tskip: queryFilter.skip - 100,\n\t\t})\n\t}\n\n\treturn (\n\t\t<section>\n\t\t\t{showModal && (\n\t\t\t\t<Popup loading={isLoading} title={message} close={closeModal} />\n\t\t\t)}\n\t\t\t{showFilterModal && (\n\t\t\t\t<EshopFilterModal\n\t\t\t\t\tapplyFilter={applyFilter}\n\t\t\t\t\tresetFilter={resetFilter}\n\t\t\t\t\tclose={() => setShowFilterModal(false)}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t<SectionHeader\n\t\t\t\ttitle=\"Sklad\"\n\t\t\t\tsearchQuery={searchQuery}\n\t\t\t\thandleSearch={handleSearch}\n\t\t\t\thandleChange={(e) => handleSearchQuery(e)}\n\t\t\t\thandleAddButton={() => push(\"sklad/novy-produkt\")}\n\t\t\t/>\n\n\t\t\t<FlexContainer>\n\t\t\t\t<FixedContainer>\n\t\t\t\t\t<SectionNavbar\n\t\t\t\t\t\titems={retailPremisesTabs}\n\t\t\t\t\t\tactiveIndex={activePremisesTab}\n\t\t\t\t\t\tsetActiveIndex={handleChangePremisesTab}\n\t\t\t\t\t/>\n\t\t\t\t</FixedContainer>\n\t\t\t</FlexContainer>\n\n\t\t\t<FlexContainer>\n\t\t\t\t<FixedContainer>\n\t\t\t\t\t<SectionNavbar\n\t\t\t\t\t\titems={productCategoryTypeTabs}\n\t\t\t\t\t\tactiveIndex={activeCategoryTypeTab}\n\t\t\t\t\t\tsetActiveIndex={handleChangeCategoryTypeTab}\n\t\t\t\t\t/>\n\t\t\t\t\t{selectedProducts.length > 0 && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<PublicButton\n\t\t\t\t\t\t\t\tonClick={() => handleDeactivateMany(selectedProducts, false)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tNeverejné\n\t\t\t\t\t\t\t</PublicButton>\n\t\t\t\t\t\t\t<PublicButton\n\t\t\t\t\t\t\t\tonClick={() => handleDeactivateMany(selectedProducts, true)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tVerejné\n\t\t\t\t\t\t\t</PublicButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{activeCategoryTypeTab === 0 && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{hasFilter && (\n\t\t\t\t\t\t\t\t<ResetButton onClick={resetFilter}>reset</ResetButton>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Filterbutton onClick={() => setShowFilterModal(true)}>\n\t\t\t\t\t\t\t\tFilter\n\t\t\t\t\t\t\t</Filterbutton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</FixedContainer>\n\t\t\t</FlexContainer>\n\n\t\t\t<ScrollContainer>\n\t\t\t\t{productItems.map((product, idx) => (\n\t\t\t\t\t<ProductOverview\n\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\tproduct={product}\n\t\t\t\t\t\tactivePremisesTab={activePremisesTab}\n\t\t\t\t\t\thandleUpdateButton={() => push(`sklad/${product._id}`)}\n\t\t\t\t\t\thandleDeleteButton={\n\t\t\t\t\t\t\tactiveCategoryTypeTab === 0\n\t\t\t\t\t\t\t\t? () => handleDeleteProduct(product._id)\n\t\t\t\t\t\t\t\t: () => deleteLenses(product._id)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselectProduct={selectProduct}\n\t\t\t\t\t\tdeselectProduct={deselectProduct}\n\t\t\t\t\t\tselectedProducts={selectedProducts}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\n\t\t\t\t<ListArrows\n\t\t\t\t\tlistItems={productItems}\n\t\t\t\t\thandleClickPrev={getPrevPage}\n\t\t\t\t\thandleClickNext={getNextPage}\n\t\t\t\t/>\n\t\t\t</ScrollContainer>\n\t\t</section>\n\t)\n}\n\nexport default EshopSection\n","/app/src/sections/customers/customers.section.jsx",["815","816","817"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from \"../../components/section-navbar/section-navbar.component\"\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\nimport { userTabs } from '../../utils/user.utils'\n\nimport {\n    FixedContainer,\n    FlexContainer\n} from '../../global.styles'\n\nimport {\n    TableCol,\n    TableContainer,\n    TableHead,\n    TableRow,\n    UpdateButton,\n    Container,\n    DeleteButton\n} from './customers.styles'\n\nconst CustomersSection = () => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n    const { isAdmin } = useContext(AuthContext)\n    const [userItems, setUserItems] = useState([])\n    const [activeIndex, setActiveIndex] = useState(0)\n    const [filterQuery, setFilterQuery] = useState({\n        limit: 10,\n        skip: 0,\n        filters: {\n            admin: activeIndex\n        },\n        sortBy: {\n            date: -1\n        }\n    })\n\n    const { response, isLoading, refetch } = useFetchByQuery('api/admin/users/filter', filterQuery)\n\n    const {\n        // isLoading,\n        showModal,\n        message,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            setFilterQuery({\n                limit: 10,\n                skip: 0,\n                query: searchQuery,\n                filters: {\n                    admin: activeIndex\n                },\n                sortBy: {\n                    date: -1\n                }\n            })\n            refetch()\n        }\n    }\n\n    const handleActiveIndexChange = (index) => {\n        setActiveIndex(index)\n        setFilterQuery({\n            limit: 10,\n            skip: 0,\n            filters: {\n                admin: index\n            },\n            sortBy: {\n                date: -1\n            }\n        })\n        refetch()\n    }\n\n    const getNextPage = () => {\n        if (userItems.length < 10) return\n        setFilterQuery({\n            ...filterQuery,\n            skip: filterQuery.skip + 10\n        })\n        refetch()\n\n    }\n\n    const getPrevPage = () => {\n        if (filterQuery.skip === 0) return\n        setFilterQuery({\n            ...filterQuery,\n            skip: filterQuery.skip - 10\n        })\n        refetch()\n\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n        if (response) {\n            setUserItems(response.users)\n            closeModal()\n        }\n    }, [isLoading])\n\n    useEffect(() => {\n        if (searchQuery === '') {\n            setFilterQuery({\n                limit: 10,\n                skip: 0,\n                filters: {\n                    admin: activeIndex\n                },\n                sortBy: {\n                    date: -1\n                }\n            })\n            refetch()\n        }\n    }, [searchQuery])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleSearch={handleSearch}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('zakaznici/novy-zakaznik')}\n                title=\"Zákazníci\"\n            />\n\n            <FlexContainer>\n                <FixedContainer>\n                    <SectionNavbar\n                        items={isAdmin ? userTabs : [\n                            {\n                                id: 0,\n                                name: \"Zákazníci\",\n                                filter: 0,\n                            },]}\n                        activeIndex={activeIndex}\n                        setActiveIndex={handleActiveIndexChange}\n                    />\n\n                </FixedContainer>\n            </FlexContainer>\n\n            <ScrollContainer>\n                <Container>\n                    <TableContainer>\n                        <TableHead>\n                            <TableCol>Meno a priezvisko</TableCol>\n                            <TableCol>Email</TableCol>\n                            <TableCol>Tel. číslo</TableCol>\n                            <TableCol>Možnosti</TableCol>\n                        </TableHead>\n                        {userItems && userItems.map((user, idx) => (\n                            <TableRow key={idx}>\n                                <TableCol>{user.name}</TableCol>\n                                <TableCol>{user.email}</TableCol>\n                                <TableCol>{user.phone}</TableCol>\n                                <TableCol>\n                                    <UpdateButton onClick={() => push(`zakaznici/${user._id}`)}>Upraviť</UpdateButton>\n                                    {/* <DeleteButton onClick={() => alert(\"Pekný pokus! Tu velím zatiaľ ja :)\")}>Odstrániť</DeleteButton> */}\n                                </TableCol>\n                            </TableRow>\n                        ))}\n                    </TableContainer>\n                </Container>\n\n                <ListArrows\n                    listItems={userItems}\n                    handleClickPrev={getPrevPage}\n                    handleClickNext={getNextPage}\n                />\n            </ScrollContainer>\n\n        </section>\n    )\n}\n\nexport default CustomersSection\n","/app/src/sections/product/product.section.jsx",["818","819","820","821","822","823","824","825"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ModalImage from '../../components/modal-product-image-gallery/modal-product-image-gallery.component'\nimport OldModalImage from '../../components/modal-images/modal-images.component'\nimport GetProductDataModal from '../../components/modal-get-product-data/modal-get-product-data.component'\nimport GetLensesDataModal from '../../components/modal-get-lenses-data/modal-get-lenses-data.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\nimport ProductAccessoriesForm from '../../components/product-accessories-form/product-accessories-form.component'\nimport ProductContactLensesForm from '../../components/product-contact-lenses-form/product-contact-lenses-form.component'\nimport ProductServiceForm from '../../components/product-service-form/product-service-form.component'\n\nimport { productCategories, checkParameter, formatLink } from '../../context/warehouse/warehouse.utils'\nimport { retailNames } from '../../utils/warehouse.utils'\nimport { useFetch } from '../../hooks/useFetch'\n\nimport {\n    FixedContainer\n} from '../../global.styles'\n\nimport {\n    Header,\n    CategoryContainer,\n    CategoryCheckbox,\n    SubmitButton,\n    IsPublicCheckbox,\n\n} from './product.styles'\n\nconst ProductSection = () => {\n    const { id } = useParams()\n    const { currentUser } = useContext(AuthContext)\n    const { closeModal, message, isLoading, showModal, getMessage, setShowModal } = useContext(LoadingModalContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [showImageModal, setImageModal] = useState(false)\n    const [showOldImageModal, setOldImageModal] = useState(false)\n    const [isGetProductDataModalVisible, setIsGetProductDataModalVisible] = useState(false)\n    const [isGetLensesDataModalVisible, setIsGetLensesDataModalVisible] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const {\n        eanCode,\n        product,\n        lenses,\n        contactLensesParameters,\n        glassesParameters,\n        handleLensesChange,\n        handleLensesParameterChange,\n        createProduct,\n        updateProduct,\n        resetProduct,\n        resetLenses,\n        resetContactLenses,\n        resetGlassesParameters,\n        createLenses,\n        updateLenses,\n        handleProductChange,\n        handleProductAvailableChange,\n        getEanCode,\n        handleAddNewParameter,\n        handleContactLensesParameterChange,\n        handleGlassesParameterChange,\n        handleGlassesParameterSpecsChange,\n        handleGlassesSizeChange,\n        getSingleProduct,\n        getSingleLenses\n    } = useContext(WarehouseContext)\n\n    const [hasChanged, setHasChanged] = useState(false)\n    const [productObj, setProductObj] = useState({\n        // subbrand: \"\",\n        outlet: false,\n        outletPercentage: 70\n    })\n\n\n    const { response, isLoading: isLoadingFilters, refetch } = useFetch(`api/store/products/${productObj?.type}/filters`, !productObj?.type, \"GET\")\n    const [filters, setFilters] = useState(null)\n\n    const handleGetProductData = (boolean) => {\n        setIsGetProductDataModalVisible(boolean)\n    }\n\n    const handleGetLensesData = (boolean) => {\n        setIsGetLensesDataModalVisible(boolean)\n    }\n\n    const handleChangeType = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (!isUpdating) {\n            if (productObj.type === 0) {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetLenses()\n                        setSelectedImage('')\n                    } else {\n                        return\n                    }\n                }\n            } else {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetProduct()\n                        resetContactLenses()\n                        resetGlassesParameters()\n                        setSelectedImage('')\n                    } else {\n                        return\n                    }\n                }\n            }\n        }\n        setProductObj({\n            [name]: value\n        })\n\n    }\n    // console.count(\"PRODUCT OBJ\")\n    // console.log(productObj)\n    // console.count(\"PRODUCT OBJ\")\n\n    const handleChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (productObj.type === 0) {\n            handleLensesChange(e)\n        }\n\n        if (productObj.type === 6) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 5) {\n            handleProductChange(e)\n        }\n\n        if (productObj.type === 4) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 3) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 2) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 1) {\n            handleProductChange(e)\n        }\n\n\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        if (isUpdating) {\n            if (name === 'name') {\n                setProductObj({\n                    ...productObj,\n                    [name]: value,\n                    link: formatLink(value)\n                })\n                return\n            }\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParametersChange = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterChange(e)\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleSpecsChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterSpecsChange(e)\n\n        if (value === '') {\n            if(!productObj.specs) return\n            delete productObj.specs[name]\n\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSpecsSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleGlassesSizeChange(e, idx)\n\n        if (value === '') {\n            if (productObj.specs[name].length > 1) {\n                arr[idx] = 1001\n\n                const firstIndex = arr[0]\n                const canDeleteSpecs = arr.map(value => {\n                    if (firstIndex !== value) {\n                        return false\n                    } else {\n                        return true\n                    }\n                })\n\n                const verdict = canDeleteSpecs.find(value => value === false)\n\n                if (verdict === false) {\n                    setProductObj({\n                        ...productObj,\n                        specs: {\n                            ...productObj.specs,\n                            [name]: arr\n                        }\n                    })\n                } else {\n                    delete productObj.specs[name]\n                }\n\n            }\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleProductAvailableChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleContactLensesChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleContactLensesParameterChange(e, idx)\n\n        if (value === '') {\n            if (productObj.contactLenses[name].length > 1) {\n                arr.splice(idx, 1)\n                setProductObj({\n                    ...productObj,\n                    contactLenses: {\n                        ...productObj.contactLenses,\n                        [name]: arr\n                    }\n                })\n            } else {\n                delete productObj.contactLenses[name]\n            }\n            if (Object.keys(productObj.contactLenses).length === 0) {\n                delete productObj[\"contactLenses\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            contactLenses: {\n                ...productObj.contactLenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleLensesParameterChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleSelectImage = (imgId = '', bonusImages, img) => {\n        setHasChanged(true)\n        setSelectedImage(img)\n        setProductObj({\n            ...productObj,\n            image: imgId,\n            ...(bonusImages) && { bonusImages }\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        let newProductObj = {\n            ...productObj,\n            ...(productObj.type === 0) && { lensType: lenses.lensType },\n            ...(productObj.type === 0) && { dioptric: lenses.dioptric }\n        }\n\n        // console.log(\"PRODUCT OBJECT\")\n        // console.log(lensObj)\n        // console.log(productObj)\n\n\n\n        if (currentUser.admin < 2) {\n            if (newProductObj.available) {\n                newProductObj = {\n                    ...productObj,\n                    available: productObj.available[currentUser.premises]\n                }\n            }\n        } else {\n            if (newProductObj.available) {\n                newProductObj = {\n                    ...productObj,\n                    available: newProductObj.available ? newProductObj.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0, 0]\n                }\n            }\n        }\n\n        if (isUpdating) {\n            if(newProductObj.image === '') delete newProductObj[\"image\"]\n            if(newProductObj.image === '') delete newProductObj[\"image\"]\n            if(newProductObj?.specs?.size?.length < 1) delete newProductObj?.specs[\"size\"]\n\n            if (newProductObj.type === 0) {\n                setHasChanged(false)\n                delete newProductObj['link']\n                delete newProductObj['type']\n                const updatedObj = {\n                    ...newProductObj,\n                    // type: newProductObj.lensType,\n                    eanCode: lenses.eanCode\n                }\n                // delete updatedObj['lensType']\n                updateLenses(updatedObj, id)\n                return\n            } else if (newProductObj.type === 3) {\n                setHasChanged(false)\n                delete newProductObj['type']\n                updateProduct({ ...newProductObj, contactLenses: {} })\n                return\n            } else if (newProductObj.type === 6) {\n                setHasChanged(false)\n                delete newProductObj['type']\n                delete newProductObj['image']\n                delete newProductObj['bonusImages']\n                updateProduct({ ...newProductObj })\n                return\n            } else {\n                setHasChanged(false)\n                delete newProductObj['type']\n\n                const obj = {\n                    ...newProductObj,\n                    ...(newProductObj.bonusImages) && { bonusImages: newProductObj.bonusImages.map(img => img._id) }\n                }\n\n                updateProduct(obj)\n                return\n            }\n        } else {\n            if (productObj.type === 0) {\n                setHasChanged(false)\n                delete newProductObj['type']\n                const updatedObj = {\n                    ...newProductObj,\n                    ...(!lenses.dioptric) && { \n                        dioptersRange: [0, 0],\n                        cylinderRange: [0, 0],\n                    }\n                    // type: newProductObj.lensType\n                }\n                // delete updatedObg['lensType']\n\n                createLenses(updatedObj)\n            }\n            if (newProductObj.type === 6 || newProductObj.type === 5 || newProductObj.type === 4 || newProductObj.type === 3 || newProductObj.type === 2 || newProductObj.type === 1) {\n                if (!newProductObj.name || !newProductObj.price) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    delete newProductObj['_id']\n\n                    const obj = {\n                        ...newProductObj,\n                        ...(newProductObj.bonusImages) && { bonusImages: newProductObj.bonusImages.map(img => img._id) }\n                    }\n\n\n                    createProduct(obj)\n                }\n            }\n        }\n\n\n    }\n\n    const [lensObj, setLensObj] = useState(null)\n\n    const fillProductData = (productData) => {\n\n        setLensObj({\n            ...productObj,\n            ...productData\n        })\n\n        setProductObj({\n            ...productObj,\n            ...productData\n        })\n    }\n\n    useEffect(() => {\n        if (!productObj?.type) return\n        setFilters(null)\n        refetch()\n    }, [productObj?.type])\n\n    useEffect(() => {\n        if (productObj.type === 0) {\n            if (productObj.lensType) return\n            handleChange({\n                target: {\n                    name: \"lensType\",\n                    value: lenses?.lensType\n                }\n            })\n        }\n    }, [lenses.lensType])\n\n    useEffect(() => {\n        if (isLoadingFilters) return\n        if (response?.filters) {\n            setFilters(response?.filters)\n        }\n    }, [isLoadingFilters])\n\n    useEffect(() => {\n        if (id === \"novy-produkt\") {\n            if (!eanCode) {\n                getEanCode()\n            } else {\n                if (productObj.type !== undefined && !productObj.eanCode) {\n                    handleChange({\n                        target: {\n                            name: \"eanCode\",\n                            value: eanCode\n                        }\n                    })\n                }\n            }\n        }\n    }, [id, eanCode, productObj.type, productObj.eanCode, product.type])\n\n    useEffect(() => {\n        if (id !== 'novy-produkt') {\n            getSingleProduct(id, (data) => {\n                handleSelectImage(data?.product?.image?._id, data.product.bonusImages, data.product.image)\n                setProductObj(prevValue => ({\n                    ...prevValue,\n                    type: data.product.type,\n                    outlet: data.product.outlet,\n                    outletPercentage: data.product.outletPercentage\n                }))\n            })\n            setIsUpdating(true)\n            if (!productObj.type) {\n                handleChangeType({\n                    target: {\n                        name: \"type\",\n                        value: product.type\n                    }\n                })\n\n            }\n        }\n    }, [id,])\n\n    useEffect(() => {\n        // if (product.image) {\n        //     setSelectedImage(product.image)\n        // }\n        if (lenses.image) {\n            setSelectedImage(lenses.image)\n        }\n    }, [lenses.image])\n\n    useEffect(() => {\n        return () => {\n            resetProduct()\n            resetLenses()\n            resetContactLenses()\n            resetGlassesParameters()\n            setProductObj({})\n            setSelectedImage(null)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <section>\n            <Prompt\n                when={hasChanged}\n                message=\"Chcete opustiť formulár?\"\n            />\n\n            {isGetLensesDataModalVisible && <GetLensesDataModal close={() => handleGetLensesData(false)} getSingleProduct={getSingleProduct} productObj={productObj} setProductObj={setProductObj} getSingleLenses={getSingleLenses} fillProductData={fillProductData} />}\n            {isGetProductDataModalVisible && <GetProductDataModal close={() => setIsGetProductDataModalVisible(false)} getSingleProduct={getSingleProduct} productObj={productObj} setProductObj={setProductObj} />}\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={handleSelectImage} />}\n            {showOldImageModal && <OldModalImage close={() => setOldImageModal(false)} setImage={handleSelectImage} />}\n            <Header>\n                <FixedContainer>\n\n                    <div>\n                        <h1>{isUpdating ? \"Upraviť produkt\" : \"Nový produkt\"}</h1>\n                    </div>\n                    <div>\n                        <IsPublicCheckbox\n                            label=\"Verejné\"\n                            // value={product.ehop}\n                            name='eshop'\n                            isActive={productObj.type === 0 ? lenses.eshop : product.eshop}\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"eshop\",\n                                    value: productObj.type === 0 ? !lenses.eshop : !product.eshop\n                                }\n                            })}\n                        />\n                        <SubmitButton onClick={handleSubmit}>{isUpdating ? \"Upraviť\" : \"Vytvoriť\"}</SubmitButton>\n                    </div>\n                </FixedContainer>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating && <CategoryContainer>\n                    <h3>Aký produkt chcete pridať?</h3>\n                    {productCategories.map((category, idx) => (\n                        <CategoryCheckbox\n                            key={idx}\n                            label={category.name}\n                            value={category.value}\n                            name='type'\n                            isActive={category.value === productObj.type}\n                            handleClick={() => handleChangeType({\n                                target: {\n                                    name: \"type\",\n                                    value: category.value\n                                }\n                            })}\n                        />\n                    ))}\n                </CategoryContainer>}\n\n                {productObj.type === 0 && (\n                    <ProductLensesForm\n                        lenses={lenses}\n                        selectedImage={selectedImage}\n                        setImageModal={setOldImageModal}\n                        handleChange={handleChange}\n                        handleParameterChange={handleParameterChange}\n                        checkParameter={checkParameter}\n                        filters={filters}\n                        handleGetProductData={handleGetLensesData}\n                    />\n                )}\n\n                {productObj.type === 6 && (\n                    <ProductServiceForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        handleChange={handleChange}\n                        selectedImage={selectedImage}\n                        setImageModal={setImageModal}\n                        filters={filters}\n                    />\n                )}\n\n                {productObj.type === 5 && (\n                    <ProductAccessoriesForm\n                        product={product}\n                        productObj={productObj}\n                        isUpdating={isUpdating}\n                        currentUser={currentUser}\n                        retailNames={retailNames}\n                        selectedImage={selectedImage}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        filters={filters}\n                    />\n                )}\n\n                {productObj.type === 3 && (\n                    <ProductContactLensesForm\n                        product={product}\n                        productObj={productObj}\n\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        contactLensesParameters={contactLensesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAddNewParameter={handleAddNewParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        handleContactLensesChange={handleContactLensesChange}\n                        filters={filters}\n                        handleGetProductData={handleGetProductData}\n                    />\n                )}\n\n                {(productObj.type === 1 || productObj.type === 2 || productObj.type === 4) && (\n                    <ProductGlassesForm\n                        product={product}\n                        productObj={productObj}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        glassesParameters={glassesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleSpecsChange={handleSpecsChange}\n                        handleAvailableChange={handleAvailableChange}\n                        handleGlassesSpecsSizeChange={handleGlassesSpecsSizeChange}\n                        handleGlassesParametersChange={handleGlassesParametersChange}\n                        filters={filters}\n                        handleGetProductData={handleGetProductData}\n                    />\n                )}\n\n            </ScrollContainer>\n\n        </section >\n    )\n}\n\nexport default ProductSection\n","/app/src/sections/customer-profile/customer-profile.section.jsx",["826","827","828"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { AuthContext } from \"../../context/auth/auth.context\"\nimport { UserContext } from \"../../context/user/user.context\"\nimport { LoadingModalContext } from \"../../context/loading-modal/loading-modal.contenxt\"\nimport { useParams } from \"react-router-dom\"\n\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport UserForm from \"../../components/user-form/user-form.component\"\nimport NewUserForm from \"../../components/new-user-form/new-user-form.component\"\n\nimport Popup from \"../../components/popup/pop-up.component\"\n\nimport { FixedContainer } from \"../../global.styles\"\n\nimport {\n\tHeader,\n\tDeleteProfileButton,\n\t// Name,\n\tSaveButton,\n} from \"./customer-profile.styles\"\n\nconst CustomerProfile = () => {\n\tconst { id } = useParams()\n\tconst { isAdmin, isOptometrist } = useContext(AuthContext)\n\tconst {\n\t\tcloseModal,\n\t\tisLoading,\n\t\tmessage,\n\t\tshowModal,\n\t\tsetShowModal,\n\t\tgetMessage,\n\t} = useContext(LoadingModalContext)\n\n\tconst {\n\t\tisUpdating,\n\t\tuser,\n\t\tgetUser,\n\t\thandleChange,\n\t\thandleParameterChange,\n\t\thandleCompanyChange,\n\t\tupdateUser,\n\t\tresetUser,\n\t\tformToShow,\n\t\tswitchFormButtons,\n\t\ttoggleUserForm,\n\t\tcreateUser,\n\t\tdeleteUser,\n\t} = useContext(UserContext)\n\n\tconst [userObj, setUserObj] = useState({})\n\t// const [hasChanges, setHasChanges] = useState(false)\n\n\tconst handleUserChange = (e) => {\n\t\t// setHasChanges(true)\n\t\tconst { name, value } = e.target\n\n\t\thandleChange(e)\n\n\t\tif (value === \"\") {\n\t\t\tdelete userObj[name]\n\t\t\t// delete userObj.company[]\n\t\t\treturn\n\t\t}\n\n\t\tsetUserObj({\n\t\t\t...userObj,\n\t\t\t[name]: value,\n\t\t})\n\t}\n\n\tconst handleLensesParameterChange = (e, idx) => {\n\t\t// setHasChanges(true)\n\n\t\tconst { name, value } = e.target\n\t\tlet arr = user.lenses[name]\n\t\tarr[idx] = value\n\n\t\thandleParameterChange(e, idx)\n\t\tsetUserObj({\n\t\t\t...userObj,\n\t\t\tlenses: {\n\t\t\t\t...user.lenses,\n\t\t\t\t[name]: arr,\n\t\t\t},\n\t\t})\n\t}\n\n\tconst handleCompanyAddressChange = (e) => {\n\t\t// setHasChanges(true)\n\n\t\tconst { name, value } = e.target\n\t\thandleCompanyChange(e)\n\n\t\tif (value === \"\") {\n\t\t\tdelete userObj.company[name]\n\t\t\tif (Object.keys(userObj.company).length === 0) {\n\t\t\t\tdelete userObj[\"company\"]\n\t\t\t}\n\t\t\t// delete userObj.company[]\n\t\t\treturn\n\t\t}\n\n\t\tsetUserObj({\n\t\t\t...userObj,\n\t\t\tcompany: {\n\t\t\t\t...userObj.company,\n\t\t\t\t[name]: value,\n\t\t\t},\n\t\t})\n\t}\n\n\t// console.log(userObj)\n\n\tconst handleSubmit = (e, path) => {\n\t\te.preventDefault()\n\t\t// setHasChanges(false)\n\n\t\tif (id === \"novy-zakaznik\") {\n\t\t\tif (userObj.fName || userObj.lName) {\n\t\t\t\tdelete userObj[\"fName\"]\n\t\t\t\tdelete userObj[\"lName\"]\n\t\t\t}\n\n\t\t\tif (formToShow === 1) {\n\t\t\t\tconst newUserObj = {\n\t\t\t\t\t...userObj,\n\t\t\t\t\tadmin: userObj.admin || 1,\n\t\t\t\t}\n\t\t\t\tcreateUser(newUserObj, path)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (!userObj?.phone) {\n\t\t\t\tsetShowModal(true)\n\t\t\t\tgetMessage(\"Tel. číslo je povinné\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tcreateUser(userObj, path)\n\t\t} else {\n\t\t\tif (userObj.fName || userObj.lName) {\n\t\t\t\tdelete userObj[\"fName\"]\n\t\t\t\tdelete userObj[\"lName\"]\n\t\t\t} else if (!userObj.fName || !userObj.lName) {\n\t\t\t\tdelete userObj[\"name\"]\n\t\t\t}\n\n\t\t\tif (userObj.company) {\n\t\t\t\tconst newUserObj = {\n\t\t\t\t\t...userObj,\n\t\t\t\t\tcompany: {\n\t\t\t\t\t\t...user.company,\n\t\t\t\t\t\t...userObj.company,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tupdateUser(newUserObj, user._id)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tupdateUser(userObj, user._id)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tsetUserObj({\n\t\t\t...userObj,\n\t\t\tname: user.fName + \" \" + user.lName,\n\t\t})\n\t}, [userObj.fName, userObj.lName])\n\n\tuseEffect(() => {\n\t\tif (id !== \"novy-zakaznik\") {\n\t\t\tgetUser(id)\n\t\t}\n\t}, [id])\n\n\t//unmount\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tresetUser()\n\t\t\thandleChange({\n\t\t\t\ttarget: {\n\t\t\t\t\tname: \"lenses\",\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tcylinder: [1001, 1001, 1001, 1001],\n\t\t\t\t\t\tcylinderAxes: [1001, 1001, 1001, 1001],\n\t\t\t\t\t\tdiopters: [1001, 1001, 1001, 1001],\n\t\t\t\t\t\tdistance: [1001, 1001, 1001, 1001],\n\t\t\t\t\t\taddition: [1001, 1001, 1001, 1001],\n\t\t\t\t\t\tbasis: [1001, 1001, 1001, 1001],\n\t\t\t\t\t\tprism: [1001, 1001, 1001, 1001],\n\t\t\t\t\t\tvys: [1001, 1001, 1001, 1001],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<section>\n\t\t\t{showModal && (\n\t\t\t\t<Popup loading={isLoading} title={message} close={closeModal} />\n\t\t\t)}\n\t\t\t{/* <Prompt\n                when={hasChanges}\n                message={\"Chcete opustiť tuto stránku?\"}\n            /> */}\n\t\t\t<form>\n\t\t\t\t<Header>\n\t\t\t\t\t<FixedContainer>\n\t\t\t\t\t\t<h1>Profil</h1>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{isUpdating && (\n\t\t\t\t\t\t\t\t<DeleteProfileButton\n\t\t\t\t\t\t\t\t\tonClick={() => deleteUser(user._id)}\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tVymazať\n\t\t\t\t\t\t\t\t</DeleteProfileButton>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!isUpdating && (\n\t\t\t\t\t\t\t\t<SaveButton onClick={(e) => handleSubmit(e, \"profile\")}>\n\t\t\t\t\t\t\t\t\tVytvoriť a prejsť na profil\n\t\t\t\t\t\t\t\t</SaveButton>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!isUpdating && !(formToShow === 1) && (\n\t\t\t\t\t\t\t\t<SaveButton onClick={(e) => handleSubmit(e, \"order\")}>\n\t\t\t\t\t\t\t\t\tVytvoriť a prejsť na objednávku\n\t\t\t\t\t\t\t\t</SaveButton>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<SaveButton onClick={(e) => handleSubmit(e, \"customers\")}>\n\t\t\t\t\t\t\t\t{isUpdating ? \"Uložiť zmeny\" : \"Vytvoriť\"}\n\t\t\t\t\t\t\t</SaveButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</FixedContainer>\n\t\t\t\t</Header>\n\n\t\t\t\t<ScrollContainer>\n\t\t\t\t\t{isUpdating ? (\n\t\t\t\t\t\t<UserForm\n\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\tisAdmin={isAdmin}\n\t\t\t\t\t\t\tisUpdating={isUpdating}\n\t\t\t\t\t\t\tisOptometrist={isOptometrist}\n\t\t\t\t\t\t\thandleChange={handleUserChange}\n\t\t\t\t\t\t\thandleParameterChange={handleLensesParameterChange}\n\t\t\t\t\t\t\thandleCompanyChange={handleCompanyAddressChange}\n\t\t\t\t\t\t\tisCustomer={user.admin === 0 ? true : false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<NewUserForm\n\t\t\t\t\t\t\tisAdmin={isAdmin}\n\t\t\t\t\t\t\thandleParameterChange={handleLensesParameterChange}\n\t\t\t\t\t\t\tformToShow={formToShow}\n\t\t\t\t\t\t\tswitchFormButtons={switchFormButtons}\n\t\t\t\t\t\t\ttoggleUserForm={toggleUserForm}\n\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\thandleChange={handleUserChange}\n\t\t\t\t\t\t\thandleCompanyChange={handleCompanyAddressChange}\n\t\t\t\t\t\t\tresetUser={resetUser}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</ScrollContainer>\n\t\t\t</form>\n\t\t</section>\n\t)\n}\n\nexport default CustomerProfile\n","/app/src/sections/analytics/analytics.section.jsx",["829","830","831"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AnalyticsContext } from '../../context/analytics/analytics.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../../context/auth/auth.context'\n\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport UpdateRegistryModal from '../../components/modal-update-registry/modal-update-registry.component'\n\nimport { retailNamesTabs } from '../../utils/warehouse.utils'\nimport { analyticsTabItems } from '../../utils/analytics.utils'\n\nimport {\n    FixedContainer,\n    FlexContainer\n} from '../../global.styles'\n\nimport {\n    Header,\n    GridContainer,\n    StatsContainer,\n    StatsGrid,\n    ReportContainer,\n    SubmitButton,\n    TypeCheckbox,\n    TwoColContainer,\n    CheckboxContainer,\n    Container,\n    PaymentsContainer,\n    UpdateRegistryButton,\n    RegistryContainer,\n    HeaderContainer,\n    RegistryCash,\n    TakeOutCash\n} from './analytics.styles'\n\nconst AnalyticsSection = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { stats: storeData, isAdmin, currentUser } = useContext(AuthContext)\n    const { stats, getAnalytics, generateReport } = useContext(AnalyticsContext)\n    const premisesTabs = isAdmin ? analyticsRetailNames : analyticsRetailNames.filter(tab => tab.id === currentUser.premises || tab.id === 0)\n\n    const [selectedPremise, setSelectedPremise] = useState(0)\n    const [registryOption, setRegistryOption] = useState('withdraw')\n\n    const [activePremiseIndex, setActivePremiseIndex] = useState(currentUser.premises || 0)\n    const [activeIndex, setActiveIndex] = useState(2)\n\n    const [activeTabStats, setActiveTabStats] = useState(null)\n\n    const [reportObj, setReportObj] = useState({})\n    const [activeReportType, setActiveReportType] = useState(reportTypes[0].value)\n    const [activeRetailType, setActiveRetailType] = useState(retailTypes[0].value)\n\n    const [fitlterQuery, setFilterQuery] = useState({})\n\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const [isUpdateRegistryVisible, setIsUpdateRegistryVisible] = useState(false)\n\n    const handleIsUpdateRegistryVisible = (boolean, premise, option) => {\n        setIsUpdateRegistryVisible(boolean)\n        setSelectedPremise(premise)\n        setRegistryOption(option)\n    }\n\n    const handleChangeActiveIndex = idx => {\n        setActiveIndex(idx)\n        setFilterQuery({})\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete reportObj[name]\n            setReportObj({\n                ...reportObj,\n            })\n            return\n        }\n\n        setReportObj({\n            ...reportObj,\n            [name]: value\n        })\n    }\n    const handleFitlterQueryChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete fitlterQuery[name]\n            setFilterQuery({\n                ...fitlterQuery,\n            })\n            return\n        }\n\n        setFilterQuery({\n            ...fitlterQuery,\n            [name]: value\n        })\n    }\n\n    const handleSubmitReport = () => {\n\n        if (!reportObj?.from && !reportObj?.to) {\n            const reportQueryObj = {\n                type: activeReportType,\n                timespan: \"all\",\n                ...(activeReportType !== \"users\") && {\n                    filters: {\n                        premises: activeRetailType\n                    }\n                }\n            }\n            generateReport(reportQueryObj)\n        } else {\n            const formatedFrom = reportObj?.from.split(\"-\").reverse().join(\"/\")\n            const formatedto = reportObj?.to.split(\"-\").reverse().join(\"/\")\n\n            const reportQueryObj = {\n                type: activeReportType,\n                timespan: activeReportType === 'users' ? \"all\" : `${formatedFrom}:${formatedto}`,\n                ...(activeReportType !== \"users\") && {\n                    filters: {\n                        premises: activeRetailType\n                    }\n                }\n            }\n\n            generateReport(reportQueryObj)\n        }\n\n    }\n\n    useEffect(() => {\n        if (!fitlterQuery?.from || !fitlterQuery?.to) return\n        const formatedFrom = fitlterQuery?.from.split(\"-\").reverse().join(\"/\")\n        const formatedto = fitlterQuery?.to.split(\"-\").reverse().join(\"/\")\n        getAnalytics(`${formatedFrom}:${formatedto}`)\n\n\n    }, [fitlterQuery])\n\n    useEffect(() => {\n        setActiveRetailType(retailTypes[0].value)\n    }, [activeReportType])\n\n    useEffect(() => {\n        getAnalytics(analyticsTabItems[activeIndex - 1].value)\n    }, [activeIndex, refetchIndex])\n\n    useEffect(() => {\n        if (stats) {\n            setActiveTabStats(stats?.find(tab => tab._id.premises === activePremiseIndex))\n        }\n    }, [stats, activePremiseIndex])\n\n    console.log(stats)\n\n    useEffect(() => {\n        return () => {\n            setActivePremiseIndex(0)\n            setActiveIndex(2)\n            setActiveTabStats(null)\n            setReportObj({})\n            setActiveReportType(reportTypes[0].value)\n            setActiveRetailType(retailTypes[0].value)\n        }\n    }, [])\n\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {isUpdateRegistryVisible && <UpdateRegistryModal setRefetchIndex={setRefetchIndex} premise={selectedPremise} option={registryOption}  close={() => handleIsUpdateRegistryVisible(false)} />}\n            <Header>\n                <h1>Analytiká</h1>\n            </Header>\n\n            <FlexContainer>\n                <FixedContainer>\n                    <SectionNavbar\n                        items={premisesTabs}\n                        activeIndex={activePremiseIndex}\n                        setActiveIndex={setActivePremiseIndex}\n                    />\n                </FixedContainer>\n            </FlexContainer>\n            <FlexContainer>\n                <FixedContainer>\n                    <SectionNavbar\n                        items={analyticsTabItems}\n                        activeIndex={activeIndex}\n                        setActiveIndex={handleChangeActiveIndex}\n                    />\n                </FixedContainer>\n            </FlexContainer>\n\n\n            <ScrollContainer>\n                <Container>\n                    <HeaderContainer>\n                        <div>\n\n                        <h3>Dátum:</h3>\n\n                        <TwoColContainer>\n                            <div>\n                                <h5>Od:</h5>\n                                <CustomInput\n                                    label={''}\n                                    value={fitlterQuery?.from || \"\"}\n                                    type=\"date\"\n                                    name=\"from\"\n                                    handleChange={handleFitlterQueryChange}\n                                />\n                            </div>\n                            <div>\n                                <h5>Do:</h5>\n                                <CustomInput\n                                    label={''}\n                                    value={fitlterQuery?.to || \"\"}\n                                    type=\"date\"\n                                    name=\"to\"\n                                    handleChange={handleFitlterQueryChange}\n                                />\n                            </div>\n                        </TwoColContainer>\n\n                        </div>\n\n                    <div>\n                        {activeIndex === 2 && <RegistryContainer>\n                            <h3>Stav pokladne</h3>\n                            {activeTabStats?.cashRegistry ? (\n                                <RegistryCash>{(activeTabStats?.cashRegistry / 100).toFixed(2)}€</RegistryCash>\n                            ) : (\n                                <RegistryCash>0€</RegistryCash>\n                            )}\n                            {activeTabStats?.takenOut ? (\n                                <TakeOutCash>Vybrané: {(activeTabStats?.takenOut / 100).toFixed(2)}€</TakeOutCash>\n                            ) : (\n                                <TakeOutCash>Vybrané: 0€</TakeOutCash>\n                            )}\n                            <UpdateRegistryButton onClick={() => handleIsUpdateRegistryVisible(true, activePremiseIndex, \"deposit\")}>Vložiť</UpdateRegistryButton>\n                            <UpdateRegistryButton onClick={() => handleIsUpdateRegistryVisible(true, activePremiseIndex, \"withdraw\")}>Vybrať</UpdateRegistryButton>\n                        </RegistryContainer>}\n                    </div>\n                    </HeaderContainer>\n\n                </Container>\n                {isAdmin && <GridContainer>\n                    <div>\n                        <h3>Zákazníci</h3>\n                        <p>{storeData?.users}</p>\n                    </div>\n                    <div>\n                        <h3>Produkty</h3>\n                        <p>{storeData?.products}</p>\n                    </div>\n                    <div>\n                        <h3>Šošovky</h3>\n                        <p>{storeData?.lenses}</p>\n                    </div>\n                    <div>\n                        <h3>Zákazky</h3>\n                        <p>{storeData?.orders}</p>\n                    </div>\n                    <div>\n                        <h3>Vyšetrenia</h3>\n                        <p>{storeData?.bookings}</p>\n                    </div>\n                </GridContainer>}\n\n\n                {stats && (\n                    <StatsGrid>\n                        {\n                            activeTabStats ? (\n                                <PaymentsContainer>\n                                    <div>\n                                        <h3>Tržba</h3>\n                                        <p>{((activeTabStats?.cash + activeTabStats?.card + activeTabStats?.coupons + activeTabStats?.eshopPickupPayments) / 100).toFixed(2)}€</p>\n                                    </div>\n                                    <div>\n                                        <h3>hodnota nových zákazok</h3>\n                                        <p>{(activeTabStats?.potential / 100).toFixed(2)}€</p>\n                                    </div>\n                                </PaymentsContainer>\n                            ) : (\n                                <PaymentsContainer>\n                                    <p>Žiadné štatistiky</p>\n                                </PaymentsContainer>\n                            )\n                        }\n                    </StatsGrid>\n                )}\n\n                {stats && (\n                    <StatsGrid>\n                        {activeTabStats && (\n                            <StatsContainer>\n                                <div>\n                                    <h3>Hotovosť</h3>\n                                    <p>{(activeTabStats?.cash / 100).toFixed(2)}€</p>\n                                </div>\n                                <div>\n                                    <h3>Karta</h3>\n                                    <p>{(activeTabStats?.card / 100).toFixed(2)}€</p>\n                                </div>\n                                <div>\n                                    <h3>Kupóny</h3>\n                                    <p>{(activeTabStats?.coupons / 100).toFixed(2)}€</p>\n                                </div>\n                                <div>\n                                    <h3>Objednávky</h3>\n                                    <p>{activeTabStats?.orders}</p>\n                                </div>\n                            </StatsContainer>\n                        )}\n                    </StatsGrid>\n                )}\n\n                {isAdmin && <ReportContainer>\n                    <h2>Vytvoriť report</h2>\n                    <CheckboxContainer>\n                        <h5>Typ reportu</h5>\n                        {reportTypes.map((type, idx) => (\n                            <TypeCheckbox\n                                key={idx}\n                                label={type.name}\n                                isActive={activeReportType === type.value}\n                                handleClick={() => setActiveReportType(type.value)}\n                            />\n                        ))}\n                    </CheckboxContainer>\n\n                    {activeReportType !== 'users' && <CheckboxContainer>\n                        <h5>Prevádzka</h5>\n                        {retailTypes.map((type, idx) => (\n                            <TypeCheckbox\n                                key={idx}\n                                label={type.name}\n                                isActive={activeRetailType === type.value}\n                                handleClick={() => setActiveRetailType(type.value)}\n                            />\n                        ))}\n                    </CheckboxContainer>}\n\n                    {activeReportType !== 'users' ? <TwoColContainer>\n                        <div>\n                            <h5>Od:</h5>\n                            <CustomInput\n                                label={''}\n                                value={reportObj?.from || \"\"}\n                                type=\"date\"\n                                name=\"from\"\n                                handleChange={handleChange}\n                            />\n                        </div>\n                        <div>\n                            <h5>Do:</h5>\n                            <CustomInput\n                                label={''}\n                                value={reportObj?.to || \"\"}\n                                type=\"date\"\n                                name=\"to\"\n                                handleChange={handleChange}\n                            />\n                        </div>\n                    </TwoColContainer> : <div style={{ marginBottom: \"2rem\" }}><p>Žiadne možnosti</p></div>}\n\n                    <SubmitButton onClick={handleSubmitReport}>Generovať</SubmitButton>\n                </ReportContainer>}\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default AnalyticsSection\n\nconst reportTypes = [\n    {\n        name: \"Zákazníci\",\n        value: \"users\",\n    },\n    {\n        name: \"Produkty\",\n        value: \"products\",\n    },\n    {\n        name: \"Zákazky\",\n        value: \"orders\",\n    },\n    {\n        name: \"Predané produkty\",\n        value: \"soldProducts\",\n    },\n]\n\nconst retailTypes = [\n    // {\n    //     name: \"E-shop\",\n    //     value: 0,\n    // },\n    {\n        name: \"Centrálny sklad\",\n        value: 1,\n    },\n    {\n        name: \"Obchodná, Bratislava\",\n        value: 2,\n    },\n    {\n        name: \"Miletičova, Bratislava\",\n        value: 3,\n    },\n    {\n        name: \"Vajnory, Bratislava\",\n        value: 4,\n    },\n    {\n        name: \"Vajnorská 53, Bratislava\",\n        value: 5,\n    },\n    {\n        name: \"OC Branč, Senica\",\n        value: 6,\n    },\n]\n\n\nexport const analyticsRetailNames = [\n    // {\n    //     id: 0,\n    //     name: \"E-shop\",\n    // },\n    {\n        id: 1,\n        name: \"Centrálny sklad\",\n    },\n    {\n        id: 2,\n        name: \"Obchodná, Bratislava\",\n    },\n    {\n        id: 3,\n        name: \"Miletičova, Bratislava\",\n    },\n    {\n        id: 4,\n        name: \"Vajnory, Bratislava\",\n    },\n    {\n        id: 5,\n        name: \"Vajnorská 53, Bratislava\",\n    },\n    {\n        id: 6,\n        name: \"OC Branč, Senica\",\n    },\n]\n\n// export const retailNames = [\n//     \"eshop\",\n//     \"Centrálny sklad\",\n//     \"Obchodná, Bratislava\",\n//     \"Miletičova, Bratislava\",\n//     \"Vajnory, Bratislava\",\n//     \"Vajnorská 53, Bratislava\",\n//     \"OC Branč, Senica\"\n// ]","/app/src/sections/blog-posts/blog-posts.section.jsx",["832","833","834","835"],"import React, { useState, useEffect, useContext } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    FixedContainer,\n    FlexContainer\n} from '../../global.styles'\n\nimport {\n    PostContainer,\n    PostImage,\n    PostContent,\n    Options,\n    UpdateButton,\n    DeleteButton\n} from './blog-posts.styles'\n\nconst BlogPosts = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { postsCount, handlePostDelete } = useContext(BlogContext)\n    const { push } = useHistory()\n\n    const [posts, setPosts] = useState([])\n\n    const [filterQuery, setFilterQuery] = useState({\n        limit: 10,\n        sortBy: {\n            date: -1\n        },\n        // query: \"\"\n    })\n    const [searchQuery, setSearchQuery] = useState('')\n\n\n\n    const [activeIndex, setActiveIndex] = useState(0)\n    const items = [\n        {\n            id: 0,\n            name: \"Zostupne\"\n        },\n        {\n            id: 1,\n            name: \"Vzostupne\"\n        },\n    ]\n\n    const blogsData = useFetchByQuery('api/blogs/filter', filterQuery)\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n                query: searchQuery\n            })\n            blogsData.refetch()\n        }\n    }\n\n    const handlePostDeleteClick = (postID) => {\n        handlePostDelete(postID)\n        blogsData.refetch()\n    }\n\n    useEffect(() => {\n        if (searchQuery === '') {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n            })\n            blogsData.refetch()\n        }\n    }, [searchQuery])\n\n    useEffect(() => {\n        if (activeIndex === 0) {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n                // query: \"\"\n            })\n            blogsData.refetch()\n        } else {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: 1\n                },\n                // query: \"\"\n            })\n            blogsData.refetch()\n        }\n    }, [activeIndex])\n\n    useEffect(() => {\n        if (!blogsData.isLoading) {\n            setPosts(blogsData.response?.blogs)\n        }\n    }, [blogsData.isLoading])\n\n    useEffect(() => {\n        return () => {\n            closeModal()\n            setSearchQuery('')\n            setActiveIndex(0)\n            setPosts([])\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n            })\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleSearch={handleSearch}\n                handleAddButton={() => push('blog/novy-prispevok')}\n                count={postsCount}\n                title=\"Blog\"\n            />\n            <FlexContainer>\n                <FixedContainer>\n\n                    <SectionNavbar\n                        items={items}\n                        activeIndex={activeIndex}\n                        setActiveIndex={setActiveIndex}\n                    />\n\n                </FixedContainer>\n\n            </FlexContainer>\n\n            <ScrollContainer>\n                {posts && posts.length ? posts.map(post => (\n                    <PostContainer key={post._id}>\n                        <PostImage>\n                            {post.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${post.image.imagePath}`} alt={post.image.alt} />}\n                        </PostImage>\n                        <PostContent>\n                            <h2>{post.name}</h2>\n                            <p>{post.description}</p>\n                        </PostContent>\n                        <Options>\n                            <UpdateButton onClick={() => push(`blog/${post._id}`)}>Upraviť</UpdateButton>\n                            <DeleteButton onClick={() => handlePostDeleteClick(post._id)}>Vymazať</DeleteButton>\n                        </Options>\n                    </PostContainer>\n                )) : (\n                        <div>\n                            Žiadne príspevky\n                        </div>\n                    )}\n\n                <ListArrows\n                    listItems={posts}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BlogPosts\n","/app/src/sections/no-permission/no-permission.section.jsx",[],"/app/src/sections/post/post.section.jsx",["836","837","838"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, useHistory } from 'react-router-dom'\nimport {useSlug} from '../../hooks/slug'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport CustomTextarea from '../../components/custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport { Quill } from 'react-quill'\n\nimport {\n    FixedContainer\n} from '../../global.styles'\n\n\nimport {\n    Header,\n    GridContainer,\n    PostImage,\n    DeleteButton,\n    AddButton,\n    Title,\n    ContentTextare,\n    Container,\n} from './post.styles'\n\nconst PostSection = () => {\n    const {getSlug} = useSlug()\n    const { id } = useParams()\n    const { push } = useHistory()\n    const {\n        createPost,\n        isLoading,\n        message,\n        showLoading,\n        setIsLoading,\n        getPost,\n        post,\n        resetBlog,\n        updatePost\n    } = useContext(BlogContext)\n    const { closeModal } = useContext(LoadingModalContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [content, setContent] = useState('')\n    const [image, setImage] = useState('')\n    const [draft, toggleDraft] = useState(false)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (image.length <= 0) return\n        if (content.length <= 0) return\n\n        const postObj = {\n            name: title,\n            description: description,\n            draft: draft,\n            html: content,\n            image: image,\n            link: getSlug(title)\n        }\n\n        if (id === 'novy-prispevok') {\n            createPost(postObj, (data) => {\n                // console.log(\"CREATED NEW BLOG POST\")\n                // console.log(data)\n            })\n        } else {\n            updatePost(postObj, id, (data) => {\n                // console.log(\"UPDATED BLOG POST\")\n                // console.log(data)\n            })\n        }\n\n        push('/dashboard/blog')\n\n    }\n\n    useEffect(() => {\n        setSelectedImage(null)\n\n        if (id !== 'novy-prispevok') {\n            getPost(id)\n            setIsUpdating(true)\n        }\n    }, [id])\n\n    useEffect(() => {\n        if (id !== 'novy-prispevok') {\n            if (post) {\n                setTitle(post.name)\n                setDescription(post.description)\n                setContent(post.html)\n                toggleDraft(post.draft)\n                if (post.image) {\n                    setImage(post.image._id)\n                    setSelectedImage(post.image)\n                }\n            }\n        }\n    }, [post])\n\n    useEffect(() => {\n        return () => {\n            closeModal()\n            resetBlog()\n            setTitle('')\n            setDescription('')\n            setContent('')\n            setImage('')\n            toggleDraft(false)\n            setImageModal(false)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {isLoading && <Popup loading={showLoading} title={message} close={() => setIsLoading(false)} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={setImage} />}\n\n            <Header>\n                <FixedContainer>\n                    <div>\n                        <h1>Post</h1>\n                    </div>\n                    <div>\n                        <CustomCheckbox\n                            label='Draft'\n                            isActive={draft}\n                            handleClick={() => toggleDraft(prevValue => !prevValue)}\n                        />\n                        <DeleteButton>Vymazať</DeleteButton>\n                        <AddButton type='submit'>{isUpdating ? \"Upraviť príspevok\" : \"Pridať príspevok\"}</AddButton>\n                    </div>\n\n                </FixedContainer>\n            </Header>\n\n            <ScrollContainer>\n\n                <GridContainer>\n                    <Container>\n                        <h2>Informácia</h2>\n                        <CustomInput\n                            label=\"Nadpis\"\n                            type='text'\n                            name='title'\n                            value={title}\n                            handleChange={(e) => setTitle(e.target.value)}\n                            required\n                        />\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={description}\n                            handleChange={(e) => setDescription(e.target.value)}\n                            required\n                        />\n                        <h2>Titulná fotka</h2>\n                        <PostImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </PostImage>\n                    </Container>\n                    <Container>\n                        <Title>Obsah</Title>\n                        <QuillToolbar />\n                        <ContentTextare\n                            value={content}\n                            onChange={setContent}\n                            modules={modules}\n                            formats={formats}\n                        />\n                    </Container>\n\n                </GridContainer>\n\n            </ScrollContainer>\n        </form>\n    )\n}\n\n\nconst CustomUndo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n        />\n    </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n        />\n    </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n    this.quill.history.undo();\n}\nfunction redoChange() {\n    this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n    \"arial\",\n    \"comic-sans\",\n    \"courier-new\",\n    \"georgia\",\n    \"helvetica\",\n    \"lucida\"\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nconst modules = {\n    toolbar: {\n        container: \"#toolbar\",\n        handlers: {\n            undo: undoChange,\n            redo: redoChange\n        }\n    },\n    history: {\n        delay: 500,\n        maxStack: 100,\n        userOnly: true\n    }\n};\n\n// Formats objects for setting up the Quill editor\nconst formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"align\",\n    \"strike\",\n    \"script\",\n    \"blockquote\",\n    \"background\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"color\",\n    \"code-block\"\n];\n\n// Quill Toolbar component\nconst QuillToolbar = () => (\n    <div id=\"toolbar\" className=\"toolbar\">\n        <span className=\"ql-formats\">\n            <select className=\"ql-size\" defaultValue=\"medium\">\n                <option value=\"extra-small\">Size 1</option>\n                <option value=\"small\">Size 2</option>\n                <option value=\"medium\">Size 3</option>\n                <option value=\"large\">Size 4</option>\n            </select>\n            <select className=\"ql-header\" defaultValue=\"3\">\n                <option value=\"1\">Heading</option>\n                <option value=\"2\">Subheading</option>\n                <option value=\"3\">Normal</option>\n            </select>\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n        </span>\n        <span className=\"ql-formats\">\n            <select className=\"ql-align\" />\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n                <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n                <CustomRedo />\n            </button>\n        </span>\n    </div>\n);\n\n\nexport default PostSection\n","/app/src/sections/order/order.section.jsx",["839","840","841"],"import React, { useContext, useState, useEffect } from \"react\"\nimport { LoadingModalContext } from \"../../context/loading-modal/loading-modal.contenxt\"\nimport { OrderContext } from \"../../context/order/order.context\"\nimport { useParams, Prompt } from \"react-router-dom\"\n\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\n\nimport Popup from \"../../components/popup/pop-up.component\"\n\nimport SelectUserComponent from \"./steps/1-select-user/select-user.component\"\nimport SelectProductComponent from \"./steps/2-select-product/select-product.component\"\nimport SelectLensesComponent from \"./steps/3-select-lenses/select-lenses.component\"\nimport SummaryComponent from \"./steps/4-summary/summary.component\"\nimport OrderSummaryProductName from \"../../components/order-summary-product-name/order-summary-product-name.component\"\nimport OrderSummaryLensesName from \"../../components/order-summary-lenses-name/order-summary-lenses-name.component\"\n\nimport { useFetchById } from \"../../hooks/useFetch\"\n\nimport {\n\tgetPercentageDiscount,\n\tgetTotalDiscountedPrice,\n} from \"../../utils/orders.utils\"\n\nimport {\n\tHeader,\n\tProductsOverviewContainer,\n\tSummaryTableHead,\n\tSummaryTableRow,\n\tSummaryTableTitle,\n\tTableCol,\n\tTotalContainer,\n\t// TotalContainer,\n} from \"./order.styles\"\n\nconst OrderSection = () => {\n\tconst {\n\t\tstep,\n\t\torder,\n\t\tcart,\n\t\tsetOrder,\n\t\taddUser,\n\t\tresetOrder,\n\t\tchangeStep,\n\t\t// saveOrder,\n\t\t// getSavedOrder,\n\t} = useContext(OrderContext)\n\n\tconst { userId, orderId } = useParams()\n\n\tconst [hasChanged, setHasChanged] = useState(false)\n\tconst [isUpdating, setIsUpdating] = useState(false)\n\n\tconst handleOrderChange = (valueToAdd) => {\n\t\tsetHasChanged(true)\n\t\tconst { name, value } = valueToAdd\n\t\tsetOrder({\n\t\t\t...order,\n\t\t\t[name]: value,\n\t\t})\n\t}\n\n\tconst {\n\t\tgetMessage,\n\t\tsetShowModal,\n\t\tcloseModal,\n\t\tisLoading,\n\t\tshowModal,\n\t\tmessage,\n\t} = useContext(LoadingModalContext)\n\n\tconst showErrorMessage = (message) => {\n\t\tgetMessage(message)\n\t\tsetShowModal(true)\n\t}\n\n\tconst userData = useFetchById(\n\t\t\"api/admin/users\",\n\t\tuserId,\n\t\t!(userId !== \"nova-objednavka\")\n\t)\n\tconst orderData = useFetchById(\"api/admin/orders\", orderId, !orderId)\n\n\tconst handleAddNextProduct = () => {\n\t\tchangeStep(\"findProduct\")\n\t\tif (order?.product) {\n\t\t\tif (order?.lenses) {\n\t\t\t\tdelete order[\"lenses\"]\n\t\t\t\tdelete order[\"product\"]\n\t\t\t} else {\n\t\t\t\tdelete order[\"product\"]\n\t\t\t}\n\t\t\tsetOrder({ ...order })\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (userId !== \"nova-objednavka\" && orderId) {\n\t\t\tsetIsUpdating(true)\n\t\t\tchangeStep(\"summary\")\n\t\t\tif (orderData.response) {\n\t\t\t\taddUser(orderData.response.order.orderedBy)\n\t\t\t\tsetOrder({\n\t\t\t\t\t...order,\n\t\t\t\t\torder: orderData.response.order,\n\t\t\t\t\tuser: orderData.response.order.orderedBy,\n\t\t\t\t\tcombinedProducts: orderData.response.order.combinedProducts,\n\t\t\t\t\tnote: orderData.response.order.note,\n\t\t\t\t})\n\t\t\t}\n\t\t} else if (userId !== \"nova-objednavka\" && orderId === undefined) {\n\t\t\tchangeStep(\"select-product\")\n\t\t\tif (userData.response) {\n\t\t\t\taddUser(userData.response.user)\n\t\t\t}\n\t\t}\n\t}, [userId, orderId, userData.response, orderData.response])\n\n\tuseEffect(() => {\n\t\tif (userData.isLoading) return\n\t\taddUser(userData.response.user)\n\t}, [userData.isLoading])\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tchangeStep(\"select-user\")\n\t\t\tresetOrder({})\n\t\t\tsetHasChanged(false)\n\t\t\tsetIsUpdating(false)\n\t\t}\n\t}, [])\n\n\tconst [priceTotal, setPriceTotal] = useState(0)\n\n\tuseEffect(() => {\n\t\tif (cart) {\n\t\t\t// console.log(cart)\n\t\t\tsetPriceTotal(\n\t\t\t\tcart.reduce(\n\t\t\t\t\t(accumalatedQuantity, item) =>\n\t\t\t\t\t\taccumalatedQuantity +\n\t\t\t\t\t\tgetTotalDiscountedPrice(\n\t\t\t\t\t\t\titem?.product?.price || 0,\n\t\t\t\t\t\t\titem?.lens?.price || 0,\n\t\t\t\t\t\t\titem?.productQuant || 0,\n\t\t\t\t\t\t\titem?.lensesQuant || 0,\n\t\t\t\t\t\t\titem?.discount\n\t\t\t\t\t\t) /\n\t\t\t\t\t\t\t100,\n\t\t\t\t\t0\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t}, [cart])\n\n\treturn (\n\t\t<section>\n\t\t\t<Prompt\n\t\t\t\twhen={hasChanged}\n\t\t\t\tmessage={\"Máte nedokončenú objednávku, skutočne chcete odísť?\"}\n\t\t\t/>\n\t\t\t{showModal && (\n\t\t\t\t<Popup loading={isLoading} title={message} close={closeModal} />\n\t\t\t)}\n\t\t\t<Header>\n\t\t\t\t<div>\n\t\t\t\t\t<h1>\n\t\t\t\t\t\t{isUpdating\n\t\t\t\t\t\t\t? `Objednavka číslo ${order?.order?.customId}`\n\t\t\t\t\t\t\t: \"Nová objednávka\"}\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t</Header>\n\t\t\t<ScrollContainer>\n\t\t\t\t{step !== \"summary\" && (\n\t\t\t\t\t<ProductsOverviewContainer>\n\t\t\t\t\t\t<SummaryTableTitle>Prehľad objednávky</SummaryTableTitle>\n\t\t\t\t\t\t<SummaryTableHead>\n\t\t\t\t\t\t\t<TableCol>#</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<span>Eankód</span>\n\t\t\t\t\t\t\t\t<span>Názov produktu</span>\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>Cena</TableCol>\n\t\t\t\t\t\t\t<TableCol>Po zľave</TableCol>\n\t\t\t\t\t\t\t<TableCol>Ks</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<span>Eankód</span>\n\t\t\t\t\t\t\t\t<span>Názov šošovky</span>\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>Cena</TableCol>\n\t\t\t\t\t\t\t<TableCol>Po zľave</TableCol>\n\t\t\t\t\t\t\t<TableCol>Ks</TableCol>\n\t\t\t\t\t\t\t<TableCol>Spolu</TableCol>\n\t\t\t\t\t\t\t<TableCol>Po zľave</TableCol>\n\t\t\t\t\t\t</SummaryTableHead>\n\n\t\t\t\t\t\t{cart &&\n\t\t\t\t\t\t\tcart.map((item, idx) => (\n\t\t\t\t\t\t\t\t<SummaryTableRow key={idx}>\n\t\t\t\t\t\t\t\t\t<TableCol>{idx + 1}</TableCol>\n\t\t\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t\t\t{item?.product ? (\n\t\t\t\t\t\t\t\t\t\t\t<OrderSummaryProductName\n\t\t\t\t\t\t\t\t\t\t\t\tname={item?.product?.name}\n\t\t\t\t\t\t\t\t\t\t\t\teanCode={item?.product?.eanCode}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t\t\t{item?.product?.price\n\t\t\t\t\t\t\t\t\t\t\t? `${(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(item?.product?.price * item?.productQuant) /\n\t\t\t\t\t\t\t\t\t\t\t\t\t100\n\t\t\t\t\t\t\t\t\t\t\t  ).toFixed(2)}€`\n\t\t\t\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t\t\t{item?.discount?.product\n\t\t\t\t\t\t\t\t\t\t\t? item?.discount?.product.flat\n\t\t\t\t\t\t\t\t\t\t\t\t? `${(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(item?.product?.price * item?.productQuant -\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem?.discount?.product?.flat?.replace(\",\", \".\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) *\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t100) /\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t100\n\t\t\t\t\t\t\t\t\t\t\t\t  ).toFixed(2)}€`\n\t\t\t\t\t\t\t\t\t\t\t\t: `${getPercentageDiscount(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem?.product?.price * item?.productQuant,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem?.discount?.product?.percent\n\t\t\t\t\t\t\t\t\t\t\t\t  )}€`\n\t\t\t\t\t\t\t\t\t\t\t: \"\"}{\" \"}\n\t\t\t\t\t\t\t\t\t\t{item?.discount?.product?.percent &&\n\t\t\t\t\t\t\t\t\t\t\t`(${item?.discount?.product?.percent}%)`}\n\t\t\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t\t\t<TableCol>{item?.product && item?.productQuant}</TableCol>\n\t\t\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t\t\t{item?.lens ? (\n\t\t\t\t\t\t\t\t\t\t\t<OrderSummaryLensesName\n\t\t\t\t\t\t\t\t\t\t\t\tname={item?.lens?.name}\n\t\t\t\t\t\t\t\t\t\t\t\teanCode={item?.lens?.eanCode}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t\t\t{item?.lens?.price\n\t\t\t\t\t\t\t\t\t\t\t? `${(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(item?.lens?.price * item?.lensesQuant) /\n\t\t\t\t\t\t\t\t\t\t\t\t\t100\n\t\t\t\t\t\t\t\t\t\t\t  ).toFixed(2)}€`\n\t\t\t\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t\t\t{item?.discount?.lenses\n\t\t\t\t\t\t\t\t\t\t\t? item?.discount?.lenses?.flat\n\t\t\t\t\t\t\t\t\t\t\t\t? `${(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(item?.lens?.price * item?.lensesQuant -\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem?.discount?.lenses?.flat?.replace(\",\", \".\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) *\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t100) /\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t100\n\t\t\t\t\t\t\t\t\t\t\t\t  ).toFixed(2)}€`\n\t\t\t\t\t\t\t\t\t\t\t\t: `${getPercentageDiscount(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem?.lens?.price * item?.lensesQuant,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem?.discount?.lenses?.percent\n\t\t\t\t\t\t\t\t\t\t\t\t  )}€`\n\t\t\t\t\t\t\t\t\t\t\t: \"\"}{\" \"}\n\t\t\t\t\t\t\t\t\t\t{item?.discount?.lenses?.percent &&\n\t\t\t\t\t\t\t\t\t\t\t`(${item?.discount?.lenses?.percent}%)`}\n\t\t\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t\t\t<TableCol>{item?.lens && item?.lensesQuant}</TableCol>\n\t\t\t\t\t\t\t\t\t<TableCol>{`${(\n\t\t\t\t\t\t\t\t\t\t((item?.product?.price * item?.productQuant || 0) +\n\t\t\t\t\t\t\t\t\t\t\t(item?.lens?.price * item?.lensesQuant || 0)) /\n\t\t\t\t\t\t\t\t\t\t100\n\t\t\t\t\t\t\t\t\t).toFixed(2)}€`}</TableCol>\n\t\t\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\t\tgetTotalDiscountedPrice(\n\t\t\t\t\t\t\t\t\t\t\t\titem?.product?.price || 0,\n\t\t\t\t\t\t\t\t\t\t\t\titem?.lens?.price || 0,\n\t\t\t\t\t\t\t\t\t\t\t\titem?.productQuant || 0,\n\t\t\t\t\t\t\t\t\t\t\t\titem?.lensesQuant || 0,\n\t\t\t\t\t\t\t\t\t\t\t\titem?.discount\n\t\t\t\t\t\t\t\t\t\t\t) / 100\n\t\t\t\t\t\t\t\t\t\t).toFixed(2)}\n\t\t\t\t\t\t\t\t\t\t€\n\t\t\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t\t</SummaryTableRow>\n\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t<TotalContainer>\n\t\t\t\t\t\t\t<p>Spolu: {priceTotal.toFixed(2)}€</p>\n\t\t\t\t\t\t</TotalContainer>\n\t\t\t\t\t</ProductsOverviewContainer>\n\t\t\t\t)}\n\n\t\t\t\t<div>\n\t\t\t\t\t{step === \"select-user\" && (\n\t\t\t\t\t\t<SelectUserComponent\n\t\t\t\t\t\t\tnext={() => changeStep(\"select-product\")}\n\t\t\t\t\t\t\taddToOrder={handleOrderChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{step === \"select-product\" && (\n\t\t\t\t\t\t<SelectProductComponent\n\t\t\t\t\t\t\tback={() => changeStep(\"select-user\")}\n\t\t\t\t\t\t\tnext={changeStep}\n\t\t\t\t\t\t\tshowErrorMessage={showErrorMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{step === \"select-lenses\" && (\n\t\t\t\t\t\t<SelectLensesComponent\n\t\t\t\t\t\t\tback={() => changeStep(\"select-product\")}\n\t\t\t\t\t\t\tnext={() => changeStep(\"summary\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{step === \"summary\" && (\n\t\t\t\t\t\t<SummaryComponent\n\t\t\t\t\t\t\tisUpdating={isUpdating}\n\t\t\t\t\t\t\tback={() => changeStep(\"select-lenses\")}\n\t\t\t\t\t\t\taddNextProduct={handleAddNextProduct}\n\t\t\t\t\t\t\tsetHasChanged={setHasChanged}\n\t\t\t\t\t\t\trefetchUser={userData.refetch}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</ScrollContainer>\n\t\t</section>\n\t)\n}\n\nexport default OrderSection\n","/app/src/sections/booking/booking.section.jsx",["842","843","844","845","846"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../../context/auth/auth.context'\n\n// import SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport BookingCalendarOverview from \"../../components/booking-calendar-overview/booking-calendar-overview.component\"\nimport WeekCalendarProvider from '../../context/week-calendar/week-calendar.context'\n\nimport Calendar from '../../components/calendar/calendar.component'\nimport WeekDays from '../../components/calendar-weekdays/calendar-weekdays.component'\n// import BookingAppoinments from '../../components/booking-appoinments/booking-appoinment.component'\nimport BookingCalendarBookings from '../../components/booking-calendar-bookings/booking-calendar-bookings.component'\n\nimport { useFetch } from '../../hooks/useFetch'\nimport { calendarFormat, months } from '../../utils/calendar.utils'\n\nimport {\n    AiOutlineLeft,\n    AiOutlineRight,\n    AiOutlineDownCircle,\n    AiOutlineUpCircle\n} from 'react-icons/ai'\n\nimport {\n    FixedContainer,\n} from '../../global.styles'\n\nimport {\n    Header,\n    Title,\n    GridRow,\n    CalendarGridContainer,\n    CalendarHeading,\n    CalendarHeader,\n    CalendarFormat,\n    CalendarMonthContainer,\n    IconContainer,\n    UpdateButton\n} from './booking.styles'\n\nconst BookingSection = () => {\n    const { isAdmin, currentUser, isOptometrist } = useContext(AuthContext)\n    const { showModal, setShowModal, message, closeModal } = useContext(LoadingModalContext)\n    const { push } = useHistory()\n    // const [showModal, setShowModal] = useState(true)\n    const [showPremisesSection, setShowPremisesSection] = useState(true)\n    const [activeCalendarFormat, setActiveCalendarFormat] = useState(1)\n    const [calendars, setCalendars] = useState([])\n    const [selectedCalendar, setSelectedCalendar] = useState(null)\n    const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth())\n    const [selectedYear, setSelectedYear] = useState(new Date().getFullYear())\n    const [calendarWeekIndex, setCalendarWeekIndex] = useState(0)\n    const [selectedDay, setSelectedDay] = useState(null)\n\n    const [showUserBooking, setShowUserBooking] = useState(false)\n\n\n    const handleOpenUserBookingModal = (dayData) => {\n        if (dayData !== null) {\n            setSelectedDay({\n                ...dayData,\n            })\n        }\n        setShowUserBooking(true)\n    }\n\n    const { isLoading, response } = useFetch('api/booking/calendars')\n    // console.log(response)\n\n    const handleShowCalendarClick = (calendarId) => {\n        if (!calendarId) return\n        setSelectedCalendar(calendarId)\n        setShowPremisesSection(false)\n        resetCalendarToDefault()\n    }\n\n    const getPrevWeek = () => {\n        Date.prototype.getWeekOfMonth = function() {\n            var firstWeekday = new Date(this.getFullYear(), this.getMonth(), 1).getDay();\n            var offsetDate = this.getDate() + firstWeekday - 1;\n            return Math.floor(offsetDate / 7);\n        }\n\n        if (calendarWeekIndex - 1 < 0) {\n            if (selectedMonth === 0) {\n                setSelectedYear(prevValue => prevValue - 1)\n                setSelectedMonth(11)\n                setCalendarWeekIndex(new Date(selectedYear, selectedMonth, 0).getWeekOfMonth() - 1)\n\n            } else {\n                setSelectedMonth(prevValue => prevValue - 1)\n                setCalendarWeekIndex(Math.ceil(new Date(selectedYear, selectedMonth, 0).getDate() / 7) - 1)\n                // setCalendarWeekIndex(Math.ceil(new Date().getDate() / 7))\n\n            }\n        } else {\n            setCalendarWeekIndex(prevValue => prevValue - 1)\n        }\n    }\n\n    const getNextWeek = () => {\n        const lastDayIndex = new Date(selectedYear, selectedMonth, 0).getDate()\n\n        if (((calendarWeekIndex) * 7) >= lastDayIndex - 7) {\n            setCalendarWeekIndex(0)\n            setSelectedMonth(prevValue => prevValue + 1)\n\n            if (selectedMonth === 11) {\n                setSelectedYear(prevValue => prevValue + 1)\n                setSelectedMonth(0)\n                setCalendarWeekIndex(0)\n\n            }\n        } else {\n            setCalendarWeekIndex(prevValue => prevValue + 1)\n        }\n    }\n\n    const getPrevMonth = () => {\n        if (selectedMonth === 0) {\n            setSelectedYear(prevValue => prevValue - 1)\n            setSelectedMonth(11)\n        } else {\n            setSelectedMonth(prevValue => prevValue - 1)\n        }\n    }\n\n    const getNextMonth = () => {\n        if (selectedMonth === 11) {\n            setSelectedYear(prevValue => prevValue + 1)\n            setSelectedMonth(0)\n        } else {\n            setSelectedMonth(prevValue => prevValue + 1)\n        }\n\n    }\n\n    const resetCalendarToDefault = () => {\n        Date.prototype.getWeekOfMonth = function() {\n            var firstWeekday = new Date(this.getFullYear(), this.getMonth(), 1).getDay();\n            var offsetDate = this.getDate() + firstWeekday - 1;\n            return Math.floor(offsetDate / 7);\n          }\n        setSelectedMonth(new Date().getMonth())\n        setSelectedYear(new Date().getFullYear())\n        // if(new Date(selectedYear, selectedMonth, 0).getDay() === 1) {\n            // setCalendarWeekIndex(Math.ceil(new Date().getDate() / 7) - 1)\n        // } else {\n\n        // console.log(new Date().getWeekOfMonth())\n            setCalendarWeekIndex(new Date().getWeekOfMonth() )\n            // setCalendarWeekIndex(Math.ceil(new Date().getDate() / 7))\n        // }\n        // setSelectedDay(null)\n    }\n\n    const handleCalendarBlockClick = (dayData) => {\n        // if (!dayData.bookings) return\n        // if (!dayData.bookingDate) return\n        Date.prototype.getWeekOfMonth = function() {\n            var firstWeekday = new Date(this.getFullYear(), this.getMonth(), 1).getDay();\n            var offsetDate = this.getDate() + firstWeekday - 1;\n            return Math.floor(offsetDate / 7);\n          }\n\n        // setSelectedCalendar(null)\n        // setSelectedDay(dayData)\n        setCalendarWeekIndex(new Date().getWeekOfMonth() )\n\n        // setCalendarWeekIndex(Math.ceil(dayData.dayNumber / 7) - 1)\n        setActiveCalendarFormat(1)\n    }\n\n    // useEffect(() => {\n    //     // if(!dayData.dayNumber) return\n    //     // if()\n    //     console.log(Math.ceil(new Date(selectedYear, selectedMonth + 1, 0).getDate()  / 7))\n    //     console.log(new Date(selectedYear, selectedMonth + 1, 0).getDate())\n\n    //     setCalendarWeekIndex(Math.ceil(new Date().getDate() / 7))\n    // }, [])\n\n    useEffect(() => {\n        if (!isLoading) {\n            if (response) {\n                if (isAdmin) {\n                    setCalendars(response.calendars)\n                    const userCalendar = response.calendars.find(calendar => calendar.premises === currentUser.premises)\n                    handleShowCalendarClick(userCalendar?._id)\n                    setShowModal(false)\n                } else {\n                    setCalendars(response.calendars.filter(calendar => calendar.premises === currentUser.premises))\n                    const userCalendar = response.calendars.find(calendar => calendar.premises === currentUser.premises)\n                    handleShowCalendarClick(userCalendar?._id)\n                    setShowModal(false)\n                }\n                closeModal()\n            }\n        }\n    }, [isLoading])\n\n    useEffect(() => {\n        return () => {\n            setShowModal(true)\n            setShowPremisesSection(true)\n            setActiveCalendarFormat(0)\n            setCalendars([])\n            setSelectedCalendar(null)\n            setSelectedMonth(new Date().getMonth())\n            setSelectedYear(new Date().getFullYear())\n            setCalendarWeekIndex(0)\n            setSelectedDay(null)\n            closeModal()\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={() => setShowModal(false)} />}\n\n            {isAdmin && <Header>\n                <FixedContainer>\n                    <div>\n                        <h1>Rezervácie</h1>\n                    </div>\n                    <div>\n                        <UpdateButton onClick={() => handleOpenUserBookingModal(null)}>Pridať rezerváciu</UpdateButton>\n                        <UpdateButton onClick={() => push('rezervacie/novy-kalendar')}>Pridať kalendár</UpdateButton>\n                    </div>\n\n                </FixedContainer>\n            </Header>}\n\n            {(!isOptometrist && !isAdmin) && (\n                <Header>\n                    <FixedContainer>\n                        <div>\n                            <h1>Rezervácie</h1>\n                        </div>\n                        {selectedCalendar ? <div>\n                            <UpdateButton onClick={() => handleOpenUserBookingModal(null)}>Pridať rezerváciu</UpdateButton>\n                        </div> : (\n                                <div>\n                                    <p>K vašemu účtu nieje priradená prevádzka</p>\n                                </div>\n                            )}\n\n                    </FixedContainer>\n                </Header>\n            )}\n\n            {(isOptometrist && !isAdmin) && (\n                <Header>\n                    <FixedContainer>\n                        <div>\n                            <h1>Rezervácie</h1>\n                        </div>\n                        {selectedCalendar ? <div>\n                            <UpdateButton onClick={() => handleOpenUserBookingModal(null)}>Pridať rezerváciu</UpdateButton>\n                            <UpdateButton onClick={() => push(`rezervacie/${selectedCalendar}`)}>Upraviť kalendár</UpdateButton>\n                        </div> : (\n                                <div>\n                                    <p>K vašemu účtu nieje priradená prevádzka</p>\n                                </div>\n                            )}\n\n                    </FixedContainer>\n                </Header>\n            )}\n\n            <ScrollContainer>\n                {isAdmin && <CalendarHeading>\n                    <Title>Pobočky</Title>\n                    <div onClick={() => setShowPremisesSection(prevValue => !prevValue)}>\n                        <p>\n                            {calendars.find(calendar => calendar._id === selectedCalendar)?.name}\n                        </p>\n                        <IconContainer>\n                            {showPremisesSection ? <AiOutlineUpCircle /> : <AiOutlineDownCircle />}\n                        </IconContainer>\n                    </div>\n                </CalendarHeading>}\n\n                {showPremisesSection && <GridRow>\n                    {calendars && calendars.map((calendar, idx) => (\n                        <BookingCalendarOverview\n                            key={idx}\n                            calendar={calendar}\n                            selectedCalendar={selectedCalendar}\n                            handleShowUpClick={() => handleShowCalendarClick(calendar._id)}\n                            handleUpdateClick={() => push(`rezervacie/${calendar._id}`)}\n                        />\n                    ))}\n                </GridRow>}\n\n                {selectedCalendar && (\n                    <React.Fragment>\n\n                        <CalendarHeader>\n                            <Title>Kalendár</Title>\n\n                            {activeCalendarFormat === 0 ? (\n                                <CalendarMonthContainer>\n                                    <button onClick={getPrevMonth}><AiOutlineLeft /></button>\n                                    <p>{months[selectedMonth]}</p>\n                                    <button onClick={getNextMonth}><AiOutlineRight /></button>\n                                </CalendarMonthContainer>\n                            ) : (\n                                    <CalendarMonthContainer>\n                                        <button onClick={getPrevWeek}><AiOutlineLeft /></button>\n                                        <div>\n                                            <p>{calendarWeekIndex + 1}</p>\n                                            <p>{months[selectedMonth]}</p>\n                                        </div>\n                                        <button onClick={getNextWeek}><AiOutlineRight /></button>\n                                    </CalendarMonthContainer>\n                                )}\n\n                            <ul>\n                                {calendarFormat.map((name, idx) => (\n                                    <CalendarFormat key={idx} isActive={activeCalendarFormat === idx} onClick={() => setActiveCalendarFormat(idx)}>{name}</CalendarFormat>\n                                ))}\n                            </ul>\n                        </CalendarHeader>\n                        <CalendarGridContainer>\n                            {activeCalendarFormat === 0 ? (\n                                <Calendar\n                                    calendar={selectedCalendar}\n                                    month={selectedMonth}\n                                    year={selectedYear}\n                                    handleCalendarBlockClick={handleCalendarBlockClick}\n                                />\n                            ) : (\n                                    <WeekCalendarProvider\n                                        calendar={selectedCalendar}\n                                        monthIndex={selectedMonth}\n                                        year={selectedYear}\n                                        weekIndex={calendarWeekIndex}\n                                        handleCalendarBlockClick={handleCalendarBlockClick}\n                                    >\n                                        <WeekDays\n                                            calendar={selectedCalendar}\n                                            month={selectedMonth}\n                                            year={selectedYear}\n                                            weekIndex={calendarWeekIndex}\n                                            handleCalendarBlockClick={handleCalendarBlockClick}\n                                            showUserBooking={showUserBooking}\n                                            setShowUserBooking={setShowUserBooking}\n                                            handleOpenUserBookingModal={handleOpenUserBookingModal}\n                                            selectedDay={selectedDay}\n                                            getNextWeek={getNextWeek}\n                                        />\n\n                                    </WeekCalendarProvider>\n                                )}\n                        </CalendarGridContainer>\n\n                        <BookingCalendarBookings calendarId={selectedCalendar} />\n                    </React.Fragment>\n                )}\n\n                {/* {selectedDay && (\n                    <BookingAppoinments\n                        day={selectedDay}\n                    />\n                )} */}\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BookingSection\n","/app/src/sections/coupons/coupons.section.jsx",["847","848"],"import React, { useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { CouponsContext } from '../../context/coupons/coupons.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport { formatPrice } from '../../utils/warehouse.utils'\n\nimport {\n    // CouponOverviewContainer,\n    DeleteButton,\n    OpenButton,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TableCol\n} from './coupons.styles'\n\nconst CouponsSection = () => {\n    // const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        coupons,\n        getCoupons,\n        deleteCoupon\n    } = useContext(CouponsContext)\n\n    useEffect(() => {\n        if (!coupons) {\n            getCoupons()\n        }\n    }, [coupons])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                title='Kupóny'\n                // searchQuery={searchQuery}\n                // handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('kupony/novy-kupon')}\n            />\n            <ScrollContainer>\n\n                <TableContainer>\n                    <TableHead>\n                        <TableCol>#</TableCol>\n                        <TableCol>Kód</TableCol>\n                        <TableCol>Typ</TableCol>\n                        <TableCol>Hodnota</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {coupons && coupons.map((coupon, idx) => (\n                        <TableRow key={idx}>\n                            <TableCol>{idx + 1}</TableCol>\n                            <TableCol>{coupon.code}</TableCol>\n                            <TableCol>{coupon.type === \"percentage\" ? \"Percentá\" : \"Fixná suma\"}</TableCol>\n                            <TableCol>{coupon.type === \"percentage\" ? `${coupon.value}%` : `${(coupon.value / 100).toFixed(2)}€`}</TableCol>\n                            <TableCol>\n                                <OpenButton onClick={() => push(`kupony/${coupon._id}`)}>Zobraziť</OpenButton>\n                                <DeleteButton onClick={() => deleteCoupon(coupon._id)}>Ostrániť</DeleteButton>\n                            </TableCol>\n                        </TableRow>\n                    ))}\n                </TableContainer>\n                <ListArrows\n                    listItems={coupons}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CouponsSection\n","/app/src/sections/calendar/calendar.section.jsx",["849","850","851","852","853","854","855","856","857","858","859","860"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BookingContext } from '../../context/booking/booking.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomRetailSelect from '../../components/custom-select/custom-select.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport TimePicker from 'react-time-picker';\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport { retailNames } from '../../utils/warehouse.utils'\nimport {\n    dayNames,\n    calendarTimes,\n    calendarTimes2,\n    formatCalendarObj,\n    formatExceptDays,\n    formatExceptDaysToObj,\n    formatExceptHours,\n    formatBreakHours,\n    formatBreaksArr\n} from '../../utils/calendar.utils'\n\nimport {\n    FixedContainer,\n} from '../../global.styles'\n\nimport {\n    Header,\n    CreateCalendarButton,\n    Container,\n    GridContainer,\n    ContainerRow,\n    TableHead,\n    TableCol,\n    TableRow,\n    AddDayButton,\n    DeleteCalendarButton,\n    HolidayInputContainer,\n    CustomTimePicker,\n    CustomSelect,\n    DisabledDayContainer\n} from './calendar.styles'\n\nconst CalendarSection = () => {\n    const {\n        closeModal,\n        getMessage,\n        setShowModal,\n        isLoading,\n        message,\n        showModal,\n    } = useContext(LoadingModalContext)\n    const { isAdmin } = useContext(AuthContext)\n    const { createCalendar, updateCalendar, deleteCalendar } = useContext(BookingContext)\n    const { calendarId } = useParams()\n    const { response, isLoading: isFetching } = useFetchById(\"api/booking/calendars\", calendarId, calendarId === 'novy-kalendar')\n    const [calendar, setCalendar] = useState({\n        fromTime: [\"00:00\"],\n        toTime: [\"00:00\"],\n        breakFromTime: [\"00:00\"],\n        breakToTime: [\"00:00\"],\n        lunchFromTime: [\"00:00\"],\n        lunchToTime: [\"00:00\"],\n        disabledDays: []\n    })\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    // const [fromTime, setFromTime] = useState(\"00:00\")\n    // const [toTime, setToTime] = useState(\"23:59\")\n\n    const handleCalendarValueChange = (e) => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete calendar[name]\n            setCalendar({\n                ...calendar\n            })\n            return\n        }\n\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const handleCalendarTimeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = calendar[name] ? calendar[name] : ['X', 'X', 'X', 'X', 'X', 'X', 'X']\n        arr[idx] = value\n\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: arr\n        }))\n    }\n\n    const handleCalendarExceptDaysChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = calendar[name]\n        arr[idx] = value\n\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: arr\n        }))\n    }\n\n    const handleTimeChange = (value, name, idx, index) => {\n        // console.log(value)\n        // console.log(name)\n        // console.log(idx) \n\n        let arr = calendar[name]\n\n        arr[idx][index] = value\n\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: arr\n        }))\n    }\n\n    // const removeExceptDay = (value) => {\n    //     // console.log(value)\n    //     const newArr = calendar.exceptDays.filter(v => v !== value)\n\n    //     setCalendar(prevValue => ({\n    //         ...prevValue,\n    //         exceptDays: newArr\n    //     }))\n    // }\n\n    const removeDisbledDay = (name, idx) => {\n        const arr = calendar[name].filter((_, index) => index !== idx)\n\n        console.log(arr)\n\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: arr\n        }))\n    }\n\n    const removeTimeBlock = (name, from, to, idx, time, toTime, index, value, length) => {\n        console.log(length)\n        let newArr = []\n \n        if(length === 1) {\n            setCalendar(prevValue => ({\n                ...prevValue,\n                [name]: [],\n                [from]: [],\n                [to]: []\n            }))\n        }\n\n        if(calendar[from][index].length === 1) {\n            newArr = calendar[name].filter((_, i) => i !== index && _ !== value)\n            \n            // let newFromArr = calendar[from].splice(index, 1)\n            // let newToArr = calendar[to].splice(index, 1)\n\n            // console.log(newFromArr)\n            // console.log(newToArr)\n\n            let fromArr = calendar[from]\n            let toArr = calendar[to]\n            fromArr.splice(index, 1)\n            toArr.splice(index, 1)\n    \n            // fromArr[index] = [...newFromArr]\n            // toArr[index] = [...newToArr]\n\n            setCalendar(prevValue => ({\n                ...prevValue,\n                ...(newArr.length > 0) && {[name]: newArr},\n                [from]: fromArr,\n                [to]: toArr\n            }))\n            return\n\n        } else {\n            newArr = calendar[name].filter((_, i) => i !== index && _ !== value)\n            let newFromArr = calendar[from][index].filter((_, i) => i !== idx && _ !== time)\n            let newToArr = calendar[to][index].filter((_, i) => i !== idx && _ !== toTime)\n            let fromArr = calendar[from]\n            let toArr = calendar[to]\n    \n            fromArr[index] = [...newFromArr]\n            toArr[index] = [...newToArr]\n\n            console.log(fromArr[index].length)\n\n            if(fromArr[index].length <= 0) {\n                fromArr[index] = []\n                toArr[index] = []\n\n                return setCalendar(prevValue => ({\n                    ...prevValue,\n                    [name]: newArr,\n                    [from]: fromArr,\n                    [to]: toArr\n                }))\n            }\n\n            setCalendar(prevValue => ({\n                ...prevValue,\n                // ...(newArr.length > 0) && {[name]: newArr},\n                [from]: fromArr,\n                [to]: toArr\n            }))\n        }\n        // let newFromArr = calendar[from].map(v => v.filter((_, i) => i !== idx && _ !== time))\n\n\n    }\n\n    const handleAddNewDay = (name, from, to) => {\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: prevValue[name] ? [...prevValue[name], [\"00:00\"]] : [[\"00:00\"]],\n            [from]: prevValue[from] ? [...prevValue[from], [\"00:00\"]] : [[\"00:00\"]],\n            [to]: prevValue[to] ? [...prevValue[to], [\"00:00\"]] : [[\"00:00\"]]\n        }))\n    }\n\n    const handleAddNewDisabledDay = (name) => {\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: prevValue[name] ? [...prevValue[name], 1] : [1],\n        }))\n    }\n\n    const handleDisableDayChange = (e, idx) => {\n        const {name, value} = e.target\n        let arr = calendar[name]\n\n        arr[idx] = value\n\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: arr\n        }))\n    }\n\n    const handleAddNewBreak = () => {\n        setCalendar(prevValue => ({\n            ...prevValue,\n            breaks: prevValue.breaks ? [...prevValue.breaks, \"\"] : [\"\"]\n        }))\n    }\n\n    const handleSubmit = () => {\n        if (!calendar.name) {\n            getMessage(\"Meno Kalendára je povinné\")\n            setShowModal(true)\n            return\n        }\n        if (!calendar.premises) {\n            getMessage(\"Nie je zvolená prevádzka ku ktorej patrí kalendár\")\n            setShowModal(true)\n            return\n        }\n        if (!calendar.endTimes && !calendar.startTimes) {\n            getMessage(\"Nie sú vyplnené časy na prehliadky\")\n            setShowModal(true)\n            return\n        }\n        if (!calendar.interval) {\n            getMessage(\"Nie je zvolený interval\")\n            setShowModal(true)\n            return\n        }\n\n        if (isUpdating) {\n            const calendarToUpdate = formatCalendarObj(calendar, calendar.fromTime, calendar.toTime, calendar.breakFromTime, calendar.breakToTime)\n\n            updateCalendar(calendarToUpdate, calendar._id)\n        } else {\n            let calendarToCreate = {}\n            if (calendar.exceptDays) {\n                calendarToCreate = {\n                    ...calendar,\n                    except: formatExceptDaysToObj(calendar.exceptDays, calendar.fromTime, calendar.toTime),\n                }\n            }\n            \n            if (calendar.breaks) {\n                calendarToCreate = {\n                    ...calendar,\n                    breaks: formatBreaksArr(calendar.breaks, calendar.breakFromTime, calendar.breakToTime)\n                }\n            }\n            \n            if (calendar.lunches) {\n                calendarToCreate = {\n                    ...calendar,\n                    lunches: formatBreaksArr(calendar.lunches, calendar.lunchFromTime, calendar.lunchToTime)\n                }\n            }\n\n            calendarToCreate = { ...calendar }\n\n            createCalendar(calendarToCreate)\n        }\n    }\n\n    useEffect(() => {\n        if (isFetching) return\n        if (response.calendar) {\n            setIsUpdating(true)\n\n            setCalendar({\n                ...response.calendar,\n                fromTime: [],\n                toTime: [],\n                breakFromTime: [],\n                breakToTime: [],\n                lunchFromTime: [],\n                lunchToTime: [],\n                disabledDays: []\n            })\n\n            if (response.calendar.except) {\n                const exceptDates = formatExceptDays(response.calendar.except)\n                const exceptHours = formatExceptHours(response.calendar.except)\n\n                \n                // console.log(\"exceptDaysArr\")\n                // console.log(exceptHours)\n\n                setCalendar(prevValue => ({\n                    ...prevValue,\n                    except: exceptDates,\n                    fromTime: exceptHours.map(v => v.map(time => time.split(\"-\")[0])),\n                    toTime: exceptHours.map(v => v.map(time => time.split(\"-\")[1])),\n                }))\n                // closeModal()\n                // return \n            }\n            if (response.calendar.lunches) {\n                const lunchesDates = formatExceptDays(response.calendar.lunches)\n                const lunchesHours = formatExceptHours(response.calendar.lunches)\n\n                setCalendar(prevValue => ({\n                    ...prevValue,\n                    lunches: lunchesDates,\n                    lunchFromTime: lunchesHours.map(v => v.map(time => time.split(\"-\")[0])),\n                    lunchToTime: lunchesHours.map(v => v.map(time => time.split(\"-\")[1])),\n                }))\n                // closeModal()\n                // return \n            }\n            if (response.calendar.breaks) {\n                const breaksDates = formatExceptDays(response.calendar.breaks)\n                const breaksHours = formatExceptHours(response.calendar.breaks)\n\n                // console.log(\"exceptDaysArr\")\n                // console.log(exceptDaysArraaa)\n\n                setCalendar(prevValue => ({\n                    ...prevValue,\n                    breaks: breaksDates,\n                    breakFromTime: breaksHours.map(v => v.map(time => time.split(\"-\")[0])),\n                    breakToTime: breaksHours.map(v => v.map(time => time.split(\"-\")[1])),\n                }))\n                // closeModal()\n                // return \n            }\n\n            // if (response.calendar.breaks) {\n            //     breakHourArr = formatBreakHours(response.calendar.breaks)\n\n            //     // console.log(\"exceptDaysArr\")\n            //     // console.log(exceptDaysArraaa)\n\n            //     setCalendar(prevValue => ({\n            //         ...prevValue,\n            //         breaks: response.calendar.breaks,\n            //         breakFromTime: breakHourArr.map(time => time.split(\"-\")[0]),\n            //         breakToTime: breakHourArr.map(time => time.split(\"-\")[1])\n            //     }))\n            //     // closeModal()\n            //     // return \n            // }\n\n            // console.log(response.calendar)\n            closeModal()\n        }\n    }, [isFetching])\n\n    // console.log(calendar)\n\n    useEffect(() => {\n        return () => {\n            setIsUpdating(false)\n            setCalendar({})\n        }\n    }, [])\n\n    return (\n        <section>\n            {(showModal) && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <Header>\n                <FixedContainer>\n                    <div>\n                        {isUpdating ? (\n                            <h1>Kalendár: {calendar?.name}</h1>\n                        ) : (\n                            <h1>Nový kalendár</h1>\n                        )}\n                    </div>\n                    <div>\n                        {/* {isUpdating && <DeleteCalendarButton onClick={() => deleteCalendar(calendar?._id)}>Vymazať</DeleteCalendarButton>} */}\n                        <CreateCalendarButton onClick={handleSubmit}>{isUpdating ? \"Upraviť\" : \"Vytvoriť\"}</CreateCalendarButton>\n                    </div>\n\n                </FixedContainer>\n            </Header>\n            <ScrollContainer>\n                <GridContainer>\n                    <div>\n                        {isAdmin && <Container>\n                            <h3>Základné informácie</h3>\n                            <div>\n                                <h4>Kalendár je pre prevádzku</h4>\n                                <CustomRetailSelect\n                                    name='premises'\n                                    value={calendar?.premises || \"0\"}\n                                    listItems={retailNames}\n                                    defaultOption\n                                    defaultValue={0}\n                                    defaultLabel=\"Nezadané\"\n                                    handleChange={handleCalendarValueChange}\n                                />\n                            </div>\n                            <div>\n                                <h4>Meno kalendára</h4>\n                                <CustomInput\n                                    type=\"text\"\n                                    label='Meno*'\n                                    name=\"name\"\n                                    value={calendar?.name || \"\"}\n                                    handleChange={handleCalendarValueChange}\n                                />\n                            </div>\n                        </Container>}\n\n                        {/* <Container>\n                            <h3>Dni kedy sa nevyšetruje</h3>\n                            {calendar?.disabledDays && calendar?.disabledDays?.map((value, idx) => (\n                                <DisabledDayContainer key={idx}>\n                                    <CustomSelect name='disabledDays' value={value} onChange={(e) => handleDisableDayChange(e, idx)}>\n                                        {days.map(({name, value: v}, idx) => {\n                                            return (\n                                                <option key={idx} value={v}>{name}</option>\n                                            )\n                                        })}\n                                    </CustomSelect>\n                                    <button onClick={() => removeDisbledDay(\"disabledDays\", idx)}>X</button>\n                                </DisabledDayContainer>\n                            ))}\n                            <AddDayButton onClick={() => handleAddNewDisabledDay(\"disabledDays\")}>+</AddDayButton>\n                        </Container> */}\n                        <Container>\n                            <h3>Dovolenky</h3>\n                            {calendar?.except && calendar?.except?.map((value, idx) => (\n                                <HolidayInputContainer key={idx} style={{marginBottom: \"2rem\"}}>\n                                    <CustomInput\n                                        type=\"date\"\n                                        // label='Dátum'\n                                        name=\"except\"\n                                        value={value || \"\"}\n                                        handleChange={(e) => handleCalendarExceptDaysChange(e, idx)}\n                                    />\n                                    <div>\n                                        {calendar.fromTime && calendar.fromTime[idx]?.map((time, index) => (\n                                            <div key={idx} style={{display: \"flex\"}}>\n                                                <CustomTimePicker>\n                                                    <p>Od:</p>\n                                                    <TimePicker\n                                                        onChange={(e) => handleTimeChange(e, \"fromTime\", idx, index)}\n                                                        value={time ?? \"00:00\"}\n                                                        // format={\"hh:mm\"}\n                                                        // minTime={\"00:00\"}\n                                                        // maxTime={\"23:59\"}\n                                                        locale=\"sv-sv\"\n                                                        disableClock={true}\n                                                    />\n                                                </CustomTimePicker>\n                                                <CustomTimePicker>\n                                                    <p>Do:</p>\n                                                    <TimePicker\n                                                        onChange={(e) => handleTimeChange(e, \"toTime\", idx, index)}\n                                                        value={calendar?.toTime[idx][index] ?? \"00:00\"}\n                                                        // format={\"hh:mm\"}\n                                                        // minTime={\"00:00\"}\n                                                        // maxTime={\"23:59\"}\n                                                        locale=\"sv-sv\"\n                                                        disableClock={true}\n                                                    />\n                                                </CustomTimePicker>\n                                                <button onClick={() => removeTimeBlock(\"except\", \"fromTime\", \"toTime\", index, time, calendar?.toTime[idx][index], idx, value, calendar?.except.length)}>X</button>\n                                            </div>\n                                        ))}\n                                    </div>\n                                    {/* <CustomInput\n                                        type=\"time\"\n                                        // label='Dátum'\n                                        name=\"time\"\n                                        value={time}\n                                        handleChange={(e) => console.log(e.target.value)}\n                                    /> */}\n                                </HolidayInputContainer >\n                            ))}\n                            <AddDayButton onClick={() => handleAddNewDay(\"except\", \"fromTime\", \"toTime\")}>+</AddDayButton>\n                        </Container>\n                        <Container>\n                            <h3>Obedy</h3>\n                            {calendar?.lunches && calendar?.lunches?.map((value, idx) => (\n                                <HolidayInputContainer key={idx} style={{marginBottom: \"2rem\"}}>\n                                    <CustomInput\n                                        type=\"date\"\n                                        // label='Dátum'\n                                        name=\"lunches\"\n                                        value={value || \"\"}\n                                        handleChange={(e) => handleCalendarExceptDaysChange(e, idx)}\n                                    />\n                                    <div>\n                                        {calendar.lunchFromTime && calendar.lunchFromTime[idx]?.map((time, index) => (\n                                            <div key={idx} style={{display: \"flex\"}}>\n                                                <CustomTimePicker>\n                                                    <p>Od:</p>\n                                                    <TimePicker\n                                                        onChange={(e) => handleTimeChange(e, \"lunchFromTime\", idx, index)}\n                                                        value={time ?? \"00:00\"}\n                                                        // format={\"hh:mm\"}\n                                                        // minTime={\"00:00\"}\n                                                        // maxTime={\"23:59\"}\n                                                        locale=\"sv-sv\"\n                                                        disableClock={true}\n                                                    />\n                                                </CustomTimePicker>\n                                                <CustomTimePicker>\n                                                    <p>Do:</p>\n                                                    <TimePicker\n                                                        onChange={(e) => handleTimeChange(e, \"lunchToTime\", idx, index)}\n                                                        value={calendar?.lunchToTime[idx][index] ?? \"00:00\"}\n                                                        // format={\"hh:mm\"}\n                                                        // minTime={\"00:00\"}\n                                                        // maxTime={\"23:59\"}\n                                                        locale=\"sv-sv\"\n                                                        disableClock={true}\n                                                    />\n                                                </CustomTimePicker>\n                                                <button onClick={() => removeTimeBlock(\"lunches\", \"lunchFromTime\", \"lunchToTime\", index, time, calendar?.lunchToTime[idx][index], idx, value, calendar?.lunches.length)}>X</button>\n                                            </div>\n                                        ))}\n                                    </div>\n                                    {/* <CustomInput\n                                        type=\"time\"\n                                        // label='Dátum'\n                                        name=\"time\"\n                                        value={time}\n                                        handleChange={(e) => console.log(e.target.value)}\n                                    /> */}\n                                </HolidayInputContainer >\n                            ))}\n                            <AddDayButton onClick={() => handleAddNewDay(\"lunches\", \"lunchFromTime\", \"lunchToTime\")}>+</AddDayButton>\n                        </Container>\n                        <Container>\n                            <h3>Prestávky</h3>\n                            {calendar?.breaks && calendar?.breaks?.map((value, idx) => (\n                                <HolidayInputContainer key={idx} style={{marginBottom: \"2rem\"}}>\n                                    <CustomInput\n                                        type=\"date\"\n                                        // label='Dátum'\n                                        name=\"breaks\"\n                                        value={value || \"\"}\n                                        handleChange={(e) => handleCalendarExceptDaysChange(e, idx)}\n                                    />\n                                    <div>\n                                        {calendar.breakFromTime && calendar.breakFromTime[idx]?.map((time, index) => (\n                                            <div key={idx} style={{display: \"flex\"}}>\n                                                <CustomTimePicker>\n                                                    <p>Od:</p>\n                                                    <TimePicker\n                                                        onChange={(e) => handleTimeChange(e, \"breakFromTime\", idx, index)}\n                                                        value={time ?? \"00:00\"}\n                                                        // format={\"hh:mm\"}\n                                                        // minTime={\"00:00\"}\n                                                        // maxTime={\"23:59\"}\n                                                        locale=\"sv-sv\"\n                                                        disableClock={true}\n                                                    />\n                                                </CustomTimePicker>\n                                                <CustomTimePicker>\n                                                    <p>Do:</p>\n                                                    <TimePicker\n                                                        onChange={(e) => handleTimeChange(e, \"breakToTime\", idx, index)}\n                                                        value={calendar?.breakToTime[idx][index] ?? \"00:00\"}\n                                                        // format={\"hh:mm\"}\n                                                        // minTime={\"00:00\"}\n                                                        // maxTime={\"23:59\"}\n                                                        locale=\"sv-sv\"\n                                                        disableClock={true}\n                                                    />\n                                                </CustomTimePicker>\n                                                <button onClick={() => removeTimeBlock(\"breaks\", \"breakFromTime\", \"breakToTime\", index, time, calendar?.breakToTime[idx][index], idx, value, calendar?.breaks.length)}>X</button>\n                                            </div>\n                                        ))}\n                                    </div>\n                                    {/* <CustomInput\n                                        type=\"time\"\n                                        // label='Dátum'\n                                        name=\"time\"\n                                        value={time}\n                                        handleChange={(e) => console.log(e.target.value)}\n                                    /> */}\n                                </HolidayInputContainer >\n                            ))}\n                            <AddDayButton onClick={() => handleAddNewDay(\"breaks\", \"breakFromTime\", \"breakToTime\")}>+</AddDayButton>\n                        </Container>\n                        {/* <Container>\n                            <h3>Prestávky</h3>\n                            {calendar?.breaks && calendar?.breaks?.map((value, idx) => (\n                                <HolidayInputContainer key={idx}>\n                                    {/* <CustomInput\n                                        type=\"date\"\n                                        // label='Dátum'\n                                        name=\"exceptDays\"\n                                        value={value || \"\"}\n                                        handleChange={(e) => handleCalendarExceptDaysChange(e, idx)}\n                                    /> \n                                    <CustomTimePicker>\n                                        <TimePicker\n                                            onChange={(e) => handleTimeChange(e, \"breakFromTime\", idx)}\n                                            value={calendar?.breakFromTime[idx] ?? \"00:00\"}\n                                            // format={\"hh:mm\"}\n                                            // minTime={\"00:00\"}\n                                            // maxTime={\"23:59\"}\n                                            locale=\"sv-sv\"\n                                            disableClock={true}\n                                        />\n                                    </CustomTimePicker>\n                                    <CustomTimePicker>\n                                        <TimePicker\n                                            onChange={(e) => handleTimeChange(e, \"breakToTime\", idx)}\n                                            value={calendar?.breakToTime[idx] ?? \"00:00\"}\n                                            // format={\"hh:mm\"}\n                                            // minTime={\"00:00\"}\n                                            // maxTime={\"23:59\"}\n                                            locale=\"sv-sv\"\n                                            disableClock={true}\n                                        />\n                                    </CustomTimePicker>\n                                    {/* <CustomInput\n                                        type=\"time\"\n                                        // label='Dátum'\n                                        name=\"time\"\n                                        value={time}\n                                        handleChange={(e) => console.log(e.target.value)}\n                                    /> \n                                    <button onClick={() => removeBreakTime(value)}>X</button>\n                                </HolidayInputContainer >\n                            ))}\n                            {calendar?.breaks?.length < 5 && <AddDayButton onClick={handleAddNewBreak}>+</AddDayButton>}\n                        </Container> */}\n                    </div>\n\n                    <Container>\n                        <h3>Nastavenie kalendára</h3>\n\n                        <div>\n                            <h4>Interval medzi prehliadkami</h4>\n                            <select\n                                name='interval'\n                                value={calendar?.interval || \"\"}\n                                onChange={handleCalendarValueChange}\n                            >\n                                <option value={\"\"}>Nezadané</option>\n                                <option value={15}>15min</option>\n                                <option value={30}>30min</option>\n                                <option value={60}>60min</option>\n                            </select>\n                        </div>\n                        <div>\n                            <h4>Čas pred objednaním</h4>\n                            <CustomInput\n                                type=\"text\"\n                                label='Počet minút'\n                                name=\"allowMinutesBefore\"\n                                value={calendar?.allowMinutesBefore?.toString() || \"\"}\n                                handleChange={handleCalendarValueChange}\n                            />\n                        </div>\n                        <div>\n                            <h4>Koľko dní dopredu sa dá objednať</h4>\n                            <CustomInput\n                                type=\"text\"\n                                label='Počet dní'\n                                name=\"daysIntoFuture\"\n                                value={calendar?.daysIntoFuture?.toString() || \"\"}\n                                handleChange={handleCalendarValueChange}\n                            />\n                        </div>\n                    </Container>\n\n                    <ContainerRow>\n                        <h3>Ordinačné hodiny</h3>\n                        <TableHead>\n                            <TableCol isFirst>\n                                Čas \\ Deň\n                            </TableCol>\n                            {dayNames.map((name, idx) => (\n                                <TableCol key={idx}>\n                                    {name}\n                                </TableCol>\n                            ))}\n                        </TableHead>\n                        <TableRow>\n                            <TableCol isFirst>\n                                Začiatok\n                            </TableCol>\n                            {[...Array(7)].map((value, idx) => (\n                                <TableCol key={idx}>\n                                    <select name='startTimes' value={calendar?.startTimes ? calendar?.startTimes[idx] : \"x\"} onChange={(e) => handleCalendarTimeChange(e, idx)}>\n                                        <option value={\"X\"}>Žiadny</option>\n                                        {calendarTimes2.map(({ name, value }, idx) => (\n                                            <option key={idx} value={value}>{name}</option>\n                                        ))}\n                                    </select>\n                                </TableCol>\n                            ))}\n                        </TableRow>\n                        <TableRow>\n                            <TableCol isFirst>\n                                Koniec\n                            </TableCol>\n                            {[...Array(7)].map((value, idx) => (\n                                <TableCol key={idx}>\n                                    <select name='endTimes' value={calendar?.endTimes ? calendar?.endTimes[idx] : \"x\"} onChange={(e) => handleCalendarTimeChange(e, idx)}>\n                                        <option value={\"X\"}>Žiadny</option>\n                                        {calendarTimes2.map(({ name, value }, idx) => (\n                                            <option key={idx} value={value}>{name}</option>\n                                        ))}\n                                    </select>\n                                </TableCol>\n                            ))}\n                        </TableRow>\n                    </ContainerRow>\n                </GridContainer>\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CalendarSection\n\nconst days = [\n    {\n        name: \"Pondelok\",\n        value: 1\n    },\n    {\n        name: \"Utorok\",\n        value: 2\n    },\n    {\n        name: \"Streda\",\n        value: 3\n    },\n    {\n        name: \"Štvrtok\",\n        value: 4\n    },\n    {\n        name: \"Piatok\",\n        value: 5\n    },\n    {\n        name: \"Sobota\",\n        value: 6\n    },\n    {\n        name: \"Nedeľa\",\n        value: 0\n    },\n]\n// const days = [\n//     {\n//         name: \"Pondelok\",\n//         value: 0\n//     },\n//     {\n//         name: \"Utorok\",\n//         value: 1\n//     },\n//     {\n//         name: \"Streda\",\n//         value: 2\n//     },\n//     {\n//         name: \"Štvrtok\",\n//         value: 3\n//     },\n//     {\n//         name: \"Piatok\",\n//         value: 4\n//     },\n//     {\n//         name: \"Sobota\",\n//         value: 5\n//     },\n//     {\n//         name: \"Nedeľa\",\n//         value: 6\n//     },\n// ]","/app/src/sections/coupon/coupon.section.jsx",["861","862"],"import React, { useContext, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { CouponsContext } from '../../context/coupons/coupons.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport InputRow from '../../components/product-input-row/product-input-row.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport Popup from \"../../components/popup/pop-up.component\"\n\nimport {\n    FixedContainer\n} from '../../global.styles'\n\nimport {\n    Header,\n    CustomSelect,\n    SubmitButton,\n    DeleteButton,\n    GridRow,\n    GridCol\n} from './coupon.styles'\n\nconst CouponSection = () => {\n    const { couponId } = useParams()\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const {\n        coupon,\n        getCoupon,\n        handleChange,\n        createCoupon,\n        isUpdating,\n        deleteCoupon,\n        resetCoupons\n    } = useContext(CouponsContext)\n\n    useEffect(() => {\n        if (couponId !== 'novy-kupon') {\n            getCoupon(couponId)\n        }\n    }, [couponId])\n\n    useEffect(() => {\n        return () => {\n            resetCoupons()\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <Header>\n                <FixedContainer>\n                    <div>\n                        <h1>Nový kupón</h1>\n                    </div>\n\n                    <div>\n                        {isUpdating && <DeleteButton onClick={() => deleteCoupon(couponId)}>Odstrániť</DeleteButton>}\n                        {!isUpdating && <SubmitButton onClick={() => createCoupon(coupon)}>Vytvoriť</SubmitButton>}\n                    </div>\n\n                </FixedContainer>\n            </Header>\n            <ScrollContainer>\n                <GridRow>\n                    <GridCol>\n                        <h3>Základné informácie</h3>\n                        <InputRow\n                            label=\"Kód kupónu\"\n                            example=\"napr: 50off\"\n                        >\n                            <CustomInput\n                                label=\"Kód\"\n                                type='text'\n                                name='code'\n                                value={coupon.code}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Typ kupónu\"\n                            example=\"\"\n                        >\n                            <CustomSelect name='type' value={coupon.type} onChange={(e) => handleChange(e)}>\n                                <option value={\"percentage\"}>Percentá</option>\n                                <option value={\"flat\"}>Fixná suma</option>\n                            </CustomSelect>\n                        </InputRow>\n                    </GridCol>\n                    <GridCol>\n                        <h3>Parametre</h3>\n\n                        <InputRow\n                            label=\"Hodnota\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='value'\n                                value={coupon.value.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Počet použití jedným používateľom\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='maxUses'\n                                value={coupon.maxUses.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Minimálna hodnota objednávky pre použitie kupónu\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='minValue'\n                                value={coupon.minValue.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Počet celkových použití kupónu\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='maxUsesTotal'\n                                value={coupon.maxUsesTotal.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                    </GridCol>\n                </GridRow>\n\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CouponSection\n","/app/src/components/sign-in/sign-in.styles.jsx",[],"/app/src/components/forgot-password/forgot-password.styles.jsx",[],"/app/src/components/spinner/spinner.styles.jsx",[],"/app/src/components/custom-button/custom-button.styles.jsx",[],"/app/src/components/sidenav/sidenav.styles.jsx",[],"/app/src/context/blog/blog.queries.jsx",[],"/app/src/context/image/image.queries.jsx",[],"/app/src/context/user/user.queries.jsx",[],"/app/src/context/user/user.utils.jsx",[],"/app/src/utils/warehouse.utils.jsx",[],"/app/src/context/warehouse/warehouse.utils.jsx",[],"/app/src/components/custom-input/custom-input.component.jsx",[],"/app/src/hooks/slug.jsx",["863","864","865","866"],"import { useState, useEffect } from 'react'\n\nexport const useSlug = (string = '') => {\n    const a = 'àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż·/_,:;'\n    const b = 'aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------'\n    const p = new RegExp(a.split('').join('|'), 'g')\n\n    const [slug, setSlug] = useState('')\n\n    const getSlug = (string) => {\n        return string.toString().toLowerCase()\n            .replace(/\\s+/g, '-') // Replace spaces with -\n            .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n            .replace(/&/g, '-and-') // Replace & with 'and'\n            .replace(/[^\\w\\-]+/g, '') // Remove all non-word characters\n            .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n            .replace(/^-+/, '') // Trim - from start of text\n            .replace(/-+$/, '') // Trim - from end of text\n    }\n\n    useEffect(() => {\n        const s = getSlug(string)\n        setSlug(s)\n\n    }, [string])\n\n    return { slug, getSlug }\n}","/app/src/hooks/useFetch.jsx",["867","868","869"],"import { useEffect, useState } from 'react'\n\nexport const useFetch = (path, skip = false, method = \"GET\") => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [message, setMessage] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const requestOptions = {\n        method: method,\n        // headers: myHeaders,\n        // body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setMessage(data.message)\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n                setMessage(\"Niečo sa pokazilo\")\n            }\n        }\n        fetchData()\n    }, [refetchIndex])\n\n    return { response, isLoading, error, message, refetch }\n}\n\nexport const useFetchByQuery = (path, queryObj, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify(queryObj)\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path])\n\n    return { response, isLoading, error, refetch }\n}\n\nexport const useFetchById = (path, id, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}/${id}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path, id])\n\n    return { response, isLoading, error, refetch }\n}\n","/app/src/context/orders/orders.utils.jsx",[],"/app/src/sections/orders/orders.styles.jsx",[],"/app/src/utils/user.utils.jsx",[],"/app/src/sections/e-shop/e-shop.styles.jsx",[],"/app/src/sections/customers/customers.styles.jsx",[],"/app/src/sections/product/product.styles.jsx",[],"/app/src/sections/customer-profile/customer-profile.styles.jsx",[],"/app/src/sections/coupon/coupon.styles.jsx",[],"/app/src/utils/calendar.utils.jsx",["870"],"export const calendarTimes2 = [\n    {\n        name: '00:00',\n        value: '00/00'\n    },\n    {\n        name: '00:15',\n        value: '00/15'\n    },\n    {\n        name: '00:30',\n        value: '00/30'\n    },\n    {\n        name: '00:45',\n        value: '00/45'\n    },\n    \n    {\n        name: '01:00',\n        value: '01/00'\n    },\n    {\n        name: '01:15',\n        value: '01/15'\n    },\n    {\n        name: '01:30',\n        value: '01/30'\n    },\n    {\n        name: '01:45',\n        value: '01/45'\n    },\n\n    {\n        name: '02:00',\n        value: '02/00'\n    },\n    {\n        name: '02:15',\n        value: '02/15'\n    },\n    {\n        name: '02:30',\n        value: '02/30'\n    },\n    {\n        name: '02:45',\n        value: '02/45'\n    },\n\n    {\n        name: '03:00',\n        value: '03/00'\n    },\n    {\n        name: '03:15',\n        value: '03/15'\n    },\n    {\n        name: '03:30',\n        value: '03/30'\n    },\n    {\n        name: '03:45',\n        value: '03/45'\n    },\n\n    {\n        name: '04:00',\n        value: '04/00'\n    },\n    {\n        name: '04:15',\n        value: '04/15'\n    },\n    {\n        name: '04:30',\n        value: '04/30'\n    },\n    {\n        name: '04:45',\n        value: '04/45'\n    },\n\n    {\n        name: '05:00',\n        value: '05/00'\n    },\n    {\n        name: '05:15',\n        value: '05/15'\n    },\n    {\n        name: '05:30',\n        value: '05/30'\n    },\n    {\n        name: '05:45',\n        value: '05/45'\n    },\n\n    {\n        name: '06:00',\n        value: '06/00'\n    },\n    {\n        name: '06:15',\n        value: '06/15'\n    },\n    {\n        name: '06:30',\n        value: '06/30'\n    },\n    {\n        name: '06:45',\n        value: '06/45'\n    },\n\n    {\n        name: '07:00',\n        value: '07/00'\n    },\n    {\n        name: '07:15',\n        value: '07/15'\n    },\n    {\n        name: '07:30',\n        value: '07/30'\n    },\n    {\n        name: '07:45',\n        value: '07/45'\n    },\n\n    {\n        name: '08:00',\n        value: '08/00'\n    },\n    {\n        name: '08:15',\n        value: '08/15'\n    },\n    {\n        name: '08:30',\n        value: '08/30'\n    },\n    {\n        name: '08:45',\n        value: '08/45'\n    },\n\n    {\n        name: '09:00',\n        value: '09/00'\n    },\n    {\n        name: '09:15',\n        value: '09/15'\n    },\n    {\n        name: '09:30',\n        value: '09/30'\n    },\n    {\n        name: '09:45',\n        value: '09/45'\n    },\n\n    {\n        name: '10:00',\n        value: '10/00'\n    },\n    {\n        name: '10:15',\n        value: '10/15'\n    },\n    {\n        name: '10:30',\n        value: '10/30'\n    },\n    {\n        name: '10:45',\n        value: '10/45'\n    },\n\n    {\n        name: '11:00',\n        value: '11/00'\n    },\n    {\n        name: '11:15',\n        value: '11/15'\n    },\n    {\n        name: '11:30',\n        value: '11/30'\n    },\n    {\n        name: '11:45',\n        value: '11/45'\n    },\n\n    {\n        name: '12:00',\n        value: '12/00'\n    },\n    {\n        name: '12:15',\n        value: '12/15'\n    },\n    {\n        name: '12:30',\n        value: '12/30'\n    },\n    {\n        name: '12:45',\n        value: '12/45'\n    },\n\n    {\n        name: '13:00',\n        value: '13/00'\n    },\n    {\n        name: '13:15',\n        value: '13/15'\n    },\n    {\n        name: '13:30',\n        value: '13/30'\n    },\n    {\n        name: '13:45',\n        value: '13/45'\n    },\n\n    {\n        name: '14:00',\n        value: '14/00'\n    },\n    {\n        name: '14:15',\n        value: '14/15'\n    },\n    {\n        name: '14:30',\n        value: '14/30'\n    },\n    {\n        name: '14:45',\n        value: '14/45'\n    },\n\n    {\n        name: '15:00',\n        value: '15/00'\n    },\n    {\n        name: '15:15',\n        value: '15/15'\n    },\n    {\n        name: '15:30',\n        value: '15/30'\n    },\n    {\n        name: '15:45',\n        value: '15/45'\n    },\n\n    {\n        name: '16:00',\n        value: '16/00'\n    },\n    {\n        name: '16:15',\n        value: '16/15'\n    },\n    {\n        name: '16:30',\n        value: '16/30'\n    },\n    {\n        name: '16:45',\n        value: '16/45'\n    },\n\n    {\n        name: '17:00',\n        value: '17/00'\n    },\n    {\n        name: '17:15',\n        value: '17/15'\n    },\n    {\n        name: '17:30',\n        value: '17/30'\n    },\n    {\n        name: '17:45',\n        value: '17/45'\n    },\n\n    {\n        name: '18:00',\n        value: '18/00'\n    },\n    {\n        name: '18:15',\n        value: '18/15'\n    },\n    {\n        name: '18:30',\n        value: '18/30'\n    },\n    {\n        name: '18:45',\n        value: '18/45'\n    },\n\n    {\n        name: '19:00',\n        value: '19/00'\n    },\n    {\n        name: '19:15',\n        value: '19/15'\n    },\n    {\n        name: '19:30',\n        value: '19/30'\n    },\n    {\n        name: '19:45',\n        value: '19/45'\n    },\n\n    {\n        name: '20:00',\n        value: '20/00'\n    },\n    {\n        name: '20:15',\n        value: '20/15'\n    },\n    {\n        name: '20:30',\n        value: '20/30'\n    },\n    {\n        name: '20:45',\n        value: '20/45'\n    },\n\n    {\n        name: '21:00',\n        value: '13/00'\n    },\n    {\n        name: '21:15',\n        value: '13/15'\n    },\n    {\n        name: '21:30',\n        value: '13/30'\n    },\n    {\n        name: '21:45',\n        value: '13/45'\n    },\n\n    {\n        name: '22:00',\n        value: '13/00'\n    },\n    {\n        name: '22:15',\n        value: '13/15'\n    },\n    {\n        name: '22:30',\n        value: '13/30'\n    },\n    {\n        name: '22:45',\n        value: '13/45'\n    },\n\n    {\n        name: '23:00',\n        value: '13/00'\n    },\n    {\n        name: '23:15',\n        value: '13/15'\n    },\n    {\n        name: '23:30',\n        value: '13/30'\n    },\n    {\n        name: '23:45',\n        value: '13/45'\n    },\n]\nexport const calendarTimes = [\n    {\n        name: '00:00',\n        value: '00/00'\n    },\n    {\n        name: '00:30',\n        value: '00/30'\n    },\n    {\n        name: '01:00',\n        value: '01/00'\n    },\n    {\n        name: '01:30',\n        value: '01/30'\n    },\n    {\n        name: '02:00',\n        value: '02/00'\n    },\n    {\n        name: '02:30',\n        value: '02/30'\n    },\n    {\n        name: '03:00',\n        value: '03/00'\n    },\n    {\n        name: '03:30',\n        value: '03/30'\n    },\n    {\n        name: '04:00',\n        value: '04/00'\n    },\n    {\n        name: '04:30',\n        value: '04/30'\n    },\n    {\n        name: '05:00',\n        value: '05/00'\n    },\n    {\n        name: '05:30',\n        value: '05/30'\n    },\n    {\n        name: '06:00',\n        value: '06/00'\n    },\n    {\n        name: '06:30',\n        value: '06/30'\n    },\n    {\n        name: '07:00',\n        value: '07/00'\n    },\n    {\n        name: '07:30',\n        value: '07/30'\n    },\n    {\n        name: '08:00',\n        value: '08/00'\n    },\n    {\n        name: '08:30',\n        value: '08/30'\n    },\n    {\n        name: '09:00',\n        value: '09/00'\n    },\n    {\n        name: '09:30',\n        value: '09/30'\n    },\n    {\n        name: '10:00',\n        value: '10/00'\n    },\n    {\n        name: '10:30',\n        value: '10/30'\n    },\n    {\n        name: '11:00',\n        value: '11/00'\n    },\n    {\n        name: '11:30',\n        value: '11/30'\n    },\n    {\n        name: '12:00',\n        value: '12/00'\n    },\n    {\n        name: '12:30',\n        value: '12/30'\n    },\n    {\n        name: '13:00',\n        value: '13/00'\n    },\n    {\n        name: '13:30',\n        value: '13/30'\n    },\n    {\n        name: '14:00',\n        value: '14/00'\n    },\n    {\n        name: '14:30',\n        value: '14/30'\n    },\n    {\n        name: '15:00',\n        value: '15/00'\n    },\n    {\n        name: '15:30',\n        value: '15/30'\n    },\n    {\n        name: '16:00',\n        value: '16/00'\n    },\n    {\n        name: '16:30',\n        value: '16/30'\n    },\n    {\n        name: '17:00',\n        value: '17/00'\n    },\n    {\n        name: '17:30',\n        value: '17/30'\n    },\n    {\n        name: '18:00',\n        value: '18/00'\n    },\n    {\n        name: '18:30',\n        value: '18/30'\n    },\n    {\n        name: '19:00',\n        value: '19/00'\n    },\n    {\n        name: '19:30',\n        value: '19/30'\n    },\n    {\n        name: '20:00',\n        value: '20/00'\n    },\n    {\n        name: '20:30',\n        value: '20/30'\n    },\n    {\n        name: '21:00',\n        value: '21/00'\n    },\n    {\n        name: '22:30',\n        value: '22/30'\n    },\n    {\n        name: '23:00',\n        value: '23/00'\n    },\n    {\n        name: '23:30',\n        value: '23/30'\n    },\n]\n\nexport const dayNames = [\n    'Pondelok',\n    'Utorok',\n    'Streda',\n    'Štvrtok',\n    'Piatok',\n    'Sobota',\n    'Nedeľa'\n]\n\nexport const months = [\n    'január',\n    'február',\n    'marec',\n    'apríl',\n    'máj',\n    'jún',\n    'júl',\n    'august',\n    'september',\n    'október',\n    'november',\n    'december',\n]\n\nexport const calendarFormat = [\n    'Mesiac',\n    'Týždeň'\n]\n\nexport const getMonday = (d) => {\n    d = new Date(d);\n    var day = d.getDay(),\n        diff = d.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n    return new Date(d.setDate(diff));\n}\n\nexport const getPreviousMonthDays = (firstDayIndex, lastDay) => {\n    let arr = [];\n    let y = 0;\n    for (let x = firstDayIndex; x > 0; x--) {\n        arr.push({\n            dayNumber: firstDayIndex,\n            // isDisable: true,\n            prevDayNumber: lastDay - y,\n            isPrevDay: true,\n        })\n        y = y + 1   \n    }\n    return arr.reverse()\n}\n\nexport const getNextMonthDays = (nextDays) => {\n    let arr = [];\n    for (let x = 1; x <= nextDays; x++) {\n        arr.push({\n            dayNumber: x,\n            isDisable: true,\n            isNextDay: true\n        })\n    }\n    // return arr.length >= 6 ? [] : arr /\n    return arr\n}\n\nexport const getCurrentMonthDays = (lastDay) => {\n    let arr = [];\n    for (let x = 1; x <= lastDay; x++) {\n        arr.push({\n            dayNumber: x,\n        })\n    }\n    return arr\n}\n\nexport const getBooking = (days, calendar, month, year) => {\n    if (!calendar.booked) return days;\n    const bookingsArr = Object.keys(calendar?.booked)\n\n    const bookingDates = bookingsArr.filter((booking) => {\n        const spliteBookingString = booking.split('/')\n        let isBelongHere = false;\n\n        spliteBookingString.forEach(value => {\n            if (month === Number(spliteBookingString[1]) - 1 && year === Number(spliteBookingString[2])) {\n                return isBelongHere = true\n            }\n        })\n\n        if (isBelongHere) {\n            return booking\n        }\n        return false\n    })\n\n    const daysWithBookingsArr = days.map(day => {\n        let dayObj = {\n            ...day\n        }\n\n        let dayNumber  = day?.isPrevDay ? day?.prevDayNumber : day?.dayNumber\n\n        bookingDates.forEach(date => {\n            const splitedDate = date.split('/')\n            if (Number(splitedDate[0]) ===  dayNumber) {\n                return dayObj = {\n                    ...dayObj,\n                    dayNumber: dayNumber,\n                    bookings: calendar.booked[date],\n                    bookingDate: bookingDates.find(bookDate => bookDate === date)\n                }\n            } else {\n                if (dayObj.bookings) return\n                return dayObj = {\n                    ...dayObj,\n                    dayNumber: dayNumber,\n                }\n            }\n        })\n\n        if (dayObj.bookings) return dayObj\n\n        return {\n            ...dayObj,\n            dayNumber: dayNumber,\n        }\n\n    });\n    return daysWithBookingsArr\n}\n\nexport const checkIfHasAppoinment = (hourIndex, bookingsArr) => {\n    let result = false;\n    if (bookingsArr) {\n        bookingsArr.forEach(booking => {\n            const formatBookingTime = booking.split('/')\n            if (Number(formatBookingTime[0]) === hourIndex) {\n                return result = true\n            }\n        })\n    }\n    return result\n}\n\nexport const formatCalendarObj = (calendarObj, fromTime, toTime) => {\n    let obj = { ...calendarObj }\n    if (obj.bookings) delete obj[\"bookings\"]\n    if (obj.booked !== undefined) delete obj[\"booked\"]\n    if (obj.__v !== undefined) delete obj[\"__v\"]\n    if (obj._id) delete obj[\"_id\"]\n    if (obj.dateCreated) delete obj[\"dateCreated\"]\n    if (obj.except) {\n        obj = {\n            ...obj,\n            except: formatExceptDaysToObj(obj.except, fromTime, toTime)\n        }\n    }\n    if (obj.lunches) {\n        obj = {\n            ...obj,\n            lunches: formatExceptDaysToObj(obj.lunches, obj.lunchFromTime, obj.lunchToTime)\n        }\n    }\n    if (obj.breaks) {\n        obj = {\n            ...obj,\n            breaks: formatExceptDaysToObj(obj.breaks, obj.breakFromTime, obj.breakToTime)\n        }\n    }\n    // if (obj.breaks) {\n    //     obj = {\n    //         ...obj,\n    //         breaks: formatBreaksArr(obj.breaks, breakFromTime, breakToTime)\n    //     }\n    // }\n    // if (obj.breaks) delete obj[\"breaks\"]\n    if (obj.lunchFromTime) delete obj[\"lunchFromTime\"]\n    if (obj.lunchToTime) delete obj[\"lunchToTime\"]\n    if (obj.breakFromTime) delete obj[\"breakFromTime\"]\n    if (obj.breakToTime) delete obj[\"breakToTime\"]\n    if (obj.fromTime) delete obj[\"fromTime\"]\n    if (obj.toTime) delete obj[\"toTime\"]\n    if (obj.disabledDays) delete obj[\"disabledDays\"]\n    // if (obj.disabledDays?.length <= 0) delete obj[\"disabledDays\"]\n\n    // if (obj.toTime) delete obj[\"toTime\"]\n\n    return obj\n}\n\nexport const formatExceptDays = (exceptDaysObj) => {\n    console.log(exceptDaysObj)\n\n    const arr = Object.keys(exceptDaysObj)\n    const formatedArr = arr.map(value => value.split('/').reverse().join('-'))\n    return formatedArr\n}\nexport const formatExceptHours = (exceptDaysObj) => {\n    const arr = Object.keys(exceptDaysObj).map(val => exceptDaysObj[val])\n    console.log(\"FORMATED ARRR\")\n    console.log(arr)\n    \n    const formatedArr = arr.map(value => value.map(v => v.replaceAll('/', \":\")))\n\n    console.log(formatedArr)\n\n    return formatedArr\n}\n\nexport const formatBreakHours = (exceptDaysObj) => {\n    const arr = Object.keys(exceptDaysObj).map(val => exceptDaysObj[val])\n    const formatedArr = arr.map(value => value.replaceAll('/', \":\"))\n    return formatedArr\n}\n\nexport const formatExceptDaysToObj = (exceptDaysArr, fromTime, toTime )=> {\n    let obj = {}\n    const formatedArr = exceptDaysArr.map(value => value.split('-').reverse().join('/'))\n    // const from = fromTime.replace(\":\", \"/\")\n    // const to = toTime.replace(\":\", \"/\")\n    const from = fromTime\n    const to = toTime\n\n\n    // console.log(\"FORMAT TIME\")\n    // console.log(from)\n    // console.log(to)\n\n    formatedArr.forEach((day, idx) => {\n        if(!!obj[day]) {\n            obj = {\n                ...obj,\n                [day]: [...obj[day], ...from[idx].map((time, index) => (\n                    `${time.replace(\":\", \"/\")}-${to[idx][index].replace(\":\", \"/\")}`\n                ))]\n            }\n            return obj\n        }\n\n        obj = {\n            ...obj,\n            [day]: from[idx].map((time, index) => (\n                `${time.replace(\":\", \"/\")}-${to[idx][index].replace(\":\", \"/\")}`\n            )),\n        }\n    })\n    return obj\n}\n\nexport const getExceptDaysObj = (exceptDaysArr, exceptHoursArr, calendar, property)=> {\n    let obj = {\n        ...calendar[property]\n    }\n    const formatedArr = exceptDaysArr.map(value => value.split('-').reverse().join('/'))\n    // const from = fromTime.replace(\":\", \"/\")\n    // const to = toTime.replace(\":\", \"/\")\n    // const from = fromTime\n    // const to = toTime\n\n\n    // console.log(\"FORMAT TIME\")\n    // console.log(from)\n    // console.log(to)\n\n    formatedArr.forEach((day, idx) => {\n        if(!!obj[day]) {\n            obj = {\n                ...obj,\n                [day]: [...obj[day],  `${exceptHoursArr[idx].split('-')[0].replace(\":\", \"/\")}-${exceptHoursArr[idx].split('-')[1].replace(\":\", \"/\")}`]\n            }\n            return obj\n        }\n\n        obj = {\n            ...obj,\n            [day]: [`${exceptHoursArr[idx].split('-')[0].replace(\":\", \"/\")}-${exceptHoursArr[idx].split('-')[1].replace(\":\", \"/\")}`]\n        }\n    })\n    return obj\n}\n\nexport const formatBreaksArr = (breaksArr, fromTime, toTime )=> {\n    let obj = {}\n    // const formatedArr = breaksArr.map(value => value.split('-').reverse().join('/'))\n    // const from = fromTime.replace(\":\", \"/\")\n    // const to = toTime.replace(\":\", \"/\")\n    const from = fromTime\n    const to = toTime\n\n\n    // console.log(\"FORMAT TIME\")\n    // console.log(from)\n    // console.log(to)\n\n    const formatedArr = breaksArr.map((day, idx) => {\n\n        return `${from[idx].replace(\":\", \"/\")}-${to[idx].replace(\":\", \"/\")}`\n        // obj = {\n        //     ...obj,\n        //     [day]: `${from[idx].replace(\":\", \"/\")}-${to[idx].replace(\":\", \"/\")}`\n        // }\n    })\n    return formatedArr\n}\n\nexport const formatBookingObj = bookingObj => {\n    let obj = { ...bookingObj }\n    if (obj.rows) delete obj[\"rows\"]\n    if (obj.__v !== undefined) delete obj[\"__v\"]\n    if (obj._id) delete obj[\"_id\"]\n    if (obj.dateCreated) delete obj[\"dateCreated\"]\n    if (obj.timesBooked !== undefined) delete obj[\"timesBooked\"]\n    if (obj.premises) delete obj[\"premises\"]\n    if (obj.calendar) delete obj[\"calendar\"]\n\n    return obj\n}\n\nexport const formatDate = (bookingDate) => {\n    const splitedDate = bookingDate?.date.split('-')\n    const formatedDate = `${splitedDate[2]}/${splitedDate[1]}/${splitedDate[0]}`\n    const formatedHour = `${bookingDate?.hour < 10 ? `0${bookingDate?.hour}` : bookingDate?.hour}/${bookingDate?.min === 0 ? `0${bookingDate?.min}` : bookingDate?.min}`\n\n    return `${formatedHour}:${formatedDate}`\n}\n\nexport const formatCalendarStartTime = (calendar, day) => {\n    let dayIndex = new Date(day.year, day.month, day.dayNumber).getDay()\n    if (dayIndex === 0) dayIndex = 7\n    if (calendar.startTimes[dayIndex - 1] === \"X\") return\n    return calendar.startTimes[dayIndex - 1].replace(\"/\", \":\")\n}\nexport const formatCalendarEndTime = (calendar, day) => {\n    let dayIndex = new Date(day.year, day.month, day.dayNumber).getDay()\n    if (dayIndex === 0) dayIndex = 7\n    if (calendar.endTimes[dayIndex - 1] === \"X\") return\n    return calendar.endTimes[dayIndex - 1].replace(\"/\", \":\")\n}\n\nexport const formatBreakHour = (startTime) => {\n    const splittedTime = startTime.split(\":\")\n\n    if(Number(splittedTime[1]) === 45) {\n        const increasedHour = Number(splittedTime[0]) + 1\n\n        return `${increasedHour < 10 ? `0${increasedHour}` : increasedHour}:00`\n    }\n\n    return `${splittedTime[0]}:${Number(splittedTime[1]) + 15}`\n}\nexport const formatLuncheskHour = (startTime) => {\n    const splittedTime = startTime.split(\":\")\n\n    if(Number(splittedTime[1]) === 30) {\n        const increasedHour = Number(splittedTime[0]) + 1\n        return `${increasedHour < 10 ? `0${increasedHour}` : increasedHour}:00`\n    }\n\n    if(Number(splittedTime[1]) === 45) {\n        const increasedHour = Number(splittedTime[0]) + 1\n        return `${increasedHour < 10 ? `0${increasedHour}` : increasedHour}:15`\n    }\n\n    return `${splittedTime[0]}:${Number(splittedTime[1]) + 30}`\n}","/app/src/sections/calendar/calendar.styles.jsx",[],"/app/src/sections/coupons/coupons.styles.jsx",[],"/app/src/sections/order/order.styles.jsx",[],"/app/src/utils/orders.utils.jsx",[],"/app/src/sections/booking/booking.styles.jsx",[],"/app/src/components/section-navbar/section-navbar.component.jsx",[],"/app/src/components/section-header/section-header.component.jsx",[],"/app/src/components/scroll-container/scroll-container.component.jsx",[],"/app/src/components/list-arrows/list-arrows.component.jsx",["871","872"],"import React, { useState, useEffect } from 'react'\n\nimport {\n    AiFillLeftCircle,\n    AiFillRightCircle\n} from 'react-icons/ai'\n\nimport {\n    ArrowsContainer,\n    IconContainer\n} from './list-arrows.styles'\n\nconst ListArrows = ({\n    listItems = [],\n    handleClickPrev = () => { },\n    handleClickNext = () => { }\n}) => {\n    const [isDisablePrev, setIsDisablePrev] = useState(true)\n    const [isDisableNext, setIsDisableNext] = useState(true)\n    const [currentPage, setCurrentPage] = useState(0)\n\n    useEffect(() => {\n        if (currentPage === 0) {\n            setIsDisablePrev(true)\n        } else {\n            setIsDisablePrev(false)\n            // setCurrentPage(0)\n        }\n    }, [listItems])\n\n    useEffect(() => {\n        if (listItems?.length < 10) {\n            setIsDisableNext(true)\n        } else {\n            setIsDisableNext(false)\n        }\n    }, [listItems])\n\n    useEffect(() => {\n        if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue--)\n    }, [handleClickPrev])\n    useEffect(() => {\n        // if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue++)\n    }, [handleClickNext])\n\n    const handlePrev = () => {\n        handleClickPrev()\n        if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue - 1)\n    }\n    const handleNext = () => {\n        handleClickNext()\n        setCurrentPage(prevValue => prevValue + 1)\n    }\n\n    return (\n        <ArrowsContainer>\n            <IconContainer disabled={isDisablePrev} onClick={handlePrev}>\n                <AiFillLeftCircle />\n            </IconContainer>\n            <IconContainer disabled={isDisableNext} onClick={handleNext}>\n                <AiFillRightCircle />\n            </IconContainer>\n        </ArrowsContainer>\n    )\n}\n\nexport default ListArrows\n","/app/src/components/modal-eshop-filter/modal-eshop-filter.component.jsx",["873","874"],"import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\n// import { brands } from '../../utils/warehouse.utils'\nimport { useFetch } from '../../hooks/useFetch'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    Container,\n    ApplyButton,\n    ResetButton,\n    OptionsContainer\n} from './modal-eshop-filter.styles'\n\nconst EshopFilterModal = ({ close, applyFilter, resetFilter }) => {\n    const [filter, setFilter] = useState({\n        limit: 100\n    })\n\n    const { response, isLoading, refetch } = useFetch(`api/store/products/${filter?.filters?.type}/filters`, !filter?.filters?.type, \"GET\")\n    const [filters, setFilters] = useState(null)\n\n    const handleChangeFilters = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            if (Object.keys(filter?.filters).length > 1) {\n                delete filter?.filters[name]\n                setFilter({\n                    ...filter\n                })\n            } else {\n                delete filter[\"filters\"]\n                setFilter({\n                    ...filter\n                })\n            }\n            return\n        }\n\n        setFilter(prevValue => ({\n            ...prevValue,\n            filters: {\n                ...prevValue?.filters,\n                [name]: value\n            }\n        }))\n    }\n\n    const handleChangeFilterQuery = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete filter[\"query\"]\n            setFilter({\n                ...filter\n            })\n            return\n        }\n\n        setFilter(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n\n    useEffect(() => {\n        if (!filter?.filters?.type) return\n        setFilters(null)\n        refetch()\n    }, [filter?.filters?.type])\n\n    useEffect(() => {\n        if (isLoading) return\n        if (response?.filters) {\n            setFilters(response?.filters)\n        }\n    }, [isLoading])\n\n    useEffect(() => {\n        return () => {\n            setFilter({})\n        }\n    }, [])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>Vybrať filter</h2>\n                <Container>\n                    <div>\n                        <h4>Typ produktu</h4>\n                        <CustomCheckbox\n                            label=\"Dioptrické\"\n                            isActive={filter?.filters?.type === 1}\n                            handleClick={() => handleChangeFilters({\n                                target: {\n                                    name: 'type',\n                                    value: filter?.filters?.type ? filter?.filters?.type === 1 ? '' : 1 : 1\n                                }\n                            })}\n                        />\n                        <CustomCheckbox\n                            label=\"Slnečné\"\n                            isActive={filter?.filters?.type === 2}\n                            handleClick={() => handleChangeFilters({\n                                target: {\n                                    name: 'type',\n                                    value: filter?.filters?.type ? filter?.filters?.type === 2 ? '' : 2 : 2\n                                }\n                            })}\n                        />\n                        <CustomCheckbox\n                            label=\"Športové\"\n                            isActive={filter?.filters?.type === 4}\n                            handleClick={() => handleChangeFilters({\n                                target: {\n                                    name: 'type',\n                                    value: filter?.filters?.type ? filter?.filters?.type === 4 ? '' : 4 : 4\n                                }\n                            })}\n                        />\n                        <CustomCheckbox\n                            label=\"Kontaktné šošovky\"\n                            isActive={filter?.filters?.type === 3}\n                            handleClick={() => handleChangeFilters({\n                                target: {\n                                    name: 'type',\n                                    value: filter?.filters?.type ? filter?.filters?.type === 3 ? '' : 3 : 3\n                                }\n                            })}\n                        />\n                        <CustomCheckbox\n                            label=\"Doplnky\"\n                            isActive={filter?.filters?.type === 5}\n                            handleClick={() => handleChangeFilters({\n                                target: {\n                                    name: 'type',\n                                    value: filter?.filters?.type ? filter?.filters?.type === 5 ? '' : 5 : 5\n                                }\n                            })}\n                        />\n                        <CustomCheckbox\n                            label=\"Služby\"\n                            isActive={filter?.filters?.type === 6}\n                            handleClick={() => handleChangeFilters({\n                                target: {\n                                    name: 'type',\n                                    value: filter?.filters?.type ? filter?.filters?.type === 6 ? '' : 6 : 6\n                                }\n                            })}\n                        />\n                        <CustomCheckbox\n                            label=\"Outlet\"\n                            isActive={filter?.filters?.outlet}\n                            handleClick={() => handleChangeFilters({\n                                target: {\n                                    name: 'outlet',\n                                    value: filter?.filters?.outlet ? !filter?.filters?.outlet : true\n                                }\n                            })}\n                        />\n                    </div>\n                    <h3>Filtovat podla:</h3>\n                    <div>\n                        <CustomInput\n                            label='Meno produktu'\n                            name='query'\n                            value={filter?.query || \"\"}\n                            handleChange={handleChangeFilterQuery}\n                        />\n                    </div>\n                    <div>\n                        <CustomInput\n                            label='Značka produktu'\n                            name='brand'\n                            value={filter?.filters?.brand || \"\"}\n                            handleChange={handleChangeFilters}\n                            list=\"brands\"\n\n                        />\n                        <datalist id=\"brands\">\n                            {filters?.brands.length > 0 && filters.brands.map((brand, idx) => (\n                                <option key={idx} value={brand} />\n                            ))}\n                        </datalist>\n                    </div>\n                    {/* <div>\n                        <CustomInput\n                            label='Kategoria produktu'\n                            name='category'\n                            value={filter?.filters?.category || \"\"}\n                            handleChange={handleChangeFilters}\n                            list=\"categories\"\n\n                        />\n                        <datalist id=\"categories\">\n                            {filters?.categories.length > 0 && filters.categories.map((brand, idx) => (\n                                <option key={idx} value={brand} />\n                            ))}\n                        </datalist>\n\n                    </div> */}\n                    <div>\n                        <CustomInput\n                            label='Eankód produktu'\n                            name='eanCode'\n                            value={filter?.filters?.eanCode || \"\"}\n                            handleChange={handleChangeFilters}\n                        />\n                    </div>\n\n\n                </Container>\n\n                <OptionsContainer>\n                    <ResetButton onClick={() => resetFilter()}>Resetovať filter</ResetButton>\n                    <ApplyButton onClick={() => applyFilter(filter)}>Filtrovať</ApplyButton>\n                </OptionsContainer>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default EshopFilterModal\n","/app/src/components/product-overview/product-overview.component.jsx",[],"/app/src/components/modal-images/modal-images.component.jsx",[],"/app/src/components/modal-get-product-data/modal-get-product-data.component.jsx",["875"],"import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport { formatAvailable } from '../../utils/orders.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SearchButton,\n    ProductTableHead,\n    ProductTableRow,\n    TableCol,\n    TableContainer\n} from './modal-get-product-data.styles'\n\nconst GetProductDataModal = ({ close, getSingleProduct, productObj, setProductObj }) => {\n    const [searchQuery, setSearchQuery] = useState(\"\")\n\n    const [productItems, setProductItems] = useState([])\n\n    const [query, setQuery] = useState({\n        limit: 10,\n        skip: 0,\n        filters: {\n            type: productObj.type\n        },\n        sortBy: {\n            date: -1\n        }\n    })\n    const { response, isLoading, refetch } = useFetchByQuery(\"api/admin/products/filter\", query)\n\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        setQuery({\n            ...query,\n            query: searchQuery\n        })\n        refetch()\n    }\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== \"\") {\n            if (e.key === 'Enter') {\n                setQuery({\n                    ...query,\n                    query: searchQuery,\n                })\n                refetch()\n            }\n        }\n    }\n\n    const handleClick = (id) => {\n        getSingleProduct(id, (data) => {\n            const { product } = data\n\n            if (product.type === 1 || product.type === 2 || product.type === 4) {\n                delete product['__v']\n                delete product['soldAmount']\n                delete product['ordered']\n                delete product['_id']\n                delete product['boughtTogether']\n                delete product['contactLenses']\n                delete product['date']\n\n                setProductObj({\n                    ...product,\n                    // id: product._id,\n                    ...(!product._id) && { _id: product._id },\n                    price: (product.price / 100).toFixed(2),\n                    eanCode: product.eanCode,\n                    image: product.image._id,\n                    specs: {\n                        ...product.specs,\n                        size: [...Array(4)].map((value, idx) => product.specs.size[idx] ? product.specs.size[idx] : 0)\n                    }\n                })\n            }\n            if (product.type === 3) {\n                delete product['__v']\n                delete product['soldAmount']\n                delete product['ordered']\n                delete product['_id']\n                delete product['boughtTogether']\n                delete product['specs']\n                delete product['date']\n\n                setProductObj({\n                    ...product,\n                    // id: product._id,\n                    ...(!product._id) && { _id: product._id },\n                    price: (product.price / 100).toFixed(2),\n                    // colorCode: product.colorCode ?? \"\",\n                    image: product.image._id,\n                    // specs: {\n                    //     ...product.specs,\n                    //     size: [...Array(4)].map((value, idx) => product.specs.size[idx] ? product.specs.size[idx] : 0)\n                    // }\n                })\n            }\n        })\n        close()\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n\n        setProductItems(response.products)\n    }, [isLoading])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>Vyhľadať produkt</h2>\n                <div>\n                    <CustomInput\n                        label='Názov produktu, eanCode alebo popis'\n                        value={searchQuery}\n                        handleChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n\n                <TableContainer>\n                    <ProductTableHead>\n                        <TableCol isHead>eanKód</TableCol>\n                        <TableCol isHead>Obrázok</TableCol>\n                        <TableCol isHead>Názov</TableCol>\n                        <TableCol isHead>Značka</TableCol>\n                        <TableCol isHead>Cena</TableCol>\n                        <TableCol isHead>Na sklade</TableCol>\n                    </ProductTableHead>\n                    {productItems.map((product, idx) => (\n                        <ProductTableRow key={idx} onClick={() => handleClick(product._id)}>\n                            <TableCol>{product.eanCode}</TableCol>\n                            <TableCol>\n                                {product?.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${product.image.imagePath}`} alt={product.image.alt} />}\n                            </TableCol>\n                            <TableCol>{product.name}</TableCol>\n                            <TableCol>{product.brand}</TableCol>\n                            <TableCol>{(product.price / 100).toFixed(2)}€</TableCol>\n                            <TableCol>{product.type === 6 ? 'Služba' : formatAvailable(product.available)}</TableCol>\n                        </ProductTableRow>\n                    ))}\n                </TableContainer>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default GetProductDataModal\n","/app/src/components/modal-product-image-gallery/modal-product-image-gallery.component.jsx",["876","877","878","879","880","881","882","883","884"],"import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\nimport ImageModal from '../modal-images/modal-images.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    UploadButton,\n    NewImageContainer,\n    DeleteButton,\n    NewImagesContainer,\n    SubmitButton,\n    UploadImageButton\n} from './modal-product-image-gallery.styles'\n\nconst ProductImageGalleryModal = ({ close, setImage }) => {\n    const tabs = [\n        'upload',\n        'select'\n    ]\n    const [tab, setTab] = useState(tabs[0])\n    const [images, setImages] = useState([])\n    const [files, setFiles] = useState([])\n\n    const [isModalVisible, setIsModalVisible] = useState(false)\n\n    const [selectedImages, setSelectedImages] = useState([])\n    const [primaryImage, setPrimaryImage] = useState(null)\n\n    const handleFileInputChange = (e) => {\n        const files = e.target.files;\n        var filesArr = Array.prototype.slice.call(files);\n        const filesArrWithUrl = filesArr.map((file) => ({\n            file: file,\n            url: URL.createObjectURL(file)\n        }))\n        setFiles(prevValue => ([...prevValue, ...filesArrWithUrl]))\n    }\n\n    const selectImage = (img) => {\n        setSelectedImages(prevValue => ([...prevValue, img]))\n    }\n\n    const removeSelectedImage = img => {\n        const arr = selectedImages.filter(image => image._id !== img._id)\n        setSelectedImages(arr)\n    }\n\n    const selectPrimaryImage = img => {\n        setPrimaryImage(img)\n    }\n\n    const handleSubmit = (primaryImg, otherImages) => {\n\n        // console.log(primaryImg._id)\n\n\n        if (primaryImg) {\n            const arr = otherImages.map(img => img._id)\n            const filteredArr = otherImages.filter(img => img._id !== primaryImg._id)\n            setImage(primaryImg._id, filteredArr, primaryImg)\n            close()\n        } else {\n            // const arr = otherImages.map(img => img._id)\n            // console.log(arr)\n            const firstIndex = otherImages[0]\n            const filteredArr = otherImages.filter(img => img._id !== firstIndex._id)\n            setImage(firstIndex._id, filteredArr, firstIndex)\n            close()\n        }\n\n\n    }\n\n    const { response, isLoading, refetch } = useFetchByQuery('api/images/filter', {\n        sortBy: {\n            dateCreated: -1\n        },\n        limit: 10,\n        skip: 0\n    })\n    useEffect(() => {\n        if (isLoading) return\n        if (!response) return\n        setImages(response.images)\n    }, [isLoading])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            {isModalVisible && <ImageModal close={() => setIsModalVisible(false)} setImage={refetch} />}\n\n            <CloseButton onClick={close} />\n            <Modal>\n                <UploadImageButton onClick={() => setIsModalVisible(true)}>Pridať</UploadImageButton>\n\n                <h2>1. Vybrať obrázky</h2>\n\n                <NewImagesContainer>\n                    {images?.length > 0 && images.map((img) => (\n                        <NewImageContainer key={img._id}>\n                            {/* <DeleteButton >&#10005;</DeleteButton> */}\n                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\n                        </NewImageContainer>\n                    ))}\n                </NewImagesContainer>\n\n                {selectedImages.length > 0 && <h2>2. Zvolené obrázky</h2>}\n                {selectedImages.length > 0 && <p>Vybrať hlavný obrázok</p>}\n\n                <NewImagesContainer>\n                    {selectedImages.length > 0 && selectedImages.map((img) => (\n                        <NewImageContainer key={img._id} isPrimary={img._id === primaryImage?._id}>\n                            <DeleteButton onClick={() => removeSelectedImage(img)} >&#10005;</DeleteButton>\n                            <img onClick={() => selectPrimaryImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} alt={img.alt} />\n                        </NewImageContainer>\n                    ))}\n                </NewImagesContainer>\n\n                <SubmitButton onClick={() => handleSubmit(primaryImage, selectedImages)}>Dokončiť</SubmitButton>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default ProductImageGalleryModal\n\n                // <h2>1. Vybrať obrázky</h2>\n\n                // <UploadButton htmlFor='image'>\n                //     <input\n                //         id='image'\n                //         type='file'\n                //         name='image'\n                //         multiple\n                //         accept=\"image/png, image/jpeg\"\n                //         onChange={handleFileInputChange}\n                //     />\n                //     Vybrať\n                // </UploadButton>\n\n                // {files.length > 0 && (\n                //     <div>\n                //         <h2>2. Vybrat hlavný obrázok</h2>\n                //     </div>\n                // )}\n\n                // <NewImagesContainer>\n                //     {files.length > 0 && files.map(({ url }, idx) => (\n                //         <NewImageContainer key={idx}>\n                //             <DeleteButton >&#10005;</DeleteButton>\n                //             <img src={url} alt={`new image ${idx}`} />\n                //         </NewImageContainer>\n                //     ))}\n                // </NewImagesContainer>\n","/app/src/components/modal-get-lenses-data/modal-get-lenses-data.component.jsx",["885","886"],"import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport { formatAvailable } from '../../utils/orders.utils'\n\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SearchButton,\n    ProductTableHead,\n    ProductTableRow,\n    TableCol,\n    TableContainer\n} from './modal-get-lenses-data.styles'\n\nconst GetLensesDataModal = ({ close, getSingleLenses, productObj, setProductObj, fillProductData }) => {\n    const [searchQuery, setSearchQuery] = useState(\"\")\n\n    const [productItems, setProductItems] = useState([])\n\n    const [query, setQuery] = useState({\n        limit: 10,\n        skip: 0,\n    })\n\n    const { response, isLoading, refetch } = useFetchByQuery(\"api/admin/lenses/filter\", query)\n\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        setQuery({\n            ...query,\n            query: searchQuery\n        })\n        refetch()\n    }\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== \"\") {\n            if (e.key === 'Enter') {\n                setQuery({\n                    ...query,\n                    query: searchQuery\n                })\n                refetch()\n            }\n        }\n    }\n\n    const handleClick = (id) => {\n        getSingleLenses(id, (data) => {\n            const { lenses } = data\n\n            delete lenses['__v']\n            delete lenses['_id']\n            delete lenses['soldAmount']\n            delete lenses['dateCreated']\n\n            fillProductData({\n                ...lenses,\n                image: lenses.image._id,\n                lensType: lenses.type || \"číre\",\n                dioptric: lenses.dioptric || false,\n                type: 0,\n                price: (lenses.price / 100).toFixed(2),\n            })\n\n        })\n        close()\n\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n\n        setProductItems(response.lenses)\n    }, [isLoading])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>Vyhľadať šošovky</h2>\n                <div>\n                    <CustomInput\n                        label='Názov šošoviek, eanCode alebo popis'\n                        value={searchQuery}\n                        handleChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n\n                <TableContainer>\n                    <ProductTableHead>\n                        <TableCol isHead>eanKód</TableCol>\n                        <TableCol isHead>Názov</TableCol>\n                        <TableCol isHead>Dioptrie</TableCol>\n                        <TableCol isHead>Cylinder</TableCol>\n                        <TableCol isHead>Cena</TableCol>\n                    </ProductTableHead>\n                    {productItems.map((product, idx) => (\n                        <ProductTableRow key={idx} onClick={() => handleClick(product._id)}>\n                            <TableCol>{product.eanCode}</TableCol>\n                            <TableCol>{product.name}</TableCol>\n                            <TableCol>\n                                {product.dioptersRange && <p>{`od ${product.dioptersRange[0]} do ${product.dioptersRange[1]}`}</p>}\n                            </TableCol>\n                            <TableCol>\n                                {product.cylinderRange && <p>{`od ${product.cylinderRange[0]} do ${product.cylinderRange[1]}`}</p>}\n                            </TableCol>\n                            <TableCol>{(product.price / 100).toFixed(2)}€</TableCol>\n                        </ProductTableRow>\n                    ))}\n                </TableContainer>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default GetLensesDataModal\n","/app/src/components/product-accessories-form/product-accessories-form.component.jsx",["887","888","889"],"import React, { useState, useEffect } from \"react\"\n\nimport CustomInput from \"../custom-input/custom-input.component\"\nimport CustomTextarea from \"../custom-textarea/custom-textarea.component\"\n\nimport { getOutletPrice } from \"../../hooks/useProduct\"\n\nimport {\n\tAccessoriesFormContainer,\n\tAccessoriesContainer,\n\tStockContainer,\n\tImageContainer,\n\tProductImage,\n\tDeleteButton,\n\tNewImageContainer,\n\tNewImagesContainer,\n\tBrandedCheckbox,\n} from \"./product-accessories-form.styles\"\n\nconst ProductAccessoriesForm = ({\n\tproduct,\n\thandleChange,\n\tselectedImage,\n\tsetImageModal,\n\thandleAvailableChange,\n\tcheckParameter,\n\tretailNames,\n\tcurrentUser,\n\tisUpdating,\n\tfilters,\n\tproductObj,\n}) => {\n\tconst [isOutlet, setIsOutlet] = useState(false)\n\n\tconst handleIsOutletClick = (isOutletBool) => {\n\t\tif (isOutletBool) {\n\t\t\thandleChange({\n\t\t\t\ttarget: {\n\t\t\t\t\tname: \"outlet\",\n\t\t\t\t\tvalue: false,\n\t\t\t\t},\n\t\t\t})\n\t\t\tsetIsOutlet(false)\n\t\t} else {\n\t\t\thandleChange({\n\t\t\t\ttarget: {\n\t\t\t\t\tname: \"outlet\",\n\t\t\t\t\tvalue: true,\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tsetIsOutlet(true)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (product.outlet) setIsOutlet(true)\n\t}, [isOutlet])\n\n\treturn (\n\t\t<AccessoriesFormContainer>\n\t\t\t<AccessoriesContainer>\n\t\t\t\t<h3>Základné informácie</h3>\n\t\t\t\t<CustomInput\n\t\t\t\t\tlabel=\"eanCode*\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"eanCode\"\n\t\t\t\t\tvalue={product.eanCode.toString() ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t/>\n\t\t\t\t<CustomInput\n\t\t\t\t\tlabel=\"Názov doplnku*\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tvalue={product.name ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t/>\n\n\t\t\t\t<CustomInput\n\t\t\t\t\tlabel=\"Značka\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"brand\"\n\t\t\t\t\tvalue={product.brand ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\tlist=\"brands\"\n\t\t\t\t/>\n\n\t\t\t\t<datalist id=\"brands\">\n\t\t\t\t\t{filters?.brands &&\n\t\t\t\t\t\tfilters?.brands.map((brand, idx) => (\n\t\t\t\t\t\t\t<option key={idx} value={brand} />\n\t\t\t\t\t\t))}\n\t\t\t\t</datalist>\n\n\t\t\t\t<div>\n\t\t\t\t\t<BrandedCheckbox\n\t\t\t\t\t\tlabel={\"Outlet\"}\n\t\t\t\t\t\tisActive={isOutlet}\n\t\t\t\t\t\thandleClick={() => handleIsOutletClick(isOutlet)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{isOutlet && (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\tlabel=\"zľava v %\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"outletPercentage\"\n\t\t\t\t\t\t\t\tvalue={product?.outletPercentage?.toString() || \"\"}\n\t\t\t\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t{/* <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"categories\"\n\n                />\n\n                <datalist id=\"categories\">\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist> */}\n\n\t\t\t\t{/* {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />} */}\n\n\t\t\t\t<CustomTextarea\n\t\t\t\t\tlabel=\"Popis\"\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\trows=\"5\"\n\t\t\t\t\tvalue={product.description ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\n\t\t\t\t<CustomInput\n\t\t\t\t\tlabel=\"Cena*\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"price\"\n\t\t\t\t\tvalue={product.price.toString() ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\n\t\t\t\t{isOutlet && (\n\t\t\t\t\t<div style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}>\n\t\t\t\t\t\t<p>Outlet cena:</p>{\" \"}\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{getOutletPrice(product.price * 100, product.outletPercentage)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t<ImageContainer>\n\t\t\t\t\t<ProductImage\n\t\t\t\t\t\tonClick={() => setImageModal(true)}\n\t\t\t\t\t\thasImage={selectedImage}\n\t\t\t\t\t>\n\t\t\t\t\t\t{!selectedImage && \"Vybrať obrázok\"}\n\t\t\t\t\t\t{selectedImage && (\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`}\n\t\t\t\t\t\t\t\talt={selectedImage.alt}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ProductImage>\n\t\t\t\t</ImageContainer>\n\n\t\t\t\t<NewImagesContainer>\n\t\t\t\t\t{productObj?.bonusImages &&\n\t\t\t\t\t\tproductObj?.bonusImages.map((img) => (\n\t\t\t\t\t\t\t<NewImageContainer key={img._id}>\n\t\t\t\t\t\t\t\t{/* <DeleteButton >&#10005;</DeleteButton> */}\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`}\n\t\t\t\t\t\t\t\t\talt={img.alt}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</NewImageContainer>\n\t\t\t\t\t\t))}\n\t\t\t\t</NewImagesContainer>\n\t\t\t</AccessoriesContainer>\n\t\t\t{currentUser.admin >= 2 ? (\n\t\t\t\t<StockContainer>\n\t\t\t\t\t<h3>Skladové zásoby</h3>\n\t\t\t\t\t{product.available.map((value, idx) => {\n\t\t\t\t\t\tif (idx === 0) return\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\tcurrentUser.admin === 1\n\t\t\t\t\t\t\t\t\t\t? retailNames[currentUser.premises - 1]\n\t\t\t\t\t\t\t\t\t\t: retailNames[idx]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tname={\"available\"}\n\t\t\t\t\t\t\t\tvalue={checkParameter(product.available, idx)}\n\t\t\t\t\t\t\t\thandleChange={(e) => handleAvailableChange(e, idx)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</StockContainer>\n\t\t\t) : (\n\t\t\t\t<StockContainer>\n\t\t\t\t\t<h3>Skladové zásoby</h3>\n\t\t\t\t\t<CustomInput\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\tcurrentUser.admin === 1\n\t\t\t\t\t\t\t\t? retailNames[currentUser.premises]\n\t\t\t\t\t\t\t\t: retailNames[currentUser.premises]\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname={\"available\"}\n\t\t\t\t\t\tvalue={checkParameter(product.available, currentUser.premises)}\n\t\t\t\t\t\thandleChange={(e) => handleAvailableChange(e, currentUser.premises)}\n\t\t\t\t\t/>\n\t\t\t\t</StockContainer>\n\t\t\t)}\n\t\t</AccessoriesFormContainer>\n\t)\n}\n\nexport default ProductAccessoriesForm\n","/app/src/components/product-glasses-form/product-glasses-form.component.jsx",["890","891","892","893","894","895"],"import React, { useState, useEffect } from \"react\"\n\nimport CustomInput from \"../custom-input/custom-input.component\"\nimport CustomTextarea from \"../custom-textarea/custom-textarea.component\"\n\nimport {\n\tglassesColors,\n\tglassesMaterials,\n\tglassesShapes,\n\tbrands,\n} from \"../../utils/warehouse.utils\"\n\nimport { AiOutlineCopy } from \"react-icons/ai\"\n\nimport { getOutletPrice } from \"../../hooks/useProduct\"\n\nimport {\n\tImageContainer,\n\tProductImage,\n\tGlassesContainerForm,\n\tGlassesContainer,\n\tGlassesParameterContainer,\n\tStockContainer,\n\tCustomSelect,\n\tBrandedCheckbox,\n\tCopyButton,\n\tUploadButton,\n\tDeleteButton,\n\tNewImageContainer,\n\tNewImagesContainer,\n} from \"./product-glasses-form.styles.jsx\"\n\nconst ProductGlassesForm = ({\n\tproduct,\n\thandleChange,\n\tselectedImage,\n\tretailNames,\n\tcurrentUser,\n\tcheckParameter,\n\thandleAvailableChange,\n\thandleGlassesParametersChange,\n\thandleGlassesSpecsSizeChange,\n\thandleSpecsChange,\n\tglassesParameters,\n\tsetImageModal,\n\t// isUpdating,\n\tfilters,\n\thandleGetProductData,\n\tproductObj,\n}) => {\n\tconst [isBranded, setIsBranded] = useState(true)\n\tconst [allBrands, setAllBrands] = useState([])\n\n\tconst handleIsBrandedClick = (isBrandedBool) => {\n\t\tif (isBrandedBool) {\n\t\t\thandleChange({\n\t\t\t\ttarget: {\n\t\t\t\t\tname: \"brand\",\n\t\t\t\t\tvalue: \"Neznačkové\",\n\t\t\t\t},\n\t\t\t})\n\t\t\tsetIsBranded(false)\n\t\t} else {\n\t\t\thandleChange({\n\t\t\t\ttarget: {\n\t\t\t\t\tname: \"brand\",\n\t\t\t\t\tvalue: \"\",\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tsetIsBranded(true)\n\t\t}\n\t}\n\n\tconst [isOutlet, setIsOutlet] = useState(false)\n\n\tconst handleIsOutletClick = (isOutletBool) => {\n\t\tif (isOutletBool) {\n\t\t\thandleChange({\n\t\t\t\ttarget: {\n\t\t\t\t\tname: \"outlet\",\n\t\t\t\t\tvalue: false,\n\t\t\t\t},\n\t\t\t})\n\t\t\tsetIsOutlet(false)\n\t\t} else {\n\t\t\thandleChange({\n\t\t\t\ttarget: {\n\t\t\t\t\tname: \"outlet\",\n\t\t\t\t\tvalue: true,\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tsetIsOutlet(true)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (product.outlet) setIsOutlet(true)\n\t}, [isOutlet])\n\n\tuseEffect(() => {\n\t\tif (product.brand === \"Neznačkové\") setIsBranded(false)\n\t}, [isBranded])\n\n\tuseEffect(() => {\n\t\tif (!filters?.brands) return\n\t\tsetAllBrands([...filters?.brands, ...brands])\n\t}, [brands, filters?.brands])\n\n\treturn (\n\t\t<GlassesContainerForm>\n\t\t\t<GlassesContainer>\n\t\t\t\t<CopyButton onClick={() => handleGetProductData(true)}>\n\t\t\t\t\t<AiOutlineCopy />\n\t\t\t\t</CopyButton>\n\t\t\t\t<h3>Základné informácie</h3>\n\t\t\t\t<CustomInput\n\t\t\t\t\tlabel=\"eanCode*\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"eanCode\"\n\t\t\t\t\tvalue={product.eanCode.toString() ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t/>\n\t\t\t\t<CustomInput\n\t\t\t\t\tlabel=\"Názov produktu*\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tvalue={product.name ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t/>\n\t\t\t\t<CustomInput\n\t\t\t\t\tlabel=\"Kód\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"subname\"\n\t\t\t\t\tvalue={product.subname ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t/>\n\n\t\t\t\t<BrandedCheckbox\n\t\t\t\t\tlabel={\"Značkové\"}\n\t\t\t\t\tisActive={isBranded}\n\t\t\t\t\thandleClick={() => handleIsBrandedClick(isBranded)}\n\t\t\t\t/>\n\n\t\t\t\t{isBranded && (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\tlabel=\"Značka\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"brand\"\n\t\t\t\t\t\t\tvalue={product.brand ?? \"\"}\n\t\t\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\t\t\tlist=\"brands\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<datalist id=\"brands\">\n\t\t\t\t\t\t\t{allBrands.map((brand, idx) => (\n\t\t\t\t\t\t\t\t<option key={idx} value={brand} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</datalist>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\n\t\t\t\t{!isBranded && (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\tlabel=\"Značka\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"subbrand\"\n\t\t\t\t\t\t\tvalue={product.subbrand ?? \"\"}\n\t\t\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\t\t\tlist=\"brands\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<datalist id=\"brands\">\n\t\t\t\t\t\t\t{allBrands.map((brand, idx) => (\n\t\t\t\t\t\t\t\t<option key={idx} value={brand} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</datalist>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\n\t\t\t\t<div>\n\t\t\t\t\t<BrandedCheckbox\n\t\t\t\t\t\tlabel={\"Outlet\"}\n\t\t\t\t\t\tisActive={isOutlet}\n\t\t\t\t\t\thandleClick={() => handleIsOutletClick(isOutlet)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{isOutlet && (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\tlabel=\"zľava v %\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"outletPercentage\"\n\t\t\t\t\t\t\t\tvalue={product?.outletPercentage?.toString() || \"\"}\n\t\t\t\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t{/* <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"categories\"\n\n                /> */}\n\n\t\t\t\t{/* <datalist id=\"categories\">\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist> */}\n\n\t\t\t\t{/* <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                /> */}\n\n\t\t\t\t<CustomTextarea\n\t\t\t\t\tlabel=\"Popis\"\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\trows=\"5\"\n\t\t\t\t\tvalue={product.description ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\n\t\t\t\t<CustomInput\n\t\t\t\t\tlabel=\"Cena*\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"price\"\n\t\t\t\t\tvalue={product.price.toString() ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\n\t\t\t\t{isOutlet && (\n\t\t\t\t\t<div style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}>\n\t\t\t\t\t\t<p>Outlet cena:</p>{\" \"}\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{getOutletPrice(product.price * 100, product.outletPercentage)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t<ImageContainer>\n\t\t\t\t\t<ProductImage\n\t\t\t\t\t\tonClick={() => setImageModal(true)}\n\t\t\t\t\t\thasImage={selectedImage}\n\t\t\t\t\t>\n\t\t\t\t\t\t{!selectedImage && \"Vybrať obrázok\"}\n\t\t\t\t\t\t{selectedImage && (\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`}\n\t\t\t\t\t\t\t\talt={selectedImage.alt}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ProductImage>\n\t\t\t\t</ImageContainer>\n\n\t\t\t\t<NewImagesContainer>\n\t\t\t\t\t{productObj?.bonusImages &&\n\t\t\t\t\t\tproductObj?.bonusImages.map((img, idx) => (\n\t\t\t\t\t\t\t<NewImageContainer key={idx}>\n\t\t\t\t\t\t\t\t{/* <DeleteButton >&#10005;</DeleteButton> */}\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`}\n\t\t\t\t\t\t\t\t\talt={img.alt}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</NewImageContainer>\n\t\t\t\t\t\t))}\n\t\t\t\t</NewImagesContainer>\n\t\t\t</GlassesContainer>\n\t\t\t<div>\n\t\t\t\t<GlassesParameterContainer>\n\t\t\t\t\t<h3>Parametre</h3>\n\t\t\t\t\t<CustomInput\n\t\t\t\t\t\tlabel=\"Farebný kód\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"colorCode\"\n\t\t\t\t\t\tvalue={glassesParameters.colorCode ?? \"\"}\n\t\t\t\t\t\thandleChange={(e) => handleGlassesParametersChange(e)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\tlabel=\"Farba rámu\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"frameColor\"\n\t\t\t\t\t\t\tvalue={glassesParameters.specs.frameColor ?? \"\"}\n\t\t\t\t\t\t\thandleChange={(e) => handleSpecsChange(e)}\n\t\t\t\t\t\t\tlist=\"colors\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<datalist id=\"colors\">\n\t\t\t\t\t\t\t{glassesColors.map((color, idx) => (\n\t\t\t\t\t\t\t\t<option key={idx} value={color} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</datalist>\n\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\tlabel=\"Materiál rámu\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"frameMaterial\"\n\t\t\t\t\t\t\tvalue={glassesParameters.specs.frameMaterial ?? \"\"}\n\t\t\t\t\t\t\thandleChange={(e) => handleSpecsChange(e)}\n\t\t\t\t\t\t\tlist=\"materials\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<datalist id=\"materials\">\n\t\t\t\t\t\t\t{glassesMaterials.map((material, idx) => (\n\t\t\t\t\t\t\t\t<option key={idx} value={material} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</datalist>\n\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\tlabel=\"Tvar rámu\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"frameStyle\"\n\t\t\t\t\t\t\tvalue={glassesParameters.specs.frameStyle ?? \"\"}\n\t\t\t\t\t\t\thandleChange={(e) => handleSpecsChange(e)}\n\t\t\t\t\t\t\tlist=\"shapes\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<datalist id=\"shapes\">\n\t\t\t\t\t\t\t{glassesShapes.map((shape, idx) => (\n\t\t\t\t\t\t\t\t<option key={idx} value={shape} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</datalist>\n\t\t\t\t\t\t{/* <CustomInput\n                            label=\"Farba šošovky\"\n                            type='text'\n                            name='lensColor'\n                            value={glassesParameters.specs.lensColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        /> */}\n\t\t\t\t\t\t<CustomSelect\n\t\t\t\t\t\t\tlabel=\"Pohlavie\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"sex\"\n\t\t\t\t\t\t\tvalue={glassesParameters?.specs?.sex || \"\"}\n\t\t\t\t\t\t\tonChange={(e) => handleSpecsChange(e)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value=\"\">-</option>\n\t\t\t\t\t\t\t<option value=\"M\">Pánske</option>\n\t\t\t\t\t\t\t<option value=\"W\">Dámske</option>\n\t\t\t\t\t\t\t<option value=\"CH\">Detské</option>\n\t\t\t\t\t\t\t<option value=\"U\">Nezáleží</option>\n\t\t\t\t\t\t</CustomSelect>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h4>Velkosť</h4>\n\t\t\t\t\t\t{glassesParameters.specs.size.map((value, idx) => (\n\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\tidx === 0\n\t\t\t\t\t\t\t\t\t\t? \"Šírka očnice (mm)\"\n\t\t\t\t\t\t\t\t\t\t: idx === 1\n\t\t\t\t\t\t\t\t\t\t? \"Výška očnice (mm)\"\n\t\t\t\t\t\t\t\t\t\t: idx === 2\n\t\t\t\t\t\t\t\t\t\t? \"Veľkosť nosníka (mm)\"\n\t\t\t\t\t\t\t\t\t\t: \"Dĺžka stranice (mm)\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"size\"\n\t\t\t\t\t\t\t\tvalue={checkParameter(glassesParameters.specs.size, idx)}\n\t\t\t\t\t\t\t\thandleChange={(e) => handleGlassesSpecsSizeChange(e, idx)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</GlassesParameterContainer>\n\t\t\t\t{currentUser.admin >= 2 ? (\n\t\t\t\t\t<StockContainer>\n\t\t\t\t\t\t<h3>Skladové zásoby</h3>\n\t\t\t\t\t\t{product.available.map((value, idx) => {\n\t\t\t\t\t\t\tif (idx === 0) return\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\tcurrentUser.admin === 1\n\t\t\t\t\t\t\t\t\t\t\t? retailNames[currentUser.premises]\n\t\t\t\t\t\t\t\t\t\t\t: retailNames[idx]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tname={\"available\"}\n\t\t\t\t\t\t\t\t\tvalue={checkParameter(product.available, idx)}\n\t\t\t\t\t\t\t\t\thandleChange={(e) => handleAvailableChange(e, idx)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</StockContainer>\n\t\t\t\t) : (\n\t\t\t\t\t<StockContainer>\n\t\t\t\t\t\t<h3>Skladové zásoby</h3>\n\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\tcurrentUser.admin === 1\n\t\t\t\t\t\t\t\t\t? retailNames[currentUser.premises]\n\t\t\t\t\t\t\t\t\t: retailNames[currentUser.premises]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tname={\"available\"}\n\t\t\t\t\t\t\tvalue={checkParameter(product.available, currentUser.premises)}\n\t\t\t\t\t\t\thandleChange={(e) =>\n\t\t\t\t\t\t\t\thandleAvailableChange(e, currentUser.premises)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</StockContainer>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</GlassesContainerForm>\n\t)\n}\n\nexport default ProductGlassesForm\n","/app/src/components/product-contact-lenses-form/product-contact-lenses-form.component.jsx",["896","897","898"],"import React, { useEffect, useState } from \"react\"\n\nimport CustomInput from \"../custom-input/custom-input.component\"\nimport CustomTextarea from \"../custom-textarea/custom-textarea.component\"\n\n// import { lensesBrands } from '../../utils/warehouse.utils'\nimport { AiOutlineCopy } from \"react-icons/ai\"\n\nimport { getOutletPrice } from \"../../hooks/useProduct\"\n\nimport {\n\tContactLensesContainer,\n\tContactLensesFormContainer,\n\tStockContainer,\n\tContactLensesParametersContainer,\n\tIncreaseButton,\n\tImageContainer,\n\tProductImage,\n\tCopyButton,\n\tDeleteButton,\n\tNewImageContainer,\n\tNewImagesContainer,\n\tBrandedCheckbox,\n} from \"./product-contact-lenses-form.styles\"\n\nconst ProductContactLensesForm = ({\n\tproduct,\n\thandleChange,\n\tsetImageModal,\n\tselectedImage,\n\tcheckParameter,\n\thandleContactLensesChange,\n\thandleAddNewParameter,\n\tcontactLensesParameters,\n\tretailNames,\n\tcurrentUser,\n\thandleAvailableChange,\n\tisUpdating,\n\tfilters,\n\tproductObj,\n\thandleGetProductData,\n}) => {\n\tconst [isOutlet, setIsOutlet] = useState(false)\n\n\tconst handleIsOutletClick = (isOutletBool) => {\n\t\tif (isOutletBool) {\n\t\t\thandleChange({\n\t\t\t\ttarget: {\n\t\t\t\t\tname: \"outlet\",\n\t\t\t\t\tvalue: false,\n\t\t\t\t},\n\t\t\t})\n\t\t\tsetIsOutlet(false)\n\t\t} else {\n\t\t\thandleChange({\n\t\t\t\ttarget: {\n\t\t\t\t\tname: \"outlet\",\n\t\t\t\t\tvalue: true,\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tsetIsOutlet(true)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (product.outlet) setIsOutlet(true)\n\t}, [isOutlet])\n\n\treturn (\n\t\t<ContactLensesFormContainer>\n\t\t\t<ContactLensesContainer>\n\t\t\t\t<CopyButton onClick={() => handleGetProductData(true)}>\n\t\t\t\t\t<AiOutlineCopy />\n\t\t\t\t</CopyButton>\n\t\t\t\t<h3>Základné informácie</h3>\n\t\t\t\t<CustomInput\n\t\t\t\t\tlabel=\"eanCode*\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"eanCode\"\n\t\t\t\t\tvalue={product.eanCode.toString() ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t/>\n\t\t\t\t<CustomInput\n\t\t\t\t\tlabel=\"Názov doplnku*\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tvalue={product.name ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t/>\n\n\t\t\t\t<CustomInput\n\t\t\t\t\tlabel=\"Značka\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"brand\"\n\t\t\t\t\tvalue={product.brand ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\tlist=\"brands\"\n\t\t\t\t/>\n\t\t\t\t<datalist id=\"brands\">\n\t\t\t\t\t{filters?.brands &&\n\t\t\t\t\t\tfilters?.brands.map((brand, idx) => (\n\t\t\t\t\t\t\t<option key={idx} value={brand} />\n\t\t\t\t\t\t))}\n\t\t\t\t</datalist>\n\n\t\t\t\t<div>\n\t\t\t\t\t<BrandedCheckbox\n\t\t\t\t\t\tlabel={\"Outlet\"}\n\t\t\t\t\t\tisActive={isOutlet}\n\t\t\t\t\t\thandleClick={() => handleIsOutletClick(isOutlet)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{isOutlet && (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\tlabel=\"zľava v %\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"outletPercentage\"\n\t\t\t\t\t\t\t\tvalue={product?.outletPercentage?.toString() || \"\"}\n\t\t\t\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{/* \n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"categories\"\n                />\n\n                <datalist id=\"categories\">\n                    {filters?.categories && filters?.categories.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist> */}\n\n\t\t\t\t{/* {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />} */}\n\n\t\t\t\t<CustomTextarea\n\t\t\t\t\tlabel=\"Popis\"\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\trows=\"5\"\n\t\t\t\t\tvalue={product.description ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\n\t\t\t\t<CustomInput\n\t\t\t\t\tlabel=\"Cena*\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"price\"\n\t\t\t\t\tvalue={product.price.toString() ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\n\t\t\t\t{isOutlet && (\n\t\t\t\t\t<div style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}>\n\t\t\t\t\t\t<p>Outlet cena:</p>{\" \"}\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{getOutletPrice(product.price * 100, product.outletPercentage)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t<ImageContainer>\n\t\t\t\t\t<ProductImage\n\t\t\t\t\t\tonClick={() => setImageModal(true)}\n\t\t\t\t\t\thasImage={selectedImage}\n\t\t\t\t\t>\n\t\t\t\t\t\t{!selectedImage && \"Vybrať obrázok\"}\n\t\t\t\t\t\t{selectedImage && (\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`}\n\t\t\t\t\t\t\t\talt={selectedImage.alt}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ProductImage>\n\t\t\t\t</ImageContainer>\n\n\t\t\t\t<NewImagesContainer>\n\t\t\t\t\t{productObj?.bonusImages &&\n\t\t\t\t\t\tproductObj?.bonusImages.map((img) => (\n\t\t\t\t\t\t\t<NewImageContainer key={img._id}>\n\t\t\t\t\t\t\t\t{/* <DeleteButton >&#10005;</DeleteButton> */}\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`}\n\t\t\t\t\t\t\t\t\talt={img.alt}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</NewImageContainer>\n\t\t\t\t\t\t))}\n\t\t\t\t</NewImagesContainer>\n\t\t\t</ContactLensesContainer>\n\t\t\t<div>\n\t\t\t\t<ContactLensesParametersContainer>\n\t\t\t\t\t<h3>Parametre</h3>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h4>Zakrivenie</h4>\n\t\t\t\t\t\t{contactLensesParameters.allowedCurves.map((value, idx) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\tlabel={idx + 1}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname={\"allowedCurves\"}\n\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\tcontactLensesParameters.allowedCurves,\n\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\thandleChange={(e) => handleContactLensesChange(e, idx)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t<IncreaseButton\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\thandleAddNewParameter({\n\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\tname: \"allowedCurves\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPridať\n\t\t\t\t\t\t</IncreaseButton>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h4>Priemery</h4>\n\t\t\t\t\t\t{contactLensesParameters.allowedDiameters.map((value, idx) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\tlabel={idx + 1}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname={\"allowedDiameters\"}\n\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\tcontactLensesParameters.allowedDiameters,\n\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\thandleChange={(e) => handleContactLensesChange(e, idx)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t<IncreaseButton\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\thandleAddNewParameter({\n\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\tname: \"allowedDiameters\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPridať\n\t\t\t\t\t\t</IncreaseButton>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h4>Dioptrie</h4>\n\t\t\t\t\t\t{contactLensesParameters.dioptersRange.map((value, idx) => {\n\t\t\t\t\t\t\tconst inputLabel = idx === 0 ? \"minimum\" : \"maximum\"\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\tlabel={inputLabel}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname={\"dioptersRange\"}\n\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\tcontactLensesParameters.dioptersRange,\n\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\thandleChange={(e) => handleContactLensesChange(e, idx)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</ContactLensesParametersContainer>\n\n\t\t\t\t{currentUser.admin >= 2 ? (\n\t\t\t\t\t<StockContainer>\n\t\t\t\t\t\t<h3>Skladové zásoby</h3>\n\t\t\t\t\t\t{product.available.map((value, idx) => {\n\t\t\t\t\t\t\tif (idx === 0) return\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\tcurrentUser.admin === 1\n\t\t\t\t\t\t\t\t\t\t\t? retailNames[currentUser.premises]\n\t\t\t\t\t\t\t\t\t\t\t: retailNames[idx]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tname={\"available\"}\n\t\t\t\t\t\t\t\t\tvalue={checkParameter(product.available, idx)}\n\t\t\t\t\t\t\t\t\thandleChange={(e) => handleAvailableChange(e, idx)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</StockContainer>\n\t\t\t\t) : (\n\t\t\t\t\t<StockContainer>\n\t\t\t\t\t\t<h3>Skladové zásoby</h3>\n\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\tcurrentUser.admin === 1\n\t\t\t\t\t\t\t\t\t? retailNames[currentUser.premises]\n\t\t\t\t\t\t\t\t\t: retailNames[currentUser.premises]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tname={\"available\"}\n\t\t\t\t\t\t\tvalue={checkParameter(product.available, currentUser.premises)}\n\t\t\t\t\t\t\thandleChange={(e) =>\n\t\t\t\t\t\t\t\thandleAvailableChange(e, currentUser.premises)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</StockContainer>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</ContactLensesFormContainer>\n\t)\n}\n\nexport default ProductContactLensesForm\n","/app/src/components/product-lenses-form/product-lenses-form.component.jsx",[],"/app/src/components/product-service-form/product-service-form.component.jsx",["899","900","901"],"import React, { useEffect, useState } from \"react\"\n\nimport CustomInput from \"../custom-input/custom-input.component\"\nimport CustomTextarea from \"../custom-textarea/custom-textarea.component\"\n\nimport { getOutletPrice } from \"../../hooks/useProduct\"\n\nimport {\n\tServiceFormContainer,\n\tServiceContainer,\n\tImageContainer,\n\tProductImage,\n\tBrandedCheckbox,\n} from \"./product-service-form.styles\"\n\nconst ProductServiceForm = ({\n\tproduct,\n\t// isUpdating,\n\thandleChange,\n\tselectedImage,\n\tsetImageModal,\n}) => {\n\tconst [isOutlet, setIsOutlet] = useState(false)\n\n\tconst handleIsOutletClick = (isOutletBool) => {\n\t\tif (isOutletBool) {\n\t\t\thandleChange({\n\t\t\t\ttarget: {\n\t\t\t\t\tname: \"outlet\",\n\t\t\t\t\tvalue: false,\n\t\t\t\t},\n\t\t\t})\n\t\t\tsetIsOutlet(false)\n\t\t} else {\n\t\t\thandleChange({\n\t\t\t\ttarget: {\n\t\t\t\t\tname: \"outlet\",\n\t\t\t\t\tvalue: true,\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tsetIsOutlet(true)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (product.outlet) setIsOutlet(true)\n\t}, [isOutlet])\n\n\treturn (\n\t\t<ServiceFormContainer>\n\t\t\t<ServiceContainer>\n\t\t\t\t<h3>Základné informácie</h3>\n\t\t\t\t<CustomInput\n\t\t\t\t\tlabel=\"eanCode*\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"eanCode\"\n\t\t\t\t\tvalue={product.eanCode.toString() ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t/>\n\n\t\t\t\t<CustomInput\n\t\t\t\t\tlabel=\"Názov služby*\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tvalue={product.name ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t/>\n\n\t\t\t\t<div>\n\t\t\t\t\t<BrandedCheckbox\n\t\t\t\t\t\tlabel={\"Outlet\"}\n\t\t\t\t\t\tisActive={isOutlet}\n\t\t\t\t\t\thandleClick={() => handleIsOutletClick(isOutlet)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{isOutlet && (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\tlabel=\"zľava v %\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"outletPercentage\"\n\t\t\t\t\t\t\t\tvalue={product?.outletPercentage?.toString() || \"\"}\n\t\t\t\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<CustomInput\n\t\t\t\t\tlabel=\"Cena*\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"price\"\n\t\t\t\t\tvalue={product.price.toString() ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\n\t\t\t\t{isOutlet && (\n\t\t\t\t\t<div style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}>\n\t\t\t\t\t\t<p>Outlet cena:</p>{\" \"}\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{getOutletPrice(product.price * 100, product.outletPercentage)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t<CustomTextarea\n\t\t\t\t\tlabel=\"Popis\"\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\trows=\"5\"\n\t\t\t\t\tvalue={product.description ?? \"\"}\n\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\n\t\t\t\t{/* <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer> */}\n\t\t\t</ServiceContainer>\n\t\t</ServiceFormContainer>\n\t)\n}\n\nexport default ProductServiceForm\n","/app/src/components/new-user-form/new-user-form.component.jsx",["902"],"import React from 'react'\n\nimport CustomFormSwitch from '../custom-form-switch/custom-form-switch.component'\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from \"../custom-checkbox/custom-checkbox.component\"\n\nimport {\n    retailNames\n} from '../../utils/warehouse.utils'\n\nimport {\n    CustomSelect,\n    Container,\n    GridRow,\n    ZeroMargin,\n    ColContainer,\n    CustomerForm,\n    SectionTitle\n} from './new-user-form.styles'\n\n\nconst NewUserForm = ({\n    formToShow,\n    switchFormButtons,\n    toggleUserForm,\n    user,\n    handleChange,\n    isAdmin,\n    handleParameterChange,\n    handleCompanyChange\n}) => {\n\n    return (\n        <div>\n            {/* Akého uživatela chcete vytvoriť? */}\n            {isAdmin && <CustomFormSwitch\n                items={switchFormButtons}\n                title=\"Akého uživatela chcete vytvoriť ?\"\n                activeIndex={formToShow}\n                handleClick={toggleUserForm}\n            />}\n\n            {\n                formToShow === 0 ? (\n                    <CustomerForm>\n                        <ColContainer>\n                            <h2>Informácie</h2>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                            <CustomInput\n                                label=\"E-mail\"\n                                type='email'\n                                name='email'\n                                value={user.email ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                            <CustomInput\n                                label=\"Telefónne číslo*\"\n                                type='text'\n                                name='phone'\n                                value={user.phone ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                            <InputRow\n                                label=\"Dátum narodenia\"\n                                example=''\n                            >\n                                <CustomInput\n                                    // label=\"Priezvisko*\"\n                                    type='date'\n                                    name='birthDate'\n                                    value={user.birthDate}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n\n                            <Container>\n                                <h2>Parametre</h2>\n\n                                <ParametersTable\n                                    parameters={user.lenses}\n                                    handleChange={handleParameterChange}\n                                />\n                            </Container>\n                        </ColContainer>\n\n                        <ColContainer>\n                            <div>\n                                <h2>Fakturačné údaje</h2>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"Ulica a čislo domu\"\n                                            type='text'\n                                            name='address'\n                                            value={user.address ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"PSČ\"\n                                            type='text'\n                                            name='psc'\n                                            value={user.psc ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Mesto\"\n                                            type='text'\n                                            name='city'\n                                            value={user.city ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Krajina\"\n                                            type='text'\n                                            name='country'\n                                            value={user.country ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                </GridRow>\n                            </div>\n\n                            <Container>\n                                <h2>Firemné údaje</h2>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"IČO\"\n                                            type='text'\n                                            name='ico'\n                                            value={user.company.ico ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"DIČ\"\n                                            type='text'\n                                            name='dic'\n                                            value={user.company.dic ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"IČ DPH\"\n                                            type='text'\n                                            name='icdph'\n                                            value={user.company.icdph ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        {/* <CustomInput\n                                            label=\"IČ DPH\"\n                                            type='text'\n                                            name='icdph'\n                                            value={user.company.icdph ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        /> */}\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"Ulica a čislo domu\"\n                                            type='text'\n                                            name='address'\n                                            value={user.company.address ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"PSČ\"\n                                            type='text'\n                                            name='psc'\n                                            value={user.company.psc ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Mesto\"\n                                            type='text'\n                                            name='city'\n                                            value={user.company.city ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Krajina\"\n                                            type='text'\n                                            name='country'\n                                            value={user.company.country ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </div>\n                                </GridRow>\n                            </Container>\n                        </ColContainer>\n\n                    </CustomerForm>\n                ) : (\n                    <CustomerForm>\n\n                        <ColContainer>\n                            <h2>Informácie</h2>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                            <CustomInput\n                                label=\"E-mail\"\n                                type='email'\n                                name='email'\n                                value={user.email ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                            <CustomInput\n                                label=\"Heslo*\"\n                                type='password'\n                                name='password'\n                                value={user.password ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                            <CustomInput\n                                label=\"Potvrď heslo*\"\n                                type='password'\n                                name='confirmPassword'\n                                value={user.confirmPassword ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ColContainer>\n\n                        <ColContainer>\n                            <SectionTitle>Admin privilégiá</SectionTitle>\n                            <div>\n                                <h4>Predajňa na ktorej zamestnanec pracuje</h4>\n                                <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                                    <option value={0}>Nezadané</option>\n                                    {retailNames.map((name, idx) => {\n                                        if (idx === 0) return\n                                        return (\n                                            <option key={idx} value={idx}>{name}</option>\n\n                                        )\n                                    })}\n                                </CustomSelect>\n\n                            </div>\n                            <div>\n                                <h4>Výška administrativných práv</h4>\n                                <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                                    {/* <option value={0}>Zákaznik</option> */}\n                                    <option value={1}>Zamestnanec</option>\n                                    <option value={2}>Vedúci</option>\n                                </CustomSelect>\n\n                            </div>\n                            <Container>\n                                <CustomCheckbox\n                                    label='Optometrista'\n                                    handleClick={() => handleChange({\n                                        target: {\n                                            name: \"optometrist\",\n                                            value: !user.optometrist\n                                        }\n                                    })}\n                                    isActive={user.optometrist}\n                                />\n                            </Container>\n                        </ColContainer>\n                    </CustomerForm>\n                )\n            }\n        </div>\n    )\n}\n\nexport default NewUserForm\n","/app/src/components/product-input-row/product-input-row.component.jsx",[],"/app/src/components/custom-select/custom-select.component.jsx",["903"],"import React from 'react'\n\nimport { CustomSelectContainer } from './custom-select.styles'\n\nconst CustomRetailSelect = ({ name, value, handleChange, listItems, defaultOption = false, defaultValue, defaultLabel }) => {\n    return (\n        <CustomSelectContainer name={name} value={value} onChange={(e) => handleChange(e)}>\n            {defaultOption && <option value={defaultValue}>{defaultLabel}</option>}\n            {listItems.map((name, idx) => {\n                if (idx === 0) return\n                return (\n                    <option key={idx} value={idx}>{name}</option>\n                )\n            })}\n        </CustomSelectContainer>\n    )\n}\n\nexport default CustomRetailSelect\n","/app/src/components/calendar-weekdays/calendar-weekdays.component.jsx",["904","905","906"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useFetchById } from '../../hooks/useFetch'\nimport { BookingContext } from '../../context/booking/booking.context'\nimport { WeekCalendarContext } from '../../context/week-calendar/week-calendar.context'\n\nimport UserbookingDetailsModal from '../modal-userbookings-details/modal-userbookings-details.component'\nimport UserBookingModal from '../modal-user-bookings/modal-user-booking.component'\nimport CalendarBookedDay from '../calendar-booked-day/calendar-booked-day.component'\n\nimport {\n    dayNames,\n    getPreviousMonthDays,\n    getNextMonthDays,\n    getCurrentMonthDays,\n    getBooking,\n} from '../../utils/calendar.utils'\n\nimport { changeSlash } from '../../utils/week-calendar.utils'\n\nimport {\n    Container,\n    HeaderBlock,\n    HourBlock,\n    HourGrid,\n    TableHead,\n    HourBlockContainer,\n    EmptyContainer,\n    HourTime,\n    EmptyHourBlock\n} from './calendar-weekdays.styles'\n\nconst WeekDays = ({\n    calendar,\n    year,\n    month,\n    weekIndex,\n    showUserBooking,\n    setShowUserBooking,\n    handleOpenUserBookingModal,\n    selectedDay,\n}) => {\n    const { timeline, getDayData, refetchWeekCalendar, cancelUserBooking } = useContext(WeekCalendarContext)\n    const { createUserBooking, reBookUserBooking } = useContext(BookingContext)\n    const { response, isLoading, refetch } = useFetchById('api/booking/calendars', calendar, !calendar)\n    const lastDay = new Date(year, month + 1, 0).getDate()\n    const lastPrevMonthDay = new Date(year, month, 0).getDate()\n    const firstDayIndex = new Date(year, month, 0).getDay();\n    const lastDayIndex = new Date(year, month + 1, 0).getDay()\n    const prevLastDay = new Date(year, month, 0).getDate()\n\n    const nextDays = 7 - lastDayIndex\n\n    const [calendarDays, setCalendarDays] = useState([])\n    // const [selectedDay, setSelectedDay] = useState(null)\n    const [showBookingDetails, setShowBookingDetails] = useState(false)\n\n    const [selectedUserBooking, setSelectedUserBooking] = useState(null)\n\n    const handleOpenDetailsModal = (userBooking) => {\n        setSelectedUserBooking(userBooking)\n        setShowBookingDetails(true)\n    }\n\n    const handleCancelUserBooking = (userBookingId) => {\n        cancelUserBooking(userBookingId, refetch, setShowBookingDetails)\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n\n        if (response.calendar) {\n            const prevMonthDays = getPreviousMonthDays(firstDayIndex, lastPrevMonthDay)\n            const monthDays = getCurrentMonthDays(lastDay)\n            const nextMonthDays = getNextMonthDays(nextDays)\n            const prevMonthDaysWithBookings = getBooking(prevMonthDays, response.calendar, month - 1, year)\n            const monthDaysWithBookings = getBooking(monthDays, response.calendar, month, year)\n\n            // console.log(response.calendar)\n            // console.log(prevMonthDays)\n\n            setCalendarDays([\n                ...prevMonthDaysWithBookings,\n                ...monthDaysWithBookings,\n                ...nextMonthDays\n            ])\n\n            // fillDayData([\n            //     ...prevMonthDays,\n            //     ...monthDaysWithBookings,\n            //     ...nextMonthDays\n            // ], response.calendar)\n        }\n    }, [isLoading])\n\n    useEffect(() => {\n        refetch()\n    }, [month])\n\n\n    return (\n        <div>\n            {showBookingDetails && <UserbookingDetailsModal reBookUserBooking={reBookUserBooking} cancelUserBooking={handleCancelUserBooking} refetchCalendar={refetch} calendarId={calendar} calendar={response?.calendar} day={selectedDay} userBooking={selectedUserBooking} close={() => setShowBookingDetails(false)} />}\n            {showUserBooking && <UserBookingModal refetchWeekCalendar={refetchWeekCalendar} createUserBooking={createUserBooking} refetchCalendar={refetch} calendar={response?.calendar} day={selectedDay} close={() => setShowUserBooking(false)} />}\n            <Container>\n                <TableHead>\n                    <HeaderBlock>{\" \"}</HeaderBlock>\n                    {calendarDays.slice(weekIndex * 7, (weekIndex * 7) + 7).map(({ dayNumber, isDisable, isPrevDay, isNextDay, prevDayNumber }, idx) => (\n                        <HeaderBlock isDisabled={isDisable} key={idx}>\n                            {isPrevDay ? (\n                                <React.Fragment>\n                                    <p>{dayNames[new Date(year, month - 1, prevDayNumber - 1).getDay()]}</p>\n                                    <p>{prevDayNumber }</p>\n                                </React.Fragment>\n                            ) : isNextDay ? (\n                                <React.Fragment>\n                                    <p>{dayNames[new Date(year, month + 1, dayNumber - 1).getDay()]}</p>\n                                    <p>{dayNumber} </p>\n                                </React.Fragment>\n                            ) : (\n                                <React.Fragment>\n                                    <p>{dayNames[new Date(year, month, dayNumber - 1).getDay()]}</p>\n                                    <p>{dayNumber} </p>\n                                </React.Fragment>\n                            )}\n                        </HeaderBlock>\n                    ))}\n                </TableHead>\n\n                <HourGrid>\n                    <HourBlock>\n                        {timeline && timeline.map((time, idx) => (\n                            <HourBlockContainer key={idx} style={response?.calendar?.interval === 60 ? ({ height: \"10rem\" }) : ({ height: \"5rem\" })}>\n                                <HourTime >\n                                    <p>{changeSlash(time) ?? \"\"}</p>\n                                </HourTime>\n                            </HourBlockContainer>\n\n                        ))}\n                    </HourBlock>\n                    {calendarDays.length > 0 && calendarDays.slice(weekIndex * 7, (weekIndex * 7) + 7).map((dayData, idx) => {\n\n                        const day = getDayData(dayData?.dayNumber, idx, response.calendar, dayData.isPrevDay, dayData.prevDayNumber)\n\n                        // console.log(dayData)\n                        // console.log(day)\n\n                        return (\n                            < HourBlock key={idx} >\n                                { day && day.map((interval, idx) => {\n                                    if (interval?.empty) return (\n                                        <EmptyHourBlock style={response?.calendar?.interval === 60 ? ({ height: \"10rem\" }) : ({ height: \"5rem\" })} />\n                                    )\n                                    return (\n                                        <HourBlockContainer style={response?.calendar?.interval === 60 ? ({ height: \"10rem\" }) : ({ height: \"5rem\" })} key={idx}>\n                                            {interval?.userBookings && <CalendarBookedDay\n                                                dayData={dayData}\n                                                calendarId={calendar}\n                                                time={interval.time}\n                                                userBookings={interval.userBookings}\n                                                open={() => handleOpenDetailsModal(interval)}\n                                            />}\n                                            <EmptyContainer onClick={dayData.isDisable ? () => { } : () => handleOpenUserBookingModal({\n                                                ...dayData, \n                                                time: interval.time, \n                                                year,\n                                                month: dayData.isPrevDay ? month - 1 : month ,\n                                            })} />\n                                        </HourBlockContainer>\n                                    )\n                                })}\n                            </HourBlock >\n                        )\n                    })}\n                </HourGrid>\n            </Container>\n        </div>\n    )\n}\n\nexport default WeekDays\n","/app/src/components/booking-calendar-bookings/booking-calendar-bookings.component.jsx",[],"/app/src/context/week-calendar/week-calendar.context.jsx",["907","908","909","910","911","912","913","914","915","916"],"import React, { createContext, useState, useEffect, useContext } from 'react'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { useFetchById } from '../../hooks/useFetch'\nimport {\n    getHourTime,\n    checkBookings,\n    getTimeline,\n    handleExceptionDays\n} from '../../utils/week-calendar.utils'\n\nexport const WeekCalendarContext = createContext({\n    timeline: null,\n    getDayData: () => { },\n    refetchWeekCalendar: () => { },\n    cancelUserBooking: () => { },\n    // fillDayData: () => { }\n})\n\nconst WeekCalendarProvider = ({ children, calendar, monthIndex, year }) => {\n    const { response, isLoading, refetch } = useFetchById('api/booking/calendars', calendar, !calendar)\n    const { closeModal, setIsLoading, setShowModal, getMessage } = useContext(LoadingModalContext)\n    const { token } = useContext(AuthContext)\n    const [numberOfHours, setNumberOfHours] = useState(0)\n    const [timeline, setTimeline] = useState(null)\n\n    const getDayData = (dayN, dayIdx, calendar, isPrevDay, prevDayNumber) => {\n        if (!calendar) return\n        const numberedStartTimes = calendar.startTimes.filter(number => number !== \"X\").map(time => (Number(time.split(\"/\")[0])))\n        const startTime = Math.min(...numberedStartTimes)\n\n        let dayNumber = isPrevDay ? prevDayNumber : dayN\n        let month = isPrevDay ? monthIndex - 1 : monthIndex\n\n        // console.log(monthIndex)\n\n        let breaks = null\n        let lunches = null\n        let holidays = null\n\n        // console.log(`Day number ${dayNumber}`)\n        // console.log(`Day dayIdx ${dayIdx}`)\n        // console.log(`Day number ${dayNumber}`)\n        let isDisabled = false\n\n        if(calendar?.disabledDays) {\n            //return if disabled Day equal the dayblock\n            calendar.disabledDays.forEach(day => {\n                if(day === dayIdx + 1 ) return isDisabled = true\n            })\n        }\n\n        if(isDisabled) return\n\n        if(calendar?.except) {\n            Object.keys(calendar?.except).forEach(date => {\n                const splitedDate = date.split(\"/\") \n    \n    \n                if(Number(splitedDate[0]) === Number(dayNumber) && Number(splitedDate[1]) === Number(month) + 1 && Number(splitedDate[2]) === Number(year)) {\n                    return holidays = calendar.except[date]\n                }\n            })\n        }\n        if(calendar?.breaks) {\n            Object.keys(calendar?.breaks).forEach(date => {\n                const splitedDate = date.split(\"/\") \n    \n    \n                if(Number(splitedDate[0]) === Number(dayNumber) && Number(splitedDate[1]) === Number(month) + 1 && Number(splitedDate[2]) === Number(year)) {\n                    return breaks = calendar.breaks[date]\n                }\n            })\n        }\n        if(calendar?.lunches) {\n            Object.keys(calendar?.lunches).forEach(date => {\n                const splitedDate = date.split(\"/\") \n    \n    \n                if(Number(splitedDate[0]) === Number(dayNumber) && Number(splitedDate[1]) === Number(month) + 1 && Number(splitedDate[2]) === Number(year)) {\n                    return lunches = calendar.lunches[date]\n                }\n            })\n        }\n\n        const hourblock = [...Array(numberOfHours)].map((value, idx) => {\n            const splitedStartTime = calendar.startTimes[dayIdx]?.split(\"/\").map(value => Number(value))\n            const splitedEndTime = calendar.endTimes[dayIdx]?.split(\"/\").map(value => Number(value))\n            const time = getHourTime(idx, calendar.interval)\n            const splitedTime = time.split('/').map(value => Number(value))\n\n            \n            if (startTime > splitedTime[0]) return\n            if (splitedStartTime[0] > startTime && splitedStartTime[0] > splitedTime[0]) return ({ empty: true })\n            if (splitedStartTime[0] > startTime && splitedStartTime[0] > splitedTime[0] && !(splitedStartTime[1] === splitedTime[1]) && splitedTime[1] === 30) return ({ empty: true })\n\n            if (splitedEndTime[0] < splitedTime[0]) return\n            if (calendar.startTimes[dayIdx] === 'X') return\n            if (splitedEndTime[0] === splitedTime[0] && !(splitedEndTime[1] === splitedTime[1]) && splitedTime[1] === 30) return\n            if (splitedEndTime[0] === splitedTime[0] && !(splitedEndTime[1] === splitedTime[1]) && splitedTime[1] === 15) return \n            if (splitedEndTime[0] === splitedTime[0] && !(splitedEndTime[1] === splitedTime[1]) && splitedTime[1] === 45) return \n\n            // console.log(time)\n            // console.log(holidays)\n\n            // console.log(holidays?.find(v => Number(v.split(\"/\")[0]) >= splitedTime[0] || Number(v.split(\"-\")[1].split('/')[0] <= splitedTime[0])))\n\n            const holiday = holidays?.find(v => {\n                const startTime = v.split('-')[0]\n                const endTime = v.split('-')[1]\n                const splitedHolidayStartTime = startTime.split('/').map(value => Number(value))\n                const splitedHolidayEndTime = endTime.split('/').map(value => Number(value))\n\n                return splitedHolidayStartTime[0] <= splitedTime[0] && splitedHolidayEndTime[0] >= splitedTime[0]\n            })\n\n            const breakTime = breaks?.find(v => {\n                const startTime = v.split('-')[0]\n                const endTime = v.split('-')[1]\n                const splitedHolidayStartTime = startTime.split('/').map(value => Number(value))\n                const splitedHolidayEndTime = endTime.split('/').map(value => Number(value))\n\n                return startTime === time || splitedHolidayStartTime[0] <= splitedTime[0] && splitedHolidayEndTime[0] >= splitedTime[0]\n            })\n\n            const lunchTime = lunches?.find(v => {\n                const startTime = v.split('-')[0]\n                const endTime = v.split('-')[1]\n                const splitedHolidayStartTime = startTime.split('/').map(value => Number(value))\n                const splitedHolidayEndTime = endTime.split('/').map(value => Number(value))\n\n                return splitedHolidayStartTime[0] <= splitedTime[0] && splitedHolidayEndTime[0] >= splitedTime[0]\n            })\n\n            if(holiday) {\n                const holidayStartTime = holiday.split('-')[0]\n                const holidayEndTime = holiday.split('-')[1]\n                const splitedHolidayStartTime = holidayStartTime.split('/').map(value => Number(value))\n                const splitedHolidayEndTime = holidayEndTime.split('/').map(value => Number(value))\n                \n                if (splitedHolidayStartTime[0] <= splitedTime[0] && splitedHolidayEndTime[0] >= splitedTime[0]) {\n                    if(splitedHolidayStartTime[0] < splitedTime[0] && splitedHolidayEndTime[0] > splitedTime[0]) {\n                        return ({ empty: true })\n                    }\n                    if(splitedHolidayStartTime[0] === splitedTime[0] && splitedHolidayStartTime[1] === splitedTime[1] && splitedHolidayStartTime[0] !== splitedHolidayEndTime[0]) {\n                        return ({ empty: true })\n                    }\n                    if(splitedHolidayStartTime[0] === splitedHolidayEndTime[0] && splitedHolidayStartTime[0] === splitedTime[0] && splitedHolidayStartTime[1] < splitedTime[1] && splitedHolidayEndTime[1] > splitedTime[1]) {\n                        return ({\n                            id: idx,\n                            time: time,\n                            userBookings: checkBookings(calendar, idx, dayNumber, month, year)\n                        })\n                    }\n                    if(splitedHolidayStartTime[0] !== splitedHolidayEndTime[0] && splitedHolidayStartTime[0] < splitedHolidayEndTime[0] && splitedHolidayStartTime[0] === splitedTime[0] && splitedHolidayStartTime[1] <= splitedTime[1]) {\n\n                        return ({ empty: true })\n                    }\n                    if(splitedHolidayStartTime[0] !== splitedHolidayEndTime[0] && splitedHolidayEndTime[0] === splitedTime[0] && splitedHolidayEndTime[1] === splitedTime[1]) {\n                        return ({\n                            id: idx,\n                            time: time,\n                            userBookings: checkBookings(calendar, idx, dayNumber, month, year)\n                        })\n                    }\n                    if(splitedHolidayStartTime[0] !== splitedHolidayEndTime[0] && splitedHolidayEndTime[0] === splitedTime[0] && splitedHolidayEndTime[1] >= splitedTime[1]) {\n                        return ({ empty: true })\n                    }\n                    // if(splitedHolidayEndTime[0] === splitedTime[0] && splitedHolidayEndTime[1] === splitedTime[1]) {\n                    //     return ({ empty: true })\n                    // }\n                    if(splitedHolidayStartTime[0] === splitedTime[0] && splitedHolidayStartTime[1] === splitedTime[1]) {\n                        return ({ empty: true })\n                    }\n    \n                    return ({\n                        id: idx,\n                        time: time,\n                        userBookings: checkBookings(calendar, idx, dayNumber, month, year)\n                    })\n                }\n            }\n            if(breakTime) {\n                const holidayStartTime = breakTime.split('-')[0]\n                const holidayEndTime = breakTime.split('-')[1]\n                const splitedHolidayStartTime = holidayStartTime.split('/').map(value => Number(value))\n                const splitedHolidayEndTime = holidayEndTime.split('/').map(value => Number(value))\n                \n                if (splitedHolidayStartTime[0] <= splitedTime[0] && splitedHolidayEndTime[0] >= splitedTime[0]) {\n                    if(splitedHolidayStartTime[0] < splitedTime[0] && splitedHolidayEndTime[0] > splitedTime[0]) {\n                        return ({ empty: true })\n                    }\n                    if(splitedHolidayStartTime[0] === splitedTime[0] && splitedHolidayStartTime[1] === splitedTime[1] && splitedHolidayStartTime[0] !== splitedHolidayEndTime[0]) {\n                        return ({ empty: true })\n                    }\n                    if(splitedHolidayStartTime[0] === splitedHolidayEndTime[0] && splitedHolidayStartTime[0] === splitedTime[0] && splitedHolidayStartTime[1] < splitedTime[1] && splitedHolidayEndTime[1] > splitedTime[1]) {\n                        return ({\n                            id: idx,\n                            time: time,\n                            userBookings: checkBookings(calendar, idx, dayNumber, month, year)\n                        })\n                    }\n                    if(splitedHolidayStartTime[0] !== splitedHolidayEndTime[0] && splitedHolidayStartTime[0] < splitedHolidayEndTime[0] && splitedHolidayStartTime[0] === splitedTime[0] && splitedHolidayStartTime[1] <= splitedTime[1]) {\n\n                        return ({ empty: true })\n                    }\n                    if(splitedHolidayStartTime[0] !== splitedHolidayEndTime[0] && splitedHolidayEndTime[0] === splitedTime[0] && splitedHolidayEndTime[1] === splitedTime[1]) {\n                        return ({\n                            id: idx,\n                            time: time,\n                            userBookings: checkBookings(calendar, idx, dayNumber, month, year)\n                        })\n                    }\n                    if(splitedHolidayStartTime[0] !== splitedHolidayEndTime[0] && splitedHolidayEndTime[0] === splitedTime[0] && splitedHolidayEndTime[1] >= splitedTime[1]) {\n                        return ({ empty: true })\n                    }\n                    // if(splitedHolidayEndTime[0] === splitedTime[0] && splitedHolidayEndTime[1] === splitedTime[1]) {\n                    //     return ({ empty: true })\n                    // }\n                    if(splitedHolidayStartTime[0] === splitedTime[0] && splitedHolidayStartTime[1] === splitedTime[1]) {\n                        return ({ empty: true })\n                    }\n    \n                    return ({\n                        id: idx,\n                        time: time,\n                        userBookings: checkBookings(calendar, idx, dayNumber, month, year)\n                    })\n                }\n            }\n            if(lunchTime) {\n                const holidayStartTime = lunchTime.split('-')[0]\n                const holidayEndTime = lunchTime.split('-')[1]\n                const splitedHolidayStartTime = holidayStartTime.split('/').map(value => Number(value))\n                const splitedHolidayEndTime = holidayEndTime.split('/').map(value => Number(value))\n                \n                if (splitedHolidayStartTime[0] <= splitedTime[0] && splitedHolidayEndTime[0] >= splitedTime[0]) {\n                    if(splitedHolidayStartTime[0] < splitedTime[0] && splitedHolidayEndTime[0] > splitedTime[0]) {\n                        return ({ empty: true })\n                    }\n                    if(splitedHolidayStartTime[0] === splitedTime[0] && splitedHolidayStartTime[1] === splitedTime[1] && splitedHolidayStartTime[0] !== splitedHolidayEndTime[0]) {\n                        return ({ empty: true })\n                    }\n                    if(splitedHolidayStartTime[0] === splitedHolidayEndTime[0] && splitedHolidayStartTime[0] === splitedTime[0] && splitedHolidayStartTime[1] < splitedTime[1] && splitedHolidayEndTime[1] > splitedTime[1]) {\n                        // console.log(\"HERE 111\")\n                        // console.log(`${splitedHolidayStartTime[0]} || ${splitedHolidayStartTime[1]} |||| ${splitedHolidayEndTime[0]} || ${splitedHolidayEndTime[1]} |||| ${splitedTime[0]} || ${splitedTime[1]} && splitedHolidayEndTime[1] === splitedTime[1]`)\n\n                        return ({ empty: true })\n\n                        // return ({\n                        //     id: idx,\n                        //     time: time,\n                        //     userBookings: checkBookings(calendar, idx, dayNumber, month, year)\n                        // })\n                    }\n                    if(splitedHolidayStartTime[0] !== splitedHolidayEndTime[0] && splitedHolidayStartTime[0] < splitedHolidayEndTime[0] && splitedHolidayStartTime[0] === splitedTime[0] && splitedHolidayStartTime[1] <= splitedTime[1]) {\n\n                        return ({ empty: true })\n                    }\n                    if(splitedHolidayStartTime[0] !== splitedHolidayEndTime[0] && splitedHolidayEndTime[0] === splitedTime[0] && splitedHolidayEndTime[1] === splitedTime[1]) {\n                        // console.log(\"HERE 222\")\n                        // console.log(`${splitedHolidayStartTime[0]} || ${splitedHolidayStartTime[1]} |||| ${splitedHolidayEndTime[0]} || ${splitedHolidayEndTime[1]} |||| ${splitedTime[0]} || ${splitedTime[1]} && splitedHolidayEndTime[1] === splitedTime[1]`)\n\n\n                        return ({\n                            id: idx,\n                            time: time,\n                            userBookings: checkBookings(calendar, idx, dayNumber, month, year)\n                        })\n                    }\n                    if(splitedHolidayStartTime[0] !== splitedHolidayEndTime[0] && splitedHolidayEndTime[0] === splitedTime[0] && splitedHolidayEndTime[1] >= splitedTime[1]) {\n                        return ({ empty: true })\n                    }\n                    // if(splitedHolidayEndTime[0] === splitedTime[0] && splitedHolidayEndTime[1] === splitedTime[1]) {\n                    //     return ({ empty: true })\n                    // }\n                    if(splitedHolidayStartTime[0] === splitedTime[0] && splitedHolidayStartTime[1] === splitedTime[1]) {\n                        return ({ empty: true })\n                    }\n    \n                    return ({\n                        id: idx,\n                        time: time,\n                        userBookings: checkBookings(calendar, idx, dayNumber, month, year)\n                    })\n                }\n            }\n            \n            \n            return ({\n                id: idx,\n                time: time,\n                userBookings: checkBookings(calendar, idx, dayNumber, month, year)\n            })\n        }).filter(item => item !== undefined)\n\n        return hourblock\n    }\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const cancelUserBooking = async (userBookingId, refetchCalendar, setShowBookingDetails) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            // body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/booking/userBookings/${userBookingId}/cancel`, requestOptions)\n            const data = await response.json()\n\n            if (data.userBooking) {\n                closeModal()\n                setShowBookingDetails()\n                setTimeout(() => {\n                    refetchCalendar()\n                }, 200);\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n        if (response.calendar.interval === 15) setNumberOfHours(96)\n        if (response.calendar.interval === 30) setNumberOfHours(48)\n        if (response.calendar.interval === 60) setNumberOfHours(24)\n        const timelineArr = getTimeline(response.calendar.startTimes, response.calendar.endTimes, response.calendar.interval)\n        setTimeline(timelineArr)\n    }, [isLoading])\n\n    return (\n        <WeekCalendarContext.Provider\n            value={{\n                timeline,\n                getDayData,\n                refetchWeekCalendar: refetch,\n                cancelUserBooking,\n                // fillDayData\n            }}\n        >\n            {children}\n        </WeekCalendarContext.Provider>\n    )\n}\n\nexport default WeekCalendarProvider","/app/src/components/calendar/calendar.component.jsx",["917","918","919"],"import React, { useState, useEffect } from 'react'\n\nimport {\n    dayNames,\n    getPreviousMonthDays,\n    getNextMonthDays,\n    getCurrentMonthDays,\n    getBooking\n} from '../../utils/calendar.utils'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport {\n    Container,\n    HeaderBlock,\n    Dayblock,\n\n} from './calendar.styles'\n\nconst Calendar = ({\n    calendar,\n    month,\n    year,\n    handleCalendarBlockClick\n}) => {\n    const date = new Date()\n\n    date.setDate(1)\n    const lastDay = new Date(year, month + 1, 0).getDate()\n    const prevLastDay = new Date(year, month, 0).getDate()\n\n    const firstDayIndex = new Date(year, month, 0).getDay();\n    const lastDayIndex = new Date(year, month + 1, 0).getDay()\n\n    const nextDays = 7 - lastDayIndex\n\n    const { response, isLoading, refetch } = useFetchById('api/booking/calendars', calendar, !calendar)\n    const [prevDays, setPrevDays] = useState([])\n    const [currentMonthDays, setCurrentMonthDays] = useState([])\n    const [nextMonthDays, setMonthNextDays] = useState([])\n\n    useEffect(() => {\n        refetch()\n    }, [month])\n\n    useEffect(() => {\n        if (calendar) {\n            refetch()\n        }\n    }, [calendar])\n\n    useEffect(() => {\n        if (!isLoading) {\n            if (response?.calendar) {\n                const prevDaysArr = getPreviousMonthDays(firstDayIndex)\n                const arr = getCurrentMonthDays(lastDay)\n                const nextDaysArr = getNextMonthDays(nextDays)\n                const checkedArr = getBooking(arr, response.calendar, month, year)\n\n                setPrevDays(prevDaysArr)\n                setCurrentMonthDays(checkedArr)\n                setMonthNextDays(nextDaysArr)\n            }\n        }\n    }, [isLoading])\n\n    useEffect(() => {\n        return () => {\n            setPrevDays([])\n            setCurrentMonthDays([])\n            setMonthNextDays([])\n        }\n    }, [])\n\n    return (\n        <Container>\n\n            {dayNames.map((name, idx) => (\n                <HeaderBlock key={idx}>\n                    {name}\n                </HeaderBlock>\n            ))}\n\n            {prevDays.map((value, idx) => (\n                <Dayblock faded={true} key={idx}>\n                    <p>\n                    </p>\n                    <p>\n                        {prevLastDay - idx}\n                    </p>\n                </Dayblock>\n            ))}\n\n            {currentMonthDays.map((data, idx) => {\n                const { dayNumber, bookings } = data\n                return (\n                    <Dayblock key={idx} onClick={() => handleCalendarBlockClick(data)}>\n                        <p>\n                            {bookings && <span>\n                                {bookings.length}\n                            </span>}\n                        </p>\n                        <p>\n                            {dayNumber}\n                        </p>\n                    </Dayblock>\n                )\n            })}\n            {nextMonthDays.map((value, idx) => (\n                <Dayblock faded={true} key={idx}>\n                    <p>\n                    </p>\n                    <p>\n                        {idx + 1}\n                    </p>\n                </Dayblock>\n            ))}\n        </Container>\n    )\n}\n\nexport default Calendar\n","/app/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx",[],"/app/src/components/order-summary-lenses-name/order-summary-lenses-name.component.jsx",[],"/app/src/components/order-summary-product-name/order-summary-product-name.component.jsx",[],"/app/src/sections/order/steps/3-select-lenses/select-lenses.component.jsx",["920"],"import React, { useState, useEffect, useContext } from 'react'\nimport { OrderContext } from '../../../../context/order/order.context'\n\nimport { useFetchByQuery } from '../../../../hooks/useFetch'\n\nimport BackButton from '../../../../components/custom-back-button/custom-back-button.component'\nimport CartLensesRow from '../../../../components/order-cart-lenses-row/order-cart-lenses-row.component'\nimport CustomInput from '../../../../components/custom-input/custom-input.component'\n\nimport {\n    LensesTableContainer,\n    LensesTableHead,\n    LensesTableRow,\n    LensesImg,\n    SelectLensesContainer,\n    CartContainer,\n    CartParagraph,\n    CartTable,\n    CartTableHead,\n    NextButton,\n    TableCol,\n    ButtonOptions,\n    HeaderContainer,\n    SearchButton,\n    SearchContainer,\n    HeadingContainer,\n    UnselectButton\n} from './select-lenses.styles'\n\nconst SelectLensesComponent = ({ back, next }) => {\n    const {\n        cart,\n        addLenses,\n        createCombinedProducts,\n        selectedProduct,\n        selectProduct\n    } = useContext(OrderContext)\n\n    const [searchQuery, setSearchQuery] = useState(\"\")\n\n    const [lensesItems, setLensesItems] = useState([])\n    const [query, setQuery] = useState({\n        limit: 9,\n        skip: 0\n    })\n    const { response, isLoading, refetch } = useFetchByQuery(\"api/admin/lenses/filter\", query)\n\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        setQuery({\n            ...query,\n            query: searchQuery\n        })\n        refetch()\n    }\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== \"\") {\n            if (e.key === 'Enter') {\n                setQuery({\n                    ...query,\n                    query: searchQuery\n                })\n                refetch()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n\n        setLensesItems(response.lenses)\n    }, [isLoading])\n\n    return (\n        <div>\n            <BackButton onClick={back} />\n            <HeaderContainer>\n                <SearchContainer>\n                    <h3>Vyhľadať šošovky</h3>\n                    <div>\n                        <CustomInput\n                            label='Vyhľadať šošovky'\n                            value={searchQuery}\n                            handleChange={(e) => setSearchQuery(e.target.value)}\n                            onKeyPress={handleSearchOnEnter}\n                        />\n                    </div>\n                    <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n                </SearchContainer>\n                <CartContainer>\n                    <HeadingContainer>\n                        <h3>Vybrané položky</h3>\n                        {selectedProduct !== null && <UnselectButton onClick={() => selectProduct(null)}>Odznačiť</UnselectButton>}\n                    </HeadingContainer>\n                    <CartTable>\n\n                        <CartTableHead>\n                            <TableCol>#</TableCol>\n                            <TableCol>Produkt</TableCol>\n                            <TableCol>šošovky</TableCol>\n                            <TableCol>Cena</TableCol>\n                            <TableCol>Ks</TableCol>\n                            <TableCol>Zľava v %</TableCol>\n                            {/* <TableCol>Možnosti</TableCol> */}\n                        </CartTableHead>\n                        {cart.map((item, idx) => {\n                            if (item.product.type === 3 || item.product.type === 4 || item.product.type === 5 || item.product.type === 6) return false\n                            return (\n                                <CartLensesRow\n                                    key={idx}\n                                    idx={idx}\n                                    item={item}\n                                />\n                            )\n                        })}\n\n                        {cart.length === 0 && <CartParagraph>Nie sú vybrané žiadné produkty</CartParagraph>}\n                    </CartTable>\n                    <ButtonOptions>\n                        <NextButton onClick={createCombinedProducts}>\n                            Dokončiť objednávku\n                        </NextButton>\n                    </ButtonOptions>\n                </CartContainer>\n            </HeaderContainer>\n\n            <SelectLensesContainer>\n                <LensesTableContainer>\n                    <LensesTableHead>\n                        <TableCol>eanKód</TableCol>\n                        <TableCol>Obrázok</TableCol>\n                        <TableCol>Názov</TableCol>\n                        <TableCol>Dioptrie</TableCol>\n                        <TableCol>Cylinder</TableCol>\n                        <TableCol>Cena</TableCol>\n                    </LensesTableHead>\n\n                    {lensesItems.map((lenses, idx) => (\n                        <LensesTableRow key={idx} onClick={() => addLenses(lenses)}>\n                            <TableCol>{lenses.eanCode}</TableCol>\n                            <TableCol>\n                                <LensesImg>\n                                    {/* <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${lenses.image.imagePath}`} alt={lenses.image.alt} /> */}\n                                </LensesImg>\n                            </TableCol>\n                            <TableCol>{lenses.name}</TableCol>\n                            <TableCol>\n                                {lenses.dioptersRange && <p>{`od ${lenses.dioptersRange[0]} do ${lenses.dioptersRange[1]}`}</p>}\n                            </TableCol>\n                            <TableCol>\n                                {lenses.cylinderRange && <p>{`od ${lenses.cylinderRange[0]} do ${lenses.cylinderRange[1]}`}</p>}\n                            </TableCol>\n                            <TableCol>{(lenses.price / 100).toFixed(2)}€</TableCol>\n                        </LensesTableRow>\n                    ))}\n                    <LensesTableRow onClick={() => addLenses(null)}>\n                        <TableCol>-</TableCol>\n                        <TableCol>\n                            <LensesImg>\n                                {/* <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${lenses.image.imagePath}`} alt={lenses.image.alt} /> */}\n                            </LensesImg>\n                        </TableCol>\n                        <TableCol>Žiadné sklá</TableCol>\n                        <TableCol>-</TableCol>\n                        <TableCol>-</TableCol>\n                        <TableCol>0€</TableCol>\n                    </LensesTableRow>\n                </LensesTableContainer>\n            </SelectLensesContainer>\n        </div >\n    )\n}\n\nexport default SelectLensesComponent\n","/app/src/sections/order/steps/4-summary/summary.component.jsx",[],"/app/src/components/product-glasses-form/product-glasses-form.styles.jsx",[],"/app/src/sections/post/post.styles.jsx",[],"/app/src/sections/no-permission/no-permission.styles.jsx",[],"/app/src/sections/blog-posts/blog-posts.styles.jsx",[],"/app/src/utils/analytics.utils.jsx",[],"/app/src/sections/analytics/analytics.styles.jsx",[],"/app/src/sections/order/steps/2-select-product/select-product.component.jsx",["921"],"import React, { useState, useEffect, useContext } from 'react'\nimport { OrderContext } from '../../../../context/order/order.context'\n\nimport CartDiscountRow from '../../../../components/order-cart-row/order-cart-row.component'\nimport CustomInput from '../../../../components/custom-input/custom-input.component'\nimport BackButton from '../../../../components/custom-back-button/custom-back-button.component'\n\nimport {\n    formatAvailable,\n    isAvailable\n} from '../../../../utils/orders.utils'\n\nimport { useFetchByQuery } from '../../../../hooks/useFetch'\n\nimport {\n    SearchContainer,\n    SearchButton,\n    TableContainer,\n    ProductTableHead,\n    ProductTableRow,\n    TableCol,\n    HeaderContainer,\n    CartContainer,\n    CartTable,\n    CartTableHead,\n    CartParagraph,\n    NextButton,\n    ButtonOptions,\n    NextLensesButton,\n} from './select-product.styles'\n\nconst SelectProductComponent = ({ back, next, showErrorMessage }) => {\n    const {\n        addProduct,\n        cart,\n        createCombinedProducts\n    } = useContext(OrderContext)\n\n    const [searchQuery, setSearchQuery] = useState(\"\")\n\n    const [productItems, setProductItems] = useState([])\n    const [query, setQuery] = useState({\n        limit: 100,\n        skip: 0,\n    })\n    const { response, isLoading, refetch } = useFetchByQuery(\"api/admin/products/filter\", query)\n\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        setQuery({\n            ...query,\n            query: searchQuery\n        })\n        refetch()\n    }\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== \"\") {\n            if (e.key === 'Enter') {\n                setQuery({\n                    ...query,\n                    query: searchQuery\n                })\n                refetch()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n\n        setProductItems(response.products)\n    }, [isLoading])\n\n    return (\n        <div>\n            <BackButton onClick={back} />\n            <HeaderContainer>\n                <SearchContainer>\n                    <h3>Vyhľadať produkt</h3>\n                    <div>\n                        <CustomInput\n                            label='Názov produktu, eanCode alebo popis'\n                            value={searchQuery}\n                            handleChange={(e) => setSearchQuery(e.target.value)}\n                            onKeyPress={handleSearchOnEnter}\n                        />\n                    </div>\n                    <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n                </SearchContainer>\n                <CartContainer>\n                    <h3>Vybrané položky</h3>\n                    <CartTableHead>\n                        <TableCol>#</TableCol>\n                        <TableCol>Produkt</TableCol>\n\n                        <TableCol>Cena</TableCol>\n                        <TableCol>Množstvo</TableCol>\n                        <TableCol>Viac</TableCol>\n                    </CartTableHead>\n                    <CartTable>\n                        {cart.map((item, idx) => (\n                            <CartDiscountRow\n                                key={idx}\n                                item={item}\n                                idx={idx}\n                            />\n                        ))}\n\n                        {cart.length === 0 && <CartParagraph>Nie sú vybrané žiadné produkty</CartParagraph>}\n                    </CartTable>\n                    <ButtonOptions>\n                        <NextLensesButton onClick={() => next(\"select-lenses\")}>\n                            Preisť na šošovky\n                        </NextLensesButton>\n                        <NextButton onClick={createCombinedProducts}>\n                            Dokončiť objednávku\n                        </NextButton>\n                    </ButtonOptions>\n                </CartContainer>\n            </HeaderContainer>\n\n            <TableContainer>\n                <ProductTableHead>\n                    <TableCol>eanKód</TableCol>\n                    <TableCol>Obrázok</TableCol>\n                    <TableCol>Názov</TableCol>\n                    <TableCol>Farba</TableCol>\n                    <TableCol>Veľkosť</TableCol>\n                    <TableCol>Značka</TableCol>\n                    <TableCol>Cena</TableCol>\n                    <TableCol>Na sklade</TableCol>\n                </ProductTableHead>\n                {productItems.map((product, idx) => (\n                    <ProductTableRow key={idx} onClick={() => isAvailable(product.available) ? addProduct(product) : product.type === 6 ? addProduct(product) : showErrorMessage(\"Produkt nieje na sklade.\")}>\n                        <TableCol>{product.eanCode}</TableCol>\n                        <TableCol>\n                            {product?.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${product.image.imagePath}`} alt={product.image.alt} />}\n                        </TableCol>\n                        <TableCol>{product.name}</TableCol>\n                        <TableCol>{product.specs.frameColor}</TableCol>\n                        <TableCol>{(product.type === 1 || product.type === 2 || product.type === 4) && `${product.specs.size[0]}-${product.specs.size[1]}-${product.specs.size[2]}-${product.specs.size[3]}`}</TableCol>\n                        <TableCol>{product.brand}</TableCol>\n                        <TableCol>{(product.price / 100).toFixed(2)}€</TableCol>\n                        <TableCol>{product.type === 6 ? 'Služba' : formatAvailable(product.available)}</TableCol>\n                    </ProductTableRow>\n                ))}\n            </TableContainer>\n        </div>\n    )\n}\n\nexport default SelectProductComponent\n","/app/src/sections/order/steps/1-select-user/select-user.component.jsx",["922","923"],"import React, { useState, useEffect, useContext } from 'react'\nimport { UserContext } from '../../../../context/user/user.context'\n\nimport CustomInput from '../../../../components/custom-input/custom-input.component'\n\nimport {\n    SearchContainer,\n    TableContainer,\n    UserTableHead,\n    UserTableRow,\n    TableCol,\n    SearchButton\n} from './select-user.styles'\n\nconst SelectUserComponent = ({ next, addToOrder }) => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const [userItems, setUserItems] = useState([])\n\n    const {\n        users,\n        getFilteredUsers,\n        getUserByQuery\n    } = useContext(UserContext)\n\n    const handleClick = (user) => {\n        addToOrder({\n            name: \"user\",\n            value: user\n        })\n        next()\n    }\n\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== '') {\n            if (e.key === 'Enter') {\n                getUserByQuery({\n                    query: searchQuery,\n                    filters: {\n                        admin: 0\n                    }\n\n                })\n            }\n        }\n    }\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        getUserByQuery({\n            query: searchQuery,\n            filters: {\n                admin: 0\n            }\n\n        })\n    }\n\n    useEffect(() => {\n        if (!users) {\n            getFilteredUsers({\n                limit: 5,\n                filters: {\n                    admin: 0\n                }\n            })\n        }\n        if (users) {\n            setUserItems(users)\n        }\n    }, [users])\n\n    useEffect(() => {\n        if (users) {\n            if (searchQuery === '') {\n                getFilteredUsers({\n                    limit: 5,\n                    filters: {\n                        admin: 0\n                    }\n                })\n                setUserItems(users)\n            }\n        }\n    }, [searchQuery])\n\n    useEffect(() => {\n        return () => {\n            setSearchQuery('')\n            setUserItems([])\n        }\n    }, [])\n\n    return (\n        <div>\n            <SearchContainer>\n                <h3>Vyhľadať zákaznika</h3>\n                <div>\n                    <CustomInput\n                        label={\"Meno, priezvisko, email alebo tel. číslo\"}\n                        value={searchQuery}\n                        onChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n            </SearchContainer>\n\n            <TableContainer>\n                <UserTableHead>\n                    <TableCol>Meno a priezvisko</TableCol>\n                    <TableCol>Email</TableCol>\n                    <TableCol>Možnosti</TableCol>\n                </UserTableHead>\n                {userItems.map((user, idx) => (\n                    <UserTableRow key={idx} onClick={() => handleClick(user)}>\n                        <TableCol>{user.name}</TableCol>\n                        <TableCol>{user.email}</TableCol>\n                        <TableCol>{user.phone}</TableCol>\n                    </UserTableRow>\n                ))}\n            </TableContainer>\n\n        </div>\n    )\n}\n\nexport default SelectUserComponent\n","/app/src/components/custom-checkbox/custom-checkbox.component.jsx",[],"/app/src/components/custom-textarea/custom-textarea.component.jsx",[],"/app/src/components/modal-update-registry/modal-update-registry.component.jsx",["924"],"import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport {useAuth} from '../../context/auth/auth.context'\n\nimport {useAnalytics} from '../../context/analytics/analytics.context'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {formatPrice} from '../../utils/warehouse.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    CustomSelect,\n    SubmitButton,\n} from './modal-update-registry.styles'\n\nconst UpdateRegistryModal = ({ close, premise, option, setRefetchIndex }) => {\n    const {updateRegistry} = useAnalytics()\n    const {isAdmin} = useAuth()\n\n    const [updateObj, setUpdateObj] = useState({\n        amount: 0,\n        premises: premise,\n    })\n\n    const handleChange = (e) => {\n        const {name, value} = e.target;\n\n        setUpdateObj(prevValue => ({\n            // ...prevValue,\n            ...(isAdmin) && { premises: prevValue.premises},\n            [name]: value\n        }))\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (updateObj.amount === 0) return\n\n        const obj = {\n            ...updateObj,\n            amount: option === \"deposit\" ? formatPrice(updateObj.amount) : (formatPrice(updateObj.amount) * (-1)) \n        }\n\n        updateRegistry(obj, (data) => {\n            // console.log(data)\n            setRefetchIndex(prevValue => prevValue + 1)\n            close()\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>Upraviť stav pokladne</h2>\n\n                {/* <h3>Priradiť k prevádzke</h3>\n                <CustomSelect value={updateObj.premises} name='premises' onChange={(e) => handleChange(e)}>\n                    <option value={0}>Nezadané</option>\n                    {retailNames.map((name, idx) => {\n                        if (idx === 0) return\n                        return (\n                            <option key={idx} value={idx}>{name}</option>\n                        )\n                    })}\n                </CustomSelect> */}\n\n                {option === 'withdraw' ? (\n                    <h3>Množstvo ktoré chcete vybrať</h3>\n                ) : (\n                    <h3>Množstvo ktoré chcete vložiť</h3>\n                )}\n                <div>\n                    <CustomInput\n                        label='Vložte sumu*'\n                        name='amount'\n                        value={updateObj.amount.toString()}\n                        handleChange={handleChange}\n                    />\n                </div>\n\n                <SubmitButton onClick={handleSubmit}>Odoslať</SubmitButton>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default UpdateRegistryModal\n","/app/src/components/user-form/user-form.component.jsx",["925"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport ProfileOrderOverview from '../profile-order-overview/profile-order-overview.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\nimport ExaminationsOverview from '../examinations-overview/examinations-overview.component'\n\nimport {\n    retailNames\n} from '../../utils/warehouse.utils'\n\nimport {\n    Profile,\n    GridContainer,\n    GridRow,\n    Row,\n    // ThreeColRow,\n    ZeroMargin,\n    Title,\n    Container,\n    OrderHeader,\n    OrderButton,\n    CustomSelect,\n    AdminPanelContainer\n} from './user.form-styles'\n\nconst UserForm = ({\n    isAdmin,\n    isUpdating,\n    user,\n    handleChange,\n    handleParameterChange,\n    handleCompanyChange,\n    isOptometrist,\n    isOrder = false,\n    isCustomer\n}) => {\n    const { push } = useHistory()\n\n    const handleAddOrderButtonClick = e => {\n        e.preventDefault()\n        push(`/dashboard/objednavky/${user._id}`)\n    }\n\n\n    return (\n        <GridContainer>\n            <Profile>\n                {isAdmin && !isCustomer && <AdminPanelContainer>\n                    <h2>Admin panel</h2>\n                    <InputRow\n                        label=\"Predajňa na ktorej uživatel pracuje\"\n                        example=''\n                    >\n                        <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Nezadané</option>\n                            {\n                                retailNames.map((name, idx) => {\n                                    if (idx === 0) return\n                                    return (\n                                        <option key={idx} value={idx}>{name}</option>\n                                    )\n                                })\n                            }\n                        </CustomSelect>\n                    </InputRow>\n                    <InputRow\n                        label=\"Výška administrativných práv\"\n                        example=\"\"\n                    >\n                        <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Zákaznik</option>\n                            <option value={1}>Predavač</option>\n                            <option value={2}>Vedúci</option>\n                        </CustomSelect>\n                    </InputRow>\n\n                    <Container>\n                        <CustomCheckbox\n                            label='Optometrista'\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"optometrist\",\n                                    value: !user.optometrist\n                                }\n                            })}\n                            isActive={user.optometrist}\n                        />\n                    </Container>\n                </AdminPanelContainer>}\n                <div>\n                    <h2>Informácie</h2>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        {isCustomer && <div>\n                            <CustomInput\n                                // label=\"Priezvisko*\"\n                                type='date'\n                                name='birthDate'\n                                value={user.birthDate}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>}\n                    </GridRow>\n                </div>\n\n                <Container>\n                    <h2>Kontaktné údaje</h2>\n                    <Row>\n                        <div>\n                            <CustomInput\n                                label=\"E-mail*\"\n                                type='email'\n                                name='email'\n                                value={user.email ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        {isCustomer && <div>\n                            <CustomInput\n                                label=\"Telefónne číslo\"\n                                type='text'\n                                name='phone'\n                                value={user.phone ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>}\n                    </Row>\n                </Container>\n\n                {isCustomer && <Container>\n                    <h2>Fakturačné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.address ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.psc ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.city ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.country ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>}\n                {isCustomer && <Container>\n                    <h2>Firemné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"IČO\"\n                                type='text'\n                                name='ico'\n                                value={user.company.ico ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"DIČ\"\n                                type='text'\n                                name='dic'\n                                value={user.company.dic ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"IČ DPH\"\n                                type='text'\n                                name='icdph'\n                                value={user.company.icdph ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            {/* <CustomInput\n                                label=\"IČ DPH\"\n                                type='text'\n                                name='icdph'\n                                value={user.company.icdph ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            /> */}\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.company.address ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.company.psc ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.company.city ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.company.country ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n\n\n                </Container>}\n\n                {isCustomer && <Container>\n                    <h2>Parametre</h2>\n\n                    <ParametersTable\n                        parameters={user.lenses}\n                        handleChange={handleParameterChange}\n                    />\n                </Container>}\n\n\n                {isCustomer && <div>\n                        <CustomTextarea\n                            label=\"Poznámka\"\n                            type='text'\n                            rows=\"5\"\n                            name='note'\n                            value={user.note ?? \"\"}\n                            handleChange={(e) => handleChange(e)}\n                        />\n                </div>}\n\n            </Profile>\n\n            {\n                isCustomer && !isOrder && isUpdating && <div>\n                    <OrderHeader>\n                        <Title>\n                            Objednávky\n                    </Title>\n                        <OrderButton onClick={e => handleAddOrderButtonClick(e)}>Pridať objednávku</OrderButton>\n                    </OrderHeader>\n                    <div>\n                        {user.orders.length > 0 ? user.orders.map((order, idx) => (\n                            <ProfileOrderOverview\n                                key={idx}\n                                id={order}\n                                handleUpdateClick={() => push(`/dashboard/objednavky/${user._id}/${order}`)}\n                            />\n                        )).reverse().slice(0, 5) : (\n                            <p>Žiadné objednávky</p>\n                        )}\n                    </div>\n                    {isOptometrist && <ExaminationsOverview />}\n                </div>\n            }\n        </GridContainer >\n    )\n}\n\nexport default UserForm\n","/app/src/components/custom-input/custom-input.styles.jsx",[],"/app/src/components/section-navbar/section-navbar.styles.jsx",[],"/app/src/components/section-header/section-header.styles.jsx",[],"/app/src/components/scroll-container/scroll-container.styles.jsx",[],"/app/src/components/order-overview/order-overview.component.jsx",[],"/app/src/components/order-overview/order-overview.styles.jsx",[],"/app/src/components/list-arrows/list-arrows.styles.jsx",[],"/app/src/hooks/useProduct.jsx",["926"],"import { useState } from \"react\"\n\nexport const useProduct = () => {\n\t// const []\n}\n\nexport const getOutletPrice = (price = 0, outletPercentage = 0) => {\n\treturn `${(((price / 100) * (100 - outletPercentage || 0)) / 100).toFixed(\n\t\t2\n\t)}€`\n}\n\nexport const getOriginalPriceFromOutlet = (price) => {\n\treturn (price / 100).toFixed(2)\n}\n","/app/src/components/modal-eshop-filter/modal-eshop-filter.styles.jsx",[],"/app/src/components/product-overview/product-overview.styles.jsx",[],"/app/src/components/modal-get-product-data/modal-get-product-data.styles.jsx",[],"/app/src/components/modal-images/modal-images.styles.jsx",[],"/app/src/components/product-input-row/product-input-row.styles.jsx",[],"/app/src/components/new-user-form/new-user-form.styles.jsx",[],"/app/src/components/product-lenses-form/product-lenses-form.styles.jsx",[],"/app/src/components/product-service-form/product-service-form.styles.jsx",[],"/app/src/components/product-accessories-form/product-accessories-form.styles.jsx",[],"/app/src/components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx",[],"/app/src/components/modal-get-lenses-data/modal-get-lenses-data.styles.jsx",[],"/app/src/components/custom-select/custom-select.styles.jsx",[],"/app/src/utils/week-calendar.utils.jsx",["927"],"export const getTimefromIndex = (idx, isHalf) => {\n    if (isNaN(idx)) return\n    let time = \"\"\n    if (isHalf) {\n        time = idx < 10 ? `0${idx}:30` : `${idx}:30`\n    } else {\n        time = idx < 10 ? `0${idx}:00` : `${idx}:00`\n    }\n\n    return time;\n}\n\nexport const getHourTime = (idx, interval) => {\n    if (isNaN(idx)) return\n    const totalMinutes = idx * interval\n\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = totalMinutes % 60;\n    const time = formatTime(hours, minutes)\n    return time\n}\n\nconst formatTime = (hour, min) => {\n    if (hour < 10 && min === 0) return `0${hour}/0${min}`\n    if (hour < 10) return `0${hour}/${min}`\n    if (min === 0) return `${hour}/0${min}`\n    return `${hour}/${min}`\n}\n\nexport const changeSlash = time => {\n    if (!time) return\n    return time.replace(\"/\", \":\")\n}\n\nexport const checkBookings = (calendarDataObj, idx, day, month, year) => {\n    if (!calendarDataObj?.booked) return null\n    const dates = Object.keys(calendarDataObj?.booked)\n\n    const bookedDate = dates.find(date => {\n        const splitedDate = date.split(\"/\").map(value => Number(value))        \n        if (splitedDate[0] === day && splitedDate[1] === month + 1 && splitedDate[2] === year) {\n            return date\n        }\n        return false\n    })\n\n    if (!bookedDate) return null\n\n    const time = getHourTime(idx, calendarDataObj.interval)\n    const bookingTime = calendarDataObj.booked[bookedDate].find(bookTime => bookTime === time)\n\n    return bookingTime ? ({\n        time: bookingTime,\n        date: calendarDataObj.booked[bookedDate],\n        dueDate: `${bookingTime}:${bookedDate}`\n    }) : null\n}\n\nexport const getTimeline = (startTimes, endTimes, interval) => {\n    const numberedStartTimes = startTimes.filter(number => number !== \"X\").map(time => (Number(time.split(\"/\")[0])))\n    const numberedEndTimes = endTimes.filter(number => number !== \"X\").map(time => (Number(time.split(\"/\")[0])))\n    const numberedEndMinutes = endTimes.filter(number => number !== \"X\").map(time => (Number(time.split(\"/\")[1])))\n    const startTime = Math.min(...numberedStartTimes)\n    const endTime = Math.max(...numberedEndTimes)\n    const endMinutes = Math.max(...numberedEndMinutes)\n\n    const timeline = [...Array(interval === 60 ? 24 : interval === 30 ? 48 : 96)].map((value, idx) => {\n        const time = getHourTime(idx, interval)\n        const splitedTime = time.split('/').map(value => Number(value))\n        if (startTime > splitedTime[0]) return null\n        if (endTime < splitedTime[0]) return null\n        if (endTime === splitedTime[0] && !(endMinutes === splitedTime[1]) && splitedTime[1] === 30) return null\n        if (endTime === splitedTime[0] && !(endMinutes === splitedTime[1]) && splitedTime[1] === 15) return null\n        if (endTime === splitedTime[0] && !(endMinutes === splitedTime[1]) && splitedTime[1] === 45) return null\n        return time\n    }).filter(time => time !== null)\n\n    return timeline\n}\n\nexport const handleExceptionDays = (calendarDataObj) => {\n    \n    // console.log(\"DATUMY\")\n    // console.log(dates)\n    // console.log(calendarDataObj.exceptDays)\n\n    const holidayDates = Object.keys(calendarDataObj?.exceptDays)\n\n    // console.log(\"holidayDates\")\n    // console.log(\"holidayDates\")\n    // console.log(holidayDates)\n\n    // let hasHoliday = false \n\n    // dates.forEach(date => {\n    //     holidayDates.forEach(hDate => {\n    //         if(date === hDate) return hasHoliday = true\n    //         return\n    //     })\n    // } )\n\n    // console.log(hasHoliday)\n}","/app/src/components/modal-product-image-gallery/modal-product-image-gallery.styles.jsx",[],"/app/src/components/calendar-weekdays/calendar-weekdays.styles.jsx",[],"/app/src/components/booking-calendar-bookings/booking-calendar-bookings.styles.jsx",[],"/app/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx",[],"/app/src/components/calendar/calendar.styles.jsx",[],"/app/src/components/parameters-table/parameters-table.component.jsx",["928","929","930","931","932"],"import React, { useEffect } from 'react'\n\nimport { formatfloatNumber } from '../../utils/warehouse.utils'\n\nimport {\n    TableContainer,\n    TitleCol,\n    Col,\n    OsContainer\n} from './parameters-table.styles'\n\nconst ParametersTable = ({ parameters, handleChange, disabledInputs = false }) => {\n    const checkParameters = (parameter, idx) => {\n        if (parameter.length === 0) {\n            return \"\"\n        }\n        if (parameter[idx] === 1001 || parameter[idx] === \"1001\") {\n            return \"\"\n        }\n\n        return parameter[idx]\n    }\n\n    const formatParameter = (e, idx) => {\n        if(e.target.value === \"\") return\n        const value = formatfloatNumber(e.target.value)\n        // console.log(value)\n        handleChange({\n            target: {\n                value: value.includes(\"+\") ? `+${Number(value).toFixed(2)}` : Number(value).toFixed(2) < 0 ? Number(value).toFixed(2) : `+${Number(value).toFixed(2)}`,\n                name: e.target.name\n            }\n        }, idx)\n    }\n\n    const checkaAx = (parameter, idx) => {\n        if (parameter.length === 0) {\n            return \"\"\n        }\n        if (parameter[idx] === 1001 || parameter[idx] === '1001') {\n            return \"\"\n        }\n\n        return parameter[idx]\n    }\n\n    const formatAx = (e, idx) => {\n        if(e.target.value === \"\") return\n        const value = formatfloatNumber(e.target.value)\n        handleChange({\n            target: {\n                value: value,\n                name: e.target.name\n            }\n        }, idx)\n    }\n\n    useEffect(() => {\n        if (handleChange) {\n            if (parameters.addition[0] !== 1001) {\n                handleChange({\n                    target: {\n                        name: \"diopters\",\n                        value: (Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))) === 0 ? \"\" : (Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))).toFixed(2)\n                    }\n                }, 2)\n            }\n\n            if (parameters.addition[0] === 1001) {\n                handleChange({\n                    target: {\n                        name: \"diopters\",\n                        value: 1001\n                    }\n                }, 2)\n            }\n\n            if (parameters.addition[1] !== 1001) {\n                handleChange({\n                    target: {\n                        name: \"diopters\",\n                        value: (Number(checkParameters(parameters.diopters, 1)) + Number(checkParameters(parameters.addition, 1))) === 0 ? \"\" : (Number(checkParameters(parameters.diopters, 1)) + Number(checkParameters(parameters.addition, 1))).toFixed(2)\n                    }\n                }, 3)\n                return\n            }\n\n\n            if (parameters.addition[1] === 1001) {\n                handleChange({\n                    target: {\n                        name: \"diopters\",\n                        value: 1001\n                    }\n                }, 3)\n            }\n        }\n    }, [parameters.diopters[0], parameters.addition[0], parameters.diopters[1], parameters.addition[1]])\n\n    return (\n        <TableContainer>\n            <TitleCol>\n                <div>{\" \"}</div>\n                <div>\n                    <p>P</p>\n                </div>\n                <div>\n                    <p>Ľ</p>\n                </div>\n                <div>\n                    <p>P</p>\n                </div>\n                <div>\n                    <p>Ľ</p>\n                </div>\n            </TitleCol>\n\n\n            <Col>\n                <div>sph</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.diopters, idx)}\n                                name=\"diopters\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n                                onBlur={e => formatParameter(e, idx)}\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>cyl</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.cylinder, idx)}\n                                name=\"cylinder\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n                                onBlur={e => formatParameter(e, idx)}\n\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>ax</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <OsContainer key={idx}>\n                            <input\n                                type='text'\n                                value={checkaAx(parameters.cylinderAxes, idx)}\n                                name=\"cylinderAxes\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n                                onBlur={e => formatAx(e, idx)}\n\n\n                            />\n                        </OsContainer>\n                    )\n                })}\n            </Col>\n\n            \n            <Col>\n                <div>prizma</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.prism, idx)}\n                                name=\"prism\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n                                onBlur={e => formatParameter(e, idx)}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>basis</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.basis, idx)}\n                                name=\"basis\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n                                onBlur={e => formatParameter(e, idx)}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>addicia</div>\n\n                {[...Array(2)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.addition, idx)}\n                                name=\"addition\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n                                onBlur={e => formatParameter(e, idx)}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>PD</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkaAx(parameters.distance, idx)}\n                                name=\"distance\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n                                onBlur={e => formatAx(e, idx)}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>vys.</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkaAx(parameters.vys, idx)}\n                                name=\"vys\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n                                onBlur={e => formatAx(e, idx)}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n        </TableContainer>\n    )\n}\n\nexport default ParametersTable\n","/app/src/components/custom-form-switch/custom-form-switch.component.jsx",[],"/app/src/components/calendar-booked-day/calendar-booked-day.component.jsx",["933","934"],"import React, { useState, useEffect } from 'react'\nimport stringSimilarity from \"string-similarity\"\n\n\n// import Spinner from '../spinner/spinner.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    BookedDayContainer\n} from './calendar-booked-day.styles'\n\nconst CalendarBookedDay = ({ dayData, calendarId, time, userBookings, open }) => {\n    const [isHalfHour, setIsHalfHour] = useState(false)\n    const { response, isLoading, refetch } = useFetchByQuery(`api/booking/calendars/${calendarId}/dayInfo`, {\n        date: dayData.bookingDate\n    }, !dayData?.bookingDate)\n    const [appointment, setAppointment] = useState(null)\n    const [isValidDueTime, setIsValiDueTime] = useState(false)\n    // const [isBelongToAnother, setIsBelongToAnother] = useState(false)\n\n    useEffect(() => {\n        if (isLoading) return\n        const bookingsDueTime = response?.userBookings?.filter(booking => !booking?.cancelled).map(booking => booking?.dueTime)\n\n        if (bookingsDueTime?.length > 0) {\n            const matches = stringSimilarity.findBestMatch(userBookings?.dueDate, bookingsDueTime);\n\n            const exactBooking = response?.userBookings?.find(booking => booking?.dueTime === userBookings?.dueDate)\n            const todayBooking = response?.userBookings?.find(booking => booking?.dueTime === matches?.bestMatch?.target)\n\n            if (userBookings?.dueDate === exactBooking?.dueTime) {\n                setIsValiDueTime(true)\n            } else if (matches?.bestMatch?.target === todayBooking?.dueTime) {\n                // setIsBelongToAnother(true)\n            }\n\n            setAppointment(exactBooking)\n\n        }\n\n    }, [isLoading])\n\n    useEffect(() => {\n        if (!dayData?.bookingDate) return\n        refetch()\n    }, [dayData?.bookingDate])\n\n    useEffect(() => {\n        return () => {\n            setIsHalfHour(false)\n            setIsValiDueTime(false)\n        }\n    }, [])\n\n    return (\n        <React.Fragment>\n            <BookedDayContainer onClick={isValidDueTime ? open : () => { }} color={appointment?.booking?.color ? `#${appointment?.booking?.color}` : `var(--appointment-container-background-color)`} isHalfHour={isHalfHour}>\n                {/* <BookedDayContainer onClick={() => console.log(appointment)} color={appointment?.booking?.color ? `#${appointment?.booking?.color}` : `#${response?.userBookings[0]?.booking?.color}`} isHalfHour={isHalfHour}> */}\n                {isValidDueTime && <div>\n                    <h4>{appointment && appointment?.booking?.name}</h4>\n                    <h5>{time}</h5>\n                </div>}\n                {/* {(isBelongToAnother && !isValidDueTime) && <div>\n                    <h4>Test</h4>\n                </div>} */}\n\n            </BookedDayContainer>\n        </React.Fragment>\n    )\n}\n\nexport default CalendarBookedDay\n","/app/src/components/modal-userbookings-details/modal-userbookings-details.component.jsx",["935","936"],"import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Spinner from '../spinner/spinner.component'\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\nimport { retailNames } from '../../utils/warehouse.utils'\n\n\nimport {\n    formatDate,\n    formatCalendarStartTime,\n    formatCalendarEndTime\n} from '../../utils/calendar.utils'\n\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    GridContainer,\n    BlockContainer,\n    Header,\n    CancelButton,\n    Container,\n    DateContainer,\n    CustomSelect,\n    ReBookContainer\n} from './modal-userbookings-details.styles'\n\nconst UserbookingDetailsModal = ({ reBookUserBooking, close, userBooking, calendarId, day, cancelUserBooking, refetchCalendar, calendar }) => {\n    const { response, isLoading } = useFetchByQuery(`api/booking/calendars/${calendarId}/dayInfo`, {\n        date: userBooking?.userBookings?.dueDate.split(\":\")[1]\n    }, !userBooking)\n\n    const [booking, setBooking] = useState(null)\n\n    useEffect(() => {\n        if (isLoading) return\n        if (!response) return\n\n        const newBooking = response.userBookings.find(booking => booking.dueTime === userBooking.userBookings.dueDate)\n        setBooking(newBooking)\n\n    }, [isLoading])\n\n    const [startTime, setStartTime] = useState(null)\n    const [endTime, setEndTime] = useState(null)\n    const [rebook, setReBook] = useState(false)\n    const [rebookObj, setReBookObj] = useState({\n        date: \"\",\n        hour: \"\",\n        min: 0\n    })\n\n    const toggleReBook = () => {\n        setReBook(prevValue => !prevValue)\n    }\n\n    const handleChangeDate = e => {\n        const { name, value } = e.target\n\n        setReBookObj(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const handleRebookSubmit = () => {\n        // console.log(booking)\n        const rebook = {\n            ...(booking.name) && { name: booking.name},\n            ...(booking.email) && { email: booking.email},\n            ...(booking.phone) && { phone: booking.phone},\n            ...(booking.note) && { note: booking.note},\n            booking: booking.booking._id,\n            values: {},\n            dueTime: formatDate(rebookObj),\n        }\n\n        // console.log(rebook)\n\n        reBookUserBooking(rebook, booking._id, refetchCalendar, () => {\n            refetchCalendar()\n            close()\n        })\n\n    }\n\n    useEffect(() => {\n        if (day) {\n            const { time, dayNumber, month, year } = day\n            setStartTime(formatCalendarStartTime(calendar, day))\n            setEndTime(formatCalendarEndTime(calendar, day))\n            // const formatedDate = formatDate(`${dayNumber}-${month}-${year}`, time)\n            setReBookObj({\n                date: `${year}-${month < 9 ? `0${month + 1}` : (month + 1)}-${dayNumber < 10 ? `0${dayNumber}` : dayNumber}`,\n                hour: Number(time?.split(\"/\")[0]),\n                min: Number(time?.split(\"/\")[1])\n            })\n        }\n    }, [day])\n\n    useEffect(() => {\n        return () => {\n            setReBook({\n                date: \"\",\n                hour: \"\",\n                min: 0\n            })\n        }\n    }, [])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                {!booking && <Spinner />}\n                <h2>{booking?.booking?.name}</h2>\n\n                <Header>\n                    <h3>Informácie:</h3>\n                    <div>\n                        <CancelButton onClick={() => toggleReBook()}>Proobjednať</CancelButton>\n                        <CancelButton onClick={() => cancelUserBooking(booking._id)}>Zrušiť rezerváciu</CancelButton>\n                    </div>\n                </Header>\n                {rebook && <ReBookContainer>\n                    <h3>Dátum vyšetrenia</h3>\n                    <DateContainer>\n                        <CustomInput\n                            label=''\n                            type='date'\n                            name='date'\n                            handleChange={handleChangeDate}\n                            value={rebookObj?.date}\n\n                        />\n                        <div>\n                            <CustomInput\n                                label='Čas'\n                                type='number'\n                                name='hour'\n                                value={rebookObj?.hour?.toString()}\n                                min={startTime?.split(\":\")[0]}\n                                max={endTime?.split(\":\")[0]}\n                                handleChange={handleChangeDate}\n                                step=\"1\"\n                            />\n                        </div>\n                        <p>:</p>\n                        <div>\n                            <CustomSelect\n                                name='min'\n                                value={rebookObj?.min?.toString()}\n                                onChange={handleChangeDate}\n                            >\n                                <option value={0}>00</option>\n                                {calendar?.interval === 15 && <option value={45}>45</option>}\n                                {(calendar?.interval === 30 || calendar?.interval === 15) && <option value={30}>30</option>}\n                                {calendar?.interval === 15 && <option value={15}>15</option>}\n                            </CustomSelect>\n                        </div>\n                    </DateContainer>\n                    <CancelButton onClick={() => handleRebookSubmit()}>Proobjednať</CancelButton>\n                </ReBookContainer>}\n                <GridContainer>\n                    <BlockContainer>\n                        <h3>Meno a priezvisko</h3>\n                        <p>{booking?.name}</p>\n                    </BlockContainer>\n                    <BlockContainer>\n                        <h3>Prevadzka</h3>\n                        <p>{retailNames[booking?.booking?.premises]}</p>\n                    </BlockContainer>\n                    <BlockContainer>\n                        <h3>Tel. číslo</h3>\n                        <p>{booking?.phone}</p>\n                    </BlockContainer>\n                    <BlockContainer>\n                        <h3>E-mail</h3>\n                        <p>{booking?.email}</p>\n                    </BlockContainer>\n                    <BlockContainer>\n                        <h3>Dátum</h3>\n                        <p>{booking?.dueTime}</p>\n                    </BlockContainer>\n                    <BlockContainer>\n                        <h3>Zrušené</h3>\n                        <p>{booking?.cancelled ? \"Ano\" : \"Nie\"}</p>\n                    </BlockContainer>\n                </GridContainer>\n\n                <Container>\n                    <BlockContainer>\n                        <h3>Poznámka</h3>\n                        {booking?.note ? (\n                            <p>{booking?.note}</p>\n                        ) : (\n                                <p>Žiadná poznámka</p>\n                            )}\n                    </BlockContainer>\n\n                    <BlockContainer>\n                        <h3>Popis</h3>\n                        <p>{booking?.booking?.description}</p>\n                    </BlockContainer>\n\n                </Container>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default UserbookingDetailsModal\n","/app/src/components/modal-user-bookings/modal-user-booking.component.jsx",["937","938"],"import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport {useBookingContext} from '../../context/booking/booking.context'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    formatDate,\n    formatCalendarStartTime,\n    formatCalendarEndTime,\n    formatExceptDays,\n    formatExceptHours,\n    getExceptDaysObj,\n    formatBreakHour,\n    formatLuncheskHour\n} from '../../utils/calendar.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SubmitButton,\n    Navbar,\n    UserTable,\n    TableHead,\n    Tablebody,\n    TableCol,\n    SearchTab,\n    CustomSelect,\n    DateContainer,\n    Header,\n    BreakButton\n} from './modal-user-booking.styles'\n\nconst UserBookingModal = ({ refetchWeekCalendar, close, day, calendar, refetchCalendar, createUserBooking }) => {\n    const {updateCalendar} = useBookingContext()\n\n    const [query, setQuery] = useState(null)\n    const [activeTab, setActiveTab] = useState(0)\n    const [userBooking, setUserBooking] = useState({})\n    const [bookingDate, setBookingDate] = useState({\n        date: \"\",\n        hour: \"\",\n        min: 0\n    })\n\n    const [startTime, setStartTime] = useState(null)\n    const [endTime, setEndTime] = useState(null)\n\n\n\n    const { refetch, response } = useFetchByQuery('api/admin/users/filter', query, !query)\n\n    const handleSearch = () => {\n        if (!query) return\n        refetch()\n    }\n\n    const handleSearchOnEnter = (e) => {\n        if (query !== null) {\n            if (e.key === 'Enter') {\n                refetch()\n            }\n        }\n    }\n\n    const handleUserBookingChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete userBooking[name]\n            setUserBooking({ ...userBooking })\n            return\n        }\n\n        setUserBooking(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const selectUser = (userObj) => {\n        setUserBooking(prevValue => ({\n            ...prevValue,\n            ...userObj\n        }))\n        setActiveTab(0)\n        setQuery(null)\n    }\n\n    const handleChangeDate = e => {\n        const { name, value } = e.target\n\n        setBookingDate(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const handleSubmit = () => {\n        // if (!userBooking?.name) return\n        // if (!userBooking?.email) return\n        // if (!userBooking?.phone) return\n        // if (!userBooking?.booking) return\n\n        let bookingToAdd = {\n            ...userBooking,\n            dueTime: formatDate(bookingDate),\n            values: {}\n        }\n\n        console.log(bookingToAdd)\n        \n        createUserBooking(bookingToAdd, refetchCalendar, close, refetchWeekCalendar)\n        // refetchCalendar()\n        // close()\n    }\n\n    const handleBreakSubmit = (property) => {\n        const exceptDays = formatExceptDays(calendar.exceptDays || {})\n        const exceptHours = formatExceptHours(calendar.exceptDays || {})\n\n        // console.log(exceptDays)\n        // console.log(exceptHours)\n\n        const newExceptDays = [\n            ...exceptDays,\n            bookingDate.date\n        ]\n\n        const formatedHour = `${bookingDate?.hour < 10 ? `0${bookingDate?.hour}` : bookingDate?.hour}:${bookingDate?.min === 0 ? `0${bookingDate?.min}` : bookingDate?.min}`\n\n\n        const newExceptHours = [\n            ...exceptHours,\n            `${formatedHour}-${property === 'breaks' ? formatBreakHour(formatedHour) : formatLuncheskHour(formatedHour)}`\n        ]\n\n        // console.log(newExceptDays)\n        // console.log(newExceptHours)\n\n        \n        const calendarToUpdate = {\n            [property]: getExceptDaysObj(newExceptDays, newExceptHours, calendar, property)\n        }\n\n        // console.log(calendarToUpdate)\n\n        updateCalendar(calendarToUpdate, calendar._id, refetchCalendar, () => {\n            close()\n        })\n    }\n\n    useEffect(() => {\n        if (day) {\n            const { time, dayNumber, month, year } = day\n            setStartTime(formatCalendarStartTime(calendar, day))\n            setEndTime(formatCalendarEndTime(calendar, day))\n\n            console.log(day.isPrevDay)\n            // const formatedDate = formatDate(`${dayNumber}-${month}-${year}`, time)\n            const d = day.isPrevDay ? `${year}-${month < 9 ? `0${month + 1}` : (month + 1)}-${day?.prevDayNumber < 10 ? `0${day?.prevDayNumber}` : day?.prevDayNumber}` : `${year}-${month < 9 ? `0${month + 1}` : (month + 1)}-${dayNumber < 10 ? `0${dayNumber}` : dayNumber}`\n\n            setBookingDate({\n                date: d,\n                hour: Number(time?.split(\"/\")[0]),\n                min: Number(time?.split(\"/\")[1])\n            })\n        }\n    }, [day])\n\n    useEffect(() => {\n        return () => {\n            setUserBooking({})\n            setQuery(null)\n            setActiveTab(0)\n        }\n    }, [])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <Header>\n                    <h2>Objednať zákazníka</h2>\n                    <BreakButton onClick={() => handleBreakSubmit(\"lunches\")}>Obed</BreakButton>\n                    <BreakButton onClick={() => handleBreakSubmit(\"breaks\")}>Prestavka</BreakButton>\n                </Header>\n\n\n                <Navbar\n                    items={optionTabs}\n                    activeIndex={activeTab}\n                    setActiveIndex={setActiveTab}\n                />\n\n                {activeTab === 1 ? (\n                    <SearchTab>\n                        <CustomInput\n                            label='Meno, priezvisko, e-mail alebo tel. číslo'\n                            name='query'\n                            value={query ? query?.query : \"\"}\n                            handleChange={e => setQuery({\n                                limit: 10,\n                                query: e.target.value\n                            })}\n                            onKeyPress={handleSearchOnEnter}\n                        />\n\n                        <SubmitButton onClick={handleSearch}>Hľadať</SubmitButton>\n\n\n                        <UserTable>\n                            <TableHead>\n                                <TableCol>Meno</TableCol>\n                                <TableCol>E-mail</TableCol>\n                                <TableCol>Tel. číslo</TableCol>\n                            </TableHead>\n                            {response?.users ? response?.users?.map(({ name, email, phone }, idx) => (\n                                <Tablebody key={idx} onClick={() => selectUser({ name, email, phone })}>\n                                    <TableCol>{name}</TableCol>\n                                    <TableCol>{email}</TableCol>\n                                    <TableCol>{phone}</TableCol>\n                                </Tablebody>\n                            )) : (\n                                <div>\n                                    <p>Žiaden výsledok</p>\n                                </div>\n                            )}\n                        </UserTable>\n                    </SearchTab>\n                ) : (\n                    <React.Fragment>\n                        <div>\n                            <h3>Dátum vyšetrenia</h3>\n                            <DateContainer>\n                                <CustomInput\n                                    label=''\n                                    type='date'\n                                    name='date'\n                                    handleChange={handleChangeDate}\n                                    value={bookingDate?.date}\n\n                                />\n                                <div>\n                                    <CustomInput\n                                        label='Čas'\n                                        type='number'\n                                        name='hour'\n                                        value={bookingDate?.hour?.toString()}\n                                        min={startTime?.split(\":\")[0]}\n                                        max={endTime?.split(\":\")[0]}\n                                        handleChange={handleChangeDate}\n                                        step=\"1\"\n                                    />\n                                </div>\n                                <p>:</p>\n                                <div>\n                                    <CustomSelect\n                                        name='min'\n                                        value={bookingDate?.min?.toString()}\n                                        onChange={handleChangeDate}\n                                    >\n                                        <option value={0}>00</option>\n                                        {calendar?.interval === 15 && <option value={15}>15</option>}\n                                        {(calendar?.interval === 30 || calendar?.interval === 15) && <option value={30}>30</option>}\n                                        {calendar?.interval === 15 && <option value={45}>45</option>}\n                                    </CustomSelect>\n                                </div>\n                            </DateContainer>\n                        </div>\n                        <div>\n                            <CustomInput\n                                label='Meno*'\n                                name='name'\n                                value={userBooking?.name || \"\"}\n                                handleChange={handleUserBookingChange}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label='E-mail'\n                                name='email'\n                                value={userBooking?.email || \"\"}\n                                handleChange={handleUserBookingChange}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label='Tel. číslo*'\n                                name='phone'\n                                value={userBooking?.phone || \"\"}\n                                handleChange={handleUserBookingChange}\n                            />\n                        </div>\n\n                        <div>\n                            <CustomTextarea\n                                label='Poznámka'\n                                name='note'\n                                rows=\"5\"\n                                value={userBooking?.note || \"\"}\n                                handleChange={handleUserBookingChange}\n                            />\n                        </div>\n\n                        <div>\n                            <h3>Vyšetrenie</h3>\n                            <CustomSelect\n                                name='booking'\n                                value={userBooking?.booking || \"\"}\n                                onChange={handleUserBookingChange}\n                            >\n                                <option value={''}>Nezvolené</option>\n                                {calendar?.bookings.map((booking, idx) => {\n                                    if (booking.active === false) return\n                                    return (\n                                        <option key={idx} value={booking._id}>{booking.name}</option>\n                                    )\n                                })}\n                            </CustomSelect>\n                        </div>\n                    </React.Fragment>\n                )}\n\n                {activeTab === 0 && <SubmitButton onClick={handleSubmit}>Vytvoriť</SubmitButton>}\n            </Modal>\n        </ModalContainer >\n    ), document.getElementById('portal'))\n}\n\nexport default UserBookingModal\n\nconst optionTabs = [\n    {\n        id: 0,\n        name: \"Nový zákazník\",\n    },\n    {\n        id: 1,\n        name: \"Vyhľadať zákazníka\",\n    },\n]","/app/src/components/modal-booking/modal-booking.component.jsx",["939"],"import React, { useState, useContext, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { BookingContext } from '../../context/booking/booking.context'\n\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\nimport { useFetchById } from '../../hooks/useFetch'\nimport {\n    formatBookingObj\n} from '../../utils/calendar.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SubmitButton,\n    InputContainer,\n    ModalHeader,\n    CustomSelect\n} from './modal-booking.styles'\n\nconst BookingModal = ({ close, calendarId, refetch, selectedBooking }) => {\n    const { createBooking, updateBooking } = useContext(BookingContext)\n    const { response, isLoading } = useFetchById(\"api/booking/bookings\", selectedBooking, !selectedBooking)\n\n    const [booking, setBooking] = useState({})\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleBookingChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete booking[name]\n            setBooking({\n                ...booking\n            })\n            return\n        }\n\n        setBooking(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const handleSubmit = () => {\n        if (!booking?.name) return\n\n        if (isUpdating) {\n            let bookingToUpdate = formatBookingObj(booking)\n            updateBooking(bookingToUpdate, booking._id)\n        } else {\n            let bookingToAdd = {\n                ...booking,\n                calendar: calendarId\n            }\n            createBooking(bookingToAdd)\n        }\n\n        refetch()\n        close()\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n        if (response?.booking) {\n            setIsUpdating(true)\n            setBooking(response?.booking)\n        }\n    }, [selectedBooking, isLoading])\n\n    useEffect(() => {\n        return () => {\n            setIsUpdating(false)\n            setBooking({})\n        }\n    }, [])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <ModalHeader>\n                    {!isUpdating && <h2>Nové vyšetrenie</h2>}\n                    {isUpdating && <h2>Upraviť vyšetrenie</h2>}\n                    <div>\n                        <CustomCheckbox\n                            label=\"Aktívne\"\n                            isActive={booking?.active || false}\n                            name='active'\n                            handleClick={() => handleBookingChange({\n                                target: {\n                                    name: 'active',\n                                    value: booking?.active ? !booking?.active : true\n                                }\n                            })}\n                        />\n                    </div>\n                </ModalHeader>\n                <InputContainer>\n                    <CustomInput\n                        label=\"Názov vyšetrenia*\"\n                        name=\"name\"\n                        value={booking?.name || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                <InputContainer>\n                    <CustomInput\n                        label=\"Cena\"\n                        name=\"price\"\n                        value={booking?.price || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                <InputContainer>\n                    <CustomInput\n                        label=\"Čas\"\n                        name=\"time\"\n                        value={booking?.time || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                <InputContainer>\n                    <CustomSelect\n                        label=\"Farba\"\n                        type='text'\n                        name='color'\n                        value={booking?.color || \"\"}\n                        onChange={handleBookingChange}\n                    >\n                        <option value='DD4C4C'>Červená</option>\n                        <option value='ebac01'>Žltá</option>\n                        <option value='32AA5F'>Zelená</option>\n                        <option value='1e90ff'>Modrá</option>\n                        <option value='a4b0be'>Šedá</option>\n                    </CustomSelect>\n                </InputContainer>\n                <InputContainer>\n                    <CustomTextarea\n                        label=\"Popis\"\n                        rows='5'\n                        name=\"description\"\n                        value={booking?.description || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                {!isUpdating && <SubmitButton onClick={handleSubmit}>Pridať</SubmitButton>}\n                {isUpdating && <SubmitButton onClick={handleSubmit}>Uložiť</SubmitButton>}\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById(\"portal\"))\n}\n\nexport default BookingModal\n","/app/src/sections/order/steps/3-select-lenses/select-lenses.styles.jsx",[],"/app/src/sections/order/steps/4-summary/summary.styles.jsx",[],"/app/src/components/custom-back-button/custom-back-button.component.jsx",[],"/app/src/components/order-cart-lenses-row/order-cart-lenses-row.component.jsx",["940","941"],"import React, { useContext, useState } from 'react'\nimport { OrderContext } from '../../context/order/order.context'\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    AiOutlineLeft,\n    AiOutlineRight\n} from 'react-icons/ai'\n\nimport {\n    AiFillCaretDown\n} from 'react-icons/ai'\n\nimport {\n    CartTableRow,\n    // DiscountCheckbox,\n    // DiscountContainer,\n    // IconContainer,\n    // OptionsContainer,\n    DiscountCheckbox,\n    DiscountCheckboxContainer,\n    DiscountContainer,\n    TableCol,\n    QuantityContainer,\n    IconContainer,\n    OptionsContainer\n} from './order-cart-lenses-row.styles'\n\nconst CartLensesRow = ({ idx, item }) => {\n    const {\n        selectProduct,\n        selectedProduct,\n        addLensesDiscount,\n        deleteProduct,\n        incrementQuantity,\n        decrementQuantity,\n    } = useContext(OrderContext)\n\n    \n    const [showRow, setShowRow] = useState(false)\n    const [discountType, setDiscountType] = useState(item?.discount?.lenses?.flat ? \"flat\" : \"percent\")\n    const [includeDiscount, setIncludeDiscount] = useState(true)\n\n    const handleChangeDiscount = (type, e) => {\n        e.stopPropagation()\n\n        // setProductDiscount({})\n        setDiscountType(type)\n        addLensesDiscount(idx, type, \"0\")\n\n    }\n\n    const handleClick = (e) => {\n        e.stopPropagation()\n        setShowRow(prevValue => !prevValue)\n    }\n\n\n\n    const handleSelectProduct = (itemIdx, e) => {\n        if (item.product.type === 3 || item.product.type === 4 || item.product.type === 5 || item.product.isPseudo) return\n        selectProduct(itemIdx, e)\n    }\n\n    const handleDeleteProduct = (item) => {\n\n        deleteProduct(item, handleSelectProduct)\n    }\n\n    return (\n        <CartTableRow isSelected={selectedProduct === idx} onClick={(e) => handleSelectProduct(idx, e)}>\n            <TableCol onClick={() => handleDeleteProduct(idx)} >{idx + 1}</TableCol>\n            <TableCol>{item?.product?.name}</TableCol>\n            <TableCol>{item?.lens?.name}</TableCol>\n            <TableCol>\n                {item?.lens?.price ? (\n                    `${(item?.lens?.price / 100).toFixed(2)}€`\n                ) : (\n                        \"\"\n                    )}\n                { }\n            </TableCol>\n            <TableCol>\n                {item?.lensesQuant && <QuantityContainer>\n                    <button onClick={(e) => decrementQuantity(item?.lensesQuant, idx, e)}><AiOutlineLeft /></button>\n                    <p>{item?.lensesQuant}</p>\n                    <button onClick={(e) => incrementQuantity(item?.lensesQuant, idx, e)}><AiOutlineRight /></button>\n                </QuantityContainer>}\n            </TableCol>\n            <TableCol>\n                {/* <input\n                    // placeholder='%'\n                    value={item?.discount?.lenses ? item?.discount.lenses.percent : ''}\n                    onChange={(e) => addLensesDiscount(idx, e.target.value)}\n                /> */}\n                {item?.lensesQuant && <IconContainer onClick={handleClick}>\n                    <AiFillCaretDown />\n                </IconContainer>}\n            </TableCol>\n            {showRow && (\n                <OptionsContainer>\n                \n                         <DiscountContainer>\n                            {/* <DiscountCheckboxContainer>\n                                <input id=\"discount\" name='discount' type='checkbox' value={includeDiscount} onChange={(e) => {\n                                    e.stopPropagation()\n                                    setIncludeDiscount(!includeDiscount)\n                                }} />\n                                <label htmlFor='discount'>Pridať zlavu pre šosovky</label>\n                            </DiscountCheckboxContainer> */}\n                            {includeDiscount && <div>\n                                <h4>Zlava pre šosovky</h4>\n                                <div>\n                                    <DiscountCheckbox\n                                        label={\"Fixná suma\"}\n                                        value={\"flat\"}\n                                        name='flat'\n                                        isActive={discountType === 'flat'}\n                                        handleClick={(e) => handleChangeDiscount('flat', e)}\n                                    />\n                                    <DiscountCheckbox\n                                        label={\"Percertá\"}\n                                        value={\"percent\"}\n                                        name='percent'\n                                        isActive={discountType === 'percent'}\n                                        handleClick={(e) => handleChangeDiscount('percent', e)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label='Hodnota'\n                                        value={item?.discount?.lenses ? item?.discount.lenses[discountType] : ''}\n                                        onChange={(e) => {\n                                            addLensesDiscount(idx, discountType, e.target.value)\n                                        }}\n                                    />\n                                </div>\n                            </div>}\n                        </DiscountContainer>\n                </OptionsContainer>\n            )}\n        </CartTableRow>\n    )\n}\n\nexport default CartLensesRow\n","/app/src/components/modal-finish-order/modal-finish-order.component.jsx",["942"],"import React, { useState, useEffect } from 'react'\n\nimport {\n    formatPrice\n} from '../../utils/warehouse.utils'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    Modal,\n    AddButton,\n    CustomSelect,\n    OptionsCheckbox,\n    OverwriteAddressCheckbox,\n    DiscountCheckboxContainer,\n    CouponValueContainer\n} from './modal-finish-order.styles'\n\nconst FinishOrderModal = ({\n    order,\n    combinedProducts,\n    createOrder,\n    setHasChanged,\n    isUpdating,\n    updateOrder,\n    note\n}) => {\n    const [orderDetail, setOrderDetails] = useState({\n        paymentType: \"cash\"\n    })\n    const [hasDeposit, setHasDeposit] = useState(false)\n    const [hasCoupon, setHasCoupon] = useState(false)\n    const [overwrite, setOverwrite] = useState(false)\n\n    const toggleDeposit = prevValue => {\n        if (prevValue) {\n            setHasDeposit(false)\n            if (orderDetail.paidAlready) {\n                delete orderDetail[\"paidAlready\"]\n                setOrderDetails({\n                    ...orderDetail\n                })\n            }\n        } else {\n            setHasDeposit(true)\n        }\n    }\n\n    const toggleCoupon = prevValue => {\n        if (prevValue) {\n            setHasCoupon(false)\n            if (orderDetail.couponValue) {\n                delete orderDetail[\"couponValue\"]\n                setOrderDetails({\n                    ...orderDetail\n                })\n            }\n        } else {\n            setHasCoupon(true)\n        }\n    }\n\n    const toggleOverwriteAddress = prevValue => {\n        if (prevValue) {\n            setOverwrite(false)\n            if (orderDetail.overwrite) {\n                delete orderDetail[\"overwrite\"]\n                setOrderDetails({\n                    ...orderDetail\n                })\n            }\n        } else {\n            setOverwrite(true)\n        }\n    }\n\n    const handleOrderDetailChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete orderDetail[name]\n            setOrderDetails({\n                ...orderDetail\n            })\n            return\n        }\n\n        setOrderDetails({\n            ...orderDetail,\n            [name]: value\n        })\n\n    }\n\n    const handleAddressOverwriteChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete orderDetail.overwrite[name]\n            setOrderDetails({\n                ...orderDetail\n            })\n            return\n        }\n\n        setOrderDetails({\n            ...orderDetail,\n            overwrite: {\n                ...orderDetail.overwrite,\n                [name]: value\n            }\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (isUpdating) {\n            let orderObj = {\n                ...orderDetail,\n                ...(note) && { note: note }\n\n            }\n\n            // console.log(orderObj)\n\n\n            delete orderObj['paymentType']\n            delete orderObj['shouldDeliver']\n\n            setHasChanged(false)\n            updateOrder(orderObj, order.order._id)\n\n        } else {\n            let orderObj = {\n                ...orderDetail,\n                user: order.user._id,\n                combinedProducts: combinedProducts.map(product => product._id),\n                status: hasDeposit ? \"half-paid\" : \"paid\",\n                note: note\n            }\n\n            console.log(\"note\")\n            console.log(note)\n\n            if (orderDetail.couponValue) {\n\n                orderObj = {\n                    ...orderObj,\n                    couponValue: formatPrice(orderDetail.couponValue),\n                    // paidAlready: orderObj.paidAlready + orderDetail.couponValue\n                }\n            }\n            if (orderDetail.paidAlready) {\n                let price = 0\n                if (orderDetail.couponValue) {\n                    price = formatPrice(orderDetail.couponValue) + formatPrice(orderDetail.paidAlready)\n                } else {\n                    price = formatPrice(orderDetail.paidAlready)\n                }\n\n                orderObj = {\n                    ...orderObj,\n                    paidAlready: price\n                }\n            }\n\n            setHasChanged(false)\n            createOrder(orderObj)\n        }\n    }\n\n    useEffect(() => {\n        if (isUpdating) {\n            if (order?.order) {\n                handleOrderDetailChange({\n                    target: {\n                        name: 'shouldDeliver',\n                        value: order?.order?.shouldDeliver\n                    }\n                })\n                handleOrderDetailChange({\n                    target: {\n                        name: 'buyingAsCompany',\n                        value: order?.order?.buyingAsCompany\n                    }\n                })\n            }\n        }\n    }, [isUpdating, order])\n\n    useEffect(() => {\n        return () => {\n            setOrderDetails({\n                paymentType: \"cash\"\n            })\n            setHasDeposit(false)\n            setOverwrite(false)\n        }\n    }, [])\n\n    return (\n        <Modal>\n            <h2>{isUpdating ? \"Upraviť objednávku\" : 'Dokončiť objednávku'}</h2>\n\n            {!isUpdating && <div>\n                <h4>Spôsob platby</h4>\n\n                <CustomSelect\n                    name='paymentType'\n                    value={orderDetail?.paymentType ?? \"cash\"}\n                    onChange={(e) => handleOrderDetailChange(e)}\n                >\n                    <option value={\"cash\"}>Hotovosť</option>\n                    <option value={\"card\"}>Karta</option>\n                </CustomSelect>\n\n                <DiscountCheckboxContainer>\n                    <input id=\"hasCoupon\" name='hasCoupon' type='checkbox' value={hasCoupon} onChange={() => toggleCoupon(hasCoupon)} />\n                    <label htmlFor='hasCoupon'>Pridať kupón</label>\n                </DiscountCheckboxContainer>\n\n                {hasCoupon && (\n                    <CouponValueContainer>\n                        <CustomInput\n                            label=\"Hodnota kupónu\"\n                            name=\"couponValue\"\n                            type='text'\n                            value={orderDetail?.couponValue || \"\"}\n                            onChange={e => handleOrderDetailChange(e)}\n                        />\n                    </CouponValueContainer>\n                )}\n\n                <DiscountCheckboxContainer>\n                    <input id=\"hasDeposit\" name='hasDeposit' type='checkbox' value={hasDeposit} onChange={() => toggleDeposit(hasDeposit)} />\n                    <label htmlFor='hasDeposit'>Pridať zálohu</label>\n                </DiscountCheckboxContainer>\n\n                {hasDeposit && (\n                    <CustomInput\n                        label=\"Zaplatená záloha\"\n                        name=\"paidAlready\"\n                        type='text'\n                        value={orderDetail?.paidAlready ?? \"\"}\n                        onChange={e => handleOrderDetailChange(e)}\n                    />\n                )}\n            </div>\n            }\n            <div>\n                <h4>Informácie o doručení</h4>\n                {!isUpdating && <OptionsCheckbox\n                    label={\"Doručiť na adresu\"}\n                    isActive={orderDetail?.shouldDeliver}\n                    handleClick={() => handleOrderDetailChange({\n                        target: {\n                            name: 'shouldDeliver',\n                            value: orderDetail?.shouldDeliver ? !orderDetail?.shouldDeliver : true\n                        }\n                    })}\n                />}\n                <OptionsCheckbox\n                    label={\"Nákup na firmu\"}\n                    isActive={orderDetail?.buyingAsCompany}\n                    handleClick={() => handleOrderDetailChange({\n                        target: {\n                            name: 'buyingAsCompany',\n                            value: orderDetail?.buyingAsCompany ? !orderDetail?.buyingAsCompany : true\n                        }\n                    })}\n                />\n\n                {orderDetail?.shouldDeliver && (\n                    <div>\n                        <h4>Adresa</h4>\n                        <p>{order.user.psc}</p>\n                        <p>{order.user.address}</p>\n                        <p>{order.user.city}</p>\n                        <p>{order.user.country}</p>\n\n                        <div>\n                            <OverwriteAddressCheckbox>\n                                <input id=\"overwrite\" name='overwrite' type='checkbox' value={overwrite} onChange={() => toggleOverwriteAddress(overwrite)} />\n                                <label htmlFor='overwrite'>Iná adresa</label>\n                            </OverwriteAddressCheckbox>\n\n                            {overwrite && (\n                                <div>\n                                    <CustomInput\n                                        label=\"Adresa\"\n                                        name=\"address\"\n                                        type='text'\n                                        value={orderDetail?.overwrite?.address ?? \"\"}\n                                        onChange={e => handleAddressOverwriteChange(e)}\n                                    />\n                                    <CustomInput\n                                        label=\"PSČ\"\n                                        name=\"psc\"\n                                        type='text'\n                                        value={orderDetail?.overwrite?.psc ?? \"\"}\n                                        onChange={e => handleAddressOverwriteChange(e)}\n                                    />\n                                    <CustomInput\n                                        label=\"Mesto\"\n                                        name=\"city\"\n                                        type='text'\n                                        value={orderDetail?.overwrite?.city ?? \"\"}\n                                        onChange={e => handleAddressOverwriteChange(e)}\n                                    />\n                                    <CustomInput\n                                        label=\"Štát\"\n                                        name=\"country\"\n                                        type='text'\n                                        value={orderDetail?.overwrite?.country ?? \"\"}\n                                        onChange={e => handleAddressOverwriteChange(e)}\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                )}\n            </div>\n\n            {isUpdating && <AddButton onClick={handleSubmit}>Upraviť objednávku</AddButton>}\n            {!isUpdating && <AddButton onClick={handleSubmit}>Vytvoriť objednávku</AddButton>}\n        </Modal>\n    )\n}\n\nexport default FinishOrderModal\n","/app/src/components/modal-order-update-user/modal-order-update-user.component.jsx",["943","944"],"import React, { useContext, useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { UserContext } from '../../context/user/user.context'\n\nimport UserForm from '../user-form/user-form.component'\n\nimport {\n    CloseButton,\n    Modal,\n    ModalContainer,\n    UpdateButton\n} from './modal-order-update-user.styles'\n\nconst OrderUpdateUserModal = ({ close, userId, refetchUser, addUser }) => {\n    const { isAdmin, isOptometrist } = useContext(AuthContext)\n    const {\n        user,\n        isUpdating,\n        handleChange,\n        handleParameterChange,\n        handleCompanyChange,\n        getUser,\n        updateUser\n    } = useContext(UserContext)\n\n    const [userObj, setUserObj] = useState({})\n    // const [hasChanges, setHasChanges] = useState(false)\n\n    const handleUserChange = (e) => {\n        // setHasChanges(true)\n        const { name, value } = e.target\n\n        handleChange(e)\n\n\n        if (value === '') {\n            delete userObj[name]\n            // delete userObj.company[]\n            return\n        }\n\n        setUserObj({\n            ...userObj,\n            [name]: value\n        })\n    }\n\n    const handleLensesParameterChange = (e, idx) => {\n        // setHasChanges(true)\n\n        const { name, value } = e.target\n        let arr = user.lenses[name]\n        arr[idx] = value\n\n\n        handleParameterChange(e, idx)\n        setUserObj({\n            ...userObj,\n            lenses: {\n                ...user.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleCompanyAddressChange = (e) => {\n        // setHasChanges(true)\n\n        const { name, value } = e.target\n        handleCompanyChange(e)\n\n        if (value === '') {\n            delete userObj.company[name]\n            if (Object.keys(userObj.company).length === 0) {\n                delete userObj[\"company\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setUserObj({\n            ...userObj,\n            company: {\n                ...userObj.company,\n                [name]: value\n            }\n        })\n    }\n\n    const handleSubmit = (e, path) => {\n        e.preventDefault()\n        // setHasChanges(false)\n\n        console.log(userObj)\n\n        if (userObj.fName || userObj.lName) {\n            delete userObj[\"fName\"]\n            delete userObj[\"lName\"]\n        } else if (!userObj.fName || !userObj.lName) {\n            delete userObj[\"name\"]\n        }\n\n        let newUserObj = {\n            ...userObj,\n        }\n\n        if (userObj.company) {\n            newUserObj = {\n                ...userObj,\n                company: {\n                    ...user.company,\n                    ...userObj.company\n                }\n            }\n        }\n\n        updateUser(newUserObj, user._id, \"isOrder\", refetchUser, close, addUser)\n    }\n\n    useEffect(() => {\n        setUserObj({\n            ...userObj,\n            name: user.fName + \" \" + user.lName\n        })\n    }, [userObj.fName, userObj.lName])\n\n    useEffect(() => {\n        if (userId) {\n            getUser(userId)\n        }\n    }, [userId])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <UserForm\n                    user={user}\n                    isAdmin={isAdmin}\n                    isUpdating={isUpdating}\n                    isOptometrist={isOptometrist}\n                    handleChange={handleUserChange}\n                    handleParameterChange={handleLensesParameterChange}\n                    handleCompanyChange={handleCompanyAddressChange}\n                    isOrder={true}\n                    isCustomer={true}\n\n                />\n\n                <UpdateButton onClick={handleSubmit}>Uložiť</UpdateButton>\n            </Modal>\n        </ModalContainer >\n    ), document.getElementById('portal'))\n}\n\nexport default OrderUpdateUserModal\n","/app/src/sections/order/steps/2-select-product/select-product.styles.jsx",[],"/app/src/sections/order/steps/1-select-user/select-user.styles.jsx",[],"/app/src/components/custom-checkbox/custom-checkbox.styles.jsx",[],"/app/src/components/modal-update-registry/modal-update-registry.styles.jsx",[],"/app/src/components/custom-textarea/custom-textarea.styles.jsx",[],"/app/src/components/user-form/user.form-styles.jsx",[],"/app/src/components/order-cart-row/order-cart-row.component.jsx",["945","946","947","948","949","950","951"],"import React, { useState, useEffect, useContext } from 'react'\nimport { OrderContext } from '../../context/order/order.context'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    AiOutlineLeft,\n    AiOutlineRight\n} from 'react-icons/ai'\n\nimport {\n    AiFillCaretDown\n} from 'react-icons/ai'\n\nimport { formatPrice } from '../../utils/warehouse.utils'\n\nimport {\n    CartTableRow,\n    TableCol,\n    IconContainer,\n    OptionsContainer,\n    ContactLensesParameterContainer,\n    CustomSelect,\n    EmptyTittle,\n    DiscountCheckbox,\n    DiscountCheckboxContainer,\n    DiscountContainer,\n    QuantityContainer\n} from './order-cart-row.styles'\n\nconst CartRow = ({ item, idx }) => {\n    const { deleteProduct, addProductDiscount, addLensesParameters, incrementProductQuantity, decrementProductQuantity } = useContext(OrderContext)\n\n    const [showRow, setShowRow] = useState(false)\n    const [contactLenses, setContactLenses] = useState({})\n\n    const [discountType, setDiscountType] = useState(item?.discount?.product?.flat === '' ? \"flat\" : \"percent\")\n    const [productDiscount, setProductDiscount] = useState({})\n    const [includeDiscount, setIncludeDiscount] = useState(true)\n\n\n    const handleChangeDiscount = (type) => {\n        // setProductDiscount({})\n        setDiscountType(type)\n        addProductDiscount(idx, type, \"0\")\n\n    }\n    // const handleChangeLensesDiscount = (type) => {\n    //     setLensesDiscount({})\n    //     setLensDiscountType(type)\n    // }\n\n    // const handleDiscountChange = (e) => {\n    //     const { name, value } = e.target\n\n\n    //     if (value === '') {\n    //         delete productDiscount[name]\n\n    //         setProductDiscount({\n    //             ...productDiscount,\n    //         })\n    //         return\n    //     }\n\n    //     setProductDiscount({\n    //         ...productDiscount,\n    //         [name]: value\n    //     })\n    // }\n\n\n    const handleClick = () => {\n        setShowRow(prevValue => !prevValue)\n    }\n\n    const handleContactLensesParameterChange = (e, idx, originalArr) => {\n        const { name, value } = e.target\n        let arr = originalArr\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        setContactLenses({\n            ...contactLenses,\n            [name]: arr\n        })\n    }\n\n    useEffect(() => {\n        addLensesParameters(idx, contactLenses)\n    }, [contactLenses])\n\n    useEffect(() => {\n        if (item.product.type) {\n            if (item.product.type === 3) {\n                setContactLenses({\n                    curve: [item.product.contactLenses.allowedCurves[0], item.product.contactLenses.allowedCurves[0]],\n                    diameter: [item.product.contactLenses.allowedDiameters[0], item.product.contactLenses.allowedDiameters[0]],\n                    diopters: [0, 0]\n                })\n            }\n        }\n    }, [item.product])\n\n    return (\n        <CartTableRow >\n            <TableCol onClick={() => deleteProduct(idx)}>{idx + 1}</TableCol>\n            <TableCol>\n                {item?.product?.name ? item?.product?.name : \"Šošovky\"}\n            </TableCol>\n            <TableCol>\n                {item?.product?.price ? `${(item?.product?.price / 100).toFixed(2)}€` : \"\"}\n            </TableCol>\n            <TableCol>\n                {/* <div>\n                    <input\n                        value={item?.discount?.product ? item?.discount.product.percent : ''}\n                        onChange={(e) => addProductDiscount(idx, e.target.value)}\n                    />\n                </div> */}\n                {(item.product.type === 5 || item.product.type === 6) && <QuantityContainer>\n                    <button onClick={(e) => decrementProductQuantity(item?.productQuant, idx, e)}><AiOutlineLeft /></button>\n                    <p>{item?.productQuant}</p>\n                    <button onClick={(e) => incrementProductQuantity(item?.productQuant, idx, e)}><AiOutlineRight /></button>\n                </QuantityContainer>}\n            </TableCol>\n            <TableCol>\n                <IconContainer onClick={handleClick}>\n                    <AiFillCaretDown />\n                </IconContainer>\n            </TableCol>\n            {showRow && (\n                <OptionsContainer>\n                \n                         <DiscountContainer>\n                            {/* <DiscountCheckboxContainer>\n                                <input id=\"discount\" name='discount' type='checkbox' value={includeDiscount} onChange={() => setIncludeDiscount(!includeDiscount)} />\n                                <label htmlFor='discount'>Pridať zlavu pre produkt</label>\n                            </DiscountCheckboxContainer> */}\n                            {includeDiscount && <div>\n                                <h4>Zlava pre produkt</h4>\n                                <div>\n                                    <DiscountCheckbox\n                                        label={\"Fixná suma\"}\n                                        value={\"flat\"}\n                                        name='flat'\n                                        isActive={discountType === 'flat'}\n                                        handleClick={() => handleChangeDiscount('flat')}\n                                    />\n                                    <DiscountCheckbox\n                                        label={\"Percertá\"}\n                                        value={\"percent\"}\n                                        name='percent'\n                                        isActive={discountType === 'percent'}\n                                        handleClick={() => handleChangeDiscount('percent')}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label='Hodnota'\n                                        value={item?.discount?.product ? item?.discount.product[discountType] : ''}\n                                        onChange={(e) => {\n                                            addProductDiscount(idx, discountType, e.target.value)\n                                        }}\n                                    />\n                                </div>\n                            </div>}\n                        </DiscountContainer>\n                \n                    {/* {(item.product.type === 1 || item.product.type === 2) && (\n                        <div>\n                            <EmptyTittle>Žiadne možnosti</EmptyTittle>\n                        </div>\n                    )} */}\n                    {item.product.type === 3 && (\n                        <ContactLensesParameterContainer>\n                            <div>\n                                <h4>Ľave oko</h4>\n                                <CustomSelect\n                                    name='curve'\n                                    value={contactLenses.curve[0]}\n                                    onChange={(e) => handleContactLensesParameterChange(e, 0, contactLenses.curve)}\n                                >\n                                    {item.product.contactLenses.allowedCurves.map((value, idx) => (\n                                        <option key={idx} value={value}>{value}</option>\n                                    ))}\n                                </CustomSelect>\n                                <CustomSelect\n                                    name='diameter'\n                                    value={contactLenses.diameter[0]}\n                                    onChange={(e) => handleContactLensesParameterChange(e, 0, contactLenses.diameter)}\n                                >\n                                    {item.product.contactLenses.allowedDiameters.map((value, idx) => (\n                                        <option key={idx} value={value}>{value}</option>\n                                    ))}\n                                </CustomSelect>\n\n                                <CustomInput\n                                    name='diopters'\n\n                                    type='number'\n                                    value={contactLenses.diopters[0]}\n                                    min={item.product.contactLenses.dioptersRange[0]}\n                                    max={item.product.contactLenses.dioptersRange[1]}\n                                    step={.25}\n                                    onChange={(e) => handleContactLensesParameterChange(e, 0, contactLenses.diopters)}\n                                />\n                            </div>\n                            <div>\n                                <h4>Pravé oko</h4>\n                                <CustomSelect\n                                    name='curve'\n                                    value={contactLenses.curve[1]}\n                                    onChange={(e) => handleContactLensesParameterChange(e, 1, contactLenses.curve)}\n                                >\n                                    {item.product.contactLenses.allowedCurves.map((value, idx) => (\n                                        <option key={idx} value={value}>{value}</option>\n                                    ))}\n                                </CustomSelect>\n                                <CustomSelect\n                                    name='diameter'\n                                    value={contactLenses.diameter[1]}\n                                    onChange={(e) => handleContactLensesParameterChange(e, 1, contactLenses.diameter)}\n                                >\n                                    {item.product.contactLenses.allowedDiameters.map((value, idx) => (\n                                        <option key={idx} value={value}>{value}</option>\n                                    ))}\n                                </CustomSelect>\n                                <CustomInput\n                                    type='number'\n                                    value={contactLenses.diopters[1]}\n                                    min={item.product.contactLenses.dioptersRange[0]}\n                                    max={item.product.contactLenses.dioptersRange[1]}\n                                    step={.25}\n                                    name='diopters'\n                                    onChange={(e) => handleContactLensesParameterChange(e, 1, contactLenses.diopters)}\n                                />\n                            </div>\n                        </ContactLensesParameterContainer>\n                    )}\n                </OptionsContainer>\n            )}\n        </CartTableRow>\n    )\n}\n\nexport default CartRow\n","/app/src/components/profile-order-overview/profile-order-overview.component.jsx",[],"/app/src/components/examinations-overview/examinations-overview.component.jsx",["952"],"import React, { useState, useEffect, useContext } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { useFetchById } from \"../../hooks/useFetch\"\nimport { ExaminationContext } from \"../../context/examination/examination.context\"\n\nimport ExaminationUser from \"../examination-user/examination-user.component\"\nimport OptometristExaminationModal from \"../modal-optometrist-examination/modal-optometrist-examination.component\"\n\n// import {\n//     checkParameterValue\n// } from '../../utils/parameters.utils'\n\nimport {\n\tExaminationsOverviewContainer,\n\tHeader,\n\tExaminationContainer,\n\tExamHead,\n\t// ExamTableContainer,\n\t// HeadTableCol,\n\t// TableCol,\n\tExaminationOptions,\n\tAddButton,\n\tUpdateButton,\n\tDeleteButton,\n\tPdfButton,\n} from \"./examinations-overview.styles\"\n\nconst ExaminationsOverview = () => {\n\tconst params = useParams()\n\tconst examinationData = useFetchById(\"api/admin/exams/user\", params.id)\n\tconst { deleteExamination, getPDF } = useContext(ExaminationContext)\n\tconst [showOptometristModal, setShowOptometristModal] = useState(false)\n\tconst [examinations, setExaminations] = useState([])\n\tconst [examinationToUpdate, setExaminationToUpdate] = useState(null)\n\n\tconst [isDisabled, setIsDisabled] = useState(false)\n\n\tconsole.log(\"params\")\n\tconsole.log(params)\n\n\tconst handleUpdateClick = (e, id) => {\n\t\te.preventDefault()\n\t\tsetExaminationToUpdate(id)\n\t\tsetShowOptometristModal(true)\n\t}\n\n\tconst handleDelete = (e, id) => {\n\t\te.preventDefault()\n\t\tif (isDisabled) {\n\t\t\treturn\n\t\t}\n\t\tsetIsDisabled(true)\n\t\tdeleteExamination(id)\n\n\t\tsetTimeout(() => {\n\t\t\texaminationData.refetch()\n\t\t\tsetIsDisabled(false)\n\t\t}, 100)\n\t}\n\n\tconst handleCloseModal = () => {\n\t\tsetShowOptometristModal(false)\n\t\tsetExaminationToUpdate(null)\n\t}\n\n\tconst handleGetPDF = (e, examId) => {\n\t\te.preventDefault()\n\n\t\tgetPDF(examId)\n\t}\n\n\tuseEffect(() => {\n\t\tif (!examinationData.isLoading) {\n\t\t\tif (examinationData.response) {\n\t\t\t\tsetExaminations(examinationData.response.exams)\n\t\t\t}\n\t\t}\n\t}, [examinationData.isLoading])\n\n\treturn (\n\t\t<ExaminationsOverviewContainer>\n\t\t\t{showOptometristModal && (\n\t\t\t\t<OptometristExaminationModal\n\t\t\t\t\tuserId={params.id}\n\t\t\t\t\texaminationToUpdate={examinationToUpdate}\n\t\t\t\t\trefetch={examinationData.refetch}\n\t\t\t\t\tclose={handleCloseModal}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Header>\n\t\t\t\t<h2>Vyšetrenia</h2>\n\t\t\t\t<div>\n\t\t\t\t\t<AddButton\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonClick={() => setShowOptometristModal(true)}\n\t\t\t\t\t>\n\t\t\t\t\t\tPridať prehliadku\n\t\t\t\t\t</AddButton>\n\t\t\t\t</div>\n\t\t\t</Header>\n\n\t\t\t<div>\n\t\t\t\t{examinations &&\n\t\t\t\t\texaminations.map((examination, idx) => (\n\t\t\t\t\t\t<ExaminationContainer key={idx}>\n\t\t\t\t\t\t\t<ExamHead>\n\t\t\t\t\t\t\t\t<h3>Dátum:</h3>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{new Date(examination?.date).toLocaleDateString(\"sk-SK\", {\n\t\t\t\t\t\t\t\t\t\tweekday: \"long\",\n\t\t\t\t\t\t\t\t\t\tmonth: \"long\",\n\t\t\t\t\t\t\t\t\t\tday: \"numeric\",\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</ExamHead>\n\t\t\t\t\t\t\t<ExamHead>\n\t\t\t\t\t\t\t\t<h3>Typ vyšetrenia:</h3>\n\t\t\t\t\t\t\t\t<p>{examTypes[examination?.type - 1].name}</p>\n\t\t\t\t\t\t\t</ExamHead>\n\n\t\t\t\t\t\t\t<ExaminationOptions>\n\t\t\t\t\t\t\t\t<ExaminationUser userId={examination.doneBy} />\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<PdfButton onClick={(e) => handleGetPDF(e, examination._id)}>\n\t\t\t\t\t\t\t\t\t\tPDF\n\t\t\t\t\t\t\t\t\t</PdfButton>\n\t\t\t\t\t\t\t\t\t<UpdateButton\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleUpdateClick(e, examination._id)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tUpraviť\n\t\t\t\t\t\t\t\t\t</UpdateButton>\n\n\t\t\t\t\t\t\t\t\t<DeleteButton\n\t\t\t\t\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleDelete(e, examination._id)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{isDisabled ? \"Mažem...\" : \"Vymazať\"}\n\t\t\t\t\t\t\t\t\t</DeleteButton>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ExaminationOptions>\n\t\t\t\t\t\t</ExaminationContainer>\n\t\t\t\t\t))}\n\t\t\t</div>\n\t\t</ExaminationsOverviewContainer>\n\t)\n}\n\nexport default ExaminationsOverview\n\nconst examTypes = [\n\t{\n\t\tname: \"Refrakcia\",\n\t\tvalue: 1,\n\t},\n\t{\n\t\tname: \"Apl. KŠ\",\n\t\tvalue: 2,\n\t},\n\t{\n\t\tname: \"Kontrola\",\n\t\tvalue: 3,\n\t},\n]\n","/app/src/hooks/useOutsideAlerter.jsx",["953"],"import React, { useRef, useEffect } from \"react\";\n\nexport const useOutsideHandler = (ref, action) => {\n    useEffect(() => {\n        const handleClickOutside = e => {\n            if (ref.current && !ref.current.contains(e.target)) {\n                action()\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n\n    }, [ref])\n}\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(ref) {\n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                alert(\"You clicked outside of me!\");\n            }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [ref]);\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nfunction OutsideAlerter(props) {\n    const wrapperRef = useRef(null);\n    useOutsideAlerter(wrapperRef);\n\n    return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport default OutsideAlerter;\n","/app/src/components/order-deligate-modal/order-deligate-modal.component.jsx",["954"],"import React, { useState, useContext } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport ReactDOM from 'react-dom'\n\nimport Popup from '../popup/pop-up.component'\n\nimport { retailNames } from '../../utils/warehouse.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    CustomSelect,\n    SubmitButton\n} from './order-deligate-modal.styles'\n\n\nconst OrderDeligateModal = ({ close, premise, id, refetch }) => {\n    const [value, setValue] = useState(premise)\n    const { token } = useContext(AuthContext)\n    const {\n        getMessage,\n        message,\n        isLoading,\n        setIsLoading,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const handleClick = async () => {\n        setIsLoading(true)\n        const myHeaders = new Headers();\n        myHeaders.append(\"auth-token\", token);\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const raw = JSON.stringify({\n            premises: Number(value),\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders/${id}/delegate`, requestOptions)\n            // if (response.status === 400) {\n            //     getMessage(\"Faktúra musí byt zaplatená, aby mohla byť priradená prevádzke\")\n            // }\n            // if (response.status === 401) {\n            //     getMessage(\"Musíš byt vedúci, aby si mohol manipulovať s priradovanim\")\n            // }\n            const data = await response.json()\n\n            if (data.order) {\n                refetch()\n                setIsLoading(false)\n                close()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            setIsLoading(false)\n        }\n    }\n\n    if (isLoading || message) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Priradiť k prevádzke</h3>\n                <CustomSelect value={value} onChange={(e) => setValue(e.target.value)}>\n                    <option value={0}>Nezadané</option>\n                    {retailNames.map((name, idx) => {\n                        if (idx === 0) return\n                        return (\n                            <option key={idx} value={idx}>{name}</option>\n                        )\n                    })}\n                </CustomSelect>\n                <SubmitButton onClick={handleClick}>Priradiť</SubmitButton>\n            </Modal>\n        </ModalContainer >\n    ), document.getElementById('portal'))\n}\n\nexport default OrderDeligateModal\n","/app/src/components/modal-finish-deposited-order/modal-finish-deposited-order.component.jsx",["955","956","957"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport ReactDOM from 'react-dom'\n\nimport { translatePaymentMethod } from '../../utils/orders.utils'\nimport {\n    formatPrice\n} from '../../utils/warehouse.utils'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SubmitButton,\n    CustomSelect,\n    GridContainer,\n    CouponValueContainer,\n    DiscountCheckboxContainer,\n\n} from './modal-finish-deposited-order.styles'\n\n\nconst FinishDepositedOrderModal = ({ close, id, refetch, order }) => {\n    const [isDisabled, setIsDisabled] = useState(false)\n    const { token } = useContext(AuthContext)\n    const {\n        getMessage,\n        // message,\n        // isLoading,\n        setIsLoading,\n        // closeModal\n    } = useContext(LoadingModalContext)\n\n\n\n    const [value, setValue] = useState(\"\")\n    const [hasCoupon, setHasCoupon] = useState(false)\n    const [couponValue, setCouponValue] = useState('')\n\n\n    const handleClick = async () => {\n        if (isDisabled) {\n            return;\n        }\n        setIsDisabled(true);\n        setIsLoading(true)\n        const myHeaders = new Headers();\n        myHeaders.append(\"auth-token\", token);\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const raw = JSON.stringify({\n            paymentType: value === 'coupon' ? \"cash\" : value,\n            ...(value === 'coupon') && { couponValue: formatPrice(couponValue) }\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders/${id}/fulfill`, requestOptions)\n\n            const data = await response.json()\n\n            if (data.order) {\n                refetch()\n                setIsLoading(false)\n                close()\n                return\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            setIsLoading(false)\n        }\n    }\n\n    const toggleCoupon = prevValue => {\n        if (prevValue) {\n            setHasCoupon(false)\n            // if (orderDetail.couponValue) {\n            //     delete orderDetail[\"couponValue\"]\n            //     setOrderDetails({\n            //         ...orderDetail\n            //     })\n            // }\n        } else {\n            setHasCoupon(true)\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            setHasCoupon(false)\n            setCouponValue('')\n            setValue('')\n        }\n    }, [])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>Spôsob úhrady</h2>\n                <GridContainer>\n                    <div>\n                        <h3>Dohromady</h3>\n                        <p>{(order?.discountedValue / 100).toFixed(2)}€</p>\n                        {/* <span>{translatePaymentMethod(order?.advancePaymentType)}</span> */}\n                    </div>\n                    <div>\n                        <h3>Záloha</h3>\n                        <p>{((order?.paidAlready - order?.couponValue1) / 100).toFixed(2)}€</p>\n                        <span>{translatePaymentMethod(order?.advancePaymentType)}</span>\n                    </div>\n                    <div>\n                        <h3>Kupón</h3>\n                        <p>{(order?.couponValue1 / 100).toFixed(2)}€</p>\n                    </div>\n                    <div>\n                        <h3>Doplatiť</h3>\n                        <p>{((order?.discountedValue - order?.paidAlready) / 100).toFixed(2)}€</p>\n                        {/* <span>{translatePaymentMethod(order?.advancePaymentType)}</span> */}\n                    </div>\n                </GridContainer>\n\n                <CustomSelect value={value} onChange={(e) => setValue(e.target.value)}>\n                    <option value={''}>Neuvedené</option>\n                    <option value={'card'}>Karta</option>\n                    <option value={'cash'}>Hotovosť</option>\n                    <option value={'coupon'}>Kupon</option>\n                </CustomSelect>\n\n                {/* <DiscountCheckboxContainer>\n                    <input id=\"hasCoupon\" name='hasCoupon' type='checkbox' value={hasCoupon} onChange={() => toggleCoupon(hasCoupon)} />\n                    <label htmlFor='hasCoupon'>Pridať kupón</label>\n                </DiscountCheckboxContainer> */}\n\n                {value === 'coupon' && (\n                    <CouponValueContainer>\n                        <CustomInput\n                            label=\"Hodnota kupónu\"\n                            name=\"couponValue\"\n                            type='text'\n                            value={couponValue}\n                            onChange={e => setCouponValue(e.target.value)}\n                        />\n                    </CouponValueContainer>\n                )}\n                <SubmitButton disabled={isDisabled} onClick={handleClick}>\n                    {isDisabled ? 'Platím...' : 'Zaplatiť'}\n                </SubmitButton>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default FinishDepositedOrderModal\n","/app/src/components/parameters-table/parameters-table.styles.jsx",[],"/app/src/components/calendar-booked-day/calendar-booked-day.styles.jsx",[],"/app/src/components/modal-booking/modal-booking.styles.jsx",[],"/app/src/components/modal-userbookings-details/modal-userbookings-details.styles.jsx",[],"/app/src/components/modal-user-bookings/modal-user-booking.styles.jsx",[],"/app/src/components/custom-form-switch/custom-form-switch.styles.jsx",[],"/app/src/components/custom-back-button/custom-back-button.styles.jsx",[],"/app/src/components/modal-finish-order/modal-finish-order.styles.jsx",[],"/app/src/components/order-cart-lenses-row/order-cart-lenses-row.styles.jsx",[],"/app/src/components/modal-order-update-user/modal-order-update-user.styles.jsx",[],"/app/src/components/order-cart-row/order-cart-row.styles.jsx",[],"/app/src/components/profile-order-overview/profile-order-overview.styles.jsx",[],"/app/src/components/examinations-overview/examinations-overview.styles.jsx",[],"/app/src/components/examination-user/examination-user.component.jsx",[],"/app/src/components/modal-optometrist-examination/modal-optometrist-examination.component.jsx",["958","959"],"import React, { useState, useEffect } from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport lodash from \"lodash\"\nimport examSchema from \"../../context/examination/exam.json\"\nimport { removeEmpty } from \"../../utils/object.utils\"\n\nimport { useExaminationContext } from \"../../context/examination/examination.context\"\nimport { useFetchById } from \"../../hooks/useFetch\"\nimport CustomInput from \"../custom-input/custom-input.component\"\nimport CustomTextarea from \"../custom-textarea/custom-textarea.component\"\n\nimport { useUserContext } from \"../../context/user/user.context\"\n\nimport {\n\tcheckParameter,\n\tcheckParameterValue,\n} from \"../../utils/parameters.utils\"\n\nimport {\n\tCloseButton,\n\tModal,\n\tModalContainer,\n\tSubmitButton,\n\tContainer,\n\tExamTypeCheckbox,\n\tTwoColContainer,\n\tInputContainer,\n\tIsSuitableCheckbox,\n\tCol,\n\tTable,\n\tTableTitleCol,\n\tTableCol,\n\t// TableBlock,\n\tObjectiveRefTable,\n\tSubjectiveRefTable,\n\tExamTable,\n\tRefractTable,\n\tKerathTable,\n\tSubjectiveRefATable,\n\tContactLensesTable,\n\tContactLensesTypeTable,\n} from \"./modal-optometrist-examination.styles\"\n\nconst OptometristExaminationModal = ({\n\tclose,\n\trefetch,\n\tuserId,\n\texaminationToUpdate,\n}) => {\n\tconst { saveUserExamination, getUserExamination } = useUserContext()\n\n\tconst exam = useFetchById(\n\t\t\"api/admin/exams\",\n\t\texaminationToUpdate,\n\t\t!examinationToUpdate\n\t)\n\tconst isUpdating = examinationToUpdate ? true : false\n\n\tconst { createExamination, updateExamination } = useExaminationContext()\n\n\tconst [examObj, setExamObj] = useState(null)\n\n\tconst handleClose = () => {\n\t\tif (!isUpdating) saveUserExamination(examObj, userId)\n\t\tclose()\n\t}\n\n\tconst handleChange = (e) => {\n\t\tconst { value, name } = e.target\n\n\t\tif (value === \"\") {\n\t\t\tconst obj = lodash.set(examObj, name, \"1001\")\n\t\t\tsetExamObj({\n\t\t\t\t...obj,\n\t\t\t})\n\t\t} else {\n\t\t\tconst obj = lodash.set(examObj, name, value)\n\t\t\tsetExamObj({\n\t\t\t\t...obj,\n\t\t\t})\n\t\t}\n\t}\n\n\tconst handleSubmit = () => {\n\t\tconst formatedObj = {\n\t\t\t...removeEmpty(examObj),\n\t\t\tdoneTo: userId,\n\t\t\trefrakcia: {\n\t\t\t\t...removeEmpty(examObj.refrakcia),\n\t\t\t},\n\t\t\tanamneza: {\n\t\t\t\t...removeEmpty(examObj.anamneza),\n\t\t\t},\n\t\t\tkontrola: {\n\t\t\t\t...removeEmpty(examObj.kontrola),\n\t\t\t},\n\t\t}\n\n\t\tif (examObj.type === 1) {\n\t\t\tdelete formatedObj[\"anamneza\"]\n\t\t\tdelete formatedObj[\"kontrola\"]\n\t\t}\n\t\tif (examObj.type === 2) {\n\t\t\tdelete formatedObj[\"refrakcia\"]\n\t\t\tdelete formatedObj[\"kontrola\"]\n\t\t}\n\t\tif (examObj.type === 3) {\n\t\t\tdelete formatedObj[\"refrakcia\"]\n\t\t\tdelete formatedObj[\"anamneza\"]\n\t\t}\n\n\t\tif (isUpdating) {\n\t\t\tdelete formatedObj[\"date\"]\n\t\t\tdelete formatedObj[\"doneTo\"]\n\t\t\tdelete formatedObj[\"doneBy\"]\n\t\t\tdelete formatedObj[\"__v\"]\n\t\t\tdelete formatedObj[\"_id\"]\n\n\t\t\tupdateExamination(formatedObj, examinationToUpdate, () => {\n\t\t\t\trefetch()\n\t\t\t\tclose()\n\t\t\t})\n\t\t} else {\n\t\t\tcreateExamination(formatedObj, () => {\n\t\t\t\trefetch()\n\t\t\t\tclose()\n\t\t\t})\n\n\t\t\tlocalStorage.removeItem(userId)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t// if(!examObj) return\n\t\tif (!examinationToUpdate) return\n\t\tif (exam.isLoading) return\n\t\tif (!exam.response) return\n\t\tsetExamObj((prevValue) => ({\n\t\t\t...prevValue,\n\t\t\t...exam.response.exam,\n\t\t\trefrakcia: {\n\t\t\t\t...prevValue.refrakcia,\n\t\t\t\t...exam.response.exam.refrakcia,\n\t\t\t},\n\t\t\tanamneza: {\n\t\t\t\t...prevValue.anamneza,\n\t\t\t\t...exam.response.exam.anamneza,\n\t\t\t},\n\t\t\tkontrola: {\n\t\t\t\t...prevValue.kontrola,\n\t\t\t\t...exam.response.exam.kontrola,\n\t\t\t},\n\t\t}))\n\t}, [exam.isLoading])\n\n\tuseEffect(() => {\n\t\t// if(examinationToUpdate) return\n\t\tif (!examSchema) return\n\t\tsetExamObj({\n\t\t\tdate: \"\",\n\t\t\tdoneBy: \"\",\n\t\t\tdoneTo: \"\",\n\t\t\ttype: 1,\n\t\t\trefrakcia: {\n\t\t\t\tnosi_od: \"\",\n\t\t\t\tposledna_korekcia: \"\",\n\t\t\t\tvyhovuje: false,\n\t\t\t\ttyp_sposob: \"\",\n\t\t\t\tanamneza: \"\",\n\t\t\t\tdopl_info: \"\",\n\t\t\t\tvlastne_okuliare: {\n\t\t\t\t\tvnatur: [\"1001\", \"1001\"],\n\t\t\t\t\tsph: [\"1001\", \"1001\"],\n\t\t\t\t\tcyl: [\"1001\", \"1001\"],\n\t\t\t\t\tax: [\"1001\", \"1001\"],\n\t\t\t\t\tadd: [\"1001\", \"1001\"],\n\t\t\t\t\tvisus: [\"1001\", \"1001\"],\n\t\t\t\t\tvbino: \"1001\",\n\t\t\t\t},\n\t\t\t\tobjektivna_refrakcia: {\n\t\t\t\t\tsph: [\"1001\", \"1001\"],\n\t\t\t\t\tcyl: [\"1001\", \"1001\"],\n\t\t\t\t\tax: [\"1001\", \"1001\"],\n\t\t\t\t\tse: [\"1001\", \"1001\"],\n\t\t\t\t\tpd: [\"1001\", \"1001\"],\n\t\t\t\t},\n\t\t\t\tsubjektivna_refrakcia: {\n\t\t\t\t\tsph: [\"1001\", \"1001\"],\n\t\t\t\t\tcyl: [\"1001\", \"1001\"],\n\t\t\t\t\tax: [\"1001\", \"1001\"],\n\t\t\t\t\tadd: [\"1001\", \"1001\"],\n\t\t\t\t\tvisus: [\"1001\", \"1001\"],\n\t\t\t\t\tvbino: \"1001\",\n\t\t\t\t\tvbl: \"1001\",\n\t\t\t\t\tprizma: [\"1001\", \"1001\"],\n\t\t\t\t\tbasis: [\"1001\", \"1001\"],\n\t\t\t\t\tos: [\"1001\", \"1001\"],\n\t\t\t\t\tdomoko: \"0\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tanamneza: {\n\t\t\t\tnosi_od: \"\",\n\t\t\t\tposledna_korekcia: \"\",\n\t\t\t\tvyhovuje: false,\n\t\t\t\ttyp_sposob: \"\",\n\t\t\t\tstav_a_povolanie: \"\",\n\t\t\t\tdopl_info: \"\",\n\t\t\t\tobj_nalez: \"\",\n\t\t\t\tvlastne_okuliare: {\n\t\t\t\t\tvnatur: [\"1001\", \"1001\"],\n\t\t\t\t\tsph: [\"1001\", \"1001\"],\n\t\t\t\t\tcyl: [\"1001\", \"1001\"],\n\t\t\t\t\tax: [\"1001\", \"1001\"],\n\t\t\t\t\tadd: [\"1001\", \"1001\"],\n\t\t\t\t\tvisus: [\"1001\", \"1001\"],\n\t\t\t\t\tvbino: \"1001\",\n\t\t\t\t},\n\t\t\t\trefraktometer: {\n\t\t\t\t\tsph: [\"1001\", \"1001\"],\n\t\t\t\t\tcyl: [\"1001\", \"1001\"],\n\t\t\t\t\tax: [\"1001\", \"1001\"],\n\t\t\t\t\tse: [\"1001\", \"1001\"],\n\t\t\t\t\tpd: [\"1001\", \"1001\"],\n\t\t\t\t},\n\t\t\t\tkeratometer: {\n\t\t\t\t\thor: [\"1001\", \"1001\"],\n\t\t\t\t\tver: [\"1001\", \"1001\"],\n\t\t\t\t\tave: [\"1001\", \"1001\"],\n\t\t\t\t},\n\t\t\t\tsubjektivna_refrakcia: {\n\t\t\t\t\tsph: [\"1001\", \"1001\"],\n\t\t\t\t\tcyl: [\"1001\", \"1001\"],\n\t\t\t\t\tax: [\"1001\", \"1001\"],\n\t\t\t\t\tadd: [\"1001\", \"1001\"],\n\t\t\t\t\tvisus: [\"1001\", \"1001\"],\n\t\t\t\t\tbino: \"1001\",\n\t\t\t\t\tdomoko: \"1001\",\n\t\t\t\t},\n\t\t\t\tkontaktne_sosovky: {\n\t\t\t\t\tsph: [\"1001\", \"1001\"],\n\t\t\t\t\tcyl: [\"1001\", \"1001\"],\n\t\t\t\t\tax: [\"1001\", \"1001\"],\n\t\t\t\t\tadd: [\"1001\", \"1001\"],\n\t\t\t\t\tvisd: [\"1001\", \"1001\"],\n\t\t\t\t\tbino1: [\"1001\", \"1001\"],\n\t\t\t\t\tvisb: [\"1001\", \"1001\"],\n\t\t\t\t\tbino2: [\"1001\", \"1001\"],\n\t\t\t\t},\n\t\t\t\ttyp_kontaktnych_sosoviek: {\n\t\t\t\t\tprvy: [\"1001\", \"1001\"],\n\t\t\t\t\tdruhy: [\"1001\", \"1001\"],\n\t\t\t\t\tlkontrola: \"1001\",\n\t\t\t\t\tdop_roztok: \"1001\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tkontrola: {\n\t\t\t\ttyp_kontaktnych_sosoviek: {\n\t\t\t\t\tprvy: [\"1001\", \"1001\"],\n\t\t\t\t\tdruhy: [\"1001\", \"1001\"],\n\t\t\t\t\tlkontrola: \"1001\",\n\t\t\t\t\tdop_roztok: \"1001\",\n\t\t\t\t},\n\t\t\t\ttabulka: {\n\t\t\t\t\tsph: [\"1001\", \"1001\"],\n\t\t\t\t\tcyl: [\"1001\", \"1001\"],\n\t\t\t\t\tax: [\"1001\", \"1001\"],\n\t\t\t\t\tadd: [\"1001\", \"1001\"],\n\t\t\t\t\tvis: [\"1001\", \"1001\"],\n\t\t\t\t\tvbino: \"1001\",\n\t\t\t\t},\n\t\t\t\tnosi: \"\",\n\t\t\t\tsubj: \"\",\n\t\t\t\tobj: \"\",\n\t\t\t},\n\t\t\tdoporucenia: \"\",\n\t\t\tvodic: false,\n\t\t\tpc: false,\n\t\t})\n\t}, [examSchema])\n\n\tuseEffect(() => {\n\t\tif (isUpdating) return\n\n\t\tconst obj = getUserExamination(userId)\n\t\tif (!obj) return\n\t\tsetExamObj(obj)\n\t}, [userId, getUserExamination, isUpdating])\n\n\tuseEffect(() => {\n\t\treturn () => {}\n\t}, [])\n\n\tif (!examObj)\n\t\treturn (\n\t\t\t<ModalContainer>\n\t\t\t\t<Modal>\n\t\t\t\t\t<p>Loading...</p>\n\t\t\t\t</Modal>\n\t\t\t</ModalContainer>\n\t\t)\n\n\treturn ReactDOM.createPortal(\n\t\t<ModalContainer>\n\t\t\t<CloseButton onClick={handleClose} />\n\t\t\t<Modal>\n\t\t\t\t<h3>Vyšetrenie</h3>\n\t\t\t\t{!examinationToUpdate && (\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<h4>Typ prehliadky</h4>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{examTypes.map((type, idx) => (\n\t\t\t\t\t\t\t\t<ExamTypeCheckbox\n\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\tlabel={type.name}\n\t\t\t\t\t\t\t\t\tisActive={examObj.type === type.value}\n\t\t\t\t\t\t\t\t\thandleClick={() =>\n\t\t\t\t\t\t\t\t\t\thandleChange({\n\t\t\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"type\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: type.value,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Container>\n\t\t\t\t)}\n\n\t\t\t\t{examObj.type === 1 && (\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<h4>Refrakcia</h4>\n\t\t\t\t\t\t<TwoColContainer>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h5>Nosi od:</h5>\n\t\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\t\tlabel={\"\"}\n\t\t\t\t\t\t\t\t\tvalue={examObj.refrakcia.nosi_od}\n\t\t\t\t\t\t\t\t\t// type=\"date\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"refrakcia.nosi_od\"\n\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h5>Posledná korekcia:</h5>\n\t\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\t\tlabel={\"\"}\n\t\t\t\t\t\t\t\t\tvalue={examObj.refrakcia.posledna_korekcia}\n\t\t\t\t\t\t\t\t\t// type=\"date\"\n\t\t\t\t\t\t\t\t\ttype=\"month\"\n\t\t\t\t\t\t\t\t\tname=\"refrakcia.posledna_korekcia\"\n\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</TwoColContainer>\n\t\t\t\t\t\t<TwoColContainer>\n\t\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\t\tlabel={\"KŠ typ, spôsob nosenia\"}\n\t\t\t\t\t\t\t\t\tvalue={examObj.refrakcia.typ_sposob}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"refrakcia.typ_sposob\"\n\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InputContainer>\n\t\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t\t<IsSuitableCheckbox\n\t\t\t\t\t\t\t\t\tlabel={\"Vyhovuje\"}\n\t\t\t\t\t\t\t\t\tisActive={examObj?.refrakcia.vyhovuje}\n\t\t\t\t\t\t\t\t\thandleClick={() =>\n\t\t\t\t\t\t\t\t\t\thandleChange({\n\t\t\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"refrakcia.vyhovuje\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: examObj?.vyhovuje ? !examObj.vyhovuje : true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InputContainer>\n\t\t\t\t\t\t</TwoColContainer>\n\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t<CustomTextarea\n\t\t\t\t\t\t\t\tlabel=\"Anamnéza\"\n\t\t\t\t\t\t\t\tname=\"refrakcia.anamneza\"\n\t\t\t\t\t\t\t\tvalue={examObj?.refrakcia.anamneza}\n\t\t\t\t\t\t\t\trows=\"5\"\n\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InputContainer>\n\n\t\t\t\t\t\t<div className=\"checkboxes\">\n\t\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t\t<IsSuitableCheckbox\n\t\t\t\t\t\t\t\t\tlabel={\"Šofer\"}\n\t\t\t\t\t\t\t\t\tisActive={examObj.vodic}\n\t\t\t\t\t\t\t\t\thandleClick={() =>\n\t\t\t\t\t\t\t\t\t\thandleChange({\n\t\t\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"vodic\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: examObj.vodic ? false : true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InputContainer>\n\t\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t\t<IsSuitableCheckbox\n\t\t\t\t\t\t\t\t\tlabel={\"PC\"}\n\t\t\t\t\t\t\t\t\tisActive={examObj.pc}\n\t\t\t\t\t\t\t\t\thandleClick={() =>\n\t\t\t\t\t\t\t\t\t\thandleChange({\n\t\t\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"pc\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: examObj.pc ? false : true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InputContainer>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t<CustomTextarea\n\t\t\t\t\t\t\t\tlabel=\"Doplňujúce informácie\"\n\t\t\t\t\t\t\t\tname=\"refrakcia.dopl_info\"\n\t\t\t\t\t\t\t\tvalue={examObj?.refrakcia.dopl_info || \"\"}\n\t\t\t\t\t\t\t\trows=\"3\"\n\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InputContainer>\n\n\t\t\t\t\t\t<h4>Vlastné okuliare</h4>\n\n\t\t\t\t\t\t<Table>\n\t\t\t\t\t\t\t<TableTitleCol>\n\t\t\t\t\t\t\t\t<Col>{\"-\"}</Col>\n\t\t\t\t\t\t\t\t<Col>P.</Col>\n\t\t\t\t\t\t\t\t<Col>L.</Col>\n\t\t\t\t\t\t\t</TableTitleCol>\n\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>V.NATUR</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.vlastne_okuliare.vnatur[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.vlastne_okuliare.vnatur,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, vlastne_okuliare?.vnatur, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>SPH</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.vlastne_okuliare.sph[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.vlastne_okuliare?.sph,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, vlastne_okuliare?.sph, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>CYL</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.vlastne_okuliare.cyl[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.vlastne_okuliare?.cyl,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, vlastne_okuliare?.cyl, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>AX</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.vlastne_okuliare.ax[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.vlastne_okuliare?.ax,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, vlastne_okuliare?.ax, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>ADICIA</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.vlastne_okuliare.add[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.vlastne_okuliare?.add,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, vlastne_okuliare?.add, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>V.ISUS</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.vlastne_okuliare.visus[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.vlastne_okuliare?.visus,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, vlastne_okuliare?.visus, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>V.BINO</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tname=\"refrakcia.vlastne_okuliare.vbino\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={checkParameterValue(\n\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.vlastne_okuliare?.vbino\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t// onChange={e => setVlastne_okuliare(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: e.target.value\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, vlastne_okuliare?.vbino, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => setVlastne_okuliare(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: Number(e.target.value)\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t</Table>\n\n\t\t\t\t\t\t<h4>Objektivná refrakcia</h4>\n\n\t\t\t\t\t\t<ObjectiveRefTable>\n\t\t\t\t\t\t\t<TableTitleCol>\n\t\t\t\t\t\t\t\t<Col>{\"-\"}</Col>\n\t\t\t\t\t\t\t\t<Col>P.</Col>\n\t\t\t\t\t\t\t\t<Col>L.</Col>\n\t\t\t\t\t\t\t</TableTitleCol>\n\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>SPH</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.objektivna_refrakcia.sph[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.objektivna_refrakcia.sph,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, objektivna_refrakcia, setObjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, objektivna_refrakcia?.sph, objektivna_refrakcia, setObjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>CYL</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.objektivna_refrakcia.cyl[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.objektivna_refrakcia?.cyl,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, objektivna_refrakcia, setObjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, objektivna_refrakcia?.cyl, objektivna_refrakcia, setObjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>AX</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.objektivna_refrakcia.ax[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.objektivna_refrakcia?.ax,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, objektivna_refrakcia, setObjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, objektivna_refrakcia?.ax, objektivna_refrakcia, setObjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>SE</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.objektivna_refrakcia.se[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.objektivna_refrakcia?.se,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, objektivna_refrakcia, setObjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, objektivna_refrakcia?.se, objektivna_refrakcia, setObjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>PD</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.objektivna_refrakcia.pd[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.objektivna_refrakcia?.pd,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, objektivna_refrakcia, setObjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, objektivna_refrakcia?.se, objektivna_refrakcia, setObjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t</ObjectiveRefTable>\n\n\t\t\t\t\t\t<h4>Subjektivná refrakcia</h4>\n\n\t\t\t\t\t\t<SubjectiveRefTable>\n\t\t\t\t\t\t\t<TableTitleCol>\n\t\t\t\t\t\t\t\t<Col>{\"-\"}</Col>\n\t\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\t\tisActive={\n\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.subjektivna_refrakcia?.domoko === \"1\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tclickable\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\thandleChange({\n\t\t\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"refrakcia.subjektivna_refrakcia.domoko\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue:\n\t\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.subjektivna_refrakcia?.domoko ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"1\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tP.\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\t\tisActive={\n\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.subjektivna_refrakcia?.domoko === \"2\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tclickable\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\thandleChange({\n\t\t\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"refrakcia.subjektivna_refrakcia.domoko\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue:\n\t\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.subjektivna_refrakcia?.domoko ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"2\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tL.\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</TableTitleCol>\n\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>SPH</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.subjektivna_refrakcia.sph[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.subjektivna_refrakcia?.sph,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.sph, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>CYL</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.subjektivna_refrakcia.cyl[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.subjektivna_refrakcia?.cyl,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.cyl, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>AX</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.subjektivna_refrakcia.ax[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.subjektivna_refrakcia?.ax,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.ax, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>ADICIA</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.subjektivna_refrakcia.add[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.subjektivna_refrakcia?.add,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.add, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>V.ISUS</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.subjektivna_refrakcia.visus[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.subjektivna_refrakcia?.visus,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.visus, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>V.BINO</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tname=\"refrakcia.subjektivna_refrakcia.vbino\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={checkParameterValue(\n\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.subjektivna_refrakcia?.vbino\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t// onChange={e => setSubjektivna_refrakcia(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: e.target.value\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.vbino, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\n\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => setSubjektivna_refrakcia(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: Number(e.target.value)\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>PRIZMA</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.subjektivna_refrakcia.prizma[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.subjektivna_refrakcia?.prizma,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.prizma, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>BÁZA</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.subjektivna_refrakcia.basis[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.subjektivna_refrakcia?.basis,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.basis, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>OS</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`refrakcia.subjektivna_refrakcia.os[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.subjektivna_refrakcia?.os,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.os, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>V.BL</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tname={`refrakcia.subjektivna_refrakcia.vbl`}\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={checkParameterValue(\n\t\t\t\t\t\t\t\t\t\t\texamObj.refrakcia.subjektivna_refrakcia?.vbl\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t// onChange={e => setSubjektivna_refrakcia(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: e.target.value\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.vbino, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n\n\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => setSubjektivna_refrakcia(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: Number(e.target.value)\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t</SubjectiveRefTable>\n\t\t\t\t\t</Container>\n\t\t\t\t)}\n\n\t\t\t\t{examObj.type === 2 && (\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<h4>Apl. KŠ</h4>\n\n\t\t\t\t\t\t<TwoColContainer>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h5>Nosi od:</h5>\n\t\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\t\tlabel={\"\"}\n\t\t\t\t\t\t\t\t\tvalue={examObj.anamneza.nosi_od}\n\t\t\t\t\t\t\t\t\t// type=\"date\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"anamneza.nosi_od\"\n\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h5>Posledná korekcia:</h5>\n\t\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\t\tlabel={\"\"}\n\t\t\t\t\t\t\t\t\tvalue={examObj.anamneza.posledna_korekcia}\n\t\t\t\t\t\t\t\t\t// type=\"date\"\n\t\t\t\t\t\t\t\t\ttype=\"month\"\n\t\t\t\t\t\t\t\t\tname=\"anamneza.posledna_korekcia\"\n\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</TwoColContainer>\n\t\t\t\t\t\t<TwoColContainer>\n\t\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\t\tlabel={\"KŠ typ, spôsob nosenia\"}\n\t\t\t\t\t\t\t\t\tvalue={examObj.anamneza.typ_sposob}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"anamneza.typ_sposob\"\n\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InputContainer>\n\t\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t\t<IsSuitableCheckbox\n\t\t\t\t\t\t\t\t\tlabel={\"Vyhovuje\"}\n\t\t\t\t\t\t\t\t\tisActive={examObj.anamneza.vyhovuje}\n\t\t\t\t\t\t\t\t\thandleClick={() =>\n\t\t\t\t\t\t\t\t\t\thandleChange({\n\t\t\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"anamneza.vyhovuje\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: examObj.anamneza.vyhovuje\n\t\t\t\t\t\t\t\t\t\t\t\t\t? !examObj.anamneza.vyhovuje\n\t\t\t\t\t\t\t\t\t\t\t\t\t: true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InputContainer>\n\t\t\t\t\t\t</TwoColContainer>\n\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\tlabel=\"Povolanie\"\n\t\t\t\t\t\t\t\tname=\"anamneza.stav_a_povolanie\"\n\t\t\t\t\t\t\t\tvalue={examObj.anamneza.stav_a_povolanie}\n\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InputContainer>\n\n\t\t\t\t\t\t<div className=\"checkboxes\">\n\t\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t\t<IsSuitableCheckbox\n\t\t\t\t\t\t\t\t\tlabel={\"Šofer\"}\n\t\t\t\t\t\t\t\t\tisActive={examObj.vodic}\n\t\t\t\t\t\t\t\t\thandleClick={() =>\n\t\t\t\t\t\t\t\t\t\thandleChange({\n\t\t\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"vodic\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: examObj.vodic ? false : true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InputContainer>\n\t\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t\t<IsSuitableCheckbox\n\t\t\t\t\t\t\t\t\tlabel={\"PC\"}\n\t\t\t\t\t\t\t\t\tisActive={examObj.pc}\n\t\t\t\t\t\t\t\t\thandleClick={() =>\n\t\t\t\t\t\t\t\t\t\thandleChange({\n\t\t\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"pc\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: examObj.pc ? false : true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InputContainer>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t<CustomTextarea\n\t\t\t\t\t\t\t\tlabel=\"Anamnéza\"\n\t\t\t\t\t\t\t\tname=\"anamneza.dopl_info\"\n\t\t\t\t\t\t\t\tvalue={examObj.anamneza.dopl_info}\n\t\t\t\t\t\t\t\trows=\"3\"\n\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InputContainer>\n\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t<CustomTextarea\n\t\t\t\t\t\t\t\tlabel=\"Obj. nález\"\n\t\t\t\t\t\t\t\tname=\"anamneza.obj_nalez\"\n\t\t\t\t\t\t\t\tvalue={examObj.anamneza.obj_nalez}\n\t\t\t\t\t\t\t\trows=\"3\"\n\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InputContainer>\n\n\t\t\t\t\t\t<h4>Vlastné okuliare</h4>\n\n\t\t\t\t\t\t<Table>\n\t\t\t\t\t\t\t<TableTitleCol>\n\t\t\t\t\t\t\t\t<Col>{\"-\"}</Col>\n\t\t\t\t\t\t\t\t<Col>P.</Col>\n\t\t\t\t\t\t\t\t<Col>L.</Col>\n\t\t\t\t\t\t\t</TableTitleCol>\n\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>V.NATUR</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.vlastne_okuliare.vnatur[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.vlastne_okuliare.vnatur,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, vlastne_okuliare?.vnatur, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>SPH</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.vlastne_okuliare.sph[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.vlastne_okuliare?.sph,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, vlastne_okuliare?.sph, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>CYL</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.vlastne_okuliare.cyl[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.vlastne_okuliare?.cyl,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, vlastne_okuliare?.cyl, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>AX</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.vlastne_okuliare.ax[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.vlastne_okuliare?.ax,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, vlastne_okuliare?.ax, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>ADICIA</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.vlastne_okuliare.add[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.vlastne_okuliare?.add,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, vlastne_okuliare?.add, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>V.ISUS</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.vlastne_okuliare.visus[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.vlastne_okuliare?.visus,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, vlastne_okuliare?.visus, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>V.BINO</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tname=\"anamneza.vlastne_okuliare.vbino\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={checkParameterValue(\n\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.vlastne_okuliare?.vbino\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t// onChange={e => setVlastne_okuliare(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: e.target.value\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, vlastne_okuliare?.vbino, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => setVlastne_okuliare(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: Number(e.target.value)\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t</Table>\n\n\t\t\t\t\t\t<h4>Refraktometer</h4>\n\n\t\t\t\t\t\t<RefractTable>\n\t\t\t\t\t\t\t<TableTitleCol>\n\t\t\t\t\t\t\t\t<Col>{\"-\"}</Col>\n\t\t\t\t\t\t\t\t<Col>P.</Col>\n\t\t\t\t\t\t\t\t<Col>L.</Col>\n\t\t\t\t\t\t\t</TableTitleCol>\n\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>SPH</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.refraktometer.sph[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.refraktometer.sph,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, refraktometer, setRefraktometer)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, refraktometer?.sph, refraktometer, setRefraktometer)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>CYL</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.refraktometer.cyl[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.refraktometer?.cyl,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, refraktometer, setRefraktometer)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, refraktometer?.cyl, refraktometer, setRefraktometer)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>AX</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.refraktometer.ax[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.refraktometer?.ax,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, refraktometer, setRefraktometer)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, refraktometer?.ax, refraktometer, setRefraktometer)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>SE</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.refraktometer.se[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.refraktometer?.se,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, refraktometer, setRefraktometer)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, refraktometer?.se, refraktometer, setRefraktometer)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>PD</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.refraktometer.pd[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.refraktometer?.pd,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, refraktometer, setRefraktometer)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, refraktometer?.se, refraktometer, setRefraktometer)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t</RefractTable>\n\n\t\t\t\t\t\t<h4>Keratometer</h4>\n\n\t\t\t\t\t\t<KerathTable>\n\t\t\t\t\t\t\t<TableTitleCol>\n\t\t\t\t\t\t\t\t<Col>{\"-\"}</Col>\n\t\t\t\t\t\t\t\t<Col>P.</Col>\n\t\t\t\t\t\t\t\t<Col>L.</Col>\n\t\t\t\t\t\t\t</TableTitleCol>\n\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>HOR</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.keratometer.hor[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.keratometer?.hor,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, keratometer, setKeratometer)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, keratometer?.hor, keratometer, setKeratometer)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>VER</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.keratometer.ver[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.keratometer?.ver,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, keratometer, setKeratometer)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, keratometer?.ver, keratometer, setKeratometer)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>AVE</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.keratometer.ave[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.keratometer?.ave,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, keratometer, setKeratometer)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, keratometer?.ave, keratometer, setKeratometer)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t</KerathTable>\n\n\t\t\t\t\t\t<h4>Subjektivná refrakcia</h4>\n\n\t\t\t\t\t\t<SubjectiveRefATable>\n\t\t\t\t\t\t\t<TableTitleCol>\n\t\t\t\t\t\t\t\t<Col>{\"-\"}</Col>\n\t\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\t\tisActive={\n\t\t\t\t\t\t\t\t\t\texamObj.anamneza.subjektivna_refrakcia?.domoko === \"1\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tclickable\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\thandleChange({\n\t\t\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"anamneza.subjektivna_refrakcia.domoko\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue:\n\t\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.subjektivna_refrakcia?.domoko === \"1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"1\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tP.\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\t\tisActive={\n\t\t\t\t\t\t\t\t\t\texamObj.anamneza.subjektivna_refrakcia?.domoko === \"2\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tclickable\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\thandleChange({\n\t\t\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"anamneza.subjektivna_refrakcia.domoko\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue:\n\t\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.subjektivna_refrakcia?.domoko === \"2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"2\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tL.\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</TableTitleCol>\n\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>SPH</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.subjektivna_refrakcia.sph[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.subjektivna_refrakcia?.sph,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, subjektivna_refrakciaA?.sph, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>CYL</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.subjektivna_refrakcia.cyl[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.subjektivna_refrakcia?.cyl,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, subjektivna_refrakciaA?.cyl, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>AX</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.subjektivna_refrakcia.ax[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.subjektivna_refrakcia?.ax,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, subjektivna_refrakciaA?.ax, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>ADICIA</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.subjektivna_refrakcia.add[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.subjektivna_refrakcia?.add,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, subjektivna_refrakciaA?.add, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>VISUS</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.subjektivna_refrakcia.visus[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.subjektivna_refrakcia?.visus,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, subjektivna_refrakciaA?.visus, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>BINO</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tname={`anamneza.subjektivna_refrakcia.bino`}\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={checkParameterValue(\n\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.subjektivna_refrakcia?.bino\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t// onChange={e => setSubjektivna_refrakciaA(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: e.target.value\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => setSubjektivna_refrakciaA(prevValue => ({\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: Number(e.target.value)\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t</SubjectiveRefATable>\n\n\t\t\t\t\t\t<h4>Kontaktné šošovky</h4>\n\n\t\t\t\t\t\t<ContactLensesTable>\n\t\t\t\t\t\t\t<TableTitleCol>\n\t\t\t\t\t\t\t\t<Col>{\"-\"}</Col>\n\t\t\t\t\t\t\t\t<Col>P.</Col>\n\t\t\t\t\t\t\t\t<Col>L.</Col>\n\t\t\t\t\t\t\t</TableTitleCol>\n\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>SPH</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.kontaktne_sosovky.sph[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.kontaktne_sosovky?.sph,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, kontaktne_sosovky, setKontaktne_sosovky)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, kontaktne_sosovky?.sph, kontaktne_sosovky, setKontaktne_sosovky)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>CYL</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.kontaktne_sosovky.cyl[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.kontaktne_sosovky?.cyl,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, kontaktne_sosovky, setKontaktne_sosovky)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, kontaktne_sosovky?.cyl, kontaktne_sosovky, setKontaktne_sosovky)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>AX</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.kontaktne_sosovky.ax[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.kontaktne_sosovky?.ax,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, kontaktne_sosovky, setKontaktne_sosovky)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, kontaktne_sosovky?.ax, kontaktne_sosovky, setKontaktne_sosovky)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>ADICIA</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.kontaktne_sosovky.add[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.kontaktne_sosovky?.add,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, kontaktne_sosovky, setKontaktne_sosovky)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, kontaktne_sosovky?.add, kontaktne_sosovky, setKontaktne_sosovky)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>VISD</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.kontaktne_sosovky.visd[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.kontaktne_sosovky?.visd,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, kontaktne_sosovky, setKontaktne_sosovky)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, kontaktne_sosovky?.visd, kontaktne_sosovky, setKontaktne_sosovky)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>BINO1</Col>\n\t\t\t\t\t\t\t\t{[...Array(1)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.kontaktne_sosovky.bino1[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.kontaktne_sosovky?.bino1,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, kontaktne_sosovky, setKontaktne_sosovky)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, kontaktne_sosovky?.bino1, kontaktne_sosovky, setKontaktne_sosovky)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>V.BL</Col>\n\t\t\t\t\t\t\t\t{[...Array(1)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.kontaktne_sosovky.visb[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.kontaktne_sosovky?.visb,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, kontaktne_sosovky, setKontaktne_sosovky)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, kontaktne_sosovky?.visb, kontaktne_sosovky, setKontaktne_sosovky)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t{/* <TableCol>\n                                <Col>BINO2</Col>\n                                {[...Array(1)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name={`anamneza.kontaktne_sosovky.bino2[${idx}]`}\n                                            type='text'\n                                            value={checkParameter(examObj.anamneza.kontaktne_sosovky?.bino2, idx)}\n                                            onChange={handleChange}\n                                            // onChange={e => handleParameterChange(e, idx, kontaktne_sosovky, setKontaktne_sosovky)}\n                                            // onBlur={(e) => formatParameters(e, kontaktne_sosovky?.bino2, kontaktne_sosovky, setKontaktne_sosovky)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol> */}\n\t\t\t\t\t\t</ContactLensesTable>\n\n\t\t\t\t\t\t<h4>Typ Kontaktných šošoviek</h4>\n\n\t\t\t\t\t\t<ContactLensesTypeTable>\n\t\t\t\t\t\t\t<TableTitleCol>\n\t\t\t\t\t\t\t\t<Col>{\"-\"}</Col>\n\t\t\t\t\t\t\t\t<Col>P.</Col>\n\t\t\t\t\t\t\t\t<Col>L.</Col>\n\t\t\t\t\t\t\t</TableTitleCol>\n\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>PRVÝ TYP</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.typ_kontaktnych_sosoviek.prvy[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.typ_kontaktnych_sosoviek?.prvy,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, typ_kontaktnych_sosoviek, setTyp_kontaktnych_sosoviek)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatStringParameters(e, typ_kontaktnych_sosoviek?.prvy, typ_kontaktnych_sosoviek, setTyp_kontaktnych_sosoviek)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>DRUHÝ TYP</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t// name='druhy'\n\t\t\t\t\t\t\t\t\t\t\tname={`anamneza.typ_kontaktnych_sosoviek.druhy[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.typ_kontaktnych_sosoviek?.druhy,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, typ_kontaktnych_sosoviek, setTyp_kontaktnych_sosoviek)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatStringParameters(e, typ_kontaktnych_sosoviek?.druhy, typ_kontaktnych_sosoviek, setTyp_kontaktnych_sosoviek)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>DOP.KONTROLA</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t// name='lkontrola'\n\t\t\t\t\t\t\t\t\t\tname={`anamneza.typ_kontaktnych_sosoviek.lkontrola`}\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={checkParameterValue(\n\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.typ_kontaktnych_sosoviek?.lkontrola\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t// onChange={e => setTyp_kontaktnych_sosoviek(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: e.target.value\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => setTyp_kontaktnych_sosoviek(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: Number(e.target.value)\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>DOP.ROZTOK</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t// name='dop_roztok'\n\t\t\t\t\t\t\t\t\t\tname={`anamneza.typ_kontaktnych_sosoviek.dop_roztok`}\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={checkParameterValue(\n\t\t\t\t\t\t\t\t\t\t\texamObj.anamneza.typ_kontaktnych_sosoviek?.dop_roztok\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t// onChange={e => setTyp_kontaktnych_sosoviek(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: e.target.value\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => setTyp_kontaktnych_sosoviek(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: Number(e.target.value)\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t</ContactLensesTypeTable>\n\t\t\t\t\t</Container>\n\t\t\t\t)}\n\n\t\t\t\t{examObj.type === 3 && (\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<TwoColContainer style={{ marginBottom: \"1rem\" }}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h5>Nosi:</h5>\n\t\t\t\t\t\t\t\t<CustomInput\n\t\t\t\t\t\t\t\t\tlabel={\"\"}\n\t\t\t\t\t\t\t\t\tvalue={examObj.kontrola.nosi}\n\t\t\t\t\t\t\t\t\t// type=\"date\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"kontrola.nosi\"\n\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</TwoColContainer>\n\n\t\t\t\t\t\t<h4>Kontrola</h4>\n\n\t\t\t\t\t\t{/* <h4>Typ Kontaktných šošoviek</h4> */}\n\n\t\t\t\t\t\t<ContactLensesTypeTable>\n\t\t\t\t\t\t\t<TableTitleCol>\n\t\t\t\t\t\t\t\t<Col>{\"-\"}</Col>\n\t\t\t\t\t\t\t\t<Col>P.</Col>\n\t\t\t\t\t\t\t\t<Col>L.</Col>\n\t\t\t\t\t\t\t</TableTitleCol>\n\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>PRVÝ TYP</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`kontrola.typ_kontaktnych_sosoviek.prvy[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.kontrola.typ_kontaktnych_sosoviek?.prvy,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, typ_kontaktnych_sosoviek, setTyp_kontaktnych_sosoviek)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatStringParameters(e, typ_kontaktnych_sosoviek?.prvy, typ_kontaktnych_sosoviek, setTyp_kontaktnych_sosoviek)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>DRUHÝ TYP</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t// name='druhy'\n\t\t\t\t\t\t\t\t\t\t\tname={`kontrola.typ_kontaktnych_sosoviek.druhy[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(\n\t\t\t\t\t\t\t\t\t\t\t\texamObj.kontrola.typ_kontaktnych_sosoviek?.druhy,\n\t\t\t\t\t\t\t\t\t\t\t\tidx\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, typ_kontaktnych_sosoviek, setTyp_kontaktnych_sosoviek)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatStringParameters(e, typ_kontaktnych_sosoviek?.druhy, typ_kontaktnych_sosoviek, setTyp_kontaktnych_sosoviek)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>DOP.KONTROLA</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t// name='lkontrola'\n\t\t\t\t\t\t\t\t\t\tname={`kontrola.typ_kontaktnych_sosoviek.lkontrola`}\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={checkParameterValue(\n\t\t\t\t\t\t\t\t\t\t\texamObj.kontrola.typ_kontaktnych_sosoviek?.lkontrola\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t// onChange={e => setTyp_kontaktnych_sosoviek(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: e.target.value\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => setTyp_kontaktnych_sosoviek(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: Number(e.target.value)\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>DOP.ROZTOK</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t// name='dop_roztok'\n\t\t\t\t\t\t\t\t\t\tname={`kontrola.typ_kontaktnych_sosoviek.dop_roztok`}\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={checkParameterValue(\n\t\t\t\t\t\t\t\t\t\t\texamObj.kontrola.typ_kontaktnych_sosoviek?.dop_roztok\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t// onChange={e => setTyp_kontaktnych_sosoviek(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: e.target.value\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => setTyp_kontaktnych_sosoviek(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: Number(e.target.value)\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t</ContactLensesTypeTable>\n\n\t\t\t\t\t\t<ExamTable>\n\t\t\t\t\t\t\t<TableTitleCol>\n\t\t\t\t\t\t\t\t<Col>{\"-\"}</Col>\n\t\t\t\t\t\t\t\t<Col>P.</Col>\n\t\t\t\t\t\t\t\t<Col>L.</Col>\n\t\t\t\t\t\t\t</TableTitleCol>\n\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>SPH</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`kontrola.tabulka.sph[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(examObj.kontrola.tabulka?.sph, idx)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, tabulka, setTabulka)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, tabulka?.sph, tabulka, setTabulka)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>CYL</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t// name='cyl'\n\t\t\t\t\t\t\t\t\t\t\tname={`kontrola.tabulka.cyl[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(examObj.kontrola.tabulka?.cyl, idx)}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, tabulka, setTabulka)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, tabulka?.cyl, tabulka, setTabulka)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>AX</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`kontrola.tabulka.ax[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\t// name='ax'\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(examObj.kontrola.tabulka?.ax, idx)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, tabulka, setTabulka)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, tabulka?.ax, tabulka, setTabulka)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>ADD</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`kontrola.tabulka.add[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\t// name='add'\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(examObj.kontrola.tabulka?.add, idx)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, tabulka, setTabulka)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, tabulka?.add, tabulka, setTabulka)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>VIS</Col>\n\t\t\t\t\t\t\t\t{[...Array(2)].map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<Col key={idx}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tname={`kontrola.tabulka.vis[${idx}]`}\n\t\t\t\t\t\t\t\t\t\t\t// name='vis'\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={checkParameter(examObj.kontrola.tabulka?.vis, idx)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t// onChange={e => handleParameterChange(e, idx, tabulka, setTabulka)}\n\t\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, tabulka?.vis, tabulka, setTabulka)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t\t<TableCol>\n\t\t\t\t\t\t\t\t<Col>V.BINO</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tname={`kontrola.tabulka.vbino`}\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={checkParameterValue(examObj.kontrola.tabulka?.vbino)}\n\t\t\t\t\t\t\t\t\t\t// onChange={e => setVlastne_okuliare(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: e.target.value\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => formatParameters(e, vlastne_okuliare?.vbino, vlastne_okuliare, setVlastne_okuliare)}\n\t\t\t\t\t\t\t\t\t\t// onBlur={(e) => setVlastne_okuliare(prevValue => ({\n\t\t\t\t\t\t\t\t\t\t//     ...prevValue,\n\t\t\t\t\t\t\t\t\t\t//     [e.target.name]: Number(e.target.value)\n\t\t\t\t\t\t\t\t\t\t// }))}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</TableCol>\n\t\t\t\t\t\t</ExamTable>\n\n\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t<CustomTextarea\n\t\t\t\t\t\t\t\tlabel={\"Subj.\"}\n\t\t\t\t\t\t\t\tvalue={examObj.kontrola.subj}\n\t\t\t\t\t\t\t\trows=\"3\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"kontrola.subj\"\n\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InputContainer>\n\n\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t<CustomTextarea\n\t\t\t\t\t\t\t\tlabel={\"Obj.\"}\n\t\t\t\t\t\t\t\tvalue={examObj.kontrola.obj}\n\t\t\t\t\t\t\t\trows=\"3\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"kontrola.obj\"\n\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InputContainer>\n\n\t\t\t\t\t\t<div className=\"checkboxes\">\n\t\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t\t<IsSuitableCheckbox\n\t\t\t\t\t\t\t\t\tlabel={\"Šofer\"}\n\t\t\t\t\t\t\t\t\tisActive={examObj.vodic}\n\t\t\t\t\t\t\t\t\thandleClick={() =>\n\t\t\t\t\t\t\t\t\t\thandleChange({\n\t\t\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"vodic\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: examObj.vodic ? false : true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InputContainer>\n\t\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t\t<IsSuitableCheckbox\n\t\t\t\t\t\t\t\t\tlabel={\"PC\"}\n\t\t\t\t\t\t\t\t\tisActive={examObj.pc}\n\t\t\t\t\t\t\t\t\thandleClick={() =>\n\t\t\t\t\t\t\t\t\t\thandleChange({\n\t\t\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"pc\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: examObj.pc ? false : true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InputContainer>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Container>\n\t\t\t\t)}\n\n\t\t\t\t<InputContainer>\n\t\t\t\t\t<CustomTextarea\n\t\t\t\t\t\tlabel=\"Doporučenia\"\n\t\t\t\t\t\tname=\"doporucenia\"\n\t\t\t\t\t\tvalue={examObj.doporucenia}\n\t\t\t\t\t\trows=\"5\"\n\t\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\t/>\n\t\t\t\t</InputContainer>\n\n\t\t\t\t<SubmitButton onClick={handleSubmit}>\n\t\t\t\t\t{examinationToUpdate ? \"Uložiť\" : \"Odoslať prehliadku\"}\n\t\t\t\t</SubmitButton>\n\t\t\t</Modal>\n\t\t</ModalContainer>,\n\t\tdocument.getElementById(\"portal\")\n\t)\n}\n\nexport default OptometristExaminationModal\n\nconst examTypes = [\n\t{\n\t\tname: \"Refrakcia\",\n\t\tvalue: 1,\n\t},\n\t{\n\t\tname: \"Apl. KŠ\",\n\t\tvalue: 2,\n\t},\n\t{\n\t\tname: \"Kontrola\",\n\t\tvalue: 3,\n\t},\n]\n","/app/src/components/modal-finish-deposited-order/modal-finish-deposited-order.styles.jsx",[],"/app/src/components/order-deligate-modal/order-deligate-modal.styles.jsx",[],"/app/src/components/examination-user/examination-user.styles.jsx",[],"/app/src/utils/object.utils.jsx",[],"/app/src/utils/parameters.utils.jsx",[],"/app/src/components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx",[],{"ruleId":"960","replacedBy":"961"},{"ruleId":"962","replacedBy":"963"},{"ruleId":"964","severity":1,"message":"965","line":2,"column":10,"nodeType":"966","messageId":"967","endLine":2,"endColumn":20},{"ruleId":"968","severity":1,"message":"969","line":298,"column":5,"nodeType":"970","endLine":298,"endColumn":12,"suggestions":"971"},{"ruleId":"964","severity":1,"message":"972","line":1,"column":54,"nodeType":"966","messageId":"967","endLine":1,"endColumn":63},{"ruleId":"964","severity":1,"message":"973","line":16,"column":22,"nodeType":"966","messageId":"967","endLine":16,"endColumn":33},{"ruleId":"964","severity":1,"message":"974","line":2,"column":40,"nodeType":"966","messageId":"967","endLine":2,"endColumn":48},{"ruleId":"964","severity":1,"message":"975","line":17,"column":9,"nodeType":"966","messageId":"967","endLine":17,"endColumn":17},{"ruleId":"968","severity":1,"message":"976","line":36,"column":8,"nodeType":"970","endLine":36,"endColumn":25,"suggestions":"977"},{"ruleId":"964","severity":1,"message":"978","line":26,"column":9,"nodeType":"966","messageId":"967","endLine":26,"endColumn":19},{"ruleId":"968","severity":1,"message":"979","line":171,"column":5,"nodeType":"970","endLine":171,"endColumn":31,"suggestions":"980"},{"ruleId":"964","severity":1,"message":"981","line":419,"column":13,"nodeType":"966","messageId":"967","endLine":419,"endColumn":22},{"ruleId":"968","severity":1,"message":"982","line":933,"column":8,"nodeType":"970","endLine":933,"endColumn":31,"suggestions":"983"},{"ruleId":"968","severity":1,"message":"984","line":961,"column":8,"nodeType":"970","endLine":961,"endColumn":22,"suggestions":"985"},{"ruleId":"964","severity":1,"message":"986","line":205,"column":19,"nodeType":"966","messageId":"967","endLine":205,"endColumn":23},{"ruleId":"964","severity":1,"message":"987","line":1,"column":44,"nodeType":"966","messageId":"967","endLine":1,"endColumn":52},{"ruleId":"964","severity":1,"message":"988","line":4,"column":8,"nodeType":"966","messageId":"967","endLine":4,"endColumn":18},{"ruleId":"964","severity":1,"message":"989","line":5,"column":8,"nodeType":"966","messageId":"967","endLine":5,"endColumn":14},{"ruleId":"968","severity":1,"message":"990","line":168,"column":5,"nodeType":"970","endLine":168,"endColumn":31,"suggestions":"991"},{"ruleId":"968","severity":1,"message":"992","line":143,"column":5,"nodeType":"970","endLine":143,"endColumn":15,"suggestions":"993"},{"ruleId":"968","severity":1,"message":"994","line":163,"column":5,"nodeType":"970","endLine":163,"endColumn":18,"suggestions":"995"},{"ruleId":"964","severity":1,"message":"996","line":27,"column":5,"nodeType":"966","messageId":"967","endLine":27,"endColumn":17},{"ruleId":"968","severity":1,"message":"997","line":114,"column":8,"nodeType":"970","endLine":114,"endColumn":19,"suggestions":"998"},{"ruleId":"968","severity":1,"message":"999","line":130,"column":8,"nodeType":"970","endLine":130,"endColumn":21,"suggestions":"1000"},{"ruleId":"964","severity":1,"message":"1001","line":460,"column":12,"nodeType":"966","messageId":"967","endLine":460,"endColumn":19},{"ruleId":"968","severity":1,"message":"1002","line":479,"column":8,"nodeType":"970","endLine":479,"endColumn":26,"suggestions":"1003"},{"ruleId":"968","severity":1,"message":"1004","line":491,"column":8,"nodeType":"970","endLine":491,"endColumn":25,"suggestions":"1005"},{"ruleId":"968","severity":1,"message":"1006","line":498,"column":8,"nodeType":"970","endLine":498,"endColumn":26,"suggestions":"1007"},{"ruleId":"968","severity":1,"message":"1008","line":515,"column":8,"nodeType":"970","endLine":515,"endColumn":72,"suggestions":"1009"},{"ruleId":"968","severity":1,"message":"1010","line":539,"column":8,"nodeType":"970","endLine":539,"endColumn":13,"suggestions":"1011"},{"ruleId":"968","severity":1,"message":"1012","line":548,"column":8,"nodeType":"970","endLine":548,"endColumn":22,"suggestions":"1013"},{"ruleId":"968","severity":1,"message":"1014","line":560,"column":8,"nodeType":"970","endLine":560,"endColumn":10,"suggestions":"1015"},{"ruleId":"968","severity":1,"message":"1016","line":168,"column":5,"nodeType":"970","endLine":168,"endColumn":35,"suggestions":"1017"},{"ruleId":"968","severity":1,"message":"1018","line":174,"column":5,"nodeType":"970","endLine":174,"endColumn":9,"suggestions":"1019"},{"ruleId":"968","severity":1,"message":"1020","line":196,"column":5,"nodeType":"970","endLine":196,"endColumn":7,"suggestions":"1021"},{"ruleId":"964","severity":1,"message":"1022","line":12,"column":10,"nodeType":"966","messageId":"967","endLine":12,"endColumn":25},{"ruleId":"968","severity":1,"message":"1023","line":151,"column":8,"nodeType":"970","endLine":151,"endColumn":22,"suggestions":"1024"},{"ruleId":"968","severity":1,"message":"1023","line":159,"column":8,"nodeType":"970","endLine":159,"endColumn":35,"suggestions":"1025"},{"ruleId":"968","severity":1,"message":"1026","line":93,"column":8,"nodeType":"970","endLine":93,"endColumn":21,"suggestions":"1027"},{"ruleId":"968","severity":1,"message":"1026","line":115,"column":8,"nodeType":"970","endLine":115,"endColumn":21,"suggestions":"1028"},{"ruleId":"968","severity":1,"message":"1029","line":121,"column":8,"nodeType":"970","endLine":121,"endColumn":29,"suggestions":"1030"},{"ruleId":"968","severity":1,"message":"1031","line":136,"column":8,"nodeType":"970","endLine":136,"endColumn":10,"suggestions":"1032"},{"ruleId":"968","severity":1,"message":"1033","line":95,"column":8,"nodeType":"970","endLine":95,"endColumn":12,"suggestions":"1034"},{"ruleId":"968","severity":1,"message":"1035","line":110,"column":8,"nodeType":"970","endLine":110,"endColumn":14,"suggestions":"1036"},{"ruleId":"968","severity":1,"message":"1037","line":124,"column":8,"nodeType":"970","endLine":124,"endColumn":10,"suggestions":"1038"},{"ruleId":"968","severity":1,"message":"1039","line":116,"column":5,"nodeType":"970","endLine":116,"endColumn":61,"suggestions":"1040"},{"ruleId":"968","severity":1,"message":"1041","line":121,"column":5,"nodeType":"970","endLine":121,"endColumn":25,"suggestions":"1042"},{"ruleId":"968","severity":1,"message":"1043","line":130,"column":5,"nodeType":"970","endLine":130,"endColumn":7,"suggestions":"1044"},{"ruleId":"1045","severity":1,"message":"1046","line":81,"column":9,"nodeType":"1047","messageId":"1048","endLine":85,"endColumn":10},{"ruleId":"1045","severity":1,"message":"1046","line":142,"column":9,"nodeType":"1047","messageId":"1048","endLine":146,"endColumn":12},{"ruleId":"1045","severity":1,"message":"1046","line":163,"column":9,"nodeType":"1047","messageId":"1048","endLine":167,"endColumn":12},{"ruleId":"968","severity":1,"message":"1049","line":203,"column":8,"nodeType":"970","endLine":203,"endColumn":19,"suggestions":"1050"},{"ruleId":"968","severity":1,"message":"1051","line":218,"column":8,"nodeType":"970","endLine":218,"endColumn":10,"suggestions":"1052"},{"ruleId":"964","severity":1,"message":"1053","line":12,"column":10,"nodeType":"966","messageId":"967","endLine":12,"endColumn":21},{"ruleId":"968","severity":1,"message":"1054","line":45,"column":8,"nodeType":"970","endLine":45,"endColumn":17,"suggestions":"1055"},{"ruleId":"964","severity":1,"message":"1056","line":19,"column":5,"nodeType":"966","messageId":"967","endLine":19,"endColumn":18},{"ruleId":"964","severity":1,"message":"1057","line":25,"column":5,"nodeType":"966","messageId":"967","endLine":25,"endColumn":21},{"ruleId":"964","severity":1,"message":"1058","line":43,"column":5,"nodeType":"966","messageId":"967","endLine":43,"endColumn":25},{"ruleId":"964","severity":1,"message":"1059","line":46,"column":5,"nodeType":"966","messageId":"967","endLine":46,"endColumn":17},{"ruleId":"964","severity":1,"message":"1060","line":47,"column":5,"nodeType":"966","messageId":"967","endLine":47,"endColumn":25},{"ruleId":"964","severity":1,"message":"1061","line":60,"column":45,"nodeType":"966","messageId":"967","endLine":60,"endColumn":59},{"ruleId":"964","severity":1,"message":"1062","line":141,"column":11,"nodeType":"966","messageId":"967","endLine":141,"endColumn":27},{"ruleId":"964","severity":1,"message":"1063","line":235,"column":11,"nodeType":"966","messageId":"967","endLine":235,"endColumn":34},{"ruleId":"964","severity":1,"message":"1064","line":242,"column":11,"nodeType":"966","messageId":"967","endLine":242,"endColumn":33},{"ruleId":"964","severity":1,"message":"1065","line":254,"column":11,"nodeType":"966","messageId":"967","endLine":254,"endColumn":28},{"ruleId":"968","severity":1,"message":"1066","line":398,"column":8,"nodeType":"970","endLine":398,"endColumn":20,"suggestions":"1067"},{"ruleId":"964","severity":1,"message":"1068","line":768,"column":7,"nodeType":"966","messageId":"967","endLine":768,"endColumn":11},{"ruleId":"968","severity":1,"message":"1069","line":46,"column":8,"nodeType":"970","endLine":46,"endColumn":18,"suggestions":"1070"},{"ruleId":"968","severity":1,"message":"1071","line":52,"column":8,"nodeType":"970","endLine":52,"endColumn":10,"suggestions":"1072"},{"ruleId":"1073","severity":1,"message":"1074","line":15,"column":27,"nodeType":"1075","messageId":"1076","endLine":15,"endColumn":28,"suggestions":"1077"},{"ruleId":"1073","severity":1,"message":"1074","line":16,"column":23,"nodeType":"1075","messageId":"1076","endLine":16,"endColumn":24,"suggestions":"1078"},{"ruleId":"1073","severity":1,"message":"1074","line":16,"column":25,"nodeType":"1075","messageId":"1076","endLine":16,"endColumn":26,"suggestions":"1079"},{"ruleId":"968","severity":1,"message":"1080","line":25,"column":8,"nodeType":"970","endLine":25,"endColumn":16,"suggestions":"1081"},{"ruleId":"968","severity":1,"message":"1082","line":37,"column":8,"nodeType":"970","endLine":37,"endColumn":22,"suggestions":"1083"},{"ruleId":"968","severity":1,"message":"1084","line":79,"column":8,"nodeType":"970","endLine":79,"endColumn":28,"suggestions":"1085"},{"ruleId":"968","severity":1,"message":"1084","line":118,"column":8,"nodeType":"970","endLine":118,"endColumn":32,"suggestions":"1086"},{"ruleId":"964","severity":1,"message":"1087","line":879,"column":9,"nodeType":"966","messageId":"967","endLine":879,"endColumn":12},{"ruleId":"968","severity":1,"message":"1088","line":29,"column":8,"nodeType":"970","endLine":29,"endColumn":19,"suggestions":"1089"},{"ruleId":"968","severity":1,"message":"1088","line":42,"column":8,"nodeType":"970","endLine":42,"endColumn":25,"suggestions":"1090"},{"ruleId":"968","severity":1,"message":"1002","line":77,"column":8,"nodeType":"970","endLine":77,"endColumn":31,"suggestions":"1091"},{"ruleId":"968","severity":1,"message":"1006","line":84,"column":8,"nodeType":"970","endLine":84,"endColumn":19,"suggestions":"1092"},{"ruleId":"968","severity":1,"message":"1093","line":113,"column":8,"nodeType":"970","endLine":113,"endColumn":19,"suggestions":"1094"},{"ruleId":"964","severity":1,"message":"1095","line":4,"column":8,"nodeType":"966","messageId":"967","endLine":4,"endColumn":19},{"ruleId":"964","severity":1,"message":"1096","line":5,"column":8,"nodeType":"966","messageId":"967","endLine":5,"endColumn":20},{"ruleId":"964","severity":1,"message":"1097","line":15,"column":5,"nodeType":"966","messageId":"967","endLine":15,"endColumn":17},{"ruleId":"964","severity":1,"message":"1098","line":28,"column":12,"nodeType":"966","messageId":"967","endLine":28,"endColumn":15},{"ruleId":"964","severity":1,"message":"1099","line":28,"column":17,"nodeType":"966","messageId":"967","endLine":28,"endColumn":23},{"ruleId":"964","severity":1,"message":"1100","line":30,"column":12,"nodeType":"966","messageId":"967","endLine":30,"endColumn":17},{"ruleId":"964","severity":1,"message":"1101","line":37,"column":11,"nodeType":"966","messageId":"967","endLine":37,"endColumn":32},{"ruleId":"964","severity":1,"message":"1102","line":66,"column":19,"nodeType":"966","messageId":"967","endLine":66,"endColumn":22},{"ruleId":"968","severity":1,"message":"1103","line":93,"column":8,"nodeType":"970","endLine":93,"endColumn":19,"suggestions":"1104"},{"ruleId":"964","severity":1,"message":"1105","line":7,"column":10,"nodeType":"966","messageId":"967","endLine":7,"endColumn":25},{"ruleId":"968","severity":1,"message":"1106","line":80,"column":8,"nodeType":"970","endLine":80,"endColumn":19,"suggestions":"1107"},{"ruleId":"964","severity":1,"message":"996","line":14,"column":2,"nodeType":"966","messageId":"967","endLine":14,"endColumn":14},{"ruleId":"968","severity":1,"message":"1108","line":58,"column":5,"nodeType":"970","endLine":58,"endColumn":15,"suggestions":"1109"},{"ruleId":"1110","severity":1,"message":"1111","line":198,"column":22,"nodeType":"1112","messageId":"1113","endLine":198,"endColumn":28},{"ruleId":"964","severity":1,"message":"1097","line":27,"column":2,"nodeType":"966","messageId":"967","endLine":27,"endColumn":14},{"ruleId":"964","severity":1,"message":"996","line":28,"column":2,"nodeType":"966","messageId":"967","endLine":28,"endColumn":14},{"ruleId":"968","severity":1,"message":"1108","line":100,"column":5,"nodeType":"970","endLine":100,"endColumn":15,"suggestions":"1114"},{"ruleId":"968","severity":1,"message":"1115","line":104,"column":5,"nodeType":"970","endLine":104,"endColumn":16,"suggestions":"1116"},{"ruleId":"968","severity":1,"message":"1117","line":109,"column":5,"nodeType":"970","endLine":109,"endColumn":30,"suggestions":"1118"},{"ruleId":"1110","severity":1,"message":"1111","line":378,"column":23,"nodeType":"1112","messageId":"1113","endLine":378,"endColumn":29},{"ruleId":"964","severity":1,"message":"996","line":20,"column":2,"nodeType":"966","messageId":"967","endLine":20,"endColumn":14},{"ruleId":"968","severity":1,"message":"1108","line":68,"column":5,"nodeType":"970","endLine":68,"endColumn":15,"suggestions":"1119"},{"ruleId":"1110","severity":1,"message":"1111","line":293,"column":23,"nodeType":"1112","messageId":"1113","endLine":293,"endColumn":29},{"ruleId":"964","severity":1,"message":"1120","line":11,"column":2,"nodeType":"966","messageId":"967","endLine":11,"endColumn":16},{"ruleId":"964","severity":1,"message":"1121","line":12,"column":2,"nodeType":"966","messageId":"967","endLine":12,"endColumn":14},{"ruleId":"968","severity":1,"message":"1108","line":48,"column":5,"nodeType":"970","endLine":48,"endColumn":15,"suggestions":"1122"},{"ruleId":"1110","severity":1,"message":"1111","line":279,"column":56,"nodeType":"1112","messageId":"1113","endLine":279,"endColumn":62},{"ruleId":"1110","severity":1,"message":"1111","line":10,"column":32,"nodeType":"1112","messageId":"1113","endLine":10,"endColumn":38},{"ruleId":"964","severity":1,"message":"1123","line":49,"column":11,"nodeType":"966","messageId":"967","endLine":49,"endColumn":22},{"ruleId":"968","severity":1,"message":"1124","line":93,"column":8,"nodeType":"970","endLine":93,"endColumn":19,"suggestions":"1125"},{"ruleId":"968","severity":1,"message":"1002","line":97,"column":8,"nodeType":"970","endLine":97,"endColumn":15,"suggestions":"1126"},{"ruleId":"964","severity":1,"message":"1127","line":9,"column":5,"nodeType":"966","messageId":"967","endLine":9,"endColumn":24},{"ruleId":"1110","severity":1,"message":"1111","line":93,"column":45,"nodeType":"1112","messageId":"1113","endLine":93,"endColumn":51},{"ruleId":"1110","severity":1,"message":"1111","line":97,"column":53,"nodeType":"1112","messageId":"1113","endLine":97,"endColumn":59},{"ruleId":"1110","severity":1,"message":"1111","line":98,"column":54,"nodeType":"1112","messageId":"1113","endLine":98,"endColumn":60},{"ruleId":"1110","severity":1,"message":"1111","line":99,"column":123,"nodeType":"1112","messageId":"1113","endLine":99,"endColumn":129},{"ruleId":"1110","severity":1,"message":"1111","line":100,"column":123,"nodeType":"1112","messageId":"1113","endLine":100,"endColumn":129},{"ruleId":"1110","severity":1,"message":"1111","line":101,"column":123,"nodeType":"1112","messageId":"1113","endLine":101,"endColumn":129},{"ruleId":"1128","severity":1,"message":"1129","line":123,"column":43,"nodeType":"1130","messageId":"1131","endLine":123,"endColumn":45},{"ruleId":"1128","severity":1,"message":"1129","line":123,"column":91,"nodeType":"1130","messageId":"1131","endLine":123,"endColumn":93},{"ruleId":"968","severity":1,"message":"1132","line":343,"column":8,"nodeType":"970","endLine":343,"endColumn":19,"suggestions":"1133"},{"ruleId":"968","severity":1,"message":"1002","line":44,"column":8,"nodeType":"970","endLine":44,"endColumn":15,"suggestions":"1134"},{"ruleId":"968","severity":1,"message":"1002","line":50,"column":8,"nodeType":"970","endLine":50,"endColumn":18,"suggestions":"1135"},{"ruleId":"968","severity":1,"message":"1136","line":65,"column":8,"nodeType":"970","endLine":65,"endColumn":19,"suggestions":"1137"},{"ruleId":"968","severity":1,"message":"1106","line":72,"column":8,"nodeType":"970","endLine":72,"endColumn":19,"suggestions":"1138"},{"ruleId":"968","severity":1,"message":"1093","line":72,"column":8,"nodeType":"970","endLine":72,"endColumn":19,"suggestions":"1139"},{"ruleId":"968","severity":1,"message":"1140","line":69,"column":8,"nodeType":"970","endLine":69,"endColumn":15,"suggestions":"1141"},{"ruleId":"968","severity":1,"message":"1142","line":83,"column":8,"nodeType":"970","endLine":83,"endColumn":21,"suggestions":"1143"},{"ruleId":"964","severity":1,"message":"1059","line":16,"column":5,"nodeType":"966","messageId":"967","endLine":16,"endColumn":17},{"ruleId":"1110","severity":1,"message":"1111","line":63,"column":52,"nodeType":"1112","messageId":"1113","endLine":63,"endColumn":58},{"ruleId":"964","severity":1,"message":"987","line":1,"column":10,"nodeType":"966","messageId":"967","endLine":1,"endColumn":18},{"ruleId":"964","severity":1,"message":"1144","line":87,"column":11,"nodeType":"966","messageId":"967","endLine":87,"endColumn":23},{"ruleId":"968","severity":1,"message":"1145","line":98,"column":8,"nodeType":"970","endLine":98,"endColumn":104,"suggestions":"1146"},{"ruleId":"968","severity":1,"message":"1147","line":98,"column":9,"nodeType":"1148","endLine":98,"endColumn":31},{"ruleId":"968","severity":1,"message":"1147","line":98,"column":33,"nodeType":"1148","endLine":98,"endColumn":55},{"ruleId":"968","severity":1,"message":"1147","line":98,"column":57,"nodeType":"1148","endLine":98,"endColumn":79},{"ruleId":"968","severity":1,"message":"1147","line":98,"column":81,"nodeType":"1148","endLine":98,"endColumn":103},{"ruleId":"968","severity":1,"message":"1149","line":42,"column":8,"nodeType":"970","endLine":42,"endColumn":19,"suggestions":"1150"},{"ruleId":"968","severity":1,"message":"1002","line":47,"column":8,"nodeType":"970","endLine":47,"endColumn":30,"suggestions":"1151"},{"ruleId":"968","severity":1,"message":"1152","line":46,"column":8,"nodeType":"970","endLine":46,"endColumn":19,"suggestions":"1153"},{"ruleId":"968","severity":1,"message":"1154","line":103,"column":8,"nodeType":"970","endLine":103,"endColumn":13,"suggestions":"1155"},{"ruleId":"968","severity":1,"message":"1154","line":174,"column":8,"nodeType":"970","endLine":174,"endColumn":13,"suggestions":"1156"},{"ruleId":"1110","severity":1,"message":"1111","line":320,"column":67,"nodeType":"1112","messageId":"1113","endLine":320,"endColumn":73},{"ruleId":"968","severity":1,"message":"1157","line":73,"column":8,"nodeType":"970","endLine":73,"endColumn":36,"suggestions":"1158"},{"ruleId":"964","severity":1,"message":"1159","line":21,"column":5,"nodeType":"966","messageId":"967","endLine":21,"endColumn":30},{"ruleId":"964","severity":1,"message":"1160","line":42,"column":29,"nodeType":"966","messageId":"967","endLine":42,"endColumn":47},{"ruleId":"968","severity":1,"message":"1161","line":190,"column":8,"nodeType":"970","endLine":190,"endColumn":27,"suggestions":"1162"},{"ruleId":"968","severity":1,"message":"1016","line":127,"column":8,"nodeType":"970","endLine":127,"endColumn":38,"suggestions":"1163"},{"ruleId":"968","severity":1,"message":"1018","line":133,"column":8,"nodeType":"970","endLine":133,"endColumn":16,"suggestions":"1164"},{"ruleId":"964","severity":1,"message":"1053","line":15,"column":10,"nodeType":"966","messageId":"967","endLine":15,"endColumn":21},{"ruleId":"964","severity":1,"message":"1165","line":24,"column":5,"nodeType":"966","messageId":"967","endLine":24,"endColumn":16},{"ruleId":"964","severity":1,"message":"1159","line":26,"column":5,"nodeType":"966","messageId":"967","endLine":26,"endColumn":30},{"ruleId":"964","severity":1,"message":"1166","line":38,"column":12,"nodeType":"966","messageId":"967","endLine":38,"endColumn":27},{"ruleId":"964","severity":1,"message":"1167","line":38,"column":29,"nodeType":"966","messageId":"967","endLine":38,"endColumn":47},{"ruleId":"964","severity":1,"message":"1160","line":39,"column":29,"nodeType":"966","messageId":"967","endLine":39,"endColumn":47},{"ruleId":"968","severity":1,"message":"1168","line":90,"column":8,"nodeType":"970","endLine":90,"endColumn":23,"suggestions":"1169"},{"ruleId":"968","severity":1,"message":"1170","line":78,"column":5,"nodeType":"970","endLine":78,"endColumn":32,"suggestions":"1171"},{"ruleId":"968","severity":1,"message":"1172","line":15,"column":8,"nodeType":"970","endLine":15,"endColumn":13,"suggestions":"1173"},{"ruleId":"1110","severity":1,"message":"1111","line":82,"column":40,"nodeType":"1112","messageId":"1113","endLine":82,"endColumn":46},{"ruleId":"964","severity":1,"message":"1159","line":21,"column":5,"nodeType":"966","messageId":"967","endLine":21,"endColumn":30},{"ruleId":"964","severity":1,"message":"1174","line":40,"column":12,"nodeType":"966","messageId":"967","endLine":40,"endColumn":21},{"ruleId":"964","severity":1,"message":"1175","line":86,"column":11,"nodeType":"966","messageId":"967","endLine":86,"endColumn":23},{"ruleId":"968","severity":1,"message":"1176","line":155,"column":5,"nodeType":"970","endLine":155,"endColumn":21,"suggestions":"1177"},{"ruleId":"968","severity":1,"message":"1178","line":280,"column":5,"nodeType":"970","endLine":280,"endColumn":17,"suggestions":"1179"},"no-native-reassign",["1180"],"no-negated-in-lhs",["1181"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStats'. Either include it or remove the dependency array.","ArrayExpression",["1182"],"'useEffect' is defined but never used.","'setResponse' is assigned a value but never used.","'Redirect' is defined but never used.","'getToken' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["1183"],"'activeLink' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["1184"],"'linkSize1' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getLenses', 'getProductsByQuery', and 'products'. Either include them or remove the dependency array.",["1185"],"React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array. You can also do a functional update 'setProduct(p => ...)' if you only need 'product' in the 'setProduct' call.",["1186"],"'data' is assigned a value but never used.","'useState' is defined but never used.","'examSchema' is defined but never used.","'lodash' is defined but never used.","React Hook useEffect has a missing dependency: 'handleRefetch'. Either include it or remove the dependency array.",["1187"],"React Hook useEffect has a missing dependency: 'getProductsByQuery'. Either include it or remove the dependency array.",["1188"],"React Hook useEffect has missing dependencies: 'activeCategoryTypeTab', 'getLenses', 'getProductsByQuery', and 'products'. Either include them or remove the dependency array.",["1189"],"'DeleteButton' is defined but never used.","React Hook useEffect has missing dependencies: 'closeModal' and 'response'. Either include them or remove the dependency array.",["1190"],"React Hook useEffect has missing dependencies: 'activeIndex' and 'refetch'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilterQuery' needs the current value of 'activeIndex'.",["1191"],"'lensObj' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["1192"],"React Hook useEffect has missing dependencies: 'handleChange', 'productObj.lensType', and 'productObj.type'. Either include them or remove the dependency array.",["1193"],"React Hook useEffect has a missing dependency: 'response?.filters'. Either include it or remove the dependency array.",["1194"],"React Hook useEffect has missing dependencies: 'getEanCode' and 'handleChange'. Either include them or remove the dependency array.",["1195"],"React Hook useEffect has missing dependencies: 'getSingleProduct', 'handleChangeType', 'handleSelectImage', 'product.type', and 'productObj.type'. Either include them or remove the dependency array.",["1196"],"React Hook useEffect has a missing dependency: 'setSelectedImage'. Either include it or remove the dependency array.",["1197"],"React Hook useEffect has missing dependencies: 'resetContactLenses', 'resetGlassesParameters', 'resetLenses', 'resetProduct', and 'setSelectedImage'. Either include them or remove the dependency array.",["1198"],"React Hook useEffect has missing dependencies: 'user.fName', 'user.lName', and 'userObj'. Either include them or remove the dependency array. You can also do a functional update 'setUserObj(u => ...)' if you only need 'userObj' in the 'setUserObj' call.",["1199"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["1200"],"React Hook useEffect has missing dependencies: 'handleChange' and 'resetUser'. Either include them or remove the dependency array.",["1201"],"'retailNamesTabs' is defined but never used.","React Hook useEffect has a missing dependency: 'getAnalytics'. Either include it or remove the dependency array.",["1202"],["1203"],"React Hook useEffect has a missing dependency: 'blogsData'. Either include it or remove the dependency array.",["1204"],["1205"],"React Hook useEffect has a missing dependency: 'blogsData.response?.blogs'. Either include it or remove the dependency array.",["1206"],"React Hook useEffect has a missing dependency: 'closeModal'. Either include it or remove the dependency array.",["1207"],"React Hook useEffect has missing dependencies: 'getPost' and 'setSelectedImage'. Either include them or remove the dependency array.",["1208"],"React Hook useEffect has missing dependencies: 'id' and 'setSelectedImage'. Either include them or remove the dependency array.",["1209"],"React Hook useEffect has missing dependencies: 'closeModal' and 'resetBlog'. Either include them or remove the dependency array.",["1210"],"React Hook useEffect has missing dependencies: 'addUser', 'changeStep', 'order', and 'setOrder'. Either include them or remove the dependency array.",["1211"],"React Hook useEffect has missing dependencies: 'addUser' and 'userData.response.user'. Either include them or remove the dependency array.",["1212"],"React Hook useEffect has missing dependencies: 'changeStep' and 'resetOrder'. Either include them or remove the dependency array.",["1213"],"no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","React Hook useEffect has missing dependencies: 'closeModal', 'currentUser.premises', 'handleShowCalendarClick', 'isAdmin', 'response', and 'setShowModal'. Either include them or remove the dependency array.",["1214"],"React Hook useEffect has missing dependencies: 'closeModal' and 'setShowModal'. Either include them or remove the dependency array.",["1215"],"'formatPrice' is defined but never used.","React Hook useEffect has a missing dependency: 'getCoupons'. Either include it or remove the dependency array.",["1216"],"'calendarTimes' is defined but never used.","'formatBreakHours' is defined but never used.","'DeleteCalendarButton' is defined but never used.","'CustomSelect' is defined but never used.","'DisabledDayContainer' is defined but never used.","'deleteCalendar' is assigned a value but never used.","'removeDisbledDay' is assigned a value but never used.","'handleAddNewDisabledDay' is assigned a value but never used.","'handleDisableDayChange' is assigned a value but never used.","'handleAddNewBreak' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'closeModal' and 'response.calendar'. Either include them or remove the dependency array.",["1217"],"'days' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCoupon'. Either include it or remove the dependency array.",["1218"],"React Hook useEffect has a missing dependency: 'resetCoupons'. Either include it or remove the dependency array.",["1219"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["1220","1221"],["1222","1223"],["1224","1225"],"React Hook useEffect has a missing dependency: 'getSlug'. Either include it or remove the dependency array.",["1226"],"React Hook useEffect has missing dependencies: 'path', 'requestOptions', and 'skip'. Either include them or remove the dependency array.",["1227"],"React Hook useEffect has missing dependencies: 'requestOptions' and 'skip'. Either include them or remove the dependency array.",["1228"],["1229"],"'obj' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentPage'. Either include it or remove the dependency array.",["1230"],["1231"],["1232"],["1233"],"React Hook useEffect has a missing dependency: 'response.products'. Either include it or remove the dependency array.",["1234"],"'CustomInput' is defined but never used.","'CustomButton' is defined but never used.","'UploadButton' is defined but never used.","'tab' is assigned a value but never used.","'setTab' is assigned a value but never used.","'files' is assigned a value but never used.","'handleFileInputChange' is assigned a value but never used.","'arr' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'response'. Either include it or remove the dependency array.",["1235"],"'formatAvailable' is defined but never used.","React Hook useEffect has a missing dependency: 'response.lenses'. Either include it or remove the dependency array.",["1236"],"React Hook useEffect has a missing dependency: 'product.outlet'. Either include it or remove the dependency array.",["1237"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["1238"],"React Hook useEffect has a missing dependency: 'product.brand'. Either include it or remove the dependency array.",["1239"],"React Hook useEffect has an unnecessary dependency: 'brands'. Either exclude it or remove the dependency array. Outer scope values like 'brands' aren't valid dependencies because mutating them doesn't re-render the component.",["1240"],["1241"],"'ImageContainer' is defined but never used.","'ProductImage' is defined but never used.",["1242"],"'prevLastDay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'firstDayIndex', 'lastDay', 'lastPrevMonthDay', 'month', 'nextDays', 'response.calendar', and 'year'. Either include them or remove the dependency array.",["1243"],["1244"],"'handleExceptionDays' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'response.calendar.endTimes', 'response.calendar.interval', and 'response.calendar.startTimes'. Either include them or remove the dependency array.",["1245"],["1246"],["1247"],"React Hook useEffect has missing dependencies: 'firstDayIndex', 'lastDay', 'month', 'nextDays', 'response.calendar', and 'year'. Either include them or remove the dependency array.",["1248"],["1249"],["1250"],"React Hook useEffect has a missing dependency: 'getFilteredUsers'. Either include it or remove the dependency array.",["1251"],"React Hook useEffect has missing dependencies: 'getFilteredUsers' and 'users'. Either include them or remove the dependency array.",["1252"],"'holidayDates' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleChange', 'parameters.addition', and 'parameters.diopters'. Either include them or remove the dependency array. If 'handleChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1253"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook useEffect has missing dependencies: 'response?.userBookings' and 'userBookings?.dueDate'. Either include them or remove the dependency array.",["1254"],["1255"],"React Hook useEffect has missing dependencies: 'response' and 'userBooking.userBookings.dueDate'. Either include them or remove the dependency array.",["1256"],"React Hook useEffect has a missing dependency: 'calendar'. Either include it or remove the dependency array. If 'setStartTime' needs the current value of 'calendar', you can also switch to useReducer instead of useState and read 'calendar' in the reducer.",["1257"],["1258"],"React Hook useEffect has a missing dependency: 'response?.booking'. Either include it or remove the dependency array.",["1259"],"'DiscountCheckboxContainer' is defined but never used.","'setIncludeDiscount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleOrderDetailChange'. Either include it or remove the dependency array.",["1260"],["1261"],["1262"],"'EmptyTittle' is defined but never used.","'productDiscount' is assigned a value but never used.","'setProductDiscount' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addLensesParameters' and 'idx'. Either include them or remove the dependency array.",["1263"],"React Hook useEffect has a missing dependency: 'examinationData.response'. Either include it or remove the dependency array.",["1264"],"React Hook useEffect has a missing dependency: 'action'. Either include it or remove the dependency array. If 'action' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1265"],"'hasCoupon' is assigned a value but never used.","'toggleCoupon' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'exam.response' and 'examinationToUpdate'. Either include them or remove the dependency array.",["1266"],"React Hook useEffect has an unnecessary dependency: 'examSchema'. Either exclude it or remove the dependency array. Outer scope values like 'examSchema' aren't valid dependencies because mutating them doesn't re-render the component.",["1267"],"no-global-assign","no-unsafe-negation",{"desc":"1268","fix":"1269"},{"desc":"1270","fix":"1271"},{"desc":"1272","fix":"1273"},{"desc":"1274","fix":"1275"},{"desc":"1276","fix":"1277"},{"desc":"1278","fix":"1279"},{"desc":"1280","fix":"1281"},{"desc":"1282","fix":"1283"},{"desc":"1284","fix":"1285"},{"desc":"1286","fix":"1287"},{"desc":"1288","fix":"1289"},{"desc":"1290","fix":"1291"},{"desc":"1292","fix":"1293"},{"desc":"1294","fix":"1295"},{"desc":"1296","fix":"1297"},{"desc":"1298","fix":"1299"},{"desc":"1300","fix":"1301"},{"desc":"1302","fix":"1303"},{"desc":"1304","fix":"1305"},{"desc":"1306","fix":"1307"},{"desc":"1308","fix":"1309"},{"desc":"1310","fix":"1311"},{"desc":"1312","fix":"1313"},{"desc":"1314","fix":"1315"},{"desc":"1316","fix":"1317"},{"desc":"1318","fix":"1319"},{"desc":"1320","fix":"1321"},{"desc":"1322","fix":"1323"},{"desc":"1324","fix":"1325"},{"desc":"1326","fix":"1327"},{"desc":"1328","fix":"1329"},{"desc":"1330","fix":"1331"},{"desc":"1332","fix":"1333"},{"desc":"1334","fix":"1335"},{"desc":"1336","fix":"1337"},{"desc":"1338","fix":"1339"},{"desc":"1340","fix":"1341"},{"desc":"1342","fix":"1343"},{"messageId":"1344","fix":"1345","desc":"1346"},{"messageId":"1347","fix":"1348","desc":"1349"},{"messageId":"1344","fix":"1350","desc":"1346"},{"messageId":"1347","fix":"1351","desc":"1349"},{"messageId":"1344","fix":"1352","desc":"1346"},{"messageId":"1347","fix":"1353","desc":"1349"},{"desc":"1354","fix":"1355"},{"desc":"1356","fix":"1357"},{"desc":"1358","fix":"1359"},{"desc":"1360","fix":"1361"},{"desc":"1362","fix":"1363"},{"desc":"1364","fix":"1365"},{"desc":"1366","fix":"1367"},{"desc":"1368","fix":"1369"},{"desc":"1370","fix":"1371"},{"desc":"1372","fix":"1373"},{"desc":"1374","fix":"1375"},{"desc":"1376","fix":"1377"},{"desc":"1376","fix":"1378"},{"desc":"1379","fix":"1380"},{"desc":"1381","fix":"1382"},{"desc":"1376","fix":"1383"},{"desc":"1376","fix":"1384"},{"desc":"1385","fix":"1386"},{"desc":"1387","fix":"1388"},{"desc":"1389","fix":"1390"},{"desc":"1387","fix":"1391"},{"desc":"1392","fix":"1393"},{"desc":"1394","fix":"1395"},{"desc":"1374","fix":"1396"},{"desc":"1370","fix":"1397"},{"desc":"1398","fix":"1399"},{"desc":"1400","fix":"1401"},{"desc":"1402","fix":"1403"},{"desc":"1404","fix":"1405"},{"desc":"1406","fix":"1407"},{"desc":"1408","fix":"1409"},{"desc":"1410","fix":"1411"},{"desc":"1410","fix":"1412"},{"desc":"1413","fix":"1414"},{"desc":"1415","fix":"1416"},{"desc":"1302","fix":"1417"},{"desc":"1418","fix":"1419"},{"desc":"1420","fix":"1421"},{"desc":"1422","fix":"1423"},{"desc":"1424","fix":"1425"},{"desc":"1426","fix":"1427"},{"desc":"1428","fix":"1429"},"Update the dependencies array to be: [getStats, token]",{"range":"1430","text":"1431"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"1432","text":"1433"},"Update the dependencies array to be: [user, user?.fName, user?.lName]",{"range":"1434","text":"1435"},"Update the dependencies array to be: [activeCategoryTypeTab, getLenses, getProductsByQuery, products]",{"range":"1436","text":"1437"},"Update the dependencies array to be: [product, product.name]",{"range":"1438","text":"1439"},"Update the dependencies array to be: [searchQuery, activeIndex, handleRefetch]",{"range":"1440","text":"1441"},"Update the dependencies array to be: [getProductsByQuery, products]",{"range":"1442","text":"1443"},"Update the dependencies array to be: [activeCategoryTypeTab, getLenses, getProductsByQuery, products, searchQuery]",{"range":"1444","text":"1445"},"Update the dependencies array to be: [closeModal, isLoading, response]",{"range":"1446","text":"1447"},"Update the dependencies array to be: [activeIndex, refetch, searchQuery]",{"range":"1448","text":"1449"},"Update the dependencies array to be: [productObj?.type, refetch]",{"range":"1450","text":"1451"},"Update the dependencies array to be: [handleChange, lenses?.lensType, productObj.lensType, productObj.type]",{"range":"1452","text":"1453"},"Update the dependencies array to be: [isLoadingFilters, response?.filters]",{"range":"1454","text":"1455"},"Update the dependencies array to be: [id, eanCode, productObj.type, productObj.eanCode, product.type, getEanCode, handleChange]",{"range":"1456","text":"1457"},"Update the dependencies array to be: [getSingleProduct, handleChangeType, handleSelectImage, id, product.type, productObj.type]",{"range":"1458","text":"1459"},"Update the dependencies array to be: [lenses.image, setSelectedImage]",{"range":"1460","text":"1461"},"Update the dependencies array to be: [resetContactLenses, resetGlassesParameters, resetLenses, resetProduct, setSelectedImage]",{"range":"1462","text":"1463"},"Update the dependencies array to be: [user.fName, user.lName, userObj, userObj.fName, userObj.lName]",{"range":"1464","text":"1465"},"Update the dependencies array to be: [getUser, id]",{"range":"1466","text":"1467"},"Update the dependencies array to be: [handleChange, resetUser]",{"range":"1468","text":"1469"},"Update the dependencies array to be: [fitlterQuery, getAnalytics]",{"range":"1470","text":"1471"},"Update the dependencies array to be: [activeIndex, getAnalytics, refetchIndex]",{"range":"1472","text":"1473"},"Update the dependencies array to be: [blogsData, searchQuery]",{"range":"1474","text":"1475"},"Update the dependencies array to be: [activeIndex, blogsData]",{"range":"1476","text":"1477"},"Update the dependencies array to be: [blogsData.isLoading, blogsData.response?.blogs]",{"range":"1478","text":"1479"},"Update the dependencies array to be: [closeModal]",{"range":"1480","text":"1481"},"Update the dependencies array to be: [getPost, id, setSelectedImage]",{"range":"1482","text":"1483"},"Update the dependencies array to be: [id, post, setSelectedImage]",{"range":"1484","text":"1485"},"Update the dependencies array to be: [closeModal, resetBlog]",{"range":"1486","text":"1487"},"Update the dependencies array to be: [userId, orderId, userData.response, orderData.response, changeStep, addUser, setOrder, order]",{"range":"1488","text":"1489"},"Update the dependencies array to be: [addUser, userData.isLoading, userData.response.user]",{"range":"1490","text":"1491"},"Update the dependencies array to be: [changeStep, resetOrder]",{"range":"1492","text":"1493"},"Update the dependencies array to be: [closeModal, currentUser.premises, handleShowCalendarClick, isAdmin, isLoading, response, setShowModal]",{"range":"1494","text":"1495"},"Update the dependencies array to be: [closeModal, setShowModal]",{"range":"1496","text":"1497"},"Update the dependencies array to be: [coupons, getCoupons]",{"range":"1498","text":"1499"},"Update the dependencies array to be: [closeModal, isFetching, response.calendar]",{"range":"1500","text":"1501"},"Update the dependencies array to be: [couponId, getCoupon]",{"range":"1502","text":"1503"},"Update the dependencies array to be: [resetCoupons]",{"range":"1504","text":"1505"},"removeEscape",{"range":"1506","text":"1507"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1508","text":"1509"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1510","text":"1507"},{"range":"1511","text":"1509"},{"range":"1512","text":"1507"},{"range":"1513","text":"1509"},"Update the dependencies array to be: [getSlug, string]",{"range":"1514","text":"1515"},"Update the dependencies array to be: [path, refetchIndex, requestOptions, skip]",{"range":"1516","text":"1517"},"Update the dependencies array to be: [refetchIndex, path, skip, requestOptions]",{"range":"1518","text":"1519"},"Update the dependencies array to be: [refetchIndex, path, id, skip, requestOptions]",{"range":"1520","text":"1521"},"Update the dependencies array to be: [currentPage, listItems]",{"range":"1522","text":"1523"},"Update the dependencies array to be: [currentPage, handleClickPrev]",{"range":"1524","text":"1525"},"Update the dependencies array to be: [filter?.filters?.type, refetch]",{"range":"1526","text":"1527"},"Update the dependencies array to be: [isLoading, response?.filters]",{"range":"1528","text":"1529"},"Update the dependencies array to be: [isLoading, response.products]",{"range":"1530","text":"1531"},"Update the dependencies array to be: [isLoading, response]",{"range":"1532","text":"1533"},"Update the dependencies array to be: [isLoading, response.lenses]",{"range":"1534","text":"1535"},"Update the dependencies array to be: [isOutlet, product.outlet]",{"range":"1536","text":"1537"},{"range":"1538","text":"1537"},"Update the dependencies array to be: [isBranded, product.brand]",{"range":"1539","text":"1540"},"Update the dependencies array to be: [filters?.brands]",{"range":"1541","text":"1542"},{"range":"1543","text":"1537"},{"range":"1544","text":"1537"},"Update the dependencies array to be: [firstDayIndex, isLoading, lastDay, lastPrevMonthDay, month, nextDays, response.calendar, year]",{"range":"1545","text":"1546"},"Update the dependencies array to be: [month, refetch]",{"range":"1547","text":"1548"},"Update the dependencies array to be: [isLoading, response.calendar.endTimes, response.calendar.interval, response.calendar.startTimes]",{"range":"1549","text":"1550"},{"range":"1551","text":"1548"},"Update the dependencies array to be: [calendar, refetch]",{"range":"1552","text":"1553"},"Update the dependencies array to be: [firstDayIndex, isLoading, lastDay, month, nextDays, response.calendar, year]",{"range":"1554","text":"1555"},{"range":"1556","text":"1535"},{"range":"1557","text":"1531"},"Update the dependencies array to be: [getFilteredUsers, users]",{"range":"1558","text":"1559"},"Update the dependencies array to be: [getFilteredUsers, searchQuery, users]",{"range":"1560","text":"1561"},"Update the dependencies array to be: [handleChange, parameters.addition, parameters.diopters]",{"range":"1562","text":"1563"},"Update the dependencies array to be: [isLoading, response?.userBookings, userBookings?.dueDate]",{"range":"1564","text":"1565"},"Update the dependencies array to be: [dayData?.bookingDate, refetch]",{"range":"1566","text":"1567"},"Update the dependencies array to be: [isLoading, response, userBooking.userBookings.dueDate]",{"range":"1568","text":"1569"},"Update the dependencies array to be: [calendar, day]",{"range":"1570","text":"1571"},{"range":"1572","text":"1571"},"Update the dependencies array to be: [selectedBooking, isLoading, response?.booking]",{"range":"1573","text":"1574"},"Update the dependencies array to be: [handleOrderDetailChange, isUpdating, order]",{"range":"1575","text":"1576"},{"range":"1577","text":"1465"},"Update the dependencies array to be: [getUser, userId]",{"range":"1578","text":"1579"},"Update the dependencies array to be: [addLensesParameters, contactLenses, idx]",{"range":"1580","text":"1581"},"Update the dependencies array to be: [examinationData.isLoading, examinationData.response]",{"range":"1582","text":"1583"},"Update the dependencies array to be: [action, ref]",{"range":"1584","text":"1585"},"Update the dependencies array to be: [exam.isLoading, exam.response, examinationToUpdate]",{"range":"1586","text":"1587"},"Update the dependencies array to be: []",{"range":"1588","text":"1589"},[6770,6777],"[getStats, token]",[937,954],"[history, isAuthenticated]",[3373,3399],"[user, user?.fName, user?.lName]",[28400,28423],"[activeCategoryTypeTab, getLenses, getProductsByQuery, products]",[29167,29181],"[product, product.name]",[3456,3482],"[searchQuery, activeIndex, handleRefetch]",[3522,3532],"[getProductsByQuery, products]",[3839,3852],"[activeCategoryTypeTab, getLenses, getProductsByQuery, products, searchQuery]",[2982,2993],"[closeModal, isLoading, response]",[3345,3358],"[activeIndex, refetch, searchQuery]",[15003,15021],"[productObj?.type, refetch]",[15312,15329],"[handleChange, lenses?.lensType, productObj.lensType, productObj.type]",[15483,15501],"[isLoadingFilters, response?.filters]",[15972,16036],"[id, eanCode, productObj.type, productObj.eanCode, product.type, getEanCode, handleChange]",[16815,16820],"[getSingleProduct, handleChangeType, handleSelectImage, id, product.type, productObj.type]",[17025,17039],"[lenses.image, setSelectedImage]",[17325,17327],"[resetContactLenses, resetGlassesParameters, resetLenses, resetProduct, setSelectedImage]",[3414,3444],"[user.fName, user.lName, userObj, userObj.fName, userObj.lName]",[3521,3525],"[getUser, id]",[4015,4017],"[handleChange, resetUser]",[4810,4824],"[fitlterQuery, getAnalytics]",[5019,5046],"[activeIndex, getAnalytics, refetchIndex]",[2392,2405],"[blogsData, searchQuery]",[2908,2921],"[activeIndex, blogsData]",[3047,3068],"[blogsData.isLoading, blogsData.response?.blogs]",[3389,3391],"[closeModal]",[2867,2871],"[getPost, id, setSelectedImage]",[3299,3305],"[id, post, setSelectedImage]",[3624,3626],"[closeModal, resetBlog]",[3029,3085],"[userId, orderId, userData.response, orderData.response, changeStep, addUser, setOrder, order]",[3178,3198],"[addUser, userData.isLoading, userData.response.user]",[3340,3342],"[changeStep, resetOrder]",[7654,7665],"[closeModal, currentUser.premises, handleShowCalendarClick, isAdmin, isLoading, response, setShowModal]",[8108,8110],"[closeModal, setShowModal]",[1242,1251],"[coupons, getCoupons]",[12475,12487],"[closeModal, isFetching, response.calendar]",[1255,1265],"[couponId, getCoupon]",[1357,1359],"[resetCoupons]",[684,685],"",[684,684],"\\",[752,753],[752,752],[754,755],[754,754],[1012,1020],"[getSlug, string]",[1192,1206],"[path, refetchIndex, requestOptions, skip]",[2507,2527],"[refetchIndex, path, skip, requestOptions]",[3754,3778],"[refetchIndex, path, id, skip, requestOptions]",[694,705],"[currentPage, listItems]",[1003,1020],"[currentPage, handleClickPrev]",[1945,1968],"[filter?.filters?.type, refetch]",[2115,2126],"[isLoading, response?.filters]",[3539,3550],"[isLoading, response.products]",[2686,2697],"[isLoading, response]",[2013,2024],"[isLoading, response.lenses]",[1095,1105],"[isOutlet, product.outlet]",[1848,1858],[1942,1953],"[isBranded, product.brand]",[2058,2083],"[filters?.brands]",[1380,1390],[917,927],[3269,3280],"[firstDayIndex, isLoading, lastDay, lastPrevMonthDay, month, nextDays, response.calendar, year]",[3330,3337],"[month, refetch]",[17767,17778],"[isLoading, response.calendar.endTimes, response.calendar.interval, response.calendar.startTimes]",[1086,1093],[1181,1191],"[calendar, refetch]",[1722,1733],"[firstDayIndex, isLoading, lastDay, month, nextDays, response.calendar, year]",[1919,1930],[1912,1923],[1580,1587],"[getFilteredUsers, users]",[1908,1921],"[getFilteredUsers, searchQuery, users]",[3063,3159],"[handleChange, parameters.addition, parameters.diopters]",[1662,1673],"[isLoading, response?.userBookings, userBookings?.dueDate]",[1765,1787],"[dayData?.bookingDate, refetch]",[1300,1311],"[isLoading, response, userBooking.userBookings.dueDate]",[3056,3061],"[calendar, day]",[4890,4895],[1978,2006],"[selectedBooking, isLoading, response?.booking]",[4845,4864],"[handleOrderDetailChange, isUpdating, order]",[3022,3052],[3144,3152],"[getUser, userId]",[2374,2389],"[addLensesParameters, contactLenses, idx]",[1969,1996],"[examinationData.isLoading, examinationData.response]",[467,472],"[action, ref]",[3343,3359],"[exam.isLoading, exam.response, examinationToUpdate]",[6116,6128],"[]"]
[{"/imooptik-frontend/src/index.js":"1","/imooptik-frontend/src/reportWebVitals.js":"2","/imooptik-frontend/src/App.jsx":"3","/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx":"4","/imooptik-frontend/src/context/auth/auth.context.jsx":"5","/imooptik-frontend/src/global.styles.jsx":"6","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx":"7","/imooptik-frontend/src/pages/reset-password/reset-password.jsx":"8","/imooptik-frontend/src/pages/dashboard/dashboard.jsx":"9","/imooptik-frontend/src/context/auth/auth.queries.jsx":"10","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx":"11","/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx":"12","/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx":"13","/imooptik-frontend/src/context/user/user.context.jsx":"14","/imooptik-frontend/src/context/blog/blog.context.jsx":"15","/imooptik-frontend/src/context/warehouse/warehouse.context.jsx":"16","/imooptik-frontend/src/context/image/image.context.jsx":"17","/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx":"18","/imooptik-frontend/src/components/custom-input/custom-input.component.jsx":"19","/imooptik-frontend/src/components/sign-up/sign-up.component.jsx":"20","/imooptik-frontend/src/components/popup/pop-up.component.jsx":"21","/imooptik-frontend/src/components/sidenav/sidenav.component.jsx":"22","/imooptik-frontend/src/components/sign-in/sign-in.component.jsx":"23","/imooptik-frontend/src/sections/customers/customers.section.jsx":"24","/imooptik-frontend/src/sections/warehouse/warehouse.section.jsx":"25","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx":"26","/imooptik-frontend/src/sections/analytics/analytics.section.jsx":"27","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx":"28","/imooptik-frontend/src/sections/orders/orders.section.jsx":"29","/imooptik-frontend/src/sections/product/product.section.jsx":"30","/imooptik-frontend/src/sections/booking/booking.section.jsx":"31","/imooptik-frontend/src/sections/post/post.section.jsx":"32","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx":"33","/imooptik-frontend/src/components/custom-button/custom-button.component.jsx":"34","/imooptik-frontend/src/context/user/user.queries.jsx":"35","/imooptik-frontend/src/context/blog/blog.queries.jsx":"36","/imooptik-frontend/src/context/warehouse/warehouse.queries.jsx":"37","/imooptik-frontend/src/context/image/image.queries.jsx":"38","/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx":"39","/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx":"40","/imooptik-frontend/src/components/sign-up/sign-up.styles.jsx":"41","/imooptik-frontend/src/components/popup/pop.up.styles.jsx":"42","/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx":"43","/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx":"44","/imooptik-frontend/src/sections/customers/customers.styles.jsx":"45","/imooptik-frontend/src/sections/analytics/analytics.styles.jsx":"46","/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx":"47","/imooptik-frontend/src/sections/product/product.styles.jsx":"48","/imooptik-frontend/src/sections/booking/booking.styles.jsx":"49","/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx":"50","/imooptik-frontend/src/sections/post/post.styles.jsx":"51","/imooptik-frontend/src/components/spinner/spinner.component.jsx":"52","/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx":"53","/imooptik-frontend/src/components/product-overview/product-overview.component.jsx":"54","/imooptik-frontend/src/components/section-header/section-header.component.jsx":"55","/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx":"56","/imooptik-frontend/src/components/order-overview/order-overview.component.jsx":"57","/imooptik-frontend/src/components/modal-images/modal-images.component.jsx":"58","/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx":"59","/imooptik-frontend/src/components/calendar/calendar.component.jsx":"60","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx":"61","/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx":"62","/imooptik-frontend/src/components/spinner/spinner.styles.jsx":"63","/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx":"64","/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx":"65","/imooptik-frontend/src/components/section-header/section-header.styles.jsx":"66","/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx":"67","/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx":"68","/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx":"69","/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx":"70","/imooptik-frontend/src/components/calendar/calendar.styles.jsx":"71","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx":"72"},{"size":717,"mtime":1608670306490,"results":"73","hashOfConfig":"74"},{"size":362,"mtime":1608191294784,"results":"75","hashOfConfig":"74"},{"size":1154,"mtime":1608612984661,"results":"76","hashOfConfig":"74"},{"size":1074,"mtime":1608670205650,"results":"77","hashOfConfig":"74"},{"size":5236,"mtime":1609280461052,"results":"78","hashOfConfig":"74"},{"size":693,"mtime":1608402661940,"results":"79","hashOfConfig":"74"},{"size":1274,"mtime":1608611535701,"results":"80","hashOfConfig":"74"},{"size":1667,"mtime":1608613259561,"results":"81","hashOfConfig":"74"},{"size":3919,"mtime":1608689949010,"results":"82","hashOfConfig":"74"},{"size":2272,"mtime":1609280380632,"results":"83","hashOfConfig":"74"},{"size":506,"mtime":1608208021900,"results":"84","hashOfConfig":"74"},{"size":731,"mtime":1608613281121,"results":"85","hashOfConfig":"74"},{"size":319,"mtime":1608201963370,"results":"86","hashOfConfig":"74"},{"size":2576,"mtime":1608664140760,"results":"87","hashOfConfig":"74"},{"size":3645,"mtime":1608679620390,"results":"88","hashOfConfig":"74"},{"size":3653,"mtime":1608690280080,"results":"89","hashOfConfig":"74"},{"size":2755,"mtime":1609289023852,"results":"90","hashOfConfig":"74"},{"size":1600,"mtime":1608611960651,"results":"91","hashOfConfig":"74"},{"size":639,"mtime":1608689089980,"results":"92","hashOfConfig":"74"},{"size":2166,"mtime":1608611505451,"results":"93","hashOfConfig":"74"},{"size":623,"mtime":1608409947760,"results":"94","hashOfConfig":"74"},{"size":1218,"mtime":1609281025312,"results":"95","hashOfConfig":"74"},{"size":2000,"mtime":1608670719540,"results":"96","hashOfConfig":"74"},{"size":2466,"mtime":1608663843770,"results":"97","hashOfConfig":"74"},{"size":2241,"mtime":1608688966830,"results":"98","hashOfConfig":"74"},{"size":2912,"mtime":1609175876567,"results":"99","hashOfConfig":"74"},{"size":1381,"mtime":1608483136504,"results":"100","hashOfConfig":"74"},{"size":16495,"mtime":1608675278080,"results":"101","hashOfConfig":"74"},{"size":2125,"mtime":1609172793237,"results":"102","hashOfConfig":"74"},{"size":12416,"mtime":1609289205242,"results":"103","hashOfConfig":"74"},{"size":5026,"mtime":1608517961460,"results":"104","hashOfConfig":"74"},{"size":9085,"mtime":1609171863307,"results":"105","hashOfConfig":"74"},{"size":3014,"mtime":1609143069962,"results":"106","hashOfConfig":"74"},{"size":283,"mtime":1608325857586,"results":"107","hashOfConfig":"74"},{"size":676,"mtime":1608665458520,"results":"108","hashOfConfig":"74"},{"size":1793,"mtime":1608678905090,"results":"109","hashOfConfig":"74"},{"size":2918,"mtime":1608689623670,"results":"110","hashOfConfig":"74"},{"size":993,"mtime":1608678912060,"results":"111","hashOfConfig":"74"},{"size":1086,"mtime":1608674767050,"results":"112","hashOfConfig":"74"},{"size":1108,"mtime":1608686399650,"results":"113","hashOfConfig":"74"},{"size":822,"mtime":1608674741820,"results":"114","hashOfConfig":"74"},{"size":663,"mtime":1608431471590,"results":"115","hashOfConfig":"74"},{"size":1094,"mtime":1608674753120,"results":"116","hashOfConfig":"74"},{"size":4535,"mtime":1609341495120,"results":"117","hashOfConfig":"74"},{"size":953,"mtime":1608392061260,"results":"118","hashOfConfig":"74"},{"size":753,"mtime":1608501615800,"results":"119","hashOfConfig":"74"},{"size":1591,"mtime":1608674947490,"results":"120","hashOfConfig":"74"},{"size":2154,"mtime":1609289225052,"results":"121","hashOfConfig":"74"},{"size":1950,"mtime":1608517994360,"results":"122","hashOfConfig":"74"},{"size":1048,"mtime":1608651274551,"results":"123","hashOfConfig":"74"},{"size":1345,"mtime":1609172983547,"results":"124","hashOfConfig":"74"},{"size":178,"mtime":1608409397640,"results":"125","hashOfConfig":"74"},{"size":241,"mtime":1608402129090,"results":"126","hashOfConfig":"74"},{"size":1172,"mtime":1608687841160,"results":"127","hashOfConfig":"74"},{"size":1063,"mtime":1608668604420,"results":"128","hashOfConfig":"74"},{"size":624,"mtime":1609280754422,"results":"129","hashOfConfig":"74"},{"size":819,"mtime":1608478620604,"results":"130","hashOfConfig":"74"},{"size":1908,"mtime":1608691458510,"results":"131","hashOfConfig":"74"},{"size":651,"mtime":1608506295620,"results":"132","hashOfConfig":"74"},{"size":1374,"mtime":1608696113560,"results":"133","hashOfConfig":"74"},{"size":354,"mtime":1609286026892,"results":"134","hashOfConfig":"74"},{"size":334,"mtime":1608391921750,"results":"135","hashOfConfig":"74"},{"size":377,"mtime":1608409635720,"results":"136","hashOfConfig":"74"},{"size":342,"mtime":1609172821857,"results":"137","hashOfConfig":"74"},{"size":1322,"mtime":1608681129610,"results":"138","hashOfConfig":"74"},{"size":902,"mtime":1608674842490,"results":"139","hashOfConfig":"74"},{"size":718,"mtime":1608401951890,"results":"140","hashOfConfig":"74"},{"size":2276,"mtime":1608666415010,"results":"141","hashOfConfig":"74"},{"size":1062,"mtime":1608505999020,"results":"142","hashOfConfig":"74"},{"size":1043,"mtime":1608478499994,"results":"143","hashOfConfig":"74"},{"size":767,"mtime":1608686624820,"results":"144","hashOfConfig":"74"},{"size":448,"mtime":1609285979942,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"1lk1amn",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"148"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"148"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"148"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"148"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"148"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"148"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"148"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"148"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"148"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"148"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"/imooptik-frontend/src/index.js",[],["301","302"],"/imooptik-frontend/src/reportWebVitals.js",[],"/imooptik-frontend/src/App.jsx",[],"/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx",[],"/imooptik-frontend/src/context/auth/auth.context.jsx",[],"/imooptik-frontend/src/global.styles.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset-password.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.jsx",[],"/imooptik-frontend/src/context/auth/auth.queries.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx",[],"/imooptik-frontend/src/context/user/user.context.jsx",[],"/imooptik-frontend/src/context/blog/blog.context.jsx",["303","304","305"],"import React, { createContext, useState, useContext } from 'react'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport {\n    fetchPosts,\n    uploadImage,\n    createNewPost,\n    fetchImages,\n    fetchSinglePost,\n    updatePost,\n    deletePost,\n    deleteImage\n} from './blog.queries'\n\n\nexport const BlogContext = createContext({\n    posts: null,\n    post: null,\n    postsCount: 0,\n    getPosts: () => { },\n    createPost: () => { },\n    getPost: () => { },\n    handlePostUpdate: () => { },\n    handlePostDelete: () => { },\n})\n\nconst BlogProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const [posts, setPosts] = useState(null)\n    const [post, setPost] = useState(null)\n    const [postsCount, setPostsCount] = useState(0)\n\n    const getPosts = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const response = await fetchPosts()\n        const data = await response.json()\n        setPosts(data.blogs)\n        setPostsCount(data.count)\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const getPost = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const response = await fetchSinglePost(id)\n        const data = await response.json()\n        if (data.blog) {\n            setPost(data.blog)\n            closeModal()\n        }\n        // setPosts(data.blogs)\n        // setPostsCount(data.count)\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const createPost = async (img, name, description, draft, html) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await createNewPost(token, name, description, draft, html, img)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostUpdate = async (name, description, draft, html, img, id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await updatePost(token, name, description, draft, html, img, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostDelete = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await deletePost(token, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <BlogContext.Provider\n            value={{\n                posts,\n                post,\n                postsCount,\n                getPosts,\n                createPost,\n                getPost,\n                handlePostUpdate,\n                handlePostDelete,\n            }}\n        >\n            {children}\n        </BlogContext.Provider>\n    )\n}\n\nexport default BlogProvider","/imooptik-frontend/src/context/warehouse/warehouse.context.jsx",[],"/imooptik-frontend/src/context/image/image.context.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.component.jsx",[],"/imooptik-frontend/src/components/sign-up/sign-up.component.jsx",[],"/imooptik-frontend/src/components/popup/pop-up.component.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.component.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.component.jsx",[],"/imooptik-frontend/src/sections/customers/customers.section.jsx",["306"],"import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { UserContext } from '../../context/user/user.context'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    CustomerContainer,\n    Content,\n    Options,\n    ProductId,\n    Description,\n    UpdateButton,\n    DeleteButton\n} from './customers.styles'\n\nconst CustomersSection = () => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n\n    const {\n        users,\n        totalCount,\n        isLoading,\n        message,\n        showModal,\n        getUsers,\n        closeModal\n    } = useContext(UserContext)\n\n    useEffect(() => {\n        if (!users) {\n            getUsers()\n        }\n    }, [users])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('zakaznici/novy-zakaznik')}\n                count={totalCount}\n                title=\"Zákazníci\"\n            />\n\n            <ScrollContainer>\n                {\n                    users && users.map(user => (\n                        <CustomerContainer key={user._id}>\n                            <Content>\n                                <h2>{user.name || user.email}</h2>\n                                <ProductId>{user._id}</ProductId>\n                                <Description>Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion daikon amaranth tatsoi...</Description>\n                            </Content>\n\n                            <Options>\n                                <UpdateButton onClick={() => push(`zakaznici/${user._id}`)}>\n                                    Upraviť\n                        </UpdateButton>\n                                <DeleteButton>\n                                    Vymazať\n                        </DeleteButton>\n                            </Options>\n                        </CustomerContainer>\n                    ))\n                }\n\n            </ScrollContainer>\n\n        </section>\n    )\n}\n\nexport default CustomersSection\n","/imooptik-frontend/src/sections/warehouse/warehouse.section.jsx",["307"],"import React, { useState, useContext, useEffect } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { useHistory } from 'react-router-dom'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ProductOverview from '../../components/product-overview/product-overview.component'\nimport Popup from '../../components/popup/pop-up.component'\n\n\nconst WarehouseSection = () => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n    const {\n        isLoading,\n        showModal,\n        message,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        products,\n        getProducts,\n        handleProductDelete\n    } = useContext(WarehouseContext)\n\n    useEffect(() => {\n        if (!products) {\n            getProducts()\n        }\n    }, [products])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('sklad/novy-produkt')}\n                title=\"Sklad\"\n            />\n\n            <ScrollContainer>\n                {\n                    products && products.map(product => (\n                        <ProductOverview\n                            key={product._id}\n                            name={product.name}\n                            stock={product.available[0]}\n                            id={product._id}\n                            price={(product.price / 100).toFixed(2)}\n                            image={product.image}\n                            handleUpdateButton={() => push(`sklad/${product._id}`)}\n                            handleDeleteButton={() => handleProductDelete(product._id)}\n                        />\n                    ))\n                }\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default WarehouseSection\n","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx",["308"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../..//context/auth/auth.context'\n\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ProductOverview from '../../components/product-overview/product-overview.component'\n\nconst EshopSection = () => {\n    const { currentUser } = useContext(AuthContext)\n\n    const [searchQuery, setSearchQuery] = useState('')\n    const items = [\n        {\n            id: 1,\n            name: \"Všetko\",\n            permission: 4,\n        },\n        {\n            id: 2,\n            name: \"Prevádzka 1\",\n            permission: 1,\n        },\n        {\n            id: 3,\n            name: \"Prevádzka 2\",\n            permission: 2,\n        },\n        {\n            id: 4,\n            name: \"Prevádzka 3\",\n            permission: 3,\n        },\n        {\n            id: 5,\n            name: \"Prevádzka 4\",\n            permission: 4,\n        },\n    ]\n\n\n\n\n    const filteredItems = items.filter(item => item.permission === currentUser.admin || currentUser.admin === 4)\n\n    const [activeIndex, setActiveIndex] = useState(2)\n\n    useEffect(() => {\n        setActiveIndex(filteredItems[0].id)\n    }, [])\n\n    return (\n        <section>\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                title=\"E-shop\"\n            />\n\n            <SectionNavbar\n                items={filteredItems}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            {/* Products container */}\n            <ScrollContainer>\n                <ProductOverview\n                    name='Product name'\n                    stock='[x]'\n                    id='[productId]'\n                    price='99.99'\n                />\n                <ProductOverview\n                    name='Product name'\n                    stock='[x]'\n                    id='[productId]'\n                    price='99.99'\n                />\n                <ProductOverview\n                    name='Product name'\n                    stock='[x]'\n                    id='[productId]'\n                    price='99.99'\n                />\n                <ProductOverview\n                    name='Product name'\n                    stock='[x]'\n                    id='[productId]'\n                    price='99.99'\n                />\n                <ProductOverview\n                    name='Product name'\n                    stock='[x]'\n                    id='[productId]'\n                    price='99.99'\n                />\n            </ScrollContainer>\n        </section >\n    )\n}\n\nexport default EshopSection\n","/imooptik-frontend/src/sections/analytics/analytics.section.jsx",[],"/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx",["309","310","311"],"import React, { useState, useContext, useEffect } from 'react'\nimport { UserContext } from '../../context/user/user.context'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport OrderOverview from '../../components/order-overview/order-overview.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    Profile,\n    DeleteProfileButton,\n    Name,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    SaveButton,\n    Title,\n    Container\n} from './customer-profile.styles'\n\nconst CustomerProfile = () => {\n    const {\n        user,\n        getUser,\n        closeModal,\n        isLoading,\n        showModal,\n        message\n    } = useContext(UserContext)\n    const { id } = useParams()\n    const { push } = useHistory()\n\n    const [fName, setFName] = useState('')\n    const [lName, setLName] = useState('')\n\n    const [email, setEmail] = useState('')\n    const [phoneNumber, setPhoneNumber] = useState('')\n\n    const [street, setStreet] = useState('')\n    const [psc, setPsc] = useState('')\n    const [city, setCity] = useState('')\n    const [state, setState] = useState('')\n\n    const [dLeftEye, setDLeftEye] = useState('')\n    const [dRightEye, setDRightEye] = useState('')\n\n    const [rLeftEye, setRLeftEye] = useState('')\n    const [rRightEye, setRRightEye] = useState('')\n\n    const [cLeftEye, setCLeftEye] = useState('')\n    const [cRightEye, setCRightEye] = useState('')\n\n    const [ocLeftEye, setOcLeftEye] = useState('')\n    const [ocRightEye, setOcRightEye] = useState('')\n\n    console.log(id)\n    console.log(user)\n\n    useEffect(() => {\n        if (id === 'novy-zakaznik') return\n        getUser(id)\n    }, [id])\n\n    useEffect(() => {\n        if (user) {\n            if (user.name) {\n                setFName(user.name.split(\" \")[0] || '')\n                setLName(user.name.split(\" \")[1] || '')\n            }\n            setEmail(user.email || '')\n            setPhoneNumber(user.phone || '')\n            setStreet(user.address || '')\n            setPsc(user.psc || '')\n            setCity(user.city || '')\n            setState(user.country || '')\n\n            if (user.lenses.diopters.length > 0) {\n                setDLeftEye(user.lenses.diopters[0] || '')\n                setDRightEye(user.lenses.diopters[1] || '')\n            }\n            if (user.lenses.distance.length > 0) {\n                setRLeftEye(user.lenses.distance[0] || '')\n                setRRightEye(user.lenses.distance[1] || '')\n\n            }\n            if (user.lenses.cylinder.length > 0) {\n                setCLeftEye(user.lenses.cylinder[0] || '')\n                setCRightEye(user.lenses.cylinder[1] || '')\n            }\n            if (user.lenses.cylinderAxes.length > 0) {\n                setOcLeftEye(user.lenses.cylinderAxes[0] || '')\n                setOcRightEye(user.lenses.cylinderAxes[1] || '')\n            }\n        }\n        return () => {\n            setFName('')\n            setLName('')\n\n            setEmail('')\n            setPhoneNumber('')\n\n            setStreet('')\n            setPsc('')\n            setCity('')\n            setState('')\n\n            setDLeftEye('')\n            setDRightEye('')\n\n            setRLeftEye('')\n            setRRightEye('')\n\n            setCLeftEye('')\n            setCRightEye('')\n\n            setOcLeftEye('')\n            setOcRightEye('')\n        }\n    }, [user])\n\n    useEffect(() => {\n        if (id === 'novy-zakaznik') {\n            setFName('')\n            setLName('')\n\n            setEmail('')\n            setPhoneNumber('')\n\n            setStreet('')\n            setPsc('')\n            setCity('')\n            setState('')\n\n            setDLeftEye('')\n            setDRightEye('')\n\n            setRLeftEye('')\n            setRRightEye('')\n\n            setCLeftEye('')\n            setCRightEye('')\n\n            setOcLeftEye('')\n            setOcRightEye('')\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n\n            <Header>\n                <Name>Profil</Name>\n                <div>\n                    <DeleteProfileButton>Vymazať</DeleteProfileButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                <GridContainer>\n                    <Profile>\n                        <div>\n                            <h2>Informácie</h2>\n                            <GridRow>\n                                <div>\n                                    <CustomInput\n                                        label=\"Meno\"\n                                        type='text'\n                                        name='fname'\n                                        value={fName}\n                                        handleChange={(e) => setFName(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Priezvisko\"\n                                        type='text'\n                                        name='lname'\n                                        value={lName}\n                                        handleChange={(e) => setLName(e.target.value)}\n                                    />\n                                </div>\n                            </GridRow>\n                        </div>\n\n                        <Container>\n                            <h2>Kontaktné údaje</h2>\n                            <Row>\n                                <div>\n                                    <CustomInput\n                                        label=\"E-mail\"\n                                        type='email'\n                                        name='email'\n                                        value={email}\n                                        handleChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Telefónne číslo\"\n                                        type='text'\n                                        name='phone'\n                                        value={phoneNumber}\n                                        handleChange={(e) => setPhoneNumber(e.target.value)}\n                                    />\n                                </div>\n                            </Row>\n                        </Container>\n\n                        <Container>\n                            <h2>Fakturačné údaje</h2>\n                            <GridRow>\n                                <ZeroMargin>\n                                    <CustomInput\n                                        label=\"Ulica a čislo domu\"\n                                        type='text'\n                                        name='street'\n                                        value={street}\n                                        handleChange={(e) => setStreet(e.target.value)}\n                                    />\n                                </ZeroMargin>\n                                <ZeroMargin>\n                                    <CustomInput\n                                        label=\"PSČ\"\n                                        type='text'\n                                        name='psc'\n                                        value={psc}\n                                        handleChange={(e) => setPsc(e.target.value)}\n                                    />\n                                </ZeroMargin>\n                            </GridRow>\n                            <GridRow>\n                                <div>\n                                    <CustomInput\n                                        label=\"Mesto\"\n                                        type='text'\n                                        name='city'\n                                        value={city}\n                                        handleChange={(e) => setCity(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Krajina\"\n                                        type='text'\n                                        name='state'\n                                        value={state}\n                                        handleChange={(e) => setState(e.target.value)}\n                                    />\n                                </div>\n                            </GridRow>\n                        </Container>\n\n                        <Container>\n                            <h2>Parametre</h2>\n\n                            <ThreeColRow>\n                                <div>\n                                    Dioptrie\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Ľavé oko\"\n                                        type='text'\n                                        name='city'\n                                        value={dLeftEye}\n                                        handleChange={(e) => setDLeftEye(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Pravé oko\"\n                                        type='text'\n                                        name='state'\n                                        value={dRightEye}\n                                        handleChange={(e) => setDRightEye(e.target.value)}\n                                    />\n                                </div>\n                            </ThreeColRow>\n\n                            <ThreeColRow>\n                                <div>\n                                    Vzdialenosť\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Ľavé oko\"\n                                        type='text'\n                                        name='city'\n                                        value={rLeftEye}\n                                        handleChange={(e) => setRLeftEye(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Pravé oko\"\n                                        type='text'\n                                        name='state'\n                                        value={rRightEye}\n                                        handleChange={(e) => setRRightEye(e.target.value)}\n                                    />\n                                </div>\n                            </ThreeColRow>\n\n                            <ThreeColRow>\n                                <div>\n                                    Cylinder\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Ľavé oko\"\n                                        type='text'\n                                        name='city'\n                                        value={cLeftEye}\n                                        handleChange={(e) => setCLeftEye(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Pravé oko\"\n                                        type='text'\n                                        name='state'\n                                        value={cRightEye}\n                                        handleChange={(e) => setCRightEye(e.target.value)}\n                                    />\n                                </div>\n                            </ThreeColRow>\n\n                            <ThreeColRow>\n                                <div>\n                                    Os cylindrov\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Ľavé oko\"\n                                        type='text'\n                                        name='city'\n                                        value={ocLeftEye}\n                                        handleChange={(e) => setOcLeftEye(e.target.value)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Pravé oko\"\n                                        type='text'\n                                        name='state'\n                                        value={ocRightEye}\n                                        handleChange={(e) => setOcRightEye(e.target.value)}\n                                    />\n                                </div>\n                            </ThreeColRow>\n                        </Container>\n                        <SaveButton>\n                            Uložiť zmeny\n                        </SaveButton>\n\n                    </Profile>\n\n                    <div>\n                        <Title>\n                            Objednávky\n                        </Title>\n\n                        <div>\n                            <OrderOverview\n                                name='Product name'\n                                id='[Product ID]'\n                                date='28. November 2020'\n                                totalPrice='99.99'\n                            />\n                            <OrderOverview\n                                name='Product name'\n                                id='[Product ID]'\n                                date='28. November 2020'\n                                totalPrice='99.99'\n                            />\n                            <OrderOverview\n                                name='Product name'\n                                id='[Product ID]'\n                                date='28. November 2020'\n                                totalPrice='99.99'\n                            />\n                            <OrderOverview\n                                name='Product name'\n                                id='[Product ID]'\n                                date='28. November 2020'\n                                totalPrice='99.99'\n                            />\n                            <OrderOverview\n                                name='Product name'\n                                id='[Product ID]'\n                                date='28. November 2020'\n                                totalPrice='99.99'\n                            />\n                            <OrderOverview\n                                name='Product name'\n                                id='[Product ID]'\n                                date='28. November 2020'\n                                totalPrice='99.99'\n                            />\n                            <OrderOverview\n                                name='Product name'\n                                id='[Product ID]'\n                                date='28. November 2020'\n                                totalPrice='99.99'\n                            />\n                            <OrderOverview\n                                name='Product name'\n                                id='[Product ID]'\n                                date='28. November 2020'\n                                totalPrice='99.99'\n                            />\n                        </div>\n                    </div>\n                </GridContainer>\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CustomerProfile\n","/imooptik-frontend/src/sections/orders/orders.section.jsx",[],"/imooptik-frontend/src/sections/product/product.section.jsx",["312"],"import React, { useState, useContext, useEffect } from 'react'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { useHistory, useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from \"../../components/custom-input/custom-input.component\"\nimport CustomTextarea from '../../components/custom-textarea/custom-textarea.component'\n\nimport ModalImage from '../../components/modal-images/modal-images.component'\n\nimport {\n    Header,\n    AddButton,\n    DeleteButton,\n    Title,\n    ProductImage,\n    CategoryContainer,\n    CategoryCheckbox,\n    DraftCheckBox,\n    InputRow,\n    TextareaRow,\n    ImageContainer,\n    CategoryTitle\n} from './product.styles'\n\nconst ProductSection = () => {\n    const { createNewProduct, products, updateProduct } = useContext(WarehouseContext)\n    const { setSelectedImage, selectedImage } = useContext(ImageContext)\n    const { id } = useParams()\n    const { push } = useHistory()\n\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const [showImageModal, setImageModal] = useState(false)\n    const [showDeleteButton, setShowDeleteButton] = useState(false)\n\n    const [name, setName] = useState('')\n    const [eanCode, setEanCode] = useState('')\n    const [colorCode, setColorCode] = useState('')\n\n    const [draft, toggleDraft] = useState(false)\n\n    const [brand, setBrand] = useState('')\n    const [price, setPrice] = useState('')\n\n    const [description, setDescription] = useState('')\n    const [image, setImage] = useState('')\n\n    // Category variables\n    const productCategories = [\n        {\n            name: \"Dioptrické\",\n            value: 1\n        },\n        {\n            name: \"Slnečné\",\n            value: 2\n        },\n        {\n            name: \"Športové\",\n            value: 3\n        },\n        {\n            name: \"Šošovky\",\n            value: 4\n        },\n        {\n            name: \"Doplnky\",\n            value: 5\n        },\n    ]\n    const [activeProductCategoryIndex, setActiveProductCategoryIndex] = useState(0)\n\n    const [store1, setStore1] = useState('')\n    const [store2, setStore2] = useState('')\n    const [store3, setStore3] = useState('')\n    const [store4, setStore4] = useState('')\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        const newProduct = {\n            id,\n            name,\n            eanCode,\n            colorCode,\n            draft,\n            brand,\n            price,\n            description,\n            image,\n            // checked\n        }\n\n        console.log(newProduct)\n        console.log(id)\n\n        if (id === 'novy-produkt') {\n            createNewProduct(newProduct)\n            push('/dashboard/sklad')\n\n        } else {\n            updateProduct(newProduct)\n            push('/dashboard/sklad')\n\n        }\n\n    }\n\n    useEffect(() => {\n        if (id === 'novy-produkt') {\n            setSelectedImage(null)\n            return\n        }\n        const product = products.find(prdct => prdct._id === id)\n        setShowDeleteButton(true)\n        setIsUpdating(true)\n\n        setName(product.name || '')\n        setEanCode(product.eanCode || '')\n        setColorCode(product.colorCode || '')\n\n        toggleDraft(product.eshop || '')\n\n        setBrand(product.brand || '')\n        setPrice(product.price.toString() || '')\n\n        setDescription(product.description || '')\n        if (product.image) {\n            setImage(product.image._id)\n            setSelectedImage(product.image)\n        }\n\n        setStore1(product.available[0] + \" \")\n        setStore2(product.available[1] + \" \")\n        setStore3(product.available[2] + \" \")\n        setStore4(product.available[3] + \" \")\n\n    }, [id])\n\n    return (\n        <section>\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={setImage} />}\n\n            <Header>\n                <div>\n                    <h1>{isUpdating ? \"Upraviť produkt\" : \"Pridať nový produkt\"}</h1>\n                </div>\n                <div>\n                    <DraftCheckBox\n                        label='Verejný'\n                        isActive={draft}\n                        handleClick={() => toggleDraft(!draft)}\n                    />\n                    {showDeleteButton && <DeleteButton>Vymazať</DeleteButton>}\n                    <AddButton onClick={handleSubmit}>{isUpdating ? \"Upraviť produkt\" : \"Pridať product\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                <div>\n                    <CategoryTitle>Kategória</CategoryTitle>\n                    <CategoryContainer>\n                        {\n                            productCategories.map((category, idx) => (\n                                <CategoryCheckbox\n                                    key={idx}\n                                    label={category.name}\n                                    isActive={idx === activeProductCategoryIndex}\n                                    handleClick={() => setActiveProductCategoryIndex(idx)}\n                                />\n                            ))\n                        }\n                    </CategoryContainer>\n                </div>\n\n                <div>\n                    <h3>Základné informacie</h3>\n                    <InputRow>\n                        <div>\n                            <CustomInput\n                                label=\"Ean kód\"\n                                type='text'\n                                name='eancode'\n                                value={eanCode}\n                                handleChange={(e) => setEanCode(e.target.value)}\n                                required\n                            />\n                        </div>\n                        <div>\n                            <p>Unikátny kód produktu <span>napr: 123abx</span></p>\n                        </div>\n                    </InputRow>\n                    <InputRow>\n                        <div>\n                            <CustomInput\n                                label=\"Názov\"\n                                type='text'\n                                name='name'\n                                value={name}\n                                handleChange={(e) => setName(e.target.value)}\n                                required\n\n                            />\n                        </div>\n                        <div>\n                            <p>Názov produktu <span>napr: Super brejle</span></p>\n                        </div>\n                    </InputRow>\n                    <InputRow>\n                        <div>\n                            <CustomInput\n                                label=\"Značka\"\n                                type='text'\n                                name='brand'\n                                value={brand}\n                                handleChange={(e) => setBrand(e.target.value)}\n                                required\n\n                            />\n                        </div>\n                        <div>\n                            <p>Značka <span>napr: Abrejlas</span></p>\n                        </div>\n                    </InputRow>\n                    <InputRow>\n                        <div>\n                            <CustomInput\n                                label=\"Cena\"\n                                type='text'\n                                name='price'\n                                value={price}\n                                handleChange={(e) => setPrice(e.target.value)}\n                                required\n\n                            />\n                        </div>\n                        <div>\n                            <p>Cena v centoch <span>napr: 1055 = 10,55€</span></p>\n                        </div>\n                    </InputRow>\n                    <TextareaRow>\n                        <div>\n                            <CustomTextarea\n                                label=\"Popis\"\n                                name='description'\n                                rows='5'\n                                value={description}\n                                handleChange={(e) => setDescription(e.target.value)}\n                                required\n\n                            />\n                        </div>\n                        {/* <div>\n                            <p><span>Lorem ipsum...</span></p>\n                        </div> */}\n                    </TextareaRow>\n\n\n\n                    <h3>Špecifikacie</h3>\n                    <InputRow>\n                        <div>\n                            <CustomInput\n                                label=\"Color code\"\n                                type='text'\n                                name='eancode'\n                                value={colorCode}\n                                handleChange={(e) => setColorCode(e.target.value)}\n                                required\n                            />\n                        </div>\n                        <div>\n                            <p>Farebný kód produktu <span>napr: 02AR</span></p>\n                        </div>\n                    </InputRow>\n\n                    <Title>Skladové zásoby</Title>\n                    <InputRow>\n                        <div>\n                            <CustomInput\n                                label=\"Predajna 1\"\n                                type='text'\n                                name='eancode'\n                                value={store1}\n                                handleChange={(e) => setStore1(e.target.value)}\n                            />\n                        </div>\n                        <div>\n                            <p>Počet kusov na predajni <span>napr: 0</span></p>\n                        </div>\n                    </InputRow>\n                    <InputRow>\n                        <div>\n                            <CustomInput\n                                label=\"Predajna 2\"\n                                type='text'\n                                name='eancode'\n                                value={store2}\n                                handleChange={(e) => setStore2(e.target.value)}\n                            />\n                        </div>\n                        <div>\n                            <p>Počet kusov na predajni <span>napr: 0</span></p>\n                        </div>\n                    </InputRow>\n                    <InputRow>\n                        <div>\n                            <CustomInput\n                                label=\"Predajna 3\"\n                                type='text'\n                                name='eancode'\n                                value={store3}\n                                handleChange={(e) => setStore3(e.target.value)}\n                            />\n                        </div>\n                        <div>\n                            <p>Počet kusov na predajni <span>napr: 0</span></p>\n                        </div>\n                    </InputRow>\n                    <InputRow>\n                        <div>\n                            <CustomInput\n                                label=\"Predajna 4\"\n                                type='text'\n                                name='eancode'\n                                value={store4}\n                                handleChange={(e) => setStore4(e.target.value)}\n                            />\n                        </div>\n                        <div>\n                            <p>Počet kusov na predajni <span>napr: 0</span></p>\n                        </div>\n                    </InputRow>\n\n\n\n                    <ImageContainer>\n\n                        <Title>Obrázok</Title>\n\n                        <ProductImage onClick={() => setImageModal(true)} >\n                            Vybrať obrázok\n                                {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n\n                        </ProductImage>\n                    </ImageContainer>\n                </div>\n                <div>\n\n                </div>\n            </ScrollContainer>\n        </section >\n    )\n}\n\nexport default ProductSection\n","/imooptik-frontend/src/sections/booking/booking.section.jsx",[],"/imooptik-frontend/src/sections/post/post.section.jsx",["313","314"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport CustomTextarea from '../../components/custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport { Quill } from 'react-quill'\n\nimport {\n    Header,\n    GridContainer,\n    PostImage,\n    DeleteButton,\n    AddButton,\n    Title,\n    ContentTextare,\n} from './post.styles'\n\nconst PostSection = () => {\n    const { id } = useParams()\n    const { push } = useHistory()\n    const {\n        createPost,\n        isLoading,\n        message,\n        showLoading,\n        setIsLoading,\n        getPost,\n        post,\n        handlePostUpdate\n    } = useContext(BlogContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [content, setContent] = useState('')\n    const [image, setImage] = useState('')\n    const [draft, toggleDraft] = useState(false)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (image.length <= 0) return\n\n        if (id === 'novy-prispevok') {\n            createPost(image, title, description, draft, content)\n        } else {\n            handlePostUpdate(title, description, draft, content, image, id)\n        }\n\n        push('/dashboard/blog')\n\n    }\n\n    useEffect(() => {\n        if (id !== 'novy-prispevok') {\n            getPost(id)\n            setIsUpdating(true)\n        }\n    }, [id])\n\n    useEffect(() => {\n        console.log(post)\n        if (post) {\n            console.log(post)\n            setTitle(post.name)\n            setDescription(post.description)\n            setContent(post.html)\n            toggleDraft(post.draft)\n            if (post.image) {\n                setImage(post.image._id)\n                setSelectedImage(post.image)\n            }\n        }\n    }, [post])\n\n    return (\n        <section>\n            {isLoading && <Popup loading={showLoading} title={message} close={() => setIsLoading(false)} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={setImage} />}\n\n            <Header>\n                <div>\n                    <h1>Post</h1>\n                </div>\n                <div>\n                    <CustomCheckbox\n                        label='Draft'\n                        checked={draft}\n                        onChange={() => toggleDraft(!draft)}\n                    />\n                    <DeleteButton>Vymazať</DeleteButton>\n                    <AddButton onClick={handleSubmit}>{isUpdating ? \"Upraviť príspevok\" : \"Pridať príspevok\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n\n                <GridContainer>\n                    <div>\n                        <h2>Informácia</h2>\n                        <CustomInput\n                            label=\"Nadpis\"\n                            type='text'\n                            name='title'\n                            value={title}\n                            handleChange={(e) => setTitle(e.target.value)}\n                        />\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={description}\n                            handleChange={(e) => setDescription(e.target.value)}\n                        />\n                        <h2>Titulná fotka</h2>\n                        <PostImage onClick={() => setImageModal(true)} >\n                            Vybrať obrázok\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </PostImage>\n                    </div>\n                    <div>\n                        <Title>Obsah</Title>\n                        <QuillToolbar />\n                        <ContentTextare\n                            value={content}\n                            onChange={setContent}\n                            modules={modules}\n                            formats={formats}\n                        />\n                    </div>\n\n                </GridContainer>\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\n\nconst CustomUndo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n        />\n    </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n        />\n    </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n    this.quill.history.undo();\n}\nfunction redoChange() {\n    this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n    \"arial\",\n    \"comic-sans\",\n    \"courier-new\",\n    \"georgia\",\n    \"helvetica\",\n    \"lucida\"\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nconst modules = {\n    toolbar: {\n        container: \"#toolbar\",\n        handlers: {\n            undo: undoChange,\n            redo: redoChange\n        }\n    },\n    history: {\n        delay: 500,\n        maxStack: 100,\n        userOnly: true\n    }\n};\n\n// Formats objects for setting up the Quill editor\nconst formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"align\",\n    \"strike\",\n    \"script\",\n    \"blockquote\",\n    \"background\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"color\",\n    \"code-block\"\n];\n\n// Quill Toolbar component\nconst QuillToolbar = () => (\n    <div id=\"toolbar\" className=\"toolbar\">\n        <span className=\"ql-formats\">\n            <select className=\"ql-size\" defaultValue=\"medium\">\n                <option value=\"extra-small\">Size 1</option>\n                <option value=\"small\">Size 2</option>\n                <option value=\"medium\">Size 3</option>\n                <option value=\"large\">Size 4</option>\n            </select>\n            <select className=\"ql-header\" defaultValue=\"3\">\n                <option value=\"1\">Heading</option>\n                <option value=\"2\">Subheading</option>\n                <option value=\"3\">Normal</option>\n            </select>\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n        </span>\n        <span className=\"ql-formats\">\n            <select className=\"ql-align\" />\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n                <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n                <CustomRedo />\n            </button>\n        </span>\n    </div>\n);\n\n\nexport default PostSection\n","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx",["315"],"import React, { useState, useEffect, useContext } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    PostContainer,\n    PostImage,\n    PostContent,\n    Options,\n    UpdateButton,\n    DeleteButton\n} from './blog-posts.styles'\n\nconst BlogPosts = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { getPosts, posts, postsCount, handlePostDelete } = useContext(BlogContext)\n    const { push } = useHistory()\n    const [searchQuery, setSearchQuery] = useState('')\n    const items = [\n        {\n            id: 0,\n            name: \"Dátum pridania\"\n        },\n        {\n            id: 1,\n            name: \"Abecedne\"\n        },\n    ]\n\n    const [activeIndex, setActiveIndex] = useState(0)\n\n    useEffect(() => {\n        if (!posts) {\n            getPosts(items[activeIndex])\n        }\n    }, [posts])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('blog/novy-prispevok')}\n                count={postsCount}\n                title=\"Blog\"\n            />\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                {\n                    posts && posts.map(post => (\n                        <PostContainer key={post._id}>\n                            <PostImage>\n                                {post.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${post.image.imagePath}`} alt={post.image.alt} />}\n                            </PostImage>\n                            <PostContent>\n                                <h2>{post.name}</h2>\n                                <p>{post.description}</p>\n                            </PostContent>\n                            <Options>\n                                <UpdateButton onClick={() => push(`blog/${post._id}`)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={() => handlePostDelete(post._id)}>Vymazať</DeleteButton>\n                            </Options>\n                        </PostContainer>\n                    ))\n                }\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BlogPosts\n","/imooptik-frontend/src/components/custom-button/custom-button.component.jsx",[],"/imooptik-frontend/src/context/user/user.queries.jsx",[],"/imooptik-frontend/src/context/blog/blog.queries.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.queries.jsx",[],"/imooptik-frontend/src/context/image/image.queries.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx",[],"/imooptik-frontend/src/components/sign-up/sign-up.styles.jsx",[],"/imooptik-frontend/src/components/popup/pop.up.styles.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx",[],"/imooptik-frontend/src/sections/customers/customers.styles.jsx",[],"/imooptik-frontend/src/sections/analytics/analytics.styles.jsx",[],"/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx",[],"/imooptik-frontend/src/sections/product/product.styles.jsx",[],"/imooptik-frontend/src/sections/booking/booking.styles.jsx",[],"/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx",[],"/imooptik-frontend/src/sections/post/post.styles.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.component.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.component.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.component.jsx",["316"],"import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    HeaderContainer,\n    Left,\n    Right,\n    SearchButton,\n    Notification,\n    AddButton,\n} from './section-header.styles'\n\nconst SectionHeader = ({ searchQuery, handleChange, title, count = 999, handleAddButton = () => { } }) => {\n    return (\n        <HeaderContainer>\n            <Left>\n                <h1>{title}</h1>\n                {/* <Notification>{count}</Notification> */}\n            </Left>\n            <Right>\n                <div>\n                    <CustomInput\n                        type='search'\n                        name='searchbox'\n                        value={searchQuery}\n                        handleChange={handleChange}\n                        label='Vyhľadať'\n                    />\n                </div>\n                <SearchButton>Vyhľadať</SearchButton>\n                <AddButton onClick={handleAddButton}>Pridať</AddButton>\n            </Right>\n        </HeaderContainer>\n    )\n}\n\nexport default SectionHeader\n","/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.component.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.component.jsx",["317","318","319","320"],"import React, { useEffect, useContext, useState } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { ImageContext } from '../../context/image/image.context'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage\n    } = useContext(ImageContext)\n\n    const selectImage = (img) => {\n        console.log(img)\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    useEffect(() => {\n        if (!images) {\n            getImages()\n        }\n    }, [images])\n\n    return (\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>Nahrane obrazky</h2>\n                <FlexContainer>\n                    {images && images.map(img => (\n                        <ImageContainer key={img._id}>\n                            <DeleteButton onClick={() => handleDeleteImage(img._id)}>&#10005;</DeleteButton>\n                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                        </ImageContainer>\n                    ))}\n                </FlexContainer>\n                <UploadButton htmlFor='image'>\n                    <input\n                        id='image'\n                        type='file'\n                        name='image'\n                        accept=\"image/png, image/jpeg\"\n                        onChange={e => handleImage(e.target.files[0])}\n                    />\n                    Pridať obrázok\n                </UploadButton>\n            </Modal>\n        </ModalContainer>\n    )\n}\n\nexport default ModalImages\n","/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.component.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.styles.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.styles.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx",[],{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","severity":1,"message":"326","line":6,"column":5,"nodeType":"327","messageId":"328","endLine":6,"endColumn":16},{"ruleId":"325","severity":1,"message":"329","line":8,"column":5,"nodeType":"327","messageId":"328","endLine":8,"endColumn":16},{"ruleId":"325","severity":1,"message":"330","line":12,"column":5,"nodeType":"327","messageId":"328","endLine":12,"endColumn":16},{"ruleId":"331","severity":1,"message":"332","line":37,"column":8,"nodeType":"333","endLine":37,"endColumn":15,"suggestions":"334"},{"ruleId":"331","severity":1,"message":"335","line":32,"column":8,"nodeType":"333","endLine":32,"endColumn":18,"suggestions":"336"},{"ruleId":"331","severity":1,"message":"337","line":51,"column":8,"nodeType":"333","endLine":51,"endColumn":10,"suggestions":"338"},{"ruleId":"325","severity":1,"message":"339","line":35,"column":13,"nodeType":"327","messageId":"328","endLine":35,"endColumn":17},{"ruleId":"331","severity":1,"message":"340","line":66,"column":8,"nodeType":"333","endLine":66,"endColumn":12,"suggestions":"341"},{"ruleId":"331","severity":1,"message":"342","line":150,"column":8,"nodeType":"333","endLine":150,"endColumn":10,"suggestions":"343"},{"ruleId":"331","severity":1,"message":"344","line":140,"column":8,"nodeType":"333","endLine":140,"endColumn":12,"suggestions":"345"},{"ruleId":"331","severity":1,"message":"346","line":66,"column":8,"nodeType":"333","endLine":66,"endColumn":12,"suggestions":"347"},{"ruleId":"331","severity":1,"message":"348","line":81,"column":8,"nodeType":"333","endLine":81,"endColumn":14,"suggestions":"349"},{"ruleId":"331","severity":1,"message":"350","line":47,"column":8,"nodeType":"333","endLine":47,"endColumn":15,"suggestions":"351"},{"ruleId":"325","severity":1,"message":"352","line":10,"column":5,"nodeType":"327","messageId":"328","endLine":10,"endColumn":17},{"ruleId":"325","severity":1,"message":"353","line":1,"column":40,"nodeType":"327","messageId":"328","endLine":1,"endColumn":48},{"ruleId":"325","severity":1,"message":"354","line":2,"column":10,"nodeType":"327","messageId":"328","endLine":2,"endColumn":21},{"ruleId":"331","severity":1,"message":"355","line":35,"column":8,"nodeType":"333","endLine":35,"endColumn":16,"suggestions":"356"},{"ruleId":"357","severity":1,"message":"358","line":46,"column":29,"nodeType":"359","endLine":46,"endColumn":144},"no-native-reassign",["360"],"no-negated-in-lhs",["361"],"no-unused-vars","'uploadImage' is defined but never used.","Identifier","unusedVar","'fetchImages' is defined but never used.","'deleteImage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.","ArrayExpression",["362"],"React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["363"],"React Hook useEffect has a missing dependency: 'filteredItems'. Either include it or remove the dependency array.",["364"],"'push' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["365"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["366"],"React Hook useEffect has missing dependencies: 'products' and 'setSelectedImage'. Either include them or remove the dependency array.",["367"],"React Hook useEffect has a missing dependency: 'getPost'. Either include it or remove the dependency array.",["368"],"React Hook useEffect has a missing dependency: 'setSelectedImage'. Either include it or remove the dependency array.",["369"],"React Hook useEffect has missing dependencies: 'activeIndex', 'getPosts', and 'items'. Either include them or remove the dependency array.",["370"],"'Notification' is defined but never used.","'useState' is defined but never used.","'BlogContext' is defined but never used.","React Hook useEffect has a missing dependency: 'getImages'. Either include it or remove the dependency array.",["371"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},"Update the dependencies array to be: [getUsers, users]",{"range":"392","text":"393"},"Update the dependencies array to be: [getProducts, products]",{"range":"394","text":"395"},"Update the dependencies array to be: [filteredItems]",{"range":"396","text":"397"},"Update the dependencies array to be: [getUser, id]",{"range":"398","text":"399"},"Update the dependencies array to be: [id]",{"range":"400","text":"401"},"Update the dependencies array to be: [id, products, setSelectedImage]",{"range":"402","text":"403"},"Update the dependencies array to be: [getPost, id]",{"range":"404","text":"405"},"Update the dependencies array to be: [post, setSelectedImage]",{"range":"406","text":"407"},"Update the dependencies array to be: [activeIndex, getPosts, items, posts]",{"range":"408","text":"409"},"Update the dependencies array to be: [getImages, images]",{"range":"410","text":"411"},[942,949],"[getUsers, users]",[1061,1071],"[getProducts, products]",[1385,1387],"[filteredItems]",[1864,1868],"[getUser, id]",[4075,4077],"[id]",[3812,3816],"[id, products, setSelectedImage]",[2113,2117],"[getPost, id]",[2512,2518],"[post, setSelectedImage]",[1376,1383],"[activeIndex, getPosts, items, posts]",[780,788],"[getImages, images]"]
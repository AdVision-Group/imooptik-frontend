[{"/imooptik-frontend/src/index.js":"1","/imooptik-frontend/src/reportWebVitals.js":"2","/imooptik-frontend/src/App.jsx":"3","/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx":"4","/imooptik-frontend/src/context/auth/auth.context.jsx":"5","/imooptik-frontend/src/global.styles.jsx":"6","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx":"7","/imooptik-frontend/src/pages/reset-password/reset-password.jsx":"8","/imooptik-frontend/src/pages/dashboard/dashboard.jsx":"9","/imooptik-frontend/src/components/popup/pop-up.component.jsx":"10","/imooptik-frontend/src/context/auth/auth.queries.jsx":"11","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx":"12","/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx":"13","/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx":"14","/imooptik-frontend/src/components/popup/pop.up.styles.jsx":"15","/imooptik-frontend/src/components/sign-in/sign-in.component.jsx":"16","/imooptik-frontend/src/components/custom-input/custom-input.component.jsx":"17","/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx":"18","/imooptik-frontend/src/components/sidenav/sidenav.component.jsx":"19","/imooptik-frontend/src/context/image/image.context.jsx":"20","/imooptik-frontend/src/context/warehouse/warehouse.context.jsx":"21","/imooptik-frontend/src/context/blog/blog.context.jsx":"22","/imooptik-frontend/src/context/booking/booking.context.jsx":"23","/imooptik-frontend/src/context/user/user.context.jsx":"24","/imooptik-frontend/src/context/orders/orders.context.jsx":"25","/imooptik-frontend/src/components/spinner/spinner.component.jsx":"26","/imooptik-frontend/src/components/custom-button/custom-button.component.jsx":"27","/imooptik-frontend/src/sections/customers/customers.section.jsx":"28","/imooptik-frontend/src/sections/orders/orders.section.jsx":"29","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx":"30","/imooptik-frontend/src/sections/analytics/analytics.section.jsx":"31","/imooptik-frontend/src/sections/product/product.section.jsx":"32","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx":"33","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx":"34","/imooptik-frontend/src/sections/booking/booking.section.jsx":"35","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx":"36","/imooptik-frontend/src/sections/post/post.section.jsx":"37","/imooptik-frontend/src/sections/order/order.section.jsx":"38","/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx":"39","/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx":"40","/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx":"41","/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx":"42","/imooptik-frontend/src/context/warehouse/warehouse.queries.jsx":"43","/imooptik-frontend/src/context/image/image.queries.jsx":"44","/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx":"45","/imooptik-frontend/src/context/booking/booking.queries.jsx":"46","/imooptik-frontend/src/context/blog/blog.queries.jsx":"47","/imooptik-frontend/src/context/user/user.utils.jsx":"48","/imooptik-frontend/src/context/orders/orders.utils.jsx":"49","/imooptik-frontend/src/context/orders/orders.queries.jsx":"50","/imooptik-frontend/src/components/spinner/spinner.styles.jsx":"51","/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx":"52","/imooptik-frontend/src/context/user/user.queries.jsx":"53","/imooptik-frontend/src/sections/analytics/analytics.styles.jsx":"54","/imooptik-frontend/src/sections/customers/customers.styles.jsx":"55","/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx":"56","/imooptik-frontend/src/sections/product/product.styles.jsx":"57","/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx":"58","/imooptik-frontend/src/sections/booking/booking.styles.jsx":"59","/imooptik-frontend/src/sections/order/order.styles.jsx":"60","/imooptik-frontend/src/sections/post/post.styles.jsx":"61","/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx":"62","/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx":"63","/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx":"64","/imooptik-frontend/src/components/section-header/section-header.component.jsx":"65","/imooptik-frontend/src/components/pagination/pagination.component.jsx":"66","/imooptik-frontend/src/components/product-overview/product-overview.component.jsx":"67","/imooptik-frontend/src/components/modal-images/modal-images.component.jsx":"68","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx":"69","/imooptik-frontend/src/components/order-overview/order-overview.component.jsx":"70","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx":"71","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx":"72","/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx":"73","/imooptik-frontend/src/components/user-form/user-form.component.jsx":"74","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx":"75","/imooptik-frontend/src/components/calendar/calendar.component.jsx":"76","/imooptik-frontend/src/components/combined-product-overview/combined-product-overview.component.jsx":"77","/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx":"78","/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx":"79","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx":"80","/imooptik-frontend/src/sections/order/sub-sections/diopters/diopters.seb-section.jsx":"81","/imooptik-frontend/src/sections/order/sub-sections/summary/summary.sub-section.jsx":"82","/imooptik-frontend/src/sections/order/sub-sections/lenses/lenses.sub-section.jsx":"83","/imooptik-frontend/src/sections/order/sub-sections/eshop/eshop.sub-section.jsx":"84","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx":"85","/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx":"86","/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx":"87","/imooptik-frontend/src/components/section-header/section-header.styles.jsx":"88","/imooptik-frontend/src/components/pagination/pagination.styles.jsx":"89","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx":"90","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx":"91","/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx":"92","/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx":"93","/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx":"94","/imooptik-frontend/src/components/user-form/user.form-styles.jsx":"95","/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx":"96","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx":"97","/imooptik-frontend/src/components/combined-product-overview/combined-product-overview.styles.jsx":"98","/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx":"99","/imooptik-frontend/src/components/calendar/calendar.styles.jsx":"100","/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx":"101","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx":"102","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx":"103","/imooptik-frontend/src/components/modal-info-container/modal-info-container.component.jsx":"104","/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx":"105","/imooptik-frontend/src/components/order-product-overview/order-product-overview.component.jsx":"106","/imooptik-frontend/src/components/order-lenses-overview/order-lenses-overview.component.jsx":"107","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx":"108","/imooptik-frontend/src/components/modal-info-container/modal-info-container.styles.jsx":"109","/imooptik-frontend/src/components/order-lenses-overview/order-lenses-overview.styles.jsx":"110","/imooptik-frontend/src/components/order-product-overview/order-product-overview.styles.jsx":"111","/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx":"112","/imooptik-frontend/src/hooks/useFetch.jsx":"113","/imooptik-frontend/src/components/order-address-form/order-address-form.component.jsx":"114","/imooptik-frontend/src/components/order-address-form/order-address-form.styles.jsx":"115","/imooptik-frontend/src/sections/calendar/calendar.section.jsx":"116","/imooptik-frontend/src/sections/calendar/calendar.styles.jsx":"117","/imooptik-frontend/src/context/booking/booking.utils.jsx":"118","/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx":"119","/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx":"120","/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx":"121","/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx":"122"},{"size":717,"mtime":1608670306490,"results":"123","hashOfConfig":"124"},{"size":362,"mtime":1608191294784,"results":"125","hashOfConfig":"124"},{"size":1338,"mtime":1611164952090,"results":"126","hashOfConfig":"124"},{"size":1076,"mtime":1610126635393,"results":"127","hashOfConfig":"124"},{"size":5741,"mtime":1611174737080,"results":"128","hashOfConfig":"124"},{"size":700,"mtime":1611109239760,"results":"129","hashOfConfig":"124"},{"size":840,"mtime":1609978179243,"results":"130","hashOfConfig":"124"},{"size":1667,"mtime":1608613259561,"results":"131","hashOfConfig":"124"},{"size":7653,"mtime":1611165194240,"results":"132","hashOfConfig":"124"},{"size":714,"mtime":1609965412857,"results":"133","hashOfConfig":"124"},{"size":2292,"mtime":1610635788267,"results":"134","hashOfConfig":"124"},{"size":506,"mtime":1608208021900,"results":"135","hashOfConfig":"124"},{"size":772,"mtime":1610476886850,"results":"136","hashOfConfig":"124"},{"size":548,"mtime":1610227196940,"results":"137","hashOfConfig":"124"},{"size":677,"mtime":1610074517686,"results":"138","hashOfConfig":"124"},{"size":1925,"mtime":1609978226453,"results":"139","hashOfConfig":"124"},{"size":639,"mtime":1608689089980,"results":"140","hashOfConfig":"124"},{"size":1466,"mtime":1609978281513,"results":"141","hashOfConfig":"124"},{"size":2301,"mtime":1610505203270,"results":"142","hashOfConfig":"124"},{"size":4412,"mtime":1610248621440,"results":"143","hashOfConfig":"124"},{"size":15861,"mtime":1611092128930,"results":"144","hashOfConfig":"124"},{"size":4067,"mtime":1611078874170,"results":"145","hashOfConfig":"124"},{"size":8166,"mtime":1611021415104,"results":"146","hashOfConfig":"124"},{"size":9930,"mtime":1611181686900,"results":"147","hashOfConfig":"124"},{"size":12496,"mtime":1611170049900,"results":"148","hashOfConfig":"124"},{"size":178,"mtime":1608409397640,"results":"149","hashOfConfig":"124"},{"size":283,"mtime":1608325857586,"results":"150","hashOfConfig":"124"},{"size":4025,"mtime":1611165677260,"results":"151","hashOfConfig":"124"},{"size":3162,"mtime":1611156964171,"results":"152","hashOfConfig":"124"},{"size":6434,"mtime":1610909083410,"results":"153","hashOfConfig":"124"},{"size":1381,"mtime":1608483136504,"results":"154","hashOfConfig":"124"},{"size":7066,"mtime":1611092734330,"results":"155","hashOfConfig":"124"},{"size":3179,"mtime":1609802280536,"results":"156","hashOfConfig":"124"},{"size":3536,"mtime":1611179086070,"results":"157","hashOfConfig":"124"},{"size":6047,"mtime":1611015904774,"results":"158","hashOfConfig":"124"},{"size":810,"mtime":1610132345623,"results":"159","hashOfConfig":"124"},{"size":9601,"mtime":1611079105190,"results":"160","hashOfConfig":"124"},{"size":15984,"mtime":1611169730080,"results":"161","hashOfConfig":"124"},{"size":1263,"mtime":1609635810480,"results":"162","hashOfConfig":"124"},{"size":880,"mtime":1609978233033,"results":"163","hashOfConfig":"124"},{"size":898,"mtime":1609978275513,"results":"164","hashOfConfig":"124"},{"size":4920,"mtime":1610505239550,"results":"165","hashOfConfig":"124"},{"size":7970,"mtime":1610817806910,"results":"166","hashOfConfig":"124"},{"size":1560,"mtime":1610106635382,"results":"167","hashOfConfig":"124"},{"size":3217,"mtime":1610816785660,"results":"168","hashOfConfig":"124"},{"size":2775,"mtime":1611021490654,"results":"169","hashOfConfig":"124"},{"size":1793,"mtime":1608678905090,"results":"170","hashOfConfig":"124"},{"size":627,"mtime":1611074851730,"results":"171","hashOfConfig":"124"},{"size":692,"mtime":1611089717100,"results":"172","hashOfConfig":"124"},{"size":3567,"mtime":1611103862750,"results":"173","hashOfConfig":"124"},{"size":377,"mtime":1608409635720,"results":"174","hashOfConfig":"124"},{"size":440,"mtime":1609635534260,"results":"175","hashOfConfig":"124"},{"size":3393,"mtime":1611085128730,"results":"176","hashOfConfig":"124"},{"size":753,"mtime":1608501615800,"results":"177","hashOfConfig":"124"},{"size":1115,"mtime":1609635476450,"results":"178","hashOfConfig":"124"},{"size":549,"mtime":1610145287903,"results":"179","hashOfConfig":"124"},{"size":1535,"mtime":1610505951990,"results":"180","hashOfConfig":"124"},{"size":1658,"mtime":1609636415920,"results":"181","hashOfConfig":"124"},{"size":2027,"mtime":1610998962674,"results":"182","hashOfConfig":"124"},{"size":3094,"mtime":1611086445840,"results":"183","hashOfConfig":"124"},{"size":1711,"mtime":1609802520286,"results":"184","hashOfConfig":"124"},{"size":728,"mtime":1610132354653,"results":"185","hashOfConfig":"124"},{"size":624,"mtime":1609280754422,"results":"186","hashOfConfig":"124"},{"size":320,"mtime":1611163718930,"results":"187","hashOfConfig":"124"},{"size":1077,"mtime":1610229649760,"results":"188","hashOfConfig":"124"},{"size":834,"mtime":1609973813373,"results":"189","hashOfConfig":"124"},{"size":1287,"mtime":1610753699800,"results":"190","hashOfConfig":"124"},{"size":8363,"mtime":1611078296630,"results":"191","hashOfConfig":"124"},{"size":681,"mtime":1610146980773,"results":"192","hashOfConfig":"124"},{"size":2869,"mtime":1611170402410,"results":"193","hashOfConfig":"124"},{"size":3764,"mtime":1611176185940,"results":"194","hashOfConfig":"124"},{"size":13338,"mtime":1611176446600,"results":"195","hashOfConfig":"124"},{"size":11161,"mtime":1611179076600,"results":"196","hashOfConfig":"124"},{"size":7360,"mtime":1611179081970,"results":"197","hashOfConfig":"124"},{"size":745,"mtime":1611011495664,"results":"198","hashOfConfig":"124"},{"size":3175,"mtime":1611016722834,"results":"199","hashOfConfig":"124"},{"size":3430,"mtime":1611087918710,"results":"200","hashOfConfig":"124"},{"size":425,"mtime":1609365301650,"results":"201","hashOfConfig":"124"},{"size":651,"mtime":1608506295620,"results":"202","hashOfConfig":"124"},{"size":354,"mtime":1610748624680,"results":"203","hashOfConfig":"124"},{"size":853,"mtime":1611169886100,"results":"204","hashOfConfig":"124"},{"size":6153,"mtime":1611087650750,"results":"205","hashOfConfig":"124"},{"size":957,"mtime":1610814820630,"results":"206","hashOfConfig":"124"},{"size":1347,"mtime":1610681874760,"results":"207","hashOfConfig":"124"},{"size":1316,"mtime":1610505761880,"results":"208","hashOfConfig":"124"},{"size":487,"mtime":1611163742900,"results":"209","hashOfConfig":"124"},{"size":718,"mtime":1608401951890,"results":"210","hashOfConfig":"124"},{"size":953,"mtime":1609636181490,"results":"211","hashOfConfig":"124"},{"size":646,"mtime":1609973838353,"results":"212","hashOfConfig":"124"},{"size":486,"mtime":1610505703940,"results":"213","hashOfConfig":"124"},{"size":596,"mtime":1609639013590,"results":"214","hashOfConfig":"124"},{"size":2089,"mtime":1610753900350,"results":"215","hashOfConfig":"124"},{"size":3851,"mtime":1610125616673,"results":"216","hashOfConfig":"124"},{"size":640,"mtime":1611175737610,"results":"217","hashOfConfig":"124"},{"size":2123,"mtime":1610612894950,"results":"218","hashOfConfig":"124"},{"size":2648,"mtime":1611170430830,"results":"219","hashOfConfig":"124"},{"size":878,"mtime":1610911669420,"results":"220","hashOfConfig":"124"},{"size":1185,"mtime":1610907949400,"results":"221","hashOfConfig":"124"},{"size":447,"mtime":1609638204590,"results":"222","hashOfConfig":"124"},{"size":1158,"mtime":1610914847120,"results":"223","hashOfConfig":"124"},{"size":1062,"mtime":1608505999020,"results":"224","hashOfConfig":"124"},{"size":554,"mtime":1609636648760,"results":"225","hashOfConfig":"124"},{"size":743,"mtime":1610846076230,"results":"226","hashOfConfig":"124"},{"size":1273,"mtime":1610909047880,"results":"227","hashOfConfig":"124"},{"size":341,"mtime":1610810143010,"results":"228","hashOfConfig":"124"},{"size":892,"mtime":1610813978120,"results":"229","hashOfConfig":"124"},{"size":954,"mtime":1610814753950,"results":"230","hashOfConfig":"124"},{"size":989,"mtime":1610837219950,"results":"231","hashOfConfig":"124"},{"size":759,"mtime":1610908904010,"results":"232","hashOfConfig":"124"},{"size":851,"mtime":1610908450880,"results":"233","hashOfConfig":"124"},{"size":1357,"mtime":1610908432460,"results":"234","hashOfConfig":"124"},{"size":294,"mtime":1610810084190,"results":"235","hashOfConfig":"124"},{"size":732,"mtime":1610906189000,"results":"236","hashOfConfig":"124"},{"size":5090,"mtime":1610993970474,"results":"237","hashOfConfig":"124"},{"size":1099,"mtime":1610990277244,"results":"238","hashOfConfig":"124"},{"size":7353,"mtime":1611020836214,"results":"239","hashOfConfig":"124"},{"size":976,"mtime":1611019811904,"results":"240","hashOfConfig":"124"},{"size":328,"mtime":1611016532294,"results":"241","hashOfConfig":"124"},{"size":4992,"mtime":1611178628100,"results":"242","hashOfConfig":"124"},{"size":1973,"mtime":1611176793420,"results":"243","hashOfConfig":"124"},{"size":3152,"mtime":1611179300330,"results":"244","hashOfConfig":"124"},{"size":1312,"mtime":1611101663420,"results":"245","hashOfConfig":"124"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},"1lk1amn",{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"248"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"248"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"248"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"248"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"248"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"248"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"248"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"248"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"248"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"248"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"248"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"248"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"248"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"248"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},"/imooptik-frontend/src/index.js",[],["505","506"],"/imooptik-frontend/src/reportWebVitals.js",[],"/imooptik-frontend/src/App.jsx",[],"/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx",[],"/imooptik-frontend/src/context/auth/auth.context.jsx",[],"/imooptik-frontend/src/global.styles.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset-password.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.jsx",[],"/imooptik-frontend/src/components/popup/pop-up.component.jsx",[],"/imooptik-frontend/src/context/auth/auth.queries.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx",[],"/imooptik-frontend/src/components/popup/pop.up.styles.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.component.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.component.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.component.jsx",[],"/imooptik-frontend/src/context/image/image.context.jsx",["507","508"],"import React, { createContext, useState, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport { deleteImage, fetchImages, uploadImage, fetchFilteredImages } from './image.queries'\n\nexport const ImageContext = createContext({\n    isDisabled: false,\n    images: null,\n    selectedImage: null,\n    getImages: () => { },\n    handleImage: () => { },\n    handleDeleteImage: () => { },\n    setSelectedImage: () => { },\n    getNextImages: () => { },\n    getPrevImage: () => { }\n})\n\nconst ImageProvider = ({ children }) => {\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const { token } = useContext(AuthContext)\n\n    const [isDisabled, setIsDisabled] = useState(false)\n    const [images, setImages] = useState(null)\n    const [selectedImage, setSelectedImage] = useState(null)\n    const [limit, setLimit] = useState(4)\n    const [skip, setSkip] = useState(0)\n\n    const handleImage = async (img, imgName, imgAlt, setImage, close) => {\n        setShowModal(true)\n        setIsLoading(true)\n        setIsDisabled(true)\n\n        try {\n            const response = await uploadImage(token, img, imgName, imgAlt)\n            const data = await response.json()\n            console.log(data)\n\n            if (data.image) {\n                setSelectedImage(data.image)\n                setImage(data.image._id)\n                getImages()\n                close()\n            }\n\n            setShowModal(false)\n            setIsLoading(false)\n            setIsDisabled(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n            setIsDisabled(false)\n        }\n    }\n\n    const getNextImages = async (addToSkip) => {\n        try {\n            if (images.length !== limit) return\n\n            const response = await fetchFilteredImages(token, limit, skip + addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip + addToSkip)\n            }\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getPrevImage = async (addToSkip) => {\n        if (skip === 0) return\n        try {\n            const response = await fetchFilteredImages(token, limit, skip - addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip - addToSkip)\n\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getImages = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            // const response = await fetchImages()\n            const response = await fetchFilteredImages(token, limit, skip)\n\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n            closeModal()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleDeleteImage = async (id, e) => {\n        e.preventDefault()\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const respone = await deleteImage(token, id)\n            const data = await respone.json()\n\n            getMessage(data.message)\n            setIsLoading(false)\n            getImages()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <ImageContext.Provider\n            value={{\n                isDisabled,\n                images,\n                selectedImage,\n                getImages,\n                handleImage,\n                handleDeleteImage,\n                setSelectedImage,\n                getNextImages,\n                getPrevImage\n            }}\n        >\n            {children}\n        </ImageContext.Provider>\n    )\n}\n\nexport default ImageProvider","/imooptik-frontend/src/context/warehouse/warehouse.context.jsx",["509"],"import React, { createContext, useState, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport { ImageContext } from '../image/image.context'\nimport {\n    fetchProducts,\n    postProduct,\n    deleteProduct,\n    patchProduct,\n    postLenses,\n    fetchLenses,\n    patchLenses,\n    delLense,\n    fetchSingleProduct,\n    fetchSingleLenses\n    // fetchFilteredProducts\n} from './warehouse.queries'\n\nimport {\n    initProductObj,\n    initLensesObj,\n    productCategories\n} from './warehouse.utils'\n\nimport { useFetch } from '../../hooks/useFetch'\n\n\nexport const WarehouseContext = createContext({\n    formToShow: 0,\n    toggleProductForms: () => { },\n    showUpdateForm: () => { },\n    isUpdating: false,\n    activeCategoryIndex: 0,\n    categories: [],\n    getEanCode: () => { },\n    toggleDraft: () => { },\n    handleCategoryChange: () => { },\n    handleAvailableChange: () => { },\n    handleSizeChange: () => { },\n    selectImage: () => { },\n    product: null,\n    products: null,\n    handleChange: () => { },\n    handleSpecsChange: () => { },\n    resetProduct: () => { },\n    lenses: null,\n    lensesArr: null,\n    handleLensesChange: () => { },\n    handleLensesDioptersRangeChange: () => { },\n    handleLensesCylinderRangeChange: () => { },\n    totalCount: 0,\n    getProducts: () => { },\n    getSingleProduct: () => { },\n    createNewProduct: () => { },\n    handleProductDelete: () => { },\n    updateProduct: () => { },\n    createNewLenses: () => { },\n    getLenses: () => { },\n    getSigleLenses: () => { },\n    updateLenses: () => { },\n    deleteLenses: () => { },\n    lensesParameters: {},\n    handleParameterChange: () => { }\n})\n\n\nconst WarehouseProvider = ({ children }) => {\n    const { token, currentUser } = useContext(AuthContext)\n    const { setIsLoading, setShowModal, getMessage, closeModal } = useContext(LoadingModalContext)\n    const { setSelectedImage } = useContext(ImageContext)\n    const { push } = useHistory()\n\n    // ------------------------\n\n    const [totalCount, setTotalCount] = useState(0)\n    const [isUpdating, setIsUpdating] = useState(false)\n    const [activeCategoryIndex, setActiveCategoryIndex] = useState(0)\n\n    // ------------------------\n\n    const switchFormButtons = [\n        {\n            name: \"Okuliare a i.\"\n        },\n        {\n            name: \"Sklá\"\n        }\n    ]\n    const [formToShow, setFormToShow] = useState(0)\n\n    // ------------------------\n\n    const [categories] = useState(productCategories)\n    const [product, setProduct] = useState(currentUser.admin === 1 ? initProductObj : { ...initProductObj, available: [0, 0, 0, 0] })\n    const [products, setProducts] = useState(null)\n\n    // ------------------------\n\n    const [lenses, setLenses] = useState(initLensesObj)\n    const [lensesArr, setLensesArr] = useState(null)\n\n    const [lensesParameters, setLensesParameters] = useState({\n        diopters: [0, 0],\n        curvature: 0,\n        average: 0\n    })\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lensesParameters.lenses[name]\n        arr[idx] = Number(value)\n        setLensesParameters({\n            ...lensesParameters,\n            [name]: arr\n        })\n    }\n\n    // ------------------------\n    // PRODUCT ACTIONS\n    // ------------------------\n\n    const getEanCode = (code) => {\n        setProduct({\n            ...product,\n            eanCode: code\n        })\n    }\n\n    const toggleProductForms = (e, idx) => {\n        e.preventDefault()\n        setFormToShow(idx)\n    }\n\n    const toggleDraft = () => {\n        setProduct({\n            ...product,\n            eshop: !product.eshop\n        })\n        setLenses({\n            ...lenses,\n            eshop: !product.eshop\n        })\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        setProduct({\n            ...product,\n            [name]: value\n        })\n    }\n    const handleSpecsChange = (e) => {\n        const { name, value } = e.target\n        setProduct({\n            ...product,\n            specs: {\n                ...product.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleCategoryChange = (value) => {\n        setActiveCategoryIndex(value)\n        setProduct({\n            ...product,\n            type: value\n        })\n    }\n\n    const handleAvailableChange = (e, idx) => {\n        let arr = product.available\n        arr[idx] = Number(e.target.value)\n        setProduct({\n            ...product,\n            available: arr\n        })\n    }\n\n    const handleSizeChange = (e, idx) => {\n        let arr = product.specs.size\n        arr[idx] = Number(e.target.value)\n        setProduct({\n            ...product,\n            specs: {\n                ...product.specs,\n                size: arr\n            }\n        })\n    }\n\n    const selectImage = (imgId) => {\n        setProduct({\n            ...product,\n            imagePath: imgId\n        })\n        setLenses({\n            ...lenses,\n            imagePath: imgId\n        })\n    }\n\n    const resetProduct = () => {\n        setProduct(currentUser.admin === 1 ? initProductObj : { ...initProductObj, available: [0, 0, 0, 0] })\n        setLenses(initLensesObj)\n        setSelectedImage(null)\n        setIsUpdating(false)\n        setActiveCategoryIndex(0)\n        setFormToShow(0)\n    }\n\n    const handleLensesChange = (e) => {\n        const { name, value } = e.target\n        setLenses({\n            ...lenses,\n            [name]: value\n        })\n    }\n\n    const handleLensesCylinderRangeChange = (e, idx) => {\n        let arr = lenses.cylinderRange\n        arr[idx] = Number(e.target.value)\n        setLenses({\n            ...lenses,\n            cylinderRange: arr\n        })\n    }\n\n    const handleLensesDioptersRangeChange = (e, idx) => {\n        let arr = lenses.dioptersRange\n        arr[idx] = Number(e.target.value)\n        setLenses({\n            ...lenses,\n            dioptersRange: arr\n        })\n    }\n\n    const showUpdateForm = (formName) => {\n        setFormToShow(formName)\n        setIsUpdating(true)\n\n    }\n\n    // ------------------------\n    // START GLASSES ACTIONS\n    // ------------------------\n\n    // Get all products\n    const getProducts = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetchProducts(token)\n            const data = await response.json()\n\n            if (data.products) {\n                setTotalCount(totalCount + data.count)\n                setProducts(data.products)\n                setIsLoading(false)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Get single product\n\n    const getSingleProduct = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetchSingleProduct(id)\n            const data = await response.json()\n\n            if (data.error) {\n                getMessage(data.message)\n                setIsLoading(false)\n                return\n            }\n\n            if (data.product) {\n                if (currentUser.admin === 1) {\n                    setProduct({\n                        ...product,\n                        ...data.product,\n                        specs: {\n                            ...product.specs,\n                            ...data.product.specs\n                        },\n                        imagePath: data.product.image._id,\n                        available: [data.product.available[currentUser.premises - 1]]\n                    })\n                } else {\n                    setProduct({\n                        ...product,\n                        ...data.product,\n                        specs: {\n                            ...product.specs,\n                            ...data.product.specs\n                        },\n                        imagePath: data.product.image._id,\n                        available: data.product.available.filter((num, idx) => idx !== 4)\n\n                    })\n                }\n                setActiveCategoryIndex(data.product.type)\n                setSelectedImage(data.product.image)\n                setIsUpdating(true)\n            }\n\n            closeModal()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n    }\n\n    // Create Glasses\n    const createNewProduct = async (productToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await postProduct(token, productToAdd)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.message)\n                setIsLoading(false)\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.success)\n            resetProduct()\n            push('/dashboard/obchod')\n            getProducts()\n            closeModal()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Update Glasses\n    const updateProduct = async (productToUpdate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await patchProduct(token, productToUpdate)\n            const data = await response.json()\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.message)\n                setIsLoading(false)\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n            push('/dashboard/obchod')\n            getProducts()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Delete glasses\n    const handleProductDelete = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await deleteProduct(token, id)\n            const data = await response.json()\n\n            setIsLoading(false)\n            getMessage(data.message)\n            getProducts()\n            push('/dashboard/obchod')\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // ------------------------\n    // END GLASSES ACTIONS\n    // ------------------------\n\n\n    // ------------------------\n    // START LENSES ACTIONS\n    // ------------------------\n\n    // Get all lenses\n    const getLenses = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetchLenses(token)\n            const data = await response.json()\n\n            if (data.lenses) {\n                setTotalCount(totalCount + data.count)\n                setLensesArr(data.lenses)\n                setIsLoading(false)\n                closeModal()\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Get single lenses\n    const getSigleLenses = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetchSingleLenses(id)\n            const data = await response.json()\n\n            console.log(data)\n\n\n            if (data.error) {\n                getMessage(data.message)\n                setIsLoading(false)\n                return\n            }\n\n            if (data.lenses) {\n                setLenses({\n                    ...lenses,\n                    ...data.lenses,\n                    imagePath: data.lenses.image._id\n                })\n                setSelectedImage(data.lenses.image)\n                setIsUpdating(true)\n            }\n\n            closeModal()\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Create Lense\n    const createNewLenses = async (productToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await postLenses(token, productToAdd)\n            const data = await response.json()\n\n            if (data) {\n                setIsLoading(false)\n                getMessage(data.message)\n                push('/dashboard/obchod')\n                getLenses()\n                closeModal()\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Update Lense\n    const updateLenses = async (productToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await patchLenses(token, productToAdd)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data) {\n                setIsLoading(false)\n                getMessage(data.message)\n                push('/dashboard/obchod')\n                getLenses()\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Delete Lense\n    const deleteLenses = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await delLense(token, id)\n            const data = await response.json()\n\n            if (data.error) {\n                setIsLoading(false)\n                getMessage(data.message)\n            }\n\n\n            getLenses()\n            setIsLoading(false)\n            getMessage(data.message)\n            push('/dashboard/obchod')\n            closeModal()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // ------------------------\n    // END LENSES ACTIONS\n    // ------------------------\n\n    console.log(product)\n\n\n    return (\n        <WarehouseContext.Provider\n            value={{\n                switchFormButtons,\n                formToShow,\n                toggleProductForms,\n                showUpdateForm,\n                isUpdating,\n                activeCategoryIndex,\n                categories,\n                getEanCode,\n                toggleDraft,\n                handleCategoryChange,\n                handleAvailableChange,\n                handleSizeChange,\n                selectImage,\n                product,\n                products,\n                handleChange,\n                handleSpecsChange,\n                resetProduct,\n                lenses,\n                lensesArr,\n                handleLensesChange,\n                handleLensesDioptersRangeChange,\n                handleLensesCylinderRangeChange,\n                totalCount,\n                getProducts,\n                getSingleProduct,\n                createNewProduct,\n                handleProductDelete,\n                updateProduct,\n                createNewLenses,\n                getLenses,\n                getSigleLenses,\n                updateLenses,\n                deleteLenses,\n                lensesParameters,\n                handleParameterChange,\n            }}\n        >\n            {children}\n        </WarehouseContext.Provider>\n    )\n}\n\nexport default WarehouseProvider","/imooptik-frontend/src/context/blog/blog.context.jsx",["510"],"import React, { createContext, useState, useContext } from 'react'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport {\n    fetchPosts,\n    createNewPost,\n    fetchSinglePost,\n    updatePost,\n    deletePost,\n} from './blog.queries'\n\n\nexport const BlogContext = createContext({\n    posts: null,\n    post: null,\n    postsCount: 0,\n    getPosts: () => { },\n    createPost: () => { },\n    getPost: () => { },\n    handlePostUpdate: () => { },\n    handlePostDelete: () => { },\n    resetBlog: () => { }\n})\n\nconst BlogProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const [posts, setPosts] = useState(null)\n    const [post, setPost] = useState(null)\n    const [postsCount, setPostsCount] = useState(0)\n\n    const getPosts = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const response = await fetchPosts()\n        const data = await response.json()\n\n        setPosts(data.blogs)\n        setPostsCount(data.count)\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const getPost = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n\n            const response = await fetchSinglePost(id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.blog) {\n                setPost(data.blog)\n                setIsLoading(false)\n                getMessage(data.message)\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n            // setPosts(data.blogs)\n            // setPostsCount(data.count)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const createPost = async (img, name, description, draft, html) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await createNewPost(token, name, description, draft, html, img)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostUpdate = async (name, description, draft, html, img, id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await updatePost(token, name, description, draft, html, img, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostDelete = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await deletePost(token, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const resetBlog = () => {\n        setPost(null)\n    }\n\n    return (\n        <BlogContext.Provider\n            value={{\n                posts,\n                post,\n                postsCount,\n                getPosts,\n                createPost,\n                getPost,\n                handlePostUpdate,\n                handlePostDelete,\n                resetBlog,\n            }}\n        >\n            {children}\n        </BlogContext.Provider>\n    )\n}\n\nexport default BlogProvider","/imooptik-frontend/src/context/booking/booking.context.jsx",[],"/imooptik-frontend/src/context/user/user.context.jsx",["511"],"/imooptik-frontend/src/context/orders/orders.context.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.component.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.component.jsx",[],"/imooptik-frontend/src/sections/customers/customers.section.jsx",["512","513","514","515"],"/imooptik-frontend/src/sections/orders/orders.section.jsx",["516"],"import React, { useState, useContext, useEffect } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { OrdersContext } from '../../context/orders/orders.context'\nimport { useHistory } from 'react-router-dom'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport OrderOverview from '../../components/order-overview/order-overview.component'\n\nimport Popup from '../../components/popup/pop-up.component'\n\nconst OrdersSection = () => {\n    const { push } = useHistory()\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const [searchQuery, setSearchQuery] = useState('')\n    const items = [\n        {\n            id: 1,\n            name: \"Zaplatené\",\n            value: \"paid\"\n        },\n        {\n            id: 2,\n            name: \"Zálohované\",\n            value: \"half-paid\"\n\n        },\n        {\n            id: 3,\n            name: \"Spracované\",\n            value: \"fulfilled\"\n        },\n        {\n            id: 4,\n            name: \"Splnené\",\n            value: \"finished\"\n\n        }\n    ]\n    const [activeIndex, setActiveIndex] = useState(1)\n\n    const {\n        getOrders,\n        orders,\n        handleFulfill,\n        handleFinish\n    } = useContext(OrdersContext)\n\n    useEffect(() => {\n        getOrders()\n    }, [])\n\n    if (!orders) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n    const filteredOrders = orders.filter(order => order.status === items[activeIndex - 1].value)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push(\"/dashboard/objednavky/nova-objednavka\")}\n                title=\"Objednávky\"\n            />\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                {orders && filteredOrders.length ?\n                    filteredOrders.map((order, idx) => (\n                        <OrderOverview\n                            key={idx}\n                            order={order}\n                            handleUpdateClick={() => push(`/dashboard/objednavky/${order.orderedBy._id}/${order._id}`)}\n                            items={items}\n                            handleFulfill={handleFulfill}\n                            handleFinish={handleFinish}\n                        />\n                    )) : (\n                        <div>\n                            Žiadne objednávky\n                        </div>\n                    )\n                }\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default OrdersSection\n","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx",["517","518","519"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../..//context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useHistory } from 'react-router-dom'\n\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ProductOverview from '../../components/product-overview/product-overview.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport Pagination from '../../components/pagination/pagination.component'\n\nimport Fuse from 'fuse.js'\n\n\nconst EshopSection = () => {\n    const { currentUser, token } = useContext(AuthContext)\n\n    const {\n        isLoading,\n        showModal,\n        message,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        showUpdateForm,\n        products,\n        lensesArr,\n        getProducts,\n        getLenses,\n        handleProductDelete,\n        deleteLenses,\n    } = useContext(WarehouseContext)\n\n    const { push } = useHistory()\n\n    const [searchQuery, setSearchQuery] = useState('')\n\n    const items = [\n        {\n            id: 0,\n            name: \"Všetko\",\n            permission: 0,\n        },\n        {\n            id: 1,\n            name: \"Obchodná 57, Bratislava\",\n            permission: 1,\n        },\n        {\n            id: 2,\n            name: \"Miletičova 38, Bratislava\",\n            permission: 2,\n        },\n        {\n            id: 3,\n            name: \"Senica, OC Branč\",\n            permission: 3,\n        },\n        {\n            id: 4,\n            name: \"Vajnory, Bratislava\",\n            permission: 4,\n        },\n        // {\n        //     id: 5,\n        //     name: \"Trnava, City Aréna\",\n        //     permission: 5,\n        // },\n    ]\n\n    const filteredItems = items.filter(item => item.permission === currentUser.premises || currentUser.admin >= 2)\n    const [activeIndex, setActiveIndex] = useState(2)\n\n    useEffect(() => {\n        console.log(\"fetch products\")\n        if (!products) {\n            getProducts()\n            getLenses()\n        }\n\n        if (!message) {\n            closeModal()\n        }\n    }, [products, lensesArr, token])\n\n    useEffect(() => {\n        if (filteredItems.length) {\n            setActiveIndex(filteredItems[0].id)\n        }\n    }, [])\n\n    const [allProducts, setAllProducts] = useState([])\n    useEffect(() => {\n        if (products && lensesArr)\n            setAllProducts([\n                ...products,\n                ...lensesArr\n            ])\n    }, [lensesArr, products])\n\n    const fuse = new Fuse(allProducts, {\n        keys: [\n            'name',\n            'brand',\n            'description',\n            'eanCode'\n        ]\n    })\n\n    useEffect(() => {\n        const results = fuse.search(searchQuery)\n        if (results.length > 0) {\n            setAllProducts(results.map(result => result.item))\n        }\n        if (!searchQuery) {\n            if (products && lensesArr) {\n                setAllProducts([\n                    ...products,\n                    ...lensesArr\n                ])\n            }\n\n        }\n    }, [searchQuery])\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [productsPerPage] = useState(10)\n    const indexOfLastProduct = currentPage * productsPerPage\n    const indexOfFirstProduct = indexOfLastProduct - productsPerPage\n    const currentProducts = allProducts.slice(indexOfFirstProduct, indexOfLastProduct)\n    const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('sklad/novy-produkt')}\n\n                title=\"E-shop\"\n            />\n\n            <SectionNavbar\n                items={filteredItems}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            {/* Products container */}\n            <ScrollContainer>\n                {\n                    currentProducts && currentProducts.map(product => (\n                        <ProductOverview\n                            key={product._id}\n                            name={product.name}\n                            stock={typeof product.available === \"number\" ? product.available : product.available ? activeIndex === 0 ? product.available.reduce((acc, currValue) => acc + currValue) : product.available[activeIndex - 1] : null}\n                            id={product.eanCode || product._id}\n                            price={(product.price / 100).toFixed(2)}\n                            image={product.image}\n                            handleUpdateButton={() => {\n                                showUpdateForm(product.type ? 0 : 1)\n                                push(`sklad/${product._id}`)\n                            }}\n                            handleDeleteButton={product.dioptersRange ? () => deleteLenses(product._id) : () => handleProductDelete(product._id)}\n                        />\n                    ))\n                }\n                {/* {\n                    lenses && lenses.map(product => (\n                        <ProductOverview\n                            key={product._id}\n                            name={product.name}\n                            id={product._id}\n                            price={(product.price / 100).toFixed(2)}\n                            image={product.image}\n                            handleUpdateButton={() => push(`sklad/${product._id}`)}\n                            handleDeleteButton={() => deleteLense(product._id)}\n                        />\n                    ))\n                } */}\n\n                <Pagination\n                    productsPerPage={productsPerPage}\n                    totalProducts={allProducts.length}\n                    paginate={paginate}\n                    activePage={currentPage}\n                />\n            </ScrollContainer>\n        </section >\n    )\n}\n\nexport default EshopSection\n","/imooptik-frontend/src/sections/analytics/analytics.section.jsx",[],"/imooptik-frontend/src/sections/product/product.section.jsx",["520","521","522"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\n\nimport CustomFormSwitch from '../../components/custom-form-switch/custom-form-switch.component'\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\n\nimport { useFetch } from '../../hooks/useFetch'\n\nimport {\n    Header,\n    AddButton,\n    DeleteButton,\n    Title,\n    ProductImage,\n    DraftCheckBox,\n    ImageContainer,\n} from './product.styles'\n\nconst ProductSection = () => {\n    const { currentUser, token } = useContext(AuthContext)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n\n    const { response } = useFetch('api/admin/products/nextEanCode', requestOptions)\n\n    const [showImageModal, setImageModal] = useState(false)\n    const { id } = useParams()\n    const warData = useContext(WarehouseContext)\n    const {\n        switchFormButtons,\n        formToShow,\n        toggleProductForms,\n        isUpdating,\n        activeCategoryIndex,\n        categories,\n        getEanCode,\n        toggleDraft,\n        handleCategoryChange,\n        handleAvailableChange,\n        handleSizeChange,\n        selectImage,\n        product,\n        createNewProduct,\n        updateProduct,\n        handleProductDelete,\n        resetProduct,\n        lenses,\n        handleLensesChange,\n        handleLensesDioptersRangeChange,\n        handleLensesCylinderRangeChange,\n        getSigleLenses,\n        createNewLenses,\n        updateLenses,\n        deleteLenses,\n        getSingleProduct,\n        handleChange,\n        handleSpecsChange,\n        lensesParameters,\n        handleParameterChange\n    } = warData\n\n    const {\n        closeModal,\n        isLoading,\n        showModal,\n        message\n    } = useContext(LoadingModalContext)\n\n    const { selectedImage } = useContext(ImageContext)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (formToShow === 0) {\n            if (!product.imagePath) {\n                alert(\"Žiaden obrazok!\")\n                return\n            }\n\n            if (id === 'novy-produkt') {\n                createNewProduct(product)\n                resetProduct()\n            } else {\n                updateProduct(product)\n                resetProduct()\n            }\n        } else {\n            if (!lenses.imagePath) {\n                alert(\"Žiaden obrazok!\")\n                return\n            }\n\n            if (id === 'novy-produkt') {\n                createNewLenses(lenses)\n            } else {\n                updateLenses(lenses)\n            }\n\n        }\n\n    }\n\n    useEffect(() => {\n        if (id !== \"novy-produkt\") {\n            if (formToShow === 0) {\n                getSingleProduct(id)\n            } else {\n                getSigleLenses(id)\n            }\n        } else {\n\n        }\n    }, [id])\n\n    useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            resetProduct()\n        }\n    }, [])\n\n    useEffect(() => {\n        if (response) {\n            if (!product.eanCode) {\n                getEanCode(response.eanCode)\n            }\n        }\n    }, [response])\n\n\n    return (\n        <form onSubmit={e => handleSubmit(e)}>\n            { showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={selectImage} />}\n            <Header>\n                <div>\n                    <h1>{isUpdating ? \"Upraviť produkt\" : \"Pridať nový produkt\"}</h1>\n                </div>\n                <div>\n                    <DraftCheckBox\n                        label='Verejný'\n                        isActive={formToShow === 0 ? product.eshop : lenses.eshop}\n                        handleClick={() => toggleDraft()}\n                    />\n                    {isUpdating && <DeleteButton onClick={formToShow === 0 ? () => handleProductDelete(product._id) : () => deleteLenses(lenses._id)}>Vymazať</DeleteButton>}\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť produkt\" : \"Pridať product\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating &&\n                    <CustomFormSwitch\n                        items={switchFormButtons}\n                        title=\"Aký produkt chcete pridať?\"\n                        activeIndex={formToShow}\n                        handleClick={toggleProductForms}\n                    />\n                }\n\n                {formToShow === 0 ? (\n                    <ProductGlassesForm\n                        activeCategoryIndex={activeCategoryIndex}\n                        categories={categories}\n                        product={product}\n                        handleChange={handleChange}\n                        handleSizeChange={handleSizeChange}\n                        handleSpecsChange={handleSpecsChange}\n                        handleCategoryChange={handleCategoryChange}\n                        handleAvailableChange={handleAvailableChange}\n                        lensesParameters={lensesParameters}\n                        handleParameterChange={handleParameterChange}\n                        currentUser={currentUser}\n                    />\n                ) : (\n                        <ProductLensesForm\n                            lense={lenses}\n                            handleChange={handleLensesChange}\n                            handleLensesDioptersRangeChange={handleLensesDioptersRangeChange}\n                            handleLensesCylinderRangeChange={handleLensesCylinderRangeChange}\n                        />\n                    )\n                }\n\n                <div>\n                    <ImageContainer>\n\n                        <Title>Obrázok</Title>\n\n                        <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </ProductImage>\n                    </ImageContainer>\n                </div>\n            </ScrollContainer>\n\n        </form >\n    )\n}\n\nexport default ProductSection\n","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx",["523"],"import React, { useState, useEffect, useContext } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    PostContainer,\n    PostImage,\n    PostContent,\n    Options,\n    UpdateButton,\n    DeleteButton\n} from './blog-posts.styles'\n\nconst BlogPosts = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { getPosts, posts, postsCount, handlePostDelete } = useContext(BlogContext)\n    const { push } = useHistory()\n    const [searchQuery, setSearchQuery] = useState('')\n    const items = [\n        {\n            id: 0,\n            name: \"Dátum pridania\"\n        },\n        {\n            id: 1,\n            name: \"Abecedne\"\n        },\n    ]\n\n    const [activeIndex, setActiveIndex] = useState(0)\n\n    useEffect(() => {\n        if (!posts) {\n            getPosts(items[activeIndex])\n        }\n    }, [posts])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('blog/novy-prispevok')}\n                count={postsCount}\n                title=\"Blog\"\n            />\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                {\n                    posts && posts.length ? posts.map(post => (\n                        <PostContainer key={post._id}>\n                            <PostImage>\n                                {post.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${post.image.imagePath}`} alt={post.image.alt} />}\n                            </PostImage>\n                            <PostContent>\n                                <h2>{post.name}</h2>\n                                <p>{post.description}</p>\n                            </PostContent>\n                            <Options>\n                                <UpdateButton onClick={() => push(`blog/${post._id}`)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={() => handlePostDelete(post._id)}>Vymazať</DeleteButton>\n                            </Options>\n                        </PostContainer>\n                    )) : (\n                            <div>\n                                Žiadne príspevky\n                            </div>\n                        )\n                }\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BlogPosts\n","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx",["524","525"],"/imooptik-frontend/src/sections/booking/booking.section.jsx",["526","527","528"],"import React, { useState, useEffect, useContext } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { BookingContext } from '../../context/booking/booking.context'\nimport { useHistory } from 'react-router-dom'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport BookingCalendarOverview from \"../../components/booking-calendar-overview/booking-calendar-overview.component\"\n\nimport Calendar from '../../components/calendar/calendar.component'\n\nimport {\n    Title,\n    GridRow,\n    CalendarGridContainer,\n    AppoimentOverview,\n    Time,\n    Line,\n    // TwoRowGrid,\n    Name,\n    Desc,\n    Options,\n    ConfirmButton,\n    DeclineButton,\n    AppoimentContainer,\n    AppoimentCol,\n    NoteContainer\n} from './booking.styles'\n\nconst BookingSection = () => {\n    const { push } = useHistory()\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const bookingData = useContext(BookingContext)\n\n    const {\n        calendar,\n        calendars,\n        bookings,\n        // bookingRows,\n        getCalendars,\n        getCalendar,\n        userBookings,\n        getUserBookings,\n        getBookings,\n        // getBookingRows\n        activeCalendar,\n        selectedDate,\n        setSelectedDate,\n        resetBooking\n    } = bookingData\n\n    const [searchQuery, setSearchQuery] = useState('')\n\n    useEffect(() => {\n        if (!calendars) {\n            getCalendars()\n            getUserBookings()\n        }\n    }, [calendars])\n\n    useEffect(() => {\n        if (!bookings) {\n            getBookings()\n        }\n    }, [calendars])\n\n    useEffect(() => {\n        return () => {\n            resetBooking()\n        }\n    }, [])\n\n    if (!calendars) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('rezervacie/novy-kalendar')}\n                title=\"Kalendar objednávok\"\n            />\n\n            <ScrollContainer>\n                <Title>Pobočky</Title>\n                <GridRow>\n                    {calendars.map((calendar, idx) => (\n                        <BookingCalendarOverview key={idx} calendar={calendar} handleClick={() => getCalendar(calendar._id, idx + 1)} handleUpdateClick={() => push(`rezervacie/${calendar._id}`)} isActive={activeCalendar === idx + 1} />\n                    ))}\n                </GridRow>\n\n                {calendar.name && (\n                    <React.Fragment>\n                        <Title>Kalendár</Title>\n                        <CalendarGridContainer>\n                            <Calendar calendar={calendar} setSelectedDate={setSelectedDate} />\n\n                            {calendar.name && selectedDate.name && <AppoimentOverview>\n                                <Title>{selectedDate.name.charAt(0).toUpperCase() + selectedDate.name.slice(1)}</Title>\n\n                                {\n                                    calendar.booked[selectedDate.value].map((date, idx) => {\n                                        const filteredUserBookings = userBookings.filter(booking => booking.dueDate === selectedDate.value && booking.dueTime.split(\":\")[0] === date)\n                                        const time = date.split('/')[0] + \":\" + date.split('/')[1]\n\n                                        return (\n                                            <AppoimentContainer key={idx}>\n                                                <Time>{time}</Time>\n                                                <Line />\n                                                {\n                                                    filteredUserBookings.map((user, idx) => {\n                                                        const bookingType = bookings.find(booking => booking._id === user.booking)\n\n                                                        return (\n                                                            <AppoimentCol key={idx}>\n                                                                <div>\n                                                                    <Name>{user.name}</Name>\n                                                                    <Desc>{bookingType.name}</Desc>\n                                                                </div>\n                                                                <Options>\n                                                                    <ConfirmButton>Vybavený</ConfirmButton>\n                                                                    <DeclineButton>Neprišiel</DeclineButton>\n                                                                </Options>\n                                                                <NoteContainer>\n                                                                    <p>{user.note}</p>\n                                                                </NoteContainer>\n                                                            </AppoimentCol>\n                                                        )\n                                                    })\n                                                }\n                                            </AppoimentContainer>\n                                        )\n                                    })\n                                }\n                            </AppoimentOverview>}\n                        </CalendarGridContainer>\n                    </React.Fragment>\n                )}\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BookingSection\n","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx",[],"/imooptik-frontend/src/sections/post/post.section.jsx",["529","530","531"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport CustomTextarea from '../../components/custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport { Quill } from 'react-quill'\n\nimport {\n    Header,\n    GridContainer,\n    PostImage,\n    DeleteButton,\n    AddButton,\n    Title,\n    ContentTextare,\n} from './post.styles'\n\nconst PostSection = () => {\n    const { id } = useParams()\n    const { push } = useHistory()\n    const {\n        createPost,\n        isLoading,\n        message,\n        showLoading,\n        setIsLoading,\n        getPost,\n        post,\n        handlePostUpdate,\n        resetBlog\n    } = useContext(BlogContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [content, setContent] = useState('')\n    const [image, setImage] = useState('')\n    const [draft, toggleDraft] = useState(false)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (image.length <= 0) return\n        if (content.length <= 0) return\n\n        if (id === 'novy-prispevok') {\n            createPost(image, title, description, draft, content)\n        } else {\n            handlePostUpdate(title, description, draft, content, image, id)\n        }\n\n        push('/dashboard/blog')\n\n    }\n\n    useEffect(() => {\n        setSelectedImage(null)\n\n        if (id !== 'novy-prispevok') {\n            getPost(id)\n            setIsUpdating(true)\n        }\n    }, [id])\n\n    useEffect(() => {\n        console.log(post)\n        if (post) {\n            console.log(post)\n            setTitle(post.name)\n            setDescription(post.description)\n            setContent(post.html)\n            toggleDraft(post.draft)\n            if (post.image) {\n                setImage(post.image._id)\n                setSelectedImage(post.image)\n            }\n        }\n    }, [post])\n\n    useEffect(() => {\n        return () => {\n            resetBlog()\n            setTitle('')\n            setDescription('')\n            setContent('')\n            setImage('')\n            toggleDraft(false)\n            setImageModal(false)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {isLoading && <Popup loading={showLoading} title={message} close={() => setIsLoading(false)} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={setImage} />}\n\n            <Header>\n                <div>\n                    <h1>Post</h1>\n                </div>\n                <div>\n                    <CustomCheckbox\n                        label='Draft'\n                        checked={draft}\n                        onChange={() => toggleDraft(!draft)}\n                    />\n                    <DeleteButton>Vymazať</DeleteButton>\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť príspevok\" : \"Pridať príspevok\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n\n                <GridContainer>\n                    <div>\n                        <h2>Informácia</h2>\n                        <CustomInput\n                            label=\"Nadpis\"\n                            type='text'\n                            name='title'\n                            value={title}\n                            handleChange={(e) => setTitle(e.target.value)}\n                            required\n                        />\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={description}\n                            handleChange={(e) => setDescription(e.target.value)}\n                            required\n                        />\n                        <h2>Titulná fotka</h2>\n                        <PostImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </PostImage>\n                    </div>\n                    <div>\n                        <Title>Obsah</Title>\n                        <QuillToolbar />\n                        <ContentTextare\n                            value={content}\n                            onChange={setContent}\n                            modules={modules}\n                            formats={formats}\n                        />\n                    </div>\n\n                </GridContainer>\n\n            </ScrollContainer>\n        </form>\n    )\n}\n\n\nconst CustomUndo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n        />\n    </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n        />\n    </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n    this.quill.history.undo();\n}\nfunction redoChange() {\n    this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n    \"arial\",\n    \"comic-sans\",\n    \"courier-new\",\n    \"georgia\",\n    \"helvetica\",\n    \"lucida\"\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nconst modules = {\n    toolbar: {\n        container: \"#toolbar\",\n        handlers: {\n            undo: undoChange,\n            redo: redoChange\n        }\n    },\n    history: {\n        delay: 500,\n        maxStack: 100,\n        userOnly: true\n    }\n};\n\n// Formats objects for setting up the Quill editor\nconst formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"align\",\n    \"strike\",\n    \"script\",\n    \"blockquote\",\n    \"background\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"color\",\n    \"code-block\"\n];\n\n// Quill Toolbar component\nconst QuillToolbar = () => (\n    <div id=\"toolbar\" className=\"toolbar\">\n        <span className=\"ql-formats\">\n            <select className=\"ql-size\" defaultValue=\"medium\">\n                <option value=\"extra-small\">Size 1</option>\n                <option value=\"small\">Size 2</option>\n                <option value=\"medium\">Size 3</option>\n                <option value=\"large\">Size 4</option>\n            </select>\n            <select className=\"ql-header\" defaultValue=\"3\">\n                <option value=\"1\">Heading</option>\n                <option value=\"2\">Subheading</option>\n                <option value=\"3\">Normal</option>\n            </select>\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n        </span>\n        <span className=\"ql-formats\">\n            <select className=\"ql-align\" />\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n                <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n                <CustomRedo />\n            </button>\n        </span>\n    </div>\n);\n\n\nexport default PostSection\n","/imooptik-frontend/src/sections/order/order.section.jsx",["532","533","534","535","536","537","538"],"/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.queries.jsx",[],"/imooptik-frontend/src/context/image/image.queries.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx",[],"/imooptik-frontend/src/context/booking/booking.queries.jsx",[],"/imooptik-frontend/src/context/blog/blog.queries.jsx",[],"/imooptik-frontend/src/context/user/user.utils.jsx",[],"/imooptik-frontend/src/context/orders/orders.utils.jsx",[],"/imooptik-frontend/src/context/orders/orders.queries.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.styles.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx",[],"/imooptik-frontend/src/context/user/user.queries.jsx",[],"/imooptik-frontend/src/sections/analytics/analytics.styles.jsx",[],"/imooptik-frontend/src/sections/customers/customers.styles.jsx",[],"/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx",[],"/imooptik-frontend/src/sections/product/product.styles.jsx",[],"/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx",[],"/imooptik-frontend/src/sections/booking/booking.styles.jsx",[],"/imooptik-frontend/src/sections/order/order.styles.jsx",[],"/imooptik-frontend/src/sections/post/post.styles.jsx",[],"/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.component.jsx",[],"/imooptik-frontend/src/components/pagination/pagination.component.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.component.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.component.jsx",["539","540"],"import React, { useEffect, useContext, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\n// import { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\n// import CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    // const {\n    //     getMessage,\n    //     setIsLoading,\n    //     setShowModal,\n    //     closeModal\n    // } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    // const getCropData = async (e) => {\n    //     e.preventDefault()\n    //     setShowModal(true)\n    //     setIsLoading(true)\n\n    //     try {\n    //         // if (typeof cropper !== 'undefined') {\n    //         toDataUrl(imgUrl, async (imgData) => {\n    //             const data = await handleImage(imgData, imageName, imageAlt)\n\n    //             if (data.image) {\n    //                 setImage(data.image._id)\n    //                 setSelectedImage(data.image)\n    //                 getImages()\n    //                 close()\n    //             }\n    //         })\n\n    //         // }\n    //         setShowModal(false)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    //     closeModal()\n    // };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Vybrať obrázok</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.component.jsx",["541"],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx",[],"/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx",[],"/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx",["542","543"],"/imooptik-frontend/src/components/user-form/user-form.component.jsx",["544","545","546"],"/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.component.jsx",["547","548"],"import React, { useState } from 'react'\n\nimport {\n    Container,\n    HeaderBlock,\n    Dayblock,\n    BookingContainer,\n    DayRowContainer,\n    DayNumber\n} from './calendar.styles'\n\nconst Calendar = ({ calendar, setSelectedDate }) => {\n    const blocks = [\n        {\n            name: 'Pondelok'\n        },\n        {\n            name: 'Utorok'\n        },\n        {\n            name: 'Streda'\n        },\n        {\n            name: 'Štvrtok'\n        },\n        {\n            name: 'Piatok'\n        },\n        {\n            name: 'Sobota'\n        },\n        {\n            name: 'Nedeľa'\n        },\n    ]\n\n    const [activeIndex, setActiveIndex] = useState(null)\n\n    const date = new Date()\n    const year = date.getFullYear()\n    const month = date.getMonth()\n    let firstDayOfCurrentMonth = new Date(year, month).getDay()\n    const daysInMonth = new Date(year, month + 1, 0).getDate()\n\n    if (firstDayOfCurrentMonth === 0) {\n        firstDayOfCurrentMonth = 7\n    }\n\n    let arr = []\n    let j = 1\n    let bookedDays = []\n\n    if (calendar.booked) {\n        bookedDays = Object.keys(calendar.booked)\n    }\n    // const bookedDays = [\"28/12/2020\", \"28/12/2020\", \"28/12/2020\", \"28/12/2020\", \"28/12/2020\", \"25/12/2020\", \"30/12/2020\", \"28/12/2020\", \"25/12/2020\", \"30/12/2020\"]\n\n    for (let i = 0; i < 42; i++) {\n        if (i < firstDayOfCurrentMonth - 1) {\n            arr.push({\n                day: 0\n            })\n        } else if (i < daysInMonth + firstDayOfCurrentMonth - 1) {\n            let obj = {}\n            let numberOfBookings = 1\n            bookedDays.forEach((day, idx) => {\n                if (j === Number(day.split('/')[0])) {\n                    obj = {\n                        bookDate: day,\n                        booked: calendar.booked[day].length,\n                    }\n                    return\n                }\n            })\n\n            arr.push({\n                ...obj,\n                day: j++\n            })\n        }\n    }\n\n    const handleClick = (day, idx, bookDate) => {\n        const d = new Date(year, month, day)\n        const options = { weekday: 'long', month: 'long', day: 'numeric' };\n        setActiveIndex(idx)\n        setSelectedDate({\n            name: d.toLocaleDateString(\"sk-SK\", options),\n            value: bookDate\n        })\n    }\n\n    return (\n        <Container>\n            {\n                blocks.map(({ name }, idx) => (\n                    <HeaderBlock key={idx}>\n                        {name}\n                    </HeaderBlock>\n                ))\n            }\n            {\n                arr.map(({ day, booked, bookDate }, idx) => (\n                    <Dayblock key={idx} onClick={booked ? () => handleClick(day, idx, bookDate) : null}>\n                        {!(day === 0) && (\n                            <DayRowContainer>\n                                {booked && <BookingContainer active={idx === activeIndex}>{booked}</BookingContainer>}\n                                <DayNumber>{day}</DayNumber>\n                            </DayRowContainer>\n                        )}\n                    </Dayblock>\n                ))\n            }\n        </Container>\n    )\n}\n\nexport default Calendar\n","/imooptik-frontend/src/components/combined-product-overview/combined-product-overview.component.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx",[],"/imooptik-frontend/src/sections/order/sub-sections/diopters/diopters.seb-section.jsx",["549"],"/imooptik-frontend/src/sections/order/sub-sections/summary/summary.sub-section.jsx",[],"/imooptik-frontend/src/sections/order/sub-sections/lenses/lenses.sub-section.jsx",[],"/imooptik-frontend/src/sections/order/sub-sections/eshop/eshop.sub-section.jsx",[],"/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.styles.jsx",[],"/imooptik-frontend/src/components/pagination/pagination.styles.jsx",[],"/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx",[],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx",[],"/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx",[],"/imooptik-frontend/src/components/user-form/user.form-styles.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx",[],"/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx",[],"/imooptik-frontend/src/components/combined-product-overview/combined-product-overview.styles.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx",[],"/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx",[],"/imooptik-frontend/src/components/modal-info-container/modal-info-container.component.jsx",["550"],"import React from 'react'\n\n\nimport { useFetch } from '../../hooks/useFetch'\n\nimport OrderLensesOverview from '../order-lenses-overview/order-lenses-overview.component'\nimport OrderProductOverview from '../order-product-overview/order-product-overview.component'\n\nimport {\n    AiOutlineClose\n} from 'react-icons/ai'\n\nimport {\n    ModalContainer,\n    CloseButton\n} from './modal-info-container.styles'\n\nconst ModalInfoContaier = ({ product, productType, closeModal }) => {\n    const type = productType === 'lens' ? 'lenses' : 'products'\n    const { response, isLoading, error } = useFetch(`api/store/${type}/${product[productType]}`)\n\n    if (isLoading) return <ModalContainer><h1>Loading...</h1></ModalContainer>\n\n    if (response.lenses) {\n        return (\n            <ModalContainer>\n                <CloseButton onClick={closeModal}>Zatvoriť <div><AiOutlineClose /></div></CloseButton>\n                <OrderLensesOverview product={response.lenses} />\n            </ModalContainer>\n        )\n    }\n\n    return (\n        <ModalContainer>\n            <CloseButton onClick={closeModal}>Zatvoriť <div><AiOutlineClose /></div></CloseButton>\n            <OrderProductOverview product={response.product} />\n        </ModalContainer>\n    )\n}\n\nexport default ModalInfoContaier\n","/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx",[],"/imooptik-frontend/src/components/order-product-overview/order-product-overview.component.jsx",[],"/imooptik-frontend/src/components/order-lenses-overview/order-lenses-overview.component.jsx",[],"/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx",[],"/imooptik-frontend/src/components/modal-info-container/modal-info-container.styles.jsx",[],"/imooptik-frontend/src/components/order-lenses-overview/order-lenses-overview.styles.jsx",[],"/imooptik-frontend/src/components/order-product-overview/order-product-overview.styles.jsx",[],"/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx",[],"/imooptik-frontend/src/hooks/useFetch.jsx",["551"],"import { useEffect, useState } from 'react'\n\nexport const useFetch = (path, options) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, options)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [])\n\n    return { response, isLoading, error }\n}","/imooptik-frontend/src/components/order-address-form/order-address-form.component.jsx",[],"/imooptik-frontend/src/components/order-address-form/order-address-form.styles.jsx",[],"/imooptik-frontend/src/sections/calendar/calendar.section.jsx",["552","553","554"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BookingContext } from '../../context/booking/booking.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport InputRow from '../../components/product-input-row/product-input-row.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    DayTimesContainer,\n    CreateCalendarButton,\n    DayNames,\n    DeleteCalendarButton\n} from './calendar.styles'\n\nconst CalendarSection = () => {\n    const { calendarId } = useParams()\n    const {\n        isUpdatingCalendar,\n        handleCalendarChange,\n        handleDayTimeChange,\n        getCalendar,\n        createCalendar,\n        updateCalendar,\n        delCalendar,\n        calendar,\n        resetBooking\n    } = useContext(BookingContext)\n\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (calendarId === 'novy-kalendar') {\n            createCalendar(calendar)\n        } else {\n            console.log('update calendar')\n            updateCalendar(calendar)\n        }\n    }\n\n    useEffect(() => {\n        if (calendarId !== 'novy-kalendar') {\n            getCalendar(calendarId)\n        }\n    }, [calendarId])\n\n    useEffect(() => {\n        return () => {\n            resetBooking()\n        }\n    }, [])\n\n    if (!calendar || showModal) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n\n    console.log(isUpdatingCalendar)\n    console.log(calendar)\n\n    return (\n        <section>\n            <form onSubmit={handleSubmit}>\n                <Header>\n                    <div>\n                        <h1>{isUpdatingCalendar ? `Kalendár: ${calendar.name}` : \"Nový kalendár\"}</h1>\n                    </div>\n                    <div>\n                        {isUpdatingCalendar && <DeleteCalendarButton onClick={() => delCalendar(calendarId)}>Odstrániť</DeleteCalendarButton>}\n                        <CreateCalendarButton>{isUpdatingCalendar ? \"Upraviť kalendár\" : \"Vytvoriť kalendár\"}</CreateCalendarButton>\n                    </div>\n                </Header>\n                <ScrollContainer>\n                    <InputRow\n                        label=\"Meno kalendáru\"\n                        example=''\n                    >\n                        <CustomInput\n                            label=\"Pobočka*\"\n                            type='text'\n                            name='name'\n                            value={calendar.name}\n                            handleChange={(e) => handleCalendarChange(e)}\n                            required\n                        />\n                    </InputRow>\n                    <InputRow\n                        label=\"Koľko dní dopredu sa da objednať\"\n                        example=''\n                    >\n                        <CustomInput\n                            label=\"Počet dní\"\n                            type='number'\n                            name='daysIntoFuture'\n                            value={calendar.daysIntoFuture.toString()}\n                            handleChange={(e) => handleCalendarChange(e)}\n                            required\n                        />\n                    </InputRow>\n                    <InputRow\n                        label=\"Minimalný čas k odoslaní rezervácie\"\n                        example=''\n                    >\n                        <CustomInput\n                            label=\"Min\"\n                            type='number'\n                            name='allowMinutesBefore'\n                            value={calendar.allowMinutesBefore.toString()}\n                            handleChange={(e) => handleCalendarChange(e)}\n                            required\n                        />\n                    </InputRow>\n                    <InputRow\n                        label=\"Čas medzi rezerváciami\"\n                        example=''\n                    >\n                        <CustomInput\n                            label=\"Min*\"\n                            type='number'\n                            name='interval'\n                            value={calendar.interval.toString()}\n                            handleChange={(e) => handleCalendarChange(e)}\n                            required\n                        />\n                    </InputRow>\n\n                    <DayTimesContainer>\n                        <DayNames>\n                            <h3>Den</h3>\n                            <div>\n                                <h4>Pondelok</h4>\n                            </div>\n                            <div>\n                                <h4>Utorok</h4>\n                            </div>\n                            <div>\n                                <h4>Streda</h4>\n                            </div>\n                            <div>\n                                <h4>Štvrtok</h4>\n                            </div>\n                            <div>\n                                <h4>Piatok</h4>\n                            </div>\n                            <div>\n                                <h4>Sobota</h4>\n                            </div>\n                            <div>\n                                <h4>Nedeľa</h4>\n                            </div>\n                        </DayNames>\n                        <div>\n                            <h3>Začiatok prehliadok</h3>\n                            {calendar.startTimes.map((value, idx) => (\n                                <div key={idx}>\n                                    <CustomInput\n                                        label=\"Čas: HH/MM*\"\n                                        type='text'\n                                        name='startTimes'\n                                        value={value}\n                                        handleChange={(e) => handleDayTimeChange(e, idx)}\n                                        required\n                                    />\n                                </div>\n                            ))}\n                        </div>\n                        <div>\n                            <h3>Koniec prehliadok</h3>\n                            {calendar.endTimes.map((value, idx) => (\n                                <div key={idx}>\n                                    <CustomInput\n                                        label=\"Čas: HH/MM*\"\n                                        type='text'\n                                        name='endTimes'\n                                        value={value}\n                                        handleChange={(e) => handleDayTimeChange(e, idx)}\n                                        required\n                                    />\n                                </div>\n                            ))}\n                        </div>\n                    </DayTimesContainer>\n                </ScrollContainer>\n            </form>\n        </section>\n    )\n}\n\nexport default CalendarSection\n","/imooptik-frontend/src/sections/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/context/booking/booking.utils.jsx",[],"/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx",[],"/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx",[],"/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx",["555"],"/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx",[],{"ruleId":"556","replacedBy":"557"},{"ruleId":"558","replacedBy":"559"},{"ruleId":"560","severity":1,"message":"561","line":4,"column":23,"nodeType":"562","messageId":"563","endLine":4,"endColumn":34},{"ruleId":"560","severity":1,"message":"564","line":31,"column":19,"nodeType":"562","messageId":"563","endLine":31,"endColumn":27},{"ruleId":"560","severity":1,"message":"565","line":26,"column":10,"nodeType":"562","messageId":"563","endLine":26,"endColumn":18},{"ruleId":"560","severity":1,"message":"566","line":29,"column":9,"nodeType":"562","messageId":"563","endLine":29,"endColumn":19},{"ruleId":"567","severity":1,"message":"568","line":130,"column":8,"nodeType":"569","endLine":130,"endColumn":32,"suggestions":"570"},{"ruleId":"560","severity":1,"message":"571","line":19,"column":5,"nodeType":"562","messageId":"563","endLine":19,"endColumn":14},{"ruleId":"567","severity":1,"message":"572","line":50,"column":8,"nodeType":"569","endLine":50,"endColumn":15,"suggestions":"573"},{"ruleId":"567","severity":1,"message":"574","line":58,"column":8,"nodeType":"569","endLine":58,"endColumn":15,"suggestions":"575"},{"ruleId":"567","severity":1,"message":"576","line":81,"column":8,"nodeType":"569","endLine":81,"endColumn":34,"suggestions":"577"},{"ruleId":"567","severity":1,"message":"578","line":57,"column":8,"nodeType":"569","endLine":57,"endColumn":10,"suggestions":"579"},{"ruleId":"567","severity":1,"message":"580","line":89,"column":8,"nodeType":"569","endLine":89,"endColumn":36,"suggestions":"581"},{"ruleId":"567","severity":1,"message":"582","line":95,"column":8,"nodeType":"569","endLine":95,"endColumn":10,"suggestions":"583"},{"ruleId":"567","severity":1,"message":"584","line":129,"column":8,"nodeType":"569","endLine":129,"endColumn":21,"suggestions":"585"},{"ruleId":"567","severity":1,"message":"586","line":131,"column":8,"nodeType":"569","endLine":131,"endColumn":12,"suggestions":"587"},{"ruleId":"567","severity":1,"message":"588","line":138,"column":8,"nodeType":"569","endLine":138,"endColumn":10,"suggestions":"589"},{"ruleId":"567","severity":1,"message":"590","line":146,"column":8,"nodeType":"569","endLine":146,"endColumn":18,"suggestions":"591"},{"ruleId":"567","severity":1,"message":"592","line":47,"column":8,"nodeType":"569","endLine":47,"endColumn":15,"suggestions":"593"},{"ruleId":"567","severity":1,"message":"594","line":60,"column":8,"nodeType":"569","endLine":60,"endColumn":12,"suggestions":"595"},{"ruleId":"567","severity":1,"message":"596","line":67,"column":8,"nodeType":"569","endLine":67,"endColumn":10,"suggestions":"597"},{"ruleId":"567","severity":1,"message":"598","line":66,"column":8,"nodeType":"569","endLine":66,"endColumn":19,"suggestions":"599"},{"ruleId":"567","severity":1,"message":"600","line":72,"column":8,"nodeType":"569","endLine":72,"endColumn":19,"suggestions":"601"},{"ruleId":"567","severity":1,"message":"602","line":78,"column":8,"nodeType":"569","endLine":78,"endColumn":10,"suggestions":"603"},{"ruleId":"567","severity":1,"message":"604","line":70,"column":8,"nodeType":"569","endLine":70,"endColumn":12,"suggestions":"605"},{"ruleId":"567","severity":1,"message":"606","line":85,"column":8,"nodeType":"569","endLine":85,"endColumn":14,"suggestions":"607"},{"ruleId":"567","severity":1,"message":"608","line":98,"column":8,"nodeType":"569","endLine":98,"endColumn":10,"suggestions":"609"},{"ruleId":"567","severity":1,"message":"572","line":112,"column":8,"nodeType":"569","endLine":112,"endColumn":15,"suggestions":"610"},{"ruleId":"567","severity":1,"message":"611","line":127,"column":8,"nodeType":"569","endLine":127,"endColumn":29,"suggestions":"612"},{"ruleId":"567","severity":1,"message":"613","line":137,"column":8,"nodeType":"569","endLine":137,"endColumn":14,"suggestions":"614"},{"ruleId":"567","severity":1,"message":"615","line":150,"column":8,"nodeType":"569","endLine":150,"endColumn":27,"suggestions":"616"},{"ruleId":"567","severity":1,"message":"615","line":163,"column":8,"nodeType":"569","endLine":163,"endColumn":28,"suggestions":"617"},{"ruleId":"567","severity":1,"message":"618","line":185,"column":8,"nodeType":"569","endLine":185,"endColumn":21,"suggestions":"619"},{"ruleId":"567","severity":1,"message":"620","line":193,"column":8,"nodeType":"569","endLine":193,"endColumn":10,"suggestions":"621"},{"ruleId":"622","severity":1,"message":"623","line":148,"column":41,"nodeType":"624","endLine":148,"endColumn":61},{"ruleId":"622","severity":1,"message":"623","line":189,"column":45,"nodeType":"624","endLine":189,"endColumn":160},{"ruleId":"560","severity":1,"message":"625","line":13,"column":5,"nodeType":"562","messageId":"563","endLine":13,"endColumn":17},{"ruleId":"560","severity":1,"message":"626","line":1,"column":17,"nodeType":"562","messageId":"563","endLine":1,"endColumn":26},{"ruleId":"627","severity":1,"message":"628","line":155,"column":64,"nodeType":"629","messageId":"630","endLine":155,"endColumn":70},{"ruleId":"560","severity":1,"message":"626","line":1,"column":17,"nodeType":"562","messageId":"563","endLine":1,"endColumn":26},{"ruleId":"560","severity":1,"message":"631","line":18,"column":5,"nodeType":"562","messageId":"563","endLine":18,"endColumn":16},{"ruleId":"627","severity":1,"message":"628","line":55,"column":52,"nodeType":"629","messageId":"630","endLine":55,"endColumn":58},{"ruleId":"560","severity":1,"message":"632","line":65,"column":17,"nodeType":"562","messageId":"563","endLine":65,"endColumn":33},{"ruleId":"633","severity":1,"message":"634","line":66,"column":32,"nodeType":"635","messageId":"636","endLine":74,"endColumn":14},{"ruleId":"560","severity":1,"message":"637","line":8,"column":5,"nodeType":"562","messageId":"563","endLine":8,"endColumn":24},{"ruleId":"560","severity":1,"message":"638","line":20,"column":34,"nodeType":"562","messageId":"563","endLine":20,"endColumn":39},{"ruleId":"567","severity":1,"message":"639","line":22,"column":8,"nodeType":"569","endLine":22,"endColumn":10,"suggestions":"640"},{"ruleId":"560","severity":1,"message":"641","line":1,"column":17,"nodeType":"562","messageId":"563","endLine":1,"endColumn":25},{"ruleId":"567","severity":1,"message":"642","line":54,"column":8,"nodeType":"569","endLine":54,"endColumn":20,"suggestions":"643"},{"ruleId":"567","severity":1,"message":"602","line":60,"column":8,"nodeType":"569","endLine":60,"endColumn":10,"suggestions":"644"},{"ruleId":"627","severity":1,"message":"628","line":85,"column":40,"nodeType":"629","messageId":"630","endLine":85,"endColumn":46},"no-native-reassign",["645"],"no-negated-in-lhs",["646"],"no-unused-vars","'fetchImages' is defined but never used.","Identifier","unusedVar","'setLimit' is assigned a value but never used.","'useFetch' is defined but never used.","'closeModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.","ArrayExpression",["647"],"'ProductId' is defined but never used.","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["648"],"React Hook useEffect has missing dependencies: 'activeIndex' and 'filterItems'. Either include them or remove the dependency array.",["649"],"React Hook useEffect has missing dependencies: 'filterItems', 'fuse', and 'users'. Either include them or remove the dependency array.",["650"],"React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["651"],"React Hook useEffect has missing dependencies: 'closeModal', 'getLenses', 'getProducts', and 'message'. Either include them or remove the dependency array.",["652"],"React Hook useEffect has a missing dependency: 'filteredItems'. Either include it or remove the dependency array.",["653"],"React Hook useEffect has missing dependencies: 'fuse', 'lensesArr', and 'products'. Either include them or remove the dependency array.",["654"],"React Hook useEffect has missing dependencies: 'formToShow', 'getSigleLenses', and 'getSingleProduct'. Either include them or remove the dependency array.",["655"],"React Hook useEffect has a missing dependency: 'resetProduct'. Either include it or remove the dependency array.",["656"],"React Hook useEffect has missing dependencies: 'getEanCode' and 'product.eanCode'. Either include them or remove the dependency array.",["657"],"React Hook useEffect has missing dependencies: 'activeIndex', 'getPosts', and 'items'. Either include them or remove the dependency array.",["658"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["659"],"React Hook useEffect has a missing dependency: 'resetUser'. Either include it or remove the dependency array.",["660"],"React Hook useEffect has missing dependencies: 'getCalendars' and 'getUserBookings'. Either include them or remove the dependency array.",["661"],"React Hook useEffect has missing dependencies: 'bookings' and 'getBookings'. Either include them or remove the dependency array.",["662"],"React Hook useEffect has a missing dependency: 'resetBooking'. Either include it or remove the dependency array.",["663"],"React Hook useEffect has missing dependencies: 'getPost' and 'setSelectedImage'. Either include them or remove the dependency array.",["664"],"React Hook useEffect has a missing dependency: 'setSelectedImage'. Either include it or remove the dependency array.",["665"],"React Hook useEffect has a missing dependency: 'resetBlog'. Either include it or remove the dependency array.",["666"],["667"],"React Hook useEffect has missing dependencies: 'getLenses', 'getProducts', 'getUser', 'getUserOrder', 'orderId', and 'userId'. Either include them or remove the dependency array.",["668"],"React Hook useEffect has missing dependencies: 'setSelectedUser' and 'userId'. Either include them or remove the dependency array.",["669"],"React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["670"],["671"],"React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["672"],"React Hook useEffect has a missing dependency: 'resetOrder'. Either include it or remove the dependency array.",["673"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DeleteButton' is defined but never used.","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'ThreeColRow' is defined but never used.","'numberOfBookings' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'j'.","ArrowFunctionExpression","unsafeRefs","'ParametersContainer' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'options' and 'path'. Either include them or remove the dependency array.",["674"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getCalendar'. Either include it or remove the dependency array.",["675"],["676"],"no-global-assign","no-unsafe-negation",{"desc":"677","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"683","fix":"684"},{"desc":"685","fix":"686"},{"desc":"687","fix":"688"},{"desc":"689","fix":"690"},{"desc":"691","fix":"692"},{"desc":"693","fix":"694"},{"desc":"695","fix":"696"},{"desc":"697","fix":"698"},{"desc":"699","fix":"700"},{"desc":"701","fix":"702"},{"desc":"703","fix":"704"},{"desc":"705","fix":"706"},{"desc":"707","fix":"708"},{"desc":"709","fix":"710"},{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"679","fix":"717"},{"desc":"718","fix":"719"},{"desc":"720","fix":"721"},{"desc":"722","fix":"723"},{"desc":"724","fix":"725"},{"desc":"726","fix":"727"},{"desc":"728","fix":"729"},{"desc":"730","fix":"731"},{"desc":"732","fix":"733"},{"desc":"709","fix":"734"},"Update the dependencies array to be: [user, user.fName, user.lName]",{"range":"735","text":"736"},"Update the dependencies array to be: [getUsers, users]",{"range":"737","text":"738"},"Update the dependencies array to be: [activeIndex, filterItems, users]",{"range":"739","text":"740"},"Update the dependencies array to be: [searchQuery, activeIndex, fuse, users, filterItems]",{"range":"741","text":"742"},"Update the dependencies array to be: [getOrders]",{"range":"743","text":"744"},"Update the dependencies array to be: [products, lensesArr, token, message, getProducts, getLenses, closeModal]",{"range":"745","text":"746"},"Update the dependencies array to be: [filteredItems]",{"range":"747","text":"748"},"Update the dependencies array to be: [fuse, lensesArr, products, searchQuery]",{"range":"749","text":"750"},"Update the dependencies array to be: [formToShow, getSigleLenses, getSingleProduct, id]",{"range":"751","text":"752"},"Update the dependencies array to be: [resetProduct]",{"range":"753","text":"754"},"Update the dependencies array to be: [getEanCode, product.eanCode, response]",{"range":"755","text":"756"},"Update the dependencies array to be: [activeIndex, getPosts, items, posts]",{"range":"757","text":"758"},"Update the dependencies array to be: [getUser, id]",{"range":"759","text":"760"},"Update the dependencies array to be: [resetUser]",{"range":"761","text":"762"},"Update the dependencies array to be: [calendars, getCalendars, getUserBookings]",{"range":"763","text":"764"},"Update the dependencies array to be: [bookings, calendars, getBookings]",{"range":"765","text":"766"},"Update the dependencies array to be: [resetBooking]",{"range":"767","text":"768"},"Update the dependencies array to be: [getPost, id, setSelectedImage]",{"range":"769","text":"770"},"Update the dependencies array to be: [post, setSelectedImage]",{"range":"771","text":"772"},"Update the dependencies array to be: [resetBlog]",{"range":"773","text":"774"},{"range":"775","text":"738"},"Update the dependencies array to be: [products, lensesArr, userId, orderId, getUser, getUserOrder, getProducts, getLenses]",{"range":"776","text":"777"},"Update the dependencies array to be: [setSelectedUser, user, userId]",{"range":"778","text":"779"},"Update the dependencies array to be: [selectedUser.name, users]",{"range":"780","text":"781"},"Update the dependencies array to be: [selectedUser.email, users]",{"range":"782","text":"783"},"Update the dependencies array to be: [products, searchQuery]",{"range":"784","text":"785"},"Update the dependencies array to be: [resetOrder]",{"range":"786","text":"787"},"Update the dependencies array to be: [options, path]",{"range":"788","text":"789"},"Update the dependencies array to be: [calendarId, getCalendar]",{"range":"790","text":"791"},{"range":"792","text":"768"},[2897,2921],"[user, user.fName, user.lName]",[1382,1389],"[getUsers, users]",[1585,1592],"[activeIndex, filterItems, users]",[2110,2136],"[searchQuery, activeIndex, fuse, users, filterItems]",[1579,1581],"[getOrders]",[2431,2459],"[products, lensesArr, token, message, getProducts, getLenses, closeModal]",[2585,2587],"[filteredItems]",[3397,3410],"[fuse, lensesArr, products, searchQuery]",[3586,3590],"[formToShow, getSigleLenses, getSingleProduct, id]",[3717,3719],"[resetProduct]",[3880,3890],"[getEanCode, product.eanCode, response]",[1376,1383],"[activeIndex, getPosts, items, posts]",[1629,1633],"[getUser, id]",[1757,1759],"[resetUser]",[1736,1747],"[calendars, getCalendars, getUserBookings]",[1840,1851],"[bookings, calendars, getBookings]",[1943,1945],"[resetBooking]",[2204,2208],"[getPost, id, setSelectedImage]",[2603,2609],"[post, setSelectedImage]",[2903,2905],"[resetBlog]",[3547,3554],[3856,3877],"[products, lensesArr, userId, orderId, getUser, getUserOrder, getProducts, getLenses]",[4082,4088],"[setSelectedUser, user, userId]",[4381,4400],"[selectedUser.name, users]",[4694,4714],"[selectedUser.email, users]",[5290,5303],"[products, searchQuery]",[5432,5434],"[resetOrder]",[684,686],"[options, path]",[1564,1576],"[calendarId, getCalendar]",[1668,1670]]
[{"/imooptik-frontend/src/index.js":"1","/imooptik-frontend/src/reportWebVitals.js":"2","/imooptik-frontend/src/App.jsx":"3","/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx":"4","/imooptik-frontend/src/context/auth/auth.context.jsx":"5","/imooptik-frontend/src/global.styles.jsx":"6","/imooptik-frontend/src/context/auth/auth.queries.jsx":"7","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx":"8","/imooptik-frontend/src/pages/reset-password/reset-password.jsx":"9","/imooptik-frontend/src/pages/dashboard/dashboard.jsx":"10","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx":"11","/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx":"12","/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx":"13","/imooptik-frontend/src/context/image/image.context.jsx":"14","/imooptik-frontend/src/context/blog/blog.context.jsx":"15","/imooptik-frontend/src/context/user/user.context.jsx":"16","/imooptik-frontend/src/context/warehouse/warehouse.context.jsx":"17","/imooptik-frontend/src/context/booking/booking.context.jsx":"18","/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx":"19","/imooptik-frontend/src/components/custom-input/custom-input.component.jsx":"20","/imooptik-frontend/src/components/sign-in/sign-in.component.jsx":"21","/imooptik-frontend/src/components/popup/pop-up.component.jsx":"22","/imooptik-frontend/src/components/sidenav/sidenav.component.jsx":"23","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx":"24","/imooptik-frontend/src/sections/customers/customers.section.jsx":"25","/imooptik-frontend/src/sections/orders/orders.section.jsx":"26","/imooptik-frontend/src/sections/analytics/analytics.section.jsx":"27","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx":"28","/imooptik-frontend/src/sections/product/product.section.jsx":"29","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx":"30","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx":"31","/imooptik-frontend/src/sections/booking/booking.section.jsx":"32","/imooptik-frontend/src/sections/post/post.section.jsx":"33","/imooptik-frontend/src/components/custom-button/custom-button.component.jsx":"34","/imooptik-frontend/src/context/image/image.queries.jsx":"35","/imooptik-frontend/src/context/blog/blog.queries.jsx":"36","/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx":"37","/imooptik-frontend/src/context/user/user.queries.jsx":"38","/imooptik-frontend/src/context/user/user.utils.jsx":"39","/imooptik-frontend/src/context/warehouse/warehouse.queries.jsx":"40","/imooptik-frontend/src/components/popup/pop.up.styles.jsx":"41","/imooptik-frontend/src/context/booking/booking.queries.jsx":"42","/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx":"43","/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx":"44","/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx":"45","/imooptik-frontend/src/sections/customers/customers.styles.jsx":"46","/imooptik-frontend/src/sections/analytics/analytics.styles.jsx":"47","/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx":"48","/imooptik-frontend/src/sections/product/product.styles.jsx":"49","/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx":"50","/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx":"51","/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx":"52","/imooptik-frontend/src/sections/booking/booking.styles.jsx":"53","/imooptik-frontend/src/sections/post/post.styles.jsx":"54","/imooptik-frontend/src/components/spinner/spinner.component.jsx":"55","/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx":"56","/imooptik-frontend/src/components/product-overview/product-overview.component.jsx":"57","/imooptik-frontend/src/components/section-header/section-header.component.jsx":"58","/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx":"59","/imooptik-frontend/src/components/pagination/pagination.component.jsx":"60","/imooptik-frontend/src/components/order-overview/order-overview.component.jsx":"61","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx":"62","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx":"63","/imooptik-frontend/src/components/modal-images/modal-images.component.jsx":"64","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx":"65","/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx":"66","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx":"67","/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx":"68","/imooptik-frontend/src/components/user-form/user-form.component.jsx":"69","/imooptik-frontend/src/components/calendar/calendar.component.jsx":"70","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx":"71","/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx":"72","/imooptik-frontend/src/components/spinner/spinner.styles.jsx":"73","/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx":"74","/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx":"75","/imooptik-frontend/src/components/pagination/pagination.styles.jsx":"76","/imooptik-frontend/src/components/section-header/section-header.styles.jsx":"77","/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx":"78","/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx":"79","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx":"80","/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx":"81","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx":"82","/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx":"83","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx":"84","/imooptik-frontend/src/components/user-form/user.form-styles.jsx":"85","/imooptik-frontend/src/components/calendar/calendar.styles.jsx":"86","/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx":"87","/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx":"88","/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx":"89","/imooptik-frontend/src/sections/order/order.section.jsx":"90","/imooptik-frontend/src/sections/order/order.styles.jsx":"91","/imooptik-frontend/src/components/order-product-overview/order-product-overview.component.jsx":"92","/imooptik-frontend/src/components/order-product-overview/order-product-overview.styles.jsx":"93"},{"size":717,"mtime":1608670306490,"results":"94","hashOfConfig":"95"},{"size":362,"mtime":1608191294784,"results":"96","hashOfConfig":"95"},{"size":1127,"mtime":1610476909100,"results":"97","hashOfConfig":"95"},{"size":1076,"mtime":1610126635393,"results":"98","hashOfConfig":"95"},{"size":5707,"mtime":1610143786733,"results":"99","hashOfConfig":"95"},{"size":700,"mtime":1609637180940,"results":"100","hashOfConfig":"95"},{"size":2292,"mtime":1609880010090,"results":"101","hashOfConfig":"95"},{"size":840,"mtime":1609978179243,"results":"102","hashOfConfig":"95"},{"size":1667,"mtime":1608613259561,"results":"103","hashOfConfig":"95"},{"size":6017,"mtime":1610511089560,"results":"104","hashOfConfig":"95"},{"size":506,"mtime":1608208021900,"results":"105","hashOfConfig":"95"},{"size":772,"mtime":1610476886850,"results":"106","hashOfConfig":"95"},{"size":548,"mtime":1610227196940,"results":"107","hashOfConfig":"95"},{"size":4412,"mtime":1610248621440,"results":"108","hashOfConfig":"95"},{"size":3956,"mtime":1609882050220,"results":"109","hashOfConfig":"95"},{"size":8977,"mtime":1610508943040,"results":"110","hashOfConfig":"95"},{"size":14240,"mtime":1610511296630,"results":"111","hashOfConfig":"95"},{"size":3603,"mtime":1610248120380,"results":"112","hashOfConfig":"95"},{"size":1466,"mtime":1609978281513,"results":"113","hashOfConfig":"95"},{"size":639,"mtime":1608689089980,"results":"114","hashOfConfig":"95"},{"size":1925,"mtime":1609978226453,"results":"115","hashOfConfig":"95"},{"size":714,"mtime":1609965412857,"results":"116","hashOfConfig":"95"},{"size":2301,"mtime":1610505203270,"results":"117","hashOfConfig":"95"},{"size":6416,"mtime":1610505472410,"results":"118","hashOfConfig":"95"},{"size":3736,"mtime":1610230808270,"results":"119","hashOfConfig":"95"},{"size":2125,"mtime":1609172793237,"results":"120","hashOfConfig":"95"},{"size":1381,"mtime":1608483136504,"results":"121","hashOfConfig":"95"},{"size":3179,"mtime":1609802280536,"results":"122","hashOfConfig":"95"},{"size":6167,"mtime":1610505588430,"results":"123","hashOfConfig":"95"},{"size":3697,"mtime":1610151028183,"results":"124","hashOfConfig":"95"},{"size":810,"mtime":1610132345623,"results":"125","hashOfConfig":"95"},{"size":6050,"mtime":1610248041540,"results":"126","hashOfConfig":"95"},{"size":9286,"mtime":1609878576620,"results":"127","hashOfConfig":"95"},{"size":283,"mtime":1608325857586,"results":"128","hashOfConfig":"95"},{"size":1560,"mtime":1610106635382,"results":"129","hashOfConfig":"95"},{"size":1793,"mtime":1608678905090,"results":"130","hashOfConfig":"95"},{"size":3229,"mtime":1610505863340,"results":"131","hashOfConfig":"95"},{"size":3282,"mtime":1610480180980,"results":"132","hashOfConfig":"95"},{"size":513,"mtime":1610149650113,"results":"133","hashOfConfig":"95"},{"size":7871,"mtime":1610248515360,"results":"134","hashOfConfig":"95"},{"size":677,"mtime":1610074517686,"results":"135","hashOfConfig":"95"},{"size":375,"mtime":1610247566450,"results":"136","hashOfConfig":"95"},{"size":898,"mtime":1609978275513,"results":"137","hashOfConfig":"95"},{"size":1263,"mtime":1609635810480,"results":"138","hashOfConfig":"95"},{"size":880,"mtime":1609978233033,"results":"139","hashOfConfig":"95"},{"size":1115,"mtime":1609635476450,"results":"140","hashOfConfig":"95"},{"size":753,"mtime":1608501615800,"results":"141","hashOfConfig":"95"},{"size":4920,"mtime":1610505239550,"results":"142","hashOfConfig":"95"},{"size":1535,"mtime":1610505951990,"results":"143","hashOfConfig":"95"},{"size":1658,"mtime":1609636415920,"results":"144","hashOfConfig":"95"},{"size":549,"mtime":1610145287903,"results":"145","hashOfConfig":"95"},{"size":728,"mtime":1610132354653,"results":"146","hashOfConfig":"95"},{"size":1999,"mtime":1609634745940,"results":"147","hashOfConfig":"95"},{"size":1711,"mtime":1609802520286,"results":"148","hashOfConfig":"95"},{"size":178,"mtime":1608409397640,"results":"149","hashOfConfig":"95"},{"size":624,"mtime":1609280754422,"results":"150","hashOfConfig":"95"},{"size":1207,"mtime":1609619098510,"results":"151","hashOfConfig":"95"},{"size":1077,"mtime":1610229649760,"results":"152","hashOfConfig":"95"},{"size":241,"mtime":1608402129090,"results":"153","hashOfConfig":"95"},{"size":834,"mtime":1609973813373,"results":"154","hashOfConfig":"95"},{"size":819,"mtime":1608478620604,"results":"155","hashOfConfig":"95"},{"size":3781,"mtime":1610070696946,"results":"156","hashOfConfig":"95"},{"size":10294,"mtime":1610359168497,"results":"157","hashOfConfig":"95"},{"size":8372,"mtime":1610248602300,"results":"158","hashOfConfig":"95"},{"size":681,"mtime":1610146980773,"results":"159","hashOfConfig":"95"},{"size":7927,"mtime":1610506859670,"results":"160","hashOfConfig":"95"},{"size":354,"mtime":1609286026892,"results":"161","hashOfConfig":"95"},{"size":651,"mtime":1608506295620,"results":"162","hashOfConfig":"95"},{"size":10757,"mtime":1610513265770,"results":"163","hashOfConfig":"95"},{"size":1752,"mtime":1610243146440,"results":"164","hashOfConfig":"95"},{"size":1316,"mtime":1610505761880,"results":"165","hashOfConfig":"95"},{"size":440,"mtime":1609635534260,"results":"166","hashOfConfig":"95"},{"size":377,"mtime":1608409635720,"results":"167","hashOfConfig":"95"},{"size":718,"mtime":1608401951890,"results":"168","hashOfConfig":"95"},{"size":1797,"mtime":1610132074873,"results":"169","hashOfConfig":"95"},{"size":646,"mtime":1609973838353,"results":"170","hashOfConfig":"95"},{"size":953,"mtime":1609636181490,"results":"171","hashOfConfig":"95"},{"size":419,"mtime":1609637307170,"results":"172","hashOfConfig":"95"},{"size":1127,"mtime":1609637931300,"results":"173","hashOfConfig":"95"},{"size":596,"mtime":1609639013590,"results":"174","hashOfConfig":"95"},{"size":3851,"mtime":1610125616673,"results":"175","hashOfConfig":"95"},{"size":554,"mtime":1609636648760,"results":"176","hashOfConfig":"95"},{"size":1062,"mtime":1608505999020,"results":"177","hashOfConfig":"95"},{"size":486,"mtime":1610505703940,"results":"178","hashOfConfig":"95"},{"size":1781,"mtime":1610507525630,"results":"179","hashOfConfig":"95"},{"size":789,"mtime":1610243190370,"results":"180","hashOfConfig":"95"},{"size":425,"mtime":1609365301650,"results":"181","hashOfConfig":"95"},{"size":447,"mtime":1609638204590,"results":"182","hashOfConfig":"95"},{"size":305,"mtime":1610506312030,"results":"183","hashOfConfig":"95"},{"size":4524,"mtime":1610512511750,"results":"184","hashOfConfig":"95"},{"size":518,"mtime":1610513116730,"results":"185","hashOfConfig":"95"},{"size":653,"mtime":1610513372000,"results":"186","hashOfConfig":"95"},{"size":288,"mtime":1610512772820,"results":"187","hashOfConfig":"95"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"1lk1amn",{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"190"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"190"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"190"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"190"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"190"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"190"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"190"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"190"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"190"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"190"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"190"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"190"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/imooptik-frontend/src/index.js",[],["387","388"],"/imooptik-frontend/src/reportWebVitals.js",[],"/imooptik-frontend/src/App.jsx",[],"/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx",[],"/imooptik-frontend/src/context/auth/auth.context.jsx",[],"/imooptik-frontend/src/global.styles.jsx",[],"/imooptik-frontend/src/context/auth/auth.queries.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset-password.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx",[],"/imooptik-frontend/src/context/image/image.context.jsx",["389","390"],"import React, { createContext, useState, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport { deleteImage, fetchImages, uploadImage, fetchFilteredImages } from './image.queries'\n\nexport const ImageContext = createContext({\n    isDisabled: false,\n    images: null,\n    selectedImage: null,\n    getImages: () => { },\n    handleImage: () => { },\n    handleDeleteImage: () => { },\n    setSelectedImage: () => { },\n    getNextImages: () => { },\n    getPrevImage: () => { }\n})\n\nconst ImageProvider = ({ children }) => {\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const { token } = useContext(AuthContext)\n\n    const [isDisabled, setIsDisabled] = useState(false)\n    const [images, setImages] = useState(null)\n    const [selectedImage, setSelectedImage] = useState(null)\n    const [limit, setLimit] = useState(4)\n    const [skip, setSkip] = useState(0)\n\n    const handleImage = async (img, imgName, imgAlt, setImage, close) => {\n        setShowModal(true)\n        setIsLoading(true)\n        setIsDisabled(true)\n\n        try {\n            const response = await uploadImage(token, img, imgName, imgAlt)\n            const data = await response.json()\n            console.log(data)\n\n            if (data.image) {\n                setSelectedImage(data.image)\n                setImage(data.image._id)\n                getImages()\n                close()\n            }\n\n            setShowModal(false)\n            setIsLoading(false)\n            setIsDisabled(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n            setIsDisabled(false)\n        }\n    }\n\n    const getNextImages = async (addToSkip) => {\n        try {\n            if (images.length !== limit) return\n\n            const response = await fetchFilteredImages(token, limit, skip + addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip + addToSkip)\n            }\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getPrevImage = async (addToSkip) => {\n        if (skip === 0) return\n        try {\n            const response = await fetchFilteredImages(token, limit, skip - addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip - addToSkip)\n\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getImages = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            // const response = await fetchImages()\n            const response = await fetchFilteredImages(token, limit, skip)\n\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n            closeModal()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleDeleteImage = async (id, e) => {\n        e.preventDefault()\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const respone = await deleteImage(token, id)\n            const data = await respone.json()\n\n            getMessage(data.message)\n            setIsLoading(false)\n            getImages()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <ImageContext.Provider\n            value={{\n                isDisabled,\n                images,\n                selectedImage,\n                getImages,\n                handleImage,\n                handleDeleteImage,\n                setSelectedImage,\n                getNextImages,\n                getPrevImage\n            }}\n        >\n            {children}\n        </ImageContext.Provider>\n    )\n}\n\nexport default ImageProvider","/imooptik-frontend/src/context/blog/blog.context.jsx",["391"],"import React, { createContext, useState, useContext } from 'react'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport {\n    fetchPosts,\n    createNewPost,\n    fetchSinglePost,\n    updatePost,\n    deletePost,\n} from './blog.queries'\n\n\nexport const BlogContext = createContext({\n    posts: null,\n    post: null,\n    postsCount: 0,\n    getPosts: () => { },\n    createPost: () => { },\n    getPost: () => { },\n    handlePostUpdate: () => { },\n    handlePostDelete: () => { },\n})\n\nconst BlogProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const [posts, setPosts] = useState(null)\n    const [post, setPost] = useState(null)\n    const [postsCount, setPostsCount] = useState(0)\n\n    const getPosts = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const response = await fetchPosts()\n        const data = await response.json()\n\n        setPosts(data.blogs)\n        setPostsCount(data.count)\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const getPost = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n\n            const response = await fetchSinglePost(id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.blog) {\n                setPost(data.blog)\n                setIsLoading(false)\n                getMessage(data.message)\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n            // setPosts(data.blogs)\n            // setPostsCount(data.count)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const createPost = async (img, name, description, draft, html) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await createNewPost(token, name, description, draft, html, img)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostUpdate = async (name, description, draft, html, img, id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await updatePost(token, name, description, draft, html, img, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostDelete = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await deletePost(token, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <BlogContext.Provider\n            value={{\n                posts,\n                post,\n                postsCount,\n                getPosts,\n                createPost,\n                getPost,\n                handlePostUpdate,\n                handlePostDelete,\n            }}\n        >\n            {children}\n        </BlogContext.Provider>\n    )\n}\n\nexport default BlogProvider","/imooptik-frontend/src/context/user/user.context.jsx",["392"],"/imooptik-frontend/src/context/warehouse/warehouse.context.jsx",[],"/imooptik-frontend/src/context/booking/booking.context.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.component.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.component.jsx",[],"/imooptik-frontend/src/components/popup/pop-up.component.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.component.jsx",[],"/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx",["393","394","395"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../..//context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useHistory } from 'react-router-dom'\n\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ProductOverview from '../../components/product-overview/product-overview.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport Pagination from '../../components/pagination/pagination.component'\n\nimport Fuse from 'fuse.js'\n\n\nconst EshopSection = () => {\n    const { currentUser, token } = useContext(AuthContext)\n\n    const {\n        isLoading,\n        showModal,\n        message,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        showUpdateForm,\n        products,\n        lensesArr,\n        getProducts,\n        getLenses,\n        handleProductDelete,\n        deleteLenses,\n    } = useContext(WarehouseContext)\n\n    const { push } = useHistory()\n\n    const [searchQuery, setSearchQuery] = useState('')\n    const items = [\n        {\n            id: 0,\n            name: \"Všetko\",\n            permission: 0,\n        },\n        {\n            id: 1,\n            name: \"Obchodná 57, Bratislava\",\n            permission: 1,\n        },\n        {\n            id: 2,\n            name: \"Miletičova 38, Bratislava\",\n            permission: 2,\n        },\n        {\n            id: 3,\n            name: \"Senica, OC Branč\",\n            permission: 3,\n        },\n        {\n            id: 4,\n            name: \"Vajnory, Bratislava\",\n            permission: 4,\n        },\n        // {\n        //     id: 5,\n        //     name: \"Trnava, City Aréna\",\n        //     permission: 5,\n        // },\n    ]\n\n    const filteredItems = items.filter(item => item.permission === currentUser.premises || currentUser.admin >= 2)\n    const [activeIndex, setActiveIndex] = useState(2)\n\n    useEffect(() => {\n        console.log(\"fetch products\")\n        if (!products) {\n            getProducts()\n            getLenses()\n        }\n\n        if (!message) {\n            closeModal()\n        }\n    }, [products, lensesArr, token])\n\n    useEffect(() => {\n        if (filteredItems.length) {\n            setActiveIndex(filteredItems[0].id)\n        }\n    }, [])\n\n\n    // fuse.search(searchQuery)\n\n    const [allProducts, setAllProducts] = useState([])\n    useEffect(() => {\n        if (products && lensesArr)\n            setAllProducts([\n                ...products,\n                ...lensesArr\n            ])\n    }, [lensesArr, products])\n\n    const fuse = new Fuse(allProducts, {\n        keys: [\n            'name',\n            'brand',\n            'description'\n        ]\n    })\n\n    useEffect(() => {\n        const results = fuse.search(searchQuery)\n        if (results.length > 0) {\n            setAllProducts(results.map(result => result.item))\n        }\n        if (!searchQuery) {\n            if (products && lensesArr) {\n                setAllProducts([\n                    ...products,\n                    ...lensesArr\n                ])\n            }\n\n        }\n    }, [searchQuery])\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [productsPerPage] = useState(10)\n    const indexOfLastProduct = currentPage * productsPerPage\n    const indexOfFirstProduct = indexOfLastProduct - productsPerPage\n    const currentProducts = allProducts.slice(indexOfFirstProduct, indexOfLastProduct)\n    const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n    console.log(products)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('sklad/novy-produkt')}\n\n                title=\"E-shop\"\n            />\n\n            <SectionNavbar\n                items={filteredItems}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            {/* Products container */}\n            <ScrollContainer>\n                {\n                    currentProducts && currentProducts.map(product => (\n                        <ProductOverview\n                            key={product._id}\n                            name={product.name}\n                            stock={product.available ? activeIndex === 0 ? product.available.reduce((acc, currValue) => acc + currValue) : product.available[activeIndex - 1] : null}\n                            id={product.eanCode || product._id}\n                            price={(product.price / 100).toFixed(2)}\n                            image={product.image}\n                            handleUpdateButton={() => {\n                                showUpdateForm(product.available ? 0 : 1)\n                                push(`sklad/${product._id}`)\n                            }}\n                            handleDeleteButton={product.dioptersRange ? () => deleteLenses(product._id) : () => handleProductDelete(product._id)}\n                        />\n                    ))\n                }\n                {/* {\n                    lenses && lenses.map(product => (\n                        <ProductOverview\n                            key={product._id}\n                            name={product.name}\n                            id={product._id}\n                            price={(product.price / 100).toFixed(2)}\n                            image={product.image}\n                            handleUpdateButton={() => push(`sklad/${product._id}`)}\n                            handleDeleteButton={() => deleteLense(product._id)}\n                        />\n                    ))\n                } */}\n\n                <Pagination\n                    productsPerPage={productsPerPage}\n                    totalProducts={allProducts.length}\n                    paginate={paginate}\n                    activePage={currentPage}\n                />\n            </ScrollContainer>\n        </section >\n    )\n}\n\nexport default EshopSection\n","/imooptik-frontend/src/sections/customers/customers.section.jsx",["396","397","398"],"import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { UserContext } from '../../context/user/user.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from \"../../components/section-navbar/section-navbar.component\"\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport Fuse from 'fuse.js'\n\n\nimport {\n    CustomerContainer,\n    Content,\n    Options,\n    ProductId,\n    Description,\n    UpdateButton,\n    DeleteButton\n} from './customers.styles'\n\nconst CustomersSection = () => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n\n    const {\n        isLoading,\n        showModal,\n        message,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        activeIndex,\n        handleChangeFilterItem,\n        filterItems,\n        users,\n        totalCount,\n        getUsers,\n    } = useContext(UserContext)\n\n    useEffect(() => {\n        if (!users) {\n            getUsers()\n        }\n    }, [users])\n\n\n\n    const [allUsers, setAllUsers] = useState([])\n    useEffect(() => {\n        if (users)\n            setAllUsers(users.filter(user => filterItems[activeIndex].filter === user.admin))\n    }, [users])\n\n    const fuse = new Fuse(allUsers, {\n        keys: [\n            'name',\n            'email',\n            'address',\n            'phone'\n        ]\n    })\n\n    useEffect(() => {\n        const results = fuse.search(searchQuery)\n        if (results.length > 0) {\n            setAllUsers(results.map(result => result.item))\n        }\n        if (!searchQuery) {\n            if (users) {\n                setAllUsers(users.filter(user => filterItems[activeIndex].filter === user.admin))\n            }\n\n        }\n\n    }, [searchQuery, activeIndex])\n\n    if (!users || showModal) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n    return (\n        <section>\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('zakaznici/novy-zakaznik')}\n                count={totalCount}\n                title=\"Zákazníci\"\n            />\n\n            <SectionNavbar\n                items={filterItems}\n                activeIndex={activeIndex}\n                setActiveIndex={handleChangeFilterItem}\n            />\n\n            <ScrollContainer>\n                {\n                    allUsers && allUsers.map(user => (\n                        <CustomerContainer key={user._id}>\n                            <Content>\n                                <h2>{user.name || user.email}</h2>\n                                <ProductId>{user._id}</ProductId>\n                                <Description>Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion daikon amaranth tatsoi...</Description>\n                            </Content>\n\n                            <Options>\n                                <UpdateButton onClick={() => push(`zakaznici/${user._id}`)}>\n                                    Upraviť\n                        </UpdateButton>\n                                <DeleteButton>\n                                    Vymazať\n                        </DeleteButton>\n                            </Options>\n                        </CustomerContainer>\n                    ))\n                }\n\n            </ScrollContainer>\n\n        </section>\n    )\n}\n\nexport default CustomersSection\n","/imooptik-frontend/src/sections/orders/orders.section.jsx",[],"/imooptik-frontend/src/sections/analytics/analytics.section.jsx",[],"/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx",["399"],"import React, { useState, useEffect, useContext } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    PostContainer,\n    PostImage,\n    PostContent,\n    Options,\n    UpdateButton,\n    DeleteButton\n} from './blog-posts.styles'\n\nconst BlogPosts = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { getPosts, posts, postsCount, handlePostDelete } = useContext(BlogContext)\n    const { push } = useHistory()\n    const [searchQuery, setSearchQuery] = useState('')\n    const items = [\n        {\n            id: 0,\n            name: \"Dátum pridania\"\n        },\n        {\n            id: 1,\n            name: \"Abecedne\"\n        },\n    ]\n\n    const [activeIndex, setActiveIndex] = useState(0)\n\n    useEffect(() => {\n        if (!posts) {\n            getPosts(items[activeIndex])\n        }\n    }, [posts])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('blog/novy-prispevok')}\n                count={postsCount}\n                title=\"Blog\"\n            />\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                {\n                    posts && posts.length ? posts.map(post => (\n                        <PostContainer key={post._id}>\n                            <PostImage>\n                                {post.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${post.image.imagePath}`} alt={post.image.alt} />}\n                            </PostImage>\n                            <PostContent>\n                                <h2>{post.name}</h2>\n                                <p>{post.description}</p>\n                            </PostContent>\n                            <Options>\n                                <UpdateButton onClick={() => push(`blog/${post._id}`)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={() => handlePostDelete(post._id)}>Vymazať</DeleteButton>\n                            </Options>\n                        </PostContainer>\n                    )) : (\n                            <div>\n                                Žiadne príspevky\n                            </div>\n                        )\n                }\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BlogPosts\n","/imooptik-frontend/src/sections/product/product.section.jsx",["400","401"],"import React, { useState, useContext, useEffect } from 'react'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\n\nimport CustomFormSwitch from '../../components/custom-form-switch/custom-form-switch.component'\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\n\nimport {\n    Header,\n    AddButton,\n    DeleteButton,\n    Title,\n    ProductImage,\n    DraftCheckBox,\n    ImageContainer,\n} from './product.styles'\n\nconst ProductSection = () => {\n    const [showImageModal, setImageModal] = useState(false)\n\n    const { id } = useParams()\n    const warData = useContext(WarehouseContext)\n    const {\n        switchFormButtons,\n        formToShow,\n        toggleProductForms,\n        isUpdating,\n        activeCategoryIndex,\n        categories,\n        toggleDraft,\n        handleCategoryChange,\n        handleAvailableChange,\n        handleSizeChange,\n        selectImage,\n        product,\n        createNewProduct,\n        updateProduct,\n        handleProductDelete,\n        resetProduct,\n        lenses,\n        handleLensesChange,\n        handleLensesDioptersRangeChange,\n        handleLensesCylinderRangeChange,\n        getSigleLenses,\n        createNewLenses,\n        updateLenses,\n        deleteLenses,\n        getSingleProduct,\n        handleChange,\n        handleSpecsChange\n    } = warData\n\n    const {\n        closeModal,\n        isLoading,\n        showModal,\n        message\n    } = useContext(LoadingModalContext)\n\n    const { selectedImage } = useContext(ImageContext)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (formToShow === 0) {\n            if (!product.imagePath) {\n                alert(\"Žiaden obrazok!\")\n                return\n            }\n\n            if (id === 'novy-produkt') {\n                createNewProduct(product)\n                resetProduct()\n            } else {\n                updateProduct(product)\n                resetProduct()\n            }\n        } else {\n            if (!lenses.imagePath) {\n                alert(\"Žiaden obrazok!\")\n                return\n            }\n\n            if (id === 'novy-produkt') {\n                createNewLenses(lenses)\n            } else {\n                updateLenses(lenses)\n            }\n\n        }\n\n    }\n\n    useEffect(() => {\n        if (id !== \"novy-produkt\") {\n            if (formToShow === 0) {\n                getSingleProduct(id)\n            } else {\n                getSigleLenses(id)\n            }\n        }\n    }, [id])\n\n    useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            resetProduct()\n        }\n    }, [])\n\n    return (\n        <form onSubmit={e => handleSubmit(e)}>\n            { showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={selectImage} />}\n            <Header>\n                <div>\n                    <h1>{isUpdating ? \"Upraviť produkt\" : \"Pridať nový produkt\"}</h1>\n                </div>\n                <div>\n                    <DraftCheckBox\n                        label='Verejný'\n                        isActive={formToShow === 0 ? product.eshop : lenses.eshop}\n                        handleClick={() => toggleDraft()}\n                    />\n                    {isUpdating && <DeleteButton onClick={formToShow === 0 ? () => handleProductDelete(product._id) : () => deleteLenses(lenses._id)}>Vymazať</DeleteButton>}\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť produkt\" : \"Pridať product\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating &&\n                    <CustomFormSwitch\n                        items={switchFormButtons}\n                        title=\"Aký produkt chcete pridať?\"\n                        activeIndex={formToShow}\n                        handleClick={toggleProductForms}\n                    />\n                }\n\n                {formToShow === 0 ? (\n                    <ProductGlassesForm\n                        activeCategoryIndex={activeCategoryIndex}\n                        categories={categories}\n                        product={product}\n                        handleChange={handleChange}\n                        handleSizeChange={handleSizeChange}\n                        handleSpecsChange={handleSpecsChange}\n                        handleCategoryChange={handleCategoryChange}\n                        handleAvailableChange={handleAvailableChange}\n                    />\n                ) : (\n                        <ProductLensesForm\n                            lense={lenses}\n                            handleChange={handleLensesChange}\n                            handleLensesDioptersRangeChange={handleLensesDioptersRangeChange}\n                            handleLensesCylinderRangeChange={handleLensesCylinderRangeChange}\n                        />\n                    )\n                }\n\n                <div>\n                    <ImageContainer>\n\n                        <Title>Obrázok</Title>\n\n                        <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </ProductImage>\n                    </ImageContainer>\n                </div>\n            </ScrollContainer>\n\n        </form >\n    )\n}\n\nexport default ProductSection\n","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx",["402","403"],"import React, { useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { UserContext } from '../../context/user/user.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport UserForm from '../../components/user-form/user-form.component'\nimport NewUserForm from '../../components/new-user-form/new-user-form.component'\n\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    DeleteProfileButton,\n    // Name,\n    SaveButton,\n} from './customer-profile.styles'\n\nconst CustomerProfile = () => {\n    const { id } = useParams()\n    const { isAdmin } = useContext(AuthContext)\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal,\n    } = useContext(LoadingModalContext)\n\n    const {\n        isUpdating,\n        user,\n        getUser,\n        handleChange,\n        handleDioptersChange,\n        handleDistanceChange,\n        handleCylinderChange,\n        handleCylinderAxesChange,\n        updateUser,\n        resetUser,\n        formToShow,\n        switchFormButtons,\n        toggleUserForm,\n        createUser\n    } = useContext(UserContext)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (id === 'novy-zakaznik') {\n            console.log(\"Create new user\")\n            createUser(user)\n        } else {\n            console.log(\"Update existing user\")\n            updateUser(user)\n        }\n    }\n\n    useEffect(() => {\n        if (id !== 'novy-zakaznik') {\n            getUser(id)\n        }\n    }, [id])\n\n    useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            resetUser()\n        }\n    }, [])\n\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <form onSubmit={handleSubmit}>\n                <Header>\n                    <h1>Profil</h1>\n                    <div>\n                        {isUpdating && <DeleteProfileButton>Vymazať</DeleteProfileButton>}\n                        <SaveButton type=\"submit\">\n                            {isUpdating ? \"Uložiť zmeny\" : \"Vytvoriť\"}\n                        </SaveButton>\n                    </div>\n                </Header>\n\n                <ScrollContainer>\n                    {\n                        isUpdating ? (\n                            <UserForm\n                                isAdmin={isAdmin}\n                                isUpdating={isUpdating}\n                                user={user}\n                                handleChange={handleChange}\n                                handleDioptersChange={handleDioptersChange}\n                                handleDistanceChange={handleDistanceChange}\n                                handleCylinderChange={handleCylinderChange}\n                                handleCylinderAxesChange={handleCylinderAxesChange}\n                            />\n                        ) : (\n                                <NewUserForm\n                                    formToShow={formToShow}\n                                    switchFormButtons={switchFormButtons}\n                                    toggleUserForm={toggleUserForm}\n                                    user={user}\n                                    handleChange={handleChange}\n                                />\n                            )\n                    }\n\n\n                </ScrollContainer>\n\n            </form>\n        </section>\n    )\n}\n\nexport default CustomerProfile\n","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx",[],"/imooptik-frontend/src/sections/booking/booking.section.jsx",["404","405","406"],"import React, { useState, useEffect, useContext } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { BookingContext } from '../../context/booking/booking.context'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport Calendar from '../../components/calendar/calendar.component'\n\nimport {\n    ContainerOverview,\n    Title,\n    GridRow,\n    UpdateButton,\n    CalendarGridContainer,\n    AppoimentOverview,\n    Time,\n    Line,\n    TwoRowGrid,\n    Name,\n    Desc,\n    Options,\n    ConfirmButton,\n    DeclineButton,\n    AppoimentContainer\n} from './booking.styles'\n\nconst BookingSection = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        calendars,\n        bookings,\n        bookingRows,\n        getCalendars,\n        getBookings,\n        getBookingRows\n    } = useContext(BookingContext)\n\n    const [searchQuery, setSearchQuery] = useState('')\n\n    useEffect(() => {\n        if (!calendars) {\n            getCalendars()\n        }\n    }, [calendars])\n\n    useEffect(() => {\n        if (!bookings) {\n            getBookings()\n        }\n    }, [calendars])\n\n    useEffect(() => {\n        if (!bookingRows) {\n            getBookingRows()\n        }\n    }, [calendars])\n\n    console.log(calendars)\n    console.log(bookings)\n    console.log(bookingRows)\n\n    if (showModal) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n    return (\n        <section>\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                title=\"Kalendar objednávok\"\n            />\n\n            <ScrollContainer>\n                <Title>Pobočky</Title>\n\n                <GridRow>\n\n                    <ContainerOverview>\n                        <h3>Bratislava - Obchodná</h3>\n                        <p>Obchodná 59, 84105 Bratislava</p>\n                        <p>+421 902 688 952</p>\n                        <p>obchodna@imooptik.sk</p>\n                        <UpdateButton>Upraviť</UpdateButton>\n                    </ContainerOverview>\n                    <ContainerOverview>\n                        <h3>Bratislava - Obchodná</h3>\n                        <p>Obchodná 59, 84105 Bratislava</p>\n                        <p>+421 902 688 952</p>\n                        <p>obchodna@imooptik.sk</p>\n                        <UpdateButton>Upraviť</UpdateButton>\n                    </ContainerOverview>\n                    <ContainerOverview>\n                        <h3>Bratislava - Obchodná</h3>\n                        <p>Obchodná 59, 84105 Bratislava</p>\n                        <p>+421 902 688 952</p>\n                        <p>obchodna@imooptik.sk</p>\n                        <UpdateButton>Upraviť</UpdateButton>\n                    </ContainerOverview>\n                    <ContainerOverview>\n                        <h3>Bratislava - Obchodná</h3>\n                        <p>Obchodná 59, 84105 Bratislava</p>\n                        <p>+421 902 688 952</p>\n                        <p>obchodna@imooptik.sk</p>\n                        <UpdateButton>Upraviť</UpdateButton>\n                    </ContainerOverview>\n\n                </GridRow>\n\n                <Title>Kalendár</Title>\n                <CalendarGridContainer>\n\n\n                    <div>\n                        <Calendar />\n                    </div>\n\n                    <AppoimentOverview>\n                        <Title>Štvrtok, 3. December</Title>\n\n                        <AppoimentContainer>\n                            <Time>12:00</Time>\n                            <Line />\n                            <TwoRowGrid>\n                                <div>\n                                    <Name>Meno Priezvisko</Name>\n                                    <Desc>Kontrola očí</Desc>\n                                </div>\n                                <Options>\n                                    <ConfirmButton>Vybavený</ConfirmButton>\n                                    <DeclineButton>Neprišiel</DeclineButton>\n                                </Options>\n                            </TwoRowGrid>\n                        </AppoimentContainer>\n                        <AppoimentContainer>\n                            <Time>12:00</Time>\n                            <Line />\n                            <TwoRowGrid>\n                                <div>\n                                    <Name>Meno Priezvisko</Name>\n                                    <Desc>Kontrola očí</Desc>\n                                </div>\n                                <Options>\n                                    <ConfirmButton>Vybavený</ConfirmButton>\n                                    <DeclineButton>Neprišiel</DeclineButton>\n                                </Options>\n                            </TwoRowGrid>\n                        </AppoimentContainer>\n                        <AppoimentContainer>\n                            <Time>12:00</Time>\n                            <Line />\n                            <TwoRowGrid>\n                                <div>\n                                    <Name>Meno Priezvisko</Name>\n                                    <Desc>Kontrola očí</Desc>\n                                </div>\n                                <Options>\n                                    <ConfirmButton>Vybavený</ConfirmButton>\n                                    <DeclineButton>Neprišiel</DeclineButton>\n                                </Options>\n                            </TwoRowGrid>\n                        </AppoimentContainer>\n                    </AppoimentOverview>\n                </CalendarGridContainer>\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BookingSection\n","/imooptik-frontend/src/sections/post/post.section.jsx",["407","408"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport CustomTextarea from '../../components/custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport { Quill } from 'react-quill'\n\nimport {\n    Header,\n    GridContainer,\n    PostImage,\n    DeleteButton,\n    AddButton,\n    Title,\n    ContentTextare,\n} from './post.styles'\n\nconst PostSection = () => {\n    const { id } = useParams()\n    const { push } = useHistory()\n    const {\n        createPost,\n        isLoading,\n        message,\n        showLoading,\n        setIsLoading,\n        getPost,\n        post,\n        handlePostUpdate\n    } = useContext(BlogContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [content, setContent] = useState('')\n    const [image, setImage] = useState('')\n    const [draft, toggleDraft] = useState(false)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (image.length <= 0) return\n        if (content.length <= 0) return\n\n        if (id === 'novy-prispevok') {\n            createPost(image, title, description, draft, content)\n        } else {\n            handlePostUpdate(title, description, draft, content, image, id)\n        }\n\n        push('/dashboard/blog')\n\n    }\n\n    useEffect(() => {\n        setSelectedImage(null)\n\n        if (id !== 'novy-prispevok') {\n            getPost(id)\n            setIsUpdating(true)\n        }\n    }, [id])\n\n    useEffect(() => {\n        console.log(post)\n        if (post) {\n            console.log(post)\n            setTitle(post.name)\n            setDescription(post.description)\n            setContent(post.html)\n            toggleDraft(post.draft)\n            if (post.image) {\n                setImage(post.image._id)\n                setSelectedImage(post.image)\n            }\n        }\n    }, [post])\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {isLoading && <Popup loading={showLoading} title={message} close={() => setIsLoading(false)} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={setImage} />}\n\n            <Header>\n                <div>\n                    <h1>Post</h1>\n                </div>\n                <div>\n                    <CustomCheckbox\n                        label='Draft'\n                        checked={draft}\n                        onChange={() => toggleDraft(!draft)}\n                    />\n                    <DeleteButton>Vymazať</DeleteButton>\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť príspevok\" : \"Pridať príspevok\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n\n                <GridContainer>\n                    <div>\n                        <h2>Informácia</h2>\n                        <CustomInput\n                            label=\"Nadpis\"\n                            type='text'\n                            name='title'\n                            value={title}\n                            handleChange={(e) => setTitle(e.target.value)}\n                            required\n                        />\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={description}\n                            handleChange={(e) => setDescription(e.target.value)}\n                            required\n                        />\n                        <h2>Titulná fotka</h2>\n                        <PostImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </PostImage>\n                    </div>\n                    <div>\n                        <Title>Obsah</Title>\n                        <QuillToolbar />\n                        <ContentTextare\n                            value={content}\n                            onChange={setContent}\n                            modules={modules}\n                            formats={formats}\n                        />\n                    </div>\n\n                </GridContainer>\n\n            </ScrollContainer>\n        </form>\n    )\n}\n\n\nconst CustomUndo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n        />\n    </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n        />\n    </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n    this.quill.history.undo();\n}\nfunction redoChange() {\n    this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n    \"arial\",\n    \"comic-sans\",\n    \"courier-new\",\n    \"georgia\",\n    \"helvetica\",\n    \"lucida\"\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nconst modules = {\n    toolbar: {\n        container: \"#toolbar\",\n        handlers: {\n            undo: undoChange,\n            redo: redoChange\n        }\n    },\n    history: {\n        delay: 500,\n        maxStack: 100,\n        userOnly: true\n    }\n};\n\n// Formats objects for setting up the Quill editor\nconst formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"align\",\n    \"strike\",\n    \"script\",\n    \"blockquote\",\n    \"background\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"color\",\n    \"code-block\"\n];\n\n// Quill Toolbar component\nconst QuillToolbar = () => (\n    <div id=\"toolbar\" className=\"toolbar\">\n        <span className=\"ql-formats\">\n            <select className=\"ql-size\" defaultValue=\"medium\">\n                <option value=\"extra-small\">Size 1</option>\n                <option value=\"small\">Size 2</option>\n                <option value=\"medium\">Size 3</option>\n                <option value=\"large\">Size 4</option>\n            </select>\n            <select className=\"ql-header\" defaultValue=\"3\">\n                <option value=\"1\">Heading</option>\n                <option value=\"2\">Subheading</option>\n                <option value=\"3\">Normal</option>\n            </select>\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n        </span>\n        <span className=\"ql-formats\">\n            <select className=\"ql-align\" />\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n                <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n                <CustomRedo />\n            </button>\n        </span>\n    </div>\n);\n\n\nexport default PostSection\n","/imooptik-frontend/src/components/custom-button/custom-button.component.jsx",[],"/imooptik-frontend/src/context/image/image.queries.jsx",[],"/imooptik-frontend/src/context/blog/blog.queries.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx",[],"/imooptik-frontend/src/context/user/user.queries.jsx",[],"/imooptik-frontend/src/context/user/user.utils.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.queries.jsx",[],"/imooptik-frontend/src/components/popup/pop.up.styles.jsx",[],"/imooptik-frontend/src/context/booking/booking.queries.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx",[],"/imooptik-frontend/src/sections/customers/customers.styles.jsx",[],"/imooptik-frontend/src/sections/analytics/analytics.styles.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx",[],"/imooptik-frontend/src/sections/product/product.styles.jsx",[],"/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx",[],"/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx",[],"/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx",[],"/imooptik-frontend/src/sections/booking/booking.styles.jsx",[],"/imooptik-frontend/src/sections/post/post.styles.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.component.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.component.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.component.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx",[],"/imooptik-frontend/src/components/pagination/pagination.component.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.component.jsx",[],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx",[],"/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx",["409"],"import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport ProductInputRow from '../product-input-row/product-input-row.component'\n\nimport {\n    TextareaRow,\n    CustomSelect,\n    Title,\n    CategoryContainer,\n    CategoryCheckbox,\n    CategoryTitle,\n} from './product-glasses-form.styles.jsx'\n\nimport { brands, retailNames } from '../../context/warehouse/warehouse.utils'\n\n\nconst ProductGlassesForm = ({ product, handleChange, handleSizeChange, handleSpecsChange, handleAvailableChange, categories, handleCategoryChange, activeCategoryIndex }) => {\n\n    return (\n        <React.Fragment>\n\n            <div>\n                <CategoryTitle>Kategória</CategoryTitle>\n                <CategoryContainer>\n                    {\n                        categories.map((category, idx) => {\n                            return (\n                                <CategoryCheckbox\n                                    key={idx}\n                                    label={category.name}\n                                    value={category.value}\n                                    name='type'\n                                    isActive={category.value === activeCategoryIndex}\n                                    handleClick={() => handleCategoryChange(category.value)}\n                                />\n                            )\n                        })\n                    }\n                </CategoryContainer>\n            </div>\n            <div>\n\n                <h3>Základné informacie</h3>\n                <ProductInputRow\n                    label=\"Unikátny kód produktu\"\n                    example=\"napr: TH1590807\"\n                >\n                    <CustomInput\n                        label=\"Ean kód*\"\n                        type='text'\n                        name='eanCode'\n                        value={product.eanCode}\n                        handleChange={(e) => handleChange(e)}\n                        required\n                    />\n                </ProductInputRow>\n                <ProductInputRow\n                    label=\"Názov produktu\"\n                    example=\"napr: Tommy Hilfiger\"\n                >\n                    <CustomInput\n                        label=\"Názov*\"\n                        type='text'\n                        name='name'\n                        value={product.name}\n                        handleChange={(e) => handleChange(e)}\n                        required\n\n                    />\n                </ProductInputRow>\n                <ProductInputRow\n                    label=\"Značka\"\n                    example=\"napr: Tommy Hilfiger\"\n                >\n                    <CustomInput\n                        label=\"Značka\"\n                        type='text'\n                        name='brand'\n                        value={product.brand}\n                        handleChange={(e) => handleChange(e)}\n                        list={\"brands\"}\n                        autoComplete='off'\n                    />\n                    <datalist id=\"brands\">\n                        {brands.map(brand => (\n                            <option key={brand} value={brand} />\n                        ))}\n                    </datalist>\n                </ProductInputRow>\n                <ProductInputRow\n                    label=\"Cena v centoch\"\n                    example=\"napr: 1055 = 10,55€\"\n                >\n                    <CustomInput\n                        label=\"Cena*\"\n                        type='number'\n                        name='price'\n                        value={product.price.toString()}\n                        handleChange={(e) => handleChange(e)}\n                        required\n\n                    />\n                </ProductInputRow>\n                <TextareaRow>\n                    <div>\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={product.description}\n                            handleChange={(e) => handleChange(e)}\n                        />\n                    </div>\n                    <div>\n                        <p>Popis produktu</p>\n                    </div>\n                </TextareaRow>\n\n\n\n                {\n                    !(product.type === 5 || product.type === 4) && (\n                        <React.Fragment>\n                            <h3>Špecifikacie</h3>\n                            <ProductInputRow\n                                label=\"Farebný kód produktu\"\n                                example=\"napr: #000000\"\n                            >\n                                <CustomInput\n                                    label=\"Color code\"\n                                    type='text'\n                                    name='colorCode'\n                                    value={product.colorCode}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Pohlavie pre ktoré je produkt určený\"\n                                example=\"\"\n                            >\n                                <CustomSelect name='sex' value={product.specs.sex} onChange={e => handleSpecsChange(e)}>\n                                    <option value='M'>Muži</option>\n                                    <option value='W'>Ženy</option>\n                                    <option value='U'>Nezáleží</option>\n                                </CustomSelect>\n                            </ProductInputRow>\n\n                            <ProductInputRow\n                                label=\"Farba\"\n                                example=\"napr: Čierna\"\n                            >\n                                <CustomInput\n                                    label=\"Farba rámu\"\n                                    type='text'\n                                    name='frameColor'\n                                    value={product.specs.frameColor}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Materiál\"\n                                example=\"napr: Titán\"\n                            >\n                                <CustomInput\n                                    label=\"Materiál rámu\"\n                                    type='text'\n                                    name='frameMaterial'\n                                    value={product.specs.frameMaterial}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Tvar\"\n                                example=\"napr: Okruhlý\"\n                            >\n                                <CustomInput\n                                    label=\"Tvar rámu\"\n                                    type='text'\n                                    name='frameStyle'\n                                    value={product.specs.frameStyle}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Farba skla\"\n                                example=\"napr: Priehľadná\"\n                            >\n                                <CustomInput\n                                    label=\"Farba\"\n                                    type='text'\n                                    name='lensColor'\n                                    value={product.specs.lensColor}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n\n                            <Title>Velikosť</Title>\n\n                            {product.specs.size.map((value, idx) => {\n                                return (\n                                    <ProductInputRow\n                                        key={idx}\n                                        label={`Velkosť`}\n                                        example=\"napr: 0\"\n                                    >\n                                        <CustomInput\n                                            label={`${idx}`}\n                                            type='number'\n                                            // name={store.name}\n                                            value={value.toString()}\n                                            handleChange={e => handleSizeChange(e, idx)}\n                                        />\n                                    </ProductInputRow>\n                                )\n                            })}\n                        </React.Fragment>\n                    )\n                }\n\n                <Title>Skladové zásoby</Title>\n                {product && product.available.map((value, idx) => {\n                    if (product.available.length - 1 === idx) return\n\n                    return (\n                        <ProductInputRow\n                            key={idx}\n                            label={`Počet kusov na predajni,`}\n                            example=\"napr: 0\"\n                        >\n                            <CustomInput\n                                label={retailNames[idx]}\n                                type='number'\n                                // name={store.name}\n                                value={value.toString()}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        </ProductInputRow>\n                    )\n                })}\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default ProductGlassesForm\n","/imooptik-frontend/src/components/modal-images/modal-images.component.jsx",["410","411","412"],"import React, { useEffect, useContext, useState, useRef } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\n// import { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\n// import CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    // const {\n    //     getMessage,\n    //     setIsLoading,\n    //     setShowModal,\n    //     closeModal\n    // } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    // const getCropData = async (e) => {\n    //     e.preventDefault()\n    //     setShowModal(true)\n    //     setIsLoading(true)\n\n    //     try {\n    //         // if (typeof cropper !== 'undefined') {\n    //         toDataUrl(imgUrl, async (imgData) => {\n    //             const data = await handleImage(imgData, imageName, imageAlt)\n\n    //             if (data.image) {\n    //                 setImage(data.image._id)\n    //                 setSelectedImage(data.image)\n    //                 getImages()\n    //                 close()\n    //             }\n    //         })\n\n    //         // }\n    //         setShowModal(false)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    //     closeModal()\n    // };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Orezať a nahrať</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx",[],"/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx",["413"],"import React from 'react'\n\nimport CustomFormSwitch from '../custom-form-switch/custom-form-switch.component'\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    CustomSelect\n} from './new-user-form.styles'\n\n\nconst NewUserForm = ({ formToShow, switchFormButtons, toggleUserForm, user, handleChange }) => {\n    console.log(user)\n\n    return (\n        <div>\n            {/* Akého uživatela chcete vytvoriť? */}\n            <CustomFormSwitch\n                items={switchFormButtons}\n                title=\"Akého uživatela chcete vytvoriť?\"\n                activeIndex={formToShow}\n                handleClick={toggleUserForm}\n            />\n\n            {\n                formToShow === 0 ? (\n                    <div>\n                        <div>\n                            <h2>Informácie</h2>\n                            <InputRow\n                                label=\"\"\n                                example='napr: John'\n                            >\n                                <CustomInput\n                                    label=\"Meno*\"\n                                    type='text'\n                                    name='fName'\n                                    value={user.fName}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: Doe'\n                            >\n                                <CustomInput\n                                    label=\"Priezvisko*\"\n                                    type='text'\n                                    name='lName'\n                                    value={user.lName}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: priklad@email.com'\n                            >\n                                <CustomInput\n                                    label=\"E-mail*\"\n                                    type='email'\n                                    name='email'\n                                    value={user.email}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                        </div>\n                    </div>\n                ) : (\n                        <div>\n                            <div>\n                                <h2>Admin panel</h2>\n                                <InputRow\n                                    label=\"Predajňa na ktorej uživatel pracuje\"\n                                    example=''\n                                >\n\n                                    <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Nezadané</option>\n\n                                        {\n                                            retailNames.map((name, idx) => {\n                                                if (idx === 4) return\n                                                return (\n                                                    <option key={idx} value={idx + 1}>{name}</option>\n\n                                                )\n                                            })\n                                        }\n                                    </CustomSelect>\n\n                                </InputRow>\n                                <InputRow\n                                    label=\"Výška administrativných práv\"\n                                    example=\"\"\n                                >\n                                    <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Zákaznik</option>\n                                        <option value={1}>Predavač</option>\n                                        <option value={2}>Vedúci</option>\n                                    </CustomSelect>\n\n                                </InputRow>\n                            </div>\n                            <div>\n                                <h2>Informácie</h2>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: John'\n                                >\n                                    <CustomInput\n                                        label=\"Meno*\"\n                                        type='text'\n                                        name='fName'\n                                        value={user.fName}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: Doe'\n                                >\n                                    <CustomInput\n                                        label=\"Priezvisko*\"\n                                        type='text'\n                                        name='lName'\n                                        value={user.lName}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: priklad@email.com'\n                                >\n                                    <CustomInput\n                                        label=\"E-mail*\"\n                                        type='email'\n                                        name='email'\n                                        value={user.email}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"Heslo použivatela, aspoň 1 velké pismeno, 1 malé pismeno a 1 číslo*\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Heslo*\"\n                                        type='password'\n                                        name='password'\n                                        value={user.password}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Potvrď heslo*\"\n                                        type='password'\n                                        name='confirmPassword'\n                                        value={user.confirmPassword}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n\n\n                            </div>\n                        </div>\n                    )\n            }\n        </div>\n    )\n}\n\nexport default NewUserForm\n","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx",[],"/imooptik-frontend/src/components/user-form/user-form.component.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.component.jsx",[],"/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.styles.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx",[],"/imooptik-frontend/src/components/pagination/pagination.styles.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.styles.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx",[],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx",[],"/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx",[],"/imooptik-frontend/src/components/user-form/user.form-styles.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx",[],"/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx",[],"/imooptik-frontend/src/sections/order/order.section.jsx",["414"],"/imooptik-frontend/src/sections/order/order.styles.jsx",[],"/imooptik-frontend/src/components/order-product-overview/order-product-overview.component.jsx",[],"/imooptik-frontend/src/components/order-product-overview/order-product-overview.styles.jsx",[],{"ruleId":"415","replacedBy":"416"},{"ruleId":"417","replacedBy":"418"},{"ruleId":"419","severity":1,"message":"420","line":4,"column":23,"nodeType":"421","messageId":"422","endLine":4,"endColumn":34},{"ruleId":"419","severity":1,"message":"423","line":31,"column":19,"nodeType":"421","messageId":"422","endLine":31,"endColumn":27},{"ruleId":"419","severity":1,"message":"424","line":28,"column":9,"nodeType":"421","messageId":"422","endLine":28,"endColumn":19},{"ruleId":"425","severity":1,"message":"426","line":170,"column":8,"nodeType":"427","endLine":170,"endColumn":32,"suggestions":"428"},{"ruleId":"425","severity":1,"message":"429","line":88,"column":8,"nodeType":"427","endLine":88,"endColumn":36,"suggestions":"430"},{"ruleId":"425","severity":1,"message":"431","line":94,"column":8,"nodeType":"427","endLine":94,"endColumn":10,"suggestions":"432"},{"ruleId":"425","severity":1,"message":"433","line":130,"column":8,"nodeType":"427","endLine":130,"endColumn":21,"suggestions":"434"},{"ruleId":"425","severity":1,"message":"435","line":48,"column":8,"nodeType":"427","endLine":48,"endColumn":15,"suggestions":"436"},{"ruleId":"425","severity":1,"message":"437","line":56,"column":8,"nodeType":"427","endLine":56,"endColumn":15,"suggestions":"438"},{"ruleId":"425","severity":1,"message":"439","line":79,"column":8,"nodeType":"427","endLine":79,"endColumn":34,"suggestions":"440"},{"ruleId":"425","severity":1,"message":"441","line":47,"column":8,"nodeType":"427","endLine":47,"endColumn":15,"suggestions":"442"},{"ruleId":"425","severity":1,"message":"443","line":110,"column":8,"nodeType":"427","endLine":110,"endColumn":12,"suggestions":"444"},{"ruleId":"425","severity":1,"message":"445","line":117,"column":8,"nodeType":"427","endLine":117,"endColumn":10,"suggestions":"446"},{"ruleId":"425","severity":1,"message":"447","line":63,"column":8,"nodeType":"427","endLine":63,"endColumn":12,"suggestions":"448"},{"ruleId":"425","severity":1,"message":"449","line":70,"column":8,"nodeType":"427","endLine":70,"endColumn":10,"suggestions":"450"},{"ruleId":"425","severity":1,"message":"451","line":52,"column":8,"nodeType":"427","endLine":52,"endColumn":19,"suggestions":"452"},{"ruleId":"425","severity":1,"message":"453","line":58,"column":8,"nodeType":"427","endLine":58,"endColumn":19,"suggestions":"454"},{"ruleId":"425","severity":1,"message":"455","line":64,"column":8,"nodeType":"427","endLine":64,"endColumn":19,"suggestions":"456"},{"ruleId":"425","severity":1,"message":"457","line":69,"column":8,"nodeType":"427","endLine":69,"endColumn":12,"suggestions":"458"},{"ruleId":"425","severity":1,"message":"459","line":84,"column":8,"nodeType":"427","endLine":84,"endColumn":14,"suggestions":"460"},{"ruleId":"461","severity":1,"message":"462","line":224,"column":63,"nodeType":"463","messageId":"464","endLine":224,"endColumn":69},{"ruleId":"419","severity":1,"message":"465","line":1,"column":50,"nodeType":"421","messageId":"422","endLine":1,"endColumn":56},{"ruleId":"466","severity":1,"message":"467","line":148,"column":41,"nodeType":"468","endLine":148,"endColumn":61},{"ruleId":"466","severity":1,"message":"467","line":189,"column":45,"nodeType":"468","endLine":189,"endColumn":160},{"ruleId":"461","severity":1,"message":"462","line":86,"column":64,"nodeType":"463","messageId":"464","endLine":86,"endColumn":70},{"ruleId":"425","severity":1,"message":"469","line":55,"column":8,"nodeType":"427","endLine":55,"endColumn":10,"suggestions":"470"},"no-native-reassign",["471"],"no-negated-in-lhs",["472"],"no-unused-vars","'fetchImages' is defined but never used.","Identifier","unusedVar","'setLimit' is assigned a value but never used.","'closeModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.","ArrayExpression",["473"],"React Hook useEffect has missing dependencies: 'closeModal', 'getLenses', 'getProducts', and 'message'. Either include them or remove the dependency array.",["474"],"React Hook useEffect has a missing dependency: 'filteredItems'. Either include it or remove the dependency array.",["475"],"React Hook useEffect has missing dependencies: 'fuse', 'lensesArr', and 'products'. Either include them or remove the dependency array.",["476"],"React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["477"],"React Hook useEffect has missing dependencies: 'activeIndex' and 'filterItems'. Either include them or remove the dependency array.",["478"],"React Hook useEffect has missing dependencies: 'filterItems', 'fuse', and 'users'. Either include them or remove the dependency array.",["479"],"React Hook useEffect has missing dependencies: 'activeIndex', 'getPosts', and 'items'. Either include them or remove the dependency array.",["480"],"React Hook useEffect has missing dependencies: 'formToShow', 'getSigleLenses', and 'getSingleProduct'. Either include them or remove the dependency array.",["481"],"React Hook useEffect has a missing dependency: 'resetProduct'. Either include it or remove the dependency array.",["482"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["483"],"React Hook useEffect has a missing dependency: 'resetUser'. Either include it or remove the dependency array.",["484"],"React Hook useEffect has a missing dependency: 'getCalendars'. Either include it or remove the dependency array.",["485"],"React Hook useEffect has missing dependencies: 'bookings' and 'getBookings'. Either include them or remove the dependency array.",["486"],"React Hook useEffect has missing dependencies: 'bookingRows' and 'getBookingRows'. Either include them or remove the dependency array.",["487"],"React Hook useEffect has missing dependencies: 'getPost' and 'setSelectedImage'. Either include them or remove the dependency array.",["488"],"React Hook useEffect has a missing dependency: 'setSelectedImage'. Either include it or remove the dependency array.",["489"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'useRef' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getLenses', 'getProducts', 'getUser', 'lensesArr', 'products', and 'userId'. Either include them or remove the dependency array.",["490"],"no-global-assign","no-unsafe-negation",{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},"Update the dependencies array to be: [user, user.fName, user.lName]",{"range":"527","text":"528"},"Update the dependencies array to be: [products, lensesArr, token, message, getProducts, getLenses, closeModal]",{"range":"529","text":"530"},"Update the dependencies array to be: [filteredItems]",{"range":"531","text":"532"},"Update the dependencies array to be: [fuse, lensesArr, products, searchQuery]",{"range":"533","text":"534"},"Update the dependencies array to be: [getUsers, users]",{"range":"535","text":"536"},"Update the dependencies array to be: [activeIndex, filterItems, users]",{"range":"537","text":"538"},"Update the dependencies array to be: [searchQuery, activeIndex, fuse, users, filterItems]",{"range":"539","text":"540"},"Update the dependencies array to be: [activeIndex, getPosts, items, posts]",{"range":"541","text":"542"},"Update the dependencies array to be: [formToShow, getSigleLenses, getSingleProduct, id]",{"range":"543","text":"544"},"Update the dependencies array to be: [resetProduct]",{"range":"545","text":"546"},"Update the dependencies array to be: [getUser, id]",{"range":"547","text":"548"},"Update the dependencies array to be: [resetUser]",{"range":"549","text":"550"},"Update the dependencies array to be: [calendars, getCalendars]",{"range":"551","text":"552"},"Update the dependencies array to be: [bookings, calendars, getBookings]",{"range":"553","text":"554"},"Update the dependencies array to be: [bookingRows, calendars, getBookingRows]",{"range":"555","text":"556"},"Update the dependencies array to be: [getPost, id, setSelectedImage]",{"range":"557","text":"558"},"Update the dependencies array to be: [post, setSelectedImage]",{"range":"559","text":"560"},"Update the dependencies array to be: [getLenses, getProducts, getUser, lensesArr, products, userId]",{"range":"561","text":"562"},[3872,3896],"[user, user.fName, user.lName]",[2430,2458],"[products, lensesArr, token, message, getProducts, getLenses, closeModal]",[2584,2586],"[filteredItems]",[3407,3420],"[fuse, lensesArr, products, searchQuery]",[1272,1279],"[getUsers, users]",[1475,1482],"[activeIndex, filterItems, users]",[2000,2026],"[searchQuery, activeIndex, fuse, users, filterItems]",[1376,1383],"[activeIndex, getPosts, items, posts]",[3039,3043],"[formToShow, getSigleLenses, getSingleProduct, id]",[3170,3172],"[resetProduct]",[1721,1725],"[getUser, id]",[1849,1851],"[resetUser]",[1289,1300],"[calendars, getCalendars]",[1393,1404],"[bookings, calendars, getBookings]",[1503,1514],"[bookingRows, calendars, getBookingRows]",[2185,2189],"[getPost, id, setSelectedImage]",[2584,2590],"[post, setSelectedImage]",[1540,1542],"[getLenses, getProducts, getUser, lensesArr, products, userId]"]
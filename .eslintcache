[{"/imooptik-frontend/src/index.js":"1","/imooptik-frontend/src/reportWebVitals.js":"2","/imooptik-frontend/src/App.jsx":"3","/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx":"4","/imooptik-frontend/src/context/auth/auth.context.jsx":"5","/imooptik-frontend/src/global.styles.jsx":"6","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx":"7","/imooptik-frontend/src/pages/reset-password/reset-password.jsx":"8","/imooptik-frontend/src/components/popup/pop-up.component.jsx":"9","/imooptik-frontend/src/pages/dashboard/dashboard.jsx":"10","/imooptik-frontend/src/context/auth/auth.queries.jsx":"11","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx":"12","/imooptik-frontend/src/components/popup/pop.up.styles.jsx":"13","/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx":"14","/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx":"15","/imooptik-frontend/src/components/custom-input/custom-input.component.jsx":"16","/imooptik-frontend/src/components/sign-in/sign-in.component.jsx":"17","/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx":"18","/imooptik-frontend/src/components/spinner/spinner.component.jsx":"19","/imooptik-frontend/src/components/custom-button/custom-button.component.jsx":"20","/imooptik-frontend/src/components/sidenav/sidenav.component.jsx":"21","/imooptik-frontend/src/context/booking/booking.context.jsx":"22","/imooptik-frontend/src/context/image/image.context.jsx":"23","/imooptik-frontend/src/context/blog/blog.context.jsx":"24","/imooptik-frontend/src/context/user/user.context.jsx":"25","/imooptik-frontend/src/context/orders/orders.context.jsx":"26","/imooptik-frontend/src/context/warehouse/warehouse.context.jsx":"27","/imooptik-frontend/src/context/coupons/coupons.context.jsx":"28","/imooptik-frontend/src/context/analytics/analytics.context.jsx":"29","/imooptik-frontend/src/context/examination/examination.context.jsx":"30","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx":"31","/imooptik-frontend/src/sections/customers/customers.section.jsx":"32","/imooptik-frontend/src/sections/analytics/analytics.section.jsx":"33","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx":"34","/imooptik-frontend/src/sections/orders/orders.section.jsx":"35","/imooptik-frontend/src/sections/booking/booking.section.jsx":"36","/imooptik-frontend/src/sections/product/product.section.jsx":"37","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx":"38","/imooptik-frontend/src/sections/post/post.section.jsx":"39","/imooptik-frontend/src/sections/order/order.section.jsx":"40","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx":"41","/imooptik-frontend/src/sections/calendar/calendar.section.jsx":"42","/imooptik-frontend/src/sections/coupons/coupons.section.jsx":"43","/imooptik-frontend/src/sections/coupon/coupon.section.jsx":"44","/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx":"45","/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx":"46","/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx":"47","/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx":"48","/imooptik-frontend/src/components/spinner/spinner.styles.jsx":"49","/imooptik-frontend/src/context/blog/blog.queries.jsx":"50","/imooptik-frontend/src/context/user/user.queries.jsx":"51","/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx":"52","/imooptik-frontend/src/context/user/user.utils.jsx":"53","/imooptik-frontend/src/context/image/image.queries.jsx":"54","/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx":"55","/imooptik-frontend/src/sections/analytics/analytics.styles.jsx":"56","/imooptik-frontend/src/sections/e-shop/e-shop.styles.jsx":"57","/imooptik-frontend/src/sections/customers/customers.styles.jsx":"58","/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx":"59","/imooptik-frontend/src/context/orders/orders.utils.jsx":"60","/imooptik-frontend/src/sections/booking/booking.styles.jsx":"61","/imooptik-frontend/src/sections/orders/orders.styles.jsx":"62","/imooptik-frontend/src/sections/coupon/coupon.styles.jsx":"63","/imooptik-frontend/src/sections/coupons/coupons.styles.jsx":"64","/imooptik-frontend/src/sections/calendar/calendar.styles.jsx":"65","/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx":"66","/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx":"67","/imooptik-frontend/src/sections/order/order.styles.jsx":"68","/imooptik-frontend/src/sections/post/post.styles.jsx":"69","/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx":"70","/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx":"71","/imooptik-frontend/src/components/section-header/section-header.component.jsx":"72","/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.component.jsx":"73","/imooptik-frontend/src/components/product-overview/product-overview.component.jsx":"74","/imooptik-frontend/src/components/list-arrows/list-arrows.component.jsx":"75","/imooptik-frontend/src/utils/user.utils.jsx":"76","/imooptik-frontend/src/utils/warehouse.utils.jsx":"77","/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx":"78","/imooptik-frontend/src/utils/analytics.utils.jsx":"79","/imooptik-frontend/src/utils/calendar.utils.jsx":"80","/imooptik-frontend/src/hooks/useFetch.jsx":"81","/imooptik-frontend/src/components/order-overview/order-overview.component.jsx":"82","/imooptik-frontend/src/components/user-form/user-form.component.jsx":"83","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx":"84","/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.component.jsx":"85","/imooptik-frontend/src/components/calendar/calendar.component.jsx":"86","/imooptik-frontend/src/components/booking-appoinments/booking-appoinment.component.jsx":"87","/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.component.jsx":"88","/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx":"89","/imooptik-frontend/src/components/custom-select/custom-select.component.jsx":"90","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx":"91","/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx":"92","/imooptik-frontend/src/components/modal-images/modal-images.component.jsx":"93","/imooptik-frontend/src/sections/order/steps/4-summary/summary.component.jsx":"94","/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.component.jsx":"95","/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.component.jsx":"96","/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.component.jsx":"97","/imooptik-frontend/src/sections/product/product.styles.jsx":"98","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx":"99","/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.component.jsx":"100","/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.component.jsx":"101","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx":"102","/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx":"103","/imooptik-frontend/src/components/section-header/section-header.styles.jsx":"104","/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx":"105","/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx":"106","/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.styles.jsx":"107","/imooptik-frontend/src/components/list-arrows/list-arrows.styles.jsx":"108","/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx":"109","/imooptik-frontend/src/components/user-form/user.form-styles.jsx":"110","/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx":"111","/imooptik-frontend/src/hooks/useOutsideAlerter.jsx":"112","/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.styles.jsx":"113","/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx":"114","/imooptik-frontend/src/components/booking-appoinments/booking-appoinment.styles.jsx":"115","/imooptik-frontend/src/components/calendar/calendar.styles.jsx":"116","/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.styles.jsx":"117","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx":"118","/imooptik-frontend/src/components/custom-select/custom-select.styles.jsx":"119","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx":"120","/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx":"121","/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx":"122","/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx":"123","/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx":"124","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx":"125","/imooptik-frontend/src/components/examinations-overview/examinations-overview.component.jsx":"126","/imooptik-frontend/src/components/modal-booking/modal-booking.component.jsx":"127","/imooptik-frontend/src/components/booking-appoinment/booking-appoinment.component.jsx":"128","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx":"129","/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.component.jsx":"130","/imooptik-frontend/src/sections/order/steps/4-summary/summary.styles.jsx":"131","/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.styles.jsx":"132","/imooptik-frontend/src/utils/orders.utils.jsx":"133","/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.styles.jsx":"134","/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.styles.jsx":"135","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx":"136","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.component.jsx":"137","/imooptik-frontend/src/components/order-summary-product-name/order-summary-product-name.component.jsx":"138","/imooptik-frontend/src/components/order-summary-lenses-name/order-summary-lenses-name.component.jsx":"139","/imooptik-frontend/src/components/order-cart-lenses-row/order-cart-lenses-row.component.jsx":"140","/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx":"141","/imooptik-frontend/src/components/order-cart-row/order-cart-row.component.jsx":"142","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx":"143","/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.styles.jsx":"144","/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx":"145","/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx":"146","/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx":"147","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx":"148","/imooptik-frontend/src/utils/parameters.utils.jsx":"149","/imooptik-frontend/src/components/examinations-overview/examinations-overview.styles.jsx":"150","/imooptik-frontend/src/components/modal-booking/modal-booking.styles.jsx":"151","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx":"152","/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.styles.jsx":"153","/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.component.jsx":"154","/imooptik-frontend/src/components/examination-user/examination-user.component.jsx":"155","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.styles.jsx":"156","/imooptik-frontend/src/components/order-cart-lenses-row/order-cart-lenses-row.styles.jsx":"157","/imooptik-frontend/src/components/order-cart-row/order-cart-row.styles.jsx":"158","/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx":"159","/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx":"160","/imooptik-frontend/src/components/examination-user/examination-user.styles.jsx":"161","/imooptik-frontend/src/context/order/order.context.jsx":"162"},{"size":717,"mtime":1608670306490,"results":"163","hashOfConfig":"164"},{"size":362,"mtime":1608191294784,"results":"165","hashOfConfig":"164"},{"size":1717,"mtime":1612809435787,"results":"166","hashOfConfig":"164"},{"size":1076,"mtime":1610126635393,"results":"167","hashOfConfig":"164"},{"size":6931,"mtime":1612361908070,"results":"168","hashOfConfig":"164"},{"size":4163,"mtime":1613580623220,"results":"169","hashOfConfig":"164"},{"size":840,"mtime":1609978179243,"results":"170","hashOfConfig":"164"},{"size":1667,"mtime":1608613259561,"results":"171","hashOfConfig":"164"},{"size":714,"mtime":1609965412857,"results":"172","hashOfConfig":"164"},{"size":9098,"mtime":1613597513000,"results":"173","hashOfConfig":"164"},{"size":2292,"mtime":1610635788267,"results":"174","hashOfConfig":"164"},{"size":545,"mtime":1612808589467,"results":"175","hashOfConfig":"164"},{"size":721,"mtime":1612808901067,"results":"176","hashOfConfig":"164"},{"size":772,"mtime":1610476886850,"results":"177","hashOfConfig":"164"},{"size":652,"mtime":1612801843627,"results":"178","hashOfConfig":"164"},{"size":639,"mtime":1608689089980,"results":"179","hashOfConfig":"164"},{"size":1925,"mtime":1609978226453,"results":"180","hashOfConfig":"164"},{"size":1466,"mtime":1609978281513,"results":"181","hashOfConfig":"164"},{"size":178,"mtime":1608409397640,"results":"182","hashOfConfig":"164"},{"size":283,"mtime":1608325857586,"results":"183","hashOfConfig":"164"},{"size":2388,"mtime":1613160245370,"results":"184","hashOfConfig":"164"},{"size":7108,"mtime":1613084180800,"results":"185","hashOfConfig":"164"},{"size":4422,"mtime":1611960472114,"results":"186","hashOfConfig":"164"},{"size":4047,"mtime":1612461301680,"results":"187","hashOfConfig":"164"},{"size":12292,"mtime":1613575110740,"results":"188","hashOfConfig":"164"},{"size":4825,"mtime":1613420154282,"results":"189","hashOfConfig":"164"},{"size":25431,"mtime":1612900533359,"results":"190","hashOfConfig":"164"},{"size":7011,"mtime":1611198583300,"results":"191","hashOfConfig":"164"},{"size":1787,"mtime":1613608780880,"results":"192","hashOfConfig":"164"},{"size":3493,"mtime":1612458174320,"results":"193","hashOfConfig":"164"},{"size":5640,"mtime":1613165485770,"results":"194","hashOfConfig":"164"},{"size":4934,"mtime":1613416245002,"results":"195","hashOfConfig":"164"},{"size":4678,"mtime":1613609548270,"results":"196","hashOfConfig":"164"},{"size":6973,"mtime":1613575015710,"results":"197","hashOfConfig":"164"},{"size":6137,"mtime":1613225620441,"results":"198","hashOfConfig":"164"},{"size":9788,"mtime":1613610304560,"results":"199","hashOfConfig":"164"},{"size":18010,"mtime":1613229257881,"results":"200","hashOfConfig":"164"},{"size":810,"mtime":1610132345623,"results":"201","hashOfConfig":"164"},{"size":9758,"mtime":1612970796630,"results":"202","hashOfConfig":"164"},{"size":5470,"mtime":1613602048180,"results":"203","hashOfConfig":"164"},{"size":4810,"mtime":1612970338420,"results":"204","hashOfConfig":"164"},{"size":12058,"mtime":1612988270310,"results":"205","hashOfConfig":"164"},{"size":2965,"mtime":1612745938976,"results":"206","hashOfConfig":"164"},{"size":5575,"mtime":1612745901696,"results":"207","hashOfConfig":"164"},{"size":975,"mtime":1612808569627,"results":"208","hashOfConfig":"164"},{"size":1331,"mtime":1612803190107,"results":"209","hashOfConfig":"164"},{"size":898,"mtime":1609978275513,"results":"210","hashOfConfig":"164"},{"size":440,"mtime":1609635534260,"results":"211","hashOfConfig":"164"},{"size":377,"mtime":1608409635720,"results":"212","hashOfConfig":"164"},{"size":1793,"mtime":1608678905090,"results":"213","hashOfConfig":"164"},{"size":3530,"mtime":1611960472114,"results":"214","hashOfConfig":"164"},{"size":4993,"mtime":1612832549277,"results":"215","hashOfConfig":"164"},{"size":897,"mtime":1611960472114,"results":"216","hashOfConfig":"164"},{"size":1560,"mtime":1610106635382,"results":"217","hashOfConfig":"164"},{"size":5293,"mtime":1613229296151,"results":"218","hashOfConfig":"164"},{"size":1666,"mtime":1613609588320,"results":"219","hashOfConfig":"164"},{"size":546,"mtime":1613058970630,"results":"220","hashOfConfig":"164"},{"size":1027,"mtime":1612890733849,"results":"221","hashOfConfig":"164"},{"size":688,"mtime":1612805274117,"results":"222","hashOfConfig":"164"},{"size":834,"mtime":1612485945670,"results":"223","hashOfConfig":"164"},{"size":1774,"mtime":1613610364860,"results":"224","hashOfConfig":"164"},{"size":1115,"mtime":1612827087027,"results":"225","hashOfConfig":"164"},{"size":1157,"mtime":1612828486397,"results":"226","hashOfConfig":"164"},{"size":1294,"mtime":1612826862757,"results":"227","hashOfConfig":"164"},{"size":3206,"mtime":1612979284800,"results":"228","hashOfConfig":"164"},{"size":1728,"mtime":1613609903180,"results":"229","hashOfConfig":"164"},{"size":728,"mtime":1610132354653,"results":"230","hashOfConfig":"164"},{"size":454,"mtime":1612803607557,"results":"231","hashOfConfig":"164"},{"size":2024,"mtime":1612970501200,"results":"232","hashOfConfig":"164"},{"size":655,"mtime":1613076713220,"results":"233","hashOfConfig":"164"},{"size":320,"mtime":1611163718930,"results":"234","hashOfConfig":"164"},{"size":1370,"mtime":1611960472114,"results":"235","hashOfConfig":"164"},{"size":5782,"mtime":1613154392180,"results":"236","hashOfConfig":"164"},{"size":1416,"mtime":1611960472114,"results":"237","hashOfConfig":"164"},{"size":1807,"mtime":1613160077810,"results":"238","hashOfConfig":"164"},{"size":431,"mtime":1613172969079,"results":"239","hashOfConfig":"164"},{"size":2192,"mtime":1613154537280,"results":"240","hashOfConfig":"164"},{"size":14172,"mtime":1613574844140,"results":"241","hashOfConfig":"164"},{"size":403,"mtime":1612912179069,"results":"242","hashOfConfig":"164"},{"size":8179,"mtime":1613236344731,"results":"243","hashOfConfig":"164"},{"size":3631,"mtime":1612564271900,"results":"244","hashOfConfig":"164"},{"size":4034,"mtime":1612892288139,"results":"245","hashOfConfig":"164"},{"size":11444,"mtime":1612474871810,"results":"246","hashOfConfig":"164"},{"size":999,"mtime":1612984003740,"results":"247","hashOfConfig":"164"},{"size":6341,"mtime":1613403970832,"results":"248","hashOfConfig":"164"},{"size":3110,"mtime":1612991892600,"results":"249","hashOfConfig":"164"},{"size":1559,"mtime":1613150212680,"results":"250","hashOfConfig":"164"},{"size":3418,"mtime":1613610106850,"results":"251","hashOfConfig":"164"},{"size":425,"mtime":1609365301650,"results":"252","hashOfConfig":"164"},{"size":693,"mtime":1612972806200,"results":"253","hashOfConfig":"164"},{"size":354,"mtime":1610748624680,"results":"254","hashOfConfig":"164"},{"size":651,"mtime":1608506295620,"results":"255","hashOfConfig":"164"},{"size":8363,"mtime":1611078296630,"results":"256","hashOfConfig":"164"},{"size":9078,"mtime":1613613583260,"results":"257","hashOfConfig":"164"},{"size":5496,"mtime":1613613949010,"results":"258","hashOfConfig":"164"},{"size":5313,"mtime":1613606400780,"results":"259","hashOfConfig":"164"},{"size":2999,"mtime":1612400717780,"results":"260","hashOfConfig":"164"},{"size":1008,"mtime":1612827031697,"results":"261","hashOfConfig":"164"},{"size":3741,"mtime":1611960472114,"results":"262","hashOfConfig":"164"},{"size":4598,"mtime":1612900413619,"results":"263","hashOfConfig":"164"},{"size":8225,"mtime":1613154581560,"results":"264","hashOfConfig":"164"},{"size":8404,"mtime":1613154476020,"results":"265","hashOfConfig":"164"},{"size":848,"mtime":1613397686572,"results":"266","hashOfConfig":"164"},{"size":1088,"mtime":1612802413197,"results":"267","hashOfConfig":"164"},{"size":908,"mtime":1612832700117,"results":"268","hashOfConfig":"164"},{"size":2193,"mtime":1612808323487,"results":"269","hashOfConfig":"164"},{"size":1934,"mtime":1613059142660,"results":"270","hashOfConfig":"164"},{"size":624,"mtime":1613416674392,"results":"271","hashOfConfig":"164"},{"size":2624,"mtime":1612827167197,"results":"272","hashOfConfig":"164"},{"size":2225,"mtime":1612827757387,"results":"273","hashOfConfig":"164"},{"size":1096,"mtime":1613574911250,"results":"274","hashOfConfig":"164"},{"size":1400,"mtime":1611365536654,"results":"275","hashOfConfig":"164"},{"size":1867,"mtime":1613151668320,"results":"276","hashOfConfig":"164"},{"size":447,"mtime":1609638204590,"results":"277","hashOfConfig":"164"},{"size":613,"mtime":1612906653229,"results":"278","hashOfConfig":"164"},{"size":1274,"mtime":1613074426100,"results":"279","hashOfConfig":"164"},{"size":2881,"mtime":1613396200982,"results":"280","hashOfConfig":"164"},{"size":1060,"mtime":1612969996230,"results":"281","hashOfConfig":"164"},{"size":364,"mtime":1612973498140,"results":"282","hashOfConfig":"164"},{"size":698,"mtime":1612898195179,"results":"283","hashOfConfig":"164"},{"size":1124,"mtime":1612806552957,"results":"284","hashOfConfig":"164"},{"size":4564,"mtime":1613054876220,"results":"285","hashOfConfig":"164"},{"size":3039,"mtime":1613420226862,"results":"286","hashOfConfig":"164"},{"size":6582,"mtime":1613155269070,"results":"287","hashOfConfig":"164"},{"size":681,"mtime":1610146980773,"results":"288","hashOfConfig":"164"},{"size":8127,"mtime":1612447257340,"results":"289","hashOfConfig":"164"},{"size":4826,"mtime":1613004237010,"results":"290","hashOfConfig":"164"},{"size":408,"mtime":1612906966259,"results":"291","hashOfConfig":"164"},{"size":1550,"mtime":1612478391310,"results":"292","hashOfConfig":"164"},{"size":10441,"mtime":1613237898701,"results":"293","hashOfConfig":"164"},{"size":3161,"mtime":1613613874700,"results":"294","hashOfConfig":"164"},{"size":3950,"mtime":1613602387790,"results":"295","hashOfConfig":"164"},{"size":587,"mtime":1612445089420,"results":"296","hashOfConfig":"164"},{"size":1458,"mtime":1612888993149,"results":"297","hashOfConfig":"164"},{"size":3241,"mtime":1613571524400,"results":"298","hashOfConfig":"164"},{"size":1698,"mtime":1612826981347,"results":"299","hashOfConfig":"164"},{"size":9180,"mtime":1613613758070,"results":"300","hashOfConfig":"164"},{"size":442,"mtime":1612445565000,"results":"301","hashOfConfig":"164"},{"size":434,"mtime":1612445561440,"results":"302","hashOfConfig":"164"},{"size":3319,"mtime":1613605788420,"results":"303","hashOfConfig":"164"},{"size":341,"mtime":1610810143010,"results":"304","hashOfConfig":"164"},{"size":6873,"mtime":1613605796390,"results":"305","hashOfConfig":"164"},{"size":1301,"mtime":1612828444267,"results":"306","hashOfConfig":"164"},{"size":1115,"mtime":1612828420327,"results":"307","hashOfConfig":"164"},{"size":1564,"mtime":1612828401497,"results":"308","hashOfConfig":"164"},{"size":2165,"mtime":1612803915567,"results":"309","hashOfConfig":"164"},{"size":1432,"mtime":1612827268487,"results":"310","hashOfConfig":"164"},{"size":486,"mtime":1610505703940,"results":"311","hashOfConfig":"164"},{"size":806,"mtime":1612387601160,"results":"312","hashOfConfig":"164"},{"size":1903,"mtime":1612827794387,"results":"313","hashOfConfig":"164"},{"size":1721,"mtime":1613001456440,"results":"314","hashOfConfig":"164"},{"size":1345,"mtime":1612827781337,"results":"315","hashOfConfig":"164"},{"size":3058,"mtime":1613236507011,"results":"316","hashOfConfig":"164"},{"size":14401,"mtime":1613074645350,"results":"317","hashOfConfig":"164"},{"size":492,"mtime":1612389141090,"results":"318","hashOfConfig":"164"},{"size":1596,"mtime":1613613784810,"results":"319","hashOfConfig":"164"},{"size":1598,"mtime":1613589352810,"results":"320","hashOfConfig":"164"},{"size":2219,"mtime":1613605418070,"results":"321","hashOfConfig":"164"},{"size":349,"mtime":1612803624657,"results":"322","hashOfConfig":"164"},{"size":2760,"mtime":1613075254680,"results":"323","hashOfConfig":"164"},{"size":162,"mtime":1612389165420,"results":"324","hashOfConfig":"164"},{"size":7199,"mtime":1613608055170,"results":"325","hashOfConfig":"164"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},"1lk1amn",{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"328"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"328"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"328"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"328"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"328"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"404","messages":"405","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"328"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"328"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"414","messages":"415","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"328"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"328"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"328"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"328"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"328"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"328"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"328"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"328"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"328"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"328"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"328"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"328"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"328"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"328"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"536","messages":"537","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"538","messages":"539","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"540","messages":"541","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"328"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"328"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"328"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"328"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"328"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"328"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"328"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"328"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"328"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"328"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"328"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/imooptik-frontend/src/index.js",[],["683","684"],"/imooptik-frontend/src/reportWebVitals.js",[],"/imooptik-frontend/src/App.jsx",[],"/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx",[],"/imooptik-frontend/src/context/auth/auth.context.jsx",["685"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { getUser, createNewUser, resetPassword, setNewPassword, fetchUser } from './auth.queries'\n\nexport const AuthContext = createContext({\n    currentUser: null,\n    isAdmin: false,\n    isOptometrist: false,\n    token: null,\n    stats: null,\n    logIn: () => { },\n    logOut: () => { },\n    register: () => { },\n    handleResetPassword: () => { },\n    handleCreatingNewPassword: () => { }\n})\n\nconst AuthProvider = ({ children }) => {\n    const { setShowModal, setIsLoading, getMessage, closeModal } = useContext(LoadingModalContext)\n    const [currentUser, setCurrentUser] = useState(null)\n    const [token, setToken] = useState(null)\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [isOptometrist, setIsOptometrist] = useState(false)\n    const [stats, setStats] = useState(null)\n\n    const checkIfOptometrist = user => {\n        if (user.optometrist) {\n            setIsOptometrist(true)\n        } else {\n            setIsOptometrist(false)\n        }\n    }\n\n    const checkIfAdmin = (user) => {\n        if (user.admin > 1) {\n            setIsAdmin(true)\n        } else {\n            setIsAdmin(false)\n        }\n    }\n\n    const logIn = async (email, password) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await getUser({ email, password })\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n            if (user.user) {\n                setCurrentUser(user.user)\n                setToken(user.authToken)\n                localStorage.setItem(process.env.REACT_APP_ADMIN_TOKEN, user.authToken)\n                checkIfAdmin(user.user)\n\n                closeModal()\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const logOut = () => {\n        localStorage.removeItem(process.env.REACT_APP_ADMIN_TOKEN)\n        setCurrentUser(null)\n        setToken(null)\n    }\n\n    const register = async (name, email, password, confirmPassword) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!name) {\n            console.log(\"Ziadne meno\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n\n        if (password !== confirmPassword) {\n            console.log(\"hesla sa nezhoduju\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await createNewUser({ name, email, password })\n            const data = await response.json()\n\n            setIsLoading(false)\n            getMessage(data.message)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleResetPassword = async (email) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await resetPassword(email)\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleCreatingNewPassword = async (resetSecret, password) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        console.log(resetSecret)\n\n        if (!resetSecret) {\n            console.log(\"Ziadny reset token\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await setNewPassword(resetSecret, password)\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const getStats = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/stats/collectionCounts`, requestOptions)\n            const data = await response.json()\n\n            setStats(data)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN)) {\n            setToken(localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (token) {\n            const getUserProfile = async () => {\n                const response = await fetchUser(token)\n                const data = await response.json()\n                if (data.user) {\n                    setCurrentUser(data.user)\n                    checkIfAdmin(data.user)\n                    checkIfOptometrist(data.user)\n                }\n            }\n            getUserProfile()\n            getStats()\n        }\n    }, [token])\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token,\n                currentUser,\n                isAdmin,\n                isOptometrist,\n                stats,\n                logIn,\n                logOut,\n                register,\n                handleResetPassword,\n                handleCreatingNewPassword\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthProvider","/imooptik-frontend/src/global.styles.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset-password.jsx",[],"/imooptik-frontend/src/components/popup/pop-up.component.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.jsx",[],"/imooptik-frontend/src/context/auth/auth.queries.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx",[],"/imooptik-frontend/src/components/popup/pop.up.styles.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.component.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.component.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.component.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.component.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.component.jsx",[],"/imooptik-frontend/src/context/booking/booking.context.jsx",[],"/imooptik-frontend/src/context/image/image.context.jsx",[],"/imooptik-frontend/src/context/blog/blog.context.jsx",[],"/imooptik-frontend/src/context/user/user.context.jsx",["686","687","688"],"/imooptik-frontend/src/context/orders/orders.context.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.context.jsx",["689","690"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\n\nimport {\n    premisesTabs,\n    categoryTabs,\n    initLensesObj,\n    initProductObj,\n    formatPrice,\n    diaConvert,\n    initContactLensesObj,\n    initGlassesObj,\n    formatfloatNumber,\n    formatLink\n} from './warehouse.utils'\n\nexport const WarehouseContext = createContext({\n    eanCode: null,\n    product: {},\n    lenses: {},\n    contactLensesParameters: {},\n    glassesParameters: {},\n    totalProducts: 0,\n    totalLenses: 0,\n    activePremisesTab: 0,\n    activeCategoryTypeTab: 0,\n    retailPremisesTabs: [],\n    productCategoryTypeTabs: [],\n    products: null,\n    lensesProducts: null,\n    handleChangeCategoryTypeTab: () => { },\n    handleChangePremisesTab: () => { },\n    getProductsByQuery: () => { },\n    handleProductChange: () => { },\n    handleProductAvailableChange: () => { },\n    getSingleProduct: () => { },\n    createProduct: () => { },\n    updateProduct: () => { },\n    deleteProduct: () => { },\n    getSingleLenses: () => { },\n    getLenses: () => { },\n    createLenses: () => { },\n    updateLenses: () => { },\n    deleteLenses: () => { },\n    handleLensesChange: () => { },\n    handleLensesParameterChange: () => { },\n    resetProduct: () => { },\n    resetLenses: () => { },\n    resetContactLenses: () => { },\n    resetGlassesParameters: () => { },\n    getEanCode: () => { },\n    handleAddNewParameter: () => { },\n    handleContactLensesParameterChange: () => { },\n    handleGlassesParameterChange: () => { },\n    handleGlassesParameterSpecsChange: () => { },\n    handleGlassesSizeChange: () => { },\n})\n\nconst WarehouseProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token, isAdmin, currentUser, stats } = useContext(AuthContext)\n    const { closeModal, setIsLoading, setShowModal, getMessage } = useContext(LoadingModalContext)\n\n    const [totalProducts, setTotalProducts] = useState(0)\n    const [totalLenses, setTotalLenses] = useState(0)\n    const [eanCode, setEanCode] = useState(null)\n\n    const [product, setProduct] = useState({ ...initProductObj })\n    const [lenses, setLenses] = useState({ ...initLensesObj })\n    const [contactLensesParameters, setContactLensesParameters] = useState({ ...initContactLensesObj })\n    const [glassesParameters, setGlassesParameters] = useState({ ...initGlassesObj })\n\n    const [products, setProducts] = useState(null)\n    const [lensesProducts, setLensesProducts] = useState(null)\n    const [activePremisesTab, setActivePremisesTab] = useState(0)\n    const [retailPremisesTabs, setRetailPremisesTabs] = useState([])\n\n    const [productCategoryTypeTabs] = useState(categoryTabs)\n    const [activeCategoryTypeTab, setActiveCategoryTypeTab] = useState(0)\n\n    const handleGlassesParameterChange = e => {\n        const { name, value } = e.target\n        setGlassesParameters({\n            ...glassesParameters,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParameterSpecsChange = e => {\n        const { name, value } = e.target\n        setGlassesParameters({\n            ...glassesParameters,\n            specs: {\n                ...glassesParameters.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n        setGlassesParameters({\n            ...glassesParameters,\n            specs: {\n                ...glassesParameters.specs,\n                [name]: arr\n            }\n        })\n\n    }\n\n    const handleAddNewParameter = e => {\n        const { name } = e.target\n        setContactLensesParameters({\n            ...contactLensesParameters,\n            [name]: [...contactLensesParameters[name], 1001]\n        })\n    }\n\n    const handleContactLensesParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n        setContactLensesParameters({\n            ...contactLensesParameters,\n            [name]: arr\n        })\n    }\n\n    const handleProductChange = e => {\n        const { name, value } = e.target\n\n        setProduct({\n            ...product,\n            [name]: value\n        })\n    }\n\n    const handleProductAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setProduct({\n            ...product,\n            [name]: arr\n        })\n    }\n\n    const handleLensesChange = e => {\n        const { name, value } = e.target\n\n        setLenses({\n            ...lenses,\n            [name]: value\n        })\n    }\n\n    const handleLensesParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setLenses({\n            ...lenses,\n            [name]: arr\n        })\n    }\n\n    const resetProduct = () => {\n        setProduct({\n            ...initProductObj,\n            available: [1001, 1001, 1001, 1001, 0],\n        })\n        setEanCode(null)\n    }\n\n    const resetLenses = () => {\n        // setLenses({ ...initLensesObj })\n        setLenses({\n            ...initLensesObj,\n            dioptersRange: [1001, 1001],\n            cylinderRange: [1001, 1001],\n        })\n    }\n\n    const resetContactLenses = () => {\n        setContactLensesParameters({\n            ...initContactLensesObj,\n            allowedCurves: [1001],\n            allowedDiameters: [1001],\n            dioptersRange: [1001, 1001]\n        })\n    }\n\n    const resetGlassesParameters = () => {\n        setGlassesParameters({\n            ...initGlassesObj,\n            specs: {\n                ...initGlassesObj.specs,\n                size: [1001, 1001, 1001]\n            }\n        })\n    }\n\n    const handleChangePremisesTab = (idx) => {\n        setActivePremisesTab(idx)\n    }\n\n    const handleChangeCategoryTypeTab = (idx) => {\n        setActiveCategoryTypeTab(idx)\n    }\n\n\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const getEanCode = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/nextEanCode`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.eanCode) {\n                setEanCode(data.eanCode)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getProductsByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(query)\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.products) {\n                setProducts(data.products)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getLenses = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.lenses) {\n                setProducts(data.lenses)\n                setLensesProducts(data.lenses)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getSingleProduct = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/products/${id}`)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error === 'not-found') {\n                getSingleLenses(id)\n            }\n\n            if (data.product) {\n                setProduct({\n                    ...data.product,\n                    price: (data.product.price / 100).toFixed(2)\n                })\n                if (data.product.type === 3) {\n                    setContactLensesParameters({\n                        ...data.product.contactLenses\n                    })\n                } else {\n                    setGlassesParameters({\n                        colorCode: data.product.colorCode ?? \"\",\n                        specs: {\n                            ...data.product.specs,\n                            size: [...Array(3)].map((value, idx) => data.product.specs.size[idx] ? data.product.specs.size[idx] : 0)\n                        }\n                    })\n                }\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createProduct = async (productToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const slug = diaConvert(productToAdd.name).replaceAll(\" \", \"-\").toLowerCase().trim()\n\n        let modifiedProduct = {\n            ...productToAdd,\n            price: formatPrice(productToAdd.price.toString()),\n            link: slug,\n        }\n\n        if (productToAdd.specs) {\n            if (productToAdd.specs.size) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    specs: {\n                        ...modifiedProduct.specs,\n                        size: productToAdd.specs.size.map(value => value === 1001 ? 0 : formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        if (productToAdd.contactLenses) {\n            if (productToAdd.contactLenses.allowedCurves) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: productToAdd.contactLenses.allowedCurves.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n            if (productToAdd.contactLenses.allowedDiameters) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: productToAdd.contactLenses.allowedDiameters.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n            if (productToAdd.contactLenses.dioptersRange) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: productToAdd.contactLenses.dioptersRange.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        console.log(\"modifiedProduct\")\n        console.log(modifiedProduct)\n\n\n        const raw = JSON.stringify({\n            ...modifiedProduct,\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.product) {\n                push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10\n                })\n                setEanCode(null)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateProduct = async (productToUpdate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let modifiedProduct = {\n            ...productToUpdate,\n        }\n\n        if (modifiedProduct.price) {\n            modifiedProduct = {\n                ...modifiedProduct,\n                price: formatPrice(productToUpdate.price.toString()),\n            }\n        }\n\n        if (modifiedProduct.available) {\n            modifiedProduct = {\n                ...modifiedProduct,\n                available: productToUpdate.available ? productToUpdate.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0]\n            }\n        }\n\n        if (productToUpdate.link) {\n            const slug = diaConvert(productToUpdate.link).replaceAll(\" \", \"-\").toLowerCase().trim()\n            modifiedProduct = {\n                ...modifiedProduct,\n                link: slug\n            }\n        }\n\n        if (productToUpdate.specs) {\n            if (productToUpdate.specs.size) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    specs: {\n                        ...modifiedProduct.specs,\n                        size: productToUpdate.specs.size.map(value => value === 1001 ? 0 : formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        if (productToUpdate.contactLenses) {\n            if (productToUpdate.contactLenses.allowedCurves) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: productToUpdate.contactLenses.allowedCurves.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: contactLensesParameters.allowedCurves\n                    }\n                }\n            }\n\n            if (productToUpdate.contactLenses.allowedDiameters) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: productToUpdate.contactLenses.allowedDiameters.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: contactLensesParameters.allowedDiameters\n                    }\n                }\n            }\n            if (productToUpdate.contactLenses.dioptersRange) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: productToUpdate.contactLenses.dioptersRange.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: contactLensesParameters.dioptersRange\n                    }\n                }\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedProduct,\n        })\n\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/${product._id}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.message)\n                setIsLoading(false)\n                return\n\n            }\n\n            if (data.product) {\n                push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteProduct = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/${id}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.product) {\n                // push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getSingleLenses = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/lenses/${id}`)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                setLenses(data.lenses)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createLenses = async (lensesToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify({\n            ...lensesToAdd,\n            price: formatPrice(lensesToAdd.price.toString())\n        });\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                push('/dashboard/obchod')\n                getLenses()\n                closeModal()\n                return\n            }\n\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateLenses = async (lensesToUpdate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let modifiedLenses = {\n            ...lensesToUpdate\n        }\n\n        if (modifiedLenses.price) {\n            modifiedLenses = {\n                ...modifiedLenses,\n                price: formatPrice(lensesToUpdate.price.toString()),\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedLenses,\n        });\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/${lenses._id}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                push('/dashboard/obchod')\n                getLenses()\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteLenses = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/${id}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                getLenses()\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (products) {\n            console.log(`GET ${productCategoryTypeTabs[activeCategoryTypeTab].name} DATA`)\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    limit: 10\n                })\n            } else {\n                getLenses()\n            }\n        }\n    }, [activeCategoryTypeTab])\n\n    useEffect(() => {\n        console.log(\"SET PREMISES\")\n        if (currentUser) {\n            if (isAdmin) {\n                setRetailPremisesTabs(premisesTabs)\n                setActivePremisesTab(0)\n            } else {\n                setRetailPremisesTabs(premisesTabs.filter(tab => tab.premises === currentUser.premises))\n                setActivePremisesTab(0)\n            }\n        }\n    }, [currentUser, isAdmin])\n\n    useEffect(() => {\n        if (stats) {\n            console.log(\"SET STATS\")\n            setTotalProducts(stats.products)\n            setTotalLenses(stats.lenses)\n        }\n    }, [stats])\n\n    useEffect(() => {\n        if (product.name !== '') {\n            setProduct({\n                ...product,\n                link: formatLink(product.name)\n            })\n        }\n    }, [product.name])\n\n    return (\n        <WarehouseContext.Provider\n            value={{\n                eanCode,\n                product,\n                lenses,\n                contactLensesParameters,\n                glassesParameters,\n                totalProducts,\n                totalLenses,\n                activePremisesTab,\n                activeCategoryTypeTab,\n                retailPremisesTabs,\n                productCategoryTypeTabs,\n                products,\n                lensesProducts,\n                handleChangeCategoryTypeTab,\n                handleChangePremisesTab,\n                getProductsByQuery,\n                handleProductChange,\n                handleProductAvailableChange,\n                getLenses,\n                getSingleProduct,\n                createProduct,\n                updateProduct,\n                deleteProduct,\n                getSingleLenses,\n                createLenses,\n                updateLenses,\n                deleteLenses,\n                handleLensesChange,\n                handleLensesParameterChange,\n                resetProduct,\n                resetLenses,\n                resetContactLenses,\n                resetGlassesParameters,\n                getEanCode,\n                handleAddNewParameter,\n                handleContactLensesParameterChange,\n                handleGlassesParameterChange,\n                handleGlassesParameterSpecsChange,\n                handleGlassesSizeChange,\n            }}\n        >\n            {children}\n        </WarehouseContext.Provider>\n    )\n}\n\nexport default WarehouseProvider","/imooptik-frontend/src/context/coupons/coupons.context.jsx",[],"/imooptik-frontend/src/context/analytics/analytics.context.jsx",[],"/imooptik-frontend/src/context/examination/examination.context.jsx",[],"/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx",["691","692"],"import React, { useState, useContext, useEffect } from 'react'\n// import { AuthContext } from '../..//context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useHistory } from 'react-router-dom'\n\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ProductOverview from '../../components/product-overview/product-overview.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport EshopFilterModal from '../../components/modal-eshop-filter/modal-eshop-filter.component'\n\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport {\n    FlexContainer,\n    Filterbutton,\n    ResetButton\n} from './e-shop.styles'\n\nconst EshopSection = () => {\n    const { push } = useHistory()\n    const { closeModal, showModal, isLoading, message } = useContext(LoadingModalContext)\n    const [searchQuery, setSearchQuery] = useState('')\n    const [productItems, setProductItems] = useState([])\n    const [queryFilter, setQueryFilter] = useState({\n        limit: 10,\n        skip: 0,\n    })\n\n    const [showFilterModal, setShowFilterModal] = useState(false)\n    const [hasFilter, setHasFilter] = useState(false)\n\n\n    const {\n        activePremisesTab,\n        products,\n        retailPremisesTabs,\n        getProductsByQuery,\n        handleChangePremisesTab,\n        productCategoryTypeTabs,\n        activeCategoryTypeTab,\n        handleChangeCategoryTypeTab,\n        deleteProduct,\n        deleteLenses,\n    } = useContext(WarehouseContext)\n\n    const applyFilter = filter => {\n        getProductsByQuery(filter)\n        setShowFilterModal(false)\n        setHasFilter(true)\n    }\n\n    const resetFilter = () => {\n        getProductsByQuery({\n            limit: 10,\n            skip: 0,\n        })\n        setShowFilterModal(false)\n        setHasFilter(false)\n    }\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    query: searchQuery\n                })\n            }\n        }\n    }\n\n    const handleDeleteProduct = (id) => {\n        deleteProduct(id)\n    }\n\n    useEffect(() => {\n        if (!products) {\n            getProductsByQuery({\n                limit: 10\n            })\n        }\n        if (products) {\n            setProductItems(products)\n        }\n    }, [products])\n\n    useEffect(() => {\n        if (!searchQuery && products) {\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    limit: 10\n                })\n            }\n        }\n    }, [searchQuery])\n\n\n    const getNextPage = () => {\n        if (productItems.length < 10) return\n        getProductsByQuery({\n            ...queryFilter,\n            skip: queryFilter.skip + 10\n        })\n        setQueryFilter({\n            ...queryFilter,\n            skip: queryFilter.skip + 10\n        })\n    }\n\n    const getPrevPage = () => {\n        if (queryFilter.skip === 0) return\n        getProductsByQuery({\n            ...queryFilter,\n            skip: queryFilter.skip - 10\n        })\n        setQueryFilter({\n            ...queryFilter,\n            skip: queryFilter.skip - 10\n        })\n    }\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showFilterModal && <EshopFilterModal applyFilter={applyFilter} resetFilter={resetFilter} close={() => setShowFilterModal(false)} />}\n\n            <SectionHeader\n                title=\"Sklad\"\n                searchQuery={searchQuery}\n                handleSearch={handleSearch}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('sklad/novy-produkt')}\n\n            />\n\n            <SectionNavbar\n                items={retailPremisesTabs}\n                activeIndex={activePremisesTab}\n                setActiveIndex={handleChangePremisesTab}\n            />\n\n            <FlexContainer>\n                <SectionNavbar\n                    items={productCategoryTypeTabs}\n                    activeIndex={activeCategoryTypeTab}\n                    setActiveIndex={handleChangeCategoryTypeTab}\n                />\n                {activeCategoryTypeTab === 0 && <div>\n                    {hasFilter && <ResetButton onClick={resetFilter}>reset</ResetButton>}\n                    <Filterbutton onClick={() => setShowFilterModal(true)}>Filter</Filterbutton>\n                </div>}\n            </FlexContainer>\n\n            <ScrollContainer>\n                {productItems.map((product, idx) => (\n                    <ProductOverview\n                        key={idx}\n                        product={product}\n                        activePremisesTab={activePremisesTab}\n                        handleUpdateButton={() => push(`sklad/${product._id}`)}\n                        handleDeleteButton={activeCategoryTypeTab === 0 ? () => handleDeleteProduct(product._id) : () => deleteLenses((product._id))}\n                    />\n                ))}\n\n                <ListArrows\n                    listItems={productItems}\n                    handleClickPrev={getPrevPage}\n                    handleClickNext={getNextPage}\n                />\n            </ScrollContainer>\n        </section >\n    )\n}\n\nexport default EshopSection\n","/imooptik-frontend/src/sections/customers/customers.section.jsx",["693","694"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from \"../../components/section-navbar/section-navbar.component\"\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\nimport { userTabs } from '../../utils/user.utils'\n\nimport {\n    TableCol,\n    TableContainer,\n    TableHead,\n    TableRow,\n    UpdateButton,\n    DeleteButton\n} from './customers.styles'\n\nconst CustomersSection = () => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n    const { isAdmin } = useContext(AuthContext)\n    const [userItems, setUserItems] = useState([])\n    const [activeIndex, setActiveIndex] = useState(0)\n    const [filterQuery, setFilterQuery] = useState({\n        limit: 10,\n        skip: 0,\n        filters: {\n            admin: activeIndex\n        }\n    })\n\n    const { response, isLoading, refetch } = useFetchByQuery('api/admin/users/filter', filterQuery)\n\n    const {\n        // isLoading,\n        showModal,\n        message,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            setFilterQuery({\n                limit: 10,\n                skip: 0,\n                query: searchQuery\n            })\n            refetch()\n        }\n    }\n\n    const handleActiveIndexChange = (index) => {\n        setActiveIndex(index)\n        setFilterQuery({\n            limit: 10,\n            skip: 0,\n            filters: {\n                admin: index\n            }\n        })\n        refetch()\n    }\n\n    const getNextPage = () => {\n        if (userItems.length < 10) return\n        setFilterQuery({\n            ...filterQuery,\n            skip: filterQuery.skip + 10\n        })\n        refetch()\n\n    }\n\n    const getPrevPage = () => {\n        if (filterQuery.skip === 0) return\n        setFilterQuery({\n            ...filterQuery,\n            skip: filterQuery.skip - 10\n        })\n        refetch()\n\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n        if (response) {\n            setUserItems(response.users)\n            closeModal()\n        }\n    }, [isLoading])\n\n    useEffect(() => {\n        if (searchQuery === '') {\n            setFilterQuery({\n                limit: 10,\n                skip: 0,\n                filters: {\n                    admin: activeIndex\n                }\n            })\n            refetch()\n        }\n    }, [searchQuery])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleSearch={handleSearch}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('zakaznici/novy-zakaznik')}\n                title=\"Zákazníci\"\n            />\n\n            <SectionNavbar\n                items={isAdmin ? userTabs : [\n                    {\n                        id: 0,\n                        name: \"Zákazníci\",\n                        filter: 0,\n                    },]}\n                activeIndex={activeIndex}\n                setActiveIndex={handleActiveIndexChange}\n            />\n\n            <ScrollContainer>\n                <TableContainer>\n                    <TableHead>\n                        <TableCol>Meno a priezvisko</TableCol>\n                        <TableCol>Email</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {userItems && userItems.map((user, idx) => (\n                        <TableRow key={idx}>\n                            <TableCol>{user.name}</TableCol>\n                            <TableCol>{user.email}</TableCol>\n                            <TableCol>\n                                <UpdateButton onClick={() => push(`zakaznici/${user._id}`)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={() => alert(\"Pekný pokus! Tu velím zatiaľ ja :)\")}>Odstrániť</DeleteButton>\n                            </TableCol>\n                        </TableRow>\n                    ))}\n                </TableContainer>\n\n                <ListArrows\n                    listItems={userItems}\n                    handleClickPrev={getPrevPage}\n                    handleClickNext={getNextPage}\n                />\n            </ScrollContainer>\n\n        </section>\n    )\n}\n\nexport default CustomersSection\n","/imooptik-frontend/src/sections/analytics/analytics.section.jsx",["695"],"/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx",["696","697","698","699","700"],"/imooptik-frontend/src/sections/orders/orders.section.jsx",["701"],"import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport OrderOverview from '../../components/order-overview/order-overview.component'\n// import OrderDeligateModal from '../../components/order-deligate-modal/order-deligate-modal.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport {\n    GoArrowSmallDown,\n    GoArrowSmallUp\n} from 'react-icons/go'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    tabItems\n} from '../../context/orders/orders.utils'\n\nimport {\n    TableHead,\n    OrdersTable,\n    TableCol,\n    IconContainer\n} from './orders.styles'\n\nconst OrdersSection = () => {\n    const { push } = useHistory()\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const [searchQuery, setSearchQuery] = useState('')\n    const [activeIndex, setActiveIndex] = useState(1)\n    const [orders, setOrders] = useState([])\n    const [fetchQueryObj, setFetchQueryObj] = useState({\n        limit: 10,\n        skip: 0,\n        sortBy: {\n            date: -1\n        },\n        filters: {\n            finished: false\n        }\n    })\n\n    const { isLoading: isFetching, response, refetch } = useFetchByQuery('api/admin/orders/filter', fetchQueryObj)\n\n    const handleRefetch = () => {\n        refetch()\n    }\n\n    const handleIndexChange = (idx) => {\n        setActiveIndex(idx)\n        if (idx === 1) {\n            setFetchQueryObj({\n                limit: 10,\n                skip: 0,\n                sortBy: {\n                    date: -1\n                },\n                filters: {\n                    finished: false\n                }\n            })\n        } else {\n            setFetchQueryObj({\n                limit: 10,\n                skip: 0,\n                sortBy: {\n                    date: -1\n                },\n                filters: {\n                    finished: true\n                }\n            })\n        }\n        handleRefetch()\n    }\n\n    // const handleSearch = () => {\n    //     if (searchQuery !== '') {\n    //         setFetchQueryObj(prevValue => ({\n    //             ...prevValue,\n    //             eanCo\n    //         }))\n    //     }\n    // }\n\n    const getNextPage = () => {\n        if (orders.length < 10) return\n        setFetchQueryObj(prevValue => ({\n            ...prevValue,\n            skip: prevValue.skip + 10,\n        }))\n        refetch()\n    }\n\n    const getPrevPage = () => {\n        if (fetchQueryObj.skip === 0) return\n        setFetchQueryObj(prevValue => ({\n            ...prevValue,\n            skip: prevValue.skip - 10,\n        }))\n        refetch()\n    }\n\n    useEffect(() => {\n        if (!isFetching) {\n            if (response) {\n                if (activeIndex === 1) {\n                    setOrders(response?.orders)\n                } else {\n                    setOrders(response?.orders)\n                }\n                closeModal()\n            }\n        }\n    }, [isFetching, response, activeIndex])\n\n    console.log(response)\n\n\n    useEffect(() => {\n        return () => {\n            setActiveIndex(1)\n            setSearchQuery('')\n            setOrders([])\n            setFetchQueryObj({\n                limit: 10,\n                skip: 0,\n                sortBy: {\n                    date: -1\n                },\n                filters: {\n                    finished: false\n                }\n            })\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <SectionHeader\n                searchQuery={searchQuery}\n                // handleSearch={handleSearch}\n\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push(\"/dashboard/objednavky/nova-objednavka\")}\n                title=\"Objednávky\"\n            />\n\n            <SectionNavbar\n                items={tabItems}\n                activeIndex={activeIndex}\n                setActiveIndex={handleIndexChange}\n            />\n\n            <ScrollContainer>\n                <OrdersTable>\n                    <TableHead>\n                        <TableCol>ID</TableCol>\n                        <TableCol clickable onClick={() => {\n                            setFetchQueryObj((prevObj) => ({\n                                ...fetchQueryObj,\n                                sortBy: {\n                                    date: prevObj.sortBy.date === 1 ? -1 : 1\n                                }\n                            }))\n                            handleRefetch()\n                        }}>\n                            Dátum {fetchQueryObj.sortBy.date === 1 ? <IconContainer>\n                                <GoArrowSmallDown />\n                            </IconContainer> : <IconContainer>\n                                    <GoArrowSmallUp />\n                                </IconContainer>\n                            }\n                        </TableCol>\n                        <TableCol>Prevádzka</TableCol>\n                        <TableCol>Status</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {orders.map((order, idx) => (\n                        <OrderOverview key={idx} order={order} refetch={handleRefetch} />\n                    ))}\n                </OrdersTable>\n\n                <ListArrows\n                    listItems={orders}\n                    handleClickNext={getNextPage}\n                    handleClickPrev={getPrevPage}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\n\n\nexport default OrdersSection\n","/imooptik-frontend/src/sections/booking/booking.section.jsx",["702"],"/imooptik-frontend/src/sections/product/product.section.jsx",["703","704","705","706"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport Popup from '../../components/popup/pop-up.component'\n\n// import CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n// import CustomFormSwitch from '../../components/custom-form-switch/custom-form-switch.component'\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\nimport ProductAccessoriesForm from '../../components/product-accessories-form/product-accessories-form.component'\nimport ProductContactLensesForm from '../../components/product-contact-lenses-form/product-contact-lenses-form.component'\n\n// import { useFetch } from '../../hooks/useFetch'\n\nimport { productCategories, checkParameter, formatLink } from '../../context/warehouse/warehouse.utils'\nimport { retailNames } from '../../utils/warehouse.utils'\n\nimport {\n    Header,\n    CategoryContainer,\n    CategoryCheckbox,\n    SubmitButton,\n    IsPublicCheckbox,\n\n} from './product.styles'\n\nconst ProductSection = () => {\n    const { id } = useParams()\n    const { currentUser } = useContext(AuthContext)\n    const { closeModal, message, isLoading, showModal, getMessage, setShowModal } = useContext(LoadingModalContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const {\n        eanCode,\n        product,\n        lenses,\n        contactLensesParameters,\n        glassesParameters,\n        handleLensesChange,\n        handleLensesParameterChange,\n        createProduct,\n        updateProduct,\n        resetProduct,\n        resetLenses,\n        resetContactLenses,\n        resetGlassesParameters,\n        createLenses,\n        updateLenses,\n        handleProductChange,\n        handleProductAvailableChange,\n        getEanCode,\n        handleAddNewParameter,\n        handleContactLensesParameterChange,\n        handleGlassesParameterChange,\n        handleGlassesParameterSpecsChange,\n        handleGlassesSizeChange,\n        getSingleProduct\n    } = useContext(WarehouseContext)\n\n    const [hasChanged, setHasChanged] = useState(false)\n    const [productObj, setProductObj] = useState({})\n\n\n\n    const handleChangeType = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (!isUpdating) {\n            if (productObj.type === 0) {\n                if (Object.keys(productObj).length > 1) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetLenses()\n                    } else {\n                        return\n                    }\n                }\n            } else {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetProduct()\n                        resetContactLenses()\n                        resetGlassesParameters()\n                    } else {\n                        return\n                    }\n                }\n            }\n        }\n        setProductObj({\n            [name]: value\n        })\n\n    }\n\n    const handleChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (productObj.type === 0) {\n            handleLensesChange(e)\n        }\n\n        if (productObj.type === 5) {\n            handleProductChange(e)\n        }\n\n        if (productObj.type === 4) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 3) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 2) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 1) {\n            handleProductChange(e)\n        }\n\n\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        if (isUpdating) {\n            if (name === 'name') {\n                setProductObj({\n                    ...productObj,\n                    [name]: value,\n                    link: formatLink(value)\n                })\n                return\n            }\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParametersChange = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterChange(e)\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleSpecsChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterSpecsChange(e)\n\n        if (value === '') {\n            delete productObj.specs[name]\n\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSpecsSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleGlassesSizeChange(e, idx)\n\n        if (value === '') {\n            if (productObj.specs[name].length > 1) {\n                arr[idx] = 1001\n\n                const firstIndex = arr[0]\n                const canDeleteSpecs = arr.map(value => {\n                    if (firstIndex !== value) {\n                        return false\n                    } else {\n                        return true\n                    }\n                })\n\n                const verdict = canDeleteSpecs.find(value => value === false)\n\n                if (verdict === false) {\n                    setProductObj({\n                        ...productObj,\n                        specs: {\n                            ...productObj.specs,\n                            [name]: arr\n                        }\n                    })\n                } else {\n                    delete productObj.specs[name]\n                }\n\n            }\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleProductAvailableChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleContactLensesChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleContactLensesParameterChange(e, idx)\n\n        if (value === '') {\n            if (productObj.contactLenses[name].length > 1) {\n                arr.splice(idx, 1)\n                setProductObj({\n                    ...productObj,\n                    contactLenses: {\n                        ...productObj.contactLenses,\n                        [name]: arr\n                    }\n                })\n            } else {\n                delete productObj.contactLenses[name]\n            }\n            if (Object.keys(productObj.contactLenses).length === 0) {\n                delete productObj[\"contactLenses\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            contactLenses: {\n                ...productObj.contactLenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleLensesParameterChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleSelectImage = (imgId) => {\n        setHasChanged(true)\n        setProductObj({\n            ...productObj,\n            image: imgId\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        let newProductObj = {\n            ...productObj\n        }\n\n        if (currentUser.admin < 2) {\n            if (newProductObj.available) {\n                newProductObj = {\n                    ...productObj,\n                    available: productObj.available[currentUser.premises]\n                }\n            }\n        } else {\n            if (newProductObj.available) {\n                newProductObj = {\n                    ...productObj,\n                    available: newProductObj.available ? newProductObj.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0]\n                }\n            }\n        }\n\n        if (isUpdating) {\n            if (newProductObj.type === 0) {\n                setHasChanged(false)\n                delete newProductObj['link']\n                delete newProductObj['type']\n                updateLenses(newProductObj)\n                return\n            } else if (newProductObj.type === 3) {\n                setHasChanged(false)\n                delete newProductObj['type']\n                updateProduct({ ...newProductObj, contactLenses: {} })\n                return\n            } else {\n                setHasChanged(false)\n                delete newProductObj['type']\n                updateProduct(newProductObj)\n                return\n            }\n        } else {\n            if (newProductObj.type === 0) {\n                if (!newProductObj.name || !newProductObj.brand || !newProductObj.description || !newProductObj.price || !newProductObj.image || !newProductObj.dioptersRange || !newProductObj.cylinderRange) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    delete newProductObj['type']\n                    createLenses(newProductObj)\n                }\n            }\n            if (newProductObj.type === 5 || newProductObj.type === 4 || newProductObj.type === 3 || newProductObj.type === 2 || newProductObj.type === 1) {\n                if (!newProductObj.name || !newProductObj.price || !newProductObj.image) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    createProduct(newProductObj)\n                }\n            }\n        }\n\n\n    }\n\n    useEffect(() => {\n        if (id === \"novy-produkt\") {\n            if (!eanCode) {\n                getEanCode()\n            } else {\n                if (productObj.type) {\n                    handleChange({\n                        target: {\n                            name: \"eanCode\",\n                            value: eanCode\n                        }\n                    })\n                }\n            }\n        }\n    }, [id, eanCode, productObj.type, productObj.eanCode, product.type])\n\n    useEffect(() => {\n        if (id !== 'novy-produkt') {\n            getSingleProduct(id)\n            setIsUpdating(true)\n            if (!productObj.type) {\n                handleChangeType({\n                    target: {\n                        name: \"type\",\n                        value: product.type\n                    }\n                })\n\n            }\n        }\n    }, [id, product.type])\n\n    useEffect(() => {\n        if (product.image) {\n            setSelectedImage(product.image)\n        }\n        if (lenses.image) {\n            setSelectedImage(lenses.image)\n        }\n    }, [product.image, lenses.image])\n\n    useEffect(() => {\n        return () => {\n            resetProduct()\n            resetLenses()\n            resetContactLenses()\n            resetGlassesParameters()\n            setProductObj({})\n            setSelectedImage(null)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <section>\n            <Prompt\n                when={hasChanged}\n                message=\"Chcete opustiť formulár?\"\n            />\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={handleSelectImage} />}\n            <Header>\n                <div>\n                    <h1>Nový Produkt</h1>\n                </div>\n                <div>\n                    <IsPublicCheckbox\n                        label=\"Verejné\"\n                        // value={product.ehop}\n                        name='eshop'\n                        isActive={product.eshop}\n                        handleClick={() => handleChange({\n                            target: {\n                                name: \"eshop\",\n                                value: !product.eshop\n                            }\n                        })}\n                    />\n                    <SubmitButton onClick={handleSubmit}>Vytvoriť</SubmitButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating && <CategoryContainer>\n                    <h3>Aký produkt chcete pridať?</h3>\n                    {productCategories.map((category, idx) => (\n                        <CategoryCheckbox\n                            key={idx}\n                            label={category.name}\n                            value={category.value}\n                            name='type'\n                            isActive={category.value === productObj.type}\n                            handleClick={() => handleChangeType({\n                                target: {\n                                    name: \"type\",\n                                    value: category.value\n                                }\n                            })}\n                        />\n                    ))}\n                </CategoryContainer>}\n\n                {productObj.type === 0 && (\n                    <ProductLensesForm\n                        lenses={lenses}\n                        selectedImage={selectedImage}\n                        setImageModal={setImageModal}\n                        handleChange={handleChange}\n                        handleParameterChange={handleParameterChange}\n                        checkParameter={checkParameter}\n                    />\n                )}\n\n                {productObj.type === 5 && (\n                    <ProductAccessoriesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        currentUser={currentUser}\n                        retailNames={retailNames}\n                        selectedImage={selectedImage}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAvailableChange={handleAvailableChange}\n                    />\n                )}\n\n                {productObj.type === 3 && (\n                    <ProductContactLensesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        contactLensesParameters={contactLensesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAddNewParameter={handleAddNewParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        handleContactLensesChange={handleContactLensesChange}\n                    />\n                )}\n\n                {(productObj.type === 1 || productObj.type === 2 || productObj.type === 4) && (\n                    <ProductGlassesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        glassesParameters={glassesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleSpecsChange={handleSpecsChange}\n                        handleAvailableChange={handleAvailableChange}\n                        handleGlassesSpecsSizeChange={handleGlassesSpecsSizeChange}\n                        handleGlassesParametersChange={handleGlassesParametersChange}\n                    />\n                )}\n\n            </ScrollContainer>\n\n        </section >\n    )\n}\n\nexport default ProductSection\n","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx",[],"/imooptik-frontend/src/sections/post/post.section.jsx",["707","708","709"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport CustomTextarea from '../../components/custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport { Quill } from 'react-quill'\n\nimport {\n    Header,\n    GridContainer,\n    PostImage,\n    DeleteButton,\n    AddButton,\n    Title,\n    ContentTextare,\n    Container,\n} from './post.styles'\n\nconst PostSection = () => {\n    const { id } = useParams()\n    const { push } = useHistory()\n    const {\n        createPost,\n        isLoading,\n        message,\n        showLoading,\n        setIsLoading,\n        getPost,\n        post,\n        handlePostUpdate,\n        resetBlog\n    } = useContext(BlogContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [content, setContent] = useState('')\n    const [image, setImage] = useState('')\n    const [draft, toggleDraft] = useState(false)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (image.length <= 0) return\n        if (content.length <= 0) return\n\n        if (id === 'novy-prispevok') {\n            createPost(image, title, description, draft, content)\n        } else {\n            handlePostUpdate(title, description, draft, content, image, id)\n        }\n\n        push('/dashboard/blog')\n\n    }\n\n    useEffect(() => {\n        setSelectedImage(null)\n\n        if (id !== 'novy-prispevok') {\n            getPost(id)\n            setIsUpdating(true)\n        }\n    }, [id])\n\n    useEffect(() => {\n        if (id !== 'novy-prispevok') {\n            console.log(post)\n            if (post) {\n                console.log(post)\n                setTitle(post.name)\n                setDescription(post.description)\n                setContent(post.html)\n                toggleDraft(post.draft)\n                if (post.image) {\n                    setImage(post.image._id)\n                    setSelectedImage(post.image)\n                }\n            }\n        }\n    }, [post])\n\n    useEffect(() => {\n        return () => {\n            resetBlog()\n            setTitle('')\n            setDescription('')\n            setContent('')\n            setImage('')\n            toggleDraft(false)\n            setImageModal(false)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {isLoading && <Popup loading={showLoading} title={message} close={() => setIsLoading(false)} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={setImage} />}\n\n            <Header>\n                <div>\n                    <h1>Post</h1>\n                </div>\n                <div>\n                    <CustomCheckbox\n                        label='Draft'\n                        isActive={draft}\n                        handleClick={() => toggleDraft(prevValue => !prevValue)}\n                    />\n                    <DeleteButton>Vymazať</DeleteButton>\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť príspevok\" : \"Pridať príspevok\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n\n                <GridContainer>\n                    <Container>\n                        <h2>Informácia</h2>\n                        <CustomInput\n                            label=\"Nadpis\"\n                            type='text'\n                            name='title'\n                            value={title}\n                            handleChange={(e) => setTitle(e.target.value)}\n                            required\n                        />\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={description}\n                            handleChange={(e) => setDescription(e.target.value)}\n                            required\n                        />\n                        <h2>Titulná fotka</h2>\n                        <PostImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </PostImage>\n                    </Container>\n                    <Container>\n                        <Title>Obsah</Title>\n                        <QuillToolbar />\n                        <ContentTextare\n                            value={content}\n                            onChange={setContent}\n                            modules={modules}\n                            formats={formats}\n                        />\n                    </Container>\n\n                </GridContainer>\n\n            </ScrollContainer>\n        </form>\n    )\n}\n\n\nconst CustomUndo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n        />\n    </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n        />\n    </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n    this.quill.history.undo();\n}\nfunction redoChange() {\n    this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n    \"arial\",\n    \"comic-sans\",\n    \"courier-new\",\n    \"georgia\",\n    \"helvetica\",\n    \"lucida\"\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nconst modules = {\n    toolbar: {\n        container: \"#toolbar\",\n        handlers: {\n            undo: undoChange,\n            redo: redoChange\n        }\n    },\n    history: {\n        delay: 500,\n        maxStack: 100,\n        userOnly: true\n    }\n};\n\n// Formats objects for setting up the Quill editor\nconst formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"align\",\n    \"strike\",\n    \"script\",\n    \"blockquote\",\n    \"background\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"color\",\n    \"code-block\"\n];\n\n// Quill Toolbar component\nconst QuillToolbar = () => (\n    <div id=\"toolbar\" className=\"toolbar\">\n        <span className=\"ql-formats\">\n            <select className=\"ql-size\" defaultValue=\"medium\">\n                <option value=\"extra-small\">Size 1</option>\n                <option value=\"small\">Size 2</option>\n                <option value=\"medium\">Size 3</option>\n                <option value=\"large\">Size 4</option>\n            </select>\n            <select className=\"ql-header\" defaultValue=\"3\">\n                <option value=\"1\">Heading</option>\n                <option value=\"2\">Subheading</option>\n                <option value=\"3\">Normal</option>\n            </select>\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n        </span>\n        <span className=\"ql-formats\">\n            <select className=\"ql-align\" />\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n                <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n                <CustomRedo />\n            </button>\n        </span>\n    </div>\n);\n\n\nexport default PostSection\n","/imooptik-frontend/src/sections/order/order.section.jsx",["710","711","712"],"/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx",["713","714","715"],"import React, { useState, useEffect, useContext } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    PostContainer,\n    PostImage,\n    PostContent,\n    Options,\n    UpdateButton,\n    DeleteButton\n} from './blog-posts.styles'\n\nconst BlogPosts = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { postsCount, handlePostDelete } = useContext(BlogContext)\n    const { push } = useHistory()\n\n    const [posts, setPosts] = useState([])\n\n    const [filterQuery, setFilterQuery] = useState({\n        limit: 10,\n        sortBy: {\n            date: -1\n        },\n        // query: \"\"\n    })\n    const [searchQuery, setSearchQuery] = useState('')\n\n\n\n    const [activeIndex, setActiveIndex] = useState(0)\n    const items = [\n        {\n            id: 0,\n            name: \"Zostupne\"\n        },\n        {\n            id: 1,\n            name: \"Vzostupne\"\n        },\n    ]\n\n    const blogsData = useFetchByQuery('api/blogs/filter', filterQuery)\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n                query: searchQuery\n            })\n            blogsData.refetch()\n        }\n    }\n\n    const handlePostDeleteClick = (postID) => {\n        handlePostDelete(postID)\n        blogsData.refetch()\n    }\n\n    useEffect(() => {\n        if (searchQuery === '') {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n            })\n            blogsData.refetch()\n        }\n    }, [searchQuery])\n\n    useEffect(() => {\n        if (activeIndex === 0) {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n                // query: \"\"\n            })\n            blogsData.refetch()\n        } else {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: 1\n                },\n                // query: \"\"\n            })\n            blogsData.refetch()\n        }\n    }, [activeIndex])\n\n    useEffect(() => {\n        if (!blogsData.isLoading) {\n            setPosts(blogsData.response?.blogs)\n        }\n    }, [blogsData.isLoading])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleSearch={handleSearch}\n                handleAddButton={() => push('blog/novy-prispevok')}\n                count={postsCount}\n                title=\"Blog\"\n            />\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                {posts && posts.length ? posts.map(post => (\n                    <PostContainer key={post._id}>\n                        <PostImage>\n                            {post.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${post.image.imagePath}`} alt={post.image.alt} />}\n                        </PostImage>\n                        <PostContent>\n                            <h2>{post.name}</h2>\n                            <p>{post.description}</p>\n                        </PostContent>\n                        <Options>\n                            <UpdateButton onClick={() => push(`blog/${post._id}`)}>Upraviť</UpdateButton>\n                            <DeleteButton onClick={() => handlePostDeleteClick(post._id)}>Vymazať</DeleteButton>\n                        </Options>\n                    </PostContainer>\n                )) : (\n                        <div>\n                            Žiadne príspevky\n                        </div>\n                    )}\n\n                <ListArrows\n                    listItems={posts}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BlogPosts\n","/imooptik-frontend/src/sections/calendar/calendar.section.jsx",["716"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BookingContext } from '../../context/booking/booking.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomRetailSelect from '../../components/custom-select/custom-select.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport { retailNames } from '../../utils/warehouse.utils'\nimport {\n    dayNames,\n    calendarTimes,\n    formatCalendarObj,\n    formatExceptDays,\n    formatExceptDaysToObj\n} from '../../utils/calendar.utils'\n\nimport {\n    Header,\n    CreateCalendarButton,\n    Container,\n    GridContainer,\n    ContainerRow,\n    TableHead,\n    TableCol,\n    TableRow,\n    AddDayButton,\n    DeleteCalendarButton\n} from './calendar.styles'\n\nconst CalendarSection = () => {\n    const {\n        closeModal,\n        getMessage,\n        setShowModal,\n        isLoading,\n        message,\n        showModal,\n    } = useContext(LoadingModalContext)\n    const { createCalendar, updateCalendar, deleteCalendar } = useContext(BookingContext)\n    const { calendarId } = useParams()\n    const { response, isLoading: isFetching } = useFetchById(\"api/booking/calendars\", calendarId, calendarId === 'novy-kalendar')\n    const [calendar, setCalendar] = useState({})\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleCalendarValueChange = (e) => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete calendar[name]\n            setCalendar({\n                ...calendar\n            })\n            return\n        }\n\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const handleCalendarTimeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = calendar[name] ? calendar[name] : ['X', 'X', 'X', 'X', 'X', 'X', 'X']\n        arr[idx] = value\n\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: arr\n        }))\n    }\n\n    const handleCalendarExceptDaysChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = calendar[name]\n        arr[idx] = value\n\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: arr\n        }))\n    }\n\n    const handleAddNewDay = () => {\n        setCalendar(prevValue => ({\n            ...prevValue,\n            exceptDays: prevValue.exceptDays ? [...prevValue.exceptDays, \"\"] : [\"\"]\n        }))\n    }\n\n    const handleSubmit = () => {\n        if (!calendar.name) {\n            getMessage(\"Meno Kalendára je povinné\")\n            setShowModal(true)\n            return\n        }\n        if (!calendar.premises) {\n            getMessage(\"Nie je zvolená prevádzka ku ktorej patrí kalendár\")\n            setShowModal(true)\n            return\n        }\n        if (!calendar.endTimes && !calendar.startTimes) {\n            getMessage(\"Nie sú vyplnené časy na prehliadky\")\n            setShowModal(true)\n            return\n        }\n        if (!calendar.interval) {\n            getMessage(\"Nie je zvolený interval\")\n            setShowModal(true)\n            return\n        }\n\n        if (isUpdating) {\n            const calendarToUpdate = formatCalendarObj(calendar)\n\n            console.log(\"CALENDAR BEFORE UPDATE\")\n            console.log(calendarToUpdate)\n\n\n            updateCalendar(calendarToUpdate, calendar._id)\n        } else {\n            let calendarToCreate = {}\n            if (calendar.exceptDays) {\n                calendarToCreate = {\n                    ...calendar,\n                    exceptDays: formatExceptDaysToObj(calendar.exceptDays)\n                }\n            } else {\n                calendarToCreate = { ...calendar }\n            }\n\n\n            console.log(\"CALENDAR BEFORE CREATE\")\n            console.log(calendarToCreate)\n            createCalendar(calendarToCreate)\n        }\n    }\n\n    useEffect(() => {\n        if (isFetching) return\n        if (response.calendar) {\n            setIsUpdating(true)\n            if (response.calendar.exceptDays) {\n                const exceptDaysArr = formatExceptDays(response.calendar.exceptDays)\n\n                setCalendar({\n                    ...response.calendar,\n                    exceptDays: exceptDaysArr\n                })\n\n            } else {\n                setCalendar(response.calendar)\n            }\n        }\n    }, [isFetching])\n\n    useEffect(() => {\n        return () => {\n            setIsUpdating(false)\n            setCalendar({})\n        }\n    }, [])\n\n    return (\n        <section>\n            {(showModal) && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <Header>\n                <div>\n                    {isUpdating ? (\n                        <h1>Kalendár: {calendar?.name}</h1>\n                    ) : (\n                            <h1>Nový kalendár</h1>\n                        )}\n                </div>\n                <div>\n                    {isUpdating && <DeleteCalendarButton onClick={() => deleteCalendar(calendar?._id)}>Vymazať</DeleteCalendarButton>}\n                    <CreateCalendarButton onClick={handleSubmit}>{isUpdating ? \"Upraviť\" : \"Vytvoriť\"}</CreateCalendarButton>\n                </div>\n            </Header>\n            <ScrollContainer>\n                <GridContainer>\n                    <div>\n                        <Container>\n                            <h3>Základné informácie</h3>\n                            <div>\n                                <h4>Kalendar je pre prevádzku</h4>\n                                <CustomRetailSelect\n                                    name='premises'\n                                    value={calendar?.premises || \"0\"}\n                                    listItems={retailNames}\n                                    defaultOption\n                                    defaultValue={0}\n                                    defaultLabel=\"Nezadané\"\n                                    handleChange={handleCalendarValueChange}\n                                />\n                            </div>\n                            <div>\n                                <h4>Meno kalendára</h4>\n                                <CustomInput\n                                    type=\"text\"\n                                    label='Meno*'\n                                    name=\"name\"\n                                    value={calendar?.name || \"\"}\n                                    handleChange={handleCalendarValueChange}\n                                />\n                            </div>\n                        </Container>\n                        <Container>\n                            <h3>Dni kedy sa nerobia prehliadky</h3>\n                            {calendar?.exceptDays && calendar?.exceptDays?.map((value, idx) => (\n                                <div key={idx}>\n                                    <CustomInput\n                                        type=\"date\"\n                                        // label='Dátum'\n                                        name=\"exceptDays\"\n                                        value={value || \"\"}\n                                        handleChange={(e) => handleCalendarExceptDaysChange(e, idx)}\n                                    />\n                                </div>\n                            ))}\n                            <AddDayButton onClick={handleAddNewDay}>Pridať</AddDayButton>\n                        </Container>\n                    </div>\n\n                    <Container>\n                        <h3>Nastavenie kalendára</h3>\n\n                        <div>\n                            <h4>Interval medzi prehliadkami</h4>\n                            <select\n                                name='interval'\n                                value={calendar?.interval || \"\"}\n                                onChange={handleCalendarValueChange}\n                            >\n                                <option value={\"\"}>Nezadané</option>\n                                <option value={30}>30min</option>\n                                <option value={60}>60min</option>\n                            </select>\n                        </div>\n                        <div>\n                            <h4>Čas pred objednaním</h4>\n                            <CustomInput\n                                type=\"text\"\n                                label='Počet minút'\n                                name=\"allowMinutesBefore\"\n                                value={calendar?.allowMinutesBefore?.toString() || \"\"}\n                                handleChange={handleCalendarValueChange}\n                            />\n                        </div>\n                        <div>\n                            <h4>Koľko dní dopredu sa dá objednať</h4>\n                            <CustomInput\n                                type=\"text\"\n                                label='Počet dní'\n                                name=\"daysIntoFuture\"\n                                value={calendar?.daysIntoFuture?.toString() || \"\"}\n                                handleChange={handleCalendarValueChange}\n                            />\n                        </div>\n                    </Container>\n\n                    <ContainerRow>\n                        <h3>Ordinačné hodiny</h3>\n                        <TableHead>\n                            <TableCol isFirst>\n                                Čas \\ Den\n                            </TableCol>\n                            {dayNames.map((name, idx) => (\n                                <TableCol key={idx}>\n                                    {name}\n                                </TableCol>\n                            ))}\n                        </TableHead>\n                        <TableRow>\n                            <TableCol isFirst>\n                                Začiatok\n                            </TableCol>\n                            {[...Array(7)].map((value, idx) => (\n                                <TableCol key={idx}>\n                                    <select name='startTimes' value={calendar?.startTimes ? calendar?.startTimes[idx] : \"x\"} onChange={(e) => handleCalendarTimeChange(e, idx)}>\n                                        <option value={\"X\"}>Žiadný</option>\n                                        {calendarTimes.map(({ name, value }, idx) => (\n                                            <option key={idx} value={value}>{name}</option>\n                                        ))}\n                                    </select>\n                                </TableCol>\n                            ))}\n                        </TableRow>\n                        <TableRow>\n                            <TableCol isFirst>\n                                Koniec\n                            </TableCol>\n                            {[...Array(7)].map((value, idx) => (\n                                <TableCol key={idx}>\n                                    <select name='endTimes' value={calendar?.endTimes ? calendar?.endTimes[idx] : \"x\"} onChange={(e) => handleCalendarTimeChange(e, idx)}>\n                                        <option value={\"X\"}>Žiadný</option>\n                                        {calendarTimes.map(({ name, value }, idx) => (\n                                            <option key={idx} value={value}>{name}</option>\n                                        ))}\n                                    </select>\n                                </TableCol>\n                            ))}\n                        </TableRow>\n                    </ContainerRow>\n                </GridContainer>\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CalendarSection\n","/imooptik-frontend/src/sections/coupons/coupons.section.jsx",["717","718","719","720"],"import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { CouponsContext } from '../../context/coupons/coupons.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport {\n    CouponOverviewContainer,\n    DeleteButton,\n    OpenButton,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TableCol\n} from './coupons.styles'\n\nconst CouponsSection = () => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        coupons,\n        getCoupons,\n        deleteCoupon\n    } = useContext(CouponsContext)\n\n    useEffect(() => {\n        if (!coupons) {\n            getCoupons()\n        }\n    }, [coupons])\n\n    console.log(coupons)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                title='Kupóny'\n                // searchQuery={searchQuery}\n                // handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('kupony/novy-kupon')}\n            />\n            <ScrollContainer>\n\n                <TableContainer>\n                    <TableHead>\n                        <TableCol>#</TableCol>\n                        <TableCol>Kód</TableCol>\n                        <TableCol>Typ</TableCol>\n                        <TableCol>Hodnota</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {coupons && coupons.map((coupon, idx) => (\n                        <TableRow key={idx}>\n                            <TableCol>{idx + 1}</TableCol>\n                            <TableCol>{coupon.code}</TableCol>\n                            <TableCol>{coupon.type === \"percentage\" ? \"Percentá\" : \"Fixná suma\"}</TableCol>\n                            <TableCol>{coupon.value}</TableCol>\n                            <TableCol>\n                                <OpenButton onClick={() => push(`kupony/${coupon._id}`)}>Zobraziť</OpenButton>\n                                <DeleteButton onClick={() => deleteCoupon(coupon._id)}>Ostrániť</DeleteButton>\n                            </TableCol>\n                        </TableRow>\n                    ))}\n                </TableContainer>\n                <ListArrows\n                    listItems={coupons}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CouponsSection\n","/imooptik-frontend/src/sections/coupon/coupon.section.jsx",["721","722"],"import React, { useContext, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { CouponsContext } from '../../context/coupons/coupons.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport InputRow from '../../components/product-input-row/product-input-row.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport Popup from \"../../components/popup/pop-up.component\"\n\nimport {\n    Header,\n    CustomSelect,\n    SubmitButton,\n    DeleteButton,\n    GridRow,\n    GridCol\n} from './coupon.styles'\n\nconst CouponSection = () => {\n    const { couponId } = useParams()\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const {\n        coupon,\n        getCoupon,\n        handleChange,\n        createCoupon,\n        isUpdating,\n        deleteCoupon,\n        resetCoupons\n    } = useContext(CouponsContext)\n\n    useEffect(() => {\n        if (couponId !== 'novy-kupon') {\n            getCoupon(couponId)\n        }\n    }, [couponId])\n\n    useEffect(() => {\n        return () => {\n            resetCoupons()\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <Header>\n                <div>\n                    <h1>Nový kupón</h1>\n                </div>\n\n                <div>\n                    {isUpdating && <DeleteButton onClick={() => deleteCoupon(couponId)}>Odstrániť</DeleteButton>}\n                    {!isUpdating && <SubmitButton onClick={() => createCoupon(coupon)}>Vytvoriť</SubmitButton>}\n                </div>\n            </Header>\n            <ScrollContainer>\n                <GridRow>\n                    <GridCol>\n                        <h3>Základné informácie</h3>\n                        <InputRow\n                            label=\"Kód kupónu\"\n                            example=\"napr: 50off\"\n                        >\n                            <CustomInput\n                                label=\"Kód\"\n                                type='text'\n                                name='code'\n                                value={coupon.code}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Typ kupónu\"\n                            example=\"\"\n                        >\n                            <CustomSelect name='type' value={coupon.type} onChange={(e) => handleChange(e)}>\n                                <option value={\"percentage\"}>Percentá</option>\n                                <option value={\"flat\"}>Fixná suma</option>\n                            </CustomSelect>\n                        </InputRow>\n                    </GridCol>\n                    <GridCol>\n                        <h3>Parametre</h3>\n\n                        <InputRow\n                            label=\"Hodnota\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='value'\n                                value={coupon.value.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Koľko maximálne krát môže tento kupón byt použitý jedným človek.\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='maxUses'\n                                value={coupon.maxUses.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Minimálna hodnota objednávky v centoch, aby bol tento kupón aplikovateľný.\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='minValue'\n                                value={coupon.minValue.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Koľko maximálne krát môže tento kupón byt použitý dohromady všetkými užívateľmi.\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='maxUsesTotal'\n                                value={coupon.maxUsesTotal.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                    </GridCol>\n                </GridRow>\n\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CouponSection\n","/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.styles.jsx",[],"/imooptik-frontend/src/context/blog/blog.queries.jsx",[],"/imooptik-frontend/src/context/user/user.queries.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx",[],"/imooptik-frontend/src/context/user/user.utils.jsx",[],"/imooptik-frontend/src/context/image/image.queries.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx",["723"],"export const initProductObj = {\n    name: \"\",\n    description: \"\",\n    price: 0,\n    type: 0,\n    brand: \"\",\n    soldAmount: 0,\n    available: [1001, 1001, 1001, 1001, 0],\n    eanCode: \"\",\n    image: \"\",\n    eshop: true,\n    link: '',\n    category: ''\n}\n\nexport const initGlassesObj = {\n    colorCode: \"\",\n    specs: {\n        frameColor: \"\",\n        frameMaterial: \"\",\n        frameStyle: \"\",\n        lensColor: \"\",\n        sex: \"M\",\n        size: [1001, 1001, 1001],\n    }\n}\n\nexport const initContactLensesObj = {\n    allowedCurves: [1001],\n    allowedDiameters: [1001],\n    dioptersRange: [1001, 1001]\n}\n\nexport const initLensesObj = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    dioptersRange: [1001, 1001],\n    cylinderRange: [1001, 1001],\n    price: 0,\n    brand: \"\",\n    image: ''\n}\n\nexport const retailNames = [\n    \"Obchodná 57, Bratislava\",\n    \"Miletičova 38, Bratislava\",\n    \"Vajnory, Bratislava\",\n    \"Senica, OC Branč\",\n    \"Trnava, City Aréna\"\n]\n\n// Category variables\nexport const productCategories = [\n    {\n        name: \"Dioptrické\",\n        value: 1\n    },\n    {\n        name: \"Slnečné\",\n        value: 2\n    },\n    {\n        name: \"Kontaktné Šošovky\",\n        value: 3\n    },\n    {\n        name: \"Športové\",\n        value: 4\n    },\n    {\n        name: \"Doplnky\",\n        value: 5\n    },\n    {\n        name: \"Šošovky\",\n        value: 0\n    },\n]\n\nexport const premisesTabs = [\n    {\n        id: 0,\n        name: \"Všetko\",\n        premises: 0,\n\n    },\n    {\n        id: 1,\n        name: \"Obchodná 57, Bratislava\",\n        premises: 1,\n    },\n    {\n        id: 2,\n        name: \"Miletičova 38, Bratislava\",\n        premises: 2,\n    },\n    {\n        id: 3,\n        name: \"Vajnory, Bratislava\",\n        premises: 3,\n    },\n    {\n        id: 4,\n        name: \"Senica, OC Branč\",\n        premises: 4,\n    },\n\n    // {\n    //     id: 5,\n    //     name: \"Trnava, City Aréna\",\n    //     permission: 5,\n    // },\n]\n\nexport const categoryTabs = [\n    {\n        id: 0,\n        name: \"Okuliare\",\n    },\n    {\n        id: 1,\n        name: \"Šosovky\",\n    },\n]\n\nexport const lensesBrands = [\n    \"Acuvue\",\n    \"Adore\",\n    \"Air Optix\",\n    \"Biofinity\",\n    \"Biomedics\",\n    \"Clariti\",\n    \"ColourVue\",\n    \"Comfilcon A\",\n    \"Dailies\",\n    \"Freshlook\",\n    \"Lenjoy\",\n    \"Proclear\",\n    \"Purevision\",\n    \"Soflens\",\n]\n\nexport const brands = [\n    \"Adidas\",\n    \"Armani Exchange\",\n    \"Arnette\",\n    \"Blackfin\",\n    \"Blumarine\",\n    \"Burberry\",\n    \"Bvlgari\",\n    \"Calvin Klein\",\n    \"Carolina Herrera\",\n    \"Carrera\",\n    \"David Beckham\",\n    \"Dior\",\n    \"Dolce & Gabbana\",\n    \"Elle\",\n    \"Emporio Armani\",\n    \"Esprit\",\n    \"Etnia Barcelona\",\n    \"Fendi\",\n    \"Fossil\",\n    \"Furla\",\n    \"Giorgio Armani\",\n    \"Givenchy\",\n    \"Gucci\",\n    \"Guess\",\n    \"H.I.S\",\n    \"Hawkers\",\n    \"Hugo Boss\",\n    \"Jaguar\",\n    \"Jimmy Choo\",\n    \"Lacoste\",\n    \"Liu Jo\",\n    \"Marc Jacobs\",\n    \"Max Mara\",\n    \"Max&Co\",\n    \"Meller\",\n    \"Mexx\",\n    \"Michael Kors\",\n    \"Moschino\",\n    \"Oakley\",\n    \"Persol\",\n    \"Polaroid\",\n    \"Police\",\n    \"Polo Ralph Lauren\",\n    \"Prada\",\n    \"Prada Linea Rossa\",\n    \"Ralph\",\n    \"Ralph Lauren\",\n    \"Ray-Ban\",\n    \"Salvatore Ferragamo\",\n    \"Smith\",\n    \"Strellson\",\n    \"Tiffany&Co.\",\n    \"Tom Ford\",\n    \"Tommy Hilfiger\",\n    \"Versace\",\n    \"Vogue\"\n]\n\nexport const formatPrice = price => {\n    let value = 0\n    if (price.includes(',')) {\n        if (price.split(',')[1].length === 1) {\n            value = price.split(',')[0] + price.split(',')[1] + \"0\"\n            return Number(value)\n        } else {\n            value = price.split(',')[0] + price.split(',')[1]\n            return Number(value)\n        }\n    } else {\n        return Number(price * 100)\n    }\n}\n\nexport const formatfloatNumber = number => {\n    let value = 0\n    if (number.includes(',')) {\n        value = number.split(',')[0] + '.' + number.split(',')[1]\n        return Number(value)\n    } else {\n        return Number(number)\n\n    }\n}\n\nexport const formatAvailable = (available, activePremisesTab) => {\n    if (available === undefined) return \"Šosovka\"\n    console.log(activePremisesTab)\n    console.log(available)\n    if (typeof available === \"number\") {\n        return `Na sklade ${available} kusov`\n    } else {\n        if (activePremisesTab === 0) {\n            return `Vo všetkých skladoch je ${available.reduce((acc, currValue) => acc + currValue)} kusov`\n        } else {\n            return `Na sklade ${available[activePremisesTab - 1]} kusov`\n        }\n    }\n}\n\nexport const checkParameter = (parameter, idx) => {\n    if (parameter.length === 0) {\n        return \"\"\n    }\n    if (parameter[idx] === 1001) {\n        return \"\"\n    }\n\n    return parameter[idx].toString()\n}\n\nconst dia = \"áäčďéíľĺňóôŕšťúýžÁČĎÉÍĽĹŇÓŠŤÚÝŽ\";\nconst nodia = \"aacdeillnoorstuyzACDEILLNOSTUYZ\";\n\nexport const diaConvert = (text) => {\n    let convertText = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (dia.indexOf(text.charAt(i)) != -1) {\n            convertText += nodia.charAt(dia.indexOf(text.charAt(i)));\n        }\n        else {\n            convertText += text.charAt(i);\n        }\n    }\n    return convertText;\n}\n\nexport const formatLink = (text) => {\n    return diaConvert(text).replaceAll(\" \", \"-\").toLowerCase().trim()\n}","/imooptik-frontend/src/sections/analytics/analytics.styles.jsx",[],"/imooptik-frontend/src/sections/e-shop/e-shop.styles.jsx",[],"/imooptik-frontend/src/sections/customers/customers.styles.jsx",[],"/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx",[],"/imooptik-frontend/src/context/orders/orders.utils.jsx",[],"/imooptik-frontend/src/sections/booking/booking.styles.jsx",[],"/imooptik-frontend/src/sections/orders/orders.styles.jsx",[],"/imooptik-frontend/src/sections/coupon/coupon.styles.jsx",[],"/imooptik-frontend/src/sections/coupons/coupons.styles.jsx",[],"/imooptik-frontend/src/sections/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx",[],"/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx",[],"/imooptik-frontend/src/sections/order/order.styles.jsx",[],"/imooptik-frontend/src/sections/post/post.styles.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.component.jsx",[],"/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.component.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.component.jsx",[],"/imooptik-frontend/src/components/list-arrows/list-arrows.component.jsx",["724","725"],"import React, { useState, useEffect } from 'react'\n\nimport {\n    AiFillLeftCircle,\n    AiFillRightCircle\n} from 'react-icons/ai'\n\nimport {\n    ArrowsContainer,\n    IconContainer\n} from './list-arrows.styles'\n\nconst ListArrows = ({\n    listItems = [],\n    handleClickPrev = () => { },\n    handleClickNext = () => { }\n}) => {\n    const [isDisablePrev, setIsDisablePrev] = useState(true)\n    const [isDisableNext, setIsDisableNext] = useState(true)\n    const [currentPage, setCurrentPage] = useState(0)\n\n    useEffect(() => {\n        if (currentPage === 0) {\n            setIsDisablePrev(true)\n        } else {\n            setIsDisablePrev(false)\n            setCurrentPage(0)\n        }\n    }, [listItems])\n\n    useEffect(() => {\n        if (listItems?.length < 10) {\n            setIsDisableNext(true)\n        } else {\n            setIsDisableNext(false)\n        }\n    }, [listItems])\n\n    useEffect(() => {\n        if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue--)\n    }, [handleClickPrev])\n    useEffect(() => {\n        // if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue++)\n    }, [handleClickNext])\n\n    const handlePrev = () => {\n        handleClickPrev()\n        if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue - 1)\n    }\n    const handleNext = () => {\n        handleClickNext()\n        setCurrentPage(prevValue => prevValue + 1)\n    }\n\n    return (\n        <ArrowsContainer>\n            <IconContainer disabled={isDisablePrev} onClick={handlePrev}>\n                <AiFillLeftCircle />\n            </IconContainer>\n            <IconContainer disabled={isDisableNext} onClick={handleNext}>\n                <AiFillRightCircle />\n            </IconContainer>\n        </ArrowsContainer>\n    )\n}\n\nexport default ListArrows\n","/imooptik-frontend/src/utils/user.utils.jsx",[],"/imooptik-frontend/src/utils/warehouse.utils.jsx",[],"/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx",["726"],"/imooptik-frontend/src/utils/analytics.utils.jsx",[],"/imooptik-frontend/src/utils/calendar.utils.jsx",["727","728"],"export const calendarTimes = [\n    {\n        name: '00:00',\n        value: '00/00'\n    },\n    {\n        name: '00:30',\n        value: '00/30'\n    },\n    {\n        name: '01:00',\n        value: '01/00'\n    },\n    {\n        name: '01:30',\n        value: '01/30'\n    },\n    {\n        name: '02:00',\n        value: '02/00'\n    },\n    {\n        name: '02:30',\n        value: '02/30'\n    },\n    {\n        name: '03:00',\n        value: '03/00'\n    },\n    {\n        name: '03:30',\n        value: '03/30'\n    },\n    {\n        name: '04:00',\n        value: '04/00'\n    },\n    {\n        name: '04:30',\n        value: '04/30'\n    },\n    {\n        name: '05:00',\n        value: '05/00'\n    },\n    {\n        name: '05:30',\n        value: '05/30'\n    },\n    {\n        name: '06:00',\n        value: '06/00'\n    },\n    {\n        name: '06:30',\n        value: '06/30'\n    },\n    {\n        name: '07:00',\n        value: '07/00'\n    },\n    {\n        name: '07:30',\n        value: '07/30'\n    },\n    {\n        name: '08:00',\n        value: '08/00'\n    },\n    {\n        name: '08:30',\n        value: '08/30'\n    },\n    {\n        name: '09:00',\n        value: '09/00'\n    },\n    {\n        name: '09:30',\n        value: '09/30'\n    },\n    {\n        name: '10:00',\n        value: '10/00'\n    },\n    {\n        name: '10:30',\n        value: '10/30'\n    },\n    {\n        name: '11:00',\n        value: '11/00'\n    },\n    {\n        name: '11:30',\n        value: '11/30'\n    },\n    {\n        name: '12:00',\n        value: '12/00'\n    },\n    {\n        name: '12:30',\n        value: '12/30'\n    },\n    {\n        name: '13:00',\n        value: '13/00'\n    },\n    {\n        name: '13:30',\n        value: '13/30'\n    },\n    {\n        name: '14:00',\n        value: '14/00'\n    },\n    {\n        name: '14:30',\n        value: '14/30'\n    },\n    {\n        name: '15:00',\n        value: '15/00'\n    },\n    {\n        name: '15:30',\n        value: '15/30'\n    },\n    {\n        name: '16:00',\n        value: '16/00'\n    },\n    {\n        name: '16:30',\n        value: '16/30'\n    },\n    {\n        name: '17:00',\n        value: '17/00'\n    },\n    {\n        name: '17:30',\n        value: '17/30'\n    },\n    {\n        name: '18:00',\n        value: '18/00'\n    },\n    {\n        name: '18:30',\n        value: '18/30'\n    },\n    {\n        name: '19:00',\n        value: '19/00'\n    },\n    {\n        name: '19:30',\n        value: '19/30'\n    },\n    {\n        name: '20:00',\n        value: '20/00'\n    },\n    {\n        name: '20:30',\n        value: '20/30'\n    },\n    {\n        name: '21:00',\n        value: '21/00'\n    },\n    {\n        name: '22:30',\n        value: '22/30'\n    },\n    {\n        name: '23:00',\n        value: '23/00'\n    },\n    {\n        name: '23:30',\n        value: '23/30'\n    },\n]\n\nexport const dayNames = [\n    'Pondelok',\n    'Utorok',\n    'Streda',\n    'Štvrtok',\n    'Piatok',\n    'Sobota',\n    'Nedeľa'\n]\n\nexport const months = [\n    'január',\n    'február',\n    'marec',\n    'apríl',\n    'máj',\n    'jún',\n    'júl',\n    'august',\n    'september',\n    'október',\n    'november',\n    'december',\n]\n\nexport const calendarFormat = [\n    'Mesiac',\n    'Týžden'\n]\n\nexport const getMonday = (d) => {\n    d = new Date(d);\n    var day = d.getDay(),\n        diff = d.getDate() - day + (day == 0 ? -6 : 1); // adjust when day is sunday\n    return new Date(d.setDate(diff));\n}\n\nexport const getPreviousMonthDays = (firstDayIndex) => {\n    let arr = [];\n    for (let x = firstDayIndex; x > 0; x--) {\n        arr.push({\n            dayNumber: x,\n            isDisable: true,\n            isPrevDay: true,\n        })\n    }\n    return arr\n}\n\nexport const getNextMonthDays = (nextDays) => {\n    let arr = [];\n    for (let x = 1; x <= nextDays; x++) {\n        arr.push({\n            dayNumber: x,\n            isDisable: true,\n            isNextDay: true\n        })\n    }\n    return arr\n}\n\nexport const getCurrentMonthDays = (lastDay) => {\n    let arr = [];\n    for (let x = 1; x <= lastDay; x++) {\n        arr.push({\n            dayNumber: x,\n        })\n    }\n    return arr\n}\n\nexport const getBooking = (days, calendar, month, year) => {\n    if (!calendar.booked) return days;\n    const bookingsArr = Object.keys(calendar?.booked)\n\n    const bookingDates = bookingsArr.filter((booking) => {\n        const spliteBookingString = booking.split('/')\n        let isBelongHere = false;\n\n        spliteBookingString.forEach(value => {\n            if (month === Number(spliteBookingString[1]) - 1 && year === Number(spliteBookingString[2])) {\n                return isBelongHere = true\n            }\n        })\n\n        if (isBelongHere) {\n            return booking\n        }\n    })\n\n    const daysWithBookingsArr = days.map(day => {\n        let dayObj = {}\n\n        bookingDates.forEach(date => {\n            const splitedDate = date.split('/')\n            if (Number(splitedDate[0]) === day.dayNumber) {\n                return dayObj = {\n                    dayNumber: day.dayNumber,\n                    bookings: calendar.booked[date],\n                    bookingDate: bookingDates.find(bookDate => bookDate === date)\n                }\n            } else {\n                if (dayObj.bookings) return\n                return dayObj = {\n                    dayNumber: day.dayNumber,\n                }\n            }\n        })\n\n        if (dayObj.bookings) return dayObj\n\n        return {\n            dayNumber: day.dayNumber,\n        }\n\n    });\n    return daysWithBookingsArr\n}\n\nexport const checkIfHasAppoinment = (hourIndex, bookingsArr) => {\n    let result = false;\n    if (bookingsArr) {\n        bookingsArr.forEach(booking => {\n            const formatBookingTime = booking.split('/')\n            if (Number(formatBookingTime[0]) === hourIndex) {\n                return result = true\n            }\n        })\n    }\n    return result\n}\n\nexport const formatCalendarObj = calendarObj => {\n    let obj = { ...calendarObj }\n    if (obj.bookings) delete obj[\"bookings\"]\n    if (obj.booked !== undefined) delete obj[\"booked\"]\n    if (obj.__v !== undefined) delete obj[\"__v\"]\n    if (obj._id) delete obj[\"_id\"]\n    if (obj.dateCreated) delete obj[\"dateCreated\"]\n    if (obj.exceptDays) {\n        obj = {\n            ...obj,\n            exceptDays: formatExceptDaysToObj(obj.exceptDays)\n        }\n    }\n\n    return obj\n}\n\nexport const formatExceptDays = exceptDaysObj => {\n    const arr = Object.keys(exceptDaysObj)\n    const formatedArr = arr.map(value => value.split('/').reverse().join('-'))\n    return formatedArr\n}\n\nexport const formatExceptDaysToObj = exceptDaysArr => {\n    let obj = {}\n    const formatedArr = exceptDaysArr.map(value => value.split('-').reverse().join('/'))\n\n    formatedArr.forEach(day => {\n        obj = {\n            ...obj,\n            [day]: \"00/00-23/59\"\n        }\n    })\n    return obj\n}\n\nexport const formatBookingObj = bookingObj => {\n    let obj = { ...bookingObj }\n    if (obj.rows) delete obj[\"rows\"]\n    if (obj.__v !== undefined) delete obj[\"__v\"]\n    if (obj._id) delete obj[\"_id\"]\n    if (obj.dateCreated) delete obj[\"dateCreated\"]\n    if (obj.timesBooked !== undefined) delete obj[\"timesBooked\"]\n    if (obj.premises) delete obj[\"premises\"]\n    if (obj.calendar) delete obj[\"calendar\"]\n\n    return obj\n}\n\nexport const formatDate = (bookingDate) => {\n    const splitedDate = bookingDate?.date.split('-')\n    const formatedDate = `${splitedDate[2]}/${splitedDate[1]}/${splitedDate[0]}`\n    const formatedHour = `${bookingDate?.hour < 10 ? `0${bookingDate?.hour}` : bookingDate?.hour}/${bookingDate?.min === 0 ? `0${bookingDate?.min}` : bookingDate?.min}`\n\n    return `${formatedHour}:${formatedDate}`\n}\n\nexport const formatCalendarStartTime = (calendar, day) => {\n    let dayIndex = new Date(day.year, day.month, day.dayNumber).getDay()\n    if (dayIndex === 0) dayIndex = 7\n    if (calendar.startTimes[dayIndex - 1] === \"X\") return\n    return calendar.startTimes[dayIndex - 1].replace(\"/\", \":\")\n}\nexport const formatCalendarEndTime = (calendar, day) => {\n    let dayIndex = new Date(day.year, day.month, day.dayNumber).getDay()\n    if (dayIndex === 0) dayIndex = 7\n    if (calendar.endTimes[dayIndex - 1] === \"X\") return\n    return calendar.endTimes[dayIndex - 1].replace(\"/\", \":\")\n}","/imooptik-frontend/src/hooks/useFetch.jsx",["729","730","731"],"import { useEffect, useState } from 'react'\n\nexport const useFetch = (path, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [message, setMessage] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`)\n                const data = await res.json()\n\n                setMessage(data.message)\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n                setMessage(\"Niečo sa pokazilo\")\n            }\n        }\n        fetchData()\n    }, [refetchIndex])\n\n    return { response, isLoading, error, message, refetch }\n}\n\nexport const useFetchByQuery = (path, queryObj, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify(queryObj)\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path])\n\n    return { response, isLoading, error, refetch }\n}\n\nexport const useFetchById = (path, id, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}/${id}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path, id])\n\n    return { response, isLoading, error, refetch }\n}\n","/imooptik-frontend/src/components/order-overview/order-overview.component.jsx",[],"/imooptik-frontend/src/components/user-form/user-form.component.jsx",["732","733"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ProfileOrderOverview from '../profile-order-overview/profile-order-overview.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\nimport ExaminationsOverview from '../examinations-overview/examinations-overview.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Profile,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    Title,\n    Container,\n    OrderHeader,\n    OrderButton,\n    CustomSelect,\n    AdminPanelContainer\n} from './user.form-styles'\n\nconst UserForm = ({\n    isAdmin,\n    isUpdating,\n    user,\n    handleChange,\n    handleParameterChange,\n    handleCompanyChange,\n    isOptometrist\n}) => {\n    const { push } = useHistory()\n\n    const handleAddOrderButtonClick = e => {\n        e.preventDefault()\n        push(`/dashboard/objednavky/${user._id}`)\n    }\n\n    console.log(user)\n\n\n    return (\n        <GridContainer>\n            <Profile>\n                {isAdmin && <AdminPanelContainer>\n                    <h2>Admin panel</h2>\n                    <InputRow\n                        label=\"Predajňa na ktorej uživatel pracuje\"\n                        example=''\n                    >\n                        <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Nezadané</option>\n                            {\n                                retailNames.map((name, idx) => {\n                                    if (idx === 4) return\n                                    return (\n                                        <option key={idx} value={idx + 1}>{name}</option>\n                                    )\n                                })\n                            }\n                        </CustomSelect>\n                    </InputRow>\n                    <InputRow\n                        label=\"Výška administrativných práv\"\n                        example=\"\"\n                    >\n                        <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Zákaznik</option>\n                            <option value={1}>Predavač</option>\n                            <option value={2}>Vedúci</option>\n                        </CustomSelect>\n                    </InputRow>\n\n                    <Container>\n                        <CustomCheckbox\n                            label='Optometrista'\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"optometrist\",\n                                    value: !user.optometrist\n                                }\n                            })}\n                            isActive={user.optometrist}\n                        />\n                    </Container>\n                </AdminPanelContainer>}\n                <div>\n                    <h2>Informácie</h2>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                // label=\"Priezvisko*\"\n                                type='date'\n                                name='birthDate'\n                                value={user.birthDate}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </div>\n\n                <Container>\n                    <h2>Kontaktné údaje</h2>\n                    <Row>\n                        <div>\n                            <CustomInput\n                                label=\"E-mail*\"\n                                type='email'\n                                name='email'\n                                value={user.email ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Telefónne číslo\"\n                                type='text'\n                                name='phone'\n                                value={user.phone ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <h2>Fakturačné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.address ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.psc ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.city ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.country ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n                <Container>\n                    <h2>Firemné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"IČO\"\n                                type='text'\n                                name='ico'\n                                value={user.company.ico ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"DIČ\"\n                                type='text'\n                                name='dic'\n                                value={user.company.dic ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.company.address ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.company.psc ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.company.city ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.company.country ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n\n                <Container>\n                    <h2>Parametre</h2>\n\n                    <ParametersTable\n                        parameters={user.lenses}\n                        handleChange={handleParameterChange}\n                    />\n                </Container>\n\n\n            </Profile>\n\n            {isUpdating && <div>\n                <OrderHeader>\n                    <Title>\n                        Objednávky\n                    </Title>\n                    <OrderButton onClick={e => handleAddOrderButtonClick(e)}>Pridať objednávku</OrderButton>\n                </OrderHeader>\n                <div>\n                    {user.orders.length > 0 ? user.orders.map((order, idx) => (\n                        <ProfileOrderOverview\n                            key={idx}\n                            id={order}\n                            handleUpdateClick={() => push(`/dashboard/objednavky/${user._id}/${order}`)}\n                        />\n                    )).reverse().slice(0, 5) : (\n                            <p>Žiadné objednávky</p>\n                        )}\n                </div>\n                {isOptometrist && <ExaminationsOverview />}\n            </div>}\n        </GridContainer>\n    )\n}\n\nexport default UserForm\n","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx",[],"/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.component.jsx",["734","735","736","737"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useFetchById } from '../../hooks/useFetch'\nimport { BookingContext } from '../../context/booking/booking.context'\n\nimport UserBookingModal from '../modal-user-bookings/modal-user-booking.component'\n\nimport {\n    dayNames,\n    getPreviousMonthDays,\n    getNextMonthDays,\n    getCurrentMonthDays,\n    getBooking,\n    checkIfHasAppoinment\n} from '../../utils/calendar.utils'\n\nimport {\n    Container,\n    HeaderBlock,\n    HourBlock,\n    AppointmentContainer,\n    HourGrid,\n    TableHead,\n    HourBlockContainer,\n    EmptyContainer\n} from './calendar-weekdays.styles'\n\nconst WeekDays = ({\n    calendar,\n    year,\n    month,\n    weekIndex,\n    handleCalendarBlockClick\n}) => {\n    const { createUserBooking } = useContext(BookingContext)\n    const { response, isLoading, refetch } = useFetchById('api/booking/calendars', calendar, !calendar)\n    const lastDay = new Date(year, month + 1, 0).getDate()\n    const firstDayIndex = new Date(year, month, 0).getDay();\n    const lastDayIndex = new Date(year, month + 1, 0).getDay()\n    const prevLastDay = new Date(year, month, 0).getDate()\n\n    const nextDays = 7 - lastDayIndex\n\n    const [calendarDays, setCalendarDays] = useState([])\n    const [selectedDay, setSelectedDay] = useState(null)\n    const [showUserBooking, setShowUserBooking] = useState(false)\n\n    const handleOpenUserBookingModal = (dayData) => {\n        setSelectedDay({\n            ...dayData,\n            year,\n            month,\n        })\n        setShowUserBooking(true)\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n\n        if (response.calendar) {\n            const prevMonthDays = getPreviousMonthDays(firstDayIndex)\n            const monthDays = getCurrentMonthDays(lastDay)\n            const nextMonthDays = getNextMonthDays(nextDays)\n            const monthDaysWithBookings = getBooking(monthDays, response.calendar, month, year)\n\n            setCalendarDays([\n                ...prevMonthDays,\n                ...monthDaysWithBookings,\n                ...nextMonthDays\n            ])\n        }\n    }, [isLoading])\n\n    return (\n        <div>\n            {showUserBooking && <UserBookingModal createUserBooking={createUserBooking} refetchCalendar={refetch} calendar={response?.calendar} day={selectedDay} close={() => setShowUserBooking(false)} />}\n            <Container>\n                <TableHead>\n                    {calendarDays.slice(weekIndex * 7, (weekIndex * 7) + 7).map(({ dayNumber, isDisable, isPrevDay, isNextDay }, idx) => (\n                        <HeaderBlock isDisabled={isDisable} key={idx}>\n                            {isPrevDay ? (\n                                <React.Fragment>\n                                    <p>{dayNames[new Date(year, month - 1, prevLastDay - (dayNumber)).getDay()]}</p>\n                                    <p>{prevLastDay - (dayNumber - 1)}</p>\n                                </React.Fragment>\n                            ) : isNextDay ? (\n                                <React.Fragment>\n                                    <p>{dayNames[new Date(year, month + 1, dayNumber - 1).getDay()]}</p>\n                                    <p>{dayNumber} </p>\n                                </React.Fragment>\n                            ) : (\n                                        <React.Fragment>\n                                            <p>{dayNames[new Date(year, month, dayNumber - 1).getDay()]}</p>\n                                            <p>{dayNumber} </p>\n                                        </React.Fragment>\n                                    )}\n                        </HeaderBlock>\n                    ))}\n                </TableHead>\n\n                <HourGrid>\n                    {calendarDays.slice(weekIndex * 7, (weekIndex * 7) + 7).map((dayData, idx) => {\n\n                        return <HourBlock key={idx}>\n                            {[...Array(24)].map((value, index) => {\n                                if (Number(response?.calendar?.startTimes[idx].split('/')[0]) > index) return\n                                if (Number(response?.calendar?.endTimes[idx].split('/')[0]) < index) return\n                                if (response?.calendar?.endTimes[idx] === \"X\") return\n                                return (\n                                    <HourBlockContainer key={index}>\n                                        {dayData.bookings && checkIfHasAppoinment(index, dayData?.bookings) ? (\n                                            <React.Fragment>\n                                                {dayData?.bookings.find(booking => Number(booking?.split('/')[1]) === 0 && Number(booking?.split('/')[0]) === index) && <AppointmentContainer onClick={() => console.log(\"Click\")}>\n                                                    <p>{dayData?.bookings.find(booking => Number(booking?.split('/')[1]) === 0 && Number(booking?.split('/')[0]) === index)?.replace(\"/\", \":\")}</p>\n                                                </AppointmentContainer>}\n                                                {dayData?.bookings.find(booking => Number(booking?.split('/')[1]) === 30 && Number(booking?.split('/')[0]) === index) && <AppointmentContainer onClick={() => console.log(\"Click\")}>\n                                                    <p>{dayData?.bookings.find(booking => Number(booking?.split('/')[1]) === 30 && Number(booking?.split('/')[0]) === index)?.replace(\"/\", \":\")}</p>\n                                                </AppointmentContainer>}\n                                                <EmptyContainer onClick={() => handleOpenUserBookingModal({ ...dayData, time: `${index}:00` })} />\n                                            </React.Fragment>\n                                        ) : (\n                                                <EmptyContainer onClick={() => handleOpenUserBookingModal({ ...dayData, time: `${index}:00` })} />\n                                            )}\n                                        <span>{index}:00</span>\n\n                                    </HourBlockContainer>\n                                )\n                            })}\n                        </HourBlock>\n\n                    })}\n                </HourGrid>\n            </Container>\n        </div>\n    )\n}\n\nexport default WeekDays","/imooptik-frontend/src/components/calendar/calendar.component.jsx",["738","739","740"],"import React, { useState, useEffect } from 'react'\n\nimport {\n    dayNames,\n    getPreviousMonthDays,\n    getNextMonthDays,\n    getCurrentMonthDays,\n    getBooking\n} from '../../utils/calendar.utils'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport {\n    Container,\n    HeaderBlock,\n    Dayblock,\n\n} from './calendar.styles'\n\nconst Calendar = ({\n    calendar,\n    month,\n    year,\n    handleCalendarBlockClick\n}) => {\n    const date = new Date()\n\n    date.setDate(1)\n    const lastDay = new Date(year, month + 1, 0).getDate()\n    const prevLastDay = new Date(year, month, 0).getDate()\n\n    const firstDayIndex = new Date(year, month, 0).getDay();\n    const lastDayIndex = new Date(year, month + 1, 0).getDay()\n\n    const nextDays = 7 - lastDayIndex\n\n    const { response, isLoading, refetch } = useFetchById('api/booking/calendars', calendar, !calendar)\n    const [prevDays, setPrevDays] = useState([])\n    const [currentMonthDays, setCurrentMonthDays] = useState([])\n    const [nextMonthDays, setMonthNextDays] = useState([])\n\n    useEffect(() => {\n        refetch()\n    }, [month])\n\n    useEffect(() => {\n        if (calendar) {\n            refetch()\n        }\n    }, [calendar])\n\n    useEffect(() => {\n        if (!isLoading) {\n            if (response?.calendar) {\n                const prevDaysArr = getPreviousMonthDays(firstDayIndex)\n                const arr = getCurrentMonthDays(lastDay)\n                const nextDaysArr = getNextMonthDays(nextDays)\n                const checkedArr = getBooking(arr, response.calendar, month, year)\n\n                setPrevDays(prevDaysArr)\n                setCurrentMonthDays(checkedArr)\n                setMonthNextDays(nextDaysArr)\n            }\n        }\n    }, [isLoading])\n\n    return (\n        <Container>\n\n            {dayNames.map((name, idx) => (\n                <HeaderBlock key={idx}>\n                    {name}\n                </HeaderBlock>\n            ))}\n\n            {prevDays.map((value, idx) => (\n                <Dayblock faded={true} key={idx}>\n                    <p>\n                    </p>\n                    <p>\n                        {prevLastDay - idx}\n                    </p>\n                </Dayblock>\n            ))}\n\n            {currentMonthDays.map((data, idx) => {\n                const { dayNumber, bookings } = data\n                return (\n                    <Dayblock key={idx} onClick={() => handleCalendarBlockClick(data)}>\n                        <p>\n                            {bookings && <span>\n                                {bookings.length}\n                            </span>}\n                        </p>\n                        <p>\n                            {dayNumber}\n                        </p>\n                    </Dayblock>\n                )\n            })}\n            {nextMonthDays.map((value, idx) => (\n                <Dayblock faded={true} key={idx}>\n                    <p>\n                    </p>\n                    <p>\n                        {idx + 1}\n                    </p>\n                </Dayblock>\n            ))}\n        </Container>\n    )\n}\n\nexport default Calendar\n","/imooptik-frontend/src/components/booking-appoinments/booking-appoinment.component.jsx",["741"],"import React, { useEffect } from 'react'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\nimport Spinner from '../spinner/spinner.component'\nimport BookingAppoinment from '../booking-appoinment/booking-appoinment.component'\n\nimport {\n    TableHead,\n    TableRow,\n    TableCol\n} from './booking-appoinment.styles'\n\nconst BookingAppoinments = ({ day }) => {\n    console.log(day)\n\n    const { response, isLoading, refetch } = useFetchByQuery('api/admin/booking/userBookings/filter', {\n        filters: {\n            dueDate: day.bookingDate\n        }\n    })\n\n    useEffect(() => {\n        refetch()\n    }, [day])\n\n    if (isLoading) return <Spinner />\n\n    return (\n        <div>\n            <TableHead>\n                <TableCol>#</TableCol>\n                <TableCol>Vyšetrenie</TableCol>\n                <TableCol>Meno</TableCol>\n                <TableCol>Dátum</TableCol>\n                <TableCol>Poznámka</TableCol>\n                <TableCol>Možnosti</TableCol>\n            </TableHead>\n\n            {response?.userBookings?.map(({ booking, name, dueDate, note }, idx) => (\n                <TableRow key={idx}>\n                    <TableCol>{idx + 1}</TableCol>\n                    <TableCol><BookingAppoinment bookingId={booking} /></TableCol>\n                    <TableCol>{name}</TableCol>\n                    <TableCol>{dueDate}</TableCol>\n                    <TableCol>{note}</TableCol>\n                    <TableCol>Možnosti</TableCol>\n                </TableRow>\n            ))}\n        </div>\n    )\n}\n\nexport default BookingAppoinments\n","/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.component.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx",[],"/imooptik-frontend/src/components/custom-select/custom-select.component.jsx",["742"],"import React from 'react'\n\nimport { CustomSelectContainer } from './custom-select.styles'\n\nconst CustomRetailSelect = ({ name, value, handleChange, listItems, defaultOption = false, defaultValue, defaultLabel }) => {\n    return (\n        <CustomSelectContainer name={name} value={value} onChange={(e) => handleChange(e)}>\n            {defaultOption && <option value={defaultValue}>{defaultLabel}</option>}\n            {listItems.map((name, idx) => {\n                if (idx === 4) return\n                return (\n                    <option key={idx} value={idx + 1}>{name}</option>\n                )\n            })}\n        </CustomSelectContainer>\n    )\n}\n\nexport default CustomRetailSelect\n","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.component.jsx",["743","744"],"import React, { useEffect, useContext, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\n// import { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\n// import CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    // const {\n    //     getMessage,\n    //     setIsLoading,\n    //     setShowModal,\n    //     closeModal\n    // } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    // const getCropData = async (e) => {\n    //     e.preventDefault()\n    //     setShowModal(true)\n    //     setIsLoading(true)\n\n    //     try {\n    //         // if (typeof cropper !== 'undefined') {\n    //         toDataUrl(imgUrl, async (imgData) => {\n    //             const data = await handleImage(imgData, imageName, imageAlt)\n\n    //             if (data.image) {\n    //                 setImage(data.image._id)\n    //                 setSelectedImage(data.image)\n    //                 getImages()\n    //                 close()\n    //             }\n    //         })\n\n    //         // }\n    //         setShowModal(false)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    //     closeModal()\n    // };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Vybrať obrázok</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n","/imooptik-frontend/src/sections/order/steps/4-summary/summary.component.jsx",["745"],"/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.component.jsx",["746","747"],"/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.component.jsx",["748"],"/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.component.jsx",["749","750"],"import React, { useState, useEffect, useContext } from 'react'\nimport { UserContext } from '../../../../context/user/user.context'\n\nimport CustomInput from '../../../../components/custom-input/custom-input.component'\n\nimport {\n    SearchContainer,\n    TableContainer,\n    UserTableHead,\n    UserTableRow,\n    TableCol,\n    SearchButton\n} from './select-user.styles'\n\nconst SelectUserComponent = ({ next, addToOrder }) => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const [userItems, setUserItems] = useState([])\n\n    const {\n        users,\n        getFilteredUsers,\n        getUserByQuery\n    } = useContext(UserContext)\n\n    const handleClick = (user) => {\n        addToOrder({\n            name: \"user\",\n            value: user\n        })\n        next()\n    }\n\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== '') {\n            if (e.key === 'Enter') {\n                getUserByQuery({\n                    query: searchQuery\n                })\n            }\n        }\n    }\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        getUserByQuery({\n            query: searchQuery\n        })\n    }\n\n    useEffect(() => {\n        if (!users) {\n            getFilteredUsers({\n                limit: 5\n            })\n        }\n        if (users) {\n            setUserItems(users)\n        }\n    }, [users])\n\n    useEffect(() => {\n        if (users) {\n            if (searchQuery === '') {\n                getFilteredUsers({\n                    limit: 5\n                })\n                setUserItems(users)\n            }\n        }\n    }, [searchQuery])\n\n    useEffect(() => {\n        return () => {\n            setSearchQuery('')\n            setUserItems([])\n        }\n    }, [])\n\n    return (\n        <div>\n            <SearchContainer>\n                <h3>Vyhľadať zákaznika</h3>\n                <div>\n                    <CustomInput\n                        label={\"Meno, priezvisko, email alebo tel. číslo\"}\n                        value={searchQuery}\n                        onChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n            </SearchContainer>\n\n            <TableContainer>\n                <UserTableHead>\n                    <TableCol>Meno a priezvisko</TableCol>\n                    <TableCol>Email</TableCol>\n                    <TableCol>Možnosti</TableCol>\n                </UserTableHead>\n                {userItems.map((user, idx) => (\n                    <UserTableRow key={idx} onClick={() => handleClick(user)}>\n                        <TableCol>{user.name}</TableCol>\n                        <TableCol>{user.email}</TableCol>\n                        <TableCol>{user.phone}</TableCol>\n                    </UserTableRow>\n                ))}\n            </TableContainer>\n\n        </div>\n    )\n}\n\nexport default SelectUserComponent\n","/imooptik-frontend/src/sections/product/product.styles.jsx",[],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx",[],"/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.component.jsx",["751"],"import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    AccessoriesFormContainer,\n    AccessoriesContainer,\n    StockContainer,\n    ImageContainer,\n    ProductImage,\n} from './product-accessories-form.styles'\n\nconst ProductAccessoriesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    setImageModal,\n    handleAvailableChange,\n    checkParameter,\n    retailNames,\n    currentUser,\n    isUpdating\n}) => {\n    return (\n        <AccessoriesFormContainer>\n            <AccessoriesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </AccessoriesContainer>\n            {currentUser.admin >= 2 ? (\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    {product.available.map((value, idx) => {\n                        if (idx === 4) return\n                        return (\n                            <CustomInput\n                                key={idx}\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, idx)}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        )\n                    })}\n                </StockContainer>\n            ) : (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        <CustomInput\n                            label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[currentUser.premises]}\n                            type='number'\n                            name={\"available\"}\n                            value={checkParameter(product.available, currentUser.premises)}\n                            handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                        />\n                    </StockContainer>\n                )}\n        </AccessoriesFormContainer>\n    )\n}\n\nexport default ProductAccessoriesForm\n","/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.component.jsx",["752"],"import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport { lensesBrands } from '../../utils/warehouse.utils'\n\nimport {\n    ContactLensesContainer,\n    ContactLensesFormContainer,\n    StockContainer,\n    ContactLensesParametersContainer,\n    IncreaseButton,\n    ImageContainer,\n    ProductImage,\n} from './product-contact-lenses-form.styles'\n\nconst ProductContactLensesForm = ({\n    product,\n    handleChange,\n    setImageModal,\n    selectedImage,\n    checkParameter,\n    handleContactLensesChange,\n    handleAddNewParameter,\n    contactLensesParameters,\n    retailNames,\n    currentUser,\n    handleAvailableChange,\n    isUpdating\n}) => {\n    return (\n        <ContactLensesFormContainer>\n            <ContactLensesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"brands\"\n                />\n                <datalist id=\"brands\">\n                    {lensesBrands.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist>\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </ContactLensesContainer>\n            <div>\n                <ContactLensesParametersContainer>\n                    <h3>Parametre</h3>\n                    <div>\n                        <h4>Zakrivenie</h4>\n                        {contactLensesParameters.allowedCurves.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedCurves\"}\n                                    value={checkParameter(contactLensesParameters.allowedCurves, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedCurves'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n                    <div>\n                        <h4>Priemery</h4>\n                        {contactLensesParameters.allowedDiameters.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedDiameters\"}\n                                    value={checkParameter(contactLensesParameters.allowedDiameters, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedDiameters'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n\n                    <div>\n                        <h4>Dioptrie</h4>\n                        {contactLensesParameters.dioptersRange.map((value, idx) => {\n                            const inputLabel = idx === 0 ? \"minimum\" : \"maximum\"\n\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={inputLabel}\n                                    type='text'\n                                    name={\"dioptersRange\"}\n                                    value={checkParameter(contactLensesParameters.dioptersRange, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </div>\n                </ContactLensesParametersContainer>\n\n                {currentUser.admin >= 2 ? (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        {product.available.map((value, idx) => {\n                            if (idx === 4) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </StockContainer>\n                ) : (\n                        <StockContainer>\n                            <h3>Skladové zásoby</h3>\n                            <CustomInput\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[currentUser.premises]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, currentUser.premises)}\n                                handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                            />\n                        </StockContainer>\n                    )}\n            </div>\n        </ContactLensesFormContainer>\n    )\n}\n\nexport default ProductContactLensesForm\n","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx",["753"],"import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport { brands } from '../../utils/warehouse.utils'\n\nimport {\n    ImageContainer,\n    ProductImage,\n    GlassesContainerForm,\n    GlassesContainer,\n    GlassesParameterContainer,\n    StockContainer,\n    CustomSelect\n} from './product-glasses-form.styles.jsx'\n\nconst ProductGlassesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    retailNames,\n    currentUser,\n    checkParameter,\n    handleAvailableChange,\n    handleGlassesParametersChange,\n    handleGlassesSpecsSizeChange,\n    handleSpecsChange,\n    glassesParameters,\n    setImageModal,\n    isUpdating,\n}) => {\n\n    return (\n        <GlassesContainerForm>\n            <GlassesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    list=\"brands\"\n                />\n                <datalist id=\"brands\">\n                    {brands.map((brand, idx) => (\n                        <option key={idx} value={brand} />\n                    ))}\n                </datalist>\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </GlassesContainer>\n            <div>\n                <GlassesParameterContainer>\n                    <h3>Parametre</h3>\n                    <CustomInput\n                        label=\"Farebný kód\"\n                        type='text'\n                        name='colorCode'\n                        value={glassesParameters.colorCode ?? \"\"}\n                        handleChange={(e) => handleGlassesParametersChange(e)}\n                    />\n                    <div>\n                        <CustomInput\n                            label=\"Farba rámu\"\n                            type='text'\n                            name='frameColor'\n                            value={glassesParameters.specs.frameColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Materiál rámu\"\n                            type='text'\n                            name='frameMaterial'\n                            value={glassesParameters.specs.frameMaterial ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Tvar rámu\"\n                            type='text'\n                            name='frameStyle'\n                            value={glassesParameters.specs.frameStyle ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Farba šošovky\"\n                            type='text'\n                            name='lensColor'\n                            value={glassesParameters.specs.lensColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomSelect\n                            label=\"Pohlavie\"\n                            type='text'\n                            name='sex'\n                            value={glassesParameters.specs.sex ?? \"\"}\n                            onChange={(e) => handleSpecsChange(e)}\n                        >\n                            <option value='M'>Pánske</option>\n                            <option value='W'>Dámske</option>\n                            <option value='D'>Detské</option>\n                            <option value='U'>Nezáleží</option>\n                        </CustomSelect>\n                    </div>\n                    <div>\n                        <h4>Velkosť</h4>\n                        {glassesParameters.specs.size.map((value, idx) => (\n                            <CustomInput\n                                key={idx}\n                                label={idx === 0 ? \"Veľkosť očnice\" : idx === 1 ? \"Veľkosť mostika\" : \"Veľkosť stranice\"}\n                                type='text'\n                                name='size'\n                                value={checkParameter(glassesParameters.specs.size, idx)}\n                                handleChange={(e) => handleGlassesSpecsSizeChange(e, idx)}\n                            />\n                        ))}\n                    </div>\n                </GlassesParameterContainer>\n                {currentUser.admin >= 2 ? (\n                    <StockContainer>\n                        <h3>Skladové zásoby</h3>\n                        {product.available.map((value, idx) => {\n                            if (idx === 4) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </StockContainer>\n                ) : (\n                        <StockContainer>\n                            <h3>Skladové zásoby</h3>\n                            <CustomInput\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[currentUser.premises]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, currentUser.premises)}\n                                handleChange={e => handleAvailableChange(e, currentUser.premises)}\n                            />\n                        </StockContainer>\n                    )}\n            </div>\n        </GlassesContainerForm>\n    )\n}\n\nexport default ProductGlassesForm\n","/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.styles.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx",[],"/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.styles.jsx",[],"/imooptik-frontend/src/components/list-arrows/list-arrows.styles.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx",[],"/imooptik-frontend/src/components/user-form/user.form-styles.jsx",[],"/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx",[],"/imooptik-frontend/src/hooks/useOutsideAlerter.jsx",["754"],"import React, { useRef, useEffect } from \"react\";\n\nexport const useOutsideHandler = (ref, action) => {\n    useEffect(() => {\n        const handleClickOutside = e => {\n            if (ref.current && !ref.current.contains(e.target)) {\n                action()\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n\n    }, [ref])\n}\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(ref) {\n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                alert(\"You clicked outside of me!\");\n            }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [ref]);\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nfunction OutsideAlerter(props) {\n    const wrapperRef = useRef(null);\n    useOutsideAlerter(wrapperRef);\n\n    return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport default OutsideAlerter;\n","/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.styles.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx",[],"/imooptik-frontend/src/components/booking-appoinments/booking-appoinment.styles.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.styles.jsx",[],"/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx",[],"/imooptik-frontend/src/components/custom-select/custom-select.styles.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx",[],"/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx",["755"],"import React, { useState, useContext } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport ReactDOM from 'react-dom'\n\nimport Popup from '../popup/pop-up.component'\n\nimport { retailNames } from '../../context/warehouse/warehouse.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    CustomSelect,\n    SubmitButton\n} from './order-deligate-modal.styles'\n\n\nconst OrderDeligateModal = ({ close, premise, id, refetch }) => {\n    const [value, setValue] = useState(premise)\n    const { token } = useContext(AuthContext)\n    const {\n        getMessage,\n        message,\n        isLoading,\n        setIsLoading,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const handleClick = async () => {\n        setIsLoading(true)\n        const myHeaders = new Headers();\n        myHeaders.append(\"auth-token\", token);\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const raw = JSON.stringify({\n            premises: Number(value),\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders/${id}/delegate`, requestOptions)\n            console.log(response)\n            if (response.status === 400) {\n                getMessage(\"Faktúra musí byt zaplatená, aby mohla byť priradená prevádzke\")\n            }\n            if (response.status === 401) {\n                getMessage(\"Musíš byt vedúci, aby si mohol manipulovať s priradovanim\")\n            }\n            const data = await response.json()\n\n            if (data.order) {\n                refetch()\n                setIsLoading(false)\n                close()\n                return\n            }\n\n            // getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            setIsLoading(false)\n        }\n    }\n\n    if (isLoading || message) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Priradiť k prevádzke</h3>\n                <CustomSelect value={value} onChange={(e) => setValue(e.target.value)}>\n                    <option value={0}>Nezadané</option>\n                    {retailNames.map((name, idx) => {\n                        if (idx === 4) return\n                        return (\n                            <option key={idx} value={idx + 1}>{name}</option>\n                        )\n                    })}\n                </CustomSelect>\n                <SubmitButton onClick={handleClick}>Priradiť</SubmitButton>\n            </Modal>\n        </ModalContainer >\n    ), document.getElementById('portal'))\n}\n\nexport default OrderDeligateModal\n","/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx",["756","757","758","759","760"],"import React, { useEffect } from 'react'\n\nimport {\n    TableContainer,\n    TitleCol,\n    Col,\n    OsContainer\n} from './parameters-table.styles'\n\nconst ParametersTable = ({ parameters, handleChange, disabledInputs = false }) => {\n    const checkParameters = (parameter, idx) => {\n        if (parameter.length === 0) {\n            return \"\"\n        }\n        if (parameter[idx] === 1001) {\n            return \"\"\n        }\n\n        return parameter[idx]\n    }\n\n    console.log((Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))).toFixed(2) === 0)\n\n    useEffect(() => {\n        if (handleChange) {\n            if (parameters.diopters && parameters.addition) {\n                handleChange({\n                    target: {\n                        name: \"diopters\",\n                        value: (Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))) === 0 ? \"\" : (Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))).toFixed(2)\n                    }\n                }, 2)\n                handleChange({\n                    target: {\n                        name: \"diopters\",\n                        value: (Number(checkParameters(parameters.diopters, 1)) + Number(checkParameters(parameters.addition, 1))) === 0 ? \"\" : (Number(checkParameters(parameters.diopters, 1)) + Number(checkParameters(parameters.addition, 1))).toFixed(2)\n                    }\n                }, 3)\n            }\n        }\n    }, [parameters.diopters[0], parameters.addition[0], parameters.diopters[1], parameters.addition[1]])\n\n    return (\n        <TableContainer>\n            <TitleCol>\n                <div>{\" \"}</div>\n                <div>\n                    <p>P</p>\n                </div>\n                <div>\n                    <p>Ľ</p>\n                </div>\n                <div>\n                    <p>P</p>\n                </div>\n                <div>\n                    <p>Ľ</p>\n                </div>\n            </TitleCol>\n\n\n            <Col>\n                <div>sph</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.diopters, idx)}\n                                name=\"diopters\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>cyl</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.cylinder, idx)}\n                                name=\"cylinder\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>ax</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <OsContainer key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.cylinderAxes, idx)}\n                                name=\"cylinderAxes\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </OsContainer>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>PD</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.distance, idx)}\n                                name=\"distance\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>prizma</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.prism, idx)}\n                                name=\"prism\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>basis</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.basis, idx)}\n                                name=\"basis\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>addicia</div>\n\n                {[...Array(2)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.addition, idx)}\n                                name=\"addition\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n\n\n        </TableContainer>\n    )\n}\n\nexport default ParametersTable\n","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx",[],"/imooptik-frontend/src/components/examinations-overview/examinations-overview.component.jsx",["761","762"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useFetchById } from '../../hooks/useFetch'\nimport { ExaminationContext } from '../../context/examination/examination.context'\n\nimport ExaminationUser from '../examination-user/examination-user.component'\nimport OptometristExaminationModal from '../modal-optometrist-examination/modal-optometrist-examination.component'\n\nimport {\n    checkParameterValue\n} from '../../utils/parameters.utils'\n\nimport {\n    ExaminationsOverviewContainer,\n    Header,\n    ExaminationContainer,\n    ExamHead,\n    ExamTableContainer,\n    HeadTableCol,\n    TableCol,\n    ExaminationOptions,\n    AddButton,\n    UpdateButton,\n    DeleteButton\n} from './examinations-overview.styles'\n\nconst ExaminationsOverview = () => {\n    const params = useParams()\n    const examinationData = useFetchById(\"api/admin/exams/user\", params.id)\n    const { deleteExamination } = useContext(ExaminationContext)\n    const [showOptometristModal, setShowOptometristModal] = useState(false)\n    const [examinations, setExaminations] = useState([])\n    const [examinationToUpdate, setExaminationToUpdate] = useState(null)\n\n    const handleUpdateClick = (e, id) => {\n        e.preventDefault()\n        setExaminationToUpdate(id)\n        setShowOptometristModal(true)\n    }\n\n    const handleDelete = (e, id) => {\n        e.preventDefault()\n        deleteExamination(id)\n        examinationData.refetch()\n    }\n\n    const handleCloseModal = () => {\n        setShowOptometristModal(false)\n        setExaminationToUpdate(null)\n    }\n\n    useEffect(() => {\n        if (!examinationData.isLoading) {\n            if (examinationData.response) {\n                setExaminations(examinationData.response.exams)\n            }\n        }\n    }, [examinationData.isLoading])\n\n    return (\n        <ExaminationsOverviewContainer>\n            {showOptometristModal && <OptometristExaminationModal\n                userId={params.id}\n                examinationToUpdate={examinationToUpdate}\n                refetch={examinationData.refetch}\n                close={handleCloseModal}\n            />}\n            <Header>\n                <h2>Vyšetrenia</h2>\n                <div>\n                    <AddButton type='button' onClick={() => setShowOptometristModal(true)}>Pridať prehliadku</AddButton>\n                </div>\n            </Header>\n\n\n            <div>\n                {examinations.map((examination, idx) => (\n                    <ExaminationContainer key={idx}>\n                        <ExamHead>\n                            <h3>Dátum</h3>\n                            <p>{new Date(examination?.date).toLocaleDateString(\"sk-SK\", { weekday: 'long', month: 'long', day: 'numeric' })}</p>\n                        </ExamHead>\n                        <ExamTableContainer>\n                            <HeadTableCol>\n                                <div>-</div>\n                                <div>PO</div>\n                                <div>ĽO</div>\n                                <div>PO</div>\n                                <div>ĽO</div>\n                            </HeadTableCol>\n                            <TableCol>\n                                <div>sph</div>\n                                {examination?.parameters?.sph.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>cyl</div>\n                                {examination?.parameters?.cyl.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>ax</div>\n                                {examination?.parameters?.ax.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus D</div>\n                                {examination?.parameters?.vizusD.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus bino</div>\n                                {examination?.parameters?.vizusBino.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus B</div>\n                                {examination?.parameters?.vizusB.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>prizma</div>\n                                {examination?.parameters?.prizma.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>basis</div>\n                                {examination?.parameters?.basis.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>PD</div>\n                                {examination?.parameters?.pd.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>ADD</div>\n                                {examination?.parameters?.add.map((value, idx) => {\n                                    if (idx > 1) return\n                                    return (\n                                        <div key={idx}>\n                                            {checkParameterValue(value)}\n                                        </div>\n                                    )\n                                })}\n                            </TableCol>\n                        </ExamTableContainer>\n                        <ExaminationOptions>\n                            <ExaminationUser userId={examination.doneBy} />\n                            <div>\n                                <UpdateButton onClick={e => handleUpdateClick(e, examination._id)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={e => handleDelete(e, examination._id)}>Vymazať</DeleteButton>\n                            </div>\n                        </ExaminationOptions>\n                    </ExaminationContainer>\n                ))}\n            </div>\n        </ExaminationsOverviewContainer>\n    )\n}\n\nexport default ExaminationsOverview\n","/imooptik-frontend/src/components/modal-booking/modal-booking.component.jsx",["763"],"import React, { useState, useContext, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { BookingContext } from '../../context/booking/booking.context'\n\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\nimport { useFetchById } from '../../hooks/useFetch'\nimport {\n    formatBookingObj\n} from '../../utils/calendar.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SubmitButton,\n    InputContainer,\n    ModalHeader\n} from './modal-booking.styles'\n\nconst BookingModal = ({ close, calendarId, refetch, selectedBooking }) => {\n    const { createBooking, updateBooking } = useContext(BookingContext)\n    const { response, isLoading } = useFetchById(\"api/booking/bookings\", selectedBooking, !selectedBooking)\n\n    const [booking, setBooking] = useState({})\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleBookingChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete booking[name]\n            setBooking({\n                ...booking\n            })\n            return\n        }\n\n        setBooking(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const handleSubmit = () => {\n        if (!booking?.name) return\n\n        if (isUpdating) {\n            let bookingToUpdate = formatBookingObj(booking)\n\n            console.log(\"BOOKING BEFORE UPDATE\")\n            console.log(bookingToUpdate)\n\n            updateBooking(bookingToUpdate, booking._id)\n        } else {\n            let bookingToAdd = {\n                ...booking,\n                calendar: calendarId\n            }\n\n            console.log(\"BOOKING BEFORE CREATE\")\n            console.log(bookingToAdd)\n            createBooking(bookingToAdd)\n        }\n\n        refetch()\n        close()\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n        if (response?.booking) {\n            setIsUpdating(true)\n            setBooking(response?.booking)\n        }\n    }, [selectedBooking, isLoading])\n\n    useEffect(() => {\n        return () => {\n            setIsUpdating(false)\n            setBooking({})\n        }\n    }, [])\n\n    console.log(booking)\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <ModalHeader>\n                    {!isUpdating && <h2>Nové vyšetrenie</h2>}\n                    {isUpdating && <h2>Upraviť vyšetrenie</h2>}\n                    <div>\n                        <CustomCheckbox\n                            label=\"Aktivné\"\n                            isActive={booking?.active || false}\n                            name='active'\n                            handleClick={() => handleBookingChange({\n                                target: {\n                                    name: 'active',\n                                    value: booking?.active ? !booking?.active : true\n                                }\n                            })}\n                        />\n                    </div>\n                </ModalHeader>\n                <InputContainer>\n                    <CustomInput\n                        label=\"Názov vyšetrenia*\"\n                        name=\"name\"\n                        value={booking?.name || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                <InputContainer>\n                    <CustomInput\n                        label=\"Cena\"\n                        name=\"price\"\n                        value={booking?.price || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                <InputContainer>\n                    <CustomInput\n                        label=\"Čas\"\n                        name=\"time\"\n                        value={booking?.time || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                <InputContainer>\n                    <CustomTextarea\n                        label=\"Popis\"\n                        rows='5'\n                        name=\"description\"\n                        value={booking?.description || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                {!isUpdating && <SubmitButton onClick={handleSubmit}>Pridať</SubmitButton>}\n                {isUpdating && <SubmitButton onClick={handleSubmit}>Uložiť</SubmitButton>}\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById(\"portal\"))\n}\n\nexport default BookingModal\n","/imooptik-frontend/src/components/booking-appoinment/booking-appoinment.component.jsx",[],"/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx",[],"/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.component.jsx",["764"],"import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    formatDate,\n    formatCalendarStartTime,\n    formatCalendarEndTime\n} from '../../utils/calendar.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SubmitButton,\n    Navbar,\n    UserTable,\n    TableHead,\n    Tablebody,\n    TableCol,\n    SearchTab,\n    CustomSelect,\n    DateContainer\n} from './modal-user-booking.styles'\n\nconst UserBookingModal = ({ close, day, calendar, refetchCalendar, createUserBooking }) => {\n\n    const [query, setQuery] = useState(null)\n    const [activeTab, setActiveTab] = useState(0)\n    const [userBooking, setUserBooking] = useState({})\n    const [bookingDate, setBookingDate] = useState({\n        date: \"\",\n        hour: \"\",\n        min: 0\n    })\n\n    const startTime = formatCalendarStartTime(calendar, day)\n    const endTime = formatCalendarEndTime(calendar, day)\n\n    const { refetch, response } = useFetchByQuery('api/admin/users/filter', query, !query)\n\n    const handleSearch = () => {\n        if (!query) return\n        refetch()\n    }\n\n    const handleSearchOnEnter = (e) => {\n        if (query !== null) {\n            if (e.key === 'Enter') {\n                refetch()\n            }\n        }\n    }\n\n    const handleUserBookingChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete userBooking[name]\n            setUserBooking({ ...userBooking })\n            return\n        }\n\n        setUserBooking(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const selectUser = (userObj) => {\n        setUserBooking(prevValue => ({\n            ...prevValue,\n            ...userObj\n        }))\n        setActiveTab(0)\n        setQuery(null)\n    }\n\n    const handleChangeDate = e => {\n        const { name, value } = e.target\n\n        setBookingDate(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const handleSubmit = () => {\n        if (!userBooking?.name) return\n        if (!userBooking?.email) return\n        if (!userBooking?.phone) return\n        if (!userBooking?.booking) return\n\n        let bookingToAdd = {\n            ...userBooking,\n            dueTime: formatDate(bookingDate),\n            values: {}\n        }\n\n        console.log(\"USER BOOKING BEFORE SEND\")\n        console.log(bookingToAdd)\n\n\n        createUserBooking(bookingToAdd)\n        refetchCalendar()\n        close()\n    }\n\n    useEffect(() => {\n        if (day) {\n            const { time, dayNumber, month, year } = day\n            console.log(\"DAY DATA\")\n            console.log(day)\n\n            // const formatedDate = formatDate(`${dayNumber}-${month}-${year}`, time)\n            setBookingDate({\n                date: `${year}-${month < 9 ? `0${month + 1}` : (month + 1)}-${dayNumber < 10 ? `0${dayNumber}` : dayNumber}`,\n                hour: Number(time?.split(\":\")[0]),\n                min: Number(time?.split(\":\")[1])\n            })\n        }\n    }, [day])\n\n    useEffect(() => {\n        return () => {\n            setUserBooking({})\n            setQuery(null)\n            setActiveTab(0)\n        }\n    }, [])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>Objednať zákazníka</h2>\n\n                <Navbar\n                    items={optionTabs}\n                    activeIndex={activeTab}\n                    setActiveIndex={setActiveTab}\n                />\n\n                {activeTab === 1 ? (\n                    <SearchTab>\n                        <CustomInput\n                            label='Meno, priezvisko, e-mail alebo tel. číslo'\n                            name='query'\n                            value={query ? query?.query : \"\"}\n                            handleChange={e => setQuery({\n                                limit: 10,\n                                query: e.target.value\n                            })}\n                            onKeyPress={handleSearchOnEnter}\n                        />\n\n                        <SubmitButton onClick={handleSearch}>Hľadať</SubmitButton>\n\n\n                        <UserTable>\n                            <TableHead>\n                                <TableCol>Meno</TableCol>\n                                <TableCol>E-mail</TableCol>\n                                <TableCol>Tel. číslo</TableCol>\n                            </TableHead>\n                            {response?.users ? response?.users?.map(({ name, email, phone }, idx) => (\n                                <Tablebody key={idx} onClick={() => selectUser({ name, email, phone })}>\n                                    <TableCol>{name}</TableCol>\n                                    <TableCol>{email}</TableCol>\n                                    <TableCol>{phone}</TableCol>\n                                </Tablebody>\n                            )) : (\n                                    <div>\n                                        <p>Žiaden výsledok</p>\n                                    </div>\n                                )}\n                        </UserTable>\n                    </SearchTab>\n                ) : (\n                        <React.Fragment>\n                            <div>\n                                <h3>Dátum vyšetrenia</h3>\n                                <DateContainer>\n                                    <CustomInput\n                                        label=''\n                                        type='date'\n                                        name='date'\n                                        handleChange={handleChangeDate}\n                                        value={bookingDate?.date}\n\n                                    />\n                                    <div>\n                                        <CustomInput\n                                            label='Čas'\n                                            type='number'\n                                            name='hour'\n                                            value={bookingDate?.hour?.toString()}\n                                            min={startTime?.split(\":\")[0]}\n                                            max={endTime?.split(\":\")[0]}\n                                            handleChange={handleChangeDate}\n                                            step=\"1\"\n                                        />\n                                    </div>\n                                    <p>:</p>\n                                    <div>\n                                        <CustomSelect\n                                            name='min'\n                                            value={bookingDate?.min?.toString()}\n                                            onChange={handleChangeDate}\n                                        >\n                                            <option value={0}>00</option>\n                                            {calendar?.interval === 30 && <option value={30}>30</option>}\n                                        </CustomSelect>\n                                    </div>\n                                </DateContainer>\n                            </div>\n                            <div>\n                                <CustomInput\n                                    label='Meno*'\n                                    name='name'\n                                    value={userBooking?.name || \"\"}\n                                    handleChange={handleUserBookingChange}\n                                />\n                            </div>\n                            <div>\n                                <CustomInput\n                                    label='E-mail*'\n                                    name='email'\n                                    value={userBooking?.email || \"\"}\n                                    handleChange={handleUserBookingChange}\n                                />\n                            </div>\n                            <div>\n                                <CustomInput\n                                    label='Tel. číslo*'\n                                    name='phone'\n                                    value={userBooking?.phone || \"\"}\n                                    handleChange={handleUserBookingChange}\n                                />\n                            </div>\n\n                            <div>\n                                <CustomTextarea\n                                    label='Poznámka'\n                                    name='note'\n                                    rows=\"5\"\n                                    value={userBooking?.note || \"\"}\n                                    handleChange={handleUserBookingChange}\n                                />\n                            </div>\n\n                            <div>\n                                <h3>Vyšetrenie</h3>\n                                <CustomSelect\n                                    name='booking'\n                                    value={userBooking?.booking || \"\"}\n                                    onChange={handleUserBookingChange}\n                                >\n                                    <option value={''}>Nezvolené</option>\n                                    {calendar?.bookings.map((booking, idx) => {\n                                        if (booking.active === false) return\n                                        return (\n                                            <option key={idx} value={booking._id}>{booking.name}</option>\n                                        )\n                                    })}\n                                </CustomSelect>\n                            </div>\n                        </React.Fragment>\n                    )}\n\n                {activeTab === 0 && <SubmitButton onClick={handleSubmit}>Vytvoriť</SubmitButton>}\n            </Modal>\n        </ModalContainer >\n    ), document.getElementById('portal'))\n}\n\nexport default UserBookingModal\n\nconst optionTabs = [\n    {\n        id: 0,\n        name: \"Nový zákazník\",\n    },\n    {\n        id: 1,\n        name: \"Vyhladať zákazníka\",\n    },\n]","/imooptik-frontend/src/sections/order/steps/4-summary/summary.styles.jsx",[],"/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.styles.jsx",[],"/imooptik-frontend/src/utils/orders.utils.jsx",[],"/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.styles.jsx",[],"/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.styles.jsx",[],"/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx",[],"/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.component.jsx",["765","766","767"],"/imooptik-frontend/src/components/order-summary-product-name/order-summary-product-name.component.jsx",[],"/imooptik-frontend/src/components/order-summary-lenses-name/order-summary-lenses-name.component.jsx",[],"/imooptik-frontend/src/components/order-cart-lenses-row/order-cart-lenses-row.component.jsx",["768","769","770"],"/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx",[],"/imooptik-frontend/src/components/order-cart-row/order-cart-row.component.jsx",["771"],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.styles.jsx",[],"/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx",[],"/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx",[],"/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx",[],"/imooptik-frontend/src/utils/parameters.utils.jsx",[],"/imooptik-frontend/src/components/examinations-overview/examinations-overview.styles.jsx",[],"/imooptik-frontend/src/components/modal-booking/modal-booking.styles.jsx",[],"/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx",[],"/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.styles.jsx",[],"/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.component.jsx",["772"],"import React, { useState, useContext, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { ExaminationContext } from '../../context/examination/examination.context'\nimport { useFetchById } from '../../hooks/useFetch'\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    checkParameter,\n    formatParameter,\n} from '../../utils/parameters.utils'\n\nimport {\n    CloseButton,\n    Modal,\n    ModalContainer,\n    TableContainer,\n    HeadTableCol,\n    TableCol,\n    TableBlock,\n    TwoCols,\n    SubmitButton\n} from './modal-optometrist-examination.styles'\n\nconst OptometristExaminationModal = ({ close, refetch, userId, examinationToUpdate }) => {\n    const examinationData = useFetchById('api/admin/exams', examinationToUpdate, !examinationToUpdate)\n\n    const { createExamination, updateExamination } = useContext(ExaminationContext)\n    const [examinationObj, setExaminationObj] = useState({})\n    const [parameters, setParameters] = useState({})\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = parameters[name] || [1001, 1001, 1001, 1001]\n        arr[idx] = value === '' ? 1001 : value\n\n        setParameters({\n            ...parameters,\n            [name]: arr\n        })\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete examinationObj[name]\n            setExaminationObj({\n                ...examinationObj,\n            })\n            return\n        }\n\n        setExaminationObj({\n            ...examinationObj,\n            [name]: value\n        })\n    }\n\n    const formatParameters = (e, newParameters) => {\n        if (newParameters) {\n            const { name } = e.target\n            setParameters({\n                ...parameters,\n                [name]: newParameters.map(value => formatParameter(value))\n            })\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        let examObj = {\n            ...examinationObj,\n            doneTo: userId,\n            parameters: {\n                ...parameters\n            }\n        }\n\n        console.log(\"EXAMINATION OBJECT BEFORE SEND\")\n        console.log(examObj)\n\n        if (examinationToUpdate) {\n            console.log(\"UPDATE EXAMINATION\")\n            delete examObj[\"doneTo\"]\n            delete examObj[\"doneBy\"]\n            delete examObj[\"date\"]\n            delete examObj[\"_id\"]\n            delete examObj[\"__v\"]\n\n            console.log(examObj)\n            updateExamination(examObj, examinationToUpdate)\n\n        } else {\n            console.log(\"CREATE EXAMINATION\")\n\n            createExamination(examObj)\n        }\n        refetch()\n        close()\n    }\n\n    console.log(examinationData)\n\n    useEffect(() => {\n        if (!examinationData.isLoading) {\n            if (examinationData.response) {\n                setParameters(examinationData.response?.exam?.parameters)\n                setExaminationObj(examinationData.response?.exam)\n            }\n        }\n    }, [examinationToUpdate, examinationData.isLoading])\n\n    useEffect(() => {\n        return () => {\n            setExaminationObj({})\n            setParameters({})\n        }\n    }, [])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Nová prehliadka</h3>\n\n                <TableContainer>\n                    <HeadTableCol>\n                        <TableBlock>\n                            <p>-</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>PO</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>ĽO</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>PO</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>ĽO</p>\n                        </TableBlock>\n                    </HeadTableCol>\n                    {/* sph */}\n                    <TableCol>\n                        <TableBlock>\n                            sph\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='sph'\n                                    type='text'\n                                    value={checkParameter(parameters?.sph, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.sph)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* cyl */}\n                    <TableCol>\n                        <TableBlock>\n                            cyl\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='cyl'\n                                    type='text'\n                                    value={checkParameter(parameters?.cyl, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.cyl)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* ax */}\n                    <TableCol>\n                        <TableBlock>\n                            ax\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='ax'\n                                    type='text'\n                                    value={checkParameter(parameters?.ax, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.ax)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* vizus D */}\n                    <TableCol>\n                        <TableBlock>\n                            vizus D\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='vizusD'\n                                    type='text'\n                                    value={checkParameter(parameters?.vizusD, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.vizusD)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* vizus Bino */}\n                    <TableCol>\n                        <TableBlock>\n                            vizus Bino\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='vizusBino'\n                                    type='text'\n                                    value={checkParameter(parameters?.vizusBino, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.vizusBino)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* vizus B */}\n                    <TableCol>\n                        <TableBlock>\n                            vizus B\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='vizusB'\n                                    type='text'\n                                    value={checkParameter(parameters?.vizusB, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.vizusB)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* prizma */}\n                    <TableCol>\n                        <TableBlock>\n                            prizma\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='prizma'\n                                    type='text'\n                                    value={checkParameter(parameters?.prizma, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.prizma)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* basis */}\n                    <TableCol>\n                        <TableBlock>\n                            basis\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='basis'\n                                    type='text'\n                                    value={checkParameter(parameters?.basis, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.basis)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* PD */}\n                    <TableCol>\n                        <TableBlock>\n                            PD\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='pd'\n                                    type='text'\n                                    value={checkParameter(parameters?.pd, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.pd)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* ADD */}\n                    <TableCol>\n                        <TableBlock>\n                            ADD\n                        </TableBlock>\n                        {[...Array(2)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='add'\n                                    type='text'\n                                    value={checkParameter(parameters?.add, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.add)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n                </TableContainer>\n\n\n                <TwoCols>\n                    <div>\n                        <CustomInput\n                            label=\"Typ\"\n                            name='type'\n                            value={examinationObj?.type || \"\"}\n                            handleChange={handleChange}\n                        />\n                        <CustomInput\n                            label=\"Bc\"\n                            name='bc'\n                            value={examinationObj?.bc || \"\"}\n                            handleChange={handleChange}\n                        />\n                    </div>\n                    <div>\n                        <CustomInput\n                            label=\"dptr PO\"\n                            name='dptrPO'\n                            value={examinationObj?.dptrPO || \"\"}\n                            handleChange={handleChange}\n                        />\n                        <CustomInput\n                            label=\"dptr ĽO\"\n                            name='dptrLO'\n                            value={examinationObj?.dptrLO || \"\"}\n                            handleChange={handleChange}\n                        />\n                    </div>\n                </TwoCols>\n                <div>\n                    <CustomTextarea\n                        label='Poznámka'\n                        name='note'\n                        value={examinationObj?.note || \"\"}\n                        handleChange={handleChange}\n                        rows='5'\n                    />\n                    <CustomInput\n                        label=\"Doporučenie\"\n                        name='recommendation'\n                        value={examinationObj?.recommendation || \"\"}\n                        handleChange={handleChange}\n                    />\n                </div>\n\n\n                <SubmitButton onClick={handleSubmit}>{examinationToUpdate ? \"Uložiť\" : \"Odoslať prehliadku\"}</SubmitButton>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default OptometristExaminationModal\n","/imooptik-frontend/src/components/examination-user/examination-user.component.jsx",[],"/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.styles.jsx",[],"/imooptik-frontend/src/components/order-cart-lenses-row/order-cart-lenses-row.styles.jsx",[],"/imooptik-frontend/src/components/order-cart-row/order-cart-row.styles.jsx",["773"],"/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx",[],"/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx",[],"/imooptik-frontend/src/components/examination-user/examination-user.styles.jsx",[],"/imooptik-frontend/src/context/order/order.context.jsx",["774"],{"ruleId":"775","replacedBy":"776"},{"ruleId":"777","replacedBy":"778"},{"ruleId":"779","severity":1,"message":"780","line":237,"column":8,"nodeType":"781","endLine":237,"endColumn":15,"suggestions":"782"},{"ruleId":"783","severity":1,"message":"784","line":7,"column":5,"nodeType":"785","messageId":"786","endLine":7,"endColumn":15},{"ruleId":"783","severity":1,"message":"787","line":55,"column":24,"nodeType":"785","messageId":"786","endLine":55,"endColumn":37},{"ruleId":"779","severity":1,"message":"788","line":152,"column":8,"nodeType":"781","endLine":152,"endColumn":32,"suggestions":"789"},{"ruleId":"779","severity":1,"message":"790","line":788,"column":8,"nodeType":"781","endLine":788,"endColumn":31,"suggestions":"791"},{"ruleId":"779","severity":1,"message":"792","line":818,"column":8,"nodeType":"781","endLine":818,"endColumn":22,"suggestions":"793"},{"ruleId":"779","severity":1,"message":"794","line":88,"column":8,"nodeType":"781","endLine":88,"endColumn":18,"suggestions":"795"},{"ruleId":"779","severity":1,"message":"796","line":98,"column":8,"nodeType":"781","endLine":98,"endColumn":21,"suggestions":"797"},{"ruleId":"779","severity":1,"message":"798","line":96,"column":8,"nodeType":"781","endLine":96,"endColumn":19,"suggestions":"799"},{"ruleId":"779","severity":1,"message":"800","line":109,"column":8,"nodeType":"781","endLine":109,"endColumn":21,"suggestions":"801"},{"ruleId":"779","severity":1,"message":"802","line":38,"column":8,"nodeType":"781","endLine":38,"endColumn":21,"suggestions":"803"},{"ruleId":"783","severity":1,"message":"804","line":5,"column":21,"nodeType":"785","messageId":"786","endLine":5,"endColumn":27},{"ruleId":"783","severity":1,"message":"805","line":46,"column":12,"nodeType":"785","messageId":"786","endLine":46,"endColumn":22},{"ruleId":"779","severity":1,"message":"806","line":140,"column":8,"nodeType":"781","endLine":140,"endColumn":38,"suggestions":"807"},{"ruleId":"779","severity":1,"message":"808","line":146,"column":8,"nodeType":"781","endLine":146,"endColumn":12,"suggestions":"809"},{"ruleId":"779","severity":1,"message":"810","line":168,"column":8,"nodeType":"781","endLine":168,"endColumn":10,"suggestions":"811"},{"ruleId":"779","severity":1,"message":"812","line":127,"column":8,"nodeType":"781","endLine":127,"endColumn":43,"suggestions":"813"},{"ruleId":"779","severity":1,"message":"814","line":129,"column":8,"nodeType":"781","endLine":129,"endColumn":19,"suggestions":"815"},{"ruleId":"779","severity":1,"message":"816","line":398,"column":8,"nodeType":"781","endLine":398,"endColumn":72,"suggestions":"817"},{"ruleId":"779","severity":1,"message":"818","line":414,"column":8,"nodeType":"781","endLine":414,"endColumn":26,"suggestions":"819"},{"ruleId":"779","severity":1,"message":"820","line":423,"column":8,"nodeType":"781","endLine":423,"endColumn":37,"suggestions":"821"},{"ruleId":"779","severity":1,"message":"822","line":435,"column":8,"nodeType":"781","endLine":435,"endColumn":10,"suggestions":"823"},{"ruleId":"779","severity":1,"message":"824","line":71,"column":8,"nodeType":"781","endLine":71,"endColumn":12,"suggestions":"825"},{"ruleId":"779","severity":1,"message":"826","line":88,"column":8,"nodeType":"781","endLine":88,"endColumn":14,"suggestions":"827"},{"ruleId":"779","severity":1,"message":"828","line":101,"column":8,"nodeType":"781","endLine":101,"endColumn":10,"suggestions":"829"},{"ruleId":"783","severity":1,"message":"830","line":34,"column":12,"nodeType":"785","messageId":"786","endLine":34,"endColumn":36},{"ruleId":"779","severity":1,"message":"831","line":98,"column":8,"nodeType":"781","endLine":98,"endColumn":64,"suggestions":"832"},{"ruleId":"779","severity":1,"message":"833","line":109,"column":8,"nodeType":"781","endLine":109,"endColumn":10,"suggestions":"834"},{"ruleId":"779","severity":1,"message":"835","line":88,"column":8,"nodeType":"781","endLine":88,"endColumn":21,"suggestions":"836"},{"ruleId":"779","severity":1,"message":"835","line":110,"column":8,"nodeType":"781","endLine":110,"endColumn":21,"suggestions":"837"},{"ruleId":"779","severity":1,"message":"838","line":116,"column":8,"nodeType":"781","endLine":116,"endColumn":29,"suggestions":"839"},{"ruleId":"779","severity":1,"message":"840","line":160,"column":8,"nodeType":"781","endLine":160,"endColumn":20,"suggestions":"841"},{"ruleId":"783","severity":1,"message":"842","line":13,"column":5,"nodeType":"785","messageId":"786","endLine":13,"endColumn":28},{"ruleId":"783","severity":1,"message":"843","line":23,"column":12,"nodeType":"785","messageId":"786","endLine":23,"endColumn":23},{"ruleId":"783","severity":1,"message":"844","line":23,"column":25,"nodeType":"785","messageId":"786","endLine":23,"endColumn":39},{"ruleId":"779","severity":1,"message":"845","line":43,"column":8,"nodeType":"781","endLine":43,"endColumn":17,"suggestions":"846"},{"ruleId":"779","severity":1,"message":"847","line":42,"column":8,"nodeType":"781","endLine":42,"endColumn":18,"suggestions":"848"},{"ruleId":"779","severity":1,"message":"849","line":48,"column":8,"nodeType":"781","endLine":48,"endColumn":10,"suggestions":"850"},{"ruleId":"851","severity":1,"message":"852","line":261,"column":41,"nodeType":"853","messageId":"854","endLine":261,"endColumn":43},{"ruleId":"779","severity":1,"message":"855","line":29,"column":8,"nodeType":"781","endLine":29,"endColumn":19,"suggestions":"856"},{"ruleId":"779","severity":1,"message":"855","line":42,"column":8,"nodeType":"781","endLine":42,"endColumn":25,"suggestions":"857"},{"ruleId":"858","severity":1,"message":"859","line":263,"column":64,"nodeType":"860","messageId":"861","endLine":263,"endColumn":70},{"ruleId":"851","severity":1,"message":"862","line":221,"column":41,"nodeType":"853","messageId":"854","endLine":221,"endColumn":43},{"ruleId":"858","severity":1,"message":"863","line":263,"column":55,"nodeType":"864","messageId":"865","endLine":263,"endColumn":57},{"ruleId":"779","severity":1,"message":"866","line":29,"column":8,"nodeType":"781","endLine":29,"endColumn":22,"suggestions":"867"},{"ruleId":"779","severity":1,"message":"868","line":71,"column":8,"nodeType":"781","endLine":71,"endColumn":28,"suggestions":"869"},{"ruleId":"779","severity":1,"message":"868","line":110,"column":8,"nodeType":"781","endLine":110,"endColumn":32,"suggestions":"870"},{"ruleId":"783","severity":1,"message":"871","line":20,"column":5,"nodeType":"785","messageId":"786","endLine":20,"endColumn":16},{"ruleId":"858","severity":1,"message":"859","line":62,"column":52,"nodeType":"860","messageId":"861","endLine":62,"endColumn":58},{"ruleId":"779","severity":1,"message":"872","line":71,"column":8,"nodeType":"781","endLine":71,"endColumn":19,"suggestions":"873"},{"ruleId":"858","severity":1,"message":"859","line":105,"column":104,"nodeType":"860","messageId":"861","endLine":105,"endColumn":110},{"ruleId":"858","severity":1,"message":"859","line":106,"column":102,"nodeType":"860","messageId":"861","endLine":106,"endColumn":108},{"ruleId":"858","severity":1,"message":"859","line":107,"column":80,"nodeType":"860","messageId":"861","endLine":107,"endColumn":86},{"ruleId":"779","severity":1,"message":"874","line":44,"column":8,"nodeType":"781","endLine":44,"endColumn":15,"suggestions":"875"},{"ruleId":"779","severity":1,"message":"874","line":50,"column":8,"nodeType":"781","endLine":50,"endColumn":18,"suggestions":"876"},{"ruleId":"779","severity":1,"message":"872","line":65,"column":8,"nodeType":"781","endLine":65,"endColumn":19,"suggestions":"877"},{"ruleId":"779","severity":1,"message":"874","line":24,"column":8,"nodeType":"781","endLine":24,"endColumn":13,"suggestions":"878"},{"ruleId":"858","severity":1,"message":"859","line":10,"column":32,"nodeType":"860","messageId":"861","endLine":10,"endColumn":38},{"ruleId":"879","severity":1,"message":"880","line":148,"column":41,"nodeType":"881","endLine":148,"endColumn":61},{"ruleId":"879","severity":1,"message":"880","line":189,"column":45,"nodeType":"881","endLine":189,"endColumn":160},{"ruleId":"783","severity":1,"message":"882","line":29,"column":12,"nodeType":"785","messageId":"786","endLine":29,"endColumn":21},{"ruleId":"779","severity":1,"message":"883","line":67,"column":8,"nodeType":"781","endLine":67,"endColumn":19,"suggestions":"884"},{"ruleId":"858","severity":1,"message":"859","line":97,"column":112,"nodeType":"860","messageId":"861","endLine":97,"endColumn":118},{"ruleId":"779","severity":1,"message":"885","line":72,"column":8,"nodeType":"781","endLine":72,"endColumn":19,"suggestions":"886"},{"ruleId":"779","severity":1,"message":"887","line":58,"column":8,"nodeType":"781","endLine":58,"endColumn":15,"suggestions":"888"},{"ruleId":"779","severity":1,"message":"889","line":69,"column":8,"nodeType":"781","endLine":69,"endColumn":21,"suggestions":"890"},{"ruleId":"858","severity":1,"message":"859","line":97,"column":40,"nodeType":"860","messageId":"861","endLine":97,"endColumn":46},{"ruleId":"858","severity":1,"message":"859","line":173,"column":44,"nodeType":"860","messageId":"861","endLine":173,"endColumn":50},{"ruleId":"858","severity":1,"message":"859","line":178,"column":44,"nodeType":"860","messageId":"861","endLine":178,"endColumn":50},{"ruleId":"779","severity":1,"message":"891","line":15,"column":8,"nodeType":"781","endLine":15,"endColumn":13,"suggestions":"892"},{"ruleId":"858","severity":1,"message":"859","line":83,"column":40,"nodeType":"860","messageId":"861","endLine":83,"endColumn":46},{"ruleId":"779","severity":1,"message":"893","line":41,"column":8,"nodeType":"781","endLine":41,"endColumn":104,"suggestions":"894"},{"ruleId":"779","severity":1,"message":"895","line":41,"column":9,"nodeType":"896","endLine":41,"endColumn":31},{"ruleId":"779","severity":1,"message":"895","line":41,"column":33,"nodeType":"896","endLine":41,"endColumn":55},{"ruleId":"779","severity":1,"message":"895","line":41,"column":57,"nodeType":"896","endLine":41,"endColumn":79},{"ruleId":"779","severity":1,"message":"895","line":41,"column":81,"nodeType":"896","endLine":41,"endColumn":103},{"ruleId":"779","severity":1,"message":"897","line":58,"column":8,"nodeType":"781","endLine":58,"endColumn":35,"suggestions":"898"},{"ruleId":"858","severity":1,"message":"859","line":166,"column":50,"nodeType":"860","messageId":"861","endLine":166,"endColumn":56},{"ruleId":"779","severity":1,"message":"899","line":79,"column":8,"nodeType":"781","endLine":79,"endColumn":36,"suggestions":"900"},{"ruleId":"858","severity":1,"message":"859","line":265,"column":71,"nodeType":"860","messageId":"861","endLine":265,"endColumn":77},{"ruleId":"783","severity":1,"message":"901","line":10,"column":5,"nodeType":"785","messageId":"786","endLine":10,"endColumn":16},{"ruleId":"783","severity":1,"message":"902","line":12,"column":5,"nodeType":"785","messageId":"786","endLine":12,"endColumn":19},{"ruleId":"779","severity":1,"message":"903","line":151,"column":8,"nodeType":"781","endLine":151,"endColumn":27,"suggestions":"904"},{"ruleId":"783","severity":1,"message":"905","line":1,"column":27,"nodeType":"785","messageId":"786","endLine":1,"endColumn":36},{"ruleId":"783","severity":1,"message":"906","line":21,"column":12,"nodeType":"785","messageId":"786","endLine":21,"endColumn":24},{"ruleId":"783","severity":1,"message":"907","line":24,"column":11,"nodeType":"785","messageId":"786","endLine":24,"endColumn":31},{"ruleId":"779","severity":1,"message":"908","line":44,"column":8,"nodeType":"781","endLine":44,"endColumn":23,"suggestions":"909"},{"ruleId":"779","severity":1,"message":"897","line":114,"column":8,"nodeType":"781","endLine":114,"endColumn":56,"suggestions":"910"},{"ruleId":"783","severity":1,"message":"911","line":2,"column":8,"nodeType":"785","messageId":"786","endLine":2,"endColumn":22},{"ruleId":"783","severity":1,"message":"912","line":26,"column":13,"nodeType":"785","messageId":"786","endLine":26,"endColumn":23},"no-native-reassign",["913"],"no-negated-in-lhs",["914"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStats'. Either include it or remove the dependency array.","ArrayExpression",["915"],"no-unused-vars","'fetchUsers' is defined but never used.","Identifier","unusedVar","'setTotalCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["916"],"React Hook useEffect has missing dependencies: 'getLenses', 'getProductsByQuery', 'productCategoryTypeTabs', and 'products'. Either include them or remove the dependency array.",["917"],"React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array. You can also do a functional update 'setProduct(p => ...)' if you only need 'product' in the 'setProduct' call.",["918"],"React Hook useEffect has a missing dependency: 'getProductsByQuery'. Either include it or remove the dependency array.",["919"],"React Hook useEffect has missing dependencies: 'activeCategoryTypeTab', 'getProductsByQuery', and 'products'. Either include them or remove the dependency array.",["920"],"React Hook useEffect has missing dependencies: 'closeModal' and 'response'. Either include them or remove the dependency array.",["921"],"React Hook useEffect has missing dependencies: 'activeIndex' and 'refetch'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilterQuery' needs the current value of 'activeIndex'.",["922"],"React Hook useEffect has a missing dependency: 'getAnalytics'. Either include it or remove the dependency array.",["923"],"'Prompt' is defined but never used.","'hasChanges' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'user.fName', 'user.lName', and 'userObj'. Either include them or remove the dependency array. You can also do a functional update 'setUserObj(u => ...)' if you only need 'userObj' in the 'setUserObj' call.",["924"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["925"],"React Hook useEffect has missing dependencies: 'handleChange' and 'resetUser'. Either include them or remove the dependency array.",["926"],"React Hook useEffect has a missing dependency: 'closeModal'. Either include it or remove the dependency array.",["927"],"React Hook useEffect has missing dependencies: 'currentUser.premises', 'handleShowCalendarClick', 'isAdmin', and 'response'. Either include them or remove the dependency array.",["928"],"React Hook useEffect has missing dependencies: 'getEanCode' and 'handleChange'. Either include them or remove the dependency array.",["929"],"React Hook useEffect has missing dependencies: 'getSingleProduct', 'handleChangeType', and 'productObj.type'. Either include them or remove the dependency array.",["930"],"React Hook useEffect has a missing dependency: 'setSelectedImage'. Either include it or remove the dependency array.",["931"],"React Hook useEffect has missing dependencies: 'resetContactLenses', 'resetGlassesParameters', 'resetLenses', 'resetProduct', and 'setSelectedImage'. Either include them or remove the dependency array.",["932"],"React Hook useEffect has missing dependencies: 'getPost' and 'setSelectedImage'. Either include them or remove the dependency array.",["933"],"React Hook useEffect has missing dependencies: 'id' and 'setSelectedImage'. Either include them or remove the dependency array.",["934"],"React Hook useEffect has a missing dependency: 'resetBlog'. Either include it or remove the dependency array.",["935"],"'showCombinedProductModal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addUser', 'changeStep', 'order', and 'setOrder'. Either include them or remove the dependency array.",["936"],"React Hook useEffect has missing dependencies: 'changeStep' and 'resetOrder'. Either include them or remove the dependency array.",["937"],"React Hook useEffect has a missing dependency: 'blogsData'. Either include it or remove the dependency array.",["938"],["939"],"React Hook useEffect has a missing dependency: 'blogsData.response?.blogs'. Either include it or remove the dependency array.",["940"],"React Hook useEffect has a missing dependency: 'response.calendar'. Either include it or remove the dependency array.",["941"],"'CouponOverviewContainer' is defined but never used.","'searchQuery' is assigned a value but never used.","'setSearchQuery' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCoupons'. Either include it or remove the dependency array.",["942"],"React Hook useEffect has a missing dependency: 'getCoupon'. Either include it or remove the dependency array.",["943"],"React Hook useEffect has a missing dependency: 'resetCoupons'. Either include it or remove the dependency array.",["944"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'currentPage'. Either include it or remove the dependency array.",["945"],["946"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","Expected '===' and instead saw '=='.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'path' and 'skip'. Either include them or remove the dependency array.",["947"],"React Hook useEffect has missing dependencies: 'requestOptions' and 'skip'. Either include them or remove the dependency array.",["948"],["949"],"'ThreeColRow' is defined but never used.","React Hook useEffect has missing dependencies: 'firstDayIndex', 'lastDay', 'month', 'nextDays', 'response.calendar', and 'year'. Either include them or remove the dependency array.",["950"],"React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["951"],["952"],["953"],["954"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'showModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'response.lenses'. Either include it or remove the dependency array.",["955"],"React Hook useEffect has a missing dependency: 'response.products'. Either include it or remove the dependency array.",["956"],"React Hook useEffect has a missing dependency: 'getFilteredUsers'. Either include it or remove the dependency array.",["957"],"React Hook useEffect has missing dependencies: 'getFilteredUsers' and 'users'. Either include them or remove the dependency array.",["958"],"React Hook useEffect has a missing dependency: 'action'. Either include it or remove the dependency array. If 'action' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["959"],"React Hook useEffect has missing dependencies: 'handleChange', 'parameters.addition', and 'parameters.diopters'. Either include them or remove the dependency array. If 'handleChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["960"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook useEffect has a missing dependency: 'examinationData.response'. Either include it or remove the dependency array.",["961"],"React Hook useEffect has a missing dependency: 'response?.booking'. Either include it or remove the dependency array.",["962"],"'CloseButton' is defined but never used.","'ModalContainer' is defined but never used.","React Hook useEffect has a missing dependency: 'handleOrderDetailChange'. Either include it or remove the dependency array.",["963"],"'useEffect' is defined but never used.","'discountType' is assigned a value but never used.","'handleDiscountChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addLensesParameters' and 'idx'. Either include them or remove the dependency array.",["964"],["965"],"'CustomCheckbox' is defined but never used.","'closeModal' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"966","fix":"967"},{"desc":"968","fix":"969"},{"desc":"970","fix":"971"},{"desc":"972","fix":"973"},{"desc":"974","fix":"975"},{"desc":"976","fix":"977"},{"desc":"978","fix":"979"},{"desc":"980","fix":"981"},{"desc":"982","fix":"983"},{"desc":"984","fix":"985"},{"desc":"986","fix":"987"},{"desc":"988","fix":"989"},{"desc":"990","fix":"991"},{"desc":"992","fix":"993"},{"desc":"994","fix":"995"},{"desc":"996","fix":"997"},{"desc":"998","fix":"999"},{"desc":"1000","fix":"1001"},{"desc":"1002","fix":"1003"},{"desc":"1004","fix":"1005"},{"desc":"1006","fix":"1007"},{"desc":"1008","fix":"1009"},{"desc":"1010","fix":"1011"},{"desc":"1012","fix":"1013"},{"desc":"1014","fix":"1015"},{"desc":"1016","fix":"1017"},{"desc":"1018","fix":"1019"},{"desc":"1020","fix":"1021"},{"desc":"1022","fix":"1023"},{"desc":"1024","fix":"1025"},{"desc":"1026","fix":"1027"},{"desc":"1028","fix":"1029"},{"desc":"1030","fix":"1031"},{"desc":"1032","fix":"1033"},{"desc":"1034","fix":"1035"},{"desc":"1036","fix":"1037"},{"desc":"1038","fix":"1039"},{"desc":"1040","fix":"1041"},{"desc":"1036","fix":"1042"},{"desc":"1043","fix":"1044"},{"desc":"1045","fix":"1046"},{"desc":"1047","fix":"1048"},{"desc":"1049","fix":"1050"},{"desc":"1051","fix":"1052"},{"desc":"1053","fix":"1054"},{"desc":"1055","fix":"1056"},{"desc":"1057","fix":"1058"},{"desc":"1059","fix":"1060"},{"desc":"1061","fix":"1062"},{"desc":"1063","fix":"1064"},{"desc":"1065","fix":"1066"},"Update the dependencies array to be: [getStats, token]",{"range":"1067","text":"1068"},"Update the dependencies array to be: [user, user.fName, user.lName]",{"range":"1069","text":"1070"},"Update the dependencies array to be: [activeCategoryTypeTab, getLenses, getProductsByQuery, productCategoryTypeTabs, products]",{"range":"1071","text":"1072"},"Update the dependencies array to be: [product, product.name]",{"range":"1073","text":"1074"},"Update the dependencies array to be: [getProductsByQuery, products]",{"range":"1075","text":"1076"},"Update the dependencies array to be: [activeCategoryTypeTab, getProductsByQuery, products, searchQuery]",{"range":"1077","text":"1078"},"Update the dependencies array to be: [closeModal, isLoading, response]",{"range":"1079","text":"1080"},"Update the dependencies array to be: [activeIndex, refetch, searchQuery]",{"range":"1081","text":"1082"},"Update the dependencies array to be: [activeIndex, getAnalytics]",{"range":"1083","text":"1084"},"Update the dependencies array to be: [user.fName, user.lName, userObj, userObj.fName, userObj.lName]",{"range":"1085","text":"1086"},"Update the dependencies array to be: [getUser, id]",{"range":"1087","text":"1088"},"Update the dependencies array to be: [handleChange, resetUser]",{"range":"1089","text":"1090"},"Update the dependencies array to be: [isFetching, response, activeIndex, closeModal]",{"range":"1091","text":"1092"},"Update the dependencies array to be: [currentUser.premises, handleShowCalendarClick, isAdmin, isLoading, response]",{"range":"1093","text":"1094"},"Update the dependencies array to be: [id, eanCode, productObj.type, productObj.eanCode, product.type, getEanCode, handleChange]",{"range":"1095","text":"1096"},"Update the dependencies array to be: [getSingleProduct, handleChangeType, id, product.type, productObj.type]",{"range":"1097","text":"1098"},"Update the dependencies array to be: [product.image, lenses.image, setSelectedImage]",{"range":"1099","text":"1100"},"Update the dependencies array to be: [resetContactLenses, resetGlassesParameters, resetLenses, resetProduct, setSelectedImage]",{"range":"1101","text":"1102"},"Update the dependencies array to be: [getPost, id, setSelectedImage]",{"range":"1103","text":"1104"},"Update the dependencies array to be: [id, post, setSelectedImage]",{"range":"1105","text":"1106"},"Update the dependencies array to be: [resetBlog]",{"range":"1107","text":"1108"},"Update the dependencies array to be: [userId, orderId, userData.response, orderData.response, changeStep, addUser, setOrder, order]",{"range":"1109","text":"1110"},"Update the dependencies array to be: [changeStep, resetOrder]",{"range":"1111","text":"1112"},"Update the dependencies array to be: [blogsData, searchQuery]",{"range":"1113","text":"1114"},"Update the dependencies array to be: [activeIndex, blogsData]",{"range":"1115","text":"1116"},"Update the dependencies array to be: [blogsData.isLoading, blogsData.response?.blogs]",{"range":"1117","text":"1118"},"Update the dependencies array to be: [isFetching, response.calendar]",{"range":"1119","text":"1120"},"Update the dependencies array to be: [coupons, getCoupons]",{"range":"1121","text":"1122"},"Update the dependencies array to be: [couponId, getCoupon]",{"range":"1123","text":"1124"},"Update the dependencies array to be: [resetCoupons]",{"range":"1125","text":"1126"},"Update the dependencies array to be: [currentPage, listItems]",{"range":"1127","text":"1128"},"Update the dependencies array to be: [currentPage, handleClickPrev]",{"range":"1129","text":"1130"},"Update the dependencies array to be: [path, refetchIndex, skip]",{"range":"1131","text":"1132"},"Update the dependencies array to be: [refetchIndex, path, skip, requestOptions]",{"range":"1133","text":"1134"},"Update the dependencies array to be: [refetchIndex, path, id, skip, requestOptions]",{"range":"1135","text":"1136"},"Update the dependencies array to be: [firstDayIndex, isLoading, lastDay, month, nextDays, response.calendar, year]",{"range":"1137","text":"1138"},"Update the dependencies array to be: [month, refetch]",{"range":"1139","text":"1140"},"Update the dependencies array to be: [calendar, refetch]",{"range":"1141","text":"1142"},{"range":"1143","text":"1138"},"Update the dependencies array to be: [day, refetch]",{"range":"1144","text":"1145"},"Update the dependencies array to be: [isLoading, response.lenses]",{"range":"1146","text":"1147"},"Update the dependencies array to be: [isLoading, response.products]",{"range":"1148","text":"1149"},"Update the dependencies array to be: [getFilteredUsers, users]",{"range":"1150","text":"1151"},"Update the dependencies array to be: [getFilteredUsers, searchQuery, users]",{"range":"1152","text":"1153"},"Update the dependencies array to be: [action, ref]",{"range":"1154","text":"1155"},"Update the dependencies array to be: [handleChange, parameters.addition, parameters.diopters]",{"range":"1156","text":"1157"},"Update the dependencies array to be: [examinationData.isLoading, examinationData.response]",{"range":"1158","text":"1159"},"Update the dependencies array to be: [selectedBooking, isLoading, response?.booking]",{"range":"1160","text":"1161"},"Update the dependencies array to be: [handleOrderDetailChange, isUpdating, order]",{"range":"1162","text":"1163"},"Update the dependencies array to be: [addLensesParameters, contactLenses, idx]",{"range":"1164","text":"1165"},"Update the dependencies array to be: [examinationToUpdate, examinationData.isLoading, examinationData.response]",{"range":"1166","text":"1167"},[6458,6465],"[getStats, token]",[3440,3464],"[user, user.fName, user.lName]",[23011,23034],"[activeCategoryTypeTab, getLenses, getProductsByQuery, productCategoryTypeTabs, products]",[23845,23859],"[product, product.name]",[2680,2690],"[getProductsByQuery, products]",[2919,2932],"[activeCategoryTypeTab, getProductsByQuery, products, searchQuery]",[2619,2630],"[closeModal, isLoading, response]",[2908,2921],"[activeIndex, refetch, searchQuery]",[1474,1487],"[activeIndex, getAnalytics]",[3609,3639],"[user.fName, user.lName, userObj, userObj.fName, userObj.lName]",[3743,3747],"[getUser, id]",[4477,4479],"[handleChange, resetUser]",[3441,3476],"[isFetching, response, activeIndex, closeModal]",[4649,4660],"[currentUser.premises, handleShowCalendarClick, isAdmin, isLoading, response]",[12112,12176],"[id, eanCode, productObj.type, productObj.eanCode, product.type, getEanCode, handleChange]",[12559,12577],"[getSingleProduct, handleChangeType, id, product.type, productObj.type]",[12773,12802],"[product.image, lenses.image, setSelectedImage]",[13088,13090],"[resetContactLenses, resetGlassesParameters, resetLenses, resetProduct, setSelectedImage]",[2219,2223],"[getPost, id, setSelectedImage]",[2715,2721],"[id, post, setSelectedImage]",[3015,3017],"[resetBlog]",[3061,3117],"[userId, orderId, userData.response, orderData.response, changeStep, addUser, setOrder, order]",[3396,3398],"[changeStep, resetOrder]",[2315,2328],"[blogsData, searchQuery]",[2831,2844],"[activeIndex, blogsData]",[2970,2991],"[blogsData.isLoading, blogsData.response?.blogs]",[4661,4673],"[isFetching, response.calendar]",[1187,1196],"[coupons, getCoupons]",[1197,1207],"[couponId, getCoupon]",[1299,1301],"[resetCoupons]",[691,702],"[currentPage, listItems]",[1000,1017],"[currentPage, handleClickPrev]",[988,1002],"[path, refetchIndex, skip]",[2303,2323],"[refetchIndex, path, skip, requestOptions]",[3550,3574],"[refetchIndex, path, id, skip, requestOptions]",[2106,2117],"[firstDayIndex, isLoading, lastDay, month, nextDays, response.calendar, year]",[1086,1093],"[month, refetch]",[1181,1191],"[calendar, refetch]",[1722,1733],[610,615],"[day, refetch]",[1815,1826],"[isLoading, response.lenses]",[1911,1922],"[isLoading, response.products]",[1353,1360],"[getFilteredUsers, users]",[1594,1607],"[getFilteredUsers, searchQuery, users]",[467,472],"[action, ref]",[1541,1637],"[handleChange, parameters.addition, parameters.diopters]",[1801,1828],"[examinationData.isLoading, examinationData.response]",[2140,2168],"[selectedBooking, isLoading, response?.booking]",[3752,3771],"[handleOrderDetailChange, isUpdating, order]",[1141,1156],"[addLensesParameters, contactLenses, idx]",[3125,3173],"[examinationToUpdate, examinationData.isLoading, examinationData.response]"]
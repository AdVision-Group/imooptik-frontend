[{"/imooptik-frontend/src/index.js":"1","/imooptik-frontend/src/reportWebVitals.js":"2","/imooptik-frontend/src/App.jsx":"3","/imooptik-frontend/src/context/auth/auth.context.jsx":"4","/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx":"5","/imooptik-frontend/src/global.styles.jsx":"6","/imooptik-frontend/src/context/auth/auth.queries.jsx":"7","/imooptik-frontend/src/pages/dashboard/dashboard.jsx":"8","/imooptik-frontend/src/pages/reset-password/reset-password.jsx":"9","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx":"10","/imooptik-frontend/src/components/popup/pop-up.component.jsx":"11","/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx":"12","/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx":"13","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx":"14","/imooptik-frontend/src/components/popup/pop.up.styles.jsx":"15","/imooptik-frontend/src/context/user/user.context.jsx":"16","/imooptik-frontend/src/components/sidenav/sidenav.component.jsx":"17","/imooptik-frontend/src/context/image/image.context.jsx":"18","/imooptik-frontend/src/context/warehouse/warehouse.context.jsx":"19","/imooptik-frontend/src/context/booking/booking.context.jsx":"20","/imooptik-frontend/src/context/examination/examination.context.jsx":"21","/imooptik-frontend/src/context/orders/orders.context.jsx":"22","/imooptik-frontend/src/context/analytics/analytics.context.jsx":"23","/imooptik-frontend/src/context/coupons/coupons.context.jsx":"24","/imooptik-frontend/src/components/sign-in/sign-in.component.jsx":"25","/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx":"26","/imooptik-frontend/src/components/custom-input/custom-input.component.jsx":"27","/imooptik-frontend/src/context/blog/blog.context.jsx":"28","/imooptik-frontend/src/components/spinner/spinner.component.jsx":"29","/imooptik-frontend/src/components/custom-button/custom-button.component.jsx":"30","/imooptik-frontend/src/sections/orders/orders.section.jsx":"31","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx":"32","/imooptik-frontend/src/sections/analytics/analytics.section.jsx":"33","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx":"34","/imooptik-frontend/src/sections/product/product.section.jsx":"35","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx":"36","/imooptik-frontend/src/sections/customers/customers.section.jsx":"37","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx":"38","/imooptik-frontend/src/sections/booking/booking.section.jsx":"39","/imooptik-frontend/src/sections/coupons/coupons.section.jsx":"40","/imooptik-frontend/src/sections/coupon/coupon.section.jsx":"41","/imooptik-frontend/src/sections/order/order.section.jsx":"42","/imooptik-frontend/src/sections/calendar/calendar.section.jsx":"43","/imooptik-frontend/src/sections/post/post.section.jsx":"44","/imooptik-frontend/src/context/user/user.queries.jsx":"45","/imooptik-frontend/src/context/user/user.utils.jsx":"46","/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx":"47","/imooptik-frontend/src/context/image/image.queries.jsx":"48","/imooptik-frontend/src/context/booking/booking.queries.jsx":"49","/imooptik-frontend/src/context/booking/booking.utils.jsx":"50","/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx":"51","/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx":"52","/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx":"53","/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx":"54","/imooptik-frontend/src/components/spinner/spinner.styles.jsx":"55","/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx":"56","/imooptik-frontend/src/context/blog/blog.queries.jsx":"57","/imooptik-frontend/src/sections/orders/orders.styles.jsx":"58","/imooptik-frontend/src/context/orders/orders.utils.jsx":"59","/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx":"60","/imooptik-frontend/src/sections/analytics/analytics.styles.jsx":"61","/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx":"62","/imooptik-frontend/src/sections/product/product.styles.jsx":"63","/imooptik-frontend/src/sections/customers/customers.styles.jsx":"64","/imooptik-frontend/src/sections/post/post.styles.jsx":"65","/imooptik-frontend/src/sections/calendar/calendar.styles.jsx":"66","/imooptik-frontend/src/sections/order/order.styles.jsx":"67","/imooptik-frontend/src/sections/coupons/coupons.styles.jsx":"68","/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx":"69","/imooptik-frontend/src/sections/coupon/coupon.styles.jsx":"70","/imooptik-frontend/src/sections/booking/booking.styles.jsx":"71","/imooptik-frontend/src/components/section-header/section-header.component.jsx":"72","/imooptik-frontend/src/components/order-overview/order-overview.component.jsx":"73","/imooptik-frontend/src/hooks/useFetch.jsx":"74","/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx":"75","/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx":"76","/imooptik-frontend/src/components/pagination/pagination.component.jsx":"77","/imooptik-frontend/src/components/user-form/user-form.component.jsx":"78","/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx":"79","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx":"80","/imooptik-frontend/src/components/modal-images/modal-images.component.jsx":"81","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx":"82","/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.component.jsx":"83","/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.component.jsx":"84","/imooptik-frontend/src/components/product-overview/product-overview.component.jsx":"85","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx":"86","/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx":"87","/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx":"88","/imooptik-frontend/src/components/modal-finish-combined-product/modal-finish-combined-product.component.jsx":"89","/imooptik-frontend/src/components/calendar/calendar.component.jsx":"90","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx":"91","/imooptik-frontend/src/sections/order/steps/4-summary/summary.component.jsx":"92","/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.component.jsx":"93","/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.component.jsx":"94","/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.component.jsx":"95","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx":"96","/imooptik-frontend/src/components/section-header/section-header.styles.jsx":"97","/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx":"98","/imooptik-frontend/src/components/pagination/pagination.styles.jsx":"99","/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx":"100","/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx":"101","/imooptik-frontend/src/hooks/useOutsideAlerter.jsx":"102","/imooptik-frontend/src/components/user-form/user.form-styles.jsx":"103","/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx":"104","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx":"105","/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx":"106","/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx":"107","/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx":"108","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx":"109","/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx":"110","/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.styles.jsx":"111","/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx":"112","/imooptik-frontend/src/components/calendar/calendar.styles.jsx":"113","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx":"114","/imooptik-frontend/src/components/modal-finish-combined-product/modal-finish-combined-product.styles.jsx":"115","/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx":"116","/imooptik-frontend/src/components/examinations-overview/examinations-overview.component.jsx":"117","/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx":"118","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx":"119","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx":"120","/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.styles.jsx":"121","/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.styles.jsx":"122","/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.styles.jsx":"123","/imooptik-frontend/src/sections/order/steps/4-summary/summary.styles.jsx":"124","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.component.jsx":"125","/imooptik-frontend/src/components/order-summary-lenses-name/order-summary-lenses-name.component.jsx":"126","/imooptik-frontend/src/components/order-summary-product-name/order-summary-product-name.component.jsx":"127","/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx":"128","/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx":"129","/imooptik-frontend/src/components/examinations-overview/examinations-overview.styles.jsx":"130","/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx":"131","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx":"132","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx":"133","/imooptik-frontend/src/components/examination-user/examination-user.component.jsx":"134","/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.component.jsx":"135","/imooptik-frontend/src/utils/parameters.utils.jsx":"136","/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx":"137","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.styles.jsx":"138","/imooptik-frontend/src/components/examination-user/examination-user.styles.jsx":"139","/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx":"140","/imooptik-frontend/src/utils/orders.utils.jsx":"141","/imooptik-frontend/src/utils/warehouse.utils.jsx":"142","/imooptik-frontend/src/utils/calendar.utils.jsx":"143","/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.component.jsx":"144","/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.styles.jsx":"145","/imooptik-frontend/src/components/list-arrows/list-arrows.component.jsx":"146","/imooptik-frontend/src/components/list-arrows/list-arrows.styles.jsx":"147"},{"size":717,"mtime":1608670306490,"results":"148","hashOfConfig":"149"},{"size":362,"mtime":1608191294784,"results":"150","hashOfConfig":"149"},{"size":1717,"mtime":1612809435787,"results":"151","hashOfConfig":"149"},{"size":6931,"mtime":1612361908070,"results":"152","hashOfConfig":"149"},{"size":1076,"mtime":1610126635393,"results":"153","hashOfConfig":"149"},{"size":3670,"mtime":1612828654617,"results":"154","hashOfConfig":"149"},{"size":2292,"mtime":1610635788267,"results":"155","hashOfConfig":"149"},{"size":8769,"mtime":1612394282200,"results":"156","hashOfConfig":"149"},{"size":1667,"mtime":1608613259561,"results":"157","hashOfConfig":"149"},{"size":840,"mtime":1609978179243,"results":"158","hashOfConfig":"149"},{"size":714,"mtime":1609965412857,"results":"159","hashOfConfig":"149"},{"size":652,"mtime":1612801843627,"results":"160","hashOfConfig":"149"},{"size":772,"mtime":1610476886850,"results":"161","hashOfConfig":"149"},{"size":545,"mtime":1612808589467,"results":"162","hashOfConfig":"149"},{"size":721,"mtime":1612808901067,"results":"163","hashOfConfig":"149"},{"size":11937,"mtime":1612454617870,"results":"164","hashOfConfig":"149"},{"size":2301,"mtime":1610505203270,"results":"165","hashOfConfig":"149"},{"size":4422,"mtime":1611960472114,"results":"166","hashOfConfig":"149"},{"size":25589,"mtime":1612306446580,"results":"167","hashOfConfig":"149"},{"size":8166,"mtime":1611021415104,"results":"168","hashOfConfig":"149"},{"size":3493,"mtime":1612458174320,"results":"169","hashOfConfig":"149"},{"size":3930,"mtime":1612737665316,"results":"170","hashOfConfig":"149"},{"size":1778,"mtime":1611793524374,"results":"171","hashOfConfig":"149"},{"size":7011,"mtime":1611198583300,"results":"172","hashOfConfig":"149"},{"size":1925,"mtime":1609978226453,"results":"173","hashOfConfig":"149"},{"size":1466,"mtime":1609978281513,"results":"174","hashOfConfig":"149"},{"size":639,"mtime":1608689089980,"results":"175","hashOfConfig":"149"},{"size":4047,"mtime":1612461301680,"results":"176","hashOfConfig":"149"},{"size":178,"mtime":1608409397640,"results":"177","hashOfConfig":"149"},{"size":283,"mtime":1608325857586,"results":"178","hashOfConfig":"149"},{"size":6150,"mtime":1612745666846,"results":"179","hashOfConfig":"149"},{"size":6662,"mtime":1612394380890,"results":"180","hashOfConfig":"149"},{"size":4654,"mtime":1612483919380,"results":"181","hashOfConfig":"149"},{"size":4695,"mtime":1612745837286,"results":"182","hashOfConfig":"149"},{"size":17310,"mtime":1611960472124,"results":"183","hashOfConfig":"149"},{"size":4528,"mtime":1612745507936,"results":"184","hashOfConfig":"149"},{"size":4598,"mtime":1612745524136,"results":"185","hashOfConfig":"149"},{"size":810,"mtime":1610132345623,"results":"186","hashOfConfig":"149"},{"size":4995,"mtime":1612816624907,"results":"187","hashOfConfig":"149"},{"size":2965,"mtime":1612745938976,"results":"188","hashOfConfig":"149"},{"size":5575,"mtime":1612745901696,"results":"189","hashOfConfig":"149"},{"size":6067,"mtime":1612483896970,"results":"190","hashOfConfig":"149"},{"size":7353,"mtime":1611020836214,"results":"191","hashOfConfig":"149"},{"size":9601,"mtime":1611079105190,"results":"192","hashOfConfig":"149"},{"size":3530,"mtime":1611960472114,"results":"193","hashOfConfig":"149"},{"size":897,"mtime":1611960472114,"results":"194","hashOfConfig":"149"},{"size":4993,"mtime":1612828177277,"results":"195","hashOfConfig":"149"},{"size":1560,"mtime":1610106635382,"results":"196","hashOfConfig":"149"},{"size":2775,"mtime":1611021490654,"results":"197","hashOfConfig":"149"},{"size":328,"mtime":1611016532294,"results":"198","hashOfConfig":"149"},{"size":5227,"mtime":1611960472114,"results":"199","hashOfConfig":"149"},{"size":898,"mtime":1609978275513,"results":"200","hashOfConfig":"149"},{"size":1331,"mtime":1612803190107,"results":"201","hashOfConfig":"149"},{"size":975,"mtime":1612808569627,"results":"202","hashOfConfig":"149"},{"size":377,"mtime":1608409635720,"results":"203","hashOfConfig":"149"},{"size":440,"mtime":1609635534260,"results":"204","hashOfConfig":"149"},{"size":1793,"mtime":1608678905090,"results":"205","hashOfConfig":"149"},{"size":1115,"mtime":1612827087027,"results":"206","hashOfConfig":"149"},{"size":834,"mtime":1612485945670,"results":"207","hashOfConfig":"149"},{"size":688,"mtime":1612805274117,"results":"208","hashOfConfig":"149"},{"size":1048,"mtime":1612807499207,"results":"209","hashOfConfig":"149"},{"size":1658,"mtime":1609636415920,"results":"210","hashOfConfig":"149"},{"size":1008,"mtime":1612827031697,"results":"211","hashOfConfig":"149"},{"size":1018,"mtime":1612827675137,"results":"212","hashOfConfig":"149"},{"size":1842,"mtime":1612807438967,"results":"213","hashOfConfig":"149"},{"size":1023,"mtime":1612828693457,"results":"214","hashOfConfig":"149"},{"size":454,"mtime":1612803607557,"results":"215","hashOfConfig":"149"},{"size":1294,"mtime":1612826862757,"results":"216","hashOfConfig":"149"},{"size":728,"mtime":1610132354653,"results":"217","hashOfConfig":"149"},{"size":1157,"mtime":1612828486397,"results":"218","hashOfConfig":"149"},{"size":1262,"mtime":1612816027677,"results":"219","hashOfConfig":"149"},{"size":1370,"mtime":1611960472114,"results":"220","hashOfConfig":"149"},{"size":3971,"mtime":1612467942730,"results":"221","hashOfConfig":"149"},{"size":3631,"mtime":1612564271900,"results":"222","hashOfConfig":"149"},{"size":624,"mtime":1609280754422,"results":"223","hashOfConfig":"149"},{"size":320,"mtime":1611163718930,"results":"224","hashOfConfig":"149"},{"size":834,"mtime":1609973813373,"results":"225","hashOfConfig":"149"},{"size":11444,"mtime":1612474871810,"results":"226","hashOfConfig":"149"},{"size":16547,"mtime":1611960472104,"results":"227","hashOfConfig":"149"},{"size":3741,"mtime":1611960472114,"results":"228","hashOfConfig":"149"},{"size":8363,"mtime":1611078296630,"results":"229","hashOfConfig":"149"},{"size":7495,"mtime":1611960472114,"results":"230","hashOfConfig":"149"},{"size":3942,"mtime":1611960472114,"results":"231","hashOfConfig":"149"},{"size":7224,"mtime":1611960472114,"results":"232","hashOfConfig":"149"},{"size":1416,"mtime":1611960472114,"results":"233","hashOfConfig":"149"},{"size":354,"mtime":1610748624680,"results":"234","hashOfConfig":"149"},{"size":651,"mtime":1608506295620,"results":"235","hashOfConfig":"149"},{"size":425,"mtime":1609365301650,"results":"236","hashOfConfig":"149"},{"size":18572,"mtime":1612482944390,"results":"237","hashOfConfig":"149"},{"size":3256,"mtime":1612826321167,"results":"238","hashOfConfig":"149"},{"size":937,"mtime":1612810490397,"results":"239","hashOfConfig":"149"},{"size":7960,"mtime":1612738265636,"results":"240","hashOfConfig":"149"},{"size":3083,"mtime":1612401214790,"results":"241","hashOfConfig":"149"},{"size":4062,"mtime":1612805777737,"results":"242","hashOfConfig":"149"},{"size":2999,"mtime":1612400717780,"results":"243","hashOfConfig":"149"},{"size":1698,"mtime":1612826981347,"results":"244","hashOfConfig":"149"},{"size":1088,"mtime":1612802413197,"results":"245","hashOfConfig":"149"},{"size":2624,"mtime":1612827167197,"results":"246","hashOfConfig":"149"},{"size":646,"mtime":1609973838353,"results":"247","hashOfConfig":"149"},{"size":526,"mtime":1612802424397,"results":"248","hashOfConfig":"149"},{"size":782,"mtime":1612802325417,"results":"249","hashOfConfig":"149"},{"size":1400,"mtime":1611365536654,"results":"250","hashOfConfig":"149"},{"size":2225,"mtime":1612827757387,"results":"251","hashOfConfig":"149"},{"size":1000,"mtime":1612827711647,"results":"252","hashOfConfig":"149"},{"size":1301,"mtime":1612828444267,"results":"253","hashOfConfig":"149"},{"size":4026,"mtime":1612804535867,"results":"254","hashOfConfig":"149"},{"size":1564,"mtime":1612828401497,"results":"255","hashOfConfig":"149"},{"size":2193,"mtime":1612808323487,"results":"256","hashOfConfig":"149"},{"size":623,"mtime":1612806111637,"results":"257","hashOfConfig":"149"},{"size":1124,"mtime":1612806552957,"results":"258","hashOfConfig":"149"},{"size":1115,"mtime":1612828420327,"results":"259","hashOfConfig":"149"},{"size":447,"mtime":1609638204590,"results":"260","hashOfConfig":"149"},{"size":1710,"mtime":1612828723667,"results":"261","hashOfConfig":"149"},{"size":1061,"mtime":1612826498967,"results":"262","hashOfConfig":"149"},{"size":3703,"mtime":1612805968647,"results":"263","hashOfConfig":"149"},{"size":3159,"mtime":1612467346790,"results":"264","hashOfConfig":"149"},{"size":8127,"mtime":1612447257340,"results":"265","hashOfConfig":"149"},{"size":6221,"mtime":1612310677640,"results":"266","hashOfConfig":"149"},{"size":1550,"mtime":1612478391310,"results":"267","hashOfConfig":"149"},{"size":681,"mtime":1610146980773,"results":"268","hashOfConfig":"149"},{"size":1498,"mtime":1612827490807,"results":"269","hashOfConfig":"149"},{"size":1457,"mtime":1612827426747,"results":"270","hashOfConfig":"149"},{"size":1593,"mtime":1612827539257,"results":"271","hashOfConfig":"149"},{"size":2986,"mtime":1612827630027,"results":"272","hashOfConfig":"149"},{"size":8136,"mtime":1612737144186,"results":"273","hashOfConfig":"149"},{"size":434,"mtime":1612445561440,"results":"274","hashOfConfig":"149"},{"size":442,"mtime":1612445565000,"results":"275","hashOfConfig":"149"},{"size":341,"mtime":1610810143010,"results":"276","hashOfConfig":"149"},{"size":1432,"mtime":1612827268487,"results":"277","hashOfConfig":"149"},{"size":1903,"mtime":1612827794387,"results":"278","hashOfConfig":"149"},{"size":2165,"mtime":1612803915567,"results":"279","hashOfConfig":"149"},{"size":486,"mtime":1610505703940,"results":"280","hashOfConfig":"149"},{"size":1345,"mtime":1612827781337,"results":"281","hashOfConfig":"149"},{"size":492,"mtime":1612389141090,"results":"282","hashOfConfig":"149"},{"size":14309,"mtime":1612458435260,"results":"283","hashOfConfig":"149"},{"size":806,"mtime":1612387601160,"results":"284","hashOfConfig":"149"},{"size":349,"mtime":1612803624657,"results":"285","hashOfConfig":"149"},{"size":2389,"mtime":1612806425247,"results":"286","hashOfConfig":"149"},{"size":162,"mtime":1612389165420,"results":"287","hashOfConfig":"149"},{"size":2279,"mtime":1612808799457,"results":"288","hashOfConfig":"149"},{"size":587,"mtime":1612445089420,"results":"289","hashOfConfig":"149"},{"size":441,"mtime":1612482221800,"results":"290","hashOfConfig":"149"},{"size":2902,"mtime":1612826615647,"results":"291","hashOfConfig":"149"},{"size":664,"mtime":1612564271900,"results":"292","hashOfConfig":"149"},{"size":556,"mtime":1612828625897,"results":"293","hashOfConfig":"149"},{"size":1777,"mtime":1612745986746,"results":"294","hashOfConfig":"149"},{"size":602,"mtime":1612796947987,"results":"295","hashOfConfig":"149"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},"1lk1amn",{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"298"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"298"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"298"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"298"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"298"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"298"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"298"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"298"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"298"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"298"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"298"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"298"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"298"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"298"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"298"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"298"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"298"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"298"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"298"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"298"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"298"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"298"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"298"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"298"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"298"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"298"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"298"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"298"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"298"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"298"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"298"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"298"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"619","messages":"620","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"298"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},"/imooptik-frontend/src/index.js",[],["624","625"],"/imooptik-frontend/src/reportWebVitals.js",[],"/imooptik-frontend/src/App.jsx",[],"/imooptik-frontend/src/context/auth/auth.context.jsx",["626"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { getUser, createNewUser, resetPassword, setNewPassword, fetchUser } from './auth.queries'\n\nexport const AuthContext = createContext({\n    currentUser: null,\n    isAdmin: false,\n    isOptometrist: false,\n    token: null,\n    stats: null,\n    logIn: () => { },\n    logOut: () => { },\n    register: () => { },\n    handleResetPassword: () => { },\n    handleCreatingNewPassword: () => { }\n})\n\nconst AuthProvider = ({ children }) => {\n    const { setShowModal, setIsLoading, getMessage, closeModal } = useContext(LoadingModalContext)\n    const [currentUser, setCurrentUser] = useState(null)\n    const [token, setToken] = useState(null)\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [isOptometrist, setIsOptometrist] = useState(false)\n    const [stats, setStats] = useState(null)\n\n    const checkIfOptometrist = user => {\n        if (user.optometrist) {\n            setIsOptometrist(true)\n        } else {\n            setIsOptometrist(false)\n        }\n    }\n\n    const checkIfAdmin = (user) => {\n        if (user.admin > 1) {\n            setIsAdmin(true)\n        } else {\n            setIsAdmin(false)\n        }\n    }\n\n    const logIn = async (email, password) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await getUser({ email, password })\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n            if (user.user) {\n                setCurrentUser(user.user)\n                setToken(user.authToken)\n                localStorage.setItem(process.env.REACT_APP_ADMIN_TOKEN, user.authToken)\n                checkIfAdmin(user.user)\n\n                closeModal()\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const logOut = () => {\n        localStorage.removeItem(process.env.REACT_APP_ADMIN_TOKEN)\n        setCurrentUser(null)\n        setToken(null)\n    }\n\n    const register = async (name, email, password, confirmPassword) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!name) {\n            console.log(\"Ziadne meno\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n\n        if (password !== confirmPassword) {\n            console.log(\"hesla sa nezhoduju\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await createNewUser({ name, email, password })\n            const data = await response.json()\n\n            setIsLoading(false)\n            getMessage(data.message)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleResetPassword = async (email) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await resetPassword(email)\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleCreatingNewPassword = async (resetSecret, password) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        console.log(resetSecret)\n\n        if (!resetSecret) {\n            console.log(\"Ziadny reset token\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await setNewPassword(resetSecret, password)\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const getStats = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/stats/collectionCounts`, requestOptions)\n            const data = await response.json()\n\n            setStats(data)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN)) {\n            setToken(localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (token) {\n            const getUserProfile = async () => {\n                const response = await fetchUser(token)\n                const data = await response.json()\n                if (data.user) {\n                    setCurrentUser(data.user)\n                    checkIfAdmin(data.user)\n                    checkIfOptometrist(data.user)\n                }\n            }\n            getUserProfile()\n            getStats()\n        }\n    }, [token])\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token,\n                currentUser,\n                isAdmin,\n                isOptometrist,\n                stats,\n                logIn,\n                logOut,\n                register,\n                handleResetPassword,\n                handleCreatingNewPassword\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthProvider","/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx",[],"/imooptik-frontend/src/global.styles.jsx",[],"/imooptik-frontend/src/context/auth/auth.queries.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset-password.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx",[],"/imooptik-frontend/src/components/popup/pop-up.component.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx",[],"/imooptik-frontend/src/components/popup/pop.up.styles.jsx",[],"/imooptik-frontend/src/context/user/user.context.jsx",["627","628","629"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\n\nimport {\n    fetchUsers,\n    fetchUser,\n    patchUser,\n    postAdmin,\n    postUser,\n} from './user.queries'\n\nimport {\n    initUserObj\n} from './user.utils'\n\nexport const UserContext = createContext({\n    isUpdating: false,\n    activeIndex: 0,\n    handleChangeFilterItem: () => { },\n    filterItems: [],\n    totalCount: 0,\n    users: null,\n    user: null,\n    // getUsers: () => { },\n    getUser: () => { },\n    handleChange: () => { },\n    handleParameterChange: () => { },\n    handleCompanyChange: () => { },\n    updateUser: () => { },\n    resetUser: () => { },\n    formToShow: 0,\n    switchFormButtons: [],\n    toggleUserForm: () => { },\n    createUser: () => { },\n    getFilteredUsers: () => { },\n    getUserByQuery: () => { },\n})\n\nconst UserProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token } = useContext(AuthContext)\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    // ------------------------\n\n    const [user, setUser] = useState(initUserObj)\n    const [users, setUsers] = useState(null)\n    const [totalCount, setTotalCount] = useState(0)\n\n    // ------------------------\n\n    const [isUpdating, setIsUpdating] = useState(false)\n    const [activeIndex, setActiveIndex] = useState(0)\n    const filterItems = [\n        {\n            id: 0,\n            name: \"Zákaznici\",\n            filter: 0,\n        },\n        {\n            id: 1,\n            name: \"Zamestnanci\",\n            filter: 1,\n        },\n        {\n            id: 2,\n            name: \"Vedúci\",\n            filter: 2,\n        },\n        // {\n        //     id: 3,\n        //     name: \"Velký brat\",\n        //     filter: 3,\n        // }\n    ]\n\n    // ------------------------\n\n    const [formToShow, setFormToShow] = useState(0)\n    const switchFormButtons = [\n        {\n            name: \"Zákazník\"\n        },\n        {\n            name: \"Zamestnanec\"\n        }\n    ]\n\n    const toggleUserForm = (e, idx) => {\n        e.preventDefault()\n        setFormToShow(idx)\n    }\n\n    // ------------------------\n\n\n    const handleChangeFilterItem = (itemIndex) => {\n        setActiveIndex(itemIndex)\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n\n        console.log(name, value)\n        setUser({\n            ...user,\n            [name]: value\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = user.lenses[name]\n        arr[idx] = value === '' ? 1001 : value\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleCompanyChange = (e) => {\n        const { name, value } = e.target\n        setUser({\n            ...user,\n            company: {\n                ...user.company,\n                [name]: value\n            }\n        })\n    }\n\n    useEffect(() => {\n        setUser({\n            ...user,\n            name: user.fName + \" \" + user.lName\n        })\n    }, [user.fName, user.lName])\n\n    const resetUser = () => {\n        setUser(initUserObj)\n        setIsUpdating(false)\n        setFormToShow(0)\n    }\n\n    // ------------------------\n    // USER ACTIONS\n    // ------------------------\n\n    // Get all users\n    // const getUsers = async () => {\n    //     setIsLoading(true)\n    //     setShowModal(true)\n\n    //     try {\n    //         const response = await fetchUsers(token)\n    //         const data = await response.json()\n\n    //         console.log(data)\n    //         if (data.users) {\n    //             setUsers(data.users)\n    //             setTotalCount(data.count)\n    //             setIsLoading(false)\n    //             closeModal()\n\n    //         } else {\n    //             getMessage(data.message)\n    //             setIsLoading(false)\n    //         }\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n    // }\n\n    // Get single user\n    const getUser = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n        setIsUpdating(true)\n\n        try {\n            const response = await fetchUser(token, id)\n            const data = await response.json()\n\n            if (data.user) {\n                setUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n                setIsLoading(false)\n                closeModal()\n\n            } else {\n                getMessage(data.message)\n                setIsLoading(false)\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Update user\n    const updateUser = async (user, id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(user)\n\n        try {\n            const response = await patchUser(token, user, id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.message)\n                if (data.error === 'low-privileges') {\n                    getMessage(\"Nemôžeš upravovať užívateľov s väčšími alebo rovnakými právami ako máš ty\")\n\n                }\n                if (data.error === 'format') {\n                    getMessage(\"Chyba formátovania: \" + data.message)\n                }\n                if (data.error === 'format' && data.message.includes('lenses.cylinderAxes')) {\n                    getMessage(\"Osa musí byt väčšia alebo rovná 0\")\n                }\n                if (data.error === 'phone-exists') {\n                    getMessage(\"Telefónne číslo už v databázy existuje\")\n                }\n                setIsLoading(false)\n                return\n            }\n\n\n            setIsLoading(false)\n            closeModal()\n            push('/dashboard/zakaznici')\n            getFilteredUsers({\n                filters: {\n                    admin: activeIndex\n                }\n            })\n            // http://localhost:1000/#/dashboard/zakaznici\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createUser = async (user) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            if (formToShow === 0) {\n                let data = {}\n                if (!user._id) {\n                    console.log('creating new user')\n                    const response = await postUser(token, user)\n                    data = await response.json()\n\n                    if (data.error) {\n                        getMessage(data.message)\n\n                        if (data.type === 'email') {\n                            getMessage(\"Email existuje\")\n                        }\n                        if (data.error === 'format' && data.message.includes('email')) {\n                            getMessage(\"Email musi byt platny email\")\n                        }\n                        setIsLoading(false)\n                        return\n                    }\n\n                    setUser({\n                        ...data.user,\n                        _id: data.user._id\n                    })\n                }\n\n                const userId = data.user ? data.user._id : user._id\n\n                updateUser({\n                    ...user\n                }, userId)\n\n                // setIsLoading(false)\n                // getUsers()\n                // push('/dashboard/zakaznici')\n                // closeModal()\n\n            } else {\n                if (user.password !== user.confirmPassword) {\n                    getMessage(\"Heslá sa nezhodujú\")\n                    setIsLoading(false)\n                    return\n                }\n\n                const response = await postAdmin(token, user)\n                const data = await response.json()\n\n                console.log(data)\n\n                if (data.error) {\n                    getMessage(data.message)\n                    setIsLoading(false)\n                    return\n                }\n\n                setIsLoading(false)\n                getFilteredUsers({\n                    filters: {\n                        admin: activeIndex\n                    }\n                })\n                push('/dashboard/zakaznici')\n                closeModal()\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // ----------------------------------------------\n    // ----------------------------------------------\n    // ----------------------------------------------\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n\n    const getFilteredUsers = async (filter) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(filter)\n        const raw = JSON.stringify(filter)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getUserByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(query)\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <UserContext.Provider\n            value={{\n                isUpdating,\n                activeIndex,\n                handleChangeFilterItem,\n                filterItems,\n                users,\n                user,\n                totalCount,\n                // getUsers,\n                getUser,\n                handleChange,\n                handleParameterChange,\n                handleCompanyChange,\n                updateUser,\n                resetUser,\n                formToShow,\n                switchFormButtons,\n                toggleUserForm,\n                createUser,\n                getFilteredUsers,\n                getUserByQuery,\n            }}\n        >\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserProvider","/imooptik-frontend/src/components/sidenav/sidenav.component.jsx",[],"/imooptik-frontend/src/context/image/image.context.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.context.jsx",["630","631","632"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\n\nimport {\n    premisesTabs,\n    categoryTabs,\n    initLensesObj,\n    initProductObj,\n    formatPrice,\n    diaConvert,\n    initContactLensesObj,\n    initGlassesObj,\n    formatfloatNumber,\n    formatLink\n} from './warehouse.utils'\n\nexport const WarehouseContext = createContext({\n    eanCode: null,\n    product: {},\n    lenses: {},\n    contactLensesParameters: {},\n    glassesParameters: {},\n    totalProducts: 0,\n    totalLenses: 0,\n    activePremisesTab: 0,\n    activeCategoryTypeTab: 0,\n    retailPremisesTabs: [],\n    productCategoryTypeTabs: [],\n    products: null,\n    lensesProducts: null,\n    handleChangeCategoryTypeTab: () => { },\n    handleChangePremisesTab: () => { },\n    getProductsByQuery: () => { },\n    handleProductChange: () => { },\n    handleProductAvailableChange: () => { },\n    getSingleProduct: () => { },\n    createProduct: () => { },\n    updateProduct: () => { },\n    deleteProduct: () => { },\n    getSingleLenses: () => { },\n    getLenses: () => { },\n    createLenses: () => { },\n    updateLenses: () => { },\n    deleteLenses: () => { },\n    handleLensesChange: () => { },\n    handleLensesParameterChange: () => { },\n    resetProduct: () => { },\n    resetLenses: () => { },\n    resetContactLenses: () => { },\n    resetGlassesParameters: () => { },\n    getEanCode: () => { },\n    handleAddNewParameter: () => { },\n    handleContactLensesParameterChange: () => { },\n    handleGlassesParameterChange: () => { },\n    handleGlassesParameterSpecsChange: () => { },\n    handleGlassesSizeChange: () => { },\n})\n\nconst WarehouseProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token, isAdmin, currentUser, stats } = useContext(AuthContext)\n    const { closeModal, setIsLoading, setShowModal, getMessage } = useContext(LoadingModalContext)\n\n    const [totalProducts, setTotalProducts] = useState(0)\n    const [totalLenses, setTotalLenses] = useState(0)\n    const [eanCode, setEanCode] = useState(null)\n\n    const [product, setProduct] = useState({ ...initProductObj })\n    const [lenses, setLenses] = useState({ ...initLensesObj })\n    const [contactLensesParameters, setContactLensesParameters] = useState({ ...initContactLensesObj })\n    const [glassesParameters, setGlassesParameters] = useState({ ...initGlassesObj })\n\n    const [products, setProducts] = useState(null)\n    const [lensesProducts, setLensesProducts] = useState(null)\n    const [activePremisesTab, setActivePremisesTab] = useState(0)\n    const [retailPremisesTabs, setRetailPremisesTabs] = useState([])\n\n    const [productCategoryTypeTabs, setProductCategoryTypeTabs] = useState(categoryTabs)\n    const [activeCategoryTypeTab, setActiveCategoryTypeTab] = useState(0)\n\n    const handleGlassesParameterChange = e => {\n        const { name, value } = e.target\n        setGlassesParameters({\n            ...glassesParameters,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParameterSpecsChange = e => {\n        const { name, value } = e.target\n        setGlassesParameters({\n            ...glassesParameters,\n            specs: {\n                ...glassesParameters.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n        setGlassesParameters({\n            ...glassesParameters,\n            specs: {\n                ...glassesParameters.specs,\n                [name]: arr\n            }\n        })\n\n    }\n\n    const handleAddNewParameter = e => {\n        const { name } = e.target\n        setContactLensesParameters({\n            ...contactLensesParameters,\n            [name]: [...contactLensesParameters[name], 1001]\n        })\n    }\n\n    const handleContactLensesParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n        setContactLensesParameters({\n            ...contactLensesParameters,\n            [name]: arr\n        })\n    }\n\n    const handleProductChange = e => {\n        const { name, value } = e.target\n\n        setProduct({\n            ...product,\n            [name]: value\n        })\n    }\n\n    const handleProductAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setProduct({\n            ...product,\n            [name]: arr\n        })\n    }\n\n    const handleLensesChange = e => {\n        const { name, value } = e.target\n\n        setLenses({\n            ...lenses,\n            [name]: value\n        })\n    }\n\n    const handleLensesParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setLenses({\n            ...lenses,\n            [name]: arr\n        })\n    }\n\n    const resetProduct = () => {\n        setProduct({\n            ...initProductObj,\n            available: [1001, 1001, 1001, 1001, 0],\n        })\n        setEanCode(null)\n    }\n\n    const resetLenses = () => {\n        // setLenses({ ...initLensesObj })\n        setLenses({\n            ...initLensesObj,\n            dioptersRange: [1001, 1001],\n            cylinderRange: [1001, 1001],\n        })\n    }\n\n    const resetContactLenses = () => {\n        setContactLensesParameters({\n            ...initContactLensesObj,\n            allowedCurves: [1001],\n            allowedDiameters: [1001],\n            dioptersRange: [1001, 1001]\n        })\n    }\n\n    const resetGlassesParameters = () => {\n        setGlassesParameters({\n            ...initGlassesObj,\n            specs: {\n                ...initGlassesObj.specs,\n                size: [1001, 1001, 1001]\n            }\n        })\n    }\n\n    const handleChangePremisesTab = (idx) => {\n        setActivePremisesTab(idx)\n    }\n\n    const handleChangeCategoryTypeTab = (idx) => {\n        setActiveCategoryTypeTab(idx)\n    }\n\n\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const getEanCode = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/nextEanCode`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.eanCode) {\n                setEanCode(data.eanCode)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getProductsByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(query)\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.products) {\n                setProducts(data.products)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getLenses = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.lenses) {\n                setProducts(data.lenses)\n                setLensesProducts(data.lenses)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getSingleProduct = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/products/${id}`)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error === 'not-found') {\n                getSingleLenses(id)\n            }\n\n            if (data.product) {\n                setProduct({\n                    ...data.product,\n                    price: (data.product.price / 100).toFixed(2)\n                })\n                if (data.product.type === 3) {\n                    setContactLensesParameters({\n                        ...data.product.contactLenses\n                    })\n                } else {\n                    setGlassesParameters({\n                        colorCode: data.product.colorCode ?? \"\",\n                        specs: {\n                            ...data.product.specs,\n                            size: [...Array(3)].map((value, idx) => data.product.specs.size[idx] ? data.product.specs.size[idx] : 0)\n                        }\n                    })\n                }\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createProduct = async (productToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const slug = diaConvert(productToAdd.name).replaceAll(\" \", \"-\").toLowerCase().trim()\n\n        let modifiedProduct = {\n            ...productToAdd,\n            price: formatPrice(productToAdd.price.toString()),\n            link: slug,\n            available: productToAdd.available ? productToAdd.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0]\n        }\n\n        if (productToAdd.specs) {\n            if (productToAdd.specs.size) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    specs: {\n                        ...modifiedProduct.specs,\n                        size: productToAdd.specs.size.map(value => value === 1001 ? 0 : formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        if (productToAdd.contactLenses) {\n            if (productToAdd.contactLenses.allowedCurves) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: productToAdd.contactLenses.allowedCurves.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n            if (productToAdd.contactLenses.allowedDiameters) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: productToAdd.contactLenses.allowedDiameters.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n            if (productToAdd.contactLenses.dioptersRange) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: productToAdd.contactLenses.dioptersRange.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        console.log(\"modifiedProduct\")\n        console.log(modifiedProduct)\n\n\n        const raw = JSON.stringify({\n            ...modifiedProduct,\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.product) {\n                push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10\n                })\n                setEanCode(null)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateProduct = async (productToUpdate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let modifiedProduct = {\n            ...productToUpdate,\n        }\n\n        if (modifiedProduct.price) {\n            modifiedProduct = {\n                ...modifiedProduct,\n                price: formatPrice(productToUpdate.price.toString()),\n            }\n        }\n\n        if (modifiedProduct.available) {\n            modifiedProduct = {\n                ...modifiedProduct,\n                available: productToUpdate.available ? productToUpdate.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0]\n            }\n        }\n\n        if (productToUpdate.link) {\n            const slug = diaConvert(productToUpdate.link).replaceAll(\" \", \"-\").toLowerCase().trim()\n            modifiedProduct = {\n                ...modifiedProduct,\n                link: slug\n            }\n        }\n\n        if (productToUpdate.specs) {\n            if (productToUpdate.specs.size) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    specs: {\n                        ...modifiedProduct.specs,\n                        size: productToUpdate.specs.size.map(value => value === 1001 ? 0 : formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        if (productToUpdate.contactLenses) {\n            if (productToUpdate.contactLenses.allowedCurves) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: productToUpdate.contactLenses.allowedCurves.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: contactLensesParameters.allowedCurves\n                    }\n                }\n            }\n\n            if (productToUpdate.contactLenses.allowedDiameters) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: productToUpdate.contactLenses.allowedDiameters.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: contactLensesParameters.allowedDiameters\n                    }\n                }\n            }\n            if (productToUpdate.contactLenses.dioptersRange) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: productToUpdate.contactLenses.dioptersRange.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: contactLensesParameters.dioptersRange\n                    }\n                }\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedProduct,\n        })\n\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/${product._id}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.message)\n                setIsLoading(false)\n                return\n\n            }\n\n            if (data.product) {\n                push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteProduct = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/${id}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.product) {\n                // push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getSingleLenses = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/lenses/${id}`)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                setLenses(data.lenses)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createLenses = async (lensesToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify({\n            ...lensesToAdd,\n            price: formatPrice(lensesToAdd.price.toString())\n        });\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                push('/dashboard/obchod')\n                getLenses()\n                closeModal()\n                return\n            }\n\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateLenses = async (lensesToUpdate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let modifiedLenses = {\n            ...lensesToUpdate\n        }\n\n        if (modifiedLenses.price) {\n            modifiedLenses = {\n                ...modifiedLenses,\n                price: formatPrice(lensesToUpdate.price.toString()),\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedLenses,\n        });\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/${lenses._id}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                push('/dashboard/obchod')\n                getLenses()\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteLenses = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/${id}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                getLenses()\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (products) {\n            console.log(`GET ${productCategoryTypeTabs[activeCategoryTypeTab].name} DATA`)\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    limit: 10\n                })\n            } else {\n                getLenses()\n            }\n        }\n    }, [activeCategoryTypeTab])\n\n    useEffect(() => {\n        console.log(\"SET PREMISES\")\n        if (currentUser) {\n            if (isAdmin) {\n                setRetailPremisesTabs(premisesTabs)\n                setActivePremisesTab(0)\n            } else {\n                setRetailPremisesTabs(premisesTabs.filter(tab => tab.premises === currentUser.premises))\n                setActivePremisesTab(0)\n            }\n        }\n    }, [currentUser, isAdmin])\n\n    useEffect(() => {\n        if (stats) {\n            console.log(\"SET STATS\")\n            setTotalProducts(stats.products)\n            setTotalLenses(stats.lenses)\n        }\n    }, [stats])\n\n    useEffect(() => {\n        if (product.name !== '') {\n            setProduct({\n                ...product,\n                link: formatLink(product.name)\n            })\n        }\n    }, [product.name])\n\n    return (\n        <WarehouseContext.Provider\n            value={{\n                eanCode,\n                product,\n                lenses,\n                contactLensesParameters,\n                glassesParameters,\n                totalProducts,\n                totalLenses,\n                activePremisesTab,\n                activeCategoryTypeTab,\n                retailPremisesTabs,\n                productCategoryTypeTabs,\n                products,\n                lensesProducts,\n                handleChangeCategoryTypeTab,\n                handleChangePremisesTab,\n                getProductsByQuery,\n                handleProductChange,\n                handleProductAvailableChange,\n                getLenses,\n                getSingleProduct,\n                createProduct,\n                updateProduct,\n                deleteProduct,\n                getSingleLenses,\n                createLenses,\n                updateLenses,\n                deleteLenses,\n                handleLensesChange,\n                handleLensesParameterChange,\n                resetProduct,\n                resetLenses,\n                resetContactLenses,\n                resetGlassesParameters,\n                getEanCode,\n                handleAddNewParameter,\n                handleContactLensesParameterChange,\n                handleGlassesParameterChange,\n                handleGlassesParameterSpecsChange,\n                handleGlassesSizeChange,\n            }}\n        >\n            {children}\n        </WarehouseContext.Provider>\n    )\n}\n\nexport default WarehouseProvider","/imooptik-frontend/src/context/booking/booking.context.jsx",[],"/imooptik-frontend/src/context/examination/examination.context.jsx",[],"/imooptik-frontend/src/context/orders/orders.context.jsx",["633"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\n\n\nexport const OrdersContext = createContext({\n    orders: null,\n    getOrders: () => { },\n    createOrder: () => { },\n    finishOrder: () => { },\n})\n\nconst OrdersProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { setIsLoading, setShowModal, getMessage, closeModal } = useContext(LoadingModalContext)\n    const { token } = useContext(AuthContext)\n    const [orders, setOrders] = useState(null)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const getOrders = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.orders) {\n                setOrders(data.orders)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n    }\n\n    const createOrder = async (orderToCreate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let orderObj = {\n            ...orderToCreate\n        }\n\n\n        console.log(\"ORDER BEFORE SEND\")\n        console.log(orderObj)\n\n        const raw = JSON.stringify(orderObj)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.order) {\n                getOrders()\n                closeModal()\n                push('/dashboard/objednavky')\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const finishOrder = async (orderId) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders/${orderId}/fulfill`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error === 'undelegated-order') {\n                setIsLoading(false)\n                getMessage(\"Objednávka nemôže byť dokončená ak nieje priradená k prevádzke\")\n                return\n            }\n\n            if (data.order) {\n                closeModal()\n                return\n            }\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <OrdersContext.Provider\n            value={{\n                orders,\n                getOrders,\n                createOrder,\n                finishOrder\n            }}\n        >\n            {children}\n        </OrdersContext.Provider>\n    )\n}\n\nexport default OrdersProvider","/imooptik-frontend/src/context/analytics/analytics.context.jsx",[],"/imooptik-frontend/src/context/coupons/coupons.context.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.component.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.component.jsx",[],"/imooptik-frontend/src/context/blog/blog.context.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.component.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.component.jsx",[],"/imooptik-frontend/src/sections/orders/orders.section.jsx",["634","635","636","637"],"import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport OrderOverview from '../../components/order-overview/order-overview.component'\n// import OrderDeligateModal from '../../components/order-deligate-modal/order-deligate-modal.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport {\n    GoArrowSmallDown,\n    GoArrowSmallUp\n} from 'react-icons/go'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    tabItems\n} from '../../context/orders/orders.utils'\n\nimport {\n    TableHead,\n    OrdersTable,\n    TableCol,\n    IconContainer\n} from './orders.styles'\n\nconst OrdersSection = () => {\n    const { stats } = useContext(AuthContext)\n    const { push } = useHistory()\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const [searchQuery, setSearchQuery] = useState('')\n    const [activeIndex, setActiveIndex] = useState(1)\n    const [orders, setOrders] = useState([])\n    const [fetchQueryObj, setFetchQueryObj] = useState({\n        limit: 10,\n        skip: 0,\n        sortBy: {\n            date: -1\n        },\n        // filters: {\n        //     status: \"paid\"\n        // }\n    })\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const paginate = (currentPage) => {\n        setFetchQueryObj({\n            ...fetchQueryObj,\n            skip: (currentPage - 1) * 10\n        })\n        setCurrentPage(currentPage)\n        refetch()\n        // ordersHalfPaidData.refetch()\n    }\n\n    const { isLoading: isFetching, response, refetch } = useFetchByQuery('api/admin/orders/filter', fetchQueryObj)\n    // const ordersHalfPaidData = useFetchByQuery('api/admin/orders/filter', {\n    //     limit: 10,\n    //     skip: 0,\n    //     sortBy: {\n    //         date: -1\n    //     },\n    //     filters: {\n    //         status: \"half-paid\"\n    //     }\n    // })\n\n    const handleRefetch = () => {\n        refetch()\n        // ordersHalfPaidData.refetch()\n    }\n\n    useEffect(() => {\n        if (!isFetching) {\n            if (response) {\n                setOrders(response?.orders)\n            }\n        }\n    }, [isFetching, response])\n\n    console.log(response)\n    // useEffect(() => {\n    //     if (!ordersHalfPaidData.isLoading) {\n    //         if (ordersHalfPaidData.response) {\n    //             setOrders([\n    //                 ...ordersHalfPaidData.response.orders,\n    //                 ...orders,\n    //             ])\n    //         }\n    //     }\n    // }, [ordersHalfPaidData.isLoading])\n\n    useEffect(() => {\n        if (orders.length > 0) {\n            if (activeIndex === 1) {\n                setFetchQueryObj(() => ({\n                    ...fetchQueryObj,\n                    // filters: {\n                    //     status: \"paid\"\n                    // }\n                }))\n                handleRefetch()\n            } else {\n                setFetchQueryObj(() => ({\n                    ...fetchQueryObj,\n                    // filters: {\n                    //     status: \"fulfilled\"\n                    // }\n                }))\n                refetch()\n            }\n        }\n    }, [activeIndex])\n\n    useEffect(() => {\n        return () => {\n            setActiveIndex(1)\n            setSearchQuery('')\n            setOrders([])\n            setFetchQueryObj({\n                limit: 10,\n                skip: 0,\n                sortBy: {\n                    date: -1\n                }\n            })\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <SectionHeader\n                searchQuery={searchQuery}\n                // handleSearch={handleSearch}\n\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push(\"/dashboard/objednavky/nova-objednavka\")}\n                title=\"Objednávky\"\n            />\n\n            <SectionNavbar\n                items={tabItems}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                <OrdersTable>\n                    <TableHead>\n                        <TableCol>ID</TableCol>\n                        <TableCol clickable onClick={() => {\n                            setFetchQueryObj((prevObj) => ({\n                                ...fetchQueryObj,\n                                sortBy: {\n                                    date: prevObj.sortBy.date === 1 ? -1 : 1\n                                }\n                            }))\n                            handleRefetch()\n                        }}>\n                            Dátum {fetchQueryObj.sortBy.date === 1 ? <IconContainer>\n                                <GoArrowSmallDown />\n                            </IconContainer> : <IconContainer>\n                                    <GoArrowSmallUp />\n                                </IconContainer>\n                            }\n                        </TableCol>\n                        <TableCol>Prevádzka</TableCol>\n                        <TableCol>Status</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {orders.map((order, idx) => (\n                        <OrderOverview key={idx} order={order} refetch={handleRefetch} />\n                    ))}\n                </OrdersTable>\n\n                <ListArrows\n                    listItems={orders}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\n\n\nexport default OrdersSection\n","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx",["638","639","640"],"import React, { useContext, useEffect, useState } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { UserContext } from '../../context/user/user.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport UserForm from '../../components/user-form/user-form.component'\nimport NewUserForm from '../../components/new-user-form/new-user-form.component'\n\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    DeleteProfileButton,\n    // Name,\n    SaveButton,\n} from './customer-profile.styles'\n\nconst CustomerProfile = () => {\n    const { id } = useParams()\n    const { isAdmin, isOptometrist } = useContext(AuthContext)\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal,\n    } = useContext(LoadingModalContext)\n\n    const {\n        isUpdating,\n        user,\n        getUser,\n        handleChange,\n        handleParameterChange,\n        handleCompanyChange,\n        updateUser,\n        resetUser,\n        formToShow,\n        switchFormButtons,\n        toggleUserForm,\n        createUser,\n    } = useContext(UserContext)\n\n    const [userObj, setUserObj] = useState({})\n    const [hasChanges, setHasChanges] = useState(false)\n\n    const handleUserChange = (e) => {\n        setHasChanges(true)\n        const { name, value } = e.target\n\n        handleChange(e)\n\n\n        if (value === '') {\n            delete userObj[name]\n            // delete userObj.company[]\n            return\n        }\n\n        setUserObj({\n            ...userObj,\n            [name]: value\n        })\n    }\n\n    const handleLensesParameterChange = (e, idx) => {\n        setHasChanges(true)\n\n        const { name, value } = e.target\n        let arr = user.lenses[name]\n        arr[idx] = value\n\n\n        handleParameterChange(e, idx)\n        setUserObj({\n            ...userObj,\n            lenses: {\n                ...user.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n\n    const handleCompanyAddressChange = (e) => {\n        setHasChanges(true)\n\n        const { name, value } = e.target\n        handleCompanyChange(e)\n\n        console.log(value)\n\n        if (value === '') {\n            delete userObj.company[name]\n            if (Object.keys(userObj.company).length === 0) {\n                delete userObj[\"company\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setUserObj({\n            ...userObj,\n            company: {\n                ...userObj.company,\n                [name]: value\n            }\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setHasChanges(false)\n\n        if (id === 'novy-zakaznik') {\n            console.log(\"Create new user\")\n            if (userObj.fName || userObj.lName) {\n                delete userObj[\"fName\"]\n                delete userObj[\"lName\"]\n            }\n            createUser(userObj)\n        } else {\n            console.log(\"Update existing user\")\n            if (userObj.fName || userObj.lName) {\n                delete userObj[\"fName\"]\n                delete userObj[\"lName\"]\n            } else if (!userObj.fName || !userObj.lName) {\n                delete userObj[\"name\"]\n            }\n            updateUser(userObj, user._id)\n        }\n    }\n\n    useEffect(() => {\n        setUserObj({\n            ...userObj,\n            name: user.fName + \" \" + user.lName\n        })\n    }, [userObj.fName, userObj.lName])\n\n    useEffect(() => {\n        if (id !== 'novy-zakaznik') {\n            getUser(id)\n        }\n    }, [id])\n\n    //unmount\n    useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            resetUser()\n            handleChange({\n                target: {\n                    name: 'lenses',\n                    value: {\n                        cylinder: [1001, 1001, 1001, 1001],\n                        cylinderAxes: [1001, 1001, 1001, 1001],\n                        diopters: [1001, 1001, 1001, 1001],\n                        distance: [1001, 1001, 1001, 1001],\n                        addition: [1001, 1001, 1001, 1001],\n                        basis: [1001, 1001, 1001, 1001],\n                        prism: [1001, 1001, 1001, 1001],\n                    },\n                }\n            })\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <Prompt\n                when={hasChanges}\n                message={\"Chcete opustiť tuto stránku?\"}\n            />\n            <form onSubmit={handleSubmit}>\n                <Header>\n                    <h1>Profil</h1>\n                    <div>\n                        {isUpdating && <DeleteProfileButton type='button'>Vymazať</DeleteProfileButton>}\n                        <SaveButton type=\"submit\">\n                            {isUpdating ? \"Uložiť zmeny\" : \"Vytvoriť\"}\n                        </SaveButton>\n                    </div>\n                </Header>\n\n                <ScrollContainer>\n                    {\n                        isUpdating ? (\n                            <UserForm\n                                user={user}\n                                isAdmin={isAdmin}\n                                isUpdating={isUpdating}\n                                isOptometrist={isOptometrist}\n                                handleChange={handleUserChange}\n                                handleParameterChange={handleLensesParameterChange}\n                                handleCompanyChange={handleCompanyAddressChange}\n                            />\n                        ) : (\n                                <NewUserForm\n                                    isAdmin={isAdmin}\n                                    handleParameterChange={handleLensesParameterChange}\n                                    formToShow={formToShow}\n                                    switchFormButtons={switchFormButtons}\n                                    toggleUserForm={toggleUserForm}\n                                    user={user}\n                                    handleChange={handleUserChange}\n                                    handleCompanyChange={handleCompanyAddressChange}\n                                    resetUser={resetUser}\n\n                                />\n                            )\n                    }\n\n\n                </ScrollContainer>\n\n            </form>\n        </section>\n    )\n}\n\nexport default CustomerProfile\n","/imooptik-frontend/src/sections/analytics/analytics.section.jsx",["641"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AnalyticsContext } from '../../context/analytics/analytics.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../../context/auth/auth.context'\n\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    GridContainer,\n    StatsContainer,\n    StatsGrid\n} from './analytics.styles'\n\nconst AnalyticsSection = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { stats: storeData } = useContext(AuthContext)\n    const { stats, getAnalytics } = useContext(AnalyticsContext)\n\n    const items = [\n        {\n            id: 1,\n            name: \"Všetko\",\n            value: \"all\"\n        },\n        {\n            id: 2,\n            name: \"Deň\",\n            value: \"day\"\n        },\n        {\n            id: 3,\n            name: \"Týžden\",\n            value: \"week\"\n        },\n        {\n            id: 4,\n            name: \"Mesiac\",\n            value: \"month\"\n        },\n        {\n            id: 5,\n            name: \"Rok\",\n            value: \"year\"\n        },\n    ]\n\n    const [activeIndex, setActiveIndex] = useState(2)\n\n    useEffect(() => {\n        getAnalytics(items[activeIndex - 1].value)\n    }, [activeIndex])\n\n    console.log(stats)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <Header>\n                <h1>Analytiká</h1>\n            </Header>\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                <GridContainer>\n                    <div>\n                        <h3>Uživatelia</h3>\n                        <p>{storeData?.users}</p>\n                    </div>\n                    <div>\n                        <h3>Produkty</h3>\n                        <p>{storeData?.products}</p>\n                    </div>\n                    <div>\n                        <h3>Šošovky</h3>\n                        <p>{storeData?.lenses}</p>\n                    </div>\n                    <div>\n                        <h3>Objednávky</h3>\n                        <p>{storeData?.orders}</p>\n                    </div>\n                    <div>\n                        <h3>Prehliadky</h3>\n                        <p>{storeData?.bookings}</p>\n                    </div>\n                </GridContainer>\n\n                {stats && (\n                    <StatsGrid>\n                        <StatsContainer>\n                            <div>\n                                <h3>Hotovosť</h3>\n                                <p>{(stats[0]?.cash / 100).toFixed(2)}€</p>\n                            </div>\n                            <div>\n                                <h3>Karta</h3>\n                                <p>{(stats[0]?.card / 100).toFixed(2)}€</p>\n                            </div>\n                            <div>\n                                <h3>Kupóny</h3>\n                                <p>{stats[0]?.coupons}</p>\n                            </div>\n                            <div>\n                                <h3>Objednávky</h3>\n                                <p>{stats[0]?.orders}</p>\n                            </div>\n                        </StatsContainer>\n                        <StatsContainer>\n                            <div>\n                                <h3>Hotovosť</h3>\n                                <p>{(stats[1]?.cash / 100).toFixed(2)}€</p>\n                            </div>\n                            <div>\n                                <h3>Karta</h3>\n                                <p>{(stats[1]?.card / 100).toFixed(2)}€</p>\n                            </div>\n                            <div>\n                                <h3>Kupóny</h3>\n                                <p>{stats[1]?.coupons}</p>\n                            </div>\n                            <div>\n                                <h3>Objednávky</h3>\n                                <p>{stats[1]?.orders}</p>\n                            </div>\n                        </StatsContainer>\n                    </StatsGrid>\n                )}\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default AnalyticsSection\n","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx",["642","643","644"],"import React, { useState, useEffect, useContext } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    PostContainer,\n    PostImage,\n    PostContent,\n    Options,\n    UpdateButton,\n    DeleteButton\n} from './blog-posts.styles'\n\nconst BlogPosts = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { postsCount, handlePostDelete } = useContext(BlogContext)\n    const { push } = useHistory()\n\n    const [posts, setPosts] = useState([])\n\n    const [filterQuery, setFilterQuery] = useState({\n        limit: 10,\n        sortBy: {\n            date: -1\n        },\n        // query: \"\"\n    })\n    const [searchQuery, setSearchQuery] = useState('')\n\n\n\n    const [activeIndex, setActiveIndex] = useState(0)\n    const items = [\n        {\n            id: 0,\n            name: \"Dátum pridania\"\n        },\n        {\n            id: 1,\n            name: \"Abecedne\"\n        },\n    ]\n\n    const blogsData = useFetchByQuery('api/blogs/filter', filterQuery)\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n                query: searchQuery\n            })\n            blogsData.refetch()\n        }\n    }\n\n    useEffect(() => {\n        if (searchQuery === '') {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n            })\n            blogsData.refetch()\n        }\n    }, [searchQuery])\n\n    useEffect(() => {\n        if (activeIndex === 0) {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n                // query: \"\"\n            })\n            blogsData.refetch()\n        } else {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: 1\n                },\n                // query: \"\"\n            })\n            blogsData.refetch()\n        }\n    }, [activeIndex])\n\n    useEffect(() => {\n        if (!blogsData.isLoading) {\n            setPosts(blogsData.response?.blogs)\n        }\n    }, [blogsData.isLoading])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleSearch={handleSearch}\n                handleAddButton={() => push('blog/novy-prispevok')}\n                count={postsCount}\n                title=\"Blog\"\n            />\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                {posts && posts.length ? posts.map(post => (\n                    <PostContainer key={post._id}>\n                        <PostImage>\n                            {post.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${post.image.imagePath}`} alt={post.image.alt} />}\n                        </PostImage>\n                        <PostContent>\n                            <h2>{post.name}</h2>\n                            <p>{post.description}</p>\n                        </PostContent>\n                        <Options>\n                            <UpdateButton onClick={() => push(`blog/${post._id}`)}>Upraviť</UpdateButton>\n                            <DeleteButton onClick={() => handlePostDelete(post._id)}>Vymazať</DeleteButton>\n                        </Options>\n                    </PostContainer>\n                )) : (\n                        <div>\n                            Žiadne príspevky\n                        </div>\n                    )}\n\n                <ListArrows\n                    listItems={posts}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BlogPosts\n","/imooptik-frontend/src/sections/product/product.section.jsx",["645","646","647","648"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport Popup from '../../components/popup/pop-up.component'\n\n// import CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n// import CustomFormSwitch from '../../components/custom-form-switch/custom-form-switch.component'\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\nimport ProductAccessoriesForm from '../../components/product-accessories-form/product-accessories-form.component'\nimport ProductContactLensesForm from '../../components/product-contact-lenses-form/product-contact-lenses-form.component'\n\n// import { useFetch } from '../../hooks/useFetch'\n\nimport { productCategories, checkParameter, retailNames, formatLink } from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Header,\n    CategoryContainer,\n    CategoryCheckbox,\n    SubmitButton,\n    IsPublicCheckbox,\n\n} from './product.styles'\n\nconst ProductSection = () => {\n    const { id } = useParams()\n    const { currentUser } = useContext(AuthContext)\n    const { closeModal, message, isLoading, showModal, getMessage, setShowModal } = useContext(LoadingModalContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const {\n        eanCode,\n        product,\n        lenses,\n        contactLensesParameters,\n        glassesParameters,\n        handleLensesChange,\n        handleLensesParameterChange,\n        createProduct,\n        updateProduct,\n        resetProduct,\n        resetLenses,\n        resetContactLenses,\n        resetGlassesParameters,\n        createLenses,\n        updateLenses,\n        handleProductChange,\n        handleProductAvailableChange,\n        getEanCode,\n        handleAddNewParameter,\n        handleContactLensesParameterChange,\n        handleGlassesParameterChange,\n        handleGlassesParameterSpecsChange,\n        handleGlassesSizeChange,\n        getSingleProduct\n    } = useContext(WarehouseContext)\n\n    const [hasChanged, setHasChanged] = useState(false)\n    const [productObj, setProductObj] = useState({})\n\n\n\n    const handleChangeType = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (!isUpdating) {\n            if (productObj.type === 0) {\n                if (Object.keys(productObj).length > 1) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetLenses()\n                    } else {\n                        return\n                    }\n                }\n            } else {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetProduct()\n                        resetContactLenses()\n                        resetGlassesParameters()\n                    } else {\n                        return\n                    }\n                }\n            }\n        }\n        setProductObj({\n            [name]: value\n        })\n\n    }\n\n    const handleChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (productObj.type === 0) {\n            handleLensesChange(e)\n        }\n\n        if (productObj.type === 5) {\n            handleProductChange(e)\n        }\n\n        if (productObj.type === 4) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 3) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 2) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 1) {\n            handleProductChange(e)\n        }\n\n\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        if (isUpdating) {\n            if (name === 'name') {\n                setProductObj({\n                    ...productObj,\n                    [name]: value,\n                    link: formatLink(value)\n                })\n                return\n            }\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParametersChange = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterChange(e)\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleSpecsChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterSpecsChange(e)\n\n        if (value === '') {\n            delete productObj.specs[name]\n\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSpecsSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleGlassesSizeChange(e, idx)\n\n        if (value === '') {\n            if (productObj.specs[name].length > 1) {\n                arr[idx] = 1001\n\n                const firstIndex = arr[0]\n                const canDeleteSpecs = arr.map(value => {\n                    if (firstIndex !== value) {\n                        return false\n                    } else {\n                        return true\n                    }\n                })\n\n                const verdict = canDeleteSpecs.find(value => value === false)\n\n                if (verdict === false) {\n                    setProductObj({\n                        ...productObj,\n                        specs: {\n                            ...productObj.specs,\n                            [name]: arr\n                        }\n                    })\n                } else {\n                    delete productObj.specs[name]\n                }\n\n            }\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleProductAvailableChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleContactLensesChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleContactLensesParameterChange(e, idx)\n\n        if (value === '') {\n            if (productObj.contactLenses[name].length > 1) {\n                arr.splice(idx, 1)\n                setProductObj({\n                    ...productObj,\n                    contactLenses: {\n                        ...productObj.contactLenses,\n                        [name]: arr\n                    }\n                })\n            } else {\n                delete productObj.contactLenses[name]\n            }\n            if (Object.keys(productObj.contactLenses).length === 0) {\n                delete productObj[\"contactLenses\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            contactLenses: {\n                ...productObj.contactLenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleLensesParameterChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleSelectImage = (imgId) => {\n        setHasChanged(true)\n        setProductObj({\n            ...productObj,\n            image: imgId\n        })\n    }\n\n    console.log(\"PRODUCT OBJECT\")\n    console.log(productObj)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (isUpdating) {\n            if (productObj.type === 0) {\n                setHasChanged(false)\n                delete productObj['link']\n                delete productObj['type']\n                updateLenses(productObj)\n                return\n            } else if (productObj.type === 3) {\n                setHasChanged(false)\n                delete productObj['type']\n                updateProduct({ ...productObj, contactLenses: {} })\n                return\n            } else {\n                setHasChanged(false)\n                delete productObj['type']\n                updateProduct(productObj)\n                return\n            }\n        } else {\n            if (productObj.type === 0) {\n                if (!productObj.name || !productObj.brand || !productObj.description || !productObj.price || !productObj.image || !productObj.dioptersRange || !productObj.cylinderRange) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    delete productObj['type']\n                    createLenses(productObj)\n                }\n            }\n            if (productObj.type === 5 || productObj.type === 4 || productObj.type === 3 || productObj.type === 2 || productObj.type === 1) {\n                if (!productObj.name || !productObj.price || !productObj.image) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    createProduct(productObj)\n                }\n            }\n        }\n\n\n    }\n\n    useEffect(() => {\n        if (id === \"novy-produkt\") {\n            if (!eanCode) {\n                getEanCode()\n            } else {\n                if (productObj.type) {\n                    handleChange({\n                        target: {\n                            name: \"eanCode\",\n                            value: eanCode\n                        }\n                    })\n                }\n            }\n        }\n    }, [id, eanCode, productObj.type, productObj.eanCode, product.type])\n\n    useEffect(() => {\n        if (id !== 'novy-produkt') {\n            getSingleProduct(id)\n            setIsUpdating(true)\n            if (!productObj.type) {\n                handleChangeType({\n                    target: {\n                        name: \"type\",\n                        value: product.type\n                    }\n                })\n\n            }\n        }\n    }, [id, product.type])\n\n    useEffect(() => {\n        if (product.image) {\n            setSelectedImage(product.image)\n        }\n        if (lenses.image) {\n            setSelectedImage(lenses.image)\n        }\n    }, [product.image, lenses.image])\n\n    useEffect(() => {\n        return () => {\n            resetProduct()\n            resetLenses()\n            resetContactLenses()\n            resetGlassesParameters()\n            setProductObj({})\n            setSelectedImage(null)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <section>\n            <Prompt\n                when={hasChanged}\n                message=\"Chcete opustiť formulár?\"\n            />\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={handleSelectImage} />}\n            <Header>\n                <div>\n                    <h1>Nový Produkt</h1>\n                </div>\n                <div>\n                    <IsPublicCheckbox\n                        label=\"Verejné\"\n                        // value={product.ehop}\n                        name='eshop'\n                        isActive={product.eshop}\n                        handleClick={() => handleChange({\n                            target: {\n                                name: \"eshop\",\n                                value: !product.eshop\n                            }\n                        })}\n                    />\n                    <SubmitButton onClick={handleSubmit}>Vytvoriť</SubmitButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating && <CategoryContainer>\n                    <h3>Aký produkt chcete pridať?</h3>\n                    {productCategories.map((category, idx) => (\n                        <CategoryCheckbox\n                            key={idx}\n                            label={category.name}\n                            value={category.value}\n                            name='type'\n                            isActive={category.value === productObj.type}\n                            handleClick={() => handleChangeType({\n                                target: {\n                                    name: \"type\",\n                                    value: category.value\n                                }\n                            })}\n                        />\n                    ))}\n                </CategoryContainer>}\n\n                {productObj.type === 0 && (\n                    <ProductLensesForm\n                        lenses={lenses}\n                        selectedImage={selectedImage}\n                        setImageModal={setImageModal}\n                        handleChange={handleChange}\n                        handleParameterChange={handleParameterChange}\n                        checkParameter={checkParameter}\n                    />\n                )}\n\n                {productObj.type === 5 && (\n                    <ProductAccessoriesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        currentUser={currentUser}\n                        retailNames={retailNames}\n                        selectedImage={selectedImage}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAvailableChange={handleAvailableChange}\n                    />\n                )}\n\n                {productObj.type === 3 && (\n                    <ProductContactLensesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        contactLensesParameters={contactLensesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAddNewParameter={handleAddNewParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        handleContactLensesChange={handleContactLensesChange}\n                    />\n                )}\n\n                {(productObj.type === 1 || productObj.type === 2 || productObj.type === 4) && (\n                    <ProductGlassesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        glassesParameters={glassesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleSpecsChange={handleSpecsChange}\n                        handleAvailableChange={handleAvailableChange}\n                        handleGlassesSpecsSizeChange={handleGlassesSpecsSizeChange}\n                        handleGlassesParametersChange={handleGlassesParametersChange}\n                    />\n                )}\n\n            </ScrollContainer>\n\n        </section >\n    )\n}\n\nexport default ProductSection\n","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx",["649","650"],"import React, { useState, useContext, useEffect } from 'react'\n// import { AuthContext } from '../..//context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useHistory } from 'react-router-dom'\n\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ProductOverview from '../../components/product-overview/product-overview.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\n\nconst EshopSection = () => {\n    const { push } = useHistory()\n    const { closeModal, showModal, isLoading, message } = useContext(LoadingModalContext)\n    const [searchQuery, setSearchQuery] = useState('')\n    const [productItems, setProductItems] = useState([])\n    const [queryFilter, setQueryFilter] = useState({\n        limit: 10,\n        skip: 0,\n    })\n\n    const {\n        activePremisesTab,\n        products,\n        retailPremisesTabs,\n        getProductsByQuery,\n        handleChangePremisesTab,\n        productCategoryTypeTabs,\n        activeCategoryTypeTab,\n        handleChangeCategoryTypeTab,\n        deleteProduct,\n        deleteLenses,\n    } = useContext(WarehouseContext)\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    query: searchQuery\n                })\n            }\n        }\n    }\n\n    const handleDeleteProduct = (id) => {\n        deleteProduct(id)\n    }\n\n    useEffect(() => {\n        if (!products) {\n            getProductsByQuery({\n                limit: 10\n            })\n        }\n        if (products) {\n            setProductItems(products)\n        }\n    }, [products])\n\n    useEffect(() => {\n        if (!searchQuery && products) {\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    limit: 10\n                })\n            }\n        }\n    }, [searchQuery])\n\n\n    const getNextPage = () => {\n        if (productItems.length < 10) return\n        getProductsByQuery({\n            ...queryFilter,\n            skip: queryFilter.skip + 10\n        })\n        setQueryFilter({\n            ...queryFilter,\n            skip: queryFilter.skip + 10\n        })\n    }\n\n    const getPrevPage = () => {\n        // if (productItems.length < 10) return\n        getProductsByQuery({\n            ...queryFilter,\n            skip: queryFilter.skip - 10\n        })\n        setQueryFilter({\n            ...queryFilter,\n            skip: queryFilter.skip - 10\n        })\n    }\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                title=\"Sklad\"\n                searchQuery={searchQuery}\n                handleSearch={handleSearch}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('sklad/novy-produkt')}\n\n            />\n\n            <SectionNavbar\n                items={retailPremisesTabs}\n                activeIndex={activePremisesTab}\n                setActiveIndex={handleChangePremisesTab}\n            />\n\n            <SectionNavbar\n                items={productCategoryTypeTabs}\n                activeIndex={activeCategoryTypeTab}\n                setActiveIndex={handleChangeCategoryTypeTab}\n            />\n\n            <ScrollContainer>\n                {productItems.map((product, idx) => (\n                    <ProductOverview\n                        key={idx}\n                        product={product}\n                        activePremisesTab={activePremisesTab}\n                        handleUpdateButton={() => push(`sklad/${product._id}`)}\n                        handleDeleteButton={activeCategoryTypeTab === 0 ? () => handleDeleteProduct(product._id) : () => deleteLenses((product._id))}\n                    />\n                ))}\n\n                <ListArrows\n                    listItems={productItems}\n                    handleClickPrev={getPrevPage}\n                    handleClickNext={getNextPage}\n                />\n            </ScrollContainer>\n        </section >\n    )\n}\n\nexport default EshopSection\n","/imooptik-frontend/src/sections/customers/customers.section.jsx",["651","652","653"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { useHistory } from 'react-router-dom'\nimport { UserContext } from '../../context/user/user.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from \"../../components/section-navbar/section-navbar.component\"\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport {\n    TableCol,\n    TableContainer,\n    TableHead,\n    TableRow,\n    UpdateButton,\n    DeleteButton\n} from './customers.styles'\n\nconst CustomersSection = () => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n    const { isAdmin } = useContext(AuthContext)\n    const [userItems, setUserItems] = useState([])\n\n    const {\n        isLoading,\n        showModal,\n        message,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        activeIndex,\n        handleChangeFilterItem,\n        filterItems,\n        users,\n        totalCount,\n        getFilteredUsers,\n        getUserByQuery\n    } = useContext(UserContext)\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            getUserByQuery({\n                query: searchQuery\n            })\n        }\n    }\n\n    useEffect(() => {\n        if (!users) {\n            getFilteredUsers({\n                filters: {\n                    admin: activeIndex\n                }\n            })\n        }\n        if (users) {\n            setUserItems(users)\n        }\n    }, [users])\n\n    useEffect(() => {\n        if (users) {\n            getFilteredUsers({\n                filters: {\n                    admin: activeIndex\n                }\n            })\n            setUserItems(users)\n        }\n    }, [activeIndex])\n\n    useEffect(() => {\n        if (users) {\n            if (searchQuery === '') {\n                getFilteredUsers({\n                    filters: {\n                        admin: activeIndex\n                    }\n                })\n                setUserItems(users)\n            }\n        }\n    }, [searchQuery])\n\n    const [currentPage] = useState(1)\n    const [usersPerPage] = useState(10)\n    const indexOfLastUser = currentPage * usersPerPage\n    const indexOfFirstUser = indexOfLastUser - usersPerPage\n    const currentUsers = userItems.slice(indexOfFirstUser, indexOfLastUser)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleSearch={handleSearch}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('zakaznici/novy-zakaznik')}\n                count={totalCount}\n                title=\"Zákazníci\"\n            />\n\n            <SectionNavbar\n                items={isAdmin ? filterItems : [\n                    {\n                        id: 0,\n                        name: \"Zákazníci\",\n                        filter: 0,\n                    },]}\n                activeIndex={activeIndex}\n                setActiveIndex={handleChangeFilterItem}\n            />\n\n            <ScrollContainer>\n                <TableContainer>\n                    <TableHead>\n                        <TableCol>Meno a priezvisko</TableCol>\n                        <TableCol>Email</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {currentUsers.map((user, idx) => (\n                        <TableRow key={idx}>\n                            <TableCol>{user.name}</TableCol>\n                            <TableCol>{user.email}</TableCol>\n                            <TableCol>\n                                <UpdateButton onClick={() => push(`zakaznici/${user._id}`)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={() => alert(\"Pekný pokus! Tu velím zatiaľ ja :)\")}>Odstrániť</DeleteButton>\n                            </TableCol>\n                        </TableRow>\n                    ))}\n                </TableContainer>\n\n                <ListArrows\n                    listItems={currentUsers}\n                />\n            </ScrollContainer>\n\n        </section>\n    )\n}\n\nexport default CustomersSection\n","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx",[],"/imooptik-frontend/src/sections/booking/booking.section.jsx",["654","655"],"/imooptik-frontend/src/sections/coupons/coupons.section.jsx",["656","657","658","659"],"import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { CouponsContext } from '../../context/coupons/coupons.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport {\n    CouponOverviewContainer,\n    DeleteButton,\n    OpenButton,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TableCol\n} from './coupons.styles'\n\nconst CouponsSection = () => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        coupons,\n        getCoupons,\n        deleteCoupon\n    } = useContext(CouponsContext)\n\n    useEffect(() => {\n        if (!coupons) {\n            getCoupons()\n        }\n    }, [coupons])\n\n    console.log(coupons)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                title='Kupóny'\n                // searchQuery={searchQuery}\n                // handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('kupony/novy-kupon')}\n            />\n            <ScrollContainer>\n\n                <TableContainer>\n                    <TableHead>\n                        <TableCol>#</TableCol>\n                        <TableCol>Kód</TableCol>\n                        <TableCol>Typ</TableCol>\n                        <TableCol>Hodnota</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {coupons && coupons.map((coupon, idx) => (\n                        <TableRow key={idx}>\n                            <TableCol>{idx + 1}</TableCol>\n                            <TableCol>{coupon.code}</TableCol>\n                            <TableCol>{coupon.type === \"percentage\" ? \"Percentá\" : \"Fixná suma\"}</TableCol>\n                            <TableCol>{coupon.value}</TableCol>\n                            <TableCol>\n                                <OpenButton onClick={() => push(`kupony/${coupon._id}`)}>Zobraziť</OpenButton>\n                                <DeleteButton onClick={() => deleteCoupon(coupon._id)}>Ostrániť</DeleteButton>\n                            </TableCol>\n                        </TableRow>\n                    ))}\n                </TableContainer>\n                <ListArrows\n                    listItems={coupons}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CouponsSection\n","/imooptik-frontend/src/sections/coupon/coupon.section.jsx",["660","661"],"import React, { useContext, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { CouponsContext } from '../../context/coupons/coupons.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport InputRow from '../../components/product-input-row/product-input-row.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport Popup from \"../../components/popup/pop-up.component\"\n\nimport {\n    Header,\n    CustomSelect,\n    SubmitButton,\n    DeleteButton,\n    GridRow,\n    GridCol\n} from './coupon.styles'\n\nconst CouponSection = () => {\n    const { couponId } = useParams()\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const {\n        coupon,\n        getCoupon,\n        handleChange,\n        createCoupon,\n        isUpdating,\n        deleteCoupon,\n        resetCoupons\n    } = useContext(CouponsContext)\n\n    useEffect(() => {\n        if (couponId !== 'novy-kupon') {\n            getCoupon(couponId)\n        }\n    }, [couponId])\n\n    useEffect(() => {\n        return () => {\n            resetCoupons()\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <Header>\n                <div>\n                    <h1>Nový kupón</h1>\n                </div>\n\n                <div>\n                    {isUpdating && <DeleteButton onClick={() => deleteCoupon(couponId)}>Odstrániť</DeleteButton>}\n                    {!isUpdating && <SubmitButton onClick={() => createCoupon(coupon)}>Vytvoriť</SubmitButton>}\n                </div>\n            </Header>\n            <ScrollContainer>\n                <GridRow>\n                    <GridCol>\n                        <h3>Základné informácie</h3>\n                        <InputRow\n                            label=\"Kód kupónu\"\n                            example=\"napr: 50off\"\n                        >\n                            <CustomInput\n                                label=\"Kód\"\n                                type='text'\n                                name='code'\n                                value={coupon.code}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Typ kupónu\"\n                            example=\"\"\n                        >\n                            <CustomSelect name='type' value={coupon.type} onChange={(e) => handleChange(e)}>\n                                <option value={\"percentage\"}>Percentá</option>\n                                <option value={\"flat\"}>Fixná suma</option>\n                            </CustomSelect>\n                        </InputRow>\n                    </GridCol>\n                    <GridCol>\n                        <h3>Parametre</h3>\n\n                        <InputRow\n                            label=\"Hodnota\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='value'\n                                value={coupon.value.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Koľko maximálne krát môže tento kupón byt použitý jedným človek.\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='maxUses'\n                                value={coupon.maxUses.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Minimálna hodnota objednávky v centoch, aby bol tento kupón aplikovateľný.\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='minValue'\n                                value={coupon.minValue.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Koľko maximálne krát môže tento kupón byt použitý dohromady všetkými užívateľmi.\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='maxUsesTotal'\n                                value={coupon.maxUsesTotal.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                    </GridCol>\n                </GridRow>\n\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CouponSection\n","/imooptik-frontend/src/sections/order/order.section.jsx",["662","663"],"import React, { useContext, useState, useEffect } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from \"../../components/popup/pop-up.component\"\nimport CombinedProductModal from '../../components/modal-finish-combined-product/modal-finish-combined-product.component'\n\nimport SelectUserComponent from './steps/1-select-user/select-user.component'\nimport SelectProductComponent from \"./steps/2-select-product/select-product.component\"\nimport SelectLensesComponent from './steps/3-select-lenses/select-lenses.component'\nimport SummaryComponent from './steps/4-summary/summary.component'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport {\n    Header,\n} from './order.styles'\n\nconst OrderSection = () => {\n    const { userId, orderId } = useParams()\n    const [step, setStep] = useState('selectUser')\n    const [order, setOrder] = useState({})\n\n    const [hasChanged, setHasChanged] = useState(false)\n    const [showCombinedProductModal, setShowCombinedProductModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const [combinedProducts, setCombinedProducts] = useState([])\n\n    const handleAddCombineProduct = combinedProductToAdd => {\n        setCombinedProducts([\n            ...combinedProducts,\n            combinedProductToAdd\n        ])\n    }\n\n    const handleOrderChange = valueToAdd => {\n        setHasChanged(true)\n        const { name, value } = valueToAdd\n        setOrder({\n            ...order,\n            [name]: value\n        })\n    }\n\n    const {\n        getMessage,\n        setShowModal,\n        closeModal,\n        isLoading,\n        showModal,\n        message\n    } = useContext(LoadingModalContext)\n\n    const showErrorMessage = (message) => {\n        getMessage(message)\n        setShowModal(true)\n    }\n\n    const orderData = useFetchById(\"api/admin/orders\", orderId)\n\n    const handleAddNextProduct = () => {\n        setStep('findProduct')\n        if (order?.product) {\n            if (order?.lenses) {\n                delete order[\"lenses\"]\n                delete order[\"product\"]\n            } else {\n                delete order[\"product\"]\n            }\n            setOrder({ ...order })\n        }\n    }\n\n    useEffect(() => {\n        if (userId !== 'nova-objednavka' && orderId) {\n            setIsUpdating(true)\n            setStep('summary')\n            if (orderData.response) {\n                setOrder({\n                    ...order,\n                    order: orderData.response.order,\n                    user: orderData.response.order.orderedBy,\n                })\n                setCombinedProducts(orderData.response.order.combinedProducts)\n            }\n        }\n\n    }, [userId, orderId, orderData.response])\n\n    useEffect(() => {\n        if (userId === 'nova-objednavka' && !orderId) {\n            if (order.user) {\n                setStep('findProduct')\n            }\n        }\n    }, [order.user])\n\n    useEffect(() => {\n        return () => {\n            setStep('selectUser')\n            setOrder({})\n            setHasChanged(false)\n            setShowCombinedProductModal(false)\n            setCombinedProducts([])\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n\n        <section>\n            <Prompt\n                when={hasChanged}\n                message={\"Máte nedokončenú objednávku, skutočne chcete odísť?\"}\n            />\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showCombinedProductModal && <CombinedProductModal\n                order={order}\n                close={() => setShowCombinedProductModal(false)}\n                addCombineProduct={handleAddCombineProduct}\n                next={() => {\n                    setStep(\"summary\")\n                    setShowCombinedProductModal(false)\n                }}\n            />\n            }\n            <Header>\n                <div>\n                    <h1>{isUpdating ? `Objednavka číslo ${order?.order?.customId}` : \"Nová objednávka\"}</h1>\n                </div>\n            </Header>\n            <ScrollContainer>\n                <div>\n                    {step === 'selectUser' && (\n                        <SelectUserComponent\n                            next={() => setStep('findProduct')}\n                            addToOrder={handleOrderChange}\n                        />\n                    )}\n                    {step === 'findProduct' && (\n                        <SelectProductComponent\n                            back={() => setStep(\"selectUser\")}\n                            next={setStep}\n                            addToOrder={handleOrderChange}\n                            showErrorMessage={showErrorMessage}\n                            showModal={() => setShowCombinedProductModal(true)}\n                        />\n                    )}\n                    {step === 'selectLenses' && (\n                        <SelectLensesComponent\n                            back={() => setStep(\"findProduct\")}\n                            next={() => setStep('summary')}\n                            addToOrder={handleOrderChange}\n                            order={order}\n                            showModal={() => setShowCombinedProductModal(true)}\n                        />\n                    )}\n                    {step === 'summary' && (\n                        <SummaryComponent\n                            order={order}\n                            isUpdating={isUpdating}\n                            combinedProducts={combinedProducts}\n                            back={() => setStep(\"selectLenses\")}\n                            addNextProduct={handleAddNextProduct}\n                            setHasChanged={setHasChanged}\n                        />\n                    )}\n                </div>\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default OrderSection\n","/imooptik-frontend/src/sections/calendar/calendar.section.jsx",["664","665","666"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BookingContext } from '../../context/booking/booking.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport InputRow from '../../components/product-input-row/product-input-row.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    DayTimesContainer,\n    CreateCalendarButton,\n    DayNames,\n    DeleteCalendarButton\n} from './calendar.styles'\n\nconst CalendarSection = () => {\n    const { calendarId } = useParams()\n    const {\n        isUpdatingCalendar,\n        handleCalendarChange,\n        handleDayTimeChange,\n        getCalendar,\n        createCalendar,\n        updateCalendar,\n        delCalendar,\n        calendar,\n        resetBooking\n    } = useContext(BookingContext)\n\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (calendarId === 'novy-kalendar') {\n            createCalendar(calendar)\n        } else {\n            console.log('update calendar')\n            updateCalendar(calendar)\n        }\n    }\n\n    useEffect(() => {\n        if (calendarId !== 'novy-kalendar') {\n            getCalendar(calendarId)\n        }\n    }, [calendarId])\n\n    useEffect(() => {\n        return () => {\n            resetBooking()\n        }\n    }, [])\n\n    if (!calendar || showModal) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n\n    console.log(isUpdatingCalendar)\n    console.log(calendar)\n\n    return (\n        <section>\n            <form onSubmit={handleSubmit}>\n                <Header>\n                    <div>\n                        <h1>{isUpdatingCalendar ? `Kalendár: ${calendar.name}` : \"Nový kalendár\"}</h1>\n                    </div>\n                    <div>\n                        {isUpdatingCalendar && <DeleteCalendarButton onClick={() => delCalendar(calendarId)}>Odstrániť</DeleteCalendarButton>}\n                        <CreateCalendarButton>{isUpdatingCalendar ? \"Upraviť kalendár\" : \"Vytvoriť kalendár\"}</CreateCalendarButton>\n                    </div>\n                </Header>\n                <ScrollContainer>\n                    <InputRow\n                        label=\"Meno kalendáru\"\n                        example=''\n                    >\n                        <CustomInput\n                            label=\"Pobočka*\"\n                            type='text'\n                            name='name'\n                            value={calendar.name}\n                            handleChange={(e) => handleCalendarChange(e)}\n                            required\n                        />\n                    </InputRow>\n                    <InputRow\n                        label=\"Koľko dní dopredu sa da objednať\"\n                        example=''\n                    >\n                        <CustomInput\n                            label=\"Počet dní\"\n                            type='number'\n                            name='daysIntoFuture'\n                            value={calendar.daysIntoFuture.toString()}\n                            handleChange={(e) => handleCalendarChange(e)}\n                            required\n                        />\n                    </InputRow>\n                    <InputRow\n                        label=\"Minimalný čas k odoslaní rezervácie\"\n                        example=''\n                    >\n                        <CustomInput\n                            label=\"Min\"\n                            type='number'\n                            name='allowMinutesBefore'\n                            value={calendar.allowMinutesBefore.toString()}\n                            handleChange={(e) => handleCalendarChange(e)}\n                            required\n                        />\n                    </InputRow>\n                    <InputRow\n                        label=\"Čas medzi rezerváciami\"\n                        example=''\n                    >\n                        <CustomInput\n                            label=\"Min*\"\n                            type='number'\n                            name='interval'\n                            value={calendar.interval.toString()}\n                            handleChange={(e) => handleCalendarChange(e)}\n                            required\n                        />\n                    </InputRow>\n\n                    <DayTimesContainer>\n                        <DayNames>\n                            <h3>Den</h3>\n                            <div>\n                                <h4>Pondelok</h4>\n                            </div>\n                            <div>\n                                <h4>Utorok</h4>\n                            </div>\n                            <div>\n                                <h4>Streda</h4>\n                            </div>\n                            <div>\n                                <h4>Štvrtok</h4>\n                            </div>\n                            <div>\n                                <h4>Piatok</h4>\n                            </div>\n                            <div>\n                                <h4>Sobota</h4>\n                            </div>\n                            <div>\n                                <h4>Nedeľa</h4>\n                            </div>\n                        </DayNames>\n                        <div>\n                            <h3>Začiatok prehliadok</h3>\n                            {calendar.startTimes.map((value, idx) => (\n                                <div key={idx}>\n                                    <CustomInput\n                                        label=\"Čas: HH/MM*\"\n                                        type='text'\n                                        name='startTimes'\n                                        value={value}\n                                        handleChange={(e) => handleDayTimeChange(e, idx)}\n                                        required\n                                    />\n                                </div>\n                            ))}\n                        </div>\n                        <div>\n                            <h3>Koniec prehliadok</h3>\n                            {calendar.endTimes.map((value, idx) => (\n                                <div key={idx}>\n                                    <CustomInput\n                                        label=\"Čas: HH/MM*\"\n                                        type='text'\n                                        name='endTimes'\n                                        value={value}\n                                        handleChange={(e) => handleDayTimeChange(e, idx)}\n                                        required\n                                    />\n                                </div>\n                            ))}\n                        </div>\n                    </DayTimesContainer>\n                </ScrollContainer>\n            </form>\n        </section>\n    )\n}\n\nexport default CalendarSection\n","/imooptik-frontend/src/sections/post/post.section.jsx",["667","668","669"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport CustomTextarea from '../../components/custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport { Quill } from 'react-quill'\n\nimport {\n    Header,\n    GridContainer,\n    PostImage,\n    DeleteButton,\n    AddButton,\n    Title,\n    ContentTextare,\n} from './post.styles'\n\nconst PostSection = () => {\n    const { id } = useParams()\n    const { push } = useHistory()\n    const {\n        createPost,\n        isLoading,\n        message,\n        showLoading,\n        setIsLoading,\n        getPost,\n        post,\n        handlePostUpdate,\n        resetBlog\n    } = useContext(BlogContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [content, setContent] = useState('')\n    const [image, setImage] = useState('')\n    const [draft, toggleDraft] = useState(false)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (image.length <= 0) return\n        if (content.length <= 0) return\n\n        if (id === 'novy-prispevok') {\n            createPost(image, title, description, draft, content)\n        } else {\n            handlePostUpdate(title, description, draft, content, image, id)\n        }\n\n        push('/dashboard/blog')\n\n    }\n\n    useEffect(() => {\n        setSelectedImage(null)\n\n        if (id !== 'novy-prispevok') {\n            getPost(id)\n            setIsUpdating(true)\n        }\n    }, [id])\n\n    useEffect(() => {\n        console.log(post)\n        if (post) {\n            console.log(post)\n            setTitle(post.name)\n            setDescription(post.description)\n            setContent(post.html)\n            toggleDraft(post.draft)\n            if (post.image) {\n                setImage(post.image._id)\n                setSelectedImage(post.image)\n            }\n        }\n    }, [post])\n\n    useEffect(() => {\n        return () => {\n            resetBlog()\n            setTitle('')\n            setDescription('')\n            setContent('')\n            setImage('')\n            toggleDraft(false)\n            setImageModal(false)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {isLoading && <Popup loading={showLoading} title={message} close={() => setIsLoading(false)} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={setImage} />}\n\n            <Header>\n                <div>\n                    <h1>Post</h1>\n                </div>\n                <div>\n                    <CustomCheckbox\n                        label='Draft'\n                        checked={draft}\n                        onChange={() => toggleDraft(!draft)}\n                    />\n                    <DeleteButton>Vymazať</DeleteButton>\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť príspevok\" : \"Pridať príspevok\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n\n                <GridContainer>\n                    <div>\n                        <h2>Informácia</h2>\n                        <CustomInput\n                            label=\"Nadpis\"\n                            type='text'\n                            name='title'\n                            value={title}\n                            handleChange={(e) => setTitle(e.target.value)}\n                            required\n                        />\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={description}\n                            handleChange={(e) => setDescription(e.target.value)}\n                            required\n                        />\n                        <h2>Titulná fotka</h2>\n                        <PostImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </PostImage>\n                    </div>\n                    <div>\n                        <Title>Obsah</Title>\n                        <QuillToolbar />\n                        <ContentTextare\n                            value={content}\n                            onChange={setContent}\n                            modules={modules}\n                            formats={formats}\n                        />\n                    </div>\n\n                </GridContainer>\n\n            </ScrollContainer>\n        </form>\n    )\n}\n\n\nconst CustomUndo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n        />\n    </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n        />\n    </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n    this.quill.history.undo();\n}\nfunction redoChange() {\n    this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n    \"arial\",\n    \"comic-sans\",\n    \"courier-new\",\n    \"georgia\",\n    \"helvetica\",\n    \"lucida\"\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nconst modules = {\n    toolbar: {\n        container: \"#toolbar\",\n        handlers: {\n            undo: undoChange,\n            redo: redoChange\n        }\n    },\n    history: {\n        delay: 500,\n        maxStack: 100,\n        userOnly: true\n    }\n};\n\n// Formats objects for setting up the Quill editor\nconst formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"align\",\n    \"strike\",\n    \"script\",\n    \"blockquote\",\n    \"background\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"color\",\n    \"code-block\"\n];\n\n// Quill Toolbar component\nconst QuillToolbar = () => (\n    <div id=\"toolbar\" className=\"toolbar\">\n        <span className=\"ql-formats\">\n            <select className=\"ql-size\" defaultValue=\"medium\">\n                <option value=\"extra-small\">Size 1</option>\n                <option value=\"small\">Size 2</option>\n                <option value=\"medium\">Size 3</option>\n                <option value=\"large\">Size 4</option>\n            </select>\n            <select className=\"ql-header\" defaultValue=\"3\">\n                <option value=\"1\">Heading</option>\n                <option value=\"2\">Subheading</option>\n                <option value=\"3\">Normal</option>\n            </select>\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n        </span>\n        <span className=\"ql-formats\">\n            <select className=\"ql-align\" />\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n                <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n                <CustomRedo />\n            </button>\n        </span>\n    </div>\n);\n\n\nexport default PostSection\n","/imooptik-frontend/src/context/user/user.queries.jsx",[],"/imooptik-frontend/src/context/user/user.utils.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx",[],"/imooptik-frontend/src/context/image/image.queries.jsx",[],"/imooptik-frontend/src/context/booking/booking.queries.jsx",[],"/imooptik-frontend/src/context/booking/booking.utils.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx",["670"],"export const initProductObj = {\n    name: \"\",\n    description: \"\",\n    price: 0,\n    type: 0,\n    brand: \"\",\n    soldAmount: 0,\n    available: [1001, 1001, 1001, 1001, 0],\n    eanCode: \"\",\n    image: \"\",\n    eshop: true,\n    link: '',\n    category: ''\n}\n\nexport const initGlassesObj = {\n    colorCode: \"\",\n    specs: {\n        frameColor: \"\",\n        frameMaterial: \"\",\n        frameStyle: \"\",\n        lensColor: \"\",\n        sex: \"M\",\n        size: [1001, 1001, 1001],\n    }\n}\n\nexport const initContactLensesObj = {\n    allowedCurves: [1001],\n    allowedDiameters: [1001],\n    dioptersRange: [1001, 1001]\n}\n\nexport const initLensesObj = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    dioptersRange: [1001, 1001],\n    cylinderRange: [1001, 1001],\n    price: 0,\n    brand: \"\",\n    image: ''\n}\n\nexport const retailNames = [\n    \"Obchodná 57, Bratislava\",\n    \"Miletičova 38, Bratislava\",\n    \"Vajnory, Bratislava\",\n    \"Senica, OC Branč\",\n    \"Trnava, City Aréna\"\n]\n\n// Category variables\nexport const productCategories = [\n    {\n        name: \"Dioptrické\",\n        value: 1\n    },\n    {\n        name: \"Slnečné\",\n        value: 2\n    },\n    {\n        name: \"Kontaktné Šošovky\",\n        value: 3\n    },\n    {\n        name: \"Športové\",\n        value: 4\n    },\n    {\n        name: \"Doplnky\",\n        value: 5\n    },\n    {\n        name: \"Šošovky\",\n        value: 0\n    },\n]\n\nexport const premisesTabs = [\n    {\n        id: 0,\n        name: \"Všetko\",\n        premises: 0,\n\n    },\n    {\n        id: 1,\n        name: \"Obchodná 57, Bratislava\",\n        premises: 1,\n    },\n    {\n        id: 2,\n        name: \"Miletičova 38, Bratislava\",\n        premises: 2,\n    },\n    {\n        id: 3,\n        name: \"Senica, OC Branč\",\n        premises: 3,\n    },\n    {\n        id: 4,\n        name: \"Vajnory, Bratislava\",\n        premises: 4,\n    },\n    // {\n    //     id: 5,\n    //     name: \"Trnava, City Aréna\",\n    //     permission: 5,\n    // },\n]\n\nexport const categoryTabs = [\n    {\n        id: 0,\n        name: \"Okuliare\",\n    },\n    {\n        id: 1,\n        name: \"Šosovky\",\n    },\n]\n\nexport const lensesBrands = [\n    \"Acuvue\",\n    \"Adore\",\n    \"Air Optix\",\n    \"Biofinity\",\n    \"Biomedics\",\n    \"Clariti\",\n    \"ColourVue\",\n    \"Comfilcon A\",\n    \"Dailies\",\n    \"Freshlook\",\n    \"Lenjoy\",\n    \"Proclear\",\n    \"Purevision\",\n    \"Soflens\",\n]\n\nexport const brands = [\n    \"Adidas\",\n    \"Armani Exchange\",\n    \"Arnette\",\n    \"Blackfin\",\n    \"Blumarine\",\n    \"Burberry\",\n    \"Bvlgari\",\n    \"Calvin Klein\",\n    \"Carolina Herrera\",\n    \"Carrera\",\n    \"David Beckham\",\n    \"Dior\",\n    \"Dolce & Gabbana\",\n    \"Elle\",\n    \"Emporio Armani\",\n    \"Esprit\",\n    \"Etnia Barcelona\",\n    \"Fendi\",\n    \"Fossil\",\n    \"Furla\",\n    \"Giorgio Armani\",\n    \"Givenchy\",\n    \"Gucci\",\n    \"Guess\",\n    \"H.I.S\",\n    \"Hawkers\",\n    \"Hugo Boss\",\n    \"Jaguar\",\n    \"Jimmy Choo\",\n    \"Lacoste\",\n    \"Liu Jo\",\n    \"Marc Jacobs\",\n    \"Max Mara\",\n    \"Max&Co\",\n    \"Meller\",\n    \"Mexx\",\n    \"Michael Kors\",\n    \"Moschino\",\n    \"Oakley\",\n    \"Persol\",\n    \"Polaroid\",\n    \"Police\",\n    \"Polo Ralph Lauren\",\n    \"Prada\",\n    \"Prada Linea Rossa\",\n    \"Ralph\",\n    \"Ralph Lauren\",\n    \"Ray-Ban\",\n    \"Salvatore Ferragamo\",\n    \"Smith\",\n    \"Strellson\",\n    \"Tiffany&Co.\",\n    \"Tom Ford\",\n    \"Tommy Hilfiger\",\n    \"Versace\",\n    \"Vogue\"\n]\n\nexport const formatPrice = price => {\n    let value = 0\n    if (price.includes(',')) {\n        if (price.split(',')[1].length === 1) {\n            value = price.split(',')[0] + price.split(',')[1] + \"0\"\n            return Number(value)\n        } else {\n            value = price.split(',')[0] + price.split(',')[1]\n            return Number(value)\n        }\n    } else {\n        return Number(price * 100)\n    }\n}\n\nexport const formatfloatNumber = number => {\n    let value = 0\n    if (number.includes(',')) {\n        value = number.split(',')[0] + '.' + number.split(',')[1]\n        return Number(value)\n    } else {\n        return Number(number)\n\n    }\n}\n\nexport const formatAvailable = (available, activePremisesTab) => {\n    if (available === undefined) return \"Šosovka\"\n\n    if (typeof available === \"number\") {\n        return `Na sklade ${available} kusov`\n    } else {\n        if (activePremisesTab === 0) {\n            return `Vo všetkých skladoch je ${available.reduce((acc, currValue) => acc + currValue)} kusov`\n        } else {\n            return `Na sklade ${available[activePremisesTab]} kusov`\n        }\n    }\n}\n\nexport const checkParameter = (parameter, idx) => {\n    if (parameter.length === 0) {\n        return \"\"\n    }\n    if (parameter[idx] === 1001) {\n        return \"\"\n    }\n\n    return parameter[idx].toString()\n}\n\nconst dia = \"áäčďéíľĺňóôŕšťúýžÁČĎÉÍĽĹŇÓŠŤÚÝŽ\";\nconst nodia = \"aacdeillnoorstuyzACDEILLNOSTUYZ\";\n\nexport const diaConvert = (text) => {\n    let convertText = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (dia.indexOf(text.charAt(i)) != -1) {\n            convertText += nodia.charAt(dia.indexOf(text.charAt(i)));\n        }\n        else {\n            convertText += text.charAt(i);\n        }\n    }\n    return convertText;\n}\n\nexport const formatLink = (text) => {\n    return diaConvert(text).replaceAll(\" \", \"-\").toLowerCase().trim()\n}","/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.styles.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx",[],"/imooptik-frontend/src/context/blog/blog.queries.jsx",[],"/imooptik-frontend/src/sections/orders/orders.styles.jsx",[],"/imooptik-frontend/src/context/orders/orders.utils.jsx",[],"/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx",[],"/imooptik-frontend/src/sections/analytics/analytics.styles.jsx",[],"/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx",[],"/imooptik-frontend/src/sections/product/product.styles.jsx",[],"/imooptik-frontend/src/sections/customers/customers.styles.jsx",[],"/imooptik-frontend/src/sections/post/post.styles.jsx",[],"/imooptik-frontend/src/sections/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/sections/order/order.styles.jsx",[],"/imooptik-frontend/src/sections/coupons/coupons.styles.jsx",[],"/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx",[],"/imooptik-frontend/src/sections/coupon/coupon.styles.jsx",[],"/imooptik-frontend/src/sections/booking/booking.styles.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.component.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.component.jsx",[],"/imooptik-frontend/src/hooks/useFetch.jsx",["671","672","673"],"import { useEffect, useState } from 'react'\n\nexport const useFetch = (path, options, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, options)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [])\n\n    return { response, isLoading, error }\n}\n\nexport const useFetchByQuery = (path, queryObj, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const raw = JSON.stringify(queryObj)\n\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path])\n\n    return { response, isLoading, error, refetch }\n}\n\nexport const useFetchById = (path, id, skip = false) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [refetchIndex, setRefetchIndex] = useState(0)\n\n    const refetch = () => setRefetchIndex(prevRefetchIndex => prevRefetchIndex + 1)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (skip) return\n            setIsLoading(true)\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}/${id}`, requestOptions)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [refetchIndex, path, id])\n\n    return { response, isLoading, error, refetch }\n}\n","/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx",[],"/imooptik-frontend/src/components/pagination/pagination.component.jsx",[],"/imooptik-frontend/src/components/user-form/user-form.component.jsx",["674","675"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ProfileOrderOverview from '../profile-order-overview/profile-order-overview.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\nimport ExaminationsOverview from '../examinations-overview/examinations-overview.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Profile,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    Title,\n    Container,\n    OrderHeader,\n    OrderButton,\n    CustomSelect,\n    AdminPanelContainer\n} from './user.form-styles'\n\nconst UserForm = ({\n    isAdmin,\n    isUpdating,\n    user,\n    handleChange,\n    handleParameterChange,\n    handleCompanyChange,\n    isOptometrist\n}) => {\n    const { push } = useHistory()\n\n    const handleAddOrderButtonClick = e => {\n        e.preventDefault()\n        push(`/dashboard/objednavky/${user._id}`)\n    }\n\n    console.log(user)\n\n\n    return (\n        <GridContainer>\n            <Profile>\n                {isAdmin && <AdminPanelContainer>\n                    <h2>Admin panel</h2>\n                    <InputRow\n                        label=\"Predajňa na ktorej uživatel pracuje\"\n                        example=''\n                    >\n                        <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Nezadané</option>\n                            {\n                                retailNames.map((name, idx) => {\n                                    if (idx === 4) return\n                                    return (\n                                        <option key={idx} value={idx + 1}>{name}</option>\n                                    )\n                                })\n                            }\n                        </CustomSelect>\n                    </InputRow>\n                    <InputRow\n                        label=\"Výška administrativných práv\"\n                        example=\"\"\n                    >\n                        <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Zákaznik</option>\n                            <option value={1}>Predavač</option>\n                            <option value={2}>Vedúci</option>\n                        </CustomSelect>\n                    </InputRow>\n\n                    <Container>\n                        <CustomCheckbox\n                            label='Optometrista'\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"optometrist\",\n                                    value: !user.optometrist\n                                }\n                            })}\n                            isActive={user.optometrist}\n                        />\n                    </Container>\n                </AdminPanelContainer>}\n                <div>\n                    <h2>Informácie</h2>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                // label=\"Priezvisko*\"\n                                type='date'\n                                name='birthDate'\n                                value={user.birthDate}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </div>\n\n                <Container>\n                    <h2>Kontaktné údaje</h2>\n                    <Row>\n                        <div>\n                            <CustomInput\n                                label=\"E-mail*\"\n                                type='email'\n                                name='email'\n                                value={user.email ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Telefónne číslo\"\n                                type='text'\n                                name='phone'\n                                value={user.phone ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <h2>Fakturačné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.address ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.psc ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.city ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.country ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n                <Container>\n                    <h2>Firemné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"IČO\"\n                                type='text'\n                                name='ico'\n                                value={user.company.ico ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"DIČ\"\n                                type='text'\n                                name='dic'\n                                value={user.company.dic ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.company.address ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.company.psc ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.company.city ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.company.country ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n\n                <Container>\n                    <h2>Parametre</h2>\n\n                    <ParametersTable\n                        parameters={user.lenses}\n                        handleChange={handleParameterChange}\n                    />\n                </Container>\n\n\n            </Profile>\n\n            {isUpdating && <div>\n                <OrderHeader>\n                    <Title>\n                        Objednávky\n                    </Title>\n                    <OrderButton onClick={e => handleAddOrderButtonClick(e)}>Pridať objednávku</OrderButton>\n                </OrderHeader>\n                <div>\n                    {user.orders.length > 0 ? user.orders.map((order, idx) => (\n                        <ProfileOrderOverview\n                            key={idx}\n                            id={order}\n                            handleUpdateClick={() => push(`/dashboard/objednavky/${user._id}/${order}`)}\n                        />\n                    )).reverse().slice(0, 5) : (\n                            <p>Žiadné objednávky</p>\n                        )}\n                </div>\n                {isOptometrist && <ExaminationsOverview />}\n            </div>}\n        </GridContainer>\n    )\n}\n\nexport default UserForm\n","/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx",["676"],"import React from 'react'\n\nimport CustomFormSwitch from '../custom-form-switch/custom-form-switch.component'\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from \"../custom-checkbox/custom-checkbox.component\"\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    CustomSelect,\n    Container,\n    GridRow,\n    ZeroMargin,\n    ColContainer,\n    CustomerForm\n} from './new-user-form.styles'\n\n\nconst NewUserForm = ({\n    formToShow,\n    switchFormButtons,\n    toggleUserForm,\n    user,\n    handleChange,\n    isAdmin,\n    handleParameterChange,\n    handleCompanyChange\n}) => {\n\n    return (\n        <div>\n            {/* Akého uživatela chcete vytvoriť? */}\n            {isAdmin && <CustomFormSwitch\n                items={switchFormButtons}\n                title=\"Akého uživatela chcete vytvoriť?\"\n                activeIndex={formToShow}\n                handleClick={toggleUserForm}\n            />}\n\n            {\n                formToShow === 0 ? (\n                    <CustomerForm>\n                        <ColContainer>\n                            <h2>Informácie</h2>\n                            <InputRow\n                                label=\"\"\n                                example='napr: John'\n                            >\n                                <CustomInput\n                                    label=\"Meno*\"\n                                    type='text'\n                                    name='fName'\n                                    value={user.fName ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: Doe'\n                            >\n                                <CustomInput\n                                    label=\"Priezvisko*\"\n                                    type='text'\n                                    name='lName'\n                                    value={user.lName ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: priklad@email.com'\n                            >\n                                <CustomInput\n                                    label=\"E-mail*\"\n                                    type='email'\n                                    name='email'\n                                    value={user.email ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: 091234567'\n                            >\n                                <CustomInput\n                                    label=\"Telefónne číslo\"\n                                    type='text'\n                                    name='phone'\n                                    value={user.phone ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"Dátum narodenia\"\n                                example=''\n                            >\n                                <CustomInput\n                                    // label=\"Priezvisko*\"\n                                    type='date'\n                                    name='birthDate'\n                                    value={user.birthDate}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n\n                            <Container>\n                                <h2>Parametre</h2>\n\n                                <ParametersTable\n                                    parameters={user.lenses}\n                                    handleChange={handleParameterChange}\n                                />\n                            </Container>\n                        </ColContainer>\n\n                        <ColContainer>\n                            <div>\n                                <h2>Fakturačné údaje</h2>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"Ulica a čislo domu\"\n                                            type='text'\n                                            name='address'\n                                            value={user.address ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"PSČ\"\n                                            type='text'\n                                            name='psc'\n                                            value={user.psc ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Mesto\"\n                                            type='text'\n                                            name='city'\n                                            value={user.city ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Krajina\"\n                                            type='text'\n                                            name='country'\n                                            value={user.country ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                </GridRow>\n                            </div>\n\n                            <Container>\n                                <h2>Firemné údaje</h2>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"IČO\"\n                                            type='text'\n                                            name='ico'\n                                            value={user.company.ico ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"DIČ\"\n                                            type='text'\n                                            name='dic'\n                                            value={user.company.dic ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"Ulica a čislo domu\"\n                                            type='text'\n                                            name='address'\n                                            value={user.company.address ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"PSČ\"\n                                            type='text'\n                                            name='psc'\n                                            value={user.company.psc ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Mesto\"\n                                            type='text'\n                                            name='city'\n                                            value={user.company.city ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Krajina\"\n                                            type='text'\n                                            name='country'\n                                            value={user.company.country ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </div>\n                                </GridRow>\n                            </Container>\n                        </ColContainer>\n\n                    </CustomerForm>\n                ) : (\n                        <CustomerForm>\n\n                            <ColContainer>\n                                <h2>Informácie</h2>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: John'\n                                >\n                                    <CustomInput\n                                        label=\"Meno*\"\n                                        type='text'\n                                        name='fName'\n                                        value={user.fName ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: Doe'\n                                >\n                                    <CustomInput\n                                        label=\"Priezvisko*\"\n                                        type='text'\n                                        name='lName'\n                                        value={user.lName ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: priklad@email.com'\n                                >\n                                    <CustomInput\n                                        label=\"E-mail*\"\n                                        type='email'\n                                        name='email'\n                                        value={user.email ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"Aspoň 1 velké pismeno, 1 malé pismeno a 1 číslo*\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Heslo*\"\n                                        type='password'\n                                        name='password'\n                                        value={user.password ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Potvrď heslo*\"\n                                        type='password'\n                                        name='confirmPassword'\n                                        value={user.confirmPassword ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n\n\n                            </ColContainer>\n\n                            <ColContainer>\n                                <h2>Admin privilégia</h2>\n                                <InputRow\n                                    label=\"Predajňa na ktorej uživatel pracuje\"\n                                    example=''\n                                >\n\n                                    <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Nezadané</option>\n\n                                        {\n                                            retailNames.map((name, idx) => {\n                                                if (idx === 4) return\n                                                return (\n                                                    <option key={idx} value={idx + 1}>{name}</option>\n\n                                                )\n                                            })\n                                        }\n                                    </CustomSelect>\n\n                                </InputRow>\n                                <InputRow\n                                    label=\"Výška administrativných práv\"\n                                    example=\"\"\n                                >\n                                    <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Zákaznik</option>\n                                        <option value={1}>Predavač</option>\n                                        <option value={2}>Vedúci</option>\n                                    </CustomSelect>\n\n                                </InputRow>\n                                <Container>\n                                    <CustomCheckbox\n                                        label='Optometrista'\n                                        handleClick={() => handleChange({\n                                            target: {\n                                                name: \"optometrist\",\n                                                value: !user.optometrist\n                                            }\n                                        })}\n                                        isActive={user.optometrist}\n                                    />\n                                </Container>\n                            </ColContainer>\n                        </CustomerForm>\n                    )\n            }\n        </div>\n    )\n}\n\nexport default NewUserForm\n","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.component.jsx",["677","678"],"import React, { useEffect, useContext, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\n// import { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\n// import CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    // const {\n    //     getMessage,\n    //     setIsLoading,\n    //     setShowModal,\n    //     closeModal\n    // } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    // const getCropData = async (e) => {\n    //     e.preventDefault()\n    //     setShowModal(true)\n    //     setIsLoading(true)\n\n    //     try {\n    //         // if (typeof cropper !== 'undefined') {\n    //         toDataUrl(imgUrl, async (imgData) => {\n    //             const data = await handleImage(imgData, imageName, imageAlt)\n\n    //             if (data.image) {\n    //                 setImage(data.image._id)\n    //                 setSelectedImage(data.image)\n    //                 getImages()\n    //                 close()\n    //             }\n    //         })\n\n    //         // }\n    //         setShowModal(false)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    //     closeModal()\n    // };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Vybrať obrázok</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx",["679","680"],"import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport ProductInputRow from '../product-input-row/product-input-row.component'\n\nimport {\n    ImageContainer,\n    ProductImage,\n    GlassesContainerForm,\n    GlassesContainer,\n    GlassesParameterContainer,\n    StockContainer,\n    CustomSelect\n} from './product-glasses-form.styles.jsx'\n\nconst ProductGlassesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    retailNames,\n    currentUser,\n    checkParameter,\n    handleAvailableChange,\n    handleGlassesParametersChange,\n    handleGlassesSpecsSizeChange,\n    handleSpecsChange,\n    glassesParameters,\n    setImageModal,\n    isUpdating,\n}) => {\n\n    return (\n        <GlassesContainerForm>\n            <GlassesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </GlassesContainer>\n            <div>\n                <GlassesParameterContainer>\n                    <h3>Parametre</h3>\n                    <CustomInput\n                        label=\"Farebný kód\"\n                        type='text'\n                        name='colorCode'\n                        value={glassesParameters.colorCode ?? \"\"}\n                        handleChange={(e) => handleGlassesParametersChange(e)}\n                    />\n                    <div>\n                        <CustomInput\n                            label=\"Farba rámu\"\n                            type='text'\n                            name='frameColor'\n                            value={glassesParameters.specs.frameColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Materiál rámu\"\n                            type='text'\n                            name='frameMaterial'\n                            value={glassesParameters.specs.frameMaterial ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Tvar rámu\"\n                            type='text'\n                            name='frameStyle'\n                            value={glassesParameters.specs.frameStyle ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Farba šošovky\"\n                            type='text'\n                            name='lensColor'\n                            value={glassesParameters.specs.lensColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomSelect\n                            label=\"Pohlavie\"\n                            type='text'\n                            name='sex'\n                            value={glassesParameters.specs.sex ?? \"\"}\n                            onChange={(e) => handleSpecsChange(e)}\n                        >\n                            <option value='M'>Pánske</option>\n                            <option value='W'>Dámske</option>\n                            <option value='D'>Detské</option>\n                            <option value='U'>Nezáleží</option>\n                        </CustomSelect>\n                    </div>\n                    <div>\n                        <h4>Velkosť</h4>\n                        {glassesParameters.specs.size.map((value, idx) => (\n                            <CustomInput\n                                key={idx}\n                                label={idx === 0 ? \"Veľkosť očnice\" : idx === 1 ? \"Veľkosť mostika\" : \"Veľkosť stranice\"}\n                                type='text'\n                                name='size'\n                                value={checkParameter(glassesParameters.specs.size, idx)}\n                                handleChange={(e) => handleGlassesSpecsSizeChange(e, idx)}\n                            />\n                        ))}\n                    </div>\n                </GlassesParameterContainer>\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    {\n                        product.available.map((value, idx) => {\n                            if (idx === 4) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })\n                    }\n                </StockContainer>\n\n            </div>\n        </GlassesContainerForm>\n    )\n}\n\nexport default ProductGlassesForm\n","/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.component.jsx",["681"],"import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    AccessoriesFormContainer,\n    AccessoriesContainer,\n    StockContainer,\n    ImageContainer,\n    ProductImage,\n} from './product-accessories-form.styles'\n\nconst ProductAccessoriesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    setImageModal,\n    handleAvailableChange,\n    checkParameter,\n    retailNames,\n    currentUser,\n    isUpdating\n}) => {\n    return (\n        <AccessoriesFormContainer>\n            <AccessoriesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </AccessoriesContainer>\n            <StockContainer>\n                <h3>Skladové zásoby</h3>\n                {\n                    product.available.map((value, idx) => {\n                        if (idx === 4) return\n                        return (\n                            <CustomInput\n                                key={idx}\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, idx)}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        )\n                    })\n                }\n            </StockContainer>\n\n        </AccessoriesFormContainer>\n    )\n}\n\nexport default ProductAccessoriesForm\n","/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.component.jsx",["682"],"import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    ContactLensesContainer,\n    ContactLensesFormContainer,\n    StockContainer,\n    ContactLensesParametersContainer,\n    IncreaseButton,\n    ImageContainer,\n    ProductImage,\n} from './product-contact-lenses-form.styles'\n\nconst ProductContactLensesForm = ({\n    product,\n    handleChange,\n    setImageModal,\n    selectedImage,\n    checkParameter,\n    handleContactLensesChange,\n    handleAddNewParameter,\n    contactLensesParameters,\n    retailNames,\n    currentUser,\n    handleAvailableChange,\n    isUpdating\n}) => {\n    return (\n        <ContactLensesFormContainer>\n            <ContactLensesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </ContactLensesContainer>\n            <div>\n                <ContactLensesParametersContainer>\n                    <h3>Parametre</h3>\n                    <div>\n                        <h4>Zakrivenie</h4>\n                        {contactLensesParameters.allowedCurves.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedCurves\"}\n                                    value={checkParameter(contactLensesParameters.allowedCurves, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedCurves'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n                    <div>\n                        <h4>Priemery</h4>\n                        {contactLensesParameters.allowedDiameters.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedDiameters\"}\n                                    value={checkParameter(contactLensesParameters.allowedDiameters, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedDiameters'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n\n                    <div>\n                        <h4>Dioptrie</h4>\n                        {contactLensesParameters.dioptersRange.map((value, idx) => {\n                            const inputLabel = idx === 0 ? \"minimum\" : \"maximum\"\n\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={inputLabel}\n                                    type='text'\n                                    name={\"dioptersRange\"}\n                                    value={checkParameter(contactLensesParameters.dioptersRange, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </div>\n                </ContactLensesParametersContainer>\n\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    {\n                        product.available.map((value, idx) => {\n                            if (idx === 4) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })\n                    }\n                </StockContainer>\n            </div>\n        </ContactLensesFormContainer>\n    )\n}\n\nexport default ProductContactLensesForm\n","/imooptik-frontend/src/components/product-overview/product-overview.component.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx",[],"/imooptik-frontend/src/components/modal-finish-combined-product/modal-finish-combined-product.component.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.component.jsx",["683","684","685","686","687","688","689"],"/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx",[],"/imooptik-frontend/src/sections/order/steps/4-summary/summary.component.jsx",[],"/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.component.jsx",["690"],"import React, { useState, useEffect, useContext } from 'react'\nimport { WarehouseContext } from '../../../../context/warehouse/warehouse.context'\n\nimport BackButton from '../../../../components/custom-back-button/custom-back-button.component'\nimport ParametersTable from '../../../../components/parameters-table/parameters-table.component'\n\nimport {\n    ParametersContainer,\n    LensesContainer,\n    LensesImg,\n    SelectLensesContainer,\n    LensesFlexContainer\n} from './select-lenses.styles'\n\nconst SelectLensesComponent = ({ back, next, addToOrder, order, showModal }) => {\n    const [lensesItems, setLensesItems] = useState([])\n    const {\n        lensesProducts,\n        getLenses\n    } = useContext(WarehouseContext)\n\n    const handleClick = (lenses) => {\n        // if (!lenses) return showModal()\n        addToOrder({\n            name: \"lenses\",\n            value: lenses\n        })\n        showModal()\n    }\n\n    useEffect(() => {\n        if (!lensesProducts) {\n            getLenses()\n        }\n        if (lensesProducts) {\n            setLensesItems(lensesProducts)\n        }\n    }, [lensesProducts])\n\n    return (\n        <div>\n            <BackButton onClick={back} />\n            <div>\n                <ParametersContainer>\n                    <h3>Parametre zákaznika</h3>\n                    <ParametersTable\n                        parameters={order.user.lenses}\n                        disabledInputs={true}\n                    />\n                </ParametersContainer>\n\n            </div>\n            <SelectLensesContainer>\n                <h3>Výber Šošoviek</h3>\n                <LensesFlexContainer>\n                    {lensesItems.map((lenses, idx) => (\n                        <LensesContainer key={idx} onClick={() => handleClick(lenses)}>\n                            <h4>{lenses.name}</h4>\n                            <LensesImg>\n                                {/* <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${lenses.image.imagePath}`} alt={lenses.image.alt} /> */}\n                            </LensesImg>\n                            <p>{lenses.description}</p>\n                            {lenses.dioptersRange && <p>{`Dioptrie od ${lenses.dioptersRange[0]} do ${lenses.dioptersRange[1]}`}</p>}\n                            {lenses.cylinderRange && <p>{`Cylinder  od ${lenses.cylinderRange[0]} do ${lenses.cylinderRange[1]}`}</p>}\n                            <h5>{(lenses.price / 100).toFixed(2)}€</h5>\n                        </LensesContainer>\n                    ))}\n                    <LensesContainer onClick={() => handleClick(null)}>\n                        <h4>Žiadné sklá</h4>\n                        <LensesImg>\n                            {/* <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${lenses.image.imagePath}`} alt={lenses.image.alt} /> */}\n                        </LensesImg>\n                        <h5>0€</h5>\n\n                    </LensesContainer>\n                </LensesFlexContainer>\n            </SelectLensesContainer>\n        </div >\n    )\n}\n\nexport default SelectLensesComponent\n","/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.component.jsx",["691","692"],"import React, { useState, useEffect, useContext } from 'react'\nimport { WarehouseContext } from '../../../../context/warehouse/warehouse.context'\n\nimport CustomInput from '../../../../components/custom-input/custom-input.component'\nimport BackButton from '../../../../components/custom-back-button/custom-back-button.component'\n\nimport {\n    formatAvailable,\n    isAvailable\n} from '../../../../utils/orders.utils'\n\nimport {\n    SearchContainer,\n    SearchButton,\n    TableContainer,\n    ProductTableHead,\n    ProductTableRow,\n    TableCol\n} from './select-product.styles'\n\nconst SelectProductComponent = ({ back, next, addToOrder, showModal, showErrorMessage }) => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const [productItems, setProductItems] = useState([])\n\n    const {\n        products,\n        getProductsByQuery\n    } = useContext(WarehouseContext)\n\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        getProductsByQuery({\n            query: searchQuery\n        })\n    }\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== \"\") {\n            if (e.key === 'Enter') {\n                getProductsByQuery({\n                    query: searchQuery\n                })\n            }\n        }\n    }\n\n    const handleClick = (product) => {\n        addToOrder({\n            name: \"product\",\n            value: product\n        })\n        if (product.type === 1) {\n            next(\"selectLenses\")\n            // next(\"summary\")\n        } else {\n            showModal()\n        }\n    }\n\n    useEffect(() => {\n        if (!products || productItems.length < 1) {\n            getProductsByQuery({\n                limit: 10\n            })\n        }\n        if (products) {\n            setProductItems(products)\n        }\n    }, [products])\n\n    useEffect(() => {\n        if (products) {\n            if (searchQuery === '') {\n                getProductsByQuery({\n                    limit: 10\n                })\n            }\n        }\n    }, [searchQuery])\n\n    useEffect(() => {\n        return () => {\n            setProductItems([])\n        }\n    }, [])\n\n    return (\n        <div>\n            <BackButton onClick={back} />\n            <SearchContainer>\n                <h3>Vyhľadať produkt</h3>\n                <div>\n                    <CustomInput\n                        label='Názov produktu, eanCode alebo popis'\n                        value={searchQuery}\n                        handleChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n            </SearchContainer>\n\n            <TableContainer>\n                <ProductTableHead>\n                    <TableCol>eanCode</TableCol>\n                    <TableCol>Obrázok</TableCol>\n                    <TableCol>Názov</TableCol>\n                    <TableCol>Značka</TableCol>\n                    <TableCol>Cena</TableCol>\n                    <TableCol>Dostupnosť</TableCol>\n                </ProductTableHead>\n                {productItems.map((product, idx) => (\n                    <ProductTableRow key={idx} onClick={() => isAvailable(product.available) ? handleClick(product) : showErrorMessage(\"Produkt nieje na sklade.\")}>\n                        <TableCol>{product.eanCode}</TableCol>\n                        <TableCol>\n                            {product?.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${product.image.imagePath}`} alt={product.image.alt} />}\n                        </TableCol>\n                        <TableCol>{product.name}</TableCol>\n                        <TableCol>{product.brand}</TableCol>\n                        <TableCol>{(product.price / 100).toFixed(2)}€</TableCol>\n                        <TableCol>{formatAvailable(product.available)}</TableCol>\n                    </ProductTableRow>\n                ))}\n            </TableContainer>\n        </div>\n    )\n}\n\nexport default SelectProductComponent\n","/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.component.jsx",["693","694"],"import React, { useState, useEffect, useContext } from 'react'\nimport { UserContext } from '../../../../context/user/user.context'\n\nimport CustomInput from '../../../../components/custom-input/custom-input.component'\n\nimport {\n    SearchContainer,\n    TableContainer,\n    UserTableHead,\n    UserTableRow,\n    TableCol,\n    SearchButton\n} from './select-user.styles'\n\nconst SelectUserComponent = ({ next, addToOrder }) => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const [userItems, setUserItems] = useState([])\n\n    const {\n        users,\n        getFilteredUsers,\n        getUserByQuery\n    } = useContext(UserContext)\n\n    const handleClick = (user) => {\n        addToOrder({\n            name: \"user\",\n            value: user\n        })\n        next()\n    }\n\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== '') {\n            if (e.key === 'Enter') {\n                getUserByQuery({\n                    query: searchQuery\n                })\n            }\n        }\n    }\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        getUserByQuery({\n            query: searchQuery\n        })\n    }\n\n    useEffect(() => {\n        if (!users) {\n            getFilteredUsers({\n                limit: 5\n            })\n        }\n        if (users) {\n            setUserItems(users)\n        }\n    }, [users])\n\n    useEffect(() => {\n        if (users) {\n            if (searchQuery === '') {\n                getFilteredUsers({\n                    limit: 5\n                })\n                setUserItems(users)\n            }\n        }\n    }, [searchQuery])\n\n    useEffect(() => {\n        return () => {\n            setSearchQuery('')\n            setUserItems([])\n        }\n    }, [])\n\n    return (\n        <div>\n            <SearchContainer>\n                <h3>Vyhľadať zákaznika</h3>\n                <div>\n                    <CustomInput\n                        label={\"Meno, priezvisko, email alebo tel. číslo\"}\n                        value={searchQuery}\n                        onChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n            </SearchContainer>\n\n            <TableContainer>\n                <UserTableHead>\n                    <TableCol>Meno a priezvisko</TableCol>\n                    <TableCol>Email</TableCol>\n                    <TableCol>Možnosti</TableCol>\n                </UserTableHead>\n                {userItems.map((user, idx) => (\n                    <UserTableRow key={idx} onClick={() => handleClick(user)}>\n                        <TableCol>{user.name}</TableCol>\n                        <TableCol>{user.email}</TableCol>\n                        <TableCol>{user.phone}</TableCol>\n                    </UserTableRow>\n                ))}\n            </TableContainer>\n\n        </div>\n    )\n}\n\nexport default SelectUserComponent\n","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.styles.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx",[],"/imooptik-frontend/src/components/pagination/pagination.styles.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx",[],"/imooptik-frontend/src/hooks/useOutsideAlerter.jsx",["695"],"import React, { useRef, useEffect } from \"react\";\n\nexport const useOutsideHandler = (ref, action) => {\n    useEffect(() => {\n        const handleClickOutside = e => {\n            if (ref.current && !ref.current.contains(e.target)) {\n                action()\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n\n    }, [ref])\n}\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(ref) {\n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                alert(\"You clicked outside of me!\");\n            }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [ref]);\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nfunction OutsideAlerter(props) {\n    const wrapperRef = useRef(null);\n    useOutsideAlerter(wrapperRef);\n\n    return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport default OutsideAlerter;\n","/imooptik-frontend/src/components/user-form/user.form-styles.jsx",[],"/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx",[],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx",[],"/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx",[],"/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.styles.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx",[],"/imooptik-frontend/src/components/modal-finish-combined-product/modal-finish-combined-product.styles.jsx",[],"/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx",["696","697"],"import React, { useState, useContext } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { OrdersContext } from '../../context/orders/orders.context'\nimport ReactDOM from 'react-dom'\n\nimport Popup from '../popup/pop-up.component'\n\nimport { retailNames } from '../../context/warehouse/warehouse.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    CustomSelect,\n    SubmitButton\n} from './order-deligate-modal.styles'\n\n\nconst OrderDeligateModal = ({ close, premise, id, refetch }) => {\n    const [value, setValue] = useState(premise)\n    const { token } = useContext(AuthContext)\n    const { getOrders } = useContext(OrdersContext)\n    const {\n        getMessage,\n        message,\n        isLoading,\n        setIsLoading,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const handleClick = async () => {\n        setIsLoading(true)\n        const myHeaders = new Headers();\n        myHeaders.append(\"auth-token\", token);\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const raw = JSON.stringify({\n            premises: Number(value),\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders/${id}/delegate`, requestOptions)\n            console.log(response)\n            if (response.status === 400) {\n                getMessage(\"Faktúra musí byt zaplatená, aby mohla byť priradená prevádzke\")\n            }\n            if (response.status === 401) {\n                getMessage(\"Musíš byt vedúci, aby si mohol manipulovať s priradovanim\")\n            }\n            const data = await response.json()\n\n            if (data.order) {\n                refetch()\n                setIsLoading(false)\n                close()\n                return\n            }\n\n            // getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            setIsLoading(false)\n        }\n    }\n\n    if (isLoading || message) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Priradiť k prevádzke</h3>\n                <CustomSelect value={value} onChange={(e) => setValue(e.target.value)}>\n                    <option value={0}>Nezadané</option>\n                    {retailNames.map((name, idx) => {\n                        if (idx === 4) return\n                        return (\n                            <option key={idx} value={idx + 1}>{name}</option>\n                        )\n                    })}\n                </CustomSelect>\n                <SubmitButton onClick={handleClick}>Priradiť</SubmitButton>\n            </Modal>\n        </ModalContainer >\n    ), document.getElementById('portal'))\n}\n\nexport default OrderDeligateModal\n","/imooptik-frontend/src/components/examinations-overview/examinations-overview.component.jsx",["698","699"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useFetchById } from '../../hooks/useFetch'\nimport { ExaminationContext } from '../../context/examination/examination.context'\n\nimport ExaminationUser from '../examination-user/examination-user.component'\nimport OptometristExaminationModal from '../modal-optometrist-examination/modal-optometrist-examination.component'\n\nimport {\n    checkParameterValue\n} from '../../utils/parameters.utils'\n\nimport {\n    ExaminationsOverviewContainer,\n    Header,\n    ExaminationContainer,\n    ExamHead,\n    ExamTableContainer,\n    HeadTableCol,\n    TableCol,\n    ExaminationOptions,\n    AddButton,\n    UpdateButton,\n    DeleteButton\n} from './examinations-overview.styles'\n\nconst ExaminationsOverview = () => {\n    const params = useParams()\n    const examinationData = useFetchById(\"api/admin/exams/user\", params.id)\n    const { deleteExamination } = useContext(ExaminationContext)\n    const [showOptometristModal, setShowOptometristModal] = useState(false)\n    const [examinations, setExaminations] = useState([])\n    const [examinationToUpdate, setExaminationToUpdate] = useState(null)\n\n    const handleUpdateClick = (e, id) => {\n        e.preventDefault()\n        setExaminationToUpdate(id)\n        setShowOptometristModal(true)\n    }\n\n    const handleDelete = (e, id) => {\n        e.preventDefault()\n        deleteExamination(id)\n        examinationData.refetch()\n    }\n\n    const handleCloseModal = () => {\n        setShowOptometristModal(false)\n        setExaminationToUpdate(null)\n    }\n\n    useEffect(() => {\n        if (!examinationData.isLoading) {\n            if (examinationData.response) {\n                setExaminations(examinationData.response.exams)\n            }\n        }\n    }, [examinationData.isLoading])\n\n    return (\n        <ExaminationsOverviewContainer>\n            {showOptometristModal && <OptometristExaminationModal\n                userId={params.id}\n                examinationToUpdate={examinationToUpdate}\n                refetch={examinationData.refetch}\n                close={handleCloseModal}\n            />}\n            <Header>\n                <h2>Vyšetrenia</h2>\n                <div>\n                    <AddButton type='button' onClick={() => setShowOptometristModal(true)}>Pridať prehliadku</AddButton>\n                </div>\n            </Header>\n\n\n            <div>\n                {examinations.map((examination, idx) => (\n                    <ExaminationContainer key={idx}>\n                        <ExamHead>\n                            <h3>Dátum</h3>\n                            <p>{new Date(examination?.date).toLocaleDateString(\"sk-SK\", { weekday: 'long', month: 'long', day: 'numeric' })}</p>\n                        </ExamHead>\n                        <ExamTableContainer>\n                            <HeadTableCol>\n                                <div>-</div>\n                                <div>PO</div>\n                                <div>ĽO</div>\n                                <div>PO</div>\n                                <div>ĽO</div>\n                            </HeadTableCol>\n                            <TableCol>\n                                <div>sph</div>\n                                {examination?.parameters?.sph.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>cyl</div>\n                                {examination?.parameters?.cyl.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>ax</div>\n                                {examination?.parameters?.ax.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus D</div>\n                                {examination?.parameters?.vizusD.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus bino</div>\n                                {examination?.parameters?.vizusBino.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus B</div>\n                                {examination?.parameters?.vizusB.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>prizma</div>\n                                {examination?.parameters?.prizma.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>basis</div>\n                                {examination?.parameters?.basis.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>PD</div>\n                                {examination?.parameters?.pd.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>ADD</div>\n                                {examination?.parameters?.add.map((value, idx) => {\n                                    if (idx > 1) return\n                                    return (\n                                        <div key={idx}>\n                                            {checkParameterValue(value)}\n                                        </div>\n                                    )\n                                })}\n                            </TableCol>\n                        </ExamTableContainer>\n                        <ExaminationOptions>\n                            <ExaminationUser userId={examination.doneBy} />\n                            <div>\n                                <UpdateButton onClick={e => handleUpdateClick(e, examination._id)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={e => handleDelete(e, examination._id)}>Vymazať</DeleteButton>\n                            </div>\n                        </ExaminationOptions>\n                    </ExaminationContainer>\n                ))}\n            </div>\n        </ExaminationsOverviewContainer>\n    )\n}\n\nexport default ExaminationsOverview\n","/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx",["700","701","702","703","704"],"import React, { useEffect } from 'react'\n\nimport {\n    TableContainer,\n    TitleCol,\n    Col,\n    OsContainer\n} from './parameters-table.styles'\n\nconst ParametersTable = ({ parameters, handleChange, disabledInputs = false }) => {\n    const checkParameters = (parameter, idx) => {\n        if (parameter.length === 0) {\n            return \"\"\n        }\n        if (parameter[idx] === 1001) {\n            return \"\"\n        }\n\n        return parameter[idx]\n    }\n\n    useEffect(() => {\n        if (handleChange) {\n            if (parameters.diopters && parameters.addition) {\n                handleChange({\n                    target: {\n                        name: \"diopters\",\n                        value: (Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))).toFixed(2)\n                    }\n                }, 2)\n                handleChange({\n                    target: {\n                        name: \"diopters\",\n                        value: (Number(checkParameters(parameters.diopters, 1)) + Number(checkParameters(parameters.addition, 1))).toFixed(2)\n                    }\n                }, 3)\n            }\n        }\n    }, [parameters.diopters[0], parameters.addition[0], parameters.diopters[1], parameters.addition[1]])\n\n    return (\n        <TableContainer>\n            <TitleCol>\n                <div>{\" \"}</div>\n                <div>\n                    <p>P</p>\n                </div>\n                <div>\n                    <p>Ľ</p>\n                </div>\n                <div>\n                    <p>P</p>\n                </div>\n                <div>\n                    <p>Ľ</p>\n                </div>\n            </TitleCol>\n\n\n            <Col>\n                <div>sph</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.diopters, idx)}\n                                name=\"diopters\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>cyl</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.cylinder, idx)}\n                                name=\"cylinder\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>ax</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <OsContainer key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.cylinderAxes, idx)}\n                                name=\"cylinderAxes\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </OsContainer>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>PD</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.distance, idx)}\n                                name=\"distance\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>prizma</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.prism, idx)}\n                                name=\"prism\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>basis</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.basis, idx)}\n                                name=\"basis\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>addicia</div>\n\n                {[...Array(2)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.addition, idx)}\n                                name=\"addition\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n\n\n        </TableContainer>\n    )\n}\n\nexport default ParametersTable\n","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx",[],"/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx",[],"/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.styles.jsx",[],"/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.styles.jsx",[],"/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.styles.jsx",[],"/imooptik-frontend/src/sections/order/steps/4-summary/summary.styles.jsx",[],"/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.component.jsx",[],"/imooptik-frontend/src/components/order-summary-lenses-name/order-summary-lenses-name.component.jsx",[],"/imooptik-frontend/src/components/order-summary-product-name/order-summary-product-name.component.jsx",[],"/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx",[],"/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx",[],"/imooptik-frontend/src/components/examinations-overview/examinations-overview.styles.jsx",[],"/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx",[],"/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx",[],"/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx",[],"/imooptik-frontend/src/components/examination-user/examination-user.component.jsx",[],"/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.component.jsx",["705"],"import React, { useState, useContext, useEffect } from 'react'\nimport { ExaminationContext } from '../../context/examination/examination.context'\nimport { useFetchById } from '../../hooks/useFetch'\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    checkParameter,\n    formatParameter,\n} from '../../utils/parameters.utils'\n\nimport {\n    CloseButton,\n    Modal,\n    ModalContainer,\n    TableContainer,\n    HeadTableCol,\n    TableCol,\n    TableBlock,\n    TwoCols,\n    SubmitButton\n} from './modal-optometrist-examination.styles'\n\nconst OptometristExaminationModal = ({ close, refetch, userId, examinationToUpdate }) => {\n    const examinationData = useFetchById('api/admin/exams', examinationToUpdate, !examinationToUpdate)\n\n    const { createExamination, updateExamination } = useContext(ExaminationContext)\n    const [examinationObj, setExaminationObj] = useState({})\n    const [parameters, setParameters] = useState({})\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = parameters[name] || [1001, 1001, 1001, 1001]\n        arr[idx] = value === '' ? 1001 : value\n\n        setParameters({\n            ...parameters,\n            [name]: arr\n        })\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete examinationObj[name]\n            setExaminationObj({\n                ...examinationObj,\n            })\n            return\n        }\n\n        setExaminationObj({\n            ...examinationObj,\n            [name]: value\n        })\n    }\n\n    const formatParameters = (e, newParameters) => {\n        if (newParameters) {\n            const { name } = e.target\n            setParameters({\n                ...parameters,\n                [name]: newParameters.map(value => formatParameter(value))\n            })\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        let examObj = {\n            ...examinationObj,\n            doneTo: userId,\n            parameters: {\n                ...parameters\n            }\n        }\n\n        console.log(\"EXAMINATION OBJECT BEFORE SEND\")\n        console.log(examObj)\n\n        if (examinationToUpdate) {\n            console.log(\"UPDATE EXAMINATION\")\n            delete examObj[\"doneTo\"]\n            delete examObj[\"doneBy\"]\n            delete examObj[\"date\"]\n            delete examObj[\"_id\"]\n            delete examObj[\"__v\"]\n\n            console.log(examObj)\n            updateExamination(examObj, examinationToUpdate)\n\n        } else {\n            console.log(\"CREATE EXAMINATION\")\n\n            createExamination(examObj)\n        }\n        refetch()\n        close()\n    }\n\n    console.log(examinationData)\n\n    useEffect(() => {\n        if (!examinationData.isLoading) {\n            if (examinationData.response) {\n                setParameters(examinationData.response?.exam?.parameters)\n                setExaminationObj(examinationData.response?.exam)\n            }\n        }\n    }, [examinationToUpdate, examinationData.isLoading])\n\n    useEffect(() => {\n        return () => {\n            setExaminationObj({})\n            setParameters({})\n        }\n    }, [])\n\n    return (\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Nová prehliadka</h3>\n\n                <TableContainer>\n                    <HeadTableCol>\n                        <TableBlock>\n                            <p>-</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>PO</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>ĽO</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>PO</p>\n                        </TableBlock>\n                        <TableBlock>\n                            <p>ĽO</p>\n                        </TableBlock>\n                    </HeadTableCol>\n                    {/* sph */}\n                    <TableCol>\n                        <TableBlock>\n                            sph\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='sph'\n                                    type='text'\n                                    value={checkParameter(parameters?.sph, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.sph)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* cyl */}\n                    <TableCol>\n                        <TableBlock>\n                            cyl\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='cyl'\n                                    type='text'\n                                    value={checkParameter(parameters?.cyl, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.cyl)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* ax */}\n                    <TableCol>\n                        <TableBlock>\n                            ax\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='ax'\n                                    type='text'\n                                    value={checkParameter(parameters?.ax, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.ax)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* vizus D */}\n                    <TableCol>\n                        <TableBlock>\n                            vizus D\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='vizusD'\n                                    type='text'\n                                    value={checkParameter(parameters?.vizusD, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.vizusD)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* vizus Bino */}\n                    <TableCol>\n                        <TableBlock>\n                            vizus Bino\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='vizusBino'\n                                    type='text'\n                                    value={checkParameter(parameters?.vizusBino, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.vizusBino)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* vizus B */}\n                    <TableCol>\n                        <TableBlock>\n                            vizus B\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='vizusB'\n                                    type='text'\n                                    value={checkParameter(parameters?.vizusB, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.vizusB)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* prizma */}\n                    <TableCol>\n                        <TableBlock>\n                            prizma\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='prizma'\n                                    type='text'\n                                    value={checkParameter(parameters?.prizma, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.prizma)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* basis */}\n                    <TableCol>\n                        <TableBlock>\n                            basis\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='basis'\n                                    type='text'\n                                    value={checkParameter(parameters?.basis, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.basis)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* PD */}\n                    <TableCol>\n                        <TableBlock>\n                            PD\n                        </TableBlock>\n                        {[...Array(4)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='pd'\n                                    type='text'\n                                    value={checkParameter(parameters?.pd, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.pd)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n\n                    {/* ADD */}\n                    <TableCol>\n                        <TableBlock>\n                            ADD\n                        </TableBlock>\n                        {[...Array(2)].map((value, idx) => (\n                            <TableBlock key={idx}>\n                                <input\n                                    name='add'\n                                    type='text'\n                                    value={checkParameter(parameters?.add, idx)}\n                                    onChange={e => handleParameterChange(e, idx)}\n                                    onBlur={(e) => formatParameters(e, parameters?.add)}\n                                />\n                            </TableBlock>\n                        ))}\n                    </TableCol>\n                </TableContainer>\n\n\n                <TwoCols>\n                    <div>\n                        <CustomInput\n                            label=\"Typ\"\n                            name='type'\n                            value={examinationObj?.type || \"\"}\n                            handleChange={handleChange}\n                        />\n                        <CustomInput\n                            label=\"Bc\"\n                            name='bc'\n                            value={examinationObj?.bc || \"\"}\n                            handleChange={handleChange}\n                        />\n                    </div>\n                    <div>\n                        <CustomInput\n                            label=\"dptr PO\"\n                            name='dptrPO'\n                            value={examinationObj?.dptrPO || \"\"}\n                            handleChange={handleChange}\n                        />\n                        <CustomInput\n                            label=\"dptr ĽO\"\n                            name='dptrLO'\n                            value={examinationObj?.dptrLO || \"\"}\n                            handleChange={handleChange}\n                        />\n                    </div>\n                </TwoCols>\n                <div>\n                    <CustomTextarea\n                        label='Poznámka'\n                        name='note'\n                        value={examinationObj?.note || \"\"}\n                        handleChange={handleChange}\n                        rows='5'\n                    />\n                    <CustomInput\n                        label=\"Doporučenie\"\n                        name='recommendation'\n                        value={examinationObj?.recommendation || \"\"}\n                        handleChange={handleChange}\n                    />\n                </div>\n\n\n                <SubmitButton onClick={handleSubmit}>{examinationToUpdate ? \"Uložiť\" : \"Odoslať prehliadku\"}</SubmitButton>\n            </Modal>\n        </ModalContainer>\n    )\n}\n\nexport default OptometristExaminationModal\n","/imooptik-frontend/src/utils/parameters.utils.jsx",[],"/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx",[],"/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.styles.jsx",[],"/imooptik-frontend/src/components/examination-user/examination-user.styles.jsx",[],"/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx",[],"/imooptik-frontend/src/utils/orders.utils.jsx",[],"/imooptik-frontend/src/utils/warehouse.utils.jsx",[],"/imooptik-frontend/src/utils/calendar.utils.jsx",["706","707","708"],"/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.component.jsx",[],"/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.styles.jsx",[],"/imooptik-frontend/src/components/list-arrows/list-arrows.component.jsx",["709","710"],"import React, { useState, useEffect } from 'react'\n\nimport {\n    AiFillLeftCircle,\n    AiFillRightCircle\n} from 'react-icons/ai'\n\nimport {\n    ArrowsContainer,\n    IconContainer\n} from './list-arrows.styles'\n\nconst ListArrows = ({\n    listItems = [],\n    handleClickPrev = () => { },\n    handleClickNext = () => { }\n}) => {\n    const [isDisablePrev, setIsDisablePrev] = useState(true)\n    const [isDisableNext, setIsDisableNext] = useState(true)\n    const [currentPage, setCurrentPage] = useState(0)\n\n    useEffect(() => {\n        if (currentPage === 0) {\n            setIsDisablePrev(true)\n        } else {\n            setIsDisablePrev(false)\n        }\n    }, [listItems])\n\n    useEffect(() => {\n        if (listItems?.length < 10) {\n            setIsDisableNext(true)\n        } else {\n            setIsDisableNext(false)\n        }\n    }, [listItems])\n\n    useEffect(() => {\n        if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue--)\n    }, [handleClickPrev])\n    useEffect(() => {\n        // if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue++)\n    }, [handleClickNext])\n\n    const handlePrev = () => {\n        handleClickPrev()\n        if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue - 1)\n    }\n    const handleNext = () => {\n        handleClickNext()\n        setCurrentPage(prevValue => prevValue + 1)\n    }\n\n    return (\n        <ArrowsContainer>\n            <IconContainer disabled={isDisablePrev} onClick={handlePrev}>\n                <AiFillLeftCircle />\n            </IconContainer>\n            <IconContainer disabled={isDisableNext} onClick={handleNext}>\n                <AiFillRightCircle />\n            </IconContainer>\n        </ArrowsContainer>\n    )\n}\n\nexport default ListArrows\n","/imooptik-frontend/src/components/list-arrows/list-arrows.styles.jsx",[],{"ruleId":"711","replacedBy":"712"},{"ruleId":"713","replacedBy":"714"},{"ruleId":"715","severity":1,"message":"716","line":237,"column":8,"nodeType":"717","endLine":237,"endColumn":15,"suggestions":"718"},{"ruleId":"719","severity":1,"message":"720","line":7,"column":5,"nodeType":"721","messageId":"722","endLine":7,"endColumn":15},{"ruleId":"719","severity":1,"message":"723","line":55,"column":24,"nodeType":"721","messageId":"722","endLine":55,"endColumn":37},{"ruleId":"715","severity":1,"message":"724","line":147,"column":8,"nodeType":"717","endLine":147,"endColumn":32,"suggestions":"725"},{"ruleId":"719","severity":1,"message":"726","line":80,"column":37,"nodeType":"721","messageId":"722","endLine":80,"endColumn":63},{"ruleId":"715","severity":1,"message":"727","line":789,"column":8,"nodeType":"717","endLine":789,"endColumn":31,"suggestions":"728"},{"ruleId":"715","severity":1,"message":"729","line":819,"column":8,"nodeType":"717","endLine":819,"endColumn":22,"suggestions":"730"},{"ruleId":"719","severity":1,"message":"731","line":1,"column":54,"nodeType":"721","messageId":"722","endLine":1,"endColumn":63},{"ruleId":"719","severity":1,"message":"732","line":34,"column":13,"nodeType":"721","messageId":"722","endLine":34,"endColumn":18},{"ruleId":"719","severity":1,"message":"733","line":57,"column":12,"nodeType":"721","messageId":"722","endLine":57,"endColumn":23},{"ruleId":"719","severity":1,"message":"734","line":58,"column":11,"nodeType":"721","messageId":"722","endLine":58,"endColumn":19},{"ruleId":"715","severity":1,"message":"735","line":125,"column":8,"nodeType":"717","endLine":125,"endColumn":21,"suggestions":"736"},{"ruleId":"715","severity":1,"message":"737","line":140,"column":8,"nodeType":"717","endLine":140,"endColumn":38,"suggestions":"738"},{"ruleId":"715","severity":1,"message":"739","line":146,"column":8,"nodeType":"717","endLine":146,"endColumn":12,"suggestions":"740"},{"ruleId":"715","severity":1,"message":"741","line":168,"column":8,"nodeType":"717","endLine":168,"endColumn":10,"suggestions":"742"},{"ruleId":"715","severity":1,"message":"743","line":59,"column":8,"nodeType":"717","endLine":59,"endColumn":21,"suggestions":"744"},{"ruleId":"715","severity":1,"message":"745","line":83,"column":8,"nodeType":"717","endLine":83,"endColumn":21,"suggestions":"746"},{"ruleId":"715","severity":1,"message":"745","line":105,"column":8,"nodeType":"717","endLine":105,"endColumn":21,"suggestions":"747"},{"ruleId":"715","severity":1,"message":"748","line":111,"column":8,"nodeType":"717","endLine":111,"endColumn":29,"suggestions":"749"},{"ruleId":"715","severity":1,"message":"750","line":380,"column":8,"nodeType":"717","endLine":380,"endColumn":72,"suggestions":"751"},{"ruleId":"715","severity":1,"message":"752","line":396,"column":8,"nodeType":"717","endLine":396,"endColumn":26,"suggestions":"753"},{"ruleId":"715","severity":1,"message":"754","line":405,"column":8,"nodeType":"717","endLine":405,"endColumn":37,"suggestions":"755"},{"ruleId":"715","severity":1,"message":"756","line":417,"column":8,"nodeType":"717","endLine":417,"endColumn":10,"suggestions":"757"},{"ruleId":"715","severity":1,"message":"758","line":63,"column":8,"nodeType":"717","endLine":63,"endColumn":18,"suggestions":"759"},{"ruleId":"715","severity":1,"message":"760","line":73,"column":8,"nodeType":"717","endLine":73,"endColumn":21,"suggestions":"761"},{"ruleId":"715","severity":1,"message":"762","line":64,"column":8,"nodeType":"717","endLine":64,"endColumn":15,"suggestions":"763"},{"ruleId":"715","severity":1,"message":"764","line":75,"column":8,"nodeType":"717","endLine":75,"endColumn":21,"suggestions":"765"},{"ruleId":"715","severity":1,"message":"766","line":88,"column":8,"nodeType":"717","endLine":88,"endColumn":21,"suggestions":"767"},{"ruleId":"719","severity":1,"message":"768","line":39,"column":43,"nodeType":"721","messageId":"722","endLine":39,"endColumn":50},{"ruleId":"715","severity":1,"message":"769","line":71,"column":8,"nodeType":"717","endLine":71,"endColumn":19,"suggestions":"770"},{"ruleId":"719","severity":1,"message":"771","line":13,"column":5,"nodeType":"721","messageId":"722","endLine":13,"endColumn":28},{"ruleId":"719","severity":1,"message":"772","line":23,"column":12,"nodeType":"721","messageId":"722","endLine":23,"endColumn":23},{"ruleId":"719","severity":1,"message":"773","line":23,"column":25,"nodeType":"721","messageId":"722","endLine":23,"endColumn":39},{"ruleId":"715","severity":1,"message":"774","line":43,"column":8,"nodeType":"717","endLine":43,"endColumn":17,"suggestions":"775"},{"ruleId":"715","severity":1,"message":"776","line":42,"column":8,"nodeType":"717","endLine":42,"endColumn":18,"suggestions":"777"},{"ruleId":"715","severity":1,"message":"778","line":48,"column":8,"nodeType":"717","endLine":48,"endColumn":10,"suggestions":"779"},{"ruleId":"715","severity":1,"message":"780","line":91,"column":8,"nodeType":"717","endLine":91,"endColumn":45,"suggestions":"781"},{"ruleId":"715","severity":1,"message":"782","line":99,"column":8,"nodeType":"717","endLine":99,"endColumn":20,"suggestions":"783"},{"ruleId":"719","severity":1,"message":"784","line":1,"column":17,"nodeType":"721","messageId":"722","endLine":1,"endColumn":25},{"ruleId":"715","severity":1,"message":"785","line":54,"column":8,"nodeType":"717","endLine":54,"endColumn":20,"suggestions":"786"},{"ruleId":"715","severity":1,"message":"787","line":60,"column":8,"nodeType":"717","endLine":60,"endColumn":10,"suggestions":"788"},{"ruleId":"715","severity":1,"message":"789","line":70,"column":8,"nodeType":"717","endLine":70,"endColumn":12,"suggestions":"790"},{"ruleId":"715","severity":1,"message":"754","line":85,"column":8,"nodeType":"717","endLine":85,"endColumn":14,"suggestions":"791"},{"ruleId":"715","severity":1,"message":"792","line":98,"column":8,"nodeType":"717","endLine":98,"endColumn":10,"suggestions":"793"},{"ruleId":"794","severity":1,"message":"795","line":259,"column":41,"nodeType":"796","messageId":"797","endLine":259,"endColumn":43},{"ruleId":"715","severity":1,"message":"798","line":29,"column":8,"nodeType":"717","endLine":29,"endColumn":22,"suggestions":"799"},{"ruleId":"715","severity":1,"message":"800","line":71,"column":8,"nodeType":"717","endLine":71,"endColumn":28,"suggestions":"801"},{"ruleId":"715","severity":1,"message":"800","line":110,"column":8,"nodeType":"717","endLine":110,"endColumn":32,"suggestions":"802"},{"ruleId":"719","severity":1,"message":"803","line":20,"column":5,"nodeType":"721","messageId":"722","endLine":20,"endColumn":16},{"ruleId":"804","severity":1,"message":"805","line":62,"column":52,"nodeType":"806","messageId":"807","endLine":62,"endColumn":58},{"ruleId":"804","severity":1,"message":"805","line":312,"column":64,"nodeType":"806","messageId":"807","endLine":312,"endColumn":70},{"ruleId":"808","severity":1,"message":"809","line":148,"column":41,"nodeType":"810","endLine":148,"endColumn":61},{"ruleId":"808","severity":1,"message":"809","line":189,"column":45,"nodeType":"810","endLine":189,"endColumn":160},{"ruleId":"719","severity":1,"message":"811","line":5,"column":8,"nodeType":"721","messageId":"722","endLine":5,"endColumn":23},{"ruleId":"804","severity":1,"message":"805","line":171,"column":44,"nodeType":"806","messageId":"807","endLine":171,"endColumn":50},{"ruleId":"804","severity":1,"message":"805","line":97,"column":40,"nodeType":"806","messageId":"807","endLine":97,"endColumn":46},{"ruleId":"804","severity":1,"message":"805","line":165,"column":44,"nodeType":"806","messageId":"807","endLine":165,"endColumn":50},{"ruleId":"719","severity":1,"message":"812","line":17,"column":5,"nodeType":"721","messageId":"722","endLine":17,"endColumn":21},{"ruleId":"719","severity":1,"message":"813","line":18,"column":5,"nodeType":"721","messageId":"722","endLine":18,"endColumn":20},{"ruleId":"719","severity":1,"message":"814","line":19,"column":5,"nodeType":"721","messageId":"722","endLine":19,"endColumn":14},{"ruleId":"719","severity":1,"message":"815","line":35,"column":12,"nodeType":"721","messageId":"722","endLine":35,"endColumn":24},{"ruleId":"715","severity":1,"message":"816","line":42,"column":8,"nodeType":"717","endLine":42,"endColumn":15,"suggestions":"817"},{"ruleId":"715","severity":1,"message":"816","line":49,"column":8,"nodeType":"717","endLine":49,"endColumn":18,"suggestions":"818"},{"ruleId":"715","severity":1,"message":"819","line":65,"column":8,"nodeType":"717","endLine":65,"endColumn":19,"suggestions":"820"},{"ruleId":"715","severity":1,"message":"821","line":38,"column":8,"nodeType":"717","endLine":38,"endColumn":24,"suggestions":"822"},{"ruleId":"715","severity":1,"message":"823","line":68,"column":8,"nodeType":"717","endLine":68,"endColumn":18,"suggestions":"824"},{"ruleId":"715","severity":1,"message":"825","line":78,"column":8,"nodeType":"717","endLine":78,"endColumn":21,"suggestions":"826"},{"ruleId":"715","severity":1,"message":"827","line":58,"column":8,"nodeType":"717","endLine":58,"endColumn":15,"suggestions":"828"},{"ruleId":"715","severity":1,"message":"764","line":69,"column":8,"nodeType":"717","endLine":69,"endColumn":21,"suggestions":"829"},{"ruleId":"715","severity":1,"message":"830","line":15,"column":8,"nodeType":"717","endLine":15,"endColumn":13,"suggestions":"831"},{"ruleId":"719","severity":1,"message":"832","line":23,"column":13,"nodeType":"721","messageId":"722","endLine":23,"endColumn":22},{"ruleId":"804","severity":1,"message":"805","line":85,"column":40,"nodeType":"806","messageId":"807","endLine":85,"endColumn":46},{"ruleId":"715","severity":1,"message":"833","line":58,"column":8,"nodeType":"717","endLine":58,"endColumn":35,"suggestions":"834"},{"ruleId":"804","severity":1,"message":"805","line":166,"column":50,"nodeType":"806","messageId":"807","endLine":166,"endColumn":56},{"ruleId":"715","severity":1,"message":"835","line":39,"column":8,"nodeType":"717","endLine":39,"endColumn":104,"suggestions":"836"},{"ruleId":"715","severity":1,"message":"837","line":39,"column":9,"nodeType":"838","endLine":39,"endColumn":31},{"ruleId":"715","severity":1,"message":"837","line":39,"column":33,"nodeType":"838","endLine":39,"endColumn":55},{"ruleId":"715","severity":1,"message":"837","line":39,"column":57,"nodeType":"838","endLine":39,"endColumn":79},{"ruleId":"715","severity":1,"message":"837","line":39,"column":81,"nodeType":"838","endLine":39,"endColumn":103},{"ruleId":"715","severity":1,"message":"833","line":112,"column":8,"nodeType":"717","endLine":112,"endColumn":56,"suggestions":"839"},{"ruleId":"794","severity":1,"message":"840","line":34,"column":41,"nodeType":"796","messageId":"797","endLine":34,"endColumn":43},{"ruleId":"719","severity":1,"message":"841","line":70,"column":9,"nodeType":"721","messageId":"722","endLine":70,"endColumn":25},{"ruleId":"804","severity":1,"message":"842","line":73,"column":55,"nodeType":"843","messageId":"844","endLine":73,"endColumn":57},{"ruleId":"715","severity":1,"message":"845","line":28,"column":8,"nodeType":"717","endLine":28,"endColumn":19,"suggestions":"846"},{"ruleId":"715","severity":1,"message":"845","line":41,"column":8,"nodeType":"717","endLine":41,"endColumn":25,"suggestions":"847"},"no-native-reassign",["848"],"no-negated-in-lhs",["849"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStats'. Either include it or remove the dependency array.","ArrayExpression",["850"],"no-unused-vars","'fetchUsers' is defined but never used.","Identifier","unusedVar","'setTotalCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["851"],"'setProductCategoryTypeTabs' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getLenses', 'getProductsByQuery', 'productCategoryTypeTabs', and 'products'. Either include them or remove the dependency array.",["852"],"React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array. You can also do a functional update 'setProduct(p => ...)' if you only need 'product' in the 'setProduct' call.",["853"],"'useEffect' is defined but never used.","'stats' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'paginate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchQueryObj', 'handleRefetch', 'orders.length', and 'refetch'. Either include them or remove the dependency array. You can also do a functional update 'setFetchQueryObj(f => ...)' if you only need 'fetchQueryObj' in the 'setFetchQueryObj' call.",["854"],"React Hook useEffect has missing dependencies: 'user.fName', 'user.lName', and 'userObj'. Either include them or remove the dependency array. You can also do a functional update 'setUserObj(u => ...)' if you only need 'userObj' in the 'setUserObj' call.",["855"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["856"],"React Hook useEffect has missing dependencies: 'handleChange' and 'resetUser'. Either include them or remove the dependency array.",["857"],"React Hook useEffect has missing dependencies: 'getAnalytics' and 'items'. Either include them or remove the dependency array.",["858"],"React Hook useEffect has a missing dependency: 'blogsData'. Either include it or remove the dependency array.",["859"],["860"],"React Hook useEffect has a missing dependency: 'blogsData.response?.blogs'. Either include it or remove the dependency array.",["861"],"React Hook useEffect has missing dependencies: 'getEanCode' and 'handleChange'. Either include them or remove the dependency array.",["862"],"React Hook useEffect has missing dependencies: 'getSingleProduct', 'handleChangeType', and 'productObj.type'. Either include them or remove the dependency array.",["863"],"React Hook useEffect has a missing dependency: 'setSelectedImage'. Either include it or remove the dependency array.",["864"],"React Hook useEffect has missing dependencies: 'resetContactLenses', 'resetGlassesParameters', 'resetLenses', 'resetProduct', and 'setSelectedImage'. Either include them or remove the dependency array.",["865"],"React Hook useEffect has a missing dependency: 'getProductsByQuery'. Either include it or remove the dependency array.",["866"],"React Hook useEffect has missing dependencies: 'activeCategoryTypeTab', 'getProductsByQuery', and 'products'. Either include them or remove the dependency array.",["867"],"React Hook useEffect has missing dependencies: 'activeIndex' and 'getFilteredUsers'. Either include them or remove the dependency array.",["868"],"React Hook useEffect has missing dependencies: 'getFilteredUsers' and 'users'. Either include them or remove the dependency array.",["869"],"React Hook useEffect has missing dependencies: 'activeIndex', 'getFilteredUsers', and 'users'. Either include them or remove the dependency array.",["870"],"'refetch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'response'. Either include it or remove the dependency array.",["871"],"'CouponOverviewContainer' is defined but never used.","'searchQuery' is assigned a value but never used.","'setSearchQuery' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCoupons'. Either include it or remove the dependency array.",["872"],"React Hook useEffect has a missing dependency: 'getCoupon'. Either include it or remove the dependency array.",["873"],"React Hook useEffect has a missing dependency: 'resetCoupons'. Either include it or remove the dependency array.",["874"],"React Hook useEffect has a missing dependency: 'order'. Either include it or remove the dependency array. You can also do a functional update 'setOrder(o => ...)' if you only need 'order' in the 'setOrder' call.",["875"],"React Hook useEffect has missing dependencies: 'orderId' and 'userId'. Either include them or remove the dependency array.",["876"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getCalendar'. Either include it or remove the dependency array.",["877"],"React Hook useEffect has a missing dependency: 'resetBooking'. Either include it or remove the dependency array.",["878"],"React Hook useEffect has missing dependencies: 'getPost' and 'setSelectedImage'. Either include them or remove the dependency array.",["879"],["880"],"React Hook useEffect has a missing dependency: 'resetBlog'. Either include it or remove the dependency array.",["881"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'path' and 'skip'. Either include them or remove the dependency array.",["882"],"React Hook useEffect has missing dependencies: 'requestOptions' and 'skip'. Either include them or remove the dependency array.",["883"],["884"],"'ThreeColRow' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ProductInputRow' is defined but never used.","'BookingContainer' is defined but never used.","'DayRowContainer' is defined but never used.","'DayNumber' is defined but never used.","'calendarData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["885"],["886"],"React Hook useEffect has missing dependencies: 'firstDayIndex', 'lastDay', 'month', 'nextDays', 'response.calendar', and 'year'. Either include them or remove the dependency array.",["887"],"React Hook useEffect has a missing dependency: 'getLenses'. Either include it or remove the dependency array.",["888"],"React Hook useEffect has missing dependencies: 'getProductsByQuery' and 'productItems.length'. Either include them or remove the dependency array.",["889"],"React Hook useEffect has missing dependencies: 'getProductsByQuery' and 'products'. Either include them or remove the dependency array.",["890"],"React Hook useEffect has a missing dependency: 'getFilteredUsers'. Either include it or remove the dependency array.",["891"],["892"],"React Hook useEffect has a missing dependency: 'action'. Either include it or remove the dependency array. If 'action' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["893"],"'getOrders' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'examinationData.response'. Either include it or remove the dependency array.",["894"],"React Hook useEffect has missing dependencies: 'handleChange', 'parameters.addition', and 'parameters.diopters'. Either include them or remove the dependency array. If 'handleChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["895"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression",["896"],"Expected '===' and instead saw '=='.","'daysWithBookings' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'currentPage'. Either include it or remove the dependency array.",["897"],["898"],"no-global-assign","no-unsafe-negation",{"desc":"899","fix":"900"},{"desc":"901","fix":"902"},{"desc":"903","fix":"904"},{"desc":"905","fix":"906"},{"desc":"907","fix":"908"},{"desc":"909","fix":"910"},{"desc":"911","fix":"912"},{"desc":"913","fix":"914"},{"desc":"915","fix":"916"},{"desc":"917","fix":"918"},{"desc":"919","fix":"920"},{"desc":"921","fix":"922"},{"desc":"923","fix":"924"},{"desc":"925","fix":"926"},{"desc":"927","fix":"928"},{"desc":"929","fix":"930"},{"desc":"931","fix":"932"},{"desc":"933","fix":"934"},{"desc":"935","fix":"936"},{"desc":"935","fix":"937"},{"desc":"938","fix":"939"},{"desc":"940","fix":"941"},{"desc":"942","fix":"943"},{"desc":"944","fix":"945"},{"desc":"946","fix":"947"},{"desc":"948","fix":"949"},{"desc":"950","fix":"951"},{"desc":"952","fix":"953"},{"desc":"954","fix":"955"},{"desc":"956","fix":"957"},{"desc":"958","fix":"959"},{"desc":"960","fix":"961"},{"desc":"962","fix":"963"},{"desc":"964","fix":"965"},{"desc":"966","fix":"967"},{"desc":"968","fix":"969"},{"desc":"970","fix":"971"},{"desc":"972","fix":"973"},{"desc":"974","fix":"975"},{"desc":"976","fix":"977"},{"desc":"978","fix":"979"},{"desc":"980","fix":"981"},{"desc":"982","fix":"983"},{"desc":"984","fix":"985"},{"desc":"986","fix":"987"},{"desc":"988","fix":"989"},{"desc":"990","fix":"991"},{"desc":"992","fix":"993"},{"desc":"994","fix":"995"},"Update the dependencies array to be: [getStats, token]",{"range":"996","text":"997"},"Update the dependencies array to be: [user, user.fName, user.lName]",{"range":"998","text":"999"},"Update the dependencies array to be: [activeCategoryTypeTab, getLenses, getProductsByQuery, productCategoryTypeTabs, products]",{"range":"1000","text":"1001"},"Update the dependencies array to be: [product, product.name]",{"range":"1002","text":"1003"},"Update the dependencies array to be: [activeIndex, fetchQueryObj, handleRefetch, orders.length, refetch]",{"range":"1004","text":"1005"},"Update the dependencies array to be: [user.fName, user.lName, userObj, userObj.fName, userObj.lName]",{"range":"1006","text":"1007"},"Update the dependencies array to be: [getUser, id]",{"range":"1008","text":"1009"},"Update the dependencies array to be: [handleChange, resetUser]",{"range":"1010","text":"1011"},"Update the dependencies array to be: [activeIndex, getAnalytics, items]",{"range":"1012","text":"1013"},"Update the dependencies array to be: [blogsData, searchQuery]",{"range":"1014","text":"1015"},"Update the dependencies array to be: [activeIndex, blogsData]",{"range":"1016","text":"1017"},"Update the dependencies array to be: [blogsData.isLoading, blogsData.response?.blogs]",{"range":"1018","text":"1019"},"Update the dependencies array to be: [id, eanCode, productObj.type, productObj.eanCode, product.type, getEanCode, handleChange]",{"range":"1020","text":"1021"},"Update the dependencies array to be: [getSingleProduct, handleChangeType, id, product.type, productObj.type]",{"range":"1022","text":"1023"},"Update the dependencies array to be: [product.image, lenses.image, setSelectedImage]",{"range":"1024","text":"1025"},"Update the dependencies array to be: [resetContactLenses, resetGlassesParameters, resetLenses, resetProduct, setSelectedImage]",{"range":"1026","text":"1027"},"Update the dependencies array to be: [getProductsByQuery, products]",{"range":"1028","text":"1029"},"Update the dependencies array to be: [activeCategoryTypeTab, getProductsByQuery, products, searchQuery]",{"range":"1030","text":"1031"},"Update the dependencies array to be: [activeIndex, getFilteredUsers, users]",{"range":"1032","text":"1033"},{"range":"1034","text":"1033"},"Update the dependencies array to be: [activeIndex, getFilteredUsers, searchQuery, users]",{"range":"1035","text":"1036"},"Update the dependencies array to be: [isLoading, response]",{"range":"1037","text":"1038"},"Update the dependencies array to be: [coupons, getCoupons]",{"range":"1039","text":"1040"},"Update the dependencies array to be: [couponId, getCoupon]",{"range":"1041","text":"1042"},"Update the dependencies array to be: [resetCoupons]",{"range":"1043","text":"1044"},"Update the dependencies array to be: [userId, orderId, orderData.response, order]",{"range":"1045","text":"1046"},"Update the dependencies array to be: [order.user, orderId, userId]",{"range":"1047","text":"1048"},"Update the dependencies array to be: [calendarId, getCalendar]",{"range":"1049","text":"1050"},"Update the dependencies array to be: [resetBooking]",{"range":"1051","text":"1052"},"Update the dependencies array to be: [getPost, id, setSelectedImage]",{"range":"1053","text":"1054"},"Update the dependencies array to be: [post, setSelectedImage]",{"range":"1055","text":"1056"},"Update the dependencies array to be: [resetBlog]",{"range":"1057","text":"1058"},"Update the dependencies array to be: [path, refetchIndex, skip]",{"range":"1059","text":"1060"},"Update the dependencies array to be: [refetchIndex, path, skip, requestOptions]",{"range":"1061","text":"1062"},"Update the dependencies array to be: [refetchIndex, path, id, skip, requestOptions]",{"range":"1063","text":"1064"},"Update the dependencies array to be: [month, refetch]",{"range":"1065","text":"1066"},"Update the dependencies array to be: [calendar, refetch]",{"range":"1067","text":"1068"},"Update the dependencies array to be: [firstDayIndex, isLoading, lastDay, month, nextDays, response.calendar, year]",{"range":"1069","text":"1070"},"Update the dependencies array to be: [getLenses, lensesProducts]",{"range":"1071","text":"1072"},"Update the dependencies array to be: [getProductsByQuery, productItems.length, products]",{"range":"1073","text":"1074"},"Update the dependencies array to be: [getProductsByQuery, products, searchQuery]",{"range":"1075","text":"1076"},"Update the dependencies array to be: [getFilteredUsers, users]",{"range":"1077","text":"1078"},"Update the dependencies array to be: [getFilteredUsers, searchQuery, users]",{"range":"1079","text":"1080"},"Update the dependencies array to be: [action, ref]",{"range":"1081","text":"1082"},"Update the dependencies array to be: [examinationData.isLoading, examinationData.response]",{"range":"1083","text":"1084"},"Update the dependencies array to be: [handleChange, parameters.addition, parameters.diopters]",{"range":"1085","text":"1086"},"Update the dependencies array to be: [examinationToUpdate, examinationData.isLoading, examinationData.response]",{"range":"1087","text":"1088"},"Update the dependencies array to be: [currentPage, listItems]",{"range":"1089","text":"1090"},"Update the dependencies array to be: [currentPage, handleClickPrev]",{"range":"1091","text":"1092"},[6458,6465],"[getStats, token]",[3331,3355],"[user, user.fName, user.lName]",[23169,23192],"[activeCategoryTypeTab, getLenses, getProductsByQuery, productCategoryTypeTabs, products]",[24003,24017],"[product, product.name]",[3689,3702],"[activeIndex, fetchQueryObj, handleRefetch, orders.length, refetch]",[3597,3627],"[user.fName, user.lName, userObj, userObj.fName, userObj.lName]",[3731,3735],"[getUser, id]",[4465,4467],"[handleChange, resetUser]",[1539,1552],"[activeIndex, getAnalytics, items]",[2204,2217],"[blogsData, searchQuery]",[2720,2733],"[activeIndex, blogsData]",[2859,2880],"[blogsData.isLoading, blogsData.response?.blogs]",[11412,11476],"[id, eanCode, productObj.type, productObj.eanCode, product.type, getEanCode, handleChange]",[11859,11877],"[getSingleProduct, handleChangeType, id, product.type, productObj.type]",[12073,12102],"[product.image, lenses.image, setSelectedImage]",[12388,12390],"[resetContactLenses, resetGlassesParameters, resetLenses, resetProduct, setSelectedImage]",[2051,2061],"[getProductsByQuery, products]",[2290,2303],"[activeCategoryTypeTab, getProductsByQuery, products, searchQuery]",[1826,1833],"[activeIndex, getFilteredUsers, users]",[2058,2071],[2372,2385],"[activeIndex, getFilteredUsers, searchQuery, users]",[2350,2361],"[isLoading, response]",[1187,1196],"[coupons, getCoupons]",[1197,1207],"[couponId, getCoupon]",[1299,1301],"[resetCoupons]",[2867,2904],"[userId, orderId, orderData.response, order]",[3085,3097],"[order.user, orderId, userId]",[1564,1576],"[calendarId, getCalendar]",[1668,1670],"[resetBooking]",[2204,2208],"[getPost, id, setSelectedImage]",[2603,2609],"[post, setSelectedImage]",[2903,2905],"[resetBlog]",[988,1002],"[path, refetchIndex, skip]",[2303,2323],"[refetchIndex, path, skip, requestOptions]",[3550,3574],"[refetchIndex, path, id, skip, requestOptions]",[1159,1166],"[month, refetch]",[1255,1265],"[calendar, refetch]",[1846,1857],"[firstDayIndex, isLoading, lastDay, month, nextDays, response.calendar, year]",[1095,1111],"[getLenses, lensesProducts]",[1783,1793],"[getProductsByQuery, productItems.length, products]",[1997,2010],"[getProductsByQuery, products, searchQuery]",[1353,1360],"[getFilteredUsers, users]",[1594,1607],"[getFilteredUsers, searchQuery, users]",[467,472],"[action, ref]",[1801,1828],"[examinationData.isLoading, examinationData.response]",[1180,1276],"[handleChange, parameters.addition, parameters.diopters]",[3091,3139],"[examinationToUpdate, examinationData.isLoading, examinationData.response]",[661,672],"[currentPage, listItems]",[970,987],"[currentPage, handleClickPrev]"]
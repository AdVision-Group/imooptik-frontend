[{"/imooptik-frontend/src/index.js":"1","/imooptik-frontend/src/reportWebVitals.js":"2","/imooptik-frontend/src/App.jsx":"3","/imooptik-frontend/src/context/auth/auth.context.jsx":"4","/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx":"5","/imooptik-frontend/src/global.styles.jsx":"6","/imooptik-frontend/src/context/auth/auth.queries.jsx":"7","/imooptik-frontend/src/pages/dashboard/dashboard.jsx":"8","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx":"9","/imooptik-frontend/src/pages/reset-password/reset-password.jsx":"10","/imooptik-frontend/src/components/popup/pop-up.component.jsx":"11","/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx":"12","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx":"13","/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx":"14","/imooptik-frontend/src/components/sidenav/sidenav.component.jsx":"15","/imooptik-frontend/src/context/image/image.context.jsx":"16","/imooptik-frontend/src/context/blog/blog.context.jsx":"17","/imooptik-frontend/src/context/booking/booking.context.jsx":"18","/imooptik-frontend/src/context/orders/orders.context.jsx":"19","/imooptik-frontend/src/context/warehouse/warehouse.context.jsx":"20","/imooptik-frontend/src/context/coupons/coupons.context.jsx":"21","/imooptik-frontend/src/context/examination/examination.context.jsx":"22","/imooptik-frontend/src/context/order/order.context.jsx":"23","/imooptik-frontend/src/context/user/user.context.jsx":"24","/imooptik-frontend/src/context/analytics/analytics.context.jsx":"25","/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx":"26","/imooptik-frontend/src/components/popup/pop.up.styles.jsx":"27","/imooptik-frontend/src/components/custom-input/custom-input.component.jsx":"28","/imooptik-frontend/src/components/sign-in/sign-in.component.jsx":"29","/imooptik-frontend/src/components/spinner/spinner.component.jsx":"30","/imooptik-frontend/src/sections/customers/customers.section.jsx":"31","/imooptik-frontend/src/sections/orders/orders.section.jsx":"32","/imooptik-frontend/src/sections/product/product.section.jsx":"33","/imooptik-frontend/src/sections/analytics/analytics.section.jsx":"34","/imooptik-frontend/src/components/custom-button/custom-button.component.jsx":"35","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx":"36","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx":"37","/imooptik-frontend/src/sections/post/post.section.jsx":"38","/imooptik-frontend/src/sections/booking/booking.section.jsx":"39","/imooptik-frontend/src/sections/order/order.section.jsx":"40","/imooptik-frontend/src/sections/coupons/coupons.section.jsx":"41","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx":"42","/imooptik-frontend/src/sections/calendar/calendar.section.jsx":"43","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx":"44","/imooptik-frontend/src/sections/coupon/coupon.section.jsx":"45","/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx":"46","/imooptik-frontend/src/context/image/image.queries.jsx":"47","/imooptik-frontend/src/context/blog/blog.queries.jsx":"48","/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx":"49","/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx":"50","/imooptik-frontend/src/context/user/user.utils.jsx":"51","/imooptik-frontend/src/context/user/user.queries.jsx":"52","/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx":"53","/imooptik-frontend/src/components/spinner/spinner.styles.jsx":"54","/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx":"55","/imooptik-frontend/src/sections/customers/customers.styles.jsx":"56","/imooptik-frontend/src/context/orders/orders.utils.jsx":"57","/imooptik-frontend/src/sections/product/product.styles.jsx":"58","/imooptik-frontend/src/sections/orders/orders.styles.jsx":"59","/imooptik-frontend/src/sections/analytics/analytics.styles.jsx":"60","/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx":"61","/imooptik-frontend/src/sections/booking/booking.styles.jsx":"62","/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx":"63","/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx":"64","/imooptik-frontend/src/sections/calendar/calendar.styles.jsx":"65","/imooptik-frontend/src/sections/e-shop/e-shop.styles.jsx":"66","/imooptik-frontend/src/sections/coupons/coupons.styles.jsx":"67","/imooptik-frontend/src/sections/coupon/coupon.styles.jsx":"68","/imooptik-frontend/src/sections/order/order.styles.jsx":"69","/imooptik-frontend/src/components/section-header/section-header.component.jsx":"70","/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx":"71","/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx":"72","/imooptik-frontend/src/components/list-arrows/list-arrows.component.jsx":"73","/imooptik-frontend/src/utils/warehouse.utils.jsx":"74","/imooptik-frontend/src/utils/user.utils.jsx":"75","/imooptik-frontend/src/hooks/useFetch.jsx":"76","/imooptik-frontend/src/utils/analytics.utils.jsx":"77","/imooptik-frontend/src/components/modal-images/modal-images.component.jsx":"78","/imooptik-frontend/src/utils/calendar.utils.jsx":"79","/imooptik-frontend/src/components/order-overview/order-overview.component.jsx":"80","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx":"81","/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.component.jsx":"82","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx":"83","/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.component.jsx":"84","/imooptik-frontend/src/components/product-service-form/product-service-form.component.jsx":"85","/imooptik-frontend/src/components/booking-appoinments/booking-appoinment.component.jsx":"86","/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.component.jsx":"87","/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx":"88","/imooptik-frontend/src/components/custom-select/custom-select.component.jsx":"89","/imooptik-frontend/src/components/user-form/user-form.component.jsx":"90","/imooptik-frontend/src/components/product-overview/product-overview.component.jsx":"91","/imooptik-frontend/src/sections/post/post.styles.jsx":"92","/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.component.jsx":"93","/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx":"94","/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.component.jsx":"95","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx":"96","/imooptik-frontend/src/components/calendar/calendar.component.jsx":"97","/imooptik-frontend/src/context/week-calendar/week-calendar.context.jsx":"98","/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.component.jsx":"99","/imooptik-frontend/src/sections/order/steps/4-summary/summary.component.jsx":"100","/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.component.jsx":"101","/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.component.jsx":"102","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx":"103","/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx":"104","/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx":"105","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx":"106","/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx":"107","/imooptik-frontend/src/components/section-header/section-header.styles.jsx":"108","/imooptik-frontend/src/hooks/useOutsideAlerter.jsx":"109","/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx":"110","/imooptik-frontend/src/components/list-arrows/list-arrows.styles.jsx":"111","/imooptik-frontend/src/components/product-service-form/product-service-form.styles.jsx":"112","/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx":"113","/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.styles.jsx":"114","/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx":"115","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx":"116","/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx":"117","/imooptik-frontend/src/components/booking-appoinments/booking-appoinment.styles.jsx":"118","/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.styles.jsx":"119","/imooptik-frontend/src/components/user-form/user.form-styles.jsx":"120","/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx":"121","/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx":"122","/imooptik-frontend/src/components/custom-select/custom-select.styles.jsx":"123","/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.styles.jsx":"124","/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx":"125","/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx":"126","/imooptik-frontend/src/utils/week-calendar.utils.jsx":"127","/imooptik-frontend/src/components/calendar/calendar.styles.jsx":"128","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx":"129","/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.styles.jsx":"130","/imooptik-frontend/src/components/booking-appoinment/booking-appoinment.component.jsx":"131","/imooptik-frontend/src/components/modal-booking/modal-booking.component.jsx":"132","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx":"133","/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx":"134","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx":"135","/imooptik-frontend/src/components/examinations-overview/examinations-overview.component.jsx":"136","/imooptik-frontend/src/sections/order/steps/4-summary/summary.styles.jsx":"137","/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.styles.jsx":"138","/imooptik-frontend/src/utils/orders.utils.jsx":"139","/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.styles.jsx":"140","/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.component.jsx":"141","/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.styles.jsx":"142","/imooptik-frontend/src/components/calendar-booked-day/calendar-booked-day.component.jsx":"143","/imooptik-frontend/src/components/modal-userbookings-details/modal-userbookings-details.component.jsx":"144","/imooptik-frontend/src/components/order-summary-lenses-name/order-summary-lenses-name.component.jsx":"145","/imooptik-frontend/src/components/order-summary-product-name/order-summary-product-name.component.jsx":"146","/imooptik-frontend/src/components/order-cart-lenses-row/order-cart-lenses-row.component.jsx":"147","/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx":"148","/imooptik-frontend/src/components/modal-order-update-user/modal-order-update-user.component.jsx":"149","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.component.jsx":"150","/imooptik-frontend/src/components/order-cart-row/order-cart-row.component.jsx":"151","/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx":"152","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx":"153","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx":"154","/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx":"155","/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx":"156","/imooptik-frontend/src/components/modal-booking/modal-booking.styles.jsx":"157","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx":"158","/imooptik-frontend/src/components/examinations-overview/examinations-overview.styles.jsx":"159","/imooptik-frontend/src/utils/parameters.utils.jsx":"160","/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.styles.jsx":"161","/imooptik-frontend/src/components/calendar-booked-day/calendar-booked-day.styles.jsx":"162","/imooptik-frontend/src/components/modal-order-update-user/modal-order-update-user.styles.jsx":"163","/imooptik-frontend/src/components/order-cart-lenses-row/order-cart-lenses-row.styles.jsx":"164","/imooptik-frontend/src/components/examination-user/examination-user.component.jsx":"165","/imooptik-frontend/src/components/modal-userbookings-details/modal-userbookings-details.styles.jsx":"166","/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx":"167","/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.component.jsx":"168","/imooptik-frontend/src/components/order-cart-row/order-cart-row.styles.jsx":"169","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.styles.jsx":"170","/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx":"171","/imooptik-frontend/src/components/examination-user/examination-user.styles.jsx":"172"},{"size":717,"mtime":1608670306490,"results":"173","hashOfConfig":"174"},{"size":362,"mtime":1608191294784,"results":"175","hashOfConfig":"174"},{"size":1826,"mtime":1614083683213,"results":"176","hashOfConfig":"174"},{"size":6937,"mtime":1614193605680,"results":"177","hashOfConfig":"174"},{"size":1076,"mtime":1610126635393,"results":"178","hashOfConfig":"174"},{"size":4490,"mtime":1614275326367,"results":"179","hashOfConfig":"174"},{"size":2292,"mtime":1610635788267,"results":"180","hashOfConfig":"174"},{"size":9175,"mtime":1614083678413,"results":"181","hashOfConfig":"174"},{"size":840,"mtime":1609978179243,"results":"182","hashOfConfig":"174"},{"size":1667,"mtime":1608613259561,"results":"183","hashOfConfig":"174"},{"size":714,"mtime":1609965412857,"results":"184","hashOfConfig":"174"},{"size":658,"mtime":1614274306547,"results":"185","hashOfConfig":"174"},{"size":545,"mtime":1612808589467,"results":"186","hashOfConfig":"174"},{"size":772,"mtime":1610476886850,"results":"187","hashOfConfig":"174"},{"size":2443,"mtime":1614084307393,"results":"188","hashOfConfig":"174"},{"size":4422,"mtime":1611960472114,"results":"189","hashOfConfig":"174"},{"size":4047,"mtime":1612461301680,"results":"190","hashOfConfig":"174"},{"size":7376,"mtime":1613874003571,"results":"191","hashOfConfig":"174"},{"size":7383,"mtime":1614272432077,"results":"192","hashOfConfig":"174"},{"size":25726,"mtime":1614257603817,"results":"193","hashOfConfig":"174"},{"size":7011,"mtime":1611198583300,"results":"194","hashOfConfig":"174"},{"size":3493,"mtime":1612458174320,"results":"195","hashOfConfig":"174"},{"size":9795,"mtime":1614258347247,"results":"196","hashOfConfig":"174"},{"size":12478,"mtime":1614118394483,"results":"197","hashOfConfig":"174"},{"size":2856,"mtime":1614199007560,"results":"198","hashOfConfig":"174"},{"size":1466,"mtime":1609978281513,"results":"199","hashOfConfig":"174"},{"size":721,"mtime":1612808901067,"results":"200","hashOfConfig":"174"},{"size":639,"mtime":1608689089980,"results":"201","hashOfConfig":"174"},{"size":1925,"mtime":1609978226453,"results":"202","hashOfConfig":"174"},{"size":178,"mtime":1608409397640,"results":"203","hashOfConfig":"174"},{"size":5216,"mtime":1614275298697,"results":"204","hashOfConfig":"174"},{"size":6684,"mtime":1614275375717,"results":"205","hashOfConfig":"174"},{"size":19637,"mtime":1614275882577,"results":"206","hashOfConfig":"174"},{"size":9589,"mtime":1614275631067,"results":"207","hashOfConfig":"174"},{"size":283,"mtime":1608325857586,"results":"208","hashOfConfig":"174"},{"size":5376,"mtime":1614275577027,"results":"209","hashOfConfig":"174"},{"size":810,"mtime":1610132345623,"results":"210","hashOfConfig":"174"},{"size":9933,"mtime":1614275697937,"results":"211","hashOfConfig":"174"},{"size":14095,"mtime":1614275545897,"results":"212","hashOfConfig":"174"},{"size":5356,"mtime":1614017510220,"results":"213","hashOfConfig":"174"},{"size":2971,"mtime":1614118042043,"results":"214","hashOfConfig":"174"},{"size":5968,"mtime":1614275226147,"results":"215","hashOfConfig":"174"},{"size":12408,"mtime":1614275756657,"results":"216","hashOfConfig":"174"},{"size":7143,"mtime":1614275945447,"results":"217","hashOfConfig":"174"},{"size":5729,"mtime":1614275809787,"results":"218","hashOfConfig":"174"},{"size":4993,"mtime":1612832549277,"results":"219","hashOfConfig":"174"},{"size":1560,"mtime":1610106635382,"results":"220","hashOfConfig":"174"},{"size":1793,"mtime":1608678905090,"results":"221","hashOfConfig":"174"},{"size":6525,"mtime":1614261837697,"results":"222","hashOfConfig":"174"},{"size":898,"mtime":1609978275513,"results":"223","hashOfConfig":"174"},{"size":897,"mtime":1611960472114,"results":"224","hashOfConfig":"174"},{"size":3530,"mtime":1611960472114,"results":"225","hashOfConfig":"174"},{"size":1331,"mtime":1612803190107,"results":"226","hashOfConfig":"174"},{"size":377,"mtime":1608409635720,"results":"227","hashOfConfig":"174"},{"size":975,"mtime":1612808569627,"results":"228","hashOfConfig":"174"},{"size":1027,"mtime":1612890733849,"results":"229","hashOfConfig":"174"},{"size":889,"mtime":1614212868650,"results":"230","hashOfConfig":"174"},{"size":952,"mtime":1614275887497,"results":"231","hashOfConfig":"174"},{"size":1115,"mtime":1612827087027,"results":"232","hashOfConfig":"174"},{"size":2535,"mtime":1614196944170,"results":"233","hashOfConfig":"174"},{"size":440,"mtime":1609635534260,"results":"234","hashOfConfig":"174"},{"size":2199,"mtime":1614275485717,"results":"235","hashOfConfig":"174"},{"size":1728,"mtime":1613609903180,"results":"236","hashOfConfig":"174"},{"size":632,"mtime":1614275950637,"results":"237","hashOfConfig":"174"},{"size":3151,"mtime":1614275760737,"results":"238","hashOfConfig":"174"},{"size":423,"mtime":1614275186717,"results":"239","hashOfConfig":"174"},{"size":1294,"mtime":1612826862757,"results":"240","hashOfConfig":"174"},{"size":1170,"mtime":1614275830067,"results":"241","hashOfConfig":"174"},{"size":454,"mtime":1612803607557,"results":"242","hashOfConfig":"174"},{"size":1521,"mtime":1614274612207,"results":"243","hashOfConfig":"174"},{"size":320,"mtime":1611163718930,"results":"244","hashOfConfig":"174"},{"size":655,"mtime":1613076713220,"results":"245","hashOfConfig":"174"},{"size":1810,"mtime":1613830248251,"results":"246","hashOfConfig":"174"},{"size":2227,"mtime":1614096810123,"results":"247","hashOfConfig":"174"},{"size":431,"mtime":1613172969079,"results":"248","hashOfConfig":"174"},{"size":3835,"mtime":1614269466837,"results":"249","hashOfConfig":"174"},{"size":403,"mtime":1612912179069,"results":"250","hashOfConfig":"174"},{"size":8363,"mtime":1611078296630,"results":"251","hashOfConfig":"174"},{"size":8244,"mtime":1614211537610,"results":"252","hashOfConfig":"174"},{"size":4873,"mtime":1614271114997,"results":"253","hashOfConfig":"174"},{"size":9998,"mtime":1614269703057,"results":"254","hashOfConfig":"174"},{"size":5150,"mtime":1614270046047,"results":"255","hashOfConfig":"174"},{"size":4289,"mtime":1614270020437,"results":"256","hashOfConfig":"174"},{"size":8535,"mtime":1614270056297,"results":"257","hashOfConfig":"174"},{"size":1928,"mtime":1614269985167,"results":"258","hashOfConfig":"174"},{"size":1559,"mtime":1613150212680,"results":"259","hashOfConfig":"174"},{"size":3418,"mtime":1613610106850,"results":"260","hashOfConfig":"174"},{"size":14172,"mtime":1613574844140,"results":"261","hashOfConfig":"174"},{"size":693,"mtime":1612972806200,"results":"262","hashOfConfig":"174"},{"size":11477,"mtime":1613701190609,"results":"263","hashOfConfig":"174"},{"size":1447,"mtime":1614177255770,"results":"264","hashOfConfig":"174"},{"size":1888,"mtime":1614275708117,"results":"265","hashOfConfig":"174"},{"size":6693,"mtime":1614269203417,"results":"266","hashOfConfig":"174"},{"size":425,"mtime":1609365301650,"results":"267","hashOfConfig":"174"},{"size":7098,"mtime":1614212142380,"results":"268","hashOfConfig":"174"},{"size":999,"mtime":1612984003740,"results":"269","hashOfConfig":"174"},{"size":3320,"mtime":1614122175663,"results":"270","hashOfConfig":"174"},{"size":4076,"mtime":1614212181850,"results":"271","hashOfConfig":"174"},{"size":6827,"mtime":1614212468910,"results":"272","hashOfConfig":"174"},{"size":10365,"mtime":1614273775287,"results":"273","hashOfConfig":"174"},{"size":5387,"mtime":1614258243397,"results":"274","hashOfConfig":"174"},{"size":2999,"mtime":1612400717780,"results":"275","hashOfConfig":"174"},{"size":1851,"mtime":1614098317943,"results":"276","hashOfConfig":"174"},{"size":728,"mtime":1610132354653,"results":"277","hashOfConfig":"174"},{"size":651,"mtime":1608506295620,"results":"278","hashOfConfig":"174"},{"size":354,"mtime":1610748624680,"results":"279","hashOfConfig":"174"},{"size":902,"mtime":1614272909787,"results":"280","hashOfConfig":"174"},{"size":1186,"mtime":1614274639547,"results":"281","hashOfConfig":"174"},{"size":1400,"mtime":1611365536654,"results":"282","hashOfConfig":"174"},{"size":4564,"mtime":1613054876220,"results":"283","hashOfConfig":"174"},{"size":624,"mtime":1613416674392,"results":"284","hashOfConfig":"174"},{"size":918,"mtime":1614176766280,"results":"285","hashOfConfig":"174"},{"size":2707,"mtime":1614119736023,"results":"286","hashOfConfig":"174"},{"size":1115,"mtime":1612828420327,"results":"287","hashOfConfig":"174"},{"size":1564,"mtime":1612828401497,"results":"288","hashOfConfig":"174"},{"size":1301,"mtime":1612828444267,"results":"289","hashOfConfig":"174"},{"size":1096,"mtime":1613574911250,"results":"290","hashOfConfig":"174"},{"size":613,"mtime":1612906653229,"results":"291","hashOfConfig":"174"},{"size":1867,"mtime":1613151668320,"results":"292","hashOfConfig":"174"},{"size":2294,"mtime":1614205641940,"results":"293","hashOfConfig":"174"},{"size":854,"mtime":1614275040427,"results":"294","hashOfConfig":"174"},{"size":2250,"mtime":1614275123247,"results":"295","hashOfConfig":"174"},{"size":364,"mtime":1612973498140,"results":"296","hashOfConfig":"174"},{"size":1934,"mtime":1613059142660,"results":"297","hashOfConfig":"174"},{"size":447,"mtime":1609638204590,"results":"298","hashOfConfig":"174"},{"size":3039,"mtime":1613420226862,"results":"299","hashOfConfig":"174"},{"size":2738,"mtime":1614206891810,"results":"300","hashOfConfig":"174"},{"size":1274,"mtime":1613074426100,"results":"301","hashOfConfig":"174"},{"size":1060,"mtime":1612969996230,"results":"302","hashOfConfig":"174"},{"size":2885,"mtime":1614106236373,"results":"303","hashOfConfig":"174"},{"size":408,"mtime":1612906966259,"results":"304","hashOfConfig":"174"},{"size":5415,"mtime":1614112026683,"results":"305","hashOfConfig":"174"},{"size":681,"mtime":1610146980773,"results":"306","hashOfConfig":"174"},{"size":6582,"mtime":1613155269070,"results":"307","hashOfConfig":"174"},{"size":1530,"mtime":1614294745527,"results":"308","hashOfConfig":"174"},{"size":3878,"mtime":1614295203087,"results":"309","hashOfConfig":"174"},{"size":4000,"mtime":1614021336030,"results":"310","hashOfConfig":"174"},{"size":4130,"mtime":1614019731940,"results":"311","hashOfConfig":"174"},{"size":636,"mtime":1614009954980,"results":"312","hashOfConfig":"174"},{"size":3237,"mtime":1614258277017,"results":"313","hashOfConfig":"174"},{"size":10637,"mtime":1614024037180,"results":"314","hashOfConfig":"174"},{"size":1458,"mtime":1612888993149,"results":"315","hashOfConfig":"174"},{"size":2861,"mtime":1614210669900,"results":"316","hashOfConfig":"174"},{"size":3318,"mtime":1614211171940,"results":"317","hashOfConfig":"174"},{"size":776,"mtime":1614175139190,"results":"318","hashOfConfig":"174"},{"size":1274,"mtime":1614175269010,"results":"319","hashOfConfig":"174"},{"size":2251,"mtime":1614120394783,"results":"320","hashOfConfig":"174"},{"size":341,"mtime":1610810143010,"results":"321","hashOfConfig":"174"},{"size":3741,"mtime":1613829661181,"results":"322","hashOfConfig":"174"},{"size":9132,"mtime":1614021524520,"results":"323","hashOfConfig":"174"},{"size":6880,"mtime":1614255879827,"results":"324","hashOfConfig":"174"},{"size":1124,"mtime":1612806552957,"results":"325","hashOfConfig":"174"},{"size":698,"mtime":1612898195179,"results":"326","hashOfConfig":"174"},{"size":486,"mtime":1610505703940,"results":"327","hashOfConfig":"174"},{"size":1432,"mtime":1612827268487,"results":"328","hashOfConfig":"174"},{"size":2165,"mtime":1612803915567,"results":"329","hashOfConfig":"174"},{"size":2041,"mtime":1614111903193,"results":"330","hashOfConfig":"174"},{"size":1414,"mtime":1614205611820,"results":"331","hashOfConfig":"174"},{"size":1997,"mtime":1614294905117,"results":"332","hashOfConfig":"174"},{"size":806,"mtime":1614201284060,"results":"333","hashOfConfig":"174"},{"size":3058,"mtime":1613236507011,"results":"334","hashOfConfig":"174"},{"size":668,"mtime":1614109851303,"results":"335","hashOfConfig":"174"},{"size":1679,"mtime":1613833041551,"results":"336","hashOfConfig":"174"},{"size":2470,"mtime":1614020404360,"results":"337","hashOfConfig":"174"},{"size":492,"mtime":1612389141090,"results":"338","hashOfConfig":"174"},{"size":2236,"mtime":1613939348071,"results":"339","hashOfConfig":"174"},{"size":349,"mtime":1612803624657,"results":"340","hashOfConfig":"174"},{"size":73311,"mtime":1614296408197,"results":"341","hashOfConfig":"174"},{"size":2268,"mtime":1613826826921,"results":"342","hashOfConfig":"174"},{"size":1643,"mtime":1614021440690,"results":"343","hashOfConfig":"174"},{"size":3764,"mtime":1614282716937,"results":"344","hashOfConfig":"174"},{"size":162,"mtime":1612389165420,"results":"345","hashOfConfig":"174"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},"1lk1amn",{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"348"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"348"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"348"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"348"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"439","messages":"440","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"348"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"348"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"515","messages":"516","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"348"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"348"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"348"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"348"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"348"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"348"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"348"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"348"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"348"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"564","messages":"565","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"348"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"579","messages":"580","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"348"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"348"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"348"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"348"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"637","messages":"638","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"647","messages":"648","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"348"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"348"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"348"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"348"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"348"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"708","messages":"709","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710","usedDeprecatedRules":"348"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},"/imooptik-frontend/src/index.js",[],["717","718"],"/imooptik-frontend/src/reportWebVitals.js",[],"/imooptik-frontend/src/App.jsx",[],"/imooptik-frontend/src/context/auth/auth.context.jsx",["719"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { getUser, createNewUser, resetPassword, setNewPassword, fetchUser } from './auth.queries'\n\nexport const AuthContext = createContext({\n    currentUser: null,\n    isAdmin: false,\n    isOptometrist: false,\n    token: null,\n    stats: null,\n    logIn: () => { },\n    logOut: () => { },\n    register: () => { },\n    handleResetPassword: () => { },\n    handleCreatingNewPassword: () => { }\n})\n\nconst AuthProvider = ({ children }) => {\n    const { setShowModal, setIsLoading, getMessage, closeModal } = useContext(LoadingModalContext)\n    const [currentUser, setCurrentUser] = useState(null)\n    const [token, setToken] = useState(null)\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [isOptometrist, setIsOptometrist] = useState(false)\n    const [stats, setStats] = useState(null)\n\n    const checkIfOptometrist = user => {\n        if (user.optometrist) {\n            setIsOptometrist(true)\n        } else {\n            setIsOptometrist(false)\n        }\n    }\n\n    const checkIfAdmin = (user) => {\n        if (user.admin > 1) {\n            setIsAdmin(true)\n        } else {\n            setIsAdmin(false)\n        }\n    }\n\n    const logIn = async (email, password) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await getUser({ email, password })\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n            if (user.user) {\n                setCurrentUser(user.user)\n                setToken(user.authToken)\n                localStorage.setItem(process.env.REACT_APP_ADMIN_TOKEN, user.authToken)\n                checkIfAdmin(user.user)\n\n                closeModal()\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const logOut = () => {\n        localStorage.removeItem(process.env.REACT_APP_ADMIN_TOKEN)\n        setCurrentUser(null)\n        setToken(null)\n    }\n\n    const register = async (name, email, password, confirmPassword) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!name) {\n            console.log(\"Ziadne meno\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n\n        if (password !== confirmPassword) {\n            console.log(\"hesla sa nezhoduju\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await createNewUser({ name, email, password })\n            const data = await response.json()\n\n            setIsLoading(false)\n            getMessage(data.messageSK)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleResetPassword = async (email) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await resetPassword(email)\n            const user = await response.json()\n\n            getMessage(user.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleCreatingNewPassword = async (resetSecret, password) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        console.log(resetSecret)\n\n        if (!resetSecret) {\n            console.log(\"Ziadny reset token\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await setNewPassword(resetSecret, password)\n            const user = await response.json()\n\n            getMessage(user.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const getStats = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/stats/collectionCounts`, requestOptions)\n            const data = await response.json()\n\n            setStats(data)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN)) {\n            setToken(localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (token) {\n            const getUserProfile = async () => {\n                const response = await fetchUser(token)\n                const data = await response.json()\n                if (data.user) {\n                    setCurrentUser(data.user)\n                    checkIfAdmin(data.user)\n                    checkIfOptometrist(data.user)\n                }\n            }\n            getUserProfile()\n            getStats()\n        }\n    }, [token])\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token,\n                currentUser,\n                isAdmin,\n                isOptometrist,\n                stats,\n                logIn,\n                logOut,\n                register,\n                handleResetPassword,\n                handleCreatingNewPassword\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthProvider","/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx",[],"/imooptik-frontend/src/global.styles.jsx",[],"/imooptik-frontend/src/context/auth/auth.queries.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset-password.jsx",[],"/imooptik-frontend/src/components/popup/pop-up.component.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.component.jsx",[],"/imooptik-frontend/src/context/image/image.context.jsx",[],"/imooptik-frontend/src/context/blog/blog.context.jsx",[],"/imooptik-frontend/src/context/booking/booking.context.jsx",[],"/imooptik-frontend/src/context/orders/orders.context.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.context.jsx",["720","721"],"/imooptik-frontend/src/context/coupons/coupons.context.jsx",[],"/imooptik-frontend/src/context/examination/examination.context.jsx",[],"/imooptik-frontend/src/context/order/order.context.jsx",[],"/imooptik-frontend/src/context/user/user.context.jsx",["722"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\n// import { OrderContext } from '../order/order.context'\n\nimport {\n    // fetchUsers,\n    fetchUser,\n    patchUser,\n    postAdmin,\n    postUser,\n} from './user.queries'\n\nimport {\n    initUserObj\n} from './user.utils'\n\nexport const UserContext = createContext({\n    isUpdating: false,\n    activeIndex: 0,\n    handleChangeFilterItem: () => { },\n    filterItems: [],\n    totalCount: 0,\n    users: null,\n    user: null,\n    // getUsers: () => { },\n    getUser: () => { },\n    handleChange: () => { },\n    handleParameterChange: () => { },\n    handleCompanyChange: () => { },\n    updateUser: () => { },\n    resetUser: () => { },\n    formToShow: 0,\n    switchFormButtons: [],\n    toggleUserForm: () => { },\n    createUser: () => { },\n    getFilteredUsers: () => { },\n    getUserByQuery: () => { },\n})\n\nconst UserProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token } = useContext(AuthContext)\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    // ------------------------\n\n    const [user, setUser] = useState(initUserObj)\n    const [users, setUsers] = useState(null)\n    const [totalCount] = useState(0)\n\n    // ------------------------\n\n    const [isUpdating, setIsUpdating] = useState(false)\n    const [activeIndex, setActiveIndex] = useState(0)\n    const filterItems = [\n        {\n            id: 0,\n            name: \"Zákaznici\",\n            filter: 0,\n        },\n        {\n            id: 1,\n            name: \"Zamestnanci\",\n            filter: 1,\n        },\n        {\n            id: 2,\n            name: \"Vedúci\",\n            filter: 2,\n        },\n        // {\n        //     id: 3,\n        //     name: \"Velký brat\",\n        //     filter: 3,\n        // },\n        // {\n        //     id: 4,\n        //     name: \"Odstránené\",\n        //     filter: 3\n        // }\n    ]\n\n    // ------------------------\n\n    const [formToShow, setFormToShow] = useState(0)\n    const switchFormButtons = [\n        {\n            name: \"Zákazník\"\n        },\n        {\n            name: \"Zamestnanec\"\n        }\n    ]\n\n    const toggleUserForm = (e, idx) => {\n        e.preventDefault()\n        setFormToShow(idx)\n    }\n\n    // ------------------------\n\n\n    const handleChangeFilterItem = (itemIndex) => {\n        setActiveIndex(itemIndex)\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n\n        console.log(name, value)\n        setUser({\n            ...user,\n            [name]: value\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = user.lenses[name]\n        arr[idx] = value === '' ? 1001 : value\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleCompanyChange = (e) => {\n        const { name, value } = e.target\n        setUser({\n            ...user,\n            company: {\n                ...user.company,\n                [name]: value\n            }\n        })\n    }\n\n    useEffect(() => {\n        setUser({\n            ...user,\n            name: user?.fName + \" \" + user?.lName\n        })\n    }, [user?.fName, user?.lName])\n\n    const resetUser = () => {\n        setUser(initUserObj)\n        setIsUpdating(false)\n        setFormToShow(0)\n    }\n\n    // ------------------------\n    // USER ACTIONS\n    // ------------------------\n\n    // Get all users\n    // const getUsers = async () => {\n    //     setIsLoading(true)\n    //     setShowModal(true)\n\n    //     try {\n    //         const response = await fetchUsers(token)\n    //         const data = await response.json()\n\n    //         console.log(data)\n    //         if (data.users) {\n    //             setUsers(data.users)\n    //             setTotalCount(data.count)\n    //             setIsLoading(false)\n    //             closeModal()\n\n    //         } else {\n    //             getMessage(data.message)\n    //             setIsLoading(false)\n    //         }\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n    // }\n\n    // Get single user\n    const getUser = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n        setIsUpdating(true)\n\n        try {\n            const response = await fetchUser(token, id)\n            const data = await response.json()\n\n            if (data.user) {\n                setUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n                setIsLoading(false)\n                closeModal()\n\n            } else {\n                getMessage(data.message)\n                setIsLoading(false)\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Update user\n    const updateUser = async (user, id, path, refetchUser, close, addUser) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(user)\n\n        try {\n            const response = await patchUser(token, user, id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.messageSK)\n                setIsLoading(false)\n                return\n            }\n\n\n            setIsLoading(false)\n            closeModal()\n\n            if (path === 'order') {\n                push(`/dashboard/objednavky/${id}`)\n            } else if (path === 'profile') {\n                push(`/dashboard/zakaznici/${id}`)\n            } else if (path === 'isOrder') {\n                setUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n\n                addUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n                // console.log(\"REFETCH USER\")\n                // console.log(\"REFETCH USER\")\n                // console.log(\"REFETCH USER\")\n                // refetchUser()\n                close()\n            } else {\n                push(\"/dashboard/zakaznici\")\n            }\n\n            getFilteredUsers({\n                filters: {\n                    admin: activeIndex\n                }\n            })\n            // http://localhost:1000/#/dashboard/zakaznici\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createUser = async (user, path) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            if (formToShow === 0) {\n                let data = {}\n                if (!user._id) {\n                    console.log('creating new user')\n                    const response = await postUser(token, user)\n                    data = await response.json()\n\n                    if (data.error) {\n                        getMessage(data.message)\n\n                        if (data.type === 'email') {\n                            getMessage(\"Email existuje\")\n                        }\n                        if (data.error === 'format' && data.message.includes('email')) {\n                            getMessage(\"Email musi byt platny email\")\n                        }\n                        setIsLoading(false)\n                        return\n                    }\n\n                    setUser({\n                        ...data.user,\n                        _id: data.user._id\n                    })\n                }\n\n                const userId = data.user ? data.user._id : user._id\n\n                updateUser({\n                    ...user\n                }, userId, path)\n\n                // setIsLoading(false)\n                // getUsers()\n                // push('/dashboard/zakaznici')\n                // closeModal()\n\n            } else {\n                if (user.password !== user.confirmPassword) {\n                    getMessage(\"Heslá sa nezhodujú\")\n                    setIsLoading(false)\n                    return\n                }\n\n                const response = await postAdmin(token, user)\n                const data = await response.json()\n\n                console.log(data)\n\n                if (data.error) {\n                    getMessage(data.message)\n                    setIsLoading(false)\n                    return\n                }\n\n                setIsLoading(false)\n                getFilteredUsers({\n                    filters: {\n                        admin: activeIndex\n                    }\n                })\n\n                push(\"/dashboard/zakaznici\")\n                closeModal()\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // ----------------------------------------------\n    // ----------------------------------------------\n    // ----------------------------------------------\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n\n    const getFilteredUsers = async (filter) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(filter)\n        const raw = JSON.stringify(filter)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getUserByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(query)\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <UserContext.Provider\n            value={{\n                isUpdating,\n                activeIndex,\n                handleChangeFilterItem,\n                filterItems,\n                users,\n                user,\n                totalCount,\n                // getUsers,\n                getUser,\n                handleChange,\n                handleParameterChange,\n                handleCompanyChange,\n                updateUser,\n                resetUser,\n                formToShow,\n                switchFormButtons,\n                toggleUserForm,\n                createUser,\n                getFilteredUsers,\n                getUserByQuery,\n            }}\n        >\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserProvider","/imooptik-frontend/src/context/analytics/analytics.context.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx",[],"/imooptik-frontend/src/components/popup/pop.up.styles.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.component.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.component.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.component.jsx",[],"/imooptik-frontend/src/sections/customers/customers.section.jsx",["723","724"],"/imooptik-frontend/src/sections/orders/orders.section.jsx",["725"],"/imooptik-frontend/src/sections/product/product.section.jsx",["726","727","728","729","730","731"],"/imooptik-frontend/src/sections/analytics/analytics.section.jsx",["732"],"/imooptik-frontend/src/components/custom-button/custom-button.component.jsx",[],"/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx",["733","734","735","736"],"/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx",[],"/imooptik-frontend/src/sections/post/post.section.jsx",["737","738","739"],"/imooptik-frontend/src/sections/booking/booking.section.jsx",["740","741","742","743"],"/imooptik-frontend/src/sections/order/order.section.jsx",["744","745","746"],"import React, { useContext, useState, useEffect } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { OrderContext } from '../../context/order/order.context'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from \"../../components/popup/pop-up.component\"\n\nimport SelectUserComponent from './steps/1-select-user/select-user.component'\nimport SelectProductComponent from \"./steps/2-select-product/select-product.component\"\nimport SelectLensesComponent from './steps/3-select-lenses/select-lenses.component'\nimport SummaryComponent from './steps/4-summary/summary.component'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport {\n    Header,\n} from './order.styles'\n\nconst OrderSection = () => {\n    const {\n        step,\n        order,\n        setOrder,\n        addUser,\n        resetOrder,\n        changeStep\n    } = useContext(OrderContext)\n\n    const { userId, orderId } = useParams()\n\n    const [hasChanged, setHasChanged] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleOrderChange = valueToAdd => {\n        setHasChanged(true)\n        const { name, value } = valueToAdd\n        setOrder({\n            ...order,\n            [name]: value\n        })\n    }\n\n    const {\n        getMessage,\n        setShowModal,\n        closeModal,\n        isLoading,\n        showModal,\n        message\n    } = useContext(LoadingModalContext)\n\n    const showErrorMessage = (message) => {\n        getMessage(message)\n        setShowModal(true)\n    }\n\n    const userData = useFetchById(\"api/admin/users\", userId, !(userId !== 'nova-objednavka'))\n    const orderData = useFetchById(\"api/admin/orders\", orderId, !orderId)\n\n    const handleAddNextProduct = () => {\n        changeStep('findProduct')\n        if (order?.product) {\n            if (order?.lenses) {\n                delete order[\"lenses\"]\n                delete order[\"product\"]\n            } else {\n                delete order[\"product\"]\n            }\n            setOrder({ ...order })\n        }\n    }\n\n    useEffect(() => {\n        if (userId !== 'nova-objednavka' && orderId) {\n            setIsUpdating(true)\n            changeStep('summary')\n            if (orderData.response) {\n                addUser(orderData.response.order.orderedBy)\n                setOrder({\n                    ...order,\n                    order: orderData.response.order,\n                    user: orderData.response.order.orderedBy,\n                    combinedProducts: orderData.response.order.combinedProducts\n                })\n            }\n        } else if (userId !== 'nova-objednavka' && orderId === undefined) {\n            changeStep('select-product')\n            if (userData.response) {\n                addUser(userData.response.user)\n            }\n        }\n\n    }, [userId, orderId, userData.response, orderData.response])\n\n    useEffect(() => {\n        if (userData.isLoading) return\n        addUser(userData.response.user)\n\n    }, [userData.isLoading])\n\n    useEffect(() => {\n        return () => {\n            changeStep('select-user')\n            resetOrder({})\n            setHasChanged(false)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    // console.log(\"ORDER OBJECT\")\n    // console.log(userData.isLoading)\n\n    return (\n\n        <section>\n            <Prompt\n                when={hasChanged}\n                message={\"Máte nedokončenú objednávku, skutočne chcete odísť?\"}\n            />\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <Header>\n                <div>\n                    <h1>{isUpdating ? `Objednavka číslo ${order?.order?.customId}` : \"Nová objednávka\"}</h1>\n                </div>\n            </Header>\n            <ScrollContainer>\n                <div>\n                    {step === 'select-user' && (\n                        <SelectUserComponent\n                            next={() => changeStep('select-product')}\n                            addToOrder={handleOrderChange}\n                        />\n                    )}\n                    {step === 'select-product' && (\n                        <SelectProductComponent\n                            back={() => changeStep(\"select-user\")}\n                            next={changeStep}\n                            showErrorMessage={showErrorMessage}\n                        />\n                    )}\n                    {step === 'select-lenses' && (\n                        <SelectLensesComponent\n                            back={() => changeStep(\"select-product\")}\n                            next={() => changeStep('summary')}\n                        />\n                    )}\n                    {step === 'summary' && (\n                        <SummaryComponent\n                            isUpdating={isUpdating}\n                            back={() => changeStep(\"select-lenses\")}\n                            addNextProduct={handleAddNextProduct}\n                            setHasChanged={setHasChanged}\n                            refetchUser={userData.refetch}\n                        />\n                    )}\n                </div>\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default OrderSection\n","/imooptik-frontend/src/sections/coupons/coupons.section.jsx",["747","748"],"import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { CouponsContext } from '../../context/coupons/coupons.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport {\n    // CouponOverviewContainer,\n    DeleteButton,\n    OpenButton,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TableCol\n} from './coupons.styles'\n\nconst CouponsSection = () => {\n    // const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        coupons,\n        getCoupons,\n        deleteCoupon\n    } = useContext(CouponsContext)\n\n    useEffect(() => {\n        if (!coupons) {\n            getCoupons()\n        }\n    }, [coupons])\n\n    console.log(coupons)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                title='Kupóny'\n                // searchQuery={searchQuery}\n                // handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('kupony/novy-kupon')}\n            />\n            <ScrollContainer>\n\n                <TableContainer>\n                    <TableHead>\n                        <TableCol>#</TableCol>\n                        <TableCol>Kód</TableCol>\n                        <TableCol>Typ</TableCol>\n                        <TableCol>Hodnota</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {coupons && coupons.map((coupon, idx) => (\n                        <TableRow key={idx}>\n                            <TableCol>{idx + 1}</TableCol>\n                            <TableCol>{coupon.code}</TableCol>\n                            <TableCol>{coupon.type === \"percentage\" ? \"Percentá\" : \"Fixná suma\"}</TableCol>\n                            <TableCol>{coupon.value}</TableCol>\n                            <TableCol>\n                                <OpenButton onClick={() => push(`kupony/${coupon._id}`)}>Zobraziť</OpenButton>\n                                <DeleteButton onClick={() => deleteCoupon(coupon._id)}>Ostrániť</DeleteButton>\n                            </TableCol>\n                        </TableRow>\n                    ))}\n                </TableContainer>\n                <ListArrows\n                    listItems={coupons}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CouponsSection\n","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx",["749","750"],"/imooptik-frontend/src/sections/calendar/calendar.section.jsx",["751"],"/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx",["752","753","754","755","756"],"/imooptik-frontend/src/sections/coupon/coupon.section.jsx",["757","758"],"/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx",[],"/imooptik-frontend/src/context/image/image.queries.jsx",[],"/imooptik-frontend/src/context/blog/blog.queries.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx",[],"/imooptik-frontend/src/context/user/user.utils.jsx",[],"/imooptik-frontend/src/context/user/user.queries.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.styles.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx",[],"/imooptik-frontend/src/sections/customers/customers.styles.jsx",[],"/imooptik-frontend/src/context/orders/orders.utils.jsx",[],"/imooptik-frontend/src/sections/product/product.styles.jsx",[],"/imooptik-frontend/src/sections/orders/orders.styles.jsx",[],"/imooptik-frontend/src/sections/analytics/analytics.styles.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx",[],"/imooptik-frontend/src/sections/booking/booking.styles.jsx",[],"/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx",[],"/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx",[],"/imooptik-frontend/src/sections/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/sections/e-shop/e-shop.styles.jsx",[],"/imooptik-frontend/src/sections/coupons/coupons.styles.jsx",[],"/imooptik-frontend/src/sections/coupon/coupon.styles.jsx",[],"/imooptik-frontend/src/sections/order/order.styles.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.component.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx",[],"/imooptik-frontend/src/components/list-arrows/list-arrows.component.jsx",["759","760"],"import React, { useState, useEffect } from 'react'\n\nimport {\n    AiFillLeftCircle,\n    AiFillRightCircle\n} from 'react-icons/ai'\n\nimport {\n    ArrowsContainer,\n    IconContainer\n} from './list-arrows.styles'\n\nconst ListArrows = ({\n    listItems = [],\n    handleClickPrev = () => { },\n    handleClickNext = () => { }\n}) => {\n    const [isDisablePrev, setIsDisablePrev] = useState(true)\n    const [isDisableNext, setIsDisableNext] = useState(true)\n    const [currentPage, setCurrentPage] = useState(0)\n\n    useEffect(() => {\n        if (currentPage === 0) {\n            setIsDisablePrev(true)\n        } else {\n            setIsDisablePrev(false)\n            // setCurrentPage(0)\n        }\n    }, [listItems])\n\n    useEffect(() => {\n        if (listItems?.length < 10) {\n            setIsDisableNext(true)\n        } else {\n            setIsDisableNext(false)\n        }\n    }, [listItems])\n\n    useEffect(() => {\n        if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue--)\n    }, [handleClickPrev])\n    useEffect(() => {\n        // if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue++)\n    }, [handleClickNext])\n\n    const handlePrev = () => {\n        handleClickPrev()\n        if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue - 1)\n    }\n    const handleNext = () => {\n        handleClickNext()\n        setCurrentPage(prevValue => prevValue + 1)\n    }\n\n    return (\n        <ArrowsContainer>\n            <IconContainer disabled={isDisablePrev} onClick={handlePrev}>\n                <AiFillLeftCircle />\n            </IconContainer>\n            <IconContainer disabled={isDisableNext} onClick={handleNext}>\n                <AiFillRightCircle />\n            </IconContainer>\n        </ArrowsContainer>\n    )\n}\n\nexport default ListArrows\n","/imooptik-frontend/src/utils/warehouse.utils.jsx",[],"/imooptik-frontend/src/utils/user.utils.jsx",[],"/imooptik-frontend/src/hooks/useFetch.jsx",["761","762","763"],"/imooptik-frontend/src/utils/analytics.utils.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.component.jsx",["764","765"],"import React, { useEffect, useContext, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\n// import { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\n// import CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    // const {\n    //     getMessage,\n    //     setIsLoading,\n    //     setShowModal,\n    //     closeModal\n    // } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    // const getCropData = async (e) => {\n    //     e.preventDefault()\n    //     setShowModal(true)\n    //     setIsLoading(true)\n\n    //     try {\n    //         // if (typeof cropper !== 'undefined') {\n    //         toDataUrl(imgUrl, async (imgData) => {\n    //             const data = await handleImage(imgData, imageName, imageAlt)\n\n    //             if (data.image) {\n    //                 setImage(data.image._id)\n    //                 setSelectedImage(data.image)\n    //                 getImages()\n    //                 close()\n    //             }\n    //         })\n\n    //         // }\n    //         setShowModal(false)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    //     closeModal()\n    // };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Vybrať obrázok</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n","/imooptik-frontend/src/utils/calendar.utils.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.component.jsx",[],"/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx",["766","767","768"],"/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.component.jsx",["769"],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx",[],"/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.component.jsx",["770","771"],"/imooptik-frontend/src/components/product-service-form/product-service-form.component.jsx",[],"/imooptik-frontend/src/components/booking-appoinments/booking-appoinment.component.jsx",["772"],"import React, { useEffect } from 'react'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\nimport Spinner from '../spinner/spinner.component'\nimport BookingAppoinment from '../booking-appoinment/booking-appoinment.component'\n\nimport {\n    TableHead,\n    TableRow,\n    TableCol\n} from './booking-appoinment.styles'\n\nconst BookingAppoinments = ({ day }) => {\n    console.log(day)\n\n    const { response, isLoading, refetch } = useFetchByQuery('api/admin/booking/userBookings/filter', {\n        filters: {\n            dueDate: day.bookingDate\n        }\n    })\n\n    useEffect(() => {\n        refetch()\n    }, [day])\n\n    if (isLoading) return <Spinner />\n\n    return (\n        <div>\n            <TableHead>\n                <TableCol>#</TableCol>\n                <TableCol>Vyšetrenie</TableCol>\n                <TableCol>Meno</TableCol>\n                <TableCol>Dátum</TableCol>\n                <TableCol>Poznámka</TableCol>\n                <TableCol>Možnosti</TableCol>\n            </TableHead>\n\n            {response?.userBookings?.map(({ booking, name, dueDate, note }, idx) => (\n                <TableRow key={idx}>\n                    <TableCol>{idx + 1}</TableCol>\n                    <TableCol><BookingAppoinment bookingId={booking} /></TableCol>\n                    <TableCol>{name}</TableCol>\n                    <TableCol>{dueDate}</TableCol>\n                    <TableCol>{note}</TableCol>\n                    <TableCol>Možnosti</TableCol>\n                </TableRow>\n            ))}\n        </div>\n    )\n}\n\nexport default BookingAppoinments\n","/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.component.jsx",[],"/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx",["773"],"import React from 'react'\n\nimport CustomFormSwitch from '../custom-form-switch/custom-form-switch.component'\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from \"../custom-checkbox/custom-checkbox.component\"\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    CustomSelect,\n    Container,\n    GridRow,\n    ZeroMargin,\n    ColContainer,\n    CustomerForm,\n    SectionTitle\n} from './new-user-form.styles'\n\n\nconst NewUserForm = ({\n    formToShow,\n    switchFormButtons,\n    toggleUserForm,\n    user,\n    handleChange,\n    isAdmin,\n    handleParameterChange,\n    handleCompanyChange\n}) => {\n\n    return (\n        <div>\n            {/* Akého uživatela chcete vytvoriť? */}\n            {isAdmin && <CustomFormSwitch\n                items={switchFormButtons}\n                title=\"Akého uživatela chcete vytvoriť?\"\n                activeIndex={formToShow}\n                handleClick={toggleUserForm}\n            />}\n\n            {\n                formToShow === 0 ? (\n                    <CustomerForm>\n                        <ColContainer>\n                            <h2>Informácie</h2>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                            <CustomInput\n                                label=\"E-mail*\"\n                                type='email'\n                                name='email'\n                                value={user.email ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                            <CustomInput\n                                label=\"Telefónne číslo\"\n                                type='text'\n                                name='phone'\n                                value={user.phone ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                            <InputRow\n                                label=\"Dátum narodenia\"\n                                example=''\n                            >\n                                <CustomInput\n                                    // label=\"Priezvisko*\"\n                                    type='date'\n                                    name='birthDate'\n                                    value={user.birthDate}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n\n                            <Container>\n                                <h2>Parametre</h2>\n\n                                <ParametersTable\n                                    parameters={user.lenses}\n                                    handleChange={handleParameterChange}\n                                />\n                            </Container>\n                        </ColContainer>\n\n                        <ColContainer>\n                            <div>\n                                <h2>Fakturačné údaje</h2>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"Ulica a čislo domu\"\n                                            type='text'\n                                            name='address'\n                                            value={user.address ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"PSČ\"\n                                            type='text'\n                                            name='psc'\n                                            value={user.psc ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Mesto\"\n                                            type='text'\n                                            name='city'\n                                            value={user.city ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Krajina\"\n                                            type='text'\n                                            name='country'\n                                            value={user.country ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                </GridRow>\n                            </div>\n\n                            <Container>\n                                <h2>Firemné údaje</h2>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"IČO\"\n                                            type='text'\n                                            name='ico'\n                                            value={user.company.ico ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"DIČ\"\n                                            type='text'\n                                            name='dic'\n                                            value={user.company.dic ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"Ulica a čislo domu\"\n                                            type='text'\n                                            name='address'\n                                            value={user.company.address ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"PSČ\"\n                                            type='text'\n                                            name='psc'\n                                            value={user.company.psc ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Mesto\"\n                                            type='text'\n                                            name='city'\n                                            value={user.company.city ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Krajina\"\n                                            type='text'\n                                            name='country'\n                                            value={user.company.country ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </div>\n                                </GridRow>\n                            </Container>\n                        </ColContainer>\n\n                    </CustomerForm>\n                ) : (\n                        <CustomerForm>\n\n                            <ColContainer>\n                                <h2>Informácie</h2>\n                                <CustomInput\n                                    label=\"Meno*\"\n                                    type='text'\n                                    name='fName'\n                                    value={user.fName ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                                <CustomInput\n                                    label=\"Priezvisko*\"\n                                    type='text'\n                                    name='lName'\n                                    value={user.lName ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                                <CustomInput\n                                    label=\"E-mail*\"\n                                    type='email'\n                                    name='email'\n                                    value={user.email ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                                <CustomInput\n                                    label=\"Heslo*\"\n                                    type='password'\n                                    name='password'\n                                    value={user.password ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                                <CustomInput\n                                    label=\"Potvrď heslo*\"\n                                    type='password'\n                                    name='confirmPassword'\n                                    value={user.confirmPassword ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </ColContainer>\n\n                            <ColContainer>\n                                <SectionTitle>Admin privilégia</SectionTitle>\n                                <div>\n                                    <h4>Predajňa na ktorej uživatel pracuje</h4>\n                                    <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Nezadané</option>\n\n                                        {\n                                            retailNames.map((name, idx) => {\n                                                if (idx === 4) return\n                                                return (\n                                                    <option key={idx} value={idx + 1}>{name}</option>\n\n                                                )\n                                            })\n                                        }\n                                    </CustomSelect>\n\n                                </div>\n                                <div>\n                                    <h4>Výška administrativných práv</h4>\n                                    <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Zákaznik</option>\n                                        <option value={1}>Predavač</option>\n                                        <option value={2}>Vedúci</option>\n                                    </CustomSelect>\n\n                                </div>\n                                <Container>\n                                    <CustomCheckbox\n                                        label='Optometrista'\n                                        handleClick={() => handleChange({\n                                            target: {\n                                                name: \"optometrist\",\n                                                value: !user.optometrist\n                                            }\n                                        })}\n                                        isActive={user.optometrist}\n                                    />\n                                </Container>\n                            </ColContainer>\n                        </CustomerForm>\n                    )\n            }\n        </div>\n    )\n}\n\nexport default NewUserForm\n","/imooptik-frontend/src/components/custom-select/custom-select.component.jsx",["774"],"import React from 'react'\n\nimport { CustomSelectContainer } from './custom-select.styles'\n\nconst CustomRetailSelect = ({ name, value, handleChange, listItems, defaultOption = false, defaultValue, defaultLabel }) => {\n    return (\n        <CustomSelectContainer name={name} value={value} onChange={(e) => handleChange(e)}>\n            {defaultOption && <option value={defaultValue}>{defaultLabel}</option>}\n            {listItems.map((name, idx) => {\n                if (idx === 4) return\n                return (\n                    <option key={idx} value={idx + 1}>{name}</option>\n                )\n            })}\n        </CustomSelectContainer>\n    )\n}\n\nexport default CustomRetailSelect\n","/imooptik-frontend/src/components/user-form/user-form.component.jsx",["775","776"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ProfileOrderOverview from '../profile-order-overview/profile-order-overview.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\nimport ExaminationsOverview from '../examinations-overview/examinations-overview.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Profile,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    Title,\n    Container,\n    OrderHeader,\n    OrderButton,\n    CustomSelect,\n    AdminPanelContainer\n} from './user.form-styles'\n\nconst UserForm = ({\n    isAdmin,\n    isUpdating,\n    user,\n    handleChange,\n    handleParameterChange,\n    handleCompanyChange,\n    isOptometrist,\n    isOrder = false\n}) => {\n    const { push } = useHistory()\n\n    const handleAddOrderButtonClick = e => {\n        e.preventDefault()\n        push(`/dashboard/objednavky/${user._id}`)\n    }\n\n    console.log(user)\n\n\n    return (\n        <GridContainer>\n            <Profile>\n                {isAdmin && <AdminPanelContainer>\n                    <h2>Admin panel</h2>\n                    <InputRow\n                        label=\"Predajňa na ktorej uživatel pracuje\"\n                        example=''\n                    >\n                        <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Nezadané</option>\n                            {\n                                retailNames.map((name, idx) => {\n                                    if (idx === 4) return\n                                    return (\n                                        <option key={idx} value={idx + 1}>{name}</option>\n                                    )\n                                })\n                            }\n                        </CustomSelect>\n                    </InputRow>\n                    <InputRow\n                        label=\"Výška administrativných práv\"\n                        example=\"\"\n                    >\n                        <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Zákaznik</option>\n                            <option value={1}>Predavač</option>\n                            <option value={2}>Vedúci</option>\n                        </CustomSelect>\n                    </InputRow>\n\n                    <Container>\n                        <CustomCheckbox\n                            label='Optometrista'\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"optometrist\",\n                                    value: !user.optometrist\n                                }\n                            })}\n                            isActive={user.optometrist}\n                        />\n                    </Container>\n                </AdminPanelContainer>}\n                <div>\n                    <h2>Informácie</h2>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                // label=\"Priezvisko*\"\n                                type='date'\n                                name='birthDate'\n                                value={user.birthDate}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </div>\n\n                <Container>\n                    <h2>Kontaktné údaje</h2>\n                    <Row>\n                        <div>\n                            <CustomInput\n                                label=\"E-mail*\"\n                                type='email'\n                                name='email'\n                                value={user.email ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Telefónne číslo\"\n                                type='text'\n                                name='phone'\n                                value={user.phone ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <h2>Fakturačné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.address ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.psc ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.city ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.country ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n                <Container>\n                    <h2>Firemné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"IČO\"\n                                type='text'\n                                name='ico'\n                                value={user.company.ico ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"DIČ\"\n                                type='text'\n                                name='dic'\n                                value={user.company.dic ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.company.address ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.company.psc ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.company.city ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.company.country ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n\n                <Container>\n                    <h2>Parametre</h2>\n\n                    <ParametersTable\n                        parameters={user.lenses}\n                        handleChange={handleParameterChange}\n                    />\n                </Container>\n\n\n            </Profile>\n\n            {!isOrder && isUpdating && <div>\n                <OrderHeader>\n                    <Title>\n                        Objednávky\n                    </Title>\n                    <OrderButton onClick={e => handleAddOrderButtonClick(e)}>Pridať objednávku</OrderButton>\n                </OrderHeader>\n                <div>\n                    {user.orders.length > 0 ? user.orders.map((order, idx) => (\n                        <ProfileOrderOverview\n                            key={idx}\n                            id={order}\n                            handleUpdateClick={() => push(`/dashboard/objednavky/${user._id}/${order}`)}\n                        />\n                    )).reverse().slice(0, 5) : (\n                            <p>Žiadné objednávky</p>\n                        )}\n                </div>\n                {isOptometrist && <ExaminationsOverview />}\n            </div>}\n        </GridContainer>\n    )\n}\n\nexport default UserForm\n","/imooptik-frontend/src/components/product-overview/product-overview.component.jsx",[],"/imooptik-frontend/src/sections/post/post.styles.jsx",[],"/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.component.jsx",["777","778","779"],"import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\nimport { brands } from '../../utils/warehouse.utils'\nimport { useFetch } from '../../hooks/useFetch'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    Container,\n    ApplyButton,\n    ResetButton,\n    OptionsContainer\n} from './modal-eshop-filter.styles'\n\nconst EshopFilterModal = ({ close, applyFilter, resetFilter }) => {\n    const [filter, setFilter] = useState({})\n\n    const { response, isLoading, refetch } = useFetch(`api/store/products/${filter?.filters?.type}/filters`, !filter?.filters?.type, \"GET\")\n    const [filters, setFilters] = useState(null)\n\n    const handleChangeFilters = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            if (Object.keys(filter?.filters).length > 1) {\n                delete filter?.filters[name]\n                setFilter({\n                    ...filter\n                })\n            } else {\n                delete filter[\"filters\"]\n                setFilter({\n                    ...filter\n                })\n            }\n            return\n        }\n\n        setFilter(prevValue => ({\n            ...prevValue,\n            filters: {\n                ...prevValue?.filters,\n                [name]: value\n            }\n        }))\n    }\n\n    useEffect(() => {\n        if (!filter?.filters?.type) return\n        setFilters(null)\n        refetch()\n    }, [filter?.filters?.type])\n\n    useEffect(() => {\n        if (isLoading) return\n        if (response?.filters) {\n            setFilters(response?.filters)\n        }\n    }, [isLoading])\n\n    useEffect(() => {\n        return () => {\n            setFilter({})\n        }\n    }, [])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>Vybrať filter</h2>\n                <Container>\n                    <div>\n                        <h4>Typ produktu</h4>\n                        <CustomCheckbox\n                            label=\"Dioptrické\"\n                            isActive={filter?.filters?.type === 1}\n                            handleClick={() => handleChangeFilters({\n                                target: {\n                                    name: 'type',\n                                    value: filter?.filters?.type ? filter?.filters?.type === 1 ? '' : 1 : 1\n                                }\n                            })}\n                        />\n                        <CustomCheckbox\n                            label=\"Slnečné\"\n                            isActive={filter?.filters?.type === 2}\n                            handleClick={() => handleChangeFilters({\n                                target: {\n                                    name: 'type',\n                                    value: filter?.filters?.type ? filter?.filters?.type === 2 ? '' : 2 : 2\n                                }\n                            })}\n                        />\n                        <CustomCheckbox\n                            label=\"Športové\"\n                            isActive={filter?.filters?.type === 4}\n                            handleClick={() => handleChangeFilters({\n                                target: {\n                                    name: 'type',\n                                    value: filter?.filters?.type ? filter?.filters?.type === 4 ? '' : 4 : 4\n                                }\n                            })}\n                        />\n                        <CustomCheckbox\n                            label=\"Kontaktné šosovky\"\n                            isActive={filter?.filters?.type === 3}\n                            handleClick={() => handleChangeFilters({\n                                target: {\n                                    name: 'type',\n                                    value: filter?.filters?.type ? filter?.filters?.type === 3 ? '' : 3 : 3\n                                }\n                            })}\n                        />\n                    </div>\n                    <h3>Filtovat podla:</h3>\n                    <div>\n                        <CustomInput\n                            label='Meno produktu'\n                            name='name'\n                            value={filter?.filters?.name || \"\"}\n                            handleChange={handleChangeFilters}\n                        />\n                    </div>\n                    <div>\n                        <CustomInput\n                            label='Značka produktu'\n                            name='brand'\n                            value={filter?.filters?.brand || \"\"}\n                            handleChange={handleChangeFilters}\n                            list=\"brands\"\n\n                        />\n                        <datalist id=\"brands\">\n                            {filters?.brands.length > 0 && filters.brands.map((brand, idx) => (\n                                <option key={idx} value={brand} />\n                            ))}\n                        </datalist>\n                    </div>\n                    <div>\n                        <CustomInput\n                            label='Kategoria produktu'\n                            name='category'\n                            value={filter?.filters?.category || \"\"}\n                            handleChange={handleChangeFilters}\n                            list=\"categories\"\n\n                        />\n                        <datalist id=\"categories\">\n                            {filters?.categories.length > 0 && filters.categories.map((brand, idx) => (\n                                <option key={idx} value={brand} />\n                            ))}\n                        </datalist>\n\n                    </div>\n                    <div>\n                        <CustomInput\n                            label='Eankód produktu'\n                            name='eanCode'\n                            value={filter?.filters?.eanCode || \"\"}\n                            handleChange={handleChangeFilters}\n                        />\n                    </div>\n\n\n                </Container>\n\n                <OptionsContainer>\n                    <ResetButton onClick={() => resetFilter()}>Resetovať filter</ResetButton>\n                    <ApplyButton onClick={() => applyFilter(filter)}>Filtrovať</ApplyButton>\n                </OptionsContainer>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default EshopFilterModal\n","/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx",[],"/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.component.jsx",["780","781"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useFetchById } from '../../hooks/useFetch'\nimport { BookingContext } from '../../context/booking/booking.context'\nimport { WeekCalendarContext } from '../../context/week-calendar/week-calendar.context'\n\nimport UserbookingDetailsModal from '../modal-userbookings-details/modal-userbookings-details.component'\nimport UserBookingModal from '../modal-user-bookings/modal-user-booking.component'\nimport CalendarBookedDay from '../calendar-booked-day/calendar-booked-day.component'\n\nimport {\n    dayNames,\n    getPreviousMonthDays,\n    getNextMonthDays,\n    getCurrentMonthDays,\n    getBooking,\n} from '../../utils/calendar.utils'\n\nimport { changeSlash } from '../../utils/week-calendar.utils'\n\nimport {\n    Container,\n    HeaderBlock,\n    HourBlock,\n    HourGrid,\n    TableHead,\n    HourBlockContainer,\n    EmptyContainer,\n    HourTime\n} from './calendar-weekdays.styles'\n\nconst WeekDays = ({\n    calendar,\n    year,\n    month,\n    weekIndex,\n    showUserBooking,\n    setShowUserBooking,\n    handleOpenUserBookingModal,\n    selectedDay,\n}) => {\n    const { timeline, getDayData, refetchWeekCalendar, cancelUserBooking } = useContext(WeekCalendarContext)\n    const { createUserBooking } = useContext(BookingContext)\n    const { response, isLoading, refetch } = useFetchById('api/booking/calendars', calendar, !calendar)\n    const lastDay = new Date(year, month + 1, 0).getDate()\n    const firstDayIndex = new Date(year, month, 0).getDay();\n    const lastDayIndex = new Date(year, month + 1, 0).getDay()\n    const prevLastDay = new Date(year, month, 0).getDate()\n\n    const nextDays = 7 - lastDayIndex\n\n    const [calendarDays, setCalendarDays] = useState([])\n    // const [selectedDay, setSelectedDay] = useState(null)\n    const [showBookingDetails, setShowBookingDetails] = useState(false)\n\n    const [selectedUserBooking, setSelectedUserBooking] = useState(null)\n\n    const handleOpenDetailsModal = (userBooking) => {\n        setSelectedUserBooking(userBooking)\n        setShowBookingDetails(true)\n    }\n\n    const handleCancelUserBooking = (userBookingId) => {\n        cancelUserBooking(userBookingId, refetch, setShowBookingDetails)\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n\n        if (response.calendar) {\n            const prevMonthDays = getPreviousMonthDays(firstDayIndex)\n            const monthDays = getCurrentMonthDays(lastDay)\n            const nextMonthDays = getNextMonthDays(nextDays)\n            const monthDaysWithBookings = getBooking(monthDays, response.calendar, month, year)\n\n            setCalendarDays([\n                ...prevMonthDays,\n                ...monthDaysWithBookings,\n                ...nextMonthDays\n            ])\n\n            // fillDayData([\n            //     ...prevMonthDays,\n            //     ...monthDaysWithBookings,\n            //     ...nextMonthDays\n            // ], response.calendar)\n        }\n    }, [isLoading])\n\n    useEffect(() => {\n        refetch()\n    }, [month])\n\n\n    return (\n        <div>\n            {showBookingDetails && <UserbookingDetailsModal cancelUserBooking={handleCancelUserBooking} refetchCalendar={refetch} calendarId={calendar} userBooking={selectedUserBooking} close={() => setShowBookingDetails(false)} />}\n            {showUserBooking && <UserBookingModal refetchWeekCalendar={refetchWeekCalendar} createUserBooking={createUserBooking} refetchCalendar={refetch} calendar={response?.calendar} day={selectedDay} close={() => setShowUserBooking(false)} />}\n            <Container>\n                <TableHead>\n                    <HeaderBlock>{\" \"}</HeaderBlock>\n                    {calendarDays.slice(weekIndex * 7, (weekIndex * 7) + 7).map(({ dayNumber, isDisable, isPrevDay, isNextDay }, idx) => (\n                        <HeaderBlock isDisabled={isDisable} key={idx}>\n                            {isPrevDay ? (\n                                <React.Fragment>\n                                    <p>{dayNames[new Date(year, month - 1, prevLastDay - (dayNumber)).getDay()]}</p>\n                                    <p>{prevLastDay - (dayNumber - 1)}</p>\n                                </React.Fragment>\n                            ) : isNextDay ? (\n                                <React.Fragment>\n                                    <p>{dayNames[new Date(year, month + 1, dayNumber - 1).getDay()]}</p>\n                                    <p>{dayNumber} </p>\n                                </React.Fragment>\n                            ) : (\n                                        <React.Fragment>\n                                            <p>{dayNames[new Date(year, month, dayNumber - 1).getDay()]}</p>\n                                            <p>{dayNumber} </p>\n                                        </React.Fragment>\n                                    )}\n                        </HeaderBlock>\n                    ))}\n                </TableHead>\n\n                <HourGrid>\n                    <HourBlock>\n                        {timeline && timeline.map((time, idx) => (\n                            <HourBlockContainer key={idx} style={response?.calendar?.interval === 60 ? ({ height: \"10rem\" }) : ({ height: \"5rem\" })}>\n                                <HourTime >\n                                    <p>{changeSlash(time) ?? \"\"}</p>\n                                </HourTime>\n                            </HourBlockContainer>\n\n                        ))}\n                    </HourBlock>\n                    {calendarDays.length > 0 && calendarDays.slice(weekIndex * 7, (weekIndex * 7) + 7).map((dayData, idx) => {\n                        const day = getDayData(dayData?.dayNumber, idx, response.calendar)\n                        return (\n                            < HourBlock key={idx} >\n                                { day && day.map((interval, idx) => (\n                                    <HourBlockContainer style={response?.calendar?.interval === 60 ? ({ height: \"10rem\" }) : ({ height: \"5rem\" })} key={idx}>\n                                        {interval?.userBookings && <CalendarBookedDay\n                                            dayData={dayData}\n                                            calendarId={calendar}\n                                            time={interval.time}\n                                            userBookings={interval.userBookings}\n                                            open={() => handleOpenDetailsModal(interval)}\n                                        />}\n                                        <EmptyContainer onClick={dayData.isDisable ? () => { } : () => handleOpenUserBookingModal({\n                                            ...dayData, time: interval.time, year,\n                                            month,\n                                        })} />\n                                    </HourBlockContainer>\n                                ))}\n                            </HourBlock >\n                        )\n                    })}\n                </HourGrid>\n            </Container>\n        </div>\n    )\n}\n\nexport default WeekDays\n","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.component.jsx",["782","783","784"],"import React, { useState, useEffect } from 'react'\n\nimport {\n    dayNames,\n    getPreviousMonthDays,\n    getNextMonthDays,\n    getCurrentMonthDays,\n    getBooking\n} from '../../utils/calendar.utils'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport {\n    Container,\n    HeaderBlock,\n    Dayblock,\n\n} from './calendar.styles'\n\nconst Calendar = ({\n    calendar,\n    month,\n    year,\n    handleCalendarBlockClick\n}) => {\n    const date = new Date()\n\n    date.setDate(1)\n    const lastDay = new Date(year, month + 1, 0).getDate()\n    const prevLastDay = new Date(year, month, 0).getDate()\n\n    const firstDayIndex = new Date(year, month, 0).getDay();\n    const lastDayIndex = new Date(year, month + 1, 0).getDay()\n\n    const nextDays = 7 - lastDayIndex\n\n    const { response, isLoading, refetch } = useFetchById('api/booking/calendars', calendar, !calendar)\n    const [prevDays, setPrevDays] = useState([])\n    const [currentMonthDays, setCurrentMonthDays] = useState([])\n    const [nextMonthDays, setMonthNextDays] = useState([])\n\n    useEffect(() => {\n        refetch()\n    }, [month])\n\n    useEffect(() => {\n        if (calendar) {\n            refetch()\n        }\n    }, [calendar])\n\n    useEffect(() => {\n        if (!isLoading) {\n            if (response?.calendar) {\n                const prevDaysArr = getPreviousMonthDays(firstDayIndex)\n                const arr = getCurrentMonthDays(lastDay)\n                const nextDaysArr = getNextMonthDays(nextDays)\n                const checkedArr = getBooking(arr, response.calendar, month, year)\n\n                setPrevDays(prevDaysArr)\n                setCurrentMonthDays(checkedArr)\n                setMonthNextDays(nextDaysArr)\n            }\n        }\n    }, [isLoading])\n\n    useEffect(() => {\n        console.log(\"UNMOUNT WEEK CALENDAR\")\n\n        return () => {\n            setPrevDays([])\n            setCurrentMonthDays([])\n            setMonthNextDays([])\n        }\n    }, [])\n\n    return (\n        <Container>\n\n            {dayNames.map((name, idx) => (\n                <HeaderBlock key={idx}>\n                    {name}\n                </HeaderBlock>\n            ))}\n\n            {prevDays.map((value, idx) => (\n                <Dayblock faded={true} key={idx}>\n                    <p>\n                    </p>\n                    <p>\n                        {prevLastDay - idx}\n                    </p>\n                </Dayblock>\n            ))}\n\n            {currentMonthDays.map((data, idx) => {\n                const { dayNumber, bookings } = data\n                return (\n                    <Dayblock key={idx} onClick={() => handleCalendarBlockClick(data)}>\n                        <p>\n                            {bookings && <span>\n                                {bookings.length}\n                            </span>}\n                        </p>\n                        <p>\n                            {dayNumber}\n                        </p>\n                    </Dayblock>\n                )\n            })}\n            {nextMonthDays.map((value, idx) => (\n                <Dayblock faded={true} key={idx}>\n                    <p>\n                    </p>\n                    <p>\n                        {idx + 1}\n                    </p>\n                </Dayblock>\n            ))}\n        </Container>\n    )\n}\n\nexport default Calendar\n","/imooptik-frontend/src/context/week-calendar/week-calendar.context.jsx",["785","786","787","788","789"],"import React, { createContext, useState, useEffect, useContext } from 'react'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { useFetchById } from '../../hooks/useFetch'\nimport {\n    getHourTime,\n    checkBookings,\n    getTimeline\n} from '../../utils/week-calendar.utils'\n\nexport const WeekCalendarContext = createContext({\n    timeline: null,\n    getDayData: () => { },\n    refetchWeekCalendar: () => { },\n    cancelUserBooking: () => { },\n    fillDayData: () => { }\n})\n\nconst WeekCalendarProvider = ({ children, calendar, month, year }) => {\n    const { response, isLoading, refetch } = useFetchById('api/booking/calendars', calendar, !calendar)\n    const { closeModal, setIsLoading, setShowModal, getMessage } = useContext(LoadingModalContext)\n    const { token } = useContext(AuthContext)\n    const [numberOfHours, setNumberOfHours] = useState(0)\n    const [timeline, setTimeline] = useState(null)\n\n    const fillDayData = (calendarDaysArr, calendarObj) => {\n        console.log(calendarObj)\n        console.log(calendarDaysArr)\n\n    }\n\n    const getDayData = (dayNumber, dayIdx, calendar) => {\n        if (!calendar) return\n        const hourblock = [...Array(numberOfHours)].map((value, idx) => {\n            const splitedStartTime = calendar.startTimes[dayIdx]?.split(\"/\").map(value => Number(value))\n            const splitedEndTime = calendar.endTimes[dayIdx]?.split(\"/\").map(value => Number(value))\n            const time = getHourTime(idx, calendar.interval)\n            const splitedTime = time.split('/').map(value => Number(value))\n            if (splitedStartTime[0] > splitedTime[0]) return\n            if (splitedEndTime[0] < splitedTime[0]) return\n            if (calendar.startTimes[dayIdx] === 'X') return\n            if (splitedEndTime[0] === splitedTime[0] && !(splitedEndTime[1] === splitedTime[1]) && splitedTime[1] === 30) return\n\n            return ({\n                id: idx,\n                time: time,\n                userBookings: checkBookings(calendar, idx, dayNumber, month, year)\n            })\n        }).filter(item => item !== undefined)\n\n        return hourblock\n    }\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const cancelUserBooking = async (userBookingId, refetchCalendar, setShowBookingDetails) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            // body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/booking/userBookings/${userBookingId}/cancel`, requestOptions)\n            const data = await response.json()\n\n            console.log(refetchCalendar)\n\n            if (data.userBooking) {\n                closeModal()\n                setShowBookingDetails()\n                setTimeout(() => {\n                    refetchCalendar()\n                }, 200);\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n        if (response.calendar.interval === 30) setNumberOfHours(48)\n        if (response.calendar.interval === 60) setNumberOfHours(24)\n        const timelineArr = getTimeline(response.calendar.startTimes, response.calendar.endTimes, response.calendar.interval)\n        setTimeline(timelineArr)\n    }, [isLoading])\n\n    return (\n        <WeekCalendarContext.Provider\n            value={{\n                timeline,\n                getDayData,\n                refetchWeekCalendar: refetch,\n                cancelUserBooking,\n                fillDayData\n            }}\n        >\n            {children}\n        </WeekCalendarContext.Provider>\n    )\n}\n\nexport default WeekCalendarProvider","/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.component.jsx",["790"],"import React, { useState, useEffect, useContext } from 'react'\nimport { OrderContext } from '../../../../context/order/order.context'\n\nimport { useFetchByQuery } from '../../../../hooks/useFetch'\n\nimport BackButton from '../../../../components/custom-back-button/custom-back-button.component'\nimport CartLensesRow from '../../../../components/order-cart-lenses-row/order-cart-lenses-row.component'\nimport CustomInput from '../../../../components/custom-input/custom-input.component'\n\nimport {\n    LensesTableContainer,\n    LensesTableHead,\n    LensesTableRow,\n    LensesImg,\n    SelectLensesContainer,\n    CartContainer,\n    CartParagraph,\n    CartTable,\n    CartTableHead,\n    NextButton,\n    TableCol,\n    ButtonOptions,\n    HeaderContainer,\n    SearchButton,\n    SearchContainer,\n    HeadingContainer,\n    UnselectButton\n} from './select-lenses.styles'\n\nconst SelectLensesComponent = ({ back, next }) => {\n    const {\n        cart,\n        addLenses,\n        createCombinedProducts,\n        selectedProduct,\n        selectProduct\n    } = useContext(OrderContext)\n\n    const [searchQuery, setSearchQuery] = useState(\"\")\n\n    const [lensesItems, setLensesItems] = useState([])\n    const [query, setQuery] = useState({\n        limit: 9,\n        skip: 0\n    })\n    const { response, isLoading, refetch } = useFetchByQuery(\"api/admin/lenses/filter\", query)\n\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        setQuery({\n            ...query,\n            query: searchQuery\n        })\n        refetch()\n    }\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== \"\") {\n            if (e.key === 'Enter') {\n                setQuery({\n                    ...query,\n                    query: searchQuery\n                })\n                refetch()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n        console.log(\"UPDATE LENSES\")\n\n        setLensesItems(response.lenses)\n    }, [isLoading])\n\n    console.log(cart)\n\n    return (\n        <div>\n            <BackButton onClick={back} />\n            <HeaderContainer>\n                <SearchContainer>\n                    <h3>Vyhľadať produkt</h3>\n                    <div>\n                        <CustomInput\n                            label='Vyhladať šošovky'\n                            value={searchQuery}\n                            handleChange={(e) => setSearchQuery(e.target.value)}\n                            onKeyPress={handleSearchOnEnter}\n                        />\n                    </div>\n                    <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n                </SearchContainer>\n                <CartContainer>\n                    <HeadingContainer>\n                        <h3>Vybraté položky</h3>\n                        {selectedProduct !== null && <UnselectButton onClick={() => selectProduct(null)}>Odznačiť</UnselectButton>}\n                    </HeadingContainer>\n                    <CartTableHead>\n                        <TableCol>#</TableCol>\n                        <TableCol>Produkt</TableCol>\n                        <TableCol>Šosovky</TableCol>\n                        <TableCol>Cena</TableCol>\n                        <TableCol>Ks</TableCol>\n                        <TableCol>Zľava v %</TableCol>\n                        {/* <TableCol>Možnosti</TableCol> */}\n                    </CartTableHead>\n                    <CartTable>\n                        {cart.map((item, idx) => {\n                            if (item.product.type === 3 || item.product.type === 4 || item.product.type === 5 || item.product.type === 6) return false\n                            return (\n                                <CartLensesRow\n                                    key={idx}\n                                    idx={idx}\n                                    item={item}\n                                />\n                            )\n                        })}\n\n                        {cart.length === 0 && <CartParagraph>Nie sú vybrané žiadné produkty</CartParagraph>}\n                    </CartTable>\n                    <ButtonOptions>\n                        <NextButton onClick={createCombinedProducts}>\n                            Dokončiť objednávku\n                        </NextButton>\n                    </ButtonOptions>\n                </CartContainer>\n            </HeaderContainer>\n\n            <SelectLensesContainer>\n                <LensesTableContainer>\n                    <LensesTableHead>\n                        <TableCol>eanKód</TableCol>\n                        <TableCol>Obrázok</TableCol>\n                        <TableCol>Názov</TableCol>\n                        <TableCol>Dioptrie</TableCol>\n                        <TableCol>Cylinder</TableCol>\n                        <TableCol>Cena</TableCol>\n                    </LensesTableHead>\n\n                    {lensesItems.map((lenses, idx) => (\n                        <LensesTableRow key={idx} onClick={() => addLenses(lenses)}>\n                            <TableCol>{lenses.eanCode}</TableCol>\n                            <TableCol>\n                                <LensesImg>\n                                    {/* <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${lenses.image.imagePath}`} alt={lenses.image.alt} /> */}\n                                </LensesImg>\n                            </TableCol>\n                            <TableCol>{lenses.name}</TableCol>\n                            <TableCol>\n                                {lenses.dioptersRange && <p>{`od ${lenses.dioptersRange[0]} do ${lenses.dioptersRange[1]}`}</p>}\n                            </TableCol>\n                            <TableCol>\n                                {lenses.cylinderRange && <p>{`od ${lenses.cylinderRange[0]} do ${lenses.cylinderRange[1]}`}</p>}\n                            </TableCol>\n                            <TableCol>{(lenses.price / 100).toFixed(2)}€</TableCol>\n                        </LensesTableRow>\n                    ))}\n                    <LensesTableRow onClick={() => addLenses(null)}>\n                        <TableCol>-</TableCol>\n                        <TableCol>\n                            <LensesImg>\n                                {/* <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${lenses.image.imagePath}`} alt={lenses.image.alt} /> */}\n                            </LensesImg>\n                        </TableCol>\n                        <TableCol>Žiadné sklá</TableCol>\n                        <TableCol>-</TableCol>\n                        <TableCol>-</TableCol>\n                        <TableCol>0€</TableCol>\n                    </LensesTableRow>\n                </LensesTableContainer>\n            </SelectLensesContainer>\n        </div >\n    )\n}\n\nexport default SelectLensesComponent\n","/imooptik-frontend/src/sections/order/steps/4-summary/summary.component.jsx",[],"/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.component.jsx",["791"],"/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.component.jsx",["792","793"],"import React, { useState, useEffect, useContext } from 'react'\nimport { UserContext } from '../../../../context/user/user.context'\n\nimport CustomInput from '../../../../components/custom-input/custom-input.component'\n\nimport {\n    SearchContainer,\n    TableContainer,\n    UserTableHead,\n    UserTableRow,\n    TableCol,\n    SearchButton\n} from './select-user.styles'\n\nconst SelectUserComponent = ({ next, addToOrder }) => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const [userItems, setUserItems] = useState([])\n\n    const {\n        users,\n        getFilteredUsers,\n        getUserByQuery\n    } = useContext(UserContext)\n\n    const handleClick = (user) => {\n        addToOrder({\n            name: \"user\",\n            value: user\n        })\n        next()\n    }\n\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== '') {\n            if (e.key === 'Enter') {\n                getUserByQuery({\n                    query: searchQuery\n                })\n            }\n        }\n    }\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        getUserByQuery({\n            query: searchQuery\n        })\n    }\n\n    useEffect(() => {\n        if (!users) {\n            getFilteredUsers({\n                limit: 5\n            })\n        }\n        if (users) {\n            setUserItems(users)\n        }\n    }, [users])\n\n    useEffect(() => {\n        if (users) {\n            if (searchQuery === '') {\n                getFilteredUsers({\n                    limit: 5\n                })\n                setUserItems(users)\n            }\n        }\n    }, [searchQuery])\n\n    useEffect(() => {\n        return () => {\n            setSearchQuery('')\n            setUserItems([])\n        }\n    }, [])\n\n    return (\n        <div>\n            <SearchContainer>\n                <h3>Vyhľadať zákaznika</h3>\n                <div>\n                    <CustomInput\n                        label={\"Meno, priezvisko, email alebo tel. číslo\"}\n                        value={searchQuery}\n                        onChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n            </SearchContainer>\n\n            <TableContainer>\n                <UserTableHead>\n                    <TableCol>Meno a priezvisko</TableCol>\n                    <TableCol>Email</TableCol>\n                    <TableCol>Možnosti</TableCol>\n                </UserTableHead>\n                {userItems.map((user, idx) => (\n                    <UserTableRow key={idx} onClick={() => handleClick(user)}>\n                        <TableCol>{user.name}</TableCol>\n                        <TableCol>{user.email}</TableCol>\n                        <TableCol>{user.phone}</TableCol>\n                    </UserTableRow>\n                ))}\n            </TableContainer>\n\n        </div>\n    )\n}\n\nexport default SelectUserComponent\n","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx",[],"/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.styles.jsx",[],"/imooptik-frontend/src/hooks/useOutsideAlerter.jsx",["794"],"import React, { useRef, useEffect } from \"react\";\n\nexport const useOutsideHandler = (ref, action) => {\n    useEffect(() => {\n        const handleClickOutside = e => {\n            if (ref.current && !ref.current.contains(e.target)) {\n                action()\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n\n    }, [ref])\n}\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(ref) {\n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                alert(\"You clicked outside of me!\");\n            }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [ref]);\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nfunction OutsideAlerter(props) {\n    const wrapperRef = useRef(null);\n    useOutsideAlerter(wrapperRef);\n\n    return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport default OutsideAlerter;\n","/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx",[],"/imooptik-frontend/src/components/list-arrows/list-arrows.styles.jsx",[],"/imooptik-frontend/src/components/product-service-form/product-service-form.styles.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx",[],"/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.styles.jsx",[],"/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx",[],"/imooptik-frontend/src/components/booking-appoinments/booking-appoinment.styles.jsx",[],"/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.styles.jsx",[],"/imooptik-frontend/src/components/user-form/user.form-styles.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx",[],"/imooptik-frontend/src/components/custom-select/custom-select.styles.jsx",[],"/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.styles.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx",[],"/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx",["795"],"import React, { useState, useContext } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport ReactDOM from 'react-dom'\n\nimport Popup from '../popup/pop-up.component'\n\nimport { retailNames } from '../../context/warehouse/warehouse.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    CustomSelect,\n    SubmitButton\n} from './order-deligate-modal.styles'\n\n\nconst OrderDeligateModal = ({ close, premise, id, refetch }) => {\n    const [value, setValue] = useState(premise)\n    const { token } = useContext(AuthContext)\n    const {\n        getMessage,\n        message,\n        isLoading,\n        setIsLoading,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const handleClick = async () => {\n        setIsLoading(true)\n        const myHeaders = new Headers();\n        myHeaders.append(\"auth-token\", token);\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const raw = JSON.stringify({\n            premises: Number(value),\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders/${id}/delegate`, requestOptions)\n            console.log(response)\n            if (response.status === 400) {\n                getMessage(\"Faktúra musí byt zaplatená, aby mohla byť priradená prevádzke\")\n            }\n            if (response.status === 401) {\n                getMessage(\"Musíš byt vedúci, aby si mohol manipulovať s priradovanim\")\n            }\n            const data = await response.json()\n\n            if (data.order) {\n                refetch()\n                setIsLoading(false)\n                close()\n                return\n            }\n\n            // getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            setIsLoading(false)\n        }\n    }\n\n    if (isLoading || message) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Priradiť k prevádzke</h3>\n                <CustomSelect value={value} onChange={(e) => setValue(e.target.value)}>\n                    <option value={0}>Nezadané</option>\n                    {retailNames.map((name, idx) => {\n                        if (idx === 4) return\n                        return (\n                            <option key={idx} value={idx + 1}>{name}</option>\n                        )\n                    })}\n                </CustomSelect>\n                <SubmitButton onClick={handleClick}>Priradiť</SubmitButton>\n            </Modal>\n        </ModalContainer >\n    ), document.getElementById('portal'))\n}\n\nexport default OrderDeligateModal\n","/imooptik-frontend/src/utils/week-calendar.utils.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx",[],"/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.styles.jsx",[],"/imooptik-frontend/src/components/booking-appoinment/booking-appoinment.component.jsx",[],"/imooptik-frontend/src/components/modal-booking/modal-booking.component.jsx",["796"],"import React, { useState, useContext, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { BookingContext } from '../../context/booking/booking.context'\n\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\nimport { useFetchById } from '../../hooks/useFetch'\nimport {\n    formatBookingObj\n} from '../../utils/calendar.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SubmitButton,\n    InputContainer,\n    ModalHeader,\n    CustomSelect\n} from './modal-booking.styles'\n\nconst BookingModal = ({ close, calendarId, refetch, selectedBooking }) => {\n    const { createBooking, updateBooking } = useContext(BookingContext)\n    const { response, isLoading } = useFetchById(\"api/booking/bookings\", selectedBooking, !selectedBooking)\n\n    const [booking, setBooking] = useState({})\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleBookingChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete booking[name]\n            setBooking({\n                ...booking\n            })\n            return\n        }\n\n        setBooking(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const handleSubmit = () => {\n        if (!booking?.name) return\n\n        if (isUpdating) {\n            let bookingToUpdate = formatBookingObj(booking)\n\n            console.log(\"BOOKING BEFORE UPDATE\")\n            console.log(bookingToUpdate)\n\n            updateBooking(bookingToUpdate, booking._id)\n        } else {\n            let bookingToAdd = {\n                ...booking,\n                calendar: calendarId\n            }\n\n            console.log(\"BOOKING BEFORE CREATE\")\n            console.log(bookingToAdd)\n            createBooking(bookingToAdd)\n        }\n\n        refetch()\n        close()\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n        if (response?.booking) {\n            setIsUpdating(true)\n            setBooking(response?.booking)\n        }\n    }, [selectedBooking, isLoading])\n\n    useEffect(() => {\n        return () => {\n            setIsUpdating(false)\n            setBooking({})\n        }\n    }, [])\n\n    console.log(booking)\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <ModalHeader>\n                    {!isUpdating && <h2>Nové vyšetrenie</h2>}\n                    {isUpdating && <h2>Upraviť vyšetrenie</h2>}\n                    <div>\n                        <CustomCheckbox\n                            label=\"Aktivné\"\n                            isActive={booking?.active || false}\n                            name='active'\n                            handleClick={() => handleBookingChange({\n                                target: {\n                                    name: 'active',\n                                    value: booking?.active ? !booking?.active : true\n                                }\n                            })}\n                        />\n                    </div>\n                </ModalHeader>\n                <InputContainer>\n                    <CustomInput\n                        label=\"Názov vyšetrenia*\"\n                        name=\"name\"\n                        value={booking?.name || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                <InputContainer>\n                    <CustomInput\n                        label=\"Cena\"\n                        name=\"price\"\n                        value={booking?.price || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                <InputContainer>\n                    <CustomInput\n                        label=\"Čas\"\n                        name=\"time\"\n                        value={booking?.time || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                <InputContainer>\n                    <CustomSelect\n                        label=\"Farba\"\n                        type='text'\n                        name='color'\n                        value={booking?.color || \"\"}\n                        onChange={handleBookingChange}\n                    >\n                        <option value='DD4C4C'>Červená</option>\n                        <option value='ebac01'>Žltá</option>\n                        <option value='32AA5F'>Zelená</option>\n                    </CustomSelect>\n                </InputContainer>\n                <InputContainer>\n                    <CustomTextarea\n                        label=\"Popis\"\n                        rows='5'\n                        name=\"description\"\n                        value={booking?.description || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                {!isUpdating && <SubmitButton onClick={handleSubmit}>Pridať</SubmitButton>}\n                {isUpdating && <SubmitButton onClick={handleSubmit}>Uložiť</SubmitButton>}\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById(\"portal\"))\n}\n\nexport default BookingModal\n","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx",[],"/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx",["797","798","799","800","801"],"import React, { useEffect } from 'react'\n\nimport {\n    TableContainer,\n    TitleCol,\n    Col,\n    OsContainer\n} from './parameters-table.styles'\n\nconst ParametersTable = ({ parameters, handleChange, disabledInputs = false }) => {\n    const checkParameters = (parameter, idx) => {\n        if (parameter.length === 0) {\n            return \"\"\n        }\n        if (parameter[idx] === 1001) {\n            return \"\"\n        }\n\n        return parameter[idx]\n    }\n\n    console.log((Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))).toFixed(2) === 0)\n\n    useEffect(() => {\n        if (handleChange) {\n            if (parameters.diopters && parameters.addition) {\n                handleChange({\n                    target: {\n                        name: \"diopters\",\n                        value: (Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))) === 0 ? \"\" : (Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))).toFixed(2)\n                    }\n                }, 2)\n                handleChange({\n                    target: {\n                        name: \"diopters\",\n                        value: (Number(checkParameters(parameters.diopters, 1)) + Number(checkParameters(parameters.addition, 1))) === 0 ? \"\" : (Number(checkParameters(parameters.diopters, 1)) + Number(checkParameters(parameters.addition, 1))).toFixed(2)\n                    }\n                }, 3)\n            }\n        }\n    }, [parameters.diopters[0], parameters.addition[0], parameters.diopters[1], parameters.addition[1]])\n\n    return (\n        <TableContainer>\n            <TitleCol>\n                <div>{\" \"}</div>\n                <div>\n                    <p>P</p>\n                </div>\n                <div>\n                    <p>Ľ</p>\n                </div>\n                <div>\n                    <p>P</p>\n                </div>\n                <div>\n                    <p>Ľ</p>\n                </div>\n            </TitleCol>\n\n\n            <Col>\n                <div>sph</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.diopters, idx)}\n                                name=\"diopters\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>cyl</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.cylinder, idx)}\n                                name=\"cylinder\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>ax</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <OsContainer key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.cylinderAxes, idx)}\n                                name=\"cylinderAxes\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </OsContainer>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>PD</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.distance, idx)}\n                                name=\"distance\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>prizma</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.prism, idx)}\n                                name=\"prism\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>basis</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.basis, idx)}\n                                name=\"basis\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>addicia</div>\n\n                {[...Array(2)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.addition, idx)}\n                                name=\"addition\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n\n\n        </TableContainer>\n    )\n}\n\nexport default ParametersTable\n","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx",["802"],"/imooptik-frontend/src/components/examinations-overview/examinations-overview.component.jsx",["803","804","805","806","807"],"/imooptik-frontend/src/sections/order/steps/4-summary/summary.styles.jsx",[],"/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.styles.jsx",[],"/imooptik-frontend/src/utils/orders.utils.jsx",[],"/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.styles.jsx",[],"/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.component.jsx",["808","809"],"import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    formatDate,\n    formatCalendarStartTime,\n    formatCalendarEndTime\n} from '../../utils/calendar.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SubmitButton,\n    Navbar,\n    UserTable,\n    TableHead,\n    Tablebody,\n    TableCol,\n    SearchTab,\n    CustomSelect,\n    DateContainer\n} from './modal-user-booking.styles'\n\nconst UserBookingModal = ({ refetchWeekCalendar, close, day, calendar, refetchCalendar, createUserBooking }) => {\n\n    const [query, setQuery] = useState(null)\n    const [activeTab, setActiveTab] = useState(0)\n    const [userBooking, setUserBooking] = useState({})\n    const [bookingDate, setBookingDate] = useState({\n        date: \"\",\n        hour: \"\",\n        min: 0\n    })\n\n    const [startTime, setStartTime] = useState(null)\n    const [endTime, setEndTime] = useState(null)\n\n\n\n    const { refetch, response } = useFetchByQuery('api/admin/users/filter', query, !query)\n\n    const handleSearch = () => {\n        if (!query) return\n        refetch()\n    }\n\n    const handleSearchOnEnter = (e) => {\n        if (query !== null) {\n            if (e.key === 'Enter') {\n                refetch()\n            }\n        }\n    }\n\n    const handleUserBookingChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete userBooking[name]\n            setUserBooking({ ...userBooking })\n            return\n        }\n\n        setUserBooking(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const selectUser = (userObj) => {\n        setUserBooking(prevValue => ({\n            ...prevValue,\n            ...userObj\n        }))\n        setActiveTab(0)\n        setQuery(null)\n    }\n\n    const handleChangeDate = e => {\n        const { name, value } = e.target\n\n        setBookingDate(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const handleSubmit = () => {\n        // if (!userBooking?.name) return\n        // if (!userBooking?.email) return\n        // if (!userBooking?.phone) return\n        // if (!userBooking?.booking) return\n\n        let bookingToAdd = {\n            ...userBooking,\n            dueTime: formatDate(bookingDate),\n            values: {}\n        }\n\n        console.log(\"USER BOOKING BEFORE SEND\")\n        console.log(bookingToAdd)\n\n\n        createUserBooking(bookingToAdd, refetchCalendar, close, refetchWeekCalendar)\n        // refetchCalendar()\n        // close()\n    }\n\n    useEffect(() => {\n        if (day) {\n            const { time, dayNumber, month, year } = day\n            console.log(\"DAY DATA\")\n            console.log(day)\n\n            setStartTime(formatCalendarStartTime(calendar, day))\n            setEndTime(formatCalendarEndTime(calendar, day))\n            // const formatedDate = formatDate(`${dayNumber}-${month}-${year}`, time)\n            setBookingDate({\n                date: `${year}-${month < 9 ? `0${month + 1}` : (month + 1)}-${dayNumber < 10 ? `0${dayNumber}` : dayNumber}`,\n                hour: Number(time?.split(\"/\")[0]),\n                min: Number(time?.split(\"/\")[1])\n            })\n        }\n    }, [day])\n\n    useEffect(() => {\n        return () => {\n            setUserBooking({})\n            setQuery(null)\n            setActiveTab(0)\n        }\n    }, [])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>Objednať zákazníka</h2>\n\n                <Navbar\n                    items={optionTabs}\n                    activeIndex={activeTab}\n                    setActiveIndex={setActiveTab}\n                />\n\n                {activeTab === 1 ? (\n                    <SearchTab>\n                        <CustomInput\n                            label='Meno, priezvisko, e-mail alebo tel. číslo'\n                            name='query'\n                            value={query ? query?.query : \"\"}\n                            handleChange={e => setQuery({\n                                limit: 10,\n                                query: e.target.value\n                            })}\n                            onKeyPress={handleSearchOnEnter}\n                        />\n\n                        <SubmitButton onClick={handleSearch}>Hľadať</SubmitButton>\n\n\n                        <UserTable>\n                            <TableHead>\n                                <TableCol>Meno</TableCol>\n                                <TableCol>E-mail</TableCol>\n                                <TableCol>Tel. číslo</TableCol>\n                            </TableHead>\n                            {response?.users ? response?.users?.map(({ name, email, phone }, idx) => (\n                                <Tablebody key={idx} onClick={() => selectUser({ name, email, phone })}>\n                                    <TableCol>{name}</TableCol>\n                                    <TableCol>{email}</TableCol>\n                                    <TableCol>{phone}</TableCol>\n                                </Tablebody>\n                            )) : (\n                                    <div>\n                                        <p>Žiaden výsledok</p>\n                                    </div>\n                                )}\n                        </UserTable>\n                    </SearchTab>\n                ) : (\n                        <React.Fragment>\n                            <div>\n                                <h3>Dátum vyšetrenia</h3>\n                                <DateContainer>\n                                    <CustomInput\n                                        label=''\n                                        type='date'\n                                        name='date'\n                                        handleChange={handleChangeDate}\n                                        value={bookingDate?.date}\n\n                                    />\n                                    <div>\n                                        <CustomInput\n                                            label='Čas'\n                                            type='number'\n                                            name='hour'\n                                            value={bookingDate?.hour?.toString()}\n                                            min={startTime?.split(\":\")[0]}\n                                            max={endTime?.split(\":\")[0]}\n                                            handleChange={handleChangeDate}\n                                            step=\"1\"\n                                        />\n                                    </div>\n                                    <p>:</p>\n                                    <div>\n                                        <CustomSelect\n                                            name='min'\n                                            value={bookingDate?.min?.toString()}\n                                            onChange={handleChangeDate}\n                                        >\n                                            <option value={0}>00</option>\n                                            {calendar?.interval === 30 && <option value={30}>30</option>}\n                                        </CustomSelect>\n                                    </div>\n                                </DateContainer>\n                            </div>\n                            <div>\n                                <CustomInput\n                                    label='Meno*'\n                                    name='name'\n                                    value={userBooking?.name || \"\"}\n                                    handleChange={handleUserBookingChange}\n                                />\n                            </div>\n                            <div>\n                                <CustomInput\n                                    label='E-mail*'\n                                    name='email'\n                                    value={userBooking?.email || \"\"}\n                                    handleChange={handleUserBookingChange}\n                                />\n                            </div>\n                            <div>\n                                <CustomInput\n                                    label='Tel. číslo*'\n                                    name='phone'\n                                    value={userBooking?.phone || \"\"}\n                                    handleChange={handleUserBookingChange}\n                                />\n                            </div>\n\n                            <div>\n                                <CustomTextarea\n                                    label='Poznámka'\n                                    name='note'\n                                    rows=\"5\"\n                                    value={userBooking?.note || \"\"}\n                                    handleChange={handleUserBookingChange}\n                                />\n                            </div>\n\n                            <div>\n                                <h3>Vyšetrenie</h3>\n                                <CustomSelect\n                                    name='booking'\n                                    value={userBooking?.booking || \"\"}\n                                    onChange={handleUserBookingChange}\n                                >\n                                    <option value={''}>Nezvolené</option>\n                                    {calendar?.bookings.map((booking, idx) => {\n                                        if (booking.active === false) return\n                                        return (\n                                            <option key={idx} value={booking._id}>{booking.name}</option>\n                                        )\n                                    })}\n                                </CustomSelect>\n                            </div>\n                        </React.Fragment>\n                    )}\n\n                {activeTab === 0 && <SubmitButton onClick={handleSubmit}>Vytvoriť</SubmitButton>}\n            </Modal>\n        </ModalContainer >\n    ), document.getElementById('portal'))\n}\n\nexport default UserBookingModal\n\nconst optionTabs = [\n    {\n        id: 0,\n        name: \"Nový zákazník\",\n    },\n    {\n        id: 1,\n        name: \"Vyhladať zákazníka\",\n    },\n]","/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.styles.jsx",[],"/imooptik-frontend/src/components/calendar-booked-day/calendar-booked-day.component.jsx",["810","811","812"],"import React, { useState, useEffect } from 'react'\nimport stringSimilarity from \"string-similarity\"\n\n\n// import Spinner from '../spinner/spinner.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    BookedDayContainer\n} from './calendar-booked-day.styles'\n\nconst CalendarBookedDay = ({ dayData, calendarId, time, userBookings, open }) => {\n    const [isHalfHour, setIsHalfHour] = useState(false)\n    const { response, isLoading, refetch } = useFetchByQuery(`api/booking/calendars/${calendarId}/dayInfo`, {\n        date: dayData.bookingDate\n    }, !dayData?.bookingDate)\n    const [appointment, setAppointment] = useState(null)\n    const [isValidDueTime, setIsValiDueTime] = useState(false)\n    const [isBelongToAnother, setIsBelongToAnother] = useState(false)\n\n    useEffect(() => {\n        if (isLoading) return\n        const bookingsDueTime = response?.userBookings?.filter(booking => !booking?.cancelled).map(booking => booking?.dueTime)\n\n        // console.log(bookingsDueTime)\n        if (bookingsDueTime?.length > 0) {\n            const matches = stringSimilarity.findBestMatch(userBookings?.dueDate, bookingsDueTime);\n\n            const exactBooking = response?.userBookings?.find(booking => booking?.dueTime === userBookings?.dueDate)\n            const todayBooking = response?.userBookings?.find(booking => booking?.dueTime === matches?.bestMatch?.target)\n\n            if (userBookings?.dueDate === exactBooking?.dueTime) {\n                setIsValiDueTime(true)\n            } else if (matches?.bestMatch?.target === todayBooking?.dueTime) {\n                setIsBelongToAnother(true)\n            }\n\n            setAppointment(exactBooking)\n\n        }\n\n    }, [isLoading])\n\n    useEffect(() => {\n        if (!dayData?.bookingDate) return\n        refetch()\n    }, [dayData?.bookingDate])\n\n    useEffect(() => {\n        return () => {\n            setIsHalfHour(false)\n            setIsValiDueTime(false)\n        }\n    }, [])\n\n    return (\n        <React.Fragment>\n            <BookedDayContainer onClick={isValidDueTime ? open : () => { }} color={appointment?.booking?.color ? `#${appointment?.booking?.color}` : `var(--appointment-container-background-color)`} isHalfHour={isHalfHour}>\n                {/* <BookedDayContainer onClick={() => console.log(appointment)} color={appointment?.booking?.color ? `#${appointment?.booking?.color}` : `#${response?.userBookings[0]?.booking?.color}`} isHalfHour={isHalfHour}> */}\n                {isValidDueTime && <div>\n                    <h4>{appointment && appointment?.booking?.name}</h4>\n                    <h5>{time}</h5>\n                </div>}\n                {/* {(isBelongToAnother && !isValidDueTime) && <div>\n                    <h4>Test</h4>\n                </div>} */}\n\n            </BookedDayContainer>\n        </React.Fragment>\n    )\n}\n\nexport default CalendarBookedDay\n","/imooptik-frontend/src/components/modal-userbookings-details/modal-userbookings-details.component.jsx",["813"],"import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Spinner from '../spinner/spinner.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\nimport { retailNames } from '../../utils/warehouse.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    GridContainer,\n    BlockContainer,\n    Header,\n    CancelButton,\n    Container\n} from './modal-userbookings-details.styles'\n\nconst UserbookingDetailsModal = ({ close, userBooking, calendarId, cancelUserBooking }) => {\n    const { response, isLoading } = useFetchByQuery(`api/booking/calendars/${calendarId}/dayInfo`, {\n        date: userBooking?.userBookings?.dueDate.split(\":\")[1]\n    }, !userBooking)\n\n    const [booking, setBooking] = useState(null)\n\n    useEffect(() => {\n        if (isLoading) return\n        if (!response) return\n\n        const newBooking = response.userBookings.find(booking => booking.dueTime === userBooking.userBookings.dueDate)\n        console.log(newBooking)\n        setBooking(newBooking)\n\n    }, [isLoading])\n\n    console.log(booking)\n\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                {!booking && <Spinner />}\n                <h2>{booking?.booking?.name}</h2>\n\n                <Header>\n                    <h3>Informácie:</h3>\n                    <CancelButton onClick={() => cancelUserBooking(booking._id)}>Zrušiť rezerváciu</CancelButton>\n                </Header>\n                <GridContainer>\n                    <BlockContainer>\n                        <h3>Meno a priezvisko</h3>\n                        <p>{booking?.name}</p>\n                    </BlockContainer>\n                    <BlockContainer>\n                        <h3>Prevadzka</h3>\n                        <p>{retailNames[booking?.booking?.premises]}</p>\n                    </BlockContainer>\n                    <BlockContainer>\n                        <h3>Tel. číslo</h3>\n                        <p>{booking?.phone}</p>\n                    </BlockContainer>\n                    <BlockContainer>\n                        <h3>E-mail</h3>\n                        <p>{booking?.email}</p>\n                    </BlockContainer>\n                    <BlockContainer>\n                        <h3>Dátum</h3>\n                        <p>{booking?.dueTime}</p>\n                    </BlockContainer>\n                    <BlockContainer>\n                        <h3>Zrušené</h3>\n                        <p>{booking?.cancelled ? \"Ano\" : \"Nie\"}</p>\n                    </BlockContainer>\n                </GridContainer>\n\n                <Container>\n                    <BlockContainer>\n                        <h3>Poznámka</h3>\n                        {booking?.note ? (\n                            <p>{booking?.note}</p>\n                        ) : (\n                                <p>Žiadná poznámka</p>\n                            )}\n                    </BlockContainer>\n\n                    <BlockContainer>\n                        <h3>Popis</h3>\n                        <p>{booking?.booking?.description}</p>\n                    </BlockContainer>\n\n                </Container>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default UserbookingDetailsModal\n","/imooptik-frontend/src/components/order-summary-lenses-name/order-summary-lenses-name.component.jsx",[],"/imooptik-frontend/src/components/order-summary-product-name/order-summary-product-name.component.jsx",[],"/imooptik-frontend/src/components/order-cart-lenses-row/order-cart-lenses-row.component.jsx",[],"/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx",[],"/imooptik-frontend/src/components/modal-order-update-user/modal-order-update-user.component.jsx",["814","815","816"],"import React, { useContext, useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { UserContext } from '../../context/user/user.context'\n\nimport UserForm from '../user-form/user-form.component'\n\nimport {\n    CloseButton,\n    Modal,\n    ModalContainer,\n    UpdateButton\n} from './modal-order-update-user.styles'\n\nconst OrderUpdateUserModal = ({ close, userId, refetchUser, addUser }) => {\n    const { isAdmin, isOptometrist } = useContext(AuthContext)\n    const {\n        user,\n        isUpdating,\n        handleChange,\n        handleParameterChange,\n        handleCompanyChange,\n        getUser,\n        updateUser\n    } = useContext(UserContext)\n\n    const [userObj, setUserObj] = useState({})\n    const [hasChanges, setHasChanges] = useState(false)\n\n    const handleUserChange = (e) => {\n        setHasChanges(true)\n        const { name, value } = e.target\n\n        handleChange(e)\n\n\n        if (value === '') {\n            delete userObj[name]\n            // delete userObj.company[]\n            return\n        }\n\n        setUserObj({\n            ...userObj,\n            [name]: value\n        })\n    }\n\n    const handleLensesParameterChange = (e, idx) => {\n        setHasChanges(true)\n\n        const { name, value } = e.target\n        let arr = user.lenses[name]\n        arr[idx] = value\n\n\n        handleParameterChange(e, idx)\n        setUserObj({\n            ...userObj,\n            lenses: {\n                ...user.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleCompanyAddressChange = (e) => {\n        setHasChanges(true)\n\n        const { name, value } = e.target\n        handleCompanyChange(e)\n\n        if (value === '') {\n            delete userObj.company[name]\n            if (Object.keys(userObj.company).length === 0) {\n                delete userObj[\"company\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setUserObj({\n            ...userObj,\n            company: {\n                ...userObj.company,\n                [name]: value\n            }\n        })\n    }\n\n    const handleSubmit = (e, path) => {\n        e.preventDefault()\n        setHasChanges(false)\n\n        console.log(\"Update existing user\")\n        console.log(\"Update existing user\")\n        console.log(\"Update existing user\")\n        console.log(userObj)\n        if (userObj.fName || userObj.lName) {\n            delete userObj[\"fName\"]\n            delete userObj[\"lName\"]\n        } else if (!userObj.fName || !userObj.lName) {\n            delete userObj[\"name\"]\n        }\n        updateUser(userObj, user._id, \"isOrder\", refetchUser, close, addUser)\n    }\n\n    useEffect(() => {\n        setUserObj({\n            ...userObj,\n            name: user.fName + \" \" + user.lName\n        })\n    }, [userObj.fName, userObj.lName])\n\n    useEffect(() => {\n        if (userId) {\n            getUser(userId)\n        }\n    }, [userId])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <UserForm\n                    user={user}\n                    isAdmin={isAdmin}\n                    isUpdating={isUpdating}\n                    isOptometrist={isOptometrist}\n                    handleChange={handleUserChange}\n                    handleParameterChange={handleLensesParameterChange}\n                    handleCompanyChange={handleCompanyAddressChange}\n                    isOrder={true}\n                />\n\n                <UpdateButton onClick={handleSubmit}>Uložiť</UpdateButton>\n            </Modal>\n        </ModalContainer >\n    ), document.getElementById('portal'))\n}\n\nexport default OrderUpdateUserModal\n","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.component.jsx",["817"],"import React, { useState, useEffect } from 'react'\n\nimport {\n    formatPrice\n} from '../../utils/warehouse.utils'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    Modal,\n    AddButton,\n    CustomSelect,\n    OptionsCheckbox,\n    OverwriteAddressCheckbox,\n    DiscountCheckboxContainer\n} from './modal-finish-order.styles'\n\nconst FinishOrderModal = ({\n    order,\n    combinedProducts,\n    createOrder,\n    setHasChanged,\n    isUpdating,\n    updateOrder\n}) => {\n    const [orderDetail, setOrderDetails] = useState({\n        paymentType: \"cash\"\n    })\n    const [hasDeposit, setHasDeposit] = useState(false)\n    const [overwrite, setOverwrite] = useState(false)\n\n    const toggleDeposit = prevValue => {\n        if (prevValue) {\n            setHasDeposit(false)\n            if (orderDetail.paidAlready) {\n                delete orderDetail[\"paidAlready\"]\n                setOrderDetails({\n                    ...orderDetail\n                })\n            }\n        } else {\n            setHasDeposit(true)\n        }\n    }\n\n    const toggleOverwriteAddress = prevValue => {\n        if (prevValue) {\n            setOverwrite(false)\n            if (orderDetail.overwrite) {\n                delete orderDetail[\"overwrite\"]\n                setOrderDetails({\n                    ...orderDetail\n                })\n            }\n        } else {\n            setOverwrite(true)\n        }\n    }\n\n    const handleOrderDetailChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete orderDetail[name]\n            setOrderDetails({\n                ...orderDetail\n            })\n            return\n        }\n\n        setOrderDetails({\n            ...orderDetail,\n            [name]: value\n        })\n    }\n\n    const handleAddressOverwriteChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete orderDetail.overwrite[name]\n            setOrderDetails({\n                ...orderDetail\n            })\n            return\n        }\n\n        setOrderDetails({\n            ...orderDetail,\n            overwrite: {\n                ...orderDetail.overwrite,\n                [name]: value\n            }\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (isUpdating) {\n            let orderObj = {\n                ...orderDetail,\n            }\n            delete orderObj['paymentType']\n            delete orderObj['shouldDeliver']\n\n            setHasChanged(false)\n            updateOrder(orderObj, order.order._id)\n\n        } else {\n            let orderObj = {\n                ...orderDetail,\n                user: order.user._id,\n                combinedProducts: combinedProducts.map(product => product._id),\n                status: hasDeposit ? \"half-paid\" : \"paid\"\n            }\n\n            if (orderDetail.paidAlready) {\n                orderObj = {\n                    ...orderObj,\n                    paidAlready: formatPrice(orderDetail.paidAlready)\n                }\n            }\n\n            console.log(orderObj)\n            setHasChanged(false)\n            createOrder(orderObj)\n        }\n    }\n\n    useEffect(() => {\n        if (isUpdating) {\n            if (order?.order) {\n                handleOrderDetailChange({\n                    target: {\n                        name: 'shouldDeliver',\n                        value: order?.order?.shouldDeliver\n                    }\n                })\n                handleOrderDetailChange({\n                    target: {\n                        name: 'buyingAsCompany',\n                        value: order?.order?.buyingAsCompany\n                    }\n                })\n            }\n        }\n    }, [isUpdating, order])\n\n    useEffect(() => {\n        return () => {\n            setOrderDetails({\n                paymentType: \"cash\"\n            })\n            setHasDeposit(false)\n            setOverwrite(false)\n        }\n    }, [])\n\n    return (\n        <Modal>\n            <h2>{isUpdating ? \"Upraviť objednávku\" : 'Dokončeniť objednávky'}</h2>\n\n            {!isUpdating && <div>\n                <h4>Spôsob platby</h4>\n\n                <CustomSelect\n                    name='paymentType'\n                    value={orderDetail?.paymentType ?? \"cash\"}\n                    onChange={(e) => handleOrderDetailChange(e)}\n                >\n                    <option value={\"cash\"}>Hotovosť</option>\n                    <option value={\"card\"}>Karta</option>\n                    <option value={\"coupon\"}>Kupón</option>\n                </CustomSelect>\n\n                <DiscountCheckboxContainer>\n                    <input id=\"hasDeposit\" name='hasDeposit' type='checkbox' value={hasDeposit} onChange={() => toggleDeposit(hasDeposit)} />\n                    <label htmlFor='hasDeposit'>Pridať zálohu</label>\n                </DiscountCheckboxContainer>\n\n                {hasDeposit && (\n                    <CustomInput\n                        label=\"Zaplatená záloha\"\n                        name=\"paidAlready\"\n                        type='text'\n                        value={orderDetail?.paidAlready ?? \"\"}\n                        onChange={e => handleOrderDetailChange(e)}\n                    />\n                )}\n            </div>\n            }\n            <div>\n                <h4>Informácie o doručení</h4>\n                <OptionsCheckbox\n                    label={\"Doručiť na adresu\"}\n                    isActive={orderDetail?.shouldDeliver}\n                    handleClick={() => handleOrderDetailChange({\n                        target: {\n                            name: 'shouldDeliver',\n                            value: orderDetail?.shouldDeliver ? !orderDetail?.shouldDeliver : true\n                        }\n                    })}\n                />\n                <OptionsCheckbox\n                    label={\"Nákup na firmu\"}\n                    isActive={orderDetail?.buyingAsCompany}\n                    handleClick={() => handleOrderDetailChange({\n                        target: {\n                            name: 'buyingAsCompany',\n                            value: orderDetail?.buyingAsCompany ? !orderDetail?.buyingAsCompany : true\n                        }\n                    })}\n                />\n\n                {orderDetail?.shouldDeliver && (\n                    <div>\n                        <h4>Adresa</h4>\n                        <p>{order.user.psc}</p>\n                        <p>{order.user.address}</p>\n                        <p>{order.user.city}</p>\n                        <p>{order.user.country}</p>\n\n                        <div>\n                            <OverwriteAddressCheckbox>\n                                <input id=\"overwrite\" name='overwrite' type='checkbox' value={overwrite} onChange={() => toggleOverwriteAddress(overwrite)} />\n                                <label htmlFor='overwrite'>Iná adresa</label>\n                            </OverwriteAddressCheckbox>\n\n                            {overwrite && (\n                                <div>\n                                    <CustomInput\n                                        label=\"Adresa\"\n                                        name=\"address\"\n                                        type='text'\n                                        value={orderDetail?.overwrite?.address ?? \"\"}\n                                        onChange={e => handleAddressOverwriteChange(e)}\n                                    />\n                                    <CustomInput\n                                        label=\"PSČ\"\n                                        name=\"psc\"\n                                        type='text'\n                                        value={orderDetail?.overwrite?.psc ?? \"\"}\n                                        onChange={e => handleAddressOverwriteChange(e)}\n                                    />\n                                    <CustomInput\n                                        label=\"Mesto\"\n                                        name=\"city\"\n                                        type='text'\n                                        value={orderDetail?.overwrite?.city ?? \"\"}\n                                        onChange={e => handleAddressOverwriteChange(e)}\n                                    />\n                                    <CustomInput\n                                        label=\"Štát\"\n                                        name=\"country\"\n                                        type='text'\n                                        value={orderDetail?.overwrite?.country ?? \"\"}\n                                        onChange={e => handleAddressOverwriteChange(e)}\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                )}\n            </div>\n\n            {isUpdating && <AddButton onClick={handleSubmit}>Upraviť objednávku</AddButton>}\n            {!isUpdating && <AddButton onClick={handleSubmit}>Vytvoriť objednávku</AddButton>}\n        </Modal>\n    )\n}\n\nexport default FinishOrderModal\n","/imooptik-frontend/src/components/order-cart-row/order-cart-row.component.jsx",["818"],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx",[],"/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx",[],"/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx",[],"/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx",[],"/imooptik-frontend/src/components/modal-booking/modal-booking.styles.jsx",[],"/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx",[],"/imooptik-frontend/src/components/examinations-overview/examinations-overview.styles.jsx",[],"/imooptik-frontend/src/utils/parameters.utils.jsx",[],"/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.styles.jsx",[],"/imooptik-frontend/src/components/calendar-booked-day/calendar-booked-day.styles.jsx",[],"/imooptik-frontend/src/components/modal-order-update-user/modal-order-update-user.styles.jsx",[],"/imooptik-frontend/src/components/order-cart-lenses-row/order-cart-lenses-row.styles.jsx",[],"/imooptik-frontend/src/components/examination-user/examination-user.component.jsx",[],"/imooptik-frontend/src/components/modal-userbookings-details/modal-userbookings-details.styles.jsx",[],"/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx",[],"/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.component.jsx",["819","820"],"/imooptik-frontend/src/components/order-cart-row/order-cart-row.styles.jsx",["821"],"import styled from 'styled-components'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\n\n\nexport const TableCol = styled.div`\n    padding: 2rem;\n    text-align: center;\n\n    input {\n        text-align: end;\n        background-color: var(--input-background-color);\n        color: var(--input-color);\n        font-size: 1.5rem;\n        padding: 1rem 1rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        font-family: inherit;\n    }\n\n`\n\nexport const CartTableRow = styled.div`\n    display:grid; \n    align-items: center;\n    grid-template-columns: 5rem 2fr 2fr 2fr 1fr;\n    background-color: var(--background-primary-color);\n    /* border: .05rem solid var(--secondary-text-color); */\n\n    &:hover  ${TableCol}{\n        position: relative;\n        :nth-of-type(1) {\n            cursor: pointer;\n            ::after {\n                content: \"X\";\n                position: absolute;\n                padding: .5rem 1rem;\n                border-radius: 50%;\n                left: 50%;\n                top: 50%;\n                transform: translate(-50%, -50%);\n                background-color: var(--color-red);\n                color: var(--button-font-color);\n                font-size: 1.2rem;\n            }\n        }\n    }\n`\n\nexport const IconContainer = styled.div`\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--primary-color);\n    font-size: 2rem;\n`\n\nexport const OptionsContainer = styled.div`\n    grid-column: 1/6;\n\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: var(--input-background-color);\n    color: var(--input-color);\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const ContactLensesParameterContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 2rem;\n    margin: 0 1rem 2rem;\n    padding: 0 1rem;\n`\n\nexport const EmptyTittle = styled.h4`\n    padding: 0 2rem;\n    opacity: .6;\n`","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.styles.jsx",[],"/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx",[],"/imooptik-frontend/src/components/examination-user/examination-user.styles.jsx",[],{"ruleId":"822","replacedBy":"823"},{"ruleId":"824","replacedBy":"825"},{"ruleId":"826","severity":1,"message":"827","line":237,"column":8,"nodeType":"828","endLine":237,"endColumn":15,"suggestions":"829"},{"ruleId":"826","severity":1,"message":"830","line":795,"column":8,"nodeType":"828","endLine":795,"endColumn":31,"suggestions":"831"},{"ruleId":"826","severity":1,"message":"832","line":825,"column":8,"nodeType":"828","endLine":825,"endColumn":22,"suggestions":"833"},{"ruleId":"826","severity":1,"message":"834","line":153,"column":8,"nodeType":"828","endLine":153,"endColumn":34,"suggestions":"835"},{"ruleId":"826","severity":1,"message":"836","line":101,"column":8,"nodeType":"828","endLine":101,"endColumn":19,"suggestions":"837"},{"ruleId":"826","severity":1,"message":"838","line":114,"column":8,"nodeType":"828","endLine":114,"endColumn":21,"suggestions":"839"},{"ruleId":"826","severity":1,"message":"840","line":143,"column":8,"nodeType":"828","endLine":143,"endColumn":43,"suggestions":"841"},{"ruleId":"826","severity":1,"message":"842","line":398,"column":8,"nodeType":"828","endLine":398,"endColumn":26,"suggestions":"843"},{"ruleId":"826","severity":1,"message":"844","line":405,"column":8,"nodeType":"828","endLine":405,"endColumn":26,"suggestions":"845"},{"ruleId":"826","severity":1,"message":"846","line":422,"column":8,"nodeType":"828","endLine":422,"endColumn":72,"suggestions":"847"},{"ruleId":"826","severity":1,"message":"848","line":438,"column":8,"nodeType":"828","endLine":438,"endColumn":26,"suggestions":"849"},{"ruleId":"826","severity":1,"message":"850","line":447,"column":8,"nodeType":"828","endLine":447,"endColumn":37,"suggestions":"851"},{"ruleId":"826","severity":1,"message":"852","line":459,"column":8,"nodeType":"828","endLine":459,"endColumn":10,"suggestions":"853"},{"ruleId":"826","severity":1,"message":"854","line":92,"column":8,"nodeType":"828","endLine":92,"endColumn":21,"suggestions":"855"},{"ruleId":"826","severity":1,"message":"856","line":93,"column":8,"nodeType":"828","endLine":93,"endColumn":21,"suggestions":"857"},{"ruleId":"826","severity":1,"message":"856","line":115,"column":8,"nodeType":"828","endLine":115,"endColumn":21,"suggestions":"858"},{"ruleId":"826","severity":1,"message":"859","line":121,"column":8,"nodeType":"828","endLine":121,"endColumn":29,"suggestions":"860"},{"ruleId":"826","severity":1,"message":"840","line":136,"column":8,"nodeType":"828","endLine":136,"endColumn":10,"suggestions":"861"},{"ruleId":"826","severity":1,"message":"862","line":76,"column":8,"nodeType":"828","endLine":76,"endColumn":12,"suggestions":"863"},{"ruleId":"826","severity":1,"message":"864","line":93,"column":8,"nodeType":"828","endLine":93,"endColumn":14,"suggestions":"865"},{"ruleId":"826","severity":1,"message":"866","line":106,"column":8,"nodeType":"828","endLine":106,"endColumn":10,"suggestions":"867"},{"ruleId":"868","severity":1,"message":"869","line":6,"column":8,"nodeType":"870","messageId":"871","endLine":6,"endColumn":21},{"ruleId":"868","severity":1,"message":"872","line":14,"column":8,"nodeType":"870","messageId":"871","endLine":14,"endColumn":26},{"ruleId":"826","severity":1,"message":"873","line":170,"column":8,"nodeType":"828","endLine":170,"endColumn":19,"suggestions":"874"},{"ruleId":"826","severity":1,"message":"875","line":186,"column":8,"nodeType":"828","endLine":186,"endColumn":10,"suggestions":"876"},{"ruleId":"826","severity":1,"message":"877","line":95,"column":8,"nodeType":"828","endLine":95,"endColumn":64,"suggestions":"878"},{"ruleId":"826","severity":1,"message":"879","line":101,"column":8,"nodeType":"828","endLine":101,"endColumn":28,"suggestions":"880"},{"ruleId":"826","severity":1,"message":"881","line":110,"column":8,"nodeType":"828","endLine":110,"endColumn":10,"suggestions":"882"},{"ruleId":"868","severity":1,"message":"883","line":1,"column":17,"nodeType":"870","messageId":"871","endLine":1,"endColumn":25},{"ruleId":"826","severity":1,"message":"884","line":43,"column":8,"nodeType":"828","endLine":43,"endColumn":17,"suggestions":"885"},{"ruleId":"826","severity":1,"message":"886","line":92,"column":8,"nodeType":"828","endLine":92,"endColumn":18,"suggestions":"887"},{"ruleId":"826","severity":1,"message":"888","line":102,"column":8,"nodeType":"828","endLine":102,"endColumn":21,"suggestions":"889"},{"ruleId":"826","severity":1,"message":"890","line":167,"column":8,"nodeType":"828","endLine":167,"endColumn":20,"suggestions":"891"},{"ruleId":"868","severity":1,"message":"892","line":5,"column":21,"nodeType":"870","messageId":"871","endLine":5,"endColumn":27},{"ruleId":"868","severity":1,"message":"893","line":50,"column":12,"nodeType":"870","messageId":"871","endLine":50,"endColumn":22},{"ruleId":"826","severity":1,"message":"894","line":144,"column":8,"nodeType":"828","endLine":144,"endColumn":38,"suggestions":"895"},{"ruleId":"826","severity":1,"message":"896","line":150,"column":8,"nodeType":"828","endLine":150,"endColumn":12,"suggestions":"897"},{"ruleId":"826","severity":1,"message":"898","line":172,"column":8,"nodeType":"828","endLine":172,"endColumn":10,"suggestions":"899"},{"ruleId":"826","severity":1,"message":"900","line":46,"column":8,"nodeType":"828","endLine":46,"endColumn":18,"suggestions":"901"},{"ruleId":"826","severity":1,"message":"902","line":52,"column":8,"nodeType":"828","endLine":52,"endColumn":10,"suggestions":"903"},{"ruleId":"826","severity":1,"message":"904","line":29,"column":8,"nodeType":"828","endLine":29,"endColumn":19,"suggestions":"905"},{"ruleId":"826","severity":1,"message":"904","line":42,"column":8,"nodeType":"828","endLine":42,"endColumn":25,"suggestions":"906"},{"ruleId":"826","severity":1,"message":"907","line":37,"column":8,"nodeType":"828","endLine":37,"endColumn":22,"suggestions":"908"},{"ruleId":"826","severity":1,"message":"909","line":79,"column":8,"nodeType":"828","endLine":79,"endColumn":28,"suggestions":"910"},{"ruleId":"826","severity":1,"message":"909","line":118,"column":8,"nodeType":"828","endLine":118,"endColumn":32,"suggestions":"911"},{"ruleId":"912","severity":1,"message":"913","line":148,"column":41,"nodeType":"914","endLine":148,"endColumn":61},{"ruleId":"912","severity":1,"message":"913","line":189,"column":45,"nodeType":"914","endLine":189,"endColumn":160},{"ruleId":"868","severity":1,"message":"915","line":6,"column":10,"nodeType":"870","messageId":"871","endLine":6,"endColumn":16},{"ruleId":"826","severity":1,"message":"916","line":64,"column":8,"nodeType":"828","endLine":64,"endColumn":19,"suggestions":"917"},{"ruleId":"918","severity":1,"message":"919","line":229,"column":44,"nodeType":"920","messageId":"921","endLine":229,"endColumn":50},{"ruleId":"918","severity":1,"message":"919","line":113,"column":40,"nodeType":"920","messageId":"921","endLine":113,"endColumn":46},{"ruleId":"868","severity":1,"message":"922","line":6,"column":10,"nodeType":"870","messageId":"871","endLine":6,"endColumn":22},{"ruleId":"918","severity":1,"message":"919","line":181,"column":44,"nodeType":"920","messageId":"921","endLine":181,"endColumn":50},{"ruleId":"826","severity":1,"message":"842","line":24,"column":8,"nodeType":"828","endLine":24,"endColumn":13,"suggestions":"923"},{"ruleId":"918","severity":1,"message":"919","line":263,"column":64,"nodeType":"920","messageId":"921","endLine":263,"endColumn":70},{"ruleId":"918","severity":1,"message":"919","line":10,"column":32,"nodeType":"920","messageId":"921","endLine":10,"endColumn":38},{"ruleId":"868","severity":1,"message":"924","line":20,"column":5,"nodeType":"870","messageId":"871","endLine":20,"endColumn":16},{"ruleId":"918","severity":1,"message":"919","line":63,"column":52,"nodeType":"920","messageId":"921","endLine":63,"endColumn":58},{"ruleId":"868","severity":1,"message":"915","line":7,"column":10,"nodeType":"870","messageId":"871","endLine":7,"endColumn":16},{"ruleId":"826","severity":1,"message":"842","line":57,"column":8,"nodeType":"828","endLine":57,"endColumn":31,"suggestions":"925"},{"ruleId":"826","severity":1,"message":"844","line":64,"column":8,"nodeType":"828","endLine":64,"endColumn":19,"suggestions":"926"},{"ruleId":"826","severity":1,"message":"927","line":87,"column":8,"nodeType":"828","endLine":87,"endColumn":19,"suggestions":"928"},{"ruleId":"826","severity":1,"message":"842","line":91,"column":8,"nodeType":"828","endLine":91,"endColumn":15,"suggestions":"929"},{"ruleId":"826","severity":1,"message":"842","line":44,"column":8,"nodeType":"828","endLine":44,"endColumn":15,"suggestions":"930"},{"ruleId":"826","severity":1,"message":"842","line":50,"column":8,"nodeType":"828","endLine":50,"endColumn":18,"suggestions":"931"},{"ruleId":"826","severity":1,"message":"927","line":65,"column":8,"nodeType":"828","endLine":65,"endColumn":19,"suggestions":"932"},{"ruleId":"918","severity":1,"message":"919","line":39,"column":55,"nodeType":"920","messageId":"921","endLine":39,"endColumn":61},{"ruleId":"918","severity":1,"message":"919","line":40,"column":53,"nodeType":"920","messageId":"921","endLine":40,"endColumn":59},{"ruleId":"918","severity":1,"message":"919","line":41,"column":54,"nodeType":"920","messageId":"921","endLine":41,"endColumn":60},{"ruleId":"918","severity":1,"message":"919","line":42,"column":123,"nodeType":"920","messageId":"921","endLine":42,"endColumn":129},{"ruleId":"826","severity":1,"message":"933","line":98,"column":8,"nodeType":"828","endLine":98,"endColumn":19,"suggestions":"934"},{"ruleId":"826","severity":1,"message":"935","line":73,"column":8,"nodeType":"828","endLine":73,"endColumn":19,"suggestions":"936"},{"ruleId":"826","severity":1,"message":"937","line":72,"column":8,"nodeType":"828","endLine":72,"endColumn":19,"suggestions":"938"},{"ruleId":"826","severity":1,"message":"939","line":58,"column":8,"nodeType":"828","endLine":58,"endColumn":15,"suggestions":"940"},{"ruleId":"826","severity":1,"message":"941","line":69,"column":8,"nodeType":"828","endLine":69,"endColumn":21,"suggestions":"942"},{"ruleId":"826","severity":1,"message":"943","line":15,"column":8,"nodeType":"828","endLine":15,"endColumn":13,"suggestions":"944"},{"ruleId":"918","severity":1,"message":"919","line":83,"column":40,"nodeType":"920","messageId":"921","endLine":83,"endColumn":46},{"ruleId":"826","severity":1,"message":"945","line":80,"column":8,"nodeType":"828","endLine":80,"endColumn":36,"suggestions":"946"},{"ruleId":"826","severity":1,"message":"947","line":41,"column":8,"nodeType":"828","endLine":41,"endColumn":104,"suggestions":"948"},{"ruleId":"826","severity":1,"message":"949","line":41,"column":9,"nodeType":"950","endLine":41,"endColumn":31},{"ruleId":"826","severity":1,"message":"949","line":41,"column":33,"nodeType":"950","endLine":41,"endColumn":55},{"ruleId":"826","severity":1,"message":"949","line":41,"column":57,"nodeType":"950","endLine":41,"endColumn":79},{"ruleId":"826","severity":1,"message":"949","line":41,"column":81,"nodeType":"950","endLine":41,"endColumn":103},{"ruleId":"868","severity":1,"message":"951","line":6,"column":5,"nodeType":"870","messageId":"871","endLine":6,"endColumn":17},{"ruleId":"868","severity":1,"message":"952","line":10,"column":5,"nodeType":"870","messageId":"871","endLine":10,"endColumn":24},{"ruleId":"868","severity":1,"message":"953","line":18,"column":5,"nodeType":"870","messageId":"871","endLine":18,"endColumn":23},{"ruleId":"868","severity":1,"message":"954","line":19,"column":5,"nodeType":"870","messageId":"871","endLine":19,"endColumn":17},{"ruleId":"868","severity":1,"message":"955","line":20,"column":5,"nodeType":"870","messageId":"871","endLine":20,"endColumn":13},{"ruleId":"826","severity":1,"message":"956","line":58,"column":8,"nodeType":"828","endLine":58,"endColumn":35,"suggestions":"957"},{"ruleId":"826","severity":1,"message":"958","line":130,"column":8,"nodeType":"828","endLine":130,"endColumn":13,"suggestions":"959"},{"ruleId":"918","severity":1,"message":"919","line":269,"column":71,"nodeType":"920","messageId":"921","endLine":269,"endColumn":77},{"ruleId":"868","severity":1,"message":"960","line":20,"column":12,"nodeType":"870","messageId":"871","endLine":20,"endColumn":29},{"ruleId":"826","severity":1,"message":"961","line":43,"column":8,"nodeType":"828","endLine":43,"endColumn":19,"suggestions":"962"},{"ruleId":"826","severity":1,"message":"842","line":48,"column":8,"nodeType":"828","endLine":48,"endColumn":30,"suggestions":"963"},{"ruleId":"826","severity":1,"message":"964","line":35,"column":8,"nodeType":"828","endLine":35,"endColumn":19,"suggestions":"965"},{"ruleId":"868","severity":1,"message":"893","line":29,"column":12,"nodeType":"870","messageId":"871","endLine":29,"endColumn":22},{"ruleId":"826","severity":1,"message":"894","line":114,"column":8,"nodeType":"828","endLine":114,"endColumn":38,"suggestions":"966"},{"ruleId":"826","severity":1,"message":"896","line":120,"column":8,"nodeType":"828","endLine":120,"endColumn":16,"suggestions":"967"},{"ruleId":"826","severity":1,"message":"968","line":148,"column":8,"nodeType":"828","endLine":148,"endColumn":27,"suggestions":"969"},{"ruleId":"826","severity":1,"message":"970","line":44,"column":8,"nodeType":"828","endLine":44,"endColumn":23,"suggestions":"971"},{"ruleId":"868","severity":1,"message":"972","line":29,"column":5,"nodeType":"870","messageId":"871","endLine":29,"endColumn":15},{"ruleId":"826","severity":1,"message":"956","line":248,"column":8,"nodeType":"828","endLine":248,"endColumn":56,"suggestions":"973"},{"ruleId":"868","severity":1,"message":"974","line":2,"column":8,"nodeType":"870","messageId":"871","endLine":2,"endColumn":22},"no-native-reassign",["975"],"no-negated-in-lhs",["976"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStats'. Either include it or remove the dependency array.","ArrayExpression",["977"],"React Hook useEffect has missing dependencies: 'getLenses', 'getProductsByQuery', 'productCategoryTypeTabs', and 'products'. Either include them or remove the dependency array.",["978"],"React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array. You can also do a functional update 'setProduct(p => ...)' if you only need 'product' in the 'setProduct' call.",["979"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["980"],"React Hook useEffect has missing dependencies: 'closeModal' and 'response'. Either include them or remove the dependency array.",["981"],"React Hook useEffect has missing dependencies: 'activeIndex' and 'refetch'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilterQuery' needs the current value of 'activeIndex'.",["982"],"React Hook useEffect has a missing dependency: 'closeModal'. Either include it or remove the dependency array.",["983"],"React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["984"],"React Hook useEffect has a missing dependency: 'response?.filters'. Either include it or remove the dependency array.",["985"],"React Hook useEffect has missing dependencies: 'getEanCode' and 'handleChange'. Either include them or remove the dependency array.",["986"],"React Hook useEffect has missing dependencies: 'getSingleProduct', 'handleChangeType', and 'productObj.type'. Either include them or remove the dependency array.",["987"],"React Hook useEffect has a missing dependency: 'setSelectedImage'. Either include it or remove the dependency array.",["988"],"React Hook useEffect has missing dependencies: 'resetContactLenses', 'resetGlassesParameters', 'resetLenses', 'resetProduct', and 'setSelectedImage'. Either include them or remove the dependency array.",["989"],"React Hook useEffect has a missing dependency: 'getAnalytics'. Either include it or remove the dependency array.",["990"],"React Hook useEffect has a missing dependency: 'blogsData'. Either include it or remove the dependency array.",["991"],["992"],"React Hook useEffect has a missing dependency: 'blogsData.response?.blogs'. Either include it or remove the dependency array.",["993"],["994"],"React Hook useEffect has missing dependencies: 'getPost' and 'setSelectedImage'. Either include them or remove the dependency array.",["995"],"React Hook useEffect has missing dependencies: 'id' and 'setSelectedImage'. Either include them or remove the dependency array.",["996"],"React Hook useEffect has a missing dependency: 'resetBlog'. Either include it or remove the dependency array.",["997"],"no-unused-vars","'SectionHeader' is defined but never used.","Identifier","unusedVar","'BookingAppoinments' is defined but never used.","React Hook useEffect has missing dependencies: 'closeModal', 'currentUser.premises', 'handleShowCalendarClick', 'isAdmin', 'response', and 'setShowModal'. Either include them or remove the dependency array.",["998"],"React Hook useEffect has missing dependencies: 'closeModal' and 'setShowModal'. Either include them or remove the dependency array.",["999"],"React Hook useEffect has missing dependencies: 'addUser', 'changeStep', 'order', and 'setOrder'. Either include them or remove the dependency array.",["1000"],"React Hook useEffect has missing dependencies: 'addUser' and 'userData.response.user'. Either include them or remove the dependency array.",["1001"],"React Hook useEffect has missing dependencies: 'changeStep' and 'resetOrder'. Either include them or remove the dependency array.",["1002"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getCoupons'. Either include it or remove the dependency array.",["1003"],"React Hook useEffect has a missing dependency: 'getProductsByQuery'. Either include it or remove the dependency array.",["1004"],"React Hook useEffect has missing dependencies: 'activeCategoryTypeTab', 'getProductsByQuery', and 'products'. Either include them or remove the dependency array.",["1005"],"React Hook useEffect has missing dependencies: 'closeModal' and 'response.calendar'. Either include them or remove the dependency array.",["1006"],"'Prompt' is defined but never used.","'hasChanges' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'user.fName', 'user.lName', and 'userObj'. Either include them or remove the dependency array. You can also do a functional update 'setUserObj(u => ...)' if you only need 'userObj' in the 'setUserObj' call.",["1007"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["1008"],"React Hook useEffect has missing dependencies: 'handleChange' and 'resetUser'. Either include them or remove the dependency array.",["1009"],"React Hook useEffect has a missing dependency: 'getCoupon'. Either include it or remove the dependency array.",["1010"],"React Hook useEffect has a missing dependency: 'resetCoupons'. Either include it or remove the dependency array.",["1011"],"React Hook useEffect has a missing dependency: 'currentPage'. Either include it or remove the dependency array.",["1012"],["1013"],"React Hook useEffect has missing dependencies: 'path', 'requestOptions', and 'skip'. Either include them or remove the dependency array.",["1014"],"React Hook useEffect has missing dependencies: 'requestOptions' and 'skip'. Either include them or remove the dependency array.",["1015"],["1016"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'brands' is defined but never used.","React Hook useEffect has a missing dependency: 'product.brand'. Either include it or remove the dependency array.",["1017"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'lensesBrands' is defined but never used.",["1018"],"'ThreeColRow' is defined but never used.",["1019"],["1020"],"React Hook useEffect has missing dependencies: 'firstDayIndex', 'lastDay', 'month', 'nextDays', 'response.calendar', and 'year'. Either include them or remove the dependency array.",["1021"],["1022"],["1023"],["1024"],["1025"],"React Hook useEffect has missing dependencies: 'response.calendar.endTimes', 'response.calendar.interval', and 'response.calendar.startTimes'. Either include them or remove the dependency array.",["1026"],"React Hook useEffect has a missing dependency: 'response.lenses'. Either include it or remove the dependency array.",["1027"],"React Hook useEffect has a missing dependency: 'response.products'. Either include it or remove the dependency array.",["1028"],"React Hook useEffect has a missing dependency: 'getFilteredUsers'. Either include it or remove the dependency array.",["1029"],"React Hook useEffect has missing dependencies: 'getFilteredUsers' and 'users'. Either include them or remove the dependency array.",["1030"],"React Hook useEffect has a missing dependency: 'action'. Either include it or remove the dependency array. If 'action' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1031"],"React Hook useEffect has a missing dependency: 'response?.booking'. Either include it or remove the dependency array.",["1032"],"React Hook useEffect has missing dependencies: 'handleChange', 'parameters.addition', and 'parameters.diopters'. Either include them or remove the dependency array. If 'handleChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1033"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'DeleteButton' is defined but never used.","'checkParameterValue' is defined but never used.","'ExamTableContainer' is defined but never used.","'HeadTableCol' is defined but never used.","'TableCol' is defined but never used.","React Hook useEffect has a missing dependency: 'examinationData.response'. Either include it or remove the dependency array.",["1034"],"React Hook useEffect has a missing dependency: 'calendar'. Either include it or remove the dependency array. If 'setStartTime' needs the current value of 'calendar', you can also switch to useReducer instead of useState and read 'calendar' in the reducer.",["1035"],"'isBelongToAnother' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'response?.userBookings' and 'userBookings?.dueDate'. Either include them or remove the dependency array.",["1036"],["1037"],"React Hook useEffect has missing dependencies: 'response' and 'userBooking.userBookings.dueDate'. Either include them or remove the dependency array.",["1038"],["1039"],["1040"],"React Hook useEffect has a missing dependency: 'handleOrderDetailChange'. Either include it or remove the dependency array.",["1041"],"React Hook useEffect has missing dependencies: 'addLensesParameters' and 'idx'. Either include them or remove the dependency array.",["1042"],"'TableBlock' is defined but never used.",["1043"],"'CustomCheckbox' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1044","fix":"1045"},{"desc":"1046","fix":"1047"},{"desc":"1048","fix":"1049"},{"desc":"1050","fix":"1051"},{"desc":"1052","fix":"1053"},{"desc":"1054","fix":"1055"},{"desc":"1056","fix":"1057"},{"desc":"1058","fix":"1059"},{"desc":"1060","fix":"1061"},{"desc":"1062","fix":"1063"},{"desc":"1064","fix":"1065"},{"desc":"1066","fix":"1067"},{"desc":"1068","fix":"1069"},{"desc":"1070","fix":"1071"},{"desc":"1072","fix":"1073"},{"desc":"1074","fix":"1075"},{"desc":"1076","fix":"1077"},{"desc":"1078","fix":"1079"},{"desc":"1080","fix":"1081"},{"desc":"1082","fix":"1083"},{"desc":"1084","fix":"1085"},{"desc":"1086","fix":"1087"},{"desc":"1088","fix":"1089"},{"desc":"1090","fix":"1091"},{"desc":"1092","fix":"1093"},{"desc":"1094","fix":"1095"},{"desc":"1096","fix":"1097"},{"desc":"1098","fix":"1099"},{"desc":"1100","fix":"1101"},{"desc":"1102","fix":"1103"},{"desc":"1104","fix":"1105"},{"desc":"1106","fix":"1107"},{"desc":"1108","fix":"1109"},{"desc":"1110","fix":"1111"},{"desc":"1112","fix":"1113"},{"desc":"1114","fix":"1115"},{"desc":"1116","fix":"1117"},{"desc":"1118","fix":"1119"},{"desc":"1120","fix":"1121"},{"desc":"1122","fix":"1123"},{"desc":"1124","fix":"1125"},{"desc":"1126","fix":"1127"},{"desc":"1128","fix":"1129"},{"desc":"1130","fix":"1131"},{"desc":"1132","fix":"1133"},{"desc":"1134","fix":"1135"},{"desc":"1134","fix":"1136"},{"desc":"1137","fix":"1138"},{"desc":"1132","fix":"1139"},{"desc":"1140","fix":"1141"},{"desc":"1142","fix":"1143"},{"desc":"1144","fix":"1145"},{"desc":"1146","fix":"1147"},{"desc":"1148","fix":"1149"},{"desc":"1150","fix":"1151"},{"desc":"1152","fix":"1153"},{"desc":"1154","fix":"1155"},{"desc":"1156","fix":"1157"},{"desc":"1158","fix":"1159"},{"desc":"1160","fix":"1161"},{"desc":"1162","fix":"1163"},{"desc":"1164","fix":"1165"},{"desc":"1104","fix":"1166"},{"desc":"1167","fix":"1168"},{"desc":"1169","fix":"1170"},{"desc":"1171","fix":"1172"},{"desc":"1173","fix":"1174"},"Update the dependencies array to be: [getStats, token]",{"range":"1175","text":"1176"},"Update the dependencies array to be: [activeCategoryTypeTab, getLenses, getProductsByQuery, productCategoryTypeTabs, products]",{"range":"1177","text":"1178"},"Update the dependencies array to be: [product, product.name]",{"range":"1179","text":"1180"},"Update the dependencies array to be: [user, user?.fName, user?.lName]",{"range":"1181","text":"1182"},"Update the dependencies array to be: [closeModal, isLoading, response]",{"range":"1183","text":"1184"},"Update the dependencies array to be: [activeIndex, refetch, searchQuery]",{"range":"1185","text":"1186"},"Update the dependencies array to be: [isFetching, response, activeIndex, closeModal]",{"range":"1187","text":"1188"},"Update the dependencies array to be: [productObj?.type, refetch]",{"range":"1189","text":"1190"},"Update the dependencies array to be: [isLoadingFilters, response?.filters]",{"range":"1191","text":"1192"},"Update the dependencies array to be: [id, eanCode, productObj.type, productObj.eanCode, product.type, getEanCode, handleChange]",{"range":"1193","text":"1194"},"Update the dependencies array to be: [getSingleProduct, handleChangeType, id, product.type, productObj.type]",{"range":"1195","text":"1196"},"Update the dependencies array to be: [product.image, lenses.image, setSelectedImage]",{"range":"1197","text":"1198"},"Update the dependencies array to be: [resetContactLenses, resetGlassesParameters, resetLenses, resetProduct, setSelectedImage]",{"range":"1199","text":"1200"},"Update the dependencies array to be: [activeIndex, getAnalytics]",{"range":"1201","text":"1202"},"Update the dependencies array to be: [blogsData, searchQuery]",{"range":"1203","text":"1204"},"Update the dependencies array to be: [activeIndex, blogsData]",{"range":"1205","text":"1206"},"Update the dependencies array to be: [blogsData.isLoading, blogsData.response?.blogs]",{"range":"1207","text":"1208"},"Update the dependencies array to be: [closeModal]",{"range":"1209","text":"1210"},"Update the dependencies array to be: [getPost, id, setSelectedImage]",{"range":"1211","text":"1212"},"Update the dependencies array to be: [id, post, setSelectedImage]",{"range":"1213","text":"1214"},"Update the dependencies array to be: [resetBlog]",{"range":"1215","text":"1216"},"Update the dependencies array to be: [closeModal, currentUser.premises, handleShowCalendarClick, isAdmin, isLoading, response, setShowModal]",{"range":"1217","text":"1218"},"Update the dependencies array to be: [closeModal, setShowModal]",{"range":"1219","text":"1220"},"Update the dependencies array to be: [userId, orderId, userData.response, orderData.response, changeStep, addUser, setOrder, order]",{"range":"1221","text":"1222"},"Update the dependencies array to be: [addUser, userData.isLoading, userData.response.user]",{"range":"1223","text":"1224"},"Update the dependencies array to be: [changeStep, resetOrder]",{"range":"1225","text":"1226"},"Update the dependencies array to be: [coupons, getCoupons]",{"range":"1227","text":"1228"},"Update the dependencies array to be: [getProductsByQuery, products]",{"range":"1229","text":"1230"},"Update the dependencies array to be: [activeCategoryTypeTab, getProductsByQuery, products, searchQuery]",{"range":"1231","text":"1232"},"Update the dependencies array to be: [closeModal, isFetching, response.calendar]",{"range":"1233","text":"1234"},"Update the dependencies array to be: [user.fName, user.lName, userObj, userObj.fName, userObj.lName]",{"range":"1235","text":"1236"},"Update the dependencies array to be: [getUser, id]",{"range":"1237","text":"1238"},"Update the dependencies array to be: [handleChange, resetUser]",{"range":"1239","text":"1240"},"Update the dependencies array to be: [couponId, getCoupon]",{"range":"1241","text":"1242"},"Update the dependencies array to be: [resetCoupons]",{"range":"1243","text":"1244"},"Update the dependencies array to be: [currentPage, listItems]",{"range":"1245","text":"1246"},"Update the dependencies array to be: [currentPage, handleClickPrev]",{"range":"1247","text":"1248"},"Update the dependencies array to be: [path, refetchIndex, requestOptions, skip]",{"range":"1249","text":"1250"},"Update the dependencies array to be: [refetchIndex, path, skip, requestOptions]",{"range":"1251","text":"1252"},"Update the dependencies array to be: [refetchIndex, path, id, skip, requestOptions]",{"range":"1253","text":"1254"},"Update the dependencies array to be: [isBranded, product.brand]",{"range":"1255","text":"1256"},"Update the dependencies array to be: [day, refetch]",{"range":"1257","text":"1258"},"Update the dependencies array to be: [filter?.filters?.type, refetch]",{"range":"1259","text":"1260"},"Update the dependencies array to be: [isLoading, response?.filters]",{"range":"1261","text":"1262"},"Update the dependencies array to be: [firstDayIndex, isLoading, lastDay, month, nextDays, response.calendar, year]",{"range":"1263","text":"1264"},"Update the dependencies array to be: [month, refetch]",{"range":"1265","text":"1266"},{"range":"1267","text":"1266"},"Update the dependencies array to be: [calendar, refetch]",{"range":"1268","text":"1269"},{"range":"1270","text":"1264"},"Update the dependencies array to be: [isLoading, response.calendar.endTimes, response.calendar.interval, response.calendar.startTimes]",{"range":"1271","text":"1272"},"Update the dependencies array to be: [isLoading, response.lenses]",{"range":"1273","text":"1274"},"Update the dependencies array to be: [isLoading, response.products]",{"range":"1275","text":"1276"},"Update the dependencies array to be: [getFilteredUsers, users]",{"range":"1277","text":"1278"},"Update the dependencies array to be: [getFilteredUsers, searchQuery, users]",{"range":"1279","text":"1280"},"Update the dependencies array to be: [action, ref]",{"range":"1281","text":"1282"},"Update the dependencies array to be: [selectedBooking, isLoading, response?.booking]",{"range":"1283","text":"1284"},"Update the dependencies array to be: [handleChange, parameters.addition, parameters.diopters]",{"range":"1285","text":"1286"},"Update the dependencies array to be: [examinationData.isLoading, examinationData.response]",{"range":"1287","text":"1288"},"Update the dependencies array to be: [calendar, day]",{"range":"1289","text":"1290"},"Update the dependencies array to be: [isLoading, response?.userBookings, userBookings?.dueDate]",{"range":"1291","text":"1292"},"Update the dependencies array to be: [dayData?.bookingDate, refetch]",{"range":"1293","text":"1294"},"Update the dependencies array to be: [isLoading, response, userBooking.userBookings.dueDate]",{"range":"1295","text":"1296"},{"range":"1297","text":"1236"},"Update the dependencies array to be: [getUser, userId]",{"range":"1298","text":"1299"},"Update the dependencies array to be: [handleOrderDetailChange, isUpdating, order]",{"range":"1300","text":"1301"},"Update the dependencies array to be: [addLensesParameters, contactLenses, idx]",{"range":"1302","text":"1303"},"Update the dependencies array to be: [examinationToUpdate, examinationData.isLoading, examinationData.response]",{"range":"1304","text":"1305"},[6464,6471],"[getStats, token]",[23306,23329],"[activeCategoryTypeTab, getLenses, getProductsByQuery, productCategoryTypeTabs, products]",[24140,24154],"[product, product.name]",[3487,3513],"[user, user?.fName, user?.lName]",[2696,2707],"[closeModal, isLoading, response]",[2985,2998],"[activeIndex, refetch, searchQuery]",[3822,3857],"[isFetching, response, activeIndex, closeModal]",[12306,12324],"[productObj?.type, refetch]",[12478,12496],"[isLoadingFilters, response?.filters]",[12944,13008],"[id, eanCode, productObj.type, productObj.eanCode, product.type, getEanCode, handleChange]",[13391,13409],"[getSingleProduct, handleChangeType, id, product.type, productObj.type]",[13605,13634],"[product.image, lenses.image, setSelectedImage]",[13920,13922],"[resetContactLenses, resetGlassesParameters, resetLenses, resetProduct, setSelectedImage]",[2975,2988],"[activeIndex, getAnalytics]",[2392,2405],"[blogsData, searchQuery]",[2908,2921],"[activeIndex, blogsData]",[3047,3068],"[blogsData.isLoading, blogsData.response?.blogs]",[3389,3391],"[closeModal]",[2278,2282],"[getPost, id, setSelectedImage]",[2774,2780],"[id, post, setSelectedImage]",[3074,3076],"[resetBlog]",[6160,6171],"[closeModal, currentUser.premises, handleShowCalendarClick, isAdmin, isLoading, response, setShowModal]",[6645,6647],"[closeModal, setShowModal]",[2926,2982],"[userId, orderId, userData.response, orderData.response, changeStep, addUser, setOrder, order]",[3094,3114],"[addUser, userData.isLoading, userData.response.user]",[3310,3312],"[changeStep, resetOrder]",[1193,1202],"[coupons, getCoupons]",[2739,2749],"[getProductsByQuery, products]",[2978,2991],"[activeCategoryTypeTab, getProductsByQuery, products, searchQuery]",[4886,4898],"[closeModal, isFetching, response.calendar]",[3667,3697],"[user.fName, user.lName, userObj, userObj.fName, userObj.lName]",[3801,3805],"[getUser, id]",[4535,4537],"[handleChange, resetUser]",[1255,1265],"[couponId, getCoupon]",[1357,1359],"[resetCoupons]",[694,705],"[currentPage, listItems]",[1003,1020],"[currentPage, handleClickPrev]",[1192,1206],"[path, refetchIndex, requestOptions, skip]",[2507,2527],"[refetchIndex, path, skip, requestOptions]",[3754,3778],"[refetchIndex, path, id, skip, requestOptions]",[1473,1484],"[isBranded, product.brand]",[610,615],"[day, refetch]",[1569,1592],"[filter?.filters?.type, refetch]",[1739,1750],"[isLoading, response?.filters]",[2939,2950],"[firstDayIndex, isLoading, lastDay, month, nextDays, response.calendar, year]",[3000,3007],"[month, refetch]",[1086,1093],[1181,1191],"[calendar, refetch]",[1722,1733],[3694,3705],"[isLoading, response.calendar.endTimes, response.calendar.interval, response.calendar.startTimes]",[1956,1967],"[isLoading, response.lenses]",[1911,1922],"[isLoading, response.products]",[1353,1360],"[getFilteredUsers, users]",[1594,1607],"[getFilteredUsers, searchQuery, users]",[467,472],"[action, ref]",[2158,2186],"[selectedBooking, isLoading, response?.booking]",[1541,1637],"[handleChange, parameters.addition, parameters.diopters]",[1801,1828],"[examinationData.isLoading, examinationData.response]",[3405,3410],"[calendar, day]",[1696,1707],"[isLoading, response?.userBookings, userBookings?.dueDate]",[1799,1821],"[dayData?.bookingDate, refetch]",[1039,1050],"[isLoading, response, userBooking.userBookings.dueDate]",[2840,2870],[2962,2970],"[getUser, userId]",[3704,3723],"[handleOrderDetailChange, isUpdating, order]",[1141,1156],"[addLensesParameters, contactLenses, idx]",[7685,7733],"[examinationToUpdate, examinationData.isLoading, examinationData.response]"]
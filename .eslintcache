[{"/imooptik-frontend/src/index.js":"1","/imooptik-frontend/src/reportWebVitals.js":"2","/imooptik-frontend/src/App.jsx":"3","/imooptik-frontend/src/context/auth/auth.context.jsx":"4","/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx":"5","/imooptik-frontend/src/global.styles.jsx":"6","/imooptik-frontend/src/context/auth/auth.queries.jsx":"7","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx":"8","/imooptik-frontend/src/pages/dashboard/dashboard.jsx":"9","/imooptik-frontend/src/pages/reset-password/reset-password.jsx":"10","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx":"11","/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx":"12","/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx":"13","/imooptik-frontend/src/context/warehouse/warehouse.context.jsx":"14","/imooptik-frontend/src/context/user/user.context.jsx":"15","/imooptik-frontend/src/context/image/image.context.jsx":"16","/imooptik-frontend/src/context/blog/blog.context.jsx":"17","/imooptik-frontend/src/components/sidenav/sidenav.component.jsx":"18","/imooptik-frontend/src/components/popup/pop-up.component.jsx":"19","/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx":"20","/imooptik-frontend/src/components/sign-in/sign-in.component.jsx":"21","/imooptik-frontend/src/components/custom-input/custom-input.component.jsx":"22","/imooptik-frontend/src/sections/customers/customers.section.jsx":"23","/imooptik-frontend/src/sections/analytics/analytics.section.jsx":"24","/imooptik-frontend/src/sections/orders/orders.section.jsx":"25","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx":"26","/imooptik-frontend/src/sections/product/product.section.jsx":"27","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx":"28","/imooptik-frontend/src/sections/post/post.section.jsx":"29","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx":"30","/imooptik-frontend/src/sections/booking/booking.section.jsx":"31","/imooptik-frontend/src/context/warehouse/warehouse.queries.jsx":"32","/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx":"33","/imooptik-frontend/src/context/user/user.queries.jsx":"34","/imooptik-frontend/src/context/image/image.queries.jsx":"35","/imooptik-frontend/src/components/custom-button/custom-button.component.jsx":"36","/imooptik-frontend/src/components/popup/pop.up.styles.jsx":"37","/imooptik-frontend/src/context/blog/blog.queries.jsx":"38","/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx":"39","/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx":"40","/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx":"41","/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx":"42","/imooptik-frontend/src/sections/customers/customers.styles.jsx":"43","/imooptik-frontend/src/sections/analytics/analytics.styles.jsx":"44","/imooptik-frontend/src/sections/product/product.styles.jsx":"45","/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx":"46","/imooptik-frontend/src/sections/post/post.styles.jsx":"47","/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx":"48","/imooptik-frontend/src/sections/booking/booking.styles.jsx":"49","/imooptik-frontend/src/components/spinner/spinner.component.jsx":"50","/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx":"51","/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx":"52","/imooptik-frontend/src/components/section-header/section-header.component.jsx":"53","/imooptik-frontend/src/components/product-overview/product-overview.component.jsx":"54","/imooptik-frontend/src/components/order-overview/order-overview.component.jsx":"55","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx":"56","/imooptik-frontend/src/components/pagination/pagination.component.jsx":"57","/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx":"58","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx":"59","/imooptik-frontend/src/components/modal-images/modal-images.component.jsx":"60","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx":"61","/imooptik-frontend/src/components/calendar/calendar.component.jsx":"62","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx":"63","/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx":"64","/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx":"65","/imooptik-frontend/src/components/spinner/spinner.styles.jsx":"66","/imooptik-frontend/src/components/section-header/section-header.styles.jsx":"67","/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx":"68","/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx":"69","/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx":"70","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx":"71","/imooptik-frontend/src/components/pagination/pagination.styles.jsx":"72","/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx":"73","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx":"74","/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx":"75","/imooptik-frontend/src/components/calendar/calendar.styles.jsx":"76","/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx":"77","/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx":"78","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx":"79","/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx":"80","/imooptik-frontend/src/context/user/user.utils.jsx":"81","/imooptik-frontend/src/components/user-form/user-form.component.jsx":"82","/imooptik-frontend/src/components/user-form/user.form-styles.jsx":"83","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx":"84","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx":"85","/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx":"86"},{"size":717,"mtime":1608670306490,"results":"87","hashOfConfig":"88"},{"size":362,"mtime":1608191294784,"results":"89","hashOfConfig":"88"},{"size":1127,"mtime":1610130012563,"results":"90","hashOfConfig":"88"},{"size":5707,"mtime":1610143786733,"results":"91","hashOfConfig":"88"},{"size":1076,"mtime":1610126635393,"results":"92","hashOfConfig":"88"},{"size":700,"mtime":1609637180940,"results":"93","hashOfConfig":"88"},{"size":2292,"mtime":1609880010090,"results":"94","hashOfConfig":"88"},{"size":840,"mtime":1609978179243,"results":"95","hashOfConfig":"88"},{"size":4807,"mtime":1610133022603,"results":"96","hashOfConfig":"88"},{"size":1667,"mtime":1608613259561,"results":"97","hashOfConfig":"88"},{"size":506,"mtime":1608208021900,"results":"98","hashOfConfig":"88"},{"size":731,"mtime":1608613281121,"results":"99","hashOfConfig":"88"},{"size":547,"mtime":1609637224870,"results":"100","hashOfConfig":"88"},{"size":14194,"mtime":1610147057493,"results":"101","hashOfConfig":"88"},{"size":8955,"mtime":1610150990313,"results":"102","hashOfConfig":"88"},{"size":4408,"mtime":1610127590023,"results":"103","hashOfConfig":"88"},{"size":3956,"mtime":1609882050220,"results":"104","hashOfConfig":"88"},{"size":1937,"mtime":1609881746090,"results":"105","hashOfConfig":"88"},{"size":714,"mtime":1609965412857,"results":"106","hashOfConfig":"88"},{"size":1466,"mtime":1609978281513,"results":"107","hashOfConfig":"88"},{"size":1925,"mtime":1609978226453,"results":"108","hashOfConfig":"88"},{"size":639,"mtime":1608689089980,"results":"109","hashOfConfig":"88"},{"size":3068,"mtime":1610134384793,"results":"110","hashOfConfig":"88"},{"size":1381,"mtime":1608483136504,"results":"111","hashOfConfig":"88"},{"size":2125,"mtime":1609172793237,"results":"112","hashOfConfig":"88"},{"size":5944,"mtime":1610073100206,"results":"113","hashOfConfig":"88"},{"size":6232,"mtime":1610147082353,"results":"114","hashOfConfig":"88"},{"size":3697,"mtime":1610151028183,"results":"115","hashOfConfig":"88"},{"size":9286,"mtime":1609878576620,"results":"116","hashOfConfig":"88"},{"size":3179,"mtime":1609802280536,"results":"117","hashOfConfig":"88"},{"size":5014,"mtime":1609634495750,"results":"118","hashOfConfig":"88"},{"size":7841,"mtime":1610072441396,"results":"119","hashOfConfig":"88"},{"size":3054,"mtime":1610069465556,"results":"120","hashOfConfig":"88"},{"size":3109,"mtime":1610151298563,"results":"121","hashOfConfig":"88"},{"size":1560,"mtime":1610106635382,"results":"122","hashOfConfig":"88"},{"size":283,"mtime":1608325857586,"results":"123","hashOfConfig":"88"},{"size":677,"mtime":1610074517686,"results":"124","hashOfConfig":"88"},{"size":1793,"mtime":1608678905090,"results":"125","hashOfConfig":"88"},{"size":4551,"mtime":1609701103064,"results":"126","hashOfConfig":"88"},{"size":880,"mtime":1609978233033,"results":"127","hashOfConfig":"88"},{"size":1263,"mtime":1609635810480,"results":"128","hashOfConfig":"88"},{"size":898,"mtime":1609978275513,"results":"129","hashOfConfig":"88"},{"size":1115,"mtime":1609635476450,"results":"130","hashOfConfig":"88"},{"size":753,"mtime":1608501615800,"results":"131","hashOfConfig":"88"},{"size":1532,"mtime":1610146332973,"results":"132","hashOfConfig":"88"},{"size":549,"mtime":1610145287903,"results":"133","hashOfConfig":"88"},{"size":1711,"mtime":1609802520286,"results":"134","hashOfConfig":"88"},{"size":1658,"mtime":1609636415920,"results":"135","hashOfConfig":"88"},{"size":1999,"mtime":1609634745940,"results":"136","hashOfConfig":"88"},{"size":178,"mtime":1608409397640,"results":"137","hashOfConfig":"88"},{"size":624,"mtime":1609280754422,"results":"138","hashOfConfig":"88"},{"size":241,"mtime":1608402129090,"results":"139","hashOfConfig":"88"},{"size":1066,"mtime":1609810962606,"results":"140","hashOfConfig":"88"},{"size":1207,"mtime":1609619098510,"results":"141","hashOfConfig":"88"},{"size":819,"mtime":1608478620604,"results":"142","hashOfConfig":"88"},{"size":3781,"mtime":1610070696946,"results":"143","hashOfConfig":"88"},{"size":834,"mtime":1609973813373,"results":"144","hashOfConfig":"88"},{"size":651,"mtime":1608506295620,"results":"145","hashOfConfig":"88"},{"size":354,"mtime":1609286026892,"results":"146","hashOfConfig":"88"},{"size":8273,"mtime":1610127574183,"results":"147","hashOfConfig":"88"},{"size":10287,"mtime":1610067095386,"results":"148","hashOfConfig":"88"},{"size":1374,"mtime":1608696113560,"results":"149","hashOfConfig":"88"},{"size":1310,"mtime":1610067774946,"results":"150","hashOfConfig":"88"},{"size":440,"mtime":1609635534260,"results":"151","hashOfConfig":"88"},{"size":419,"mtime":1609637307170,"results":"152","hashOfConfig":"88"},{"size":377,"mtime":1608409635720,"results":"153","hashOfConfig":"88"},{"size":953,"mtime":1609636181490,"results":"154","hashOfConfig":"88"},{"size":718,"mtime":1608401951890,"results":"155","hashOfConfig":"88"},{"size":1797,"mtime":1610132074873,"results":"156","hashOfConfig":"88"},{"size":1127,"mtime":1609637931300,"results":"157","hashOfConfig":"88"},{"size":596,"mtime":1609639013590,"results":"158","hashOfConfig":"88"},{"size":646,"mtime":1609973838353,"results":"159","hashOfConfig":"88"},{"size":1062,"mtime":1608505999020,"results":"160","hashOfConfig":"88"},{"size":554,"mtime":1609636648760,"results":"161","hashOfConfig":"88"},{"size":3851,"mtime":1610125616673,"results":"162","hashOfConfig":"88"},{"size":767,"mtime":1608686624820,"results":"163","hashOfConfig":"88"},{"size":425,"mtime":1609365301650,"results":"164","hashOfConfig":"88"},{"size":447,"mtime":1609638204590,"results":"165","hashOfConfig":"88"},{"size":810,"mtime":1610132345623,"results":"166","hashOfConfig":"88"},{"size":728,"mtime":1610132354653,"results":"167","hashOfConfig":"88"},{"size":513,"mtime":1610149650113,"results":"168","hashOfConfig":"88"},{"size":10752,"mtime":1610145432673,"results":"169","hashOfConfig":"88"},{"size":1488,"mtime":1610145280393,"results":"170","hashOfConfig":"88"},{"size":681,"mtime":1610146980773,"results":"171","hashOfConfig":"88"},{"size":519,"mtime":1610146931453,"results":"172","hashOfConfig":"88"},{"size":7545,"mtime":1610150047483,"results":"173","hashOfConfig":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lk1amn",{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"207"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"207"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"207"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"207"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"207"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"207"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"207"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/imooptik-frontend/src/index.js",[],"/imooptik-frontend/src/reportWebVitals.js",[],"/imooptik-frontend/src/App.jsx",[],"/imooptik-frontend/src/context/auth/auth.context.jsx",[],"/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx",[],"/imooptik-frontend/src/global.styles.jsx",[],"/imooptik-frontend/src/context/auth/auth.queries.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset-password.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.context.jsx",[],"/imooptik-frontend/src/context/user/user.context.jsx",["355"],"/imooptik-frontend/src/context/image/image.context.jsx",["356","357"],"import React, { createContext, useState, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport { deleteImage, fetchImages, uploadImage, fetchFilteredImages } from './image.queries'\n\nexport const ImageContext = createContext({\n    isDisabled: false,\n    images: null,\n    selectedImage: null,\n    getImages: () => { },\n    handleImage: () => { },\n    handleDeleteImage: () => { },\n    setSelectedImage: () => { },\n    getNextImages: () => { },\n    getPrevImage: () => { }\n})\n\nconst ImageProvider = ({ children }) => {\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const { token } = useContext(AuthContext)\n\n    const [isDisabled, setIsDisabled] = useState(false)\n    const [images, setImages] = useState(null)\n    const [selectedImage, setSelectedImage] = useState(null)\n    const [limit, setLimit] = useState(4)\n    const [skip, setSkip] = useState(0)\n\n    const handleImage = async (img, imgName, imgAlt, setImage, close) => {\n        setShowModal(true)\n        setIsLoading(true)\n        setIsDisabled(true)\n\n        try {\n            const response = await uploadImage(token, img, imgName, imgAlt)\n            const data = await response.json()\n            console.log(data)\n\n            if (data.image) {\n                setSelectedImage(data.image)\n                setImage(data.image)\n                getImages()\n                close()\n            }\n\n            setShowModal(false)\n            setIsLoading(false)\n            setIsDisabled(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n            setIsDisabled(false)\n        }\n    }\n\n    const getNextImages = async (addToSkip) => {\n        try {\n            if (images.length !== limit) return\n\n            const response = await fetchFilteredImages(token, limit, skip + addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip + addToSkip)\n            }\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getPrevImage = async (addToSkip) => {\n        if (skip === 0) return\n        try {\n            const response = await fetchFilteredImages(token, limit, skip - addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip - addToSkip)\n\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getImages = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            // const response = await fetchImages()\n            const response = await fetchFilteredImages(token, limit, skip)\n\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n            closeModal()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleDeleteImage = async (id, e) => {\n        e.preventDefault()\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const respone = await deleteImage(token, id)\n            const data = await respone.json()\n\n            getMessage(data.message)\n            setIsLoading(false)\n            getImages()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <ImageContext.Provider\n            value={{\n                isDisabled,\n                images,\n                selectedImage,\n                getImages,\n                handleImage,\n                handleDeleteImage,\n                setSelectedImage,\n                getNextImages,\n                getPrevImage\n            }}\n        >\n            {children}\n        </ImageContext.Provider>\n    )\n}\n\nexport default ImageProvider",["358","359"],"/imooptik-frontend/src/context/blog/blog.context.jsx",["360"],"import React, { createContext, useState, useContext } from 'react'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport {\n    fetchPosts,\n    createNewPost,\n    fetchSinglePost,\n    updatePost,\n    deletePost,\n} from './blog.queries'\n\n\nexport const BlogContext = createContext({\n    posts: null,\n    post: null,\n    postsCount: 0,\n    getPosts: () => { },\n    createPost: () => { },\n    getPost: () => { },\n    handlePostUpdate: () => { },\n    handlePostDelete: () => { },\n})\n\nconst BlogProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const [posts, setPosts] = useState(null)\n    const [post, setPost] = useState(null)\n    const [postsCount, setPostsCount] = useState(0)\n\n    const getPosts = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const response = await fetchPosts()\n        const data = await response.json()\n\n        setPosts(data.blogs)\n        setPostsCount(data.count)\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const getPost = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n\n            const response = await fetchSinglePost(id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.blog) {\n                setPost(data.blog)\n                setIsLoading(false)\n                getMessage(data.message)\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n            // setPosts(data.blogs)\n            // setPostsCount(data.count)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const createPost = async (img, name, description, draft, html) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await createNewPost(token, name, description, draft, html, img)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostUpdate = async (name, description, draft, html, img, id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await updatePost(token, name, description, draft, html, img, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostDelete = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await deletePost(token, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <BlogContext.Provider\n            value={{\n                posts,\n                post,\n                postsCount,\n                getPosts,\n                createPost,\n                getPost,\n                handlePostUpdate,\n                handlePostDelete,\n            }}\n        >\n            {children}\n        </BlogContext.Provider>\n    )\n}\n\nexport default BlogProvider","/imooptik-frontend/src/components/sidenav/sidenav.component.jsx",["361","362"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { useHistory } from 'react-router-dom'\n\nimport {\n    AsideContainer,\n    LogoContainer,\n    NavLinksContainer,\n    ToggleButton,\n    NavLinksButton,\n    ActiveBorder\n} from './sidenav.styles'\n\nconst Sidenav = ({ routes, match }) => {\n    const { logOut, currentUser } = useContext(AuthContext)\n    const { push } = useHistory()\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const [activeLink, setActiveLink] = useState(0)\n\n    const handleClick = (path, idx) => {\n        if (isOpen) {\n            setIsOpen(false)\n        }\n        setActiveLink(idx)\n        push(path)\n    }\n\n    return (\n        <React.Fragment>\n\n            <ToggleButton onClick={() => setIsOpen(!isOpen)} isOpen={isOpen}>\n                <div />\n                <div />\n                <div />\n            </ToggleButton>\n            <AsideContainer isOpen={isOpen}>\n                <LogoContainer isOpen={isOpen}>\n                    IMOOPTIK\n            </LogoContainer>\n                <NavLinksContainer>\n                    {routes.map((route, idx) => (\n                        <li key={idx}>\n                            <NavLinksButton onClick={() => handleClick(match.url + route.path, idx)} >\n                                <div /> {route.name}\n                            </NavLinksButton>\n                            <ActiveBorder isActive={activeLink === idx} />\n                        </li>\n                    ))}\n                    <li>\n                        <NavLinksButton onClick={logOut}>\n                            <div /> Odhlásiť sa\n                            <ActiveBorder />\n                        </NavLinksButton>\n                    </li>\n                </NavLinksContainer>\n                <div />\n            </AsideContainer>\n        </React.Fragment>\n    )\n}\n\nexport default Sidenav\n","/imooptik-frontend/src/components/popup/pop-up.component.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.component.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.component.jsx",[],"/imooptik-frontend/src/sections/customers/customers.section.jsx",["363"],"/imooptik-frontend/src/sections/analytics/analytics.section.jsx",[],"/imooptik-frontend/src/sections/orders/orders.section.jsx",[],"/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx",["364","365","366","367"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../..//context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useHistory } from 'react-router-dom'\n\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ProductOverview from '../../components/product-overview/product-overview.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport Pagination from '../../components/pagination/pagination.component'\n\nimport Fuse from 'fuse.js'\n\n\nconst EshopSection = () => {\n    const { currentUser, token } = useContext(AuthContext)\n\n    const {\n        isLoading,\n        showModal,\n        message,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        showUpdateForm,\n        products,\n        lensesArr,\n        lenses,\n        getProducts,\n        getLenses,\n        handleProductDelete,\n        deleteLenses,\n    } = useContext(WarehouseContext)\n\n    const { push } = useHistory()\n\n    const [searchQuery, setSearchQuery] = useState('')\n    const items = [\n        {\n            id: 0,\n            name: \"Všetko\",\n            permission: 0,\n        },\n        {\n            id: 1,\n            name: \"Prevádzka 1\",\n            permission: 1,\n        },\n        {\n            id: 2,\n            name: \"Prevádzka 2\",\n            permission: 2,\n        },\n        {\n            id: 3,\n            name: \"Prevádzka 3\",\n            permission: 3,\n        },\n        {\n            id: 4,\n            name: \"Prevádzka 4\",\n            permission: 4,\n        },\n        // {\n        //     id: 5,\n        //     name: \"Prevádzka 5\",\n        //     permission: 5,\n        // },\n    ]\n\n    const filteredItems = items.filter(item => item.permission === currentUser.premises || currentUser.admin >= 2)\n    const [activeIndex, setActiveIndex] = useState(2)\n\n    useEffect(() => {\n        console.log(\"fetch products\")\n        if (!products) {\n            getProducts()\n            getLenses()\n        }\n\n        if (!message) {\n            closeModal()\n        }\n    }, [products, lensesArr, token])\n\n    useEffect(() => {\n        if (filteredItems.length) {\n            setActiveIndex(filteredItems[0].id)\n        }\n    }, [])\n\n\n    // fuse.search(searchQuery)\n\n    let allProducts = []\n    const [currentPage, setCurrentPage] = useState(1)\n    const [productsPerPage, setProductsPerPage] = useState(10)\n\n    if (products && lensesArr) {\n        allProducts = [\n            ...products,\n            ...lensesArr\n        ]\n    }\n\n    const fuse = new Fuse(allProducts, {\n        keys: [\n            'name',\n            'brand',\n            'description'\n        ]\n    })\n\n    const result = fuse.search(searchQuery)\n    console.log(result)\n\n    const indexOfLastProduct = currentPage * productsPerPage\n    const indexOfFirstProduct = indexOfLastProduct - productsPerPage\n    const currentProducts = allProducts.slice(indexOfFirstProduct, indexOfLastProduct)\n\n    const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('sklad/novy-produkt')}\n\n                title=\"E-shop\"\n            />\n\n            <SectionNavbar\n                items={filteredItems}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            {/* Products container */}\n            <ScrollContainer>\n                {\n                    currentProducts && currentProducts.map(product => (\n                        <ProductOverview\n                            key={product._id}\n                            name={product.name}\n                            stock={product.available ? activeIndex === 0 ? product.available.reduce((acc, currValue) => acc + currValue) : product.available[activeIndex - 1] : null}\n                            id={product.eanCode}\n                            price={(product.price / 100).toFixed(2)}\n                            image={product.image}\n                            handleUpdateButton={() => {\n                                showUpdateForm(product.available ? \"glasses\" : \"lenses\")\n                                push(`sklad/${product._id}`)\n                            }}\n                            handleDeleteButton={product.dioptersRange ? () => deleteLenses(product._id) : () => handleProductDelete(product._id)}\n                        />\n                    ))\n                }\n                {/* {\n                    lenses && lenses.map(product => (\n                        <ProductOverview\n                            key={product._id}\n                            name={product.name}\n                            id={product._id}\n                            price={(product.price / 100).toFixed(2)}\n                            image={product.image}\n                            handleUpdateButton={() => push(`sklad/${product._id}`)}\n                            handleDeleteButton={() => deleteLense(product._id)}\n                        />\n                    ))\n                } */}\n\n                <Pagination\n                    productsPerPage={productsPerPage}\n                    totalProducts={allProducts.length}\n                    paginate={paginate}\n                    activePage={currentPage}\n                />\n            </ScrollContainer>\n        </section >\n    )\n}\n\nexport default EshopSection\n","/imooptik-frontend/src/sections/product/product.section.jsx",["368","369","370","371"],"/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx",["372","373"],"/imooptik-frontend/src/sections/post/post.section.jsx",["374","375"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport CustomTextarea from '../../components/custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport { Quill } from 'react-quill'\n\nimport {\n    Header,\n    GridContainer,\n    PostImage,\n    DeleteButton,\n    AddButton,\n    Title,\n    ContentTextare,\n} from './post.styles'\n\nconst PostSection = () => {\n    const { id } = useParams()\n    const { push } = useHistory()\n    const {\n        createPost,\n        isLoading,\n        message,\n        showLoading,\n        setIsLoading,\n        getPost,\n        post,\n        handlePostUpdate\n    } = useContext(BlogContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [content, setContent] = useState('')\n    const [image, setImage] = useState('')\n    const [draft, toggleDraft] = useState(false)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (image.length <= 0) return\n        if (content.length <= 0) return\n\n        if (id === 'novy-prispevok') {\n            createPost(image, title, description, draft, content)\n        } else {\n            handlePostUpdate(title, description, draft, content, image, id)\n        }\n\n        push('/dashboard/blog')\n\n    }\n\n    useEffect(() => {\n        setSelectedImage(null)\n\n        if (id !== 'novy-prispevok') {\n            getPost(id)\n            setIsUpdating(true)\n        }\n    }, [id])\n\n    useEffect(() => {\n        console.log(post)\n        if (post) {\n            console.log(post)\n            setTitle(post.name)\n            setDescription(post.description)\n            setContent(post.html)\n            toggleDraft(post.draft)\n            if (post.image) {\n                setImage(post.image._id)\n                setSelectedImage(post.image)\n            }\n        }\n    }, [post])\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {isLoading && <Popup loading={showLoading} title={message} close={() => setIsLoading(false)} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={setImage} />}\n\n            <Header>\n                <div>\n                    <h1>Post</h1>\n                </div>\n                <div>\n                    <CustomCheckbox\n                        label='Draft'\n                        checked={draft}\n                        onChange={() => toggleDraft(!draft)}\n                    />\n                    <DeleteButton>Vymazať</DeleteButton>\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť príspevok\" : \"Pridať príspevok\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n\n                <GridContainer>\n                    <div>\n                        <h2>Informácia</h2>\n                        <CustomInput\n                            label=\"Nadpis\"\n                            type='text'\n                            name='title'\n                            value={title}\n                            handleChange={(e) => setTitle(e.target.value)}\n                            required\n                        />\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={description}\n                            handleChange={(e) => setDescription(e.target.value)}\n                            required\n                        />\n                        <h2>Titulná fotka</h2>\n                        <PostImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </PostImage>\n                    </div>\n                    <div>\n                        <Title>Obsah</Title>\n                        <QuillToolbar />\n                        <ContentTextare\n                            value={content}\n                            onChange={setContent}\n                            modules={modules}\n                            formats={formats}\n                        />\n                    </div>\n\n                </GridContainer>\n\n            </ScrollContainer>\n        </form>\n    )\n}\n\n\nconst CustomUndo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n        />\n    </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n        />\n    </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n    this.quill.history.undo();\n}\nfunction redoChange() {\n    this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n    \"arial\",\n    \"comic-sans\",\n    \"courier-new\",\n    \"georgia\",\n    \"helvetica\",\n    \"lucida\"\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nconst modules = {\n    toolbar: {\n        container: \"#toolbar\",\n        handlers: {\n            undo: undoChange,\n            redo: redoChange\n        }\n    },\n    history: {\n        delay: 500,\n        maxStack: 100,\n        userOnly: true\n    }\n};\n\n// Formats objects for setting up the Quill editor\nconst formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"align\",\n    \"strike\",\n    \"script\",\n    \"blockquote\",\n    \"background\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"color\",\n    \"code-block\"\n];\n\n// Quill Toolbar component\nconst QuillToolbar = () => (\n    <div id=\"toolbar\" className=\"toolbar\">\n        <span className=\"ql-formats\">\n            <select className=\"ql-size\" defaultValue=\"medium\">\n                <option value=\"extra-small\">Size 1</option>\n                <option value=\"small\">Size 2</option>\n                <option value=\"medium\">Size 3</option>\n                <option value=\"large\">Size 4</option>\n            </select>\n            <select className=\"ql-header\" defaultValue=\"3\">\n                <option value=\"1\">Heading</option>\n                <option value=\"2\">Subheading</option>\n                <option value=\"3\">Normal</option>\n            </select>\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n        </span>\n        <span className=\"ql-formats\">\n            <select className=\"ql-align\" />\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n                <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n                <CustomRedo />\n            </button>\n        </span>\n    </div>\n);\n\n\nexport default PostSection\n","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx",["376"],"import React, { useState, useEffect, useContext } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    PostContainer,\n    PostImage,\n    PostContent,\n    Options,\n    UpdateButton,\n    DeleteButton\n} from './blog-posts.styles'\n\nconst BlogPosts = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { getPosts, posts, postsCount, handlePostDelete } = useContext(BlogContext)\n    const { push } = useHistory()\n    const [searchQuery, setSearchQuery] = useState('')\n    const items = [\n        {\n            id: 0,\n            name: \"Dátum pridania\"\n        },\n        {\n            id: 1,\n            name: \"Abecedne\"\n        },\n    ]\n\n    const [activeIndex, setActiveIndex] = useState(0)\n\n    useEffect(() => {\n        if (!posts) {\n            getPosts(items[activeIndex])\n        }\n    }, [posts])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('blog/novy-prispevok')}\n                count={postsCount}\n                title=\"Blog\"\n            />\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                {\n                    posts && posts.length ? posts.map(post => (\n                        <PostContainer key={post._id}>\n                            <PostImage>\n                                {post.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${post.image.imagePath}`} alt={post.image.alt} />}\n                            </PostImage>\n                            <PostContent>\n                                <h2>{post.name}</h2>\n                                <p>{post.description}</p>\n                            </PostContent>\n                            <Options>\n                                <UpdateButton onClick={() => push(`blog/${post._id}`)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={() => handlePostDelete(post._id)}>Vymazať</DeleteButton>\n                            </Options>\n                        </PostContainer>\n                    )) : (\n                            <div>\n                                Žiadne príspevky\n                            </div>\n                        )\n                }\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BlogPosts\n","/imooptik-frontend/src/sections/booking/booking.section.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.queries.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx",[],"/imooptik-frontend/src/context/user/user.queries.jsx",[],"/imooptik-frontend/src/context/image/image.queries.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.component.jsx",[],"/imooptik-frontend/src/components/popup/pop.up.styles.jsx",[],"/imooptik-frontend/src/context/blog/blog.queries.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx",[],"/imooptik-frontend/src/sections/customers/customers.styles.jsx",[],"/imooptik-frontend/src/sections/analytics/analytics.styles.jsx",[],"/imooptik-frontend/src/sections/product/product.styles.jsx",[],"/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx",[],"/imooptik-frontend/src/sections/post/post.styles.jsx",[],"/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx",[],"/imooptik-frontend/src/sections/booking/booking.styles.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.component.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.component.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.component.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.component.jsx",[],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx",[],"/imooptik-frontend/src/components/pagination/pagination.component.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.component.jsx",["377","378","379","380","381"],"import React, { useEffect, useContext, useState, useRef } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\nimport CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    const getCropData = async (e) => {\n        e.preventDefault()\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            // if (typeof cropper !== 'undefined') {\n            toDataUrl(imgUrl, async (imgData) => {\n                const data = await handleImage(imgData, imageName, imageAlt)\n\n                if (data.image) {\n                    setImage(data.image._id)\n                    setSelectedImage(data.image)\n                    getImages()\n                    close()\n                }\n            })\n\n            // }\n            setShowModal(false)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n        closeModal()\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Orezať a nahrať</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx",["382"],"import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport ProductInputRow from '../product-input-row/product-input-row.component'\n\nimport {\n    TextareaRow,\n    CustomSelect,\n    Title,\n    CategoryContainer,\n    CategoryCheckbox,\n    CategoryTitle,\n} from './product-glasses-form.styles.jsx'\n\nimport { brands } from '../../context/warehouse/warehouse.utils'\n\nconst ProductGlassesForm = ({ product, handleChange, handleSizeChange, handleSpecsChange, handleAvailableChange, categories, handleCategoryChange, activeCategoryIndex }) => {\n\n    return (\n        <React.Fragment>\n\n            <div>\n                <CategoryTitle>Kategória</CategoryTitle>\n                <CategoryContainer>\n                    {\n                        categories.map((category, idx) => {\n                            return (\n                                <CategoryCheckbox\n                                    key={idx}\n                                    label={category.name}\n                                    value={category.value}\n                                    name='type'\n                                    isActive={category.value === activeCategoryIndex}\n                                    handleClick={() => handleCategoryChange(category.value)}\n                                />\n                            )\n                        })\n                    }\n                </CategoryContainer>\n            </div>\n            <div>\n\n                <h3>Základné informacie</h3>\n                <ProductInputRow\n                    label=\"Unikátny kód produktu\"\n                    example=\"napr: TH1590807\"\n                >\n                    <CustomInput\n                        label=\"Ean kód*\"\n                        type='text'\n                        name='eanCode'\n                        value={product.eanCode}\n                        handleChange={(e) => handleChange(e)}\n                        required\n                    />\n                </ProductInputRow>\n                <ProductInputRow\n                    label=\"Názov produktu\"\n                    example=\"napr: Tommy Hilfiger\"\n                >\n                    <CustomInput\n                        label=\"Názov*\"\n                        type='text'\n                        name='name'\n                        value={product.name}\n                        handleChange={(e) => handleChange(e)}\n                        required\n\n                    />\n                </ProductInputRow>\n                <ProductInputRow\n                    label=\"Značka\"\n                    example=\"napr: Tommy Hilfiger\"\n                >\n                    <CustomInput\n                        label=\"Značka\"\n                        type='text'\n                        name='brand'\n                        value={product.brand}\n                        handleChange={(e) => handleChange(e)}\n                        list={\"brands\"}\n                        autoComplete='off'\n                    />\n                    <datalist id=\"brands\">\n                        {brands.map(brand => (\n                            <option key={brand} value={brand} />\n                        ))}\n                    </datalist>\n                </ProductInputRow>\n                <ProductInputRow\n                    label=\"Cena v centoch\"\n                    example=\"napr: 1055 = 10,55€\"\n                >\n                    <CustomInput\n                        label=\"Cena*\"\n                        type='number'\n                        name='price'\n                        value={product.price.toString()}\n                        handleChange={(e) => handleChange(e)}\n                        required\n\n                    />\n                </ProductInputRow>\n                <TextareaRow>\n                    <div>\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={product.description}\n                            handleChange={(e) => handleChange(e)}\n                        />\n                    </div>\n                    <div>\n                        <p>Popis produktu</p>\n                    </div>\n                </TextareaRow>\n\n\n\n                {\n                    !(product.type === 5 || product.type === 4) && (\n                        <React.Fragment>\n                            <h3>Špecifikacie</h3>\n                            <ProductInputRow\n                                label=\"Farebný kód produktu\"\n                                example=\"napr: #000000\"\n                            >\n                                <CustomInput\n                                    label=\"Color code\"\n                                    type='text'\n                                    name='colorCode'\n                                    value={product.colorCode}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Pohlavie pre ktoré je produkt určený\"\n                                example=\"\"\n                            >\n                                <CustomSelect name='sex' value={product.specs.sex} onChange={e => handleSpecsChange(e)}>\n                                    <option value='M'>Muži</option>\n                                    <option value='W'>Ženy</option>\n                                    <option value='U'>Nezáleží</option>\n                                </CustomSelect>\n                            </ProductInputRow>\n\n                            <ProductInputRow\n                                label=\"Farba\"\n                                example=\"napr: Čierna\"\n                            >\n                                <CustomInput\n                                    label=\"Farba rámu\"\n                                    type='text'\n                                    name='frameColor'\n                                    value={product.specs.frameColor}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Materiál\"\n                                example=\"napr: Titán\"\n                            >\n                                <CustomInput\n                                    label=\"Materiál rámu\"\n                                    type='text'\n                                    name='frameMaterial'\n                                    value={product.specs.frameMaterial}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Tvar\"\n                                example=\"napr: Okruhlý\"\n                            >\n                                <CustomInput\n                                    label=\"Tvar rámu\"\n                                    type='text'\n                                    name='frameStyle'\n                                    value={product.specs.frameStyle}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n                            <ProductInputRow\n                                label=\"Farba skla\"\n                                example=\"napr: Priehľadná\"\n                            >\n                                <CustomInput\n                                    label=\"Farba\"\n                                    type='text'\n                                    name='lensColor'\n                                    value={product.specs.lensColor}\n                                    handleChange={(e) => handleSpecsChange(e)}\n                                />\n                            </ProductInputRow>\n\n                            <Title>Velikosť</Title>\n\n                            {product.specs.size.map((value, idx) => {\n                                return (\n                                    <ProductInputRow\n                                        key={idx}\n                                        label={`Velkosť`}\n                                        example=\"napr: 0\"\n                                    >\n                                        <CustomInput\n                                            label={`${idx}`}\n                                            type='number'\n                                            // name={store.name}\n                                            value={value.toString()}\n                                            handleChange={e => handleSizeChange(e, idx)}\n                                        />\n                                    </ProductInputRow>\n                                )\n                            })}\n                        </React.Fragment>\n                    )\n                }\n\n                <Title>Skladové zásoby</Title>\n                {product && product.available.map((value, idx) => {\n                    if (product.available.length - 1 === idx) return\n\n                    return (\n                        <ProductInputRow\n                            key={idx}\n                            label={`Počet kusov na predajni ${idx}`}\n                            example=\"napr: 0\"\n                        >\n                            <CustomInput\n                                label={`Predajna ${idx}`}\n                                type='number'\n                                // name={store.name}\n                                value={value.toString()}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        </ProductInputRow>\n                    )\n                })}\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default ProductGlassesForm\n","/imooptik-frontend/src/components/calendar/calendar.component.jsx",[],"/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.styles.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.styles.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx",[],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/pagination/pagination.styles.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx",[],"/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx",[],"/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx",[],"/imooptik-frontend/src/context/user/user.utils.jsx",[],"/imooptik-frontend/src/components/user-form/user-form.component.jsx",[],"/imooptik-frontend/src/components/user-form/user.form-styles.jsx",[],"/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx",[],"/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx",[],"/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx",[],{"ruleId":"383","severity":1,"message":"384","line":170,"column":8,"nodeType":"385","endLine":170,"endColumn":32,"suggestions":"386"},{"ruleId":"387","severity":1,"message":"388","line":4,"column":23,"nodeType":"389","messageId":"390","endLine":4,"endColumn":34},{"ruleId":"387","severity":1,"message":"391","line":31,"column":19,"nodeType":"389","messageId":"390","endLine":31,"endColumn":27},{"ruleId":"392","replacedBy":"393"},{"ruleId":"394","replacedBy":"395"},{"ruleId":"387","severity":1,"message":"396","line":28,"column":9,"nodeType":"389","messageId":"390","endLine":28,"endColumn":19},{"ruleId":"387","severity":1,"message":"397","line":1,"column":39,"nodeType":"389","messageId":"390","endLine":1,"endColumn":48},{"ruleId":"387","severity":1,"message":"398","line":15,"column":21,"nodeType":"389","messageId":"390","endLine":15,"endColumn":32},{"ruleId":"383","severity":1,"message":"399","line":45,"column":8,"nodeType":"385","endLine":45,"endColumn":15,"suggestions":"400"},{"ruleId":"387","severity":1,"message":"401","line":33,"column":9,"nodeType":"389","messageId":"390","endLine":33,"endColumn":15},{"ruleId":"383","severity":1,"message":"402","line":89,"column":8,"nodeType":"385","endLine":89,"endColumn":36,"suggestions":"403"},{"ruleId":"383","severity":1,"message":"404","line":95,"column":8,"nodeType":"385","endLine":95,"endColumn":10,"suggestions":"405"},{"ruleId":"387","severity":1,"message":"406","line":102,"column":29,"nodeType":"389","messageId":"390","endLine":102,"endColumn":47},{"ruleId":"387","severity":1,"message":"407","line":24,"column":5,"nodeType":"389","messageId":"390","endLine":24,"endColumn":21},{"ruleId":"387","severity":1,"message":"408","line":25,"column":5,"nodeType":"389","messageId":"390","endLine":25,"endColumn":27},{"ruleId":"383","severity":1,"message":"409","line":112,"column":8,"nodeType":"385","endLine":112,"endColumn":12,"suggestions":"410"},{"ruleId":"383","severity":1,"message":"411","line":119,"column":8,"nodeType":"385","endLine":119,"endColumn":10,"suggestions":"412"},{"ruleId":"383","severity":1,"message":"413","line":63,"column":8,"nodeType":"385","endLine":63,"endColumn":12,"suggestions":"414"},{"ruleId":"383","severity":1,"message":"415","line":70,"column":8,"nodeType":"385","endLine":70,"endColumn":10,"suggestions":"416"},{"ruleId":"383","severity":1,"message":"417","line":69,"column":8,"nodeType":"385","endLine":69,"endColumn":12,"suggestions":"418"},{"ruleId":"383","severity":1,"message":"419","line":84,"column":8,"nodeType":"385","endLine":84,"endColumn":14,"suggestions":"420"},{"ruleId":"383","severity":1,"message":"421","line":47,"column":8,"nodeType":"385","endLine":47,"endColumn":15,"suggestions":"422"},{"ruleId":"387","severity":1,"message":"423","line":1,"column":50,"nodeType":"389","messageId":"390","endLine":1,"endColumn":56},{"ruleId":"387","severity":1,"message":"424","line":8,"column":8,"nodeType":"389","messageId":"390","endLine":8,"endColumn":20},{"ruleId":"387","severity":1,"message":"425","line":86,"column":11,"nodeType":"389","messageId":"390","endLine":86,"endColumn":22},{"ruleId":"426","severity":1,"message":"427","line":148,"column":41,"nodeType":"428","endLine":148,"endColumn":61},{"ruleId":"426","severity":1,"message":"427","line":189,"column":45,"nodeType":"428","endLine":189,"endColumn":160},{"ruleId":"429","severity":1,"message":"430","line":223,"column":63,"nodeType":"431","messageId":"432","endLine":223,"endColumn":69},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.","ArrayExpression",["433"],"no-unused-vars","'fetchImages' is defined but never used.","Identifier","unusedVar","'setLimit' is assigned a value but never used.","no-native-reassign",["434"],"no-negated-in-lhs",["435"],"'closeModal' is assigned a value but never used.","'useEffect' is defined but never used.","'currentUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["436"],"'lenses' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'closeModal', 'getLenses', 'getProducts', and 'message'. Either include them or remove the dependency array.",["437"],"React Hook useEffect has a missing dependency: 'filteredItems'. Either include it or remove the dependency array.",["438"],"'setProductsPerPage' is assigned a value but never used.","'ToggleFormButton' is defined but never used.","'ToggleOptionsContainer' is defined but never used.","React Hook useEffect has missing dependencies: 'formToShow', 'getSigleLenses', and 'getSingleProduct'. Either include them or remove the dependency array.",["439"],"React Hook useEffect has a missing dependency: 'resetProduct'. Either include it or remove the dependency array.",["440"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["441"],"React Hook useEffect has a missing dependency: 'resetUser'. Either include it or remove the dependency array.",["442"],"React Hook useEffect has missing dependencies: 'getPost' and 'setSelectedImage'. Either include them or remove the dependency array.",["443"],"React Hook useEffect has a missing dependency: 'setSelectedImage'. Either include it or remove the dependency array.",["444"],"React Hook useEffect has missing dependencies: 'activeIndex', 'getPosts', and 'items'. Either include them or remove the dependency array.",["445"],"'useRef' is defined but never used.","'CustomButton' is defined but never used.","'getCropData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",{"desc":"446","fix":"447"},"no-global-assign","no-unsafe-negation",{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},"Update the dependencies array to be: [user, user.fName, user.lName]",{"range":"468","text":"469"},"Update the dependencies array to be: [getUsers, users]",{"range":"470","text":"471"},"Update the dependencies array to be: [products, lensesArr, token, message, getProducts, getLenses, closeModal]",{"range":"472","text":"473"},"Update the dependencies array to be: [filteredItems]",{"range":"474","text":"475"},"Update the dependencies array to be: [formToShow, getSigleLenses, getSingleProduct, id]",{"range":"476","text":"477"},"Update the dependencies array to be: [resetProduct]",{"range":"478","text":"479"},"Update the dependencies array to be: [getUser, id]",{"range":"480","text":"481"},"Update the dependencies array to be: [resetUser]",{"range":"482","text":"483"},"Update the dependencies array to be: [getPost, id, setSelectedImage]",{"range":"484","text":"485"},"Update the dependencies array to be: [post, setSelectedImage]",{"range":"486","text":"487"},"Update the dependencies array to be: [activeIndex, getPosts, items, posts]",{"range":"488","text":"489"},[3872,3896],"[user, user.fName, user.lName]",[1243,1250],"[getUsers, users]",[2400,2428],"[products, lensesArr, token, message, getProducts, getLenses, closeModal]",[2554,2556],"[filteredItems]",[3104,3108],"[formToShow, getSigleLenses, getSingleProduct, id]",[3235,3237],"[resetProduct]",[1721,1725],"[getUser, id]",[1849,1851],"[resetUser]",[2185,2189],"[getPost, id, setSelectedImage]",[2584,2590],"[post, setSelectedImage]",[1376,1383],"[activeIndex, getPosts, items, posts]"]
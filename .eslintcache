[{"/imooptik-frontend/src/index.js":"1","/imooptik-frontend/src/reportWebVitals.js":"2","/imooptik-frontend/src/App.jsx":"3","/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx":"4","/imooptik-frontend/src/context/auth/auth.context.jsx":"5","/imooptik-frontend/src/global.styles.jsx":"6","/imooptik-frontend/src/components/popup/pop-up.component.jsx":"7","/imooptik-frontend/src/pages/dashboard/dashboard.jsx":"8","/imooptik-frontend/src/pages/reset-password/reset-password.jsx":"9","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx":"10","/imooptik-frontend/src/context/auth/auth.queries.jsx":"11","/imooptik-frontend/src/components/popup/pop.up.styles.jsx":"12","/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx":"13","/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx":"14","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx":"15","/imooptik-frontend/src/components/custom-button/custom-button.component.jsx":"16","/imooptik-frontend/src/components/spinner/spinner.component.jsx":"17","/imooptik-frontend/src/context/user/user.context.jsx":"18","/imooptik-frontend/src/components/sidenav/sidenav.component.jsx":"19","/imooptik-frontend/src/context/image/image.context.jsx":"20","/imooptik-frontend/src/context/booking/booking.context.jsx":"21","/imooptik-frontend/src/context/warehouse/warehouse.context.jsx":"22","/imooptik-frontend/src/context/orders/orders.context.jsx":"23","/imooptik-frontend/src/components/custom-input/custom-input.component.jsx":"24","/imooptik-frontend/src/context/coupons/coupons.context.jsx":"25","/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx":"26","/imooptik-frontend/src/components/sign-in/sign-in.component.jsx":"27","/imooptik-frontend/src/context/blog/blog.context.jsx":"28","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx":"29","/imooptik-frontend/src/sections/orders/orders.section.jsx":"30","/imooptik-frontend/src/sections/customers/customers.section.jsx":"31","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx":"32","/imooptik-frontend/src/sections/analytics/analytics.section.jsx":"33","/imooptik-frontend/src/sections/booking/booking.section.jsx":"34","/imooptik-frontend/src/sections/product/product.section.jsx":"35","/imooptik-frontend/src/sections/calendar/calendar.section.jsx":"36","/imooptik-frontend/src/sections/order/order.section.jsx":"37","/imooptik-frontend/src/sections/post/post.section.jsx":"38","/imooptik-frontend/src/sections/coupon/coupon.section.jsx":"39","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx":"40","/imooptik-frontend/src/sections/coupons/coupons.section.jsx":"41","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx":"42","/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx":"43","/imooptik-frontend/src/components/spinner/spinner.styles.jsx":"44","/imooptik-frontend/src/context/user/user.utils.jsx":"45","/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx":"46","/imooptik-frontend/src/context/image/image.queries.jsx":"47","/imooptik-frontend/src/context/booking/booking.utils.jsx":"48","/imooptik-frontend/src/context/user/user.queries.jsx":"49","/imooptik-frontend/src/context/booking/booking.queries.jsx":"50","/imooptik-frontend/src/context/warehouse/warehouse.queries.jsx":"51","/imooptik-frontend/src/context/orders/orders.utils.jsx":"52","/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx":"53","/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx":"54","/imooptik-frontend/src/context/orders/orders.queries.jsx":"55","/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx":"56","/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx":"57","/imooptik-frontend/src/context/blog/blog.queries.jsx":"58","/imooptik-frontend/src/sections/customers/customers.styles.jsx":"59","/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx":"60","/imooptik-frontend/src/sections/orders/orders.styles.jsx":"61","/imooptik-frontend/src/sections/analytics/analytics.styles.jsx":"62","/imooptik-frontend/src/sections/booking/booking.styles.jsx":"63","/imooptik-frontend/src/sections/product/product.styles.jsx":"64","/imooptik-frontend/src/sections/coupons/coupons.styles.jsx":"65","/imooptik-frontend/src/sections/coupon/coupon.styles.jsx":"66","/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx":"67","/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx":"68","/imooptik-frontend/src/sections/post/post.styles.jsx":"69","/imooptik-frontend/src/sections/order/order.styles.jsx":"70","/imooptik-frontend/src/sections/calendar/calendar.styles.jsx":"71","/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx":"72","/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx":"73","/imooptik-frontend/src/components/pagination/pagination.component.jsx":"74","/imooptik-frontend/src/components/section-header/section-header.component.jsx":"75","/imooptik-frontend/src/hooks/useFetch.jsx":"76","/imooptik-frontend/src/components/product-overview/product-overview.component.jsx":"77","/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx":"78","/imooptik-frontend/src/hooks/useOutsideAlerter.jsx":"79","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx":"80","/imooptik-frontend/src/components/calendar/calendar.component.jsx":"81","/imooptik-frontend/src/components/user-form/user-form.component.jsx":"82","/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx":"83","/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx":"84","/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx":"85","/imooptik-frontend/src/components/modal-images/modal-images.component.jsx":"86","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx":"87","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx":"88","/imooptik-frontend/src/components/order-address-form/order-address-form.component.jsx":"89","/imooptik-frontend/src/components/combined-product-overview/combined-product-overview.component.jsx":"90","/imooptik-frontend/src/sections/order/sub-sections/summary/summary.sub-section.jsx":"91","/imooptik-frontend/src/sections/order/sub-sections/lenses/lenses.sub-section.jsx":"92","/imooptik-frontend/src/sections/order/sub-sections/eshop/eshop.sub-section.jsx":"93","/imooptik-frontend/src/sections/order/sub-sections/diopters/diopters.seb-section.jsx":"94","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx":"95","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx":"96","/imooptik-frontend/src/components/pagination/pagination.styles.jsx":"97","/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx":"98","/imooptik-frontend/src/components/section-header/section-header.styles.jsx":"99","/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx":"100","/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx":"101","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx":"102","/imooptik-frontend/src/components/user-form/user.form-styles.jsx":"103","/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx":"104","/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx":"105","/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx":"106","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx":"107","/imooptik-frontend/src/components/calendar/calendar.styles.jsx":"108","/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx":"109","/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx":"110","/imooptik-frontend/src/components/combined-product-overview/combined-product-overview.styles.jsx":"111","/imooptik-frontend/src/components/order-address-form/order-address-form.styles.jsx":"112","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx":"113","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx":"114","/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx":"115","/imooptik-frontend/src/components/modal-info-container/modal-info-container.component.jsx":"116","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx":"117","/imooptik-frontend/src/components/order-product-overview/order-product-overview.component.jsx":"118","/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx":"119","/imooptik-frontend/src/components/order-lenses-overview/order-lenses-overview.component.jsx":"120","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx":"121","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx":"122","/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx":"123","/imooptik-frontend/src/components/modal-info-container/modal-info-container.styles.jsx":"124","/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx":"125","/imooptik-frontend/src/components/order-lenses-overview/order-lenses-overview.styles.jsx":"126","/imooptik-frontend/src/components/order-product-overview/order-product-overview.styles.jsx":"127"},{"size":717,"mtime":1608670306490,"results":"128","hashOfConfig":"129"},{"size":362,"mtime":1608191294784,"results":"130","hashOfConfig":"129"},{"size":1338,"mtime":1611164952090,"results":"131","hashOfConfig":"129"},{"size":1076,"mtime":1610126635393,"results":"132","hashOfConfig":"129"},{"size":5741,"mtime":1611711693646,"results":"133","hashOfConfig":"129"},{"size":888,"mtime":1611365536654,"results":"134","hashOfConfig":"129"},{"size":714,"mtime":1609965412857,"results":"135","hashOfConfig":"129"},{"size":8287,"mtime":1611710594926,"results":"136","hashOfConfig":"129"},{"size":1667,"mtime":1608613259561,"results":"137","hashOfConfig":"129"},{"size":840,"mtime":1609978179243,"results":"138","hashOfConfig":"129"},{"size":2292,"mtime":1610635788267,"results":"139","hashOfConfig":"129"},{"size":677,"mtime":1610074517686,"results":"140","hashOfConfig":"129"},{"size":548,"mtime":1610227196940,"results":"141","hashOfConfig":"129"},{"size":772,"mtime":1610476886850,"results":"142","hashOfConfig":"129"},{"size":506,"mtime":1608208021900,"results":"143","hashOfConfig":"129"},{"size":283,"mtime":1608325857586,"results":"144","hashOfConfig":"129"},{"size":178,"mtime":1608409397640,"results":"145","hashOfConfig":"129"},{"size":11646,"mtime":1611714772126,"results":"146","hashOfConfig":"129"},{"size":2301,"mtime":1610505203270,"results":"147","hashOfConfig":"129"},{"size":4412,"mtime":1610248621440,"results":"148","hashOfConfig":"129"},{"size":8166,"mtime":1611021415104,"results":"149","hashOfConfig":"129"},{"size":16434,"mtime":1611710594926,"results":"150","hashOfConfig":"129"},{"size":13078,"mtime":1611365536654,"results":"151","hashOfConfig":"129"},{"size":639,"mtime":1608689089980,"results":"152","hashOfConfig":"129"},{"size":7011,"mtime":1611198583300,"results":"153","hashOfConfig":"129"},{"size":1466,"mtime":1609978281513,"results":"154","hashOfConfig":"129"},{"size":1925,"mtime":1609978226453,"results":"155","hashOfConfig":"129"},{"size":4067,"mtime":1611078874170,"results":"156","hashOfConfig":"129"},{"size":6434,"mtime":1611710594936,"results":"157","hashOfConfig":"129"},{"size":7083,"mtime":1611365536654,"results":"158","hashOfConfig":"129"},{"size":4132,"mtime":1611711764736,"results":"159","hashOfConfig":"129"},{"size":3179,"mtime":1609802280536,"results":"160","hashOfConfig":"129"},{"size":1381,"mtime":1611710594936,"results":"161","hashOfConfig":"129"},{"size":6047,"mtime":1611015904774,"results":"162","hashOfConfig":"129"},{"size":7066,"mtime":1611092734330,"results":"163","hashOfConfig":"129"},{"size":7353,"mtime":1611020836214,"results":"164","hashOfConfig":"129"},{"size":15845,"mtime":1611710594936,"results":"165","hashOfConfig":"129"},{"size":9601,"mtime":1611079105190,"results":"166","hashOfConfig":"129"},{"size":4747,"mtime":1611198139490,"results":"167","hashOfConfig":"129"},{"size":810,"mtime":1610132345623,"results":"168","hashOfConfig":"129"},{"size":2319,"mtime":1611710594936,"results":"169","hashOfConfig":"129"},{"size":4555,"mtime":1611715735986,"results":"170","hashOfConfig":"129"},{"size":440,"mtime":1609635534260,"results":"171","hashOfConfig":"129"},{"size":377,"mtime":1608409635720,"results":"172","hashOfConfig":"129"},{"size":743,"mtime":1611711354136,"results":"173","hashOfConfig":"129"},{"size":4920,"mtime":1611193699560,"results":"174","hashOfConfig":"129"},{"size":1560,"mtime":1610106635382,"results":"175","hashOfConfig":"129"},{"size":328,"mtime":1611016532294,"results":"176","hashOfConfig":"129"},{"size":3530,"mtime":1611714709866,"results":"177","hashOfConfig":"129"},{"size":2775,"mtime":1611021490654,"results":"178","hashOfConfig":"129"},{"size":7970,"mtime":1610817806910,"results":"179","hashOfConfig":"129"},{"size":886,"mtime":1611365536654,"results":"180","hashOfConfig":"129"},{"size":1263,"mtime":1609635810480,"results":"181","hashOfConfig":"129"},{"size":3632,"mtime":1611183016840,"results":"182","hashOfConfig":"129"},{"size":3567,"mtime":1611103862750,"results":"183","hashOfConfig":"129"},{"size":880,"mtime":1609978233033,"results":"184","hashOfConfig":"129"},{"size":898,"mtime":1609978275513,"results":"185","hashOfConfig":"129"},{"size":1793,"mtime":1608678905090,"results":"186","hashOfConfig":"129"},{"size":907,"mtime":1611428959746,"results":"187","hashOfConfig":"129"},{"size":1658,"mtime":1609636415920,"results":"188","hashOfConfig":"129"},{"size":2582,"mtime":1611710594956,"results":"189","hashOfConfig":"129"},{"size":753,"mtime":1608501615800,"results":"190","hashOfConfig":"129"},{"size":2027,"mtime":1610998962674,"results":"191","hashOfConfig":"129"},{"size":1535,"mtime":1610505951990,"results":"192","hashOfConfig":"129"},{"size":646,"mtime":1611710594936,"results":"193","hashOfConfig":"129"},{"size":739,"mtime":1611197918800,"results":"194","hashOfConfig":"129"},{"size":549,"mtime":1610145287903,"results":"195","hashOfConfig":"129"},{"size":728,"mtime":1610132354653,"results":"196","hashOfConfig":"129"},{"size":1711,"mtime":1609802520286,"results":"197","hashOfConfig":"129"},{"size":3094,"mtime":1611710594936,"results":"198","hashOfConfig":"129"},{"size":976,"mtime":1611019811904,"results":"199","hashOfConfig":"129"},{"size":624,"mtime":1609280754422,"results":"200","hashOfConfig":"129"},{"size":320,"mtime":1611163718930,"results":"201","hashOfConfig":"129"},{"size":834,"mtime":1609973813373,"results":"202","hashOfConfig":"129"},{"size":1121,"mtime":1611435701036,"results":"203","hashOfConfig":"129"},{"size":732,"mtime":1610906189000,"results":"204","hashOfConfig":"129"},{"size":1287,"mtime":1610753699800,"results":"205","hashOfConfig":"129"},{"size":3152,"mtime":1611179300330,"results":"206","hashOfConfig":"129"},{"size":1400,"mtime":1611365536654,"results":"207","hashOfConfig":"129"},{"size":745,"mtime":1611011495664,"results":"208","hashOfConfig":"129"},{"size":4040,"mtime":1611351882774,"results":"209","hashOfConfig":"129"},{"size":11231,"mtime":1611713943086,"results":"210","hashOfConfig":"129"},{"size":11161,"mtime":1611179076600,"results":"211","hashOfConfig":"129"},{"size":425,"mtime":1609365301650,"results":"212","hashOfConfig":"129"},{"size":651,"mtime":1608506295620,"results":"213","hashOfConfig":"129"},{"size":8363,"mtime":1611078296630,"results":"214","hashOfConfig":"129"},{"size":354,"mtime":1610748624680,"results":"215","hashOfConfig":"129"},{"size":681,"mtime":1610146980773,"results":"216","hashOfConfig":"129"},{"size":5090,"mtime":1610993970474,"results":"217","hashOfConfig":"129"},{"size":3430,"mtime":1611087918710,"results":"218","hashOfConfig":"129"},{"size":6153,"mtime":1611087650750,"results":"219","hashOfConfig":"129"},{"size":957,"mtime":1610814820630,"results":"220","hashOfConfig":"129"},{"size":1347,"mtime":1610681874760,"results":"221","hashOfConfig":"129"},{"size":853,"mtime":1611169886100,"results":"222","hashOfConfig":"129"},{"size":3764,"mtime":1611176185940,"results":"223","hashOfConfig":"129"},{"size":13336,"mtime":1611183384230,"results":"224","hashOfConfig":"129"},{"size":646,"mtime":1609973838353,"results":"225","hashOfConfig":"129"},{"size":487,"mtime":1611163742900,"results":"226","hashOfConfig":"129"},{"size":953,"mtime":1609636181490,"results":"227","hashOfConfig":"129"},{"size":2089,"mtime":1610753900350,"results":"228","hashOfConfig":"129"},{"size":718,"mtime":1608401951890,"results":"229","hashOfConfig":"129"},{"size":878,"mtime":1610911669420,"results":"230","hashOfConfig":"129"},{"size":2117,"mtime":1611710989406,"results":"231","hashOfConfig":"129"},{"size":447,"mtime":1609638204590,"results":"232","hashOfConfig":"129"},{"size":1315,"mtime":1611192415580,"results":"233","hashOfConfig":"129"},{"size":3851,"mtime":1610125616673,"results":"234","hashOfConfig":"129"},{"size":554,"mtime":1609636648760,"results":"235","hashOfConfig":"129"},{"size":1158,"mtime":1610914847120,"results":"236","hashOfConfig":"129"},{"size":640,"mtime":1611175737610,"results":"237","hashOfConfig":"129"},{"size":1062,"mtime":1608505999020,"results":"238","hashOfConfig":"129"},{"size":1185,"mtime":1610907949400,"results":"239","hashOfConfig":"129"},{"size":1099,"mtime":1610990277244,"results":"240","hashOfConfig":"129"},{"size":486,"mtime":1610505703940,"results":"241","hashOfConfig":"129"},{"size":743,"mtime":1610846076230,"results":"242","hashOfConfig":"129"},{"size":4645,"mtime":1611713041466,"results":"243","hashOfConfig":"129"},{"size":1273,"mtime":1610909047880,"results":"244","hashOfConfig":"129"},{"size":1316,"mtime":1610505761880,"results":"245","hashOfConfig":"129"},{"size":892,"mtime":1610813978120,"results":"246","hashOfConfig":"129"},{"size":341,"mtime":1610810143010,"results":"247","hashOfConfig":"129"},{"size":954,"mtime":1610814753950,"results":"248","hashOfConfig":"129"},{"size":596,"mtime":1609639013590,"results":"249","hashOfConfig":"129"},{"size":989,"mtime":1610837219950,"results":"250","hashOfConfig":"129"},{"size":1973,"mtime":1611428959716,"results":"251","hashOfConfig":"129"},{"size":759,"mtime":1610908904010,"results":"252","hashOfConfig":"129"},{"size":294,"mtime":1610810084190,"results":"253","hashOfConfig":"129"},{"size":851,"mtime":1610908450880,"results":"254","hashOfConfig":"129"},{"size":1357,"mtime":1610908432460,"results":"255","hashOfConfig":"129"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},"1lk1amn",{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"258"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"258"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"258"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"258"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"258"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"258"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"258"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"258"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"258"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"258"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"258"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"258"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"258"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"258"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"258"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"258"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"258"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"258"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"258"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"440","messages":"441","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"258"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"258"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"258"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"509","messages":"510","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"258"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},"/imooptik-frontend/src/index.js",[],["534","535"],"/imooptik-frontend/src/reportWebVitals.js",[],"/imooptik-frontend/src/App.jsx",[],"/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx",[],"/imooptik-frontend/src/context/auth/auth.context.jsx",[],"/imooptik-frontend/src/global.styles.jsx",[],"/imooptik-frontend/src/components/popup/pop-up.component.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset-password.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx",[],"/imooptik-frontend/src/context/auth/auth.queries.jsx",[],"/imooptik-frontend/src/components/popup/pop.up.styles.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.component.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.component.jsx",[],"/imooptik-frontend/src/context/user/user.context.jsx",["536","537","538"],"/imooptik-frontend/src/components/sidenav/sidenav.component.jsx",[],"/imooptik-frontend/src/context/image/image.context.jsx",["539","540"],"import React, { createContext, useState, useContext } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\nimport { deleteImage, fetchImages, uploadImage, fetchFilteredImages } from './image.queries'\n\nexport const ImageContext = createContext({\n    isDisabled: false,\n    images: null,\n    selectedImage: null,\n    getImages: () => { },\n    handleImage: () => { },\n    handleDeleteImage: () => { },\n    setSelectedImage: () => { },\n    getNextImages: () => { },\n    getPrevImage: () => { }\n})\n\nconst ImageProvider = ({ children }) => {\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const { token } = useContext(AuthContext)\n\n    const [isDisabled, setIsDisabled] = useState(false)\n    const [images, setImages] = useState(null)\n    const [selectedImage, setSelectedImage] = useState(null)\n    const [limit, setLimit] = useState(4)\n    const [skip, setSkip] = useState(0)\n\n    const handleImage = async (img, imgName, imgAlt, setImage, close) => {\n        setShowModal(true)\n        setIsLoading(true)\n        setIsDisabled(true)\n\n        try {\n            const response = await uploadImage(token, img, imgName, imgAlt)\n            const data = await response.json()\n            console.log(data)\n\n            if (data.image) {\n                setSelectedImage(data.image)\n                setImage(data.image._id)\n                getImages()\n                close()\n            }\n\n            setShowModal(false)\n            setIsLoading(false)\n            setIsDisabled(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n            setIsDisabled(false)\n        }\n    }\n\n    const getNextImages = async (addToSkip) => {\n        try {\n            if (images.length !== limit) return\n\n            const response = await fetchFilteredImages(token, limit, skip + addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip + addToSkip)\n            }\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getPrevImage = async (addToSkip) => {\n        if (skip === 0) return\n        try {\n            const response = await fetchFilteredImages(token, limit, skip - addToSkip)\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n\n                setSkip(skip - addToSkip)\n\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getImages = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            // const response = await fetchImages()\n            const response = await fetchFilteredImages(token, limit, skip)\n\n            const data = await response.json()\n\n            if (data.images) {\n                setImages(data.images)\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n            closeModal()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleDeleteImage = async (id, e) => {\n        e.preventDefault()\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const respone = await deleteImage(token, id)\n            const data = await respone.json()\n\n            getMessage(data.message)\n            setIsLoading(false)\n            getImages()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <ImageContext.Provider\n            value={{\n                isDisabled,\n                images,\n                selectedImage,\n                getImages,\n                handleImage,\n                handleDeleteImage,\n                setSelectedImage,\n                getNextImages,\n                getPrevImage\n            }}\n        >\n            {children}\n        </ImageContext.Provider>\n    )\n}\n\nexport default ImageProvider","/imooptik-frontend/src/context/booking/booking.context.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.context.jsx",[],"/imooptik-frontend/src/context/orders/orders.context.jsx",["541","542"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\n\nimport {\n    initCombinedProductObj,\n    paymentOptionsArr,\n    stepsArr,\n    tabItems\n} from './orders.utils'\nimport { initUserObj, } from '../user/user.utils'\n\n\nimport {\n    fetchOrders,\n    postOrder,\n    postCombinedProduct,\n    fetchUserOrder,\n    postFulfill,\n    postFinish\n} from './orders.queries'\n\nexport const OrdersContext = createContext({\n    selectedUser: null,\n    setSelectedUser: () => { },\n    hasAddress: false,\n    isDifferentAddress: false,\n    setIsDifferentAddress: () => { },\n    overwrite: {},\n    coupon: '',\n    setCoupon: () => { },\n    handleOverwriteChange: () => { },\n    handleChangeSelectedUser: () => { },\n    isSearchingUser: false,\n    handleSelectUser: () => { },\n    orders: null,\n    getOrders: () => { },\n    productsToOrder: [],\n    selectedProduct: null,\n    selectedLenses: null,\n    combinedProduct: null,\n    paymentOptions: [],\n    deposit: 0,\n    setDeposit: () => { },\n    steps: [],\n    activeStep: '',\n    handleChangeStep: () => { },\n    selectedPayment: 0,\n    handleChangePayment: () => { },\n    handleSelectProduct: () => { },\n    handleSelectLenses: () => { },\n    handleRemoveProduct: () => { },\n    handleParameterChange: () => { },\n    createOrder: () => { },\n    createCombinedProduct: () => { },\n    getUserOrder: () => { },\n    isUpdating: false,\n    status: '',\n    orderPremises: 0,\n    resetOrder: () => { },\n    handleFulfill: () => { },\n    handleFinish: () => { }\n})\n\nconst OrdersProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token } = useContext(AuthContext)\n    const {\n        getMessage,\n        setIsLoading,\n        setShowModal,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const [isUpdating, setIsUpdating] = useState(false)\n    const [status, setStatus] = useState('')\n    const [orderPremises, setOrderPremises] = useState(0)\n\n    const [orders, setOrders] = useState(null)\n    const [productsToOrder, setProductsToOrder] = useState([])\n\n    const [selectedProduct, setSelectedProduct] = useState(null)\n    const [selectedLenses, setSelectedLenses] = useState(null)\n    const [combinedProduct, setCombinedProduct] = useState(initCombinedProductObj)\n    const paymentOptions = paymentOptionsArr\n    const steps = stepsArr\n    const [deposit, setDeposit] = useState(0)\n\n    const [coupon, setCoupon] = useState('')\n\n    const [selectedUser, setSelectedUser] = useState(initUserObj)\n    const [isSearchingUser, setIsSearchingUser] = useState(false)\n\n    const [hasAddress, setHasAddress] = useState(false)\n    const [isDifferentAddress, setIsDifferentAddress] = useState(false)\n    const [overwrite, setOverWrite] = useState({\n        address: '',\n        psc: '',\n        city: '',\n        country: ''\n    })\n\n    const handleOverwriteChange = (e) => {\n        const { name, value } = e.target\n        setOverWrite({\n            ...overwrite,\n            [name]: value\n        })\n    }\n\n    const handleChangeSelectedUser = (e) => {\n        const { name, value } = e.target\n        setIsSearchingUser(true)\n        setSelectedUser({\n            ...selectedUser,\n            [name]: value\n        })\n    }\n\n\n    const handleSelectUser = (user) => {\n        console.log(user)\n        setSelectedUser({\n            ...user\n        })\n        setIsSearchingUser(false)\n\n    }\n\n    const [activeStep, setActiveStep] = useState('eshop')\n    const handleChangeStep = (idx) => {\n        setActiveStep(steps[idx])\n    }\n\n    const [selectedPayment, setSelectedPayment] = useState(0)\n    const handleChangePayment = (e, idx) => {\n        e.preventDefault()\n        setSelectedPayment(idx)\n    }\n\n    const handleSelectProduct = (e, productToAdd) => {\n        e.preventDefault()\n        // setProductsToOrder([\n        //     ...productsToOrder,\n        //     productToAdd\n        // ])\n        setSelectedProduct(productToAdd)\n        setCombinedProduct({\n            ...combinedProduct,\n            product: productToAdd._id,\n            price: combinedProduct.price + productToAdd.price\n        })\n        if (productToAdd.type === 4) {\n            setActiveStep(steps[3])\n        } else if (productToAdd.type === 5) {\n            setActiveStep(steps[3])\n        } else {\n            setActiveStep(steps[1])\n        }\n    }\n\n    const handleSelectLenses = (e, lensesToAdd) => {\n        e.preventDefault()\n        setSelectedLenses(lensesToAdd)\n        setCombinedProduct({\n            ...combinedProduct,\n            lens: lensesToAdd._id,\n            price: combinedProduct.price + lensesToAdd.price\n\n        })\n        setActiveStep(steps[2])\n    }\n\n    const handleRemoveProduct = (e, productToRemove) => {\n        e.preventDefault()\n        setProductsToOrder(productsToOrder.filter((product) => product._id !== productToRemove._id))\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = combinedProduct.lenses[name]\n        arr[idx] = Number(value)\n        setCombinedProduct({\n            ...combinedProduct,\n            lenses: {\n                ...combinedProduct.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n\n    const resetOrder = () => {\n        console.log('reset order')\n        setStatus('')\n        setIsUpdating(false)\n        setSelectedPayment(0)\n        setDeposit(0)\n        setCoupon('')\n    }\n\n    const resetInput = () => {\n        setSelectedLenses(null)\n        setSelectedProduct(null)\n        setActiveStep('eshop')\n        setCombinedProduct(initCombinedProductObj)\n        setOverWrite({\n            address: '',\n            psc: '',\n            city: '',\n            country: ''\n        })\n    }\n\n    const getOrders = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetchOrders(token)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.orders) {\n                setOrders(data.orders)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n    }\n\n    const createOrder = async (user, combinedProducts) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let payment = 'paid'\n\n        if (selectedPayment === 2) {\n            payment = 'half-paid'\n        }\n\n\n        if (!isDifferentAddress) {\n            if (!selectedUser.address || !selectedUser.city || !selectedUser.psc || !selectedUser.country) {\n                getMessage(\"Chyba adressa\")\n                setIsLoading(false)\n                return\n            }\n        }\n\n        try {\n            const response = await postOrder(token, { user, combinedProducts }, isDifferentAddress, overwrite, coupon, deposit, payment, paymentOptions[selectedPayment].value)\n            if (response.status === 200) {\n                getMessage(\"Objednavkabola vytvorená\")\n            }\n\n            const data = await response.json()\n\n\n            if (data.order) {\n                resetInput()\n                push('/dashboard/objednavky')\n                getOrders()\n            }\n\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createCombinedProduct = async (combinedProductToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let productToAdd = {}\n\n        if (selectedProduct.type === 5) {\n            productToAdd = {\n                product: combinedProductToAdd.product,\n                // lens: \"\"\n            }\n        } else if (selectedProduct.type === 4) {\n            productToAdd = {\n                product: combinedProductToAdd.product,\n                // lenses: combinedProductToAdd.lenses\n            }\n        } else {\n            productToAdd = {\n                lenses: combinedProductToAdd.lenses,\n                product: combinedProductToAdd.product,\n                lens: combinedProductToAdd.lens,\n            }\n        }\n\n        try {\n            const response = await postCombinedProduct(productToAdd)\n            const data = await response.json()\n\n\n            if (data.combinedProduct) {\n\n                setProductsToOrder([\n                    ...productsToOrder,\n                    data.combinedProduct\n                ])\n                resetInput()\n                setIsLoading(false)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getUserOrder = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetchUserOrder(token, id)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.order) {\n                setIsUpdating(true)\n                setProductsToOrder(data.order.combinedProducts)\n                setStatus(data.order.status)\n                setOrderPremises(data.order.premises)\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n\n    const handleFulfill = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await postFulfill(token, id)\n            if (response.status === 400) {\n                getMessage(\"Objednávka nieje priradena k prevádzke\")\n\n            }\n            const data = await response.json()\n\n            console.log(data)\n            if (data.order) {\n\n                getOrders()\n                setIsLoading(false)\n                return\n            }\n\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n    const handleFinish = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await postFinish(token, id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.order) {\n                getOrders()\n                setIsLoading(false)\n                return\n            }\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (selectedUser) {\n            const { address, city, psc, country, phone } = selectedUser\n            if (address && city && psc && country && phone) {\n                setHasAddress(true)\n            } else {\n                setHasAddress(false)\n            }\n\n        }\n    }, [selectedUser])\n\n    useEffect(() => {\n        if (selectedUser) {\n            if (selectedUser.lenses) {\n                setCombinedProduct({\n                    ...combinedProduct,\n                    lenses: selectedUser.lenses\n                })\n            }\n        }\n    }, [selectedUser])\n\n\n\n    return (\n        <OrdersContext.Provider\n            value={{\n                selectedUser,\n                setSelectedUser,\n                hasAddress,\n                isDifferentAddress,\n                setIsDifferentAddress,\n                overwrite,\n                coupon,\n                setCoupon,\n                handleOverwriteChange,\n                handleChangeSelectedUser,\n                isSearchingUser,\n                handleSelectUser,\n                orders,\n                getOrders,\n                productsToOrder,\n                selectedProduct,\n                selectedLenses,\n                combinedProduct,\n                paymentOptions,\n                deposit,\n                setDeposit,\n                steps,\n                activeStep,\n                handleChangeStep,\n                selectedPayment,\n                handleChangePayment,\n                handleSelectProduct,\n                handleSelectLenses,\n                handleRemoveProduct,\n                handleParameterChange,\n                createOrder,\n                createCombinedProduct,\n                getUserOrder,\n                isUpdating,\n                status,\n                orderPremises,\n                resetOrder,\n                handleFulfill,\n                handleFinish\n            }}\n        >\n            {children}\n        </OrdersContext.Provider>\n    )\n}\n\nexport default OrdersProvider","/imooptik-frontend/src/components/custom-input/custom-input.component.jsx",[],"/imooptik-frontend/src/context/coupons/coupons.context.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.component.jsx",[],"/imooptik-frontend/src/context/blog/blog.context.jsx",["543"],"import React, { createContext, useState, useContext } from 'react'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport {\n    fetchPosts,\n    createNewPost,\n    fetchSinglePost,\n    updatePost,\n    deletePost,\n} from './blog.queries'\n\n\nexport const BlogContext = createContext({\n    posts: null,\n    post: null,\n    postsCount: 0,\n    getPosts: () => { },\n    createPost: () => { },\n    getPost: () => { },\n    handlePostUpdate: () => { },\n    handlePostDelete: () => { },\n    resetBlog: () => { }\n})\n\nconst BlogProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const [posts, setPosts] = useState(null)\n    const [post, setPost] = useState(null)\n    const [postsCount, setPostsCount] = useState(0)\n\n    const getPosts = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const response = await fetchPosts()\n        const data = await response.json()\n\n        setPosts(data.blogs)\n        setPostsCount(data.count)\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const getPost = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n\n            const response = await fetchSinglePost(id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.blog) {\n                setPost(data.blog)\n                setIsLoading(false)\n                getMessage(data.message)\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n            // setPosts(data.blogs)\n            // setPostsCount(data.count)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const createPost = async (img, name, description, draft, html) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await createNewPost(token, name, description, draft, html, img)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostUpdate = async (name, description, draft, html, img, id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await updatePost(token, name, description, draft, html, img, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostDelete = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await deletePost(token, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const resetBlog = () => {\n        setPost(null)\n    }\n\n    return (\n        <BlogContext.Provider\n            value={{\n                posts,\n                post,\n                postsCount,\n                getPosts,\n                createPost,\n                getPost,\n                handlePostUpdate,\n                handlePostDelete,\n                resetBlog,\n            }}\n        >\n            {children}\n        </BlogContext.Provider>\n    )\n}\n\nexport default BlogProvider","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx",["544","545","546"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../..//context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useHistory } from 'react-router-dom'\n\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ProductOverview from '../../components/product-overview/product-overview.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport Pagination from '../../components/pagination/pagination.component'\n\nimport Fuse from 'fuse.js'\n\n\nconst EshopSection = () => {\n    const { currentUser, token } = useContext(AuthContext)\n\n    const {\n        isLoading,\n        showModal,\n        message,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        showUpdateForm,\n        products,\n        lensesArr,\n        getProducts,\n        getLenses,\n        handleProductDelete,\n        deleteLenses,\n    } = useContext(WarehouseContext)\n\n    const { push } = useHistory()\n\n    const [searchQuery, setSearchQuery] = useState('')\n\n    const items = [\n        {\n            id: 0,\n            name: \"Všetko\",\n            permission: 0,\n        },\n        {\n            id: 1,\n            name: \"Obchodná 57, Bratislava\",\n            permission: 1,\n        },\n        {\n            id: 2,\n            name: \"Miletičova 38, Bratislava\",\n            permission: 2,\n        },\n        {\n            id: 3,\n            name: \"Senica, OC Branč\",\n            permission: 3,\n        },\n        {\n            id: 4,\n            name: \"Vajnory, Bratislava\",\n            permission: 4,\n        },\n        // {\n        //     id: 5,\n        //     name: \"Trnava, City Aréna\",\n        //     permission: 5,\n        // },\n    ]\n\n    const filteredItems = items.filter(item => item.permission === currentUser.premises || currentUser.admin >= 2)\n    const [activeIndex, setActiveIndex] = useState(2)\n\n    useEffect(() => {\n        console.log(\"fetch products\")\n        if (!products) {\n            getProducts()\n            getLenses()\n        }\n\n        if (!message) {\n            closeModal()\n        }\n    }, [products, lensesArr, token])\n\n    useEffect(() => {\n        if (filteredItems.length) {\n            setActiveIndex(filteredItems[0].id)\n        }\n    }, [])\n\n    const [allProducts, setAllProducts] = useState([])\n    useEffect(() => {\n        if (products && lensesArr)\n            setAllProducts([\n                ...products,\n                ...lensesArr\n            ])\n    }, [lensesArr, products])\n\n    const fuse = new Fuse(allProducts, {\n        keys: [\n            'name',\n            'brand',\n            'description',\n            'eanCode'\n        ]\n    })\n\n    useEffect(() => {\n        const results = fuse.search(searchQuery)\n        if (results.length > 0) {\n            setAllProducts(results.map(result => result.item))\n        }\n        if (!searchQuery) {\n            if (products && lensesArr) {\n                setAllProducts([\n                    ...products,\n                    ...lensesArr\n                ])\n            }\n\n        }\n    }, [searchQuery])\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [productsPerPage] = useState(10)\n    const indexOfLastProduct = currentPage * productsPerPage\n    const indexOfFirstProduct = indexOfLastProduct - productsPerPage\n    const currentProducts = allProducts.slice(indexOfFirstProduct, indexOfLastProduct)\n    const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('sklad/novy-produkt')}\n\n                title=\"E-shop\"\n            />\n\n            <SectionNavbar\n                items={filteredItems}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            {/* Products container */}\n            <ScrollContainer>\n                {\n                    currentProducts && currentProducts.map(product => (\n                        <ProductOverview\n                            key={product._id}\n                            name={product.name}\n                            stock={typeof product.available === \"number\" ? product.available : product.available ? activeIndex === 0 ? product.available.reduce((acc, currValue) => acc + currValue) : product.available[activeIndex - 1] : null}\n                            id={product.eanCode || product._id}\n                            price={(product.price / 100).toFixed(2)}\n                            image={product.image}\n                            handleUpdateButton={() => {\n                                showUpdateForm(product.type ? 0 : 1)\n                                push(`sklad/${product._id}`)\n                            }}\n                            handleDeleteButton={product.dioptersRange ? () => deleteLenses(product._id) : () => handleProductDelete(product._id)}\n                        />\n                    ))\n                }\n                {/* {\n                    lenses && lenses.map(product => (\n                        <ProductOverview\n                            key={product._id}\n                            name={product.name}\n                            id={product._id}\n                            price={(product.price / 100).toFixed(2)}\n                            image={product.image}\n                            handleUpdateButton={() => push(`sklad/${product._id}`)}\n                            handleDeleteButton={() => deleteLense(product._id)}\n                        />\n                    ))\n                } */}\n\n                <Pagination\n                    productsPerPage={productsPerPage}\n                    totalProducts={allProducts.length}\n                    paginate={paginate}\n                    activePage={currentPage}\n                />\n            </ScrollContainer>\n        </section >\n    )\n}\n\nexport default EshopSection\n","/imooptik-frontend/src/sections/orders/orders.section.jsx",["547","548","549"],"import React, { useState, useContext, useEffect, useRef } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\nimport Fuse from 'fuse.js'\n\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { OrdersContext } from '../../context/orders/orders.context'\n\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n// import OrderOverview from '../../components/order-overview/order-overview.component'\nimport OrderDeligateModal from '../../components/order-deligate-modal/order-deligate-modal.component'\n\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    tabItems\n} from '../../context/orders/orders.utils'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    AiFillCaretDown,\n    AiOutlineFilePdf,\n    AiOutlineFolderOpen,\n    AiOutlineCheck\n} from 'react-icons/ai'\n\nimport { useOutsideHandler } from '../../hooks/useOutsideAlerter'\n\nimport {\n    TableHead,\n    OrderOverviewRow,\n    IconContainer,\n    OrdersTable,\n    TableCol,\n    DropdownMenu,\n    Line,\n    DeligateCol,\n    DeligateButton\n} from './orders.styles'\n\nconst OrdersSection = () => {\n    const { push } = useHistory()\n    const [searchQuery, setSearchQuery] = useState('')\n    const [activeIndex, setActiveIndex] = useState(1)\n    const [orderItems, setOrderItems] = useState([])\n\n\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        getOrders,\n        orders\n    } = useContext(OrdersContext)\n\n\n\n    useEffect(() => {\n        if (!orders) {\n            getOrders()\n        }\n        if (orders) {\n            if (activeIndex === 2) {\n                setOrderItems(orders.filter(order => order.status === 'finished'))\n            } else {\n                setOrderItems(orders.filter(order => order.status !== 'finished'))\n            }\n        }\n    }, [orders])\n\n    useEffect(() => {\n        if (orders) {\n            if (activeIndex === 2) {\n                setOrderItems(orders.filter(order => order.status === 'finished'))\n            } else {\n                setOrderItems(orders.filter(order => order.status !== 'finished'))\n            }\n        }\n    }, [activeIndex])\n\n    useEffect(() => {\n        if (orders) {\n            const fuse = new Fuse(orders, {\n                keys: [\n                    'customId',\n                    'status',\n                    'date'\n                ]\n            })\n            if (searchQuery !== '') {\n                const results = fuse.search(searchQuery)\n                setOrderItems(results.map(result => result.item))\n            }\n            if (!searchQuery) {\n                if (activeIndex === 2) {\n                    setOrderItems(orders.filter(order => order.status === 'finished'))\n                } else {\n                    setOrderItems(orders.filter(order => order.status !== 'finished'))\n                }\n            }\n        }\n\n    }, [searchQuery])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push(\"/dashboard/objednavky/nova-objednavka\")}\n                title=\"Objednávky\"\n            />\n\n            <SectionNavbar\n                items={tabItems}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                <OrdersTable>\n                    <TableHead>\n                        <TableCol>ID</TableCol>\n                        <TableCol>Dátum</TableCol>\n                        <TableCol>Prevádzka</TableCol>\n                        <TableCol>Status</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {orders && orderItems.map((order, idx) => (\n                        <OrderOverview key={idx} order={order} />\n                    ))}\n                </OrdersTable>\n            </ScrollContainer>\n        </section>\n    )\n}\n\nconst OrderOverview = ({ order }) => {\n    const [showDropdownMenu, setShowDropdownMenu] = useState(false)\n    const date = new Date(order.date)\n    const dropdownRef = useRef(null)\n    useOutsideHandler(dropdownRef, () => setShowDropdownMenu(false))\n    const [showOrderDeligateModal, setShowOrderDeligateModal] = useState(false)\n\n    return (\n        <OrderOverviewRow>\n            <TableCol>{order.customId}</TableCol>\n            <TableCol>{date.toLocaleDateString(\"sk-SK\", { weekday: 'long', month: 'long', day: 'numeric' })}</TableCol>\n            <DeligateCol>\n                <DeligateButton onClick={() => setShowOrderDeligateModal(true)} >\n                    {order.premises === 0 ? \"Neuvedené\" : retailNames[order.premises - 1]}\n                </DeligateButton>\n                {showOrderDeligateModal && <OrderDeligateModal close={() => setShowOrderDeligateModal(false)} premise={order.premises} id={order._id} />}\n            </DeligateCol>\n            <TableCol>{order.status}</TableCol>\n            <TableCol>\n                <IconContainer onClick={() => setShowDropdownMenu(!showDropdownMenu)}>\n                    <AiFillCaretDown />\n                </IconContainer>\n                {showDropdownMenu && (\n                    <DropdownMenu ref={dropdownRef} >\n                        <ul>\n                            <li>\n                                <div>\n                                    <AiOutlineCheck />\n                                </div>\n                                    Vybavené\n                            </li>\n                        </ul>\n                        <Line />\n                        <ul>\n                            <a href={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/pdf/${order.pdfPath}`} target=\"_blank\" rel=\"noreferrer noopener\">\n                                <li>\n                                    <div>\n                                        <AiOutlineFilePdf />\n                                    </div>\n                                    Zobraz PDF\n                                </li>\n                            </a>\n                            <Link to={`/dashboard/objednavky/${order.orderedBy._id}/${order._id}`}>\n                                <li>\n                                    <div>\n                                        <AiOutlineFolderOpen />\n                                    </div>\n                                    Zobraziť\n                                </li>\n                            </Link>\n                        </ul>\n                    </DropdownMenu>\n                )}\n            </TableCol>\n        </OrderOverviewRow>\n    )\n}\n\nexport default OrdersSection\n","/imooptik-frontend/src/sections/customers/customers.section.jsx",["550","551","552"],"/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx",["553"],"import React, { useState, useEffect, useContext } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    PostContainer,\n    PostImage,\n    PostContent,\n    Options,\n    UpdateButton,\n    DeleteButton\n} from './blog-posts.styles'\n\nconst BlogPosts = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { getPosts, posts, postsCount, handlePostDelete } = useContext(BlogContext)\n    const { push } = useHistory()\n    const [searchQuery, setSearchQuery] = useState('')\n    const items = [\n        {\n            id: 0,\n            name: \"Dátum pridania\"\n        },\n        {\n            id: 1,\n            name: \"Abecedne\"\n        },\n    ]\n\n    const [activeIndex, setActiveIndex] = useState(0)\n\n    useEffect(() => {\n        if (!posts) {\n            getPosts(items[activeIndex])\n        }\n    }, [posts])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('blog/novy-prispevok')}\n                count={postsCount}\n                title=\"Blog\"\n            />\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                {\n                    posts && posts.length ? posts.map(post => (\n                        <PostContainer key={post._id}>\n                            <PostImage>\n                                {post.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${post.image.imagePath}`} alt={post.image.alt} />}\n                            </PostImage>\n                            <PostContent>\n                                <h2>{post.name}</h2>\n                                <p>{post.description}</p>\n                            </PostContent>\n                            <Options>\n                                <UpdateButton onClick={() => push(`blog/${post._id}`)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={() => handlePostDelete(post._id)}>Vymazať</DeleteButton>\n                            </Options>\n                        </PostContainer>\n                    )) : (\n                            <div>\n                                Žiadne príspevky\n                            </div>\n                        )\n                }\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BlogPosts\n","/imooptik-frontend/src/sections/analytics/analytics.section.jsx",["554","555"],"import React, { useState } from 'react'\n\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport {\n    Header,\n    GridContainer\n} from './analytics.styles'\n\nconst AnalyticsSection = () => {\n    const items = [\n        {\n            id: 1,\n            name: \"Všetko\"\n        },\n        {\n            id: 2,\n            name: \"Deň\"\n        },\n        {\n            id: 3,\n            name: \"Týžden\"\n        },\n        {\n            id: 4,\n            name: \"Mesiac\"\n        },\n        {\n            id: 5,\n            name: \"Rok\"\n        },\n    ]\n\n    const [activeIndex, setActiveIndex] = useState(2)\n\n    return (\n        <section>\n            <Header>\n                <h1>Analytiká</h1>\n            </Header>\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                <GridContainer>\n                    <div className='first' />\n                    <div className='second' />\n                    <div className='third' />\n                    <div className='fourth' />\n                </GridContainer>\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default AnalyticsSection\n","/imooptik-frontend/src/sections/booking/booking.section.jsx",["556","557","558"],"import React, { useState, useEffect, useContext } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { BookingContext } from '../../context/booking/booking.context'\nimport { useHistory } from 'react-router-dom'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport BookingCalendarOverview from \"../../components/booking-calendar-overview/booking-calendar-overview.component\"\n\nimport Calendar from '../../components/calendar/calendar.component'\n\nimport {\n    Title,\n    GridRow,\n    CalendarGridContainer,\n    AppoimentOverview,\n    Time,\n    Line,\n    // TwoRowGrid,\n    Name,\n    Desc,\n    Options,\n    ConfirmButton,\n    DeclineButton,\n    AppoimentContainer,\n    AppoimentCol,\n    NoteContainer\n} from './booking.styles'\n\nconst BookingSection = () => {\n    const { push } = useHistory()\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const bookingData = useContext(BookingContext)\n\n    const {\n        calendar,\n        calendars,\n        bookings,\n        // bookingRows,\n        getCalendars,\n        getCalendar,\n        userBookings,\n        getUserBookings,\n        getBookings,\n        // getBookingRows\n        activeCalendar,\n        selectedDate,\n        setSelectedDate,\n        resetBooking\n    } = bookingData\n\n    const [searchQuery, setSearchQuery] = useState('')\n\n    useEffect(() => {\n        if (!calendars) {\n            getCalendars()\n            getUserBookings()\n        }\n    }, [calendars])\n\n    useEffect(() => {\n        if (!bookings) {\n            getBookings()\n        }\n    }, [calendars])\n\n    useEffect(() => {\n        return () => {\n            resetBooking()\n        }\n    }, [])\n\n    if (!calendars) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('rezervacie/novy-kalendar')}\n                title=\"Kalendar objednávok\"\n            />\n\n            <ScrollContainer>\n                <Title>Pobočky</Title>\n                <GridRow>\n                    {calendars.map((calendar, idx) => (\n                        <BookingCalendarOverview key={idx} calendar={calendar} handleClick={() => getCalendar(calendar._id, idx + 1)} handleUpdateClick={() => push(`rezervacie/${calendar._id}`)} isActive={activeCalendar === idx + 1} />\n                    ))}\n                </GridRow>\n\n                {calendar.name && (\n                    <React.Fragment>\n                        <Title>Kalendár</Title>\n                        <CalendarGridContainer>\n                            <Calendar calendar={calendar} setSelectedDate={setSelectedDate} />\n\n                            {calendar.name && selectedDate.name && <AppoimentOverview>\n                                <Title>{selectedDate.name.charAt(0).toUpperCase() + selectedDate.name.slice(1)}</Title>\n\n                                {\n                                    calendar.booked[selectedDate.value].map((date, idx) => {\n                                        const filteredUserBookings = userBookings.filter(booking => booking.dueDate === selectedDate.value && booking.dueTime.split(\":\")[0] === date)\n                                        const time = date.split('/')[0] + \":\" + date.split('/')[1]\n\n                                        return (\n                                            <AppoimentContainer key={idx}>\n                                                <Time>{time}</Time>\n                                                <Line />\n                                                {\n                                                    filteredUserBookings.map((user, idx) => {\n                                                        const bookingType = bookings.find(booking => booking._id === user.booking)\n\n                                                        return (\n                                                            <AppoimentCol key={idx}>\n                                                                <div>\n                                                                    <Name>{user.name}</Name>\n                                                                    <Desc>{bookingType.name}</Desc>\n                                                                </div>\n                                                                <Options>\n                                                                    <ConfirmButton>Vybavený</ConfirmButton>\n                                                                    <DeclineButton>Neprišiel</DeclineButton>\n                                                                </Options>\n                                                                <NoteContainer>\n                                                                    <p>{user.note}</p>\n                                                                </NoteContainer>\n                                                            </AppoimentCol>\n                                                        )\n                                                    })\n                                                }\n                                            </AppoimentContainer>\n                                        )\n                                    })\n                                }\n                            </AppoimentOverview>}\n                        </CalendarGridContainer>\n                    </React.Fragment>\n                )}\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BookingSection\n","/imooptik-frontend/src/sections/product/product.section.jsx",["559","560","561"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\n\nimport CustomFormSwitch from '../../components/custom-form-switch/custom-form-switch.component'\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\n\nimport { useFetch } from '../../hooks/useFetch'\n\nimport {\n    Header,\n    AddButton,\n    DeleteButton,\n    Title,\n    ProductImage,\n    DraftCheckBox,\n    ImageContainer,\n} from './product.styles'\n\nconst ProductSection = () => {\n    const { currentUser, token } = useContext(AuthContext)\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n\n    const { response } = useFetch('api/admin/products/nextEanCode', requestOptions)\n\n    const [showImageModal, setImageModal] = useState(false)\n    const { id } = useParams()\n    const warData = useContext(WarehouseContext)\n    const {\n        switchFormButtons,\n        formToShow,\n        toggleProductForms,\n        isUpdating,\n        activeCategoryIndex,\n        categories,\n        getEanCode,\n        toggleDraft,\n        handleCategoryChange,\n        handleAvailableChange,\n        handleSizeChange,\n        selectImage,\n        product,\n        createNewProduct,\n        updateProduct,\n        handleProductDelete,\n        resetProduct,\n        lenses,\n        handleLensesChange,\n        handleLensesDioptersRangeChange,\n        handleLensesCylinderRangeChange,\n        getSigleLenses,\n        createNewLenses,\n        updateLenses,\n        deleteLenses,\n        getSingleProduct,\n        handleChange,\n        handleSpecsChange,\n        lensesParameters,\n        handleParameterChange\n    } = warData\n\n    const {\n        closeModal,\n        isLoading,\n        showModal,\n        message\n    } = useContext(LoadingModalContext)\n\n    const { selectedImage } = useContext(ImageContext)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (formToShow === 0) {\n            if (!product.imagePath) {\n                alert(\"Žiaden obrazok!\")\n                return\n            }\n\n            if (id === 'novy-produkt') {\n                createNewProduct(product)\n                resetProduct()\n            } else {\n                updateProduct(product)\n                resetProduct()\n            }\n        } else {\n            if (!lenses.imagePath) {\n                alert(\"Žiaden obrazok!\")\n                return\n            }\n\n            if (id === 'novy-produkt') {\n                createNewLenses(lenses)\n            } else {\n                updateLenses(lenses)\n            }\n\n        }\n\n    }\n\n    useEffect(() => {\n        if (id !== \"novy-produkt\") {\n            if (formToShow === 0) {\n                getSingleProduct(id)\n            } else {\n                getSigleLenses(id)\n            }\n        } else {\n\n        }\n    }, [id])\n\n    useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            resetProduct()\n        }\n    }, [])\n\n    useEffect(() => {\n        if (response) {\n            if (!product.eanCode) {\n                getEanCode(response.eanCode)\n            }\n        }\n    }, [response])\n\n\n    return (\n        <form onSubmit={e => handleSubmit(e)}>\n            { showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={selectImage} />}\n            <Header>\n                <div>\n                    <h1>{isUpdating ? \"Upraviť produkt\" : \"Pridať nový produkt\"}</h1>\n                </div>\n                <div>\n                    <DraftCheckBox\n                        label='Verejný'\n                        isActive={formToShow === 0 ? product.eshop : lenses.eshop}\n                        handleClick={() => toggleDraft()}\n                    />\n                    {isUpdating && <DeleteButton onClick={formToShow === 0 ? () => handleProductDelete(product._id) : () => deleteLenses(lenses._id)}>Vymazať</DeleteButton>}\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť produkt\" : \"Pridať product\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating &&\n                    <CustomFormSwitch\n                        items={switchFormButtons}\n                        title=\"Aký produkt chcete pridať?\"\n                        activeIndex={formToShow}\n                        handleClick={toggleProductForms}\n                    />\n                }\n\n                {formToShow === 0 ? (\n                    <ProductGlassesForm\n                        activeCategoryIndex={activeCategoryIndex}\n                        categories={categories}\n                        product={product}\n                        handleChange={handleChange}\n                        handleSizeChange={handleSizeChange}\n                        handleSpecsChange={handleSpecsChange}\n                        handleCategoryChange={handleCategoryChange}\n                        handleAvailableChange={handleAvailableChange}\n                        lensesParameters={lensesParameters}\n                        handleParameterChange={handleParameterChange}\n                        currentUser={currentUser}\n                    />\n                ) : (\n                        <ProductLensesForm\n                            lense={lenses}\n                            handleChange={handleLensesChange}\n                            handleLensesDioptersRangeChange={handleLensesDioptersRangeChange}\n                            handleLensesCylinderRangeChange={handleLensesCylinderRangeChange}\n                        />\n                    )\n                }\n\n                <div>\n                    <ImageContainer>\n\n                        <Title>Obrázok</Title>\n\n                        <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </ProductImage>\n                    </ImageContainer>\n                </div>\n            </ScrollContainer>\n\n        </form >\n    )\n}\n\nexport default ProductSection\n","/imooptik-frontend/src/sections/calendar/calendar.section.jsx",["562","563","564"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BookingContext } from '../../context/booking/booking.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport InputRow from '../../components/product-input-row/product-input-row.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    DayTimesContainer,\n    CreateCalendarButton,\n    DayNames,\n    DeleteCalendarButton\n} from './calendar.styles'\n\nconst CalendarSection = () => {\n    const { calendarId } = useParams()\n    const {\n        isUpdatingCalendar,\n        handleCalendarChange,\n        handleDayTimeChange,\n        getCalendar,\n        createCalendar,\n        updateCalendar,\n        delCalendar,\n        calendar,\n        resetBooking\n    } = useContext(BookingContext)\n\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (calendarId === 'novy-kalendar') {\n            createCalendar(calendar)\n        } else {\n            console.log('update calendar')\n            updateCalendar(calendar)\n        }\n    }\n\n    useEffect(() => {\n        if (calendarId !== 'novy-kalendar') {\n            getCalendar(calendarId)\n        }\n    }, [calendarId])\n\n    useEffect(() => {\n        return () => {\n            resetBooking()\n        }\n    }, [])\n\n    if (!calendar || showModal) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n\n    console.log(isUpdatingCalendar)\n    console.log(calendar)\n\n    return (\n        <section>\n            <form onSubmit={handleSubmit}>\n                <Header>\n                    <div>\n                        <h1>{isUpdatingCalendar ? `Kalendár: ${calendar.name}` : \"Nový kalendár\"}</h1>\n                    </div>\n                    <div>\n                        {isUpdatingCalendar && <DeleteCalendarButton onClick={() => delCalendar(calendarId)}>Odstrániť</DeleteCalendarButton>}\n                        <CreateCalendarButton>{isUpdatingCalendar ? \"Upraviť kalendár\" : \"Vytvoriť kalendár\"}</CreateCalendarButton>\n                    </div>\n                </Header>\n                <ScrollContainer>\n                    <InputRow\n                        label=\"Meno kalendáru\"\n                        example=''\n                    >\n                        <CustomInput\n                            label=\"Pobočka*\"\n                            type='text'\n                            name='name'\n                            value={calendar.name}\n                            handleChange={(e) => handleCalendarChange(e)}\n                            required\n                        />\n                    </InputRow>\n                    <InputRow\n                        label=\"Koľko dní dopredu sa da objednať\"\n                        example=''\n                    >\n                        <CustomInput\n                            label=\"Počet dní\"\n                            type='number'\n                            name='daysIntoFuture'\n                            value={calendar.daysIntoFuture.toString()}\n                            handleChange={(e) => handleCalendarChange(e)}\n                            required\n                        />\n                    </InputRow>\n                    <InputRow\n                        label=\"Minimalný čas k odoslaní rezervácie\"\n                        example=''\n                    >\n                        <CustomInput\n                            label=\"Min\"\n                            type='number'\n                            name='allowMinutesBefore'\n                            value={calendar.allowMinutesBefore.toString()}\n                            handleChange={(e) => handleCalendarChange(e)}\n                            required\n                        />\n                    </InputRow>\n                    <InputRow\n                        label=\"Čas medzi rezerváciami\"\n                        example=''\n                    >\n                        <CustomInput\n                            label=\"Min*\"\n                            type='number'\n                            name='interval'\n                            value={calendar.interval.toString()}\n                            handleChange={(e) => handleCalendarChange(e)}\n                            required\n                        />\n                    </InputRow>\n\n                    <DayTimesContainer>\n                        <DayNames>\n                            <h3>Den</h3>\n                            <div>\n                                <h4>Pondelok</h4>\n                            </div>\n                            <div>\n                                <h4>Utorok</h4>\n                            </div>\n                            <div>\n                                <h4>Streda</h4>\n                            </div>\n                            <div>\n                                <h4>Štvrtok</h4>\n                            </div>\n                            <div>\n                                <h4>Piatok</h4>\n                            </div>\n                            <div>\n                                <h4>Sobota</h4>\n                            </div>\n                            <div>\n                                <h4>Nedeľa</h4>\n                            </div>\n                        </DayNames>\n                        <div>\n                            <h3>Začiatok prehliadok</h3>\n                            {calendar.startTimes.map((value, idx) => (\n                                <div key={idx}>\n                                    <CustomInput\n                                        label=\"Čas: HH/MM*\"\n                                        type='text'\n                                        name='startTimes'\n                                        value={value}\n                                        handleChange={(e) => handleDayTimeChange(e, idx)}\n                                        required\n                                    />\n                                </div>\n                            ))}\n                        </div>\n                        <div>\n                            <h3>Koniec prehliadok</h3>\n                            {calendar.endTimes.map((value, idx) => (\n                                <div key={idx}>\n                                    <CustomInput\n                                        label=\"Čas: HH/MM*\"\n                                        type='text'\n                                        name='endTimes'\n                                        value={value}\n                                        handleChange={(e) => handleDayTimeChange(e, idx)}\n                                        required\n                                    />\n                                </div>\n                            ))}\n                        </div>\n                    </DayTimesContainer>\n                </ScrollContainer>\n            </form>\n        </section>\n    )\n}\n\nexport default CalendarSection\n","/imooptik-frontend/src/sections/order/order.section.jsx",["565","566"],"import React, { useContext, useState, useEffect } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import { UserContext } from '../../context/user/user.context'\n// import { WarehouseContext } from '../../context/warehouse/warehouse.context'\n// import { OrdersContext } from '../../context/orders/orders.context'\nimport { useParams, Prompt } from 'react-router-dom'\n\n// import InputRow from '../../components/product-input-row/product-input-row.component'\n// import CustomInput from '../../components/custom-input/custom-input.component'\n// import CustomFormSwitch from '../../components/custom-form-switch/custom-form-switch.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n// import OrderProductOverview from '../../components/order-product-overview/order-product-overview.component'\n// import CustomCheckBox from '../../components/custom-checkbox/custom-checkbox.component'\n// import CombinedProductOverview from '../../components/combined-product-overview/combined-product-overview.component'\n// import OrderAddressForm from '../../components/order-address-form/order-address-form.component'\n\nimport Popup from \"../../components/popup/pop-up.component\"\n\n// import EshopSubSecton from './sub-sections/eshop/eshop.sub-section'\n// import LensesSubSection from './sub-sections/lenses/lenses.sub-section'\n// import DioptersSubSection from './sub-sections/diopters/diopters.seb-section'\n// import SummarySubSection from './sub-sections/summary/summary.sub-section'\n\n// import Fuse from 'fuse.js'\n\n// import { retailNames } from '../../context/warehouse/warehouse.utils'\n\nimport SelectUserComponent from './steps/select-user.component'\nimport FindProductComponent from \"./steps/find-product.component\"\nimport SelectLensesComponent from './steps/select-lenses.component'\nimport SummaryComponent from './steps/summary.component'\n\nimport {\n    Header,\n} from './order.styles'\n\nconst OrderSection = () => {\n    const { userId, orderId } = useParams()\n    const [step, setStep] = useState('selectUser')\n    const [order, setOrder] = useState({\n\n    })\n\n    const handleOrderChange = valueToAdd => {\n        const { name, value } = valueToAdd\n        setOrder({\n            ...order,\n            [name]: value\n        })\n    }\n\n    console.log(\"order\")\n    console.log(order)\n    console.log(\"order\")\n\n    const {\n        closeModal,\n        isLoading,\n        showModal,\n        message\n    } = useContext(LoadingModalContext)\n\n\n    useEffect(() => {\n        return () => {\n            setStep('selectUser')\n        }\n    }, [])\n\n    return (\n\n        <section>\n            <Prompt\n                when={order.user}\n                message={\"Máte nedokončenú objednávku, skutočne chcete odísť?\"}\n            />\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <Header>\n                <div>\n                    <h1>Nová objednávka</h1>\n                </div>\n            </Header>\n            <ScrollContainer>\n                <div>\n                    {step === 'selectUser' && (\n                        <SelectUserComponent\n                            next={() => setStep('findProduct')}\n                            addToOrder={handleOrderChange}\n                        />\n                    )}\n                    {step === 'findProduct' && (\n                        <FindProductComponent\n                            back={() => setStep(\"selectUser\")}\n                            next={setStep}\n                            addToOrder={handleOrderChange}\n                        />\n                    )}\n                    {step === 'selectLenses' && (\n                        <SelectLensesComponent\n                            back={() => setStep(\"findProduct\")}\n                            next={() => setStep('summary')}\n                            addToOrder={handleOrderChange}\n                            order={order}\n                        />\n                    )}\n                    {step === 'summary' && (\n                        <SummaryComponent\n                            back={() => setStep(\"selectLenses\")}\n                            order={order}\n                        />\n                    )}\n                </div>\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default OrderSection\n","/imooptik-frontend/src/sections/post/post.section.jsx",["567","568","569"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport CustomTextarea from '../../components/custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport { Quill } from 'react-quill'\n\nimport {\n    Header,\n    GridContainer,\n    PostImage,\n    DeleteButton,\n    AddButton,\n    Title,\n    ContentTextare,\n} from './post.styles'\n\nconst PostSection = () => {\n    const { id } = useParams()\n    const { push } = useHistory()\n    const {\n        createPost,\n        isLoading,\n        message,\n        showLoading,\n        setIsLoading,\n        getPost,\n        post,\n        handlePostUpdate,\n        resetBlog\n    } = useContext(BlogContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [content, setContent] = useState('')\n    const [image, setImage] = useState('')\n    const [draft, toggleDraft] = useState(false)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (image.length <= 0) return\n        if (content.length <= 0) return\n\n        if (id === 'novy-prispevok') {\n            createPost(image, title, description, draft, content)\n        } else {\n            handlePostUpdate(title, description, draft, content, image, id)\n        }\n\n        push('/dashboard/blog')\n\n    }\n\n    useEffect(() => {\n        setSelectedImage(null)\n\n        if (id !== 'novy-prispevok') {\n            getPost(id)\n            setIsUpdating(true)\n        }\n    }, [id])\n\n    useEffect(() => {\n        console.log(post)\n        if (post) {\n            console.log(post)\n            setTitle(post.name)\n            setDescription(post.description)\n            setContent(post.html)\n            toggleDraft(post.draft)\n            if (post.image) {\n                setImage(post.image._id)\n                setSelectedImage(post.image)\n            }\n        }\n    }, [post])\n\n    useEffect(() => {\n        return () => {\n            resetBlog()\n            setTitle('')\n            setDescription('')\n            setContent('')\n            setImage('')\n            toggleDraft(false)\n            setImageModal(false)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {isLoading && <Popup loading={showLoading} title={message} close={() => setIsLoading(false)} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={setImage} />}\n\n            <Header>\n                <div>\n                    <h1>Post</h1>\n                </div>\n                <div>\n                    <CustomCheckbox\n                        label='Draft'\n                        checked={draft}\n                        onChange={() => toggleDraft(!draft)}\n                    />\n                    <DeleteButton>Vymazať</DeleteButton>\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť príspevok\" : \"Pridať príspevok\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n\n                <GridContainer>\n                    <div>\n                        <h2>Informácia</h2>\n                        <CustomInput\n                            label=\"Nadpis\"\n                            type='text'\n                            name='title'\n                            value={title}\n                            handleChange={(e) => setTitle(e.target.value)}\n                            required\n                        />\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={description}\n                            handleChange={(e) => setDescription(e.target.value)}\n                            required\n                        />\n                        <h2>Titulná fotka</h2>\n                        <PostImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </PostImage>\n                    </div>\n                    <div>\n                        <Title>Obsah</Title>\n                        <QuillToolbar />\n                        <ContentTextare\n                            value={content}\n                            onChange={setContent}\n                            modules={modules}\n                            formats={formats}\n                        />\n                    </div>\n\n                </GridContainer>\n\n            </ScrollContainer>\n        </form>\n    )\n}\n\n\nconst CustomUndo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n        />\n    </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n        />\n    </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n    this.quill.history.undo();\n}\nfunction redoChange() {\n    this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n    \"arial\",\n    \"comic-sans\",\n    \"courier-new\",\n    \"georgia\",\n    \"helvetica\",\n    \"lucida\"\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nconst modules = {\n    toolbar: {\n        container: \"#toolbar\",\n        handlers: {\n            undo: undoChange,\n            redo: redoChange\n        }\n    },\n    history: {\n        delay: 500,\n        maxStack: 100,\n        userOnly: true\n    }\n};\n\n// Formats objects for setting up the Quill editor\nconst formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"align\",\n    \"strike\",\n    \"script\",\n    \"blockquote\",\n    \"background\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"color\",\n    \"code-block\"\n];\n\n// Quill Toolbar component\nconst QuillToolbar = () => (\n    <div id=\"toolbar\" className=\"toolbar\">\n        <span className=\"ql-formats\">\n            <select className=\"ql-size\" defaultValue=\"medium\">\n                <option value=\"extra-small\">Size 1</option>\n                <option value=\"small\">Size 2</option>\n                <option value=\"medium\">Size 3</option>\n                <option value=\"large\">Size 4</option>\n            </select>\n            <select className=\"ql-header\" defaultValue=\"3\">\n                <option value=\"1\">Heading</option>\n                <option value=\"2\">Subheading</option>\n                <option value=\"3\">Normal</option>\n            </select>\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n        </span>\n        <span className=\"ql-formats\">\n            <select className=\"ql-align\" />\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n                <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n                <CustomRedo />\n            </button>\n        </span>\n    </div>\n);\n\n\nexport default PostSection\n","/imooptik-frontend/src/sections/coupon/coupon.section.jsx",["570","571"],"import React, { useContext, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { CouponsContext } from '../../context/coupons/coupons.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport InputRow from '../../components/product-input-row/product-input-row.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport Popup from \"../../components/popup/pop-up.component\"\n\nimport {\n    Header,\n    CustomSelect,\n    SubmitButton,\n    DeleteButton\n} from './coupon.styles'\n\nconst CouponSection = () => {\n    const { couponId } = useParams()\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const {\n        coupon,\n        getCoupon,\n        handleChange,\n        createCoupon,\n        isUpdating,\n        deleteCoupon,\n        resetCoupons\n    } = useContext(CouponsContext)\n\n    useEffect(() => {\n        if (couponId !== 'novy-kupon') {\n            getCoupon(couponId)\n        }\n    }, [couponId])\n\n    useEffect(() => {\n        return () => {\n            resetCoupons()\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <Header>\n                <div>\n                    <h1>Nový kupón</h1>\n                </div>\n\n                <div>\n                    {isUpdating && <DeleteButton onClick={() => deleteCoupon(couponId)}>Odstrániť</DeleteButton>}\n                    {!isUpdating && <SubmitButton onClick={() => createCoupon(coupon)}>Vytvoriť</SubmitButton>}\n                </div>\n            </Header>\n            <ScrollContainer>\n                <InputRow\n                    label=\"Kód kupónu\"\n                    example=\"napr: 50off\"\n                >\n                    <CustomInput\n                        label=\"Kód\"\n                        type='text'\n                        name='code'\n                        value={coupon.code}\n                        handleChange={(e) => handleChange(e)}\n                    />\n                </InputRow>\n                <InputRow\n                    label=\"Typ kupónu\"\n                    example=\"\"\n                >\n                    <CustomSelect name='type' value={coupon.type} onChange={(e) => handleChange(e)}>\n                        <option value={\"percentage\"}>Percentá</option>\n                        <option value={\"flat\"}>Fixná suma</option>\n                    </CustomSelect>\n                </InputRow>\n                <InputRow\n                    label=\"Hodnota\"\n                    example=\"\"\n                >\n                    <CustomInput\n                        label=\"Suma\"\n                        type='number'\n                        name='value'\n                        value={coupon.value.toString()}\n                        handleChange={(e) => handleChange(e)}\n                    />\n                </InputRow>\n                <InputRow\n                    label=\"Kolko maximalne krat moze tento kupon byt pouzity jednym clovek, default je nekonecne\"\n                    example=\"\"\n                >\n                    <CustomInput\n                        label=\"Suma\"\n                        type='number'\n                        name='maxUses'\n                        value={coupon.maxUses.toString()}\n                        handleChange={(e) => handleChange(e)}\n                    />\n                </InputRow>\n                <InputRow\n                    label=\"Minimalna hodnota objednavky v centoch, aby bol tento kupon aplikovatelny, default je 0\"\n                    example=\"\"\n                >\n                    <CustomInput\n                        label=\"Suma\"\n                        type='number'\n                        name='minValue'\n                        value={coupon.minValue.toString()}\n                        handleChange={(e) => handleChange(e)}\n                    />\n                </InputRow>\n                <InputRow\n                    label=\"Kolko maximalne krat moze tento kupon byt pouzity dohromady vsetkymi uzivatelmi, default je nekonecne\"\n                    example=\"\"\n                >\n                    <CustomInput\n                        label=\"Suma\"\n                        type='number'\n                        name='maxUsesTotal'\n                        value={coupon.maxUsesTotal.toString()}\n                        handleChange={(e) => handleChange(e)}\n                    />\n                </InputRow>\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CouponSection\n","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx",[],"/imooptik-frontend/src/sections/coupons/coupons.section.jsx",["572","573"],"import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { CouponsContext } from '../../context/coupons/coupons.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    CouponOverviewContainer,\n    DeleteButton,\n    OpenButton,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TableCol\n} from './coupons.styles'\n\nconst CouponsSection = () => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        coupons,\n        getCoupons,\n        deleteCoupon\n    } = useContext(CouponsContext)\n\n    useEffect(() => {\n        if (!coupons) {\n            getCoupons()\n        }\n    }, [coupons])\n\n    console.log(coupons)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                title='Kupóny'\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('kupony/novy-kupon')}\n            />\n            <ScrollContainer>\n\n                <TableContainer>\n                    <TableHead>\n                        <TableCol>#</TableCol>\n                        <TableCol>Kód</TableCol>\n                        <TableCol>Typ</TableCol>\n                        <TableCol>Hodnota</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {coupons && coupons.map((coupon, idx) => (\n                        <TableRow key={idx}>\n                            <TableCol>{idx + 1}</TableCol>\n                            <TableCol>{coupon.code}</TableCol>\n                            <TableCol>{coupon.type === \"percentage\" ? \"Percentá\" : \"Fixná suma\"}</TableCol>\n                            <TableCol>{coupon.value}</TableCol>\n                            <TableCol>\n                                <OpenButton onClick={() => push(`kupony/${coupon._id}`)}>Zobraziť</OpenButton>\n                                <DeleteButton onClick={() => deleteCoupon(coupon._id)}>Ostrániť</DeleteButton>\n                            </TableCol>\n                        </TableRow>\n                    ))}\n                </TableContainer>\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CouponsSection\n","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx",["574","575","576"],"/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.styles.jsx",[],"/imooptik-frontend/src/context/user/user.utils.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx",[],"/imooptik-frontend/src/context/image/image.queries.jsx",[],"/imooptik-frontend/src/context/booking/booking.utils.jsx",[],"/imooptik-frontend/src/context/user/user.queries.jsx",[],"/imooptik-frontend/src/context/booking/booking.queries.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.queries.jsx",[],"/imooptik-frontend/src/context/orders/orders.utils.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx",[],"/imooptik-frontend/src/context/orders/orders.queries.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx",[],"/imooptik-frontend/src/context/blog/blog.queries.jsx",[],"/imooptik-frontend/src/sections/customers/customers.styles.jsx",[],"/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx",[],"/imooptik-frontend/src/sections/orders/orders.styles.jsx",[],"/imooptik-frontend/src/sections/analytics/analytics.styles.jsx",[],"/imooptik-frontend/src/sections/booking/booking.styles.jsx",[],"/imooptik-frontend/src/sections/product/product.styles.jsx",[],"/imooptik-frontend/src/sections/coupons/coupons.styles.jsx",[],"/imooptik-frontend/src/sections/coupon/coupon.styles.jsx",[],"/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx",[],"/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx",[],"/imooptik-frontend/src/sections/post/post.styles.jsx",[],"/imooptik-frontend/src/sections/order/order.styles.jsx",["577"],"import styled from \"styled-components\"\nimport { paddingStyles } from '../../global.styles'\n\nimport CustomButton from \"../../components/custom-button/custom-button.component\"\nimport CustomCheckBox from '../../components/custom-checkbox/custom-checkbox.component'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n\n    @media all and (max-width: 800px) {\n        flex-wrap: wrap;\n\n        div:nth-child(2) {\n            margin-bottom: 2rem;\n        }\n    }\n`\n\nexport const SubmitOrderButton = styled(CustomButton)`\n\n`\n\nexport const Container = styled.div`\n    margin: 3rem 0;\n    position: relative;\n    width: 100%;\n`\n\nexport const UserList = styled.div`\n    position: absolute;\n    background-color: #fff;\n    padding: 2rem;\n    border-radius: .5rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    width: 35rem;\n    max-height: 40rem;\n    z-index: 999;\n    top: 18rem;\n    overflow-y: scroll;\n\n    div {\n        cursor: pointer;\n        padding: .5rem 1rem;\n        border-radius: .5rem;\n\n        transition: background-color .2s ease-out;\n        background-color: #f5f5f5;\n\n        &:hover {\n            background-color: lightgray;\n        }\n\n        p:nth-child(2) {\n            color: gray;\n        }\n\n        &:not(:last-child) {\n            margin-bottom: 2rem;\n        }\n    }\n`\n\nexport const ProductContainer = styled.div`\n    --gap: 2rem;\n    display: flex;\n    flex-wrap: wrap;\n    margin: calc(-1 * var(--gap)) 2rem 2rem calc(-1 * var(--gap));\n    width: calc(100% + var(--gap));\n\n    & > * {\n    margin: var(--gap) 2rem 2rem var(--gap);\n\n}\n\n\n`\n\nexport const AddProductButton = styled(CustomButton)`\n    display: block;\n    margin-left: auto;\n`\n\nexport const SearchContainer = styled.div`\n    display: flex;\n    align-items: flex-end;\n\n    margin-bottom: 3rem;\n`\n\nexport const SearchButton = styled(CustomButton)`\n\n`\n\nexport const AddAddressButton = styled(CustomButton)`\n    font-size: 1rem;\n`\n\nexport const NextButton = styled(CustomButton)`\n    display: block;\n    margin-left: auto;\n`\n\nexport const Title = styled.h2`\n    margin-bottom: 2rem;\n`\n\nexport const SubTitle = styled.h3`\n    margin: 2rem 0;\n`\n\nexport const ParametersContainer = styled.div`\n    --gap: 2rem;\n    display: flex;\n    flex-wrap: wrap;\n    margin: calc(-1 * var(--gap)) 2rem 2rem calc(-1 * var(--gap));\n    /* width: calc(100% + var(--gap)); */\n\n    & > * {\n        margin: var(--gap) 2rem 2rem var(--gap);\n    }\n`\n\nexport const SummaryParametersContainer = styled(ParametersContainer)`\n    margin-top: 3rem;\n    margin-bottom: 3rem;\n\n`\n\nexport const SummaryParameterTitleCol = styled.div`\n    \n    h3 {\n        margin-bottom: 2rem;\n    }\n\n    div {\n        margin-bottom: 1rem;\n        font-size: 1.8rem;\n    }\n`\nexport const SummaryParameterCol = styled.div`\n    \n    h3 {\n        margin-bottom: 2rem;\n    }\n\n    div {\n        margin-bottom: 1rem;\n        font-size: 1.8rem;\n        text-align: end;\n    }\n`\n\nexport const DifferentAddress = styled(CustomCheckBox)`\n    margin-top: 3rem;\n`","/imooptik-frontend/src/sections/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx",[],"/imooptik-frontend/src/components/pagination/pagination.component.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.component.jsx",[],"/imooptik-frontend/src/hooks/useFetch.jsx",["578"],"import { useEffect, useState } from 'react'\n\nexport const useFetch = (path, options) => {\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/${path}`, options)\n                const data = await res.json()\n\n                setResponse(data)\n                setIsLoading(false)\n            } catch (err) {\n                setError(err)\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [])\n\n    return { response, isLoading, error }\n}","/imooptik-frontend/src/components/product-overview/product-overview.component.jsx",[],"/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx",["579"],"import React, { useState, useContext } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { OrdersContext } from '../../context/orders/orders.context'\nimport ReactDOM from 'react-dom'\n\nimport Popup from '../popup/pop-up.component'\n\nimport { retailNames } from '../../context/warehouse/warehouse.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    CustomSelect,\n    SubmitButton\n} from './order-deligate-modal.styles'\n\n\nconst OrderDeligateModal = ({ close, premise, id }) => {\n    const [value, setValue] = useState(premise)\n    const { token } = useContext(AuthContext)\n    const { getOrders } = useContext(OrdersContext)\n    const {\n        getMessage,\n        message,\n        isLoading,\n        setIsLoading,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const handleClick = async () => {\n        setIsLoading(true)\n        const myHeaders = new Headers();\n        myHeaders.append(\"auth-token\", token);\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const raw = JSON.stringify({\n            premises: Number(value),\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders/${id}/delegate`, requestOptions)\n            console.log(response)\n            if (response.status === 400) {\n                getMessage(\"Faktúra musí byt zaplatená, aby mohla byť priradená prevádzke\")\n            }\n            if (response.status === 401) {\n                getMessage(\"Musíš byt vedúci, aby si mohol manipulovať s priradovanim\")\n            }\n            const data = await response.json()\n\n            if (data.order) {\n                getOrders()\n                setIsLoading(false)\n                close()\n                return\n            }\n\n            // getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            setIsLoading(false)\n        }\n    }\n\n    if (isLoading || message) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Priradiť k prevádzke</h3>\n                <CustomSelect value={value} onChange={(e) => setValue(e.target.value)}>\n                    <option value={0}>Nezadané</option>\n                    {retailNames.map((name, idx) => {\n                        if (idx === 4) return\n                        return (\n                            <option key={idx} value={idx + 1}>{name}</option>\n                        )\n                    })}\n                </CustomSelect>\n                <SubmitButton onClick={handleClick}>Priradiť</SubmitButton>\n            </Modal>\n        </ModalContainer >\n    ), document.getElementById('portal'))\n}\n\nexport default OrderDeligateModal\n","/imooptik-frontend/src/hooks/useOutsideAlerter.jsx",["580"],"import React, { useRef, useEffect } from \"react\";\n\nexport const useOutsideHandler = (ref, action) => {\n    useEffect(() => {\n        const handleClickOutside = e => {\n            if (ref.current && !ref.current.contains(e.target)) {\n                action()\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n\n    }, [ref])\n}\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(ref) {\n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                alert(\"You clicked outside of me!\");\n            }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [ref]);\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nfunction OutsideAlerter(props) {\n    const wrapperRef = useRef(null);\n    useOutsideAlerter(wrapperRef);\n\n    return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport default OutsideAlerter;\n","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.component.jsx",["581"],"import React, { useState } from 'react'\n\nimport {\n    Container,\n    HeaderBlock,\n    Dayblock,\n    BookingContainer,\n    DayRowContainer,\n    DayNumber\n} from './calendar.styles'\n\nconst Calendar = ({ calendar, setSelectedDate }) => {\n    const blocks = [\n        {\n            name: 'Pondelok'\n        },\n        {\n            name: 'Utorok'\n        },\n        {\n            name: 'Streda'\n        },\n        {\n            name: 'Štvrtok'\n        },\n        {\n            name: 'Piatok'\n        },\n        {\n            name: 'Sobota'\n        },\n        {\n            name: 'Nedeľa'\n        },\n    ]\n\n    const [activeIndex, setActiveIndex] = useState(null)\n\n    // v prvom rade si zistim datumy ktore treba\n    const date = new Date()\n    //rok v ktoorm sa nachadzame\n    const year = date.getFullYear()\n    // mesiac aky ma kalendar pouzit\n    const month = date.getMonth()\n    // zistime aky den je prveho v nami zvoleneho mesiaca\n    let firstDayOfCurrentMonth = new Date(year, month).getDay()\n    // a celkovy pocet dni v mesiaci\n    const daysInMonth = new Date(year, month + 1, 0).getDate()\n\n    // ak je prvy den neela tak jej zmenit hodnotu na 7 pretoze nula robi bordel \n    if (firstDayOfCurrentMonth === 0) {\n        firstDayOfCurrentMonth = 7\n    }\n\n    // arr je pole kazdeho block v kalendary\n    let arr = []\n    // ocislovanie dni\n    let blockNumber = 1\n\n    let bookedDays = []\n\n    // sluzi na premenu {obj} s bookingmai na [arr] pre jednoduchsi for loop\n    if (calendar.booked) {\n        bookedDays = Object.keys(calendar.booked)\n    }\n\n    // a tu sa nam deje cele magia.. 42 je konstanta maximalnych dni \n    // ktore sa mozu v kalendari nachadzat aj s pradnimy blokmi na zaciatku\n    for (let i = 0; i < 42; i++) {\n        // pushneme do [arr] block s nulovym dnom(prazdne policko v kalendari) \n        // ak i este nedociahne na prvy den v kalendary (preto je nedela 7)\n        if (i < firstDayOfCurrentMonth - 1) {\n            arr.push({\n                day: 0\n            })\n            // ak uz prazdne dni (z minuleho mesiaca) mame zasebou \n        } else if (i < daysInMonth + firstDayOfCurrentMonth - 1) {\n            // pushneme do [arr] data ktore nam treba, cislo dna, pripadne bookingy atd\n            let obj = {}\n\n            // skontroluje ci v dany den je nejaky booking ak ano, \n            //doplni informacie o tom do {obj}\n            bookedDays.forEach((day, idx) => {\n                if (blockNumber === Number(day.split('/')[0])) {\n                    obj = {\n                        bookDate: day,\n                        booked: calendar.booked[day].length,\n                    }\n                    return\n                }\n            })\n\n\n            arr.push({\n                ...obj,\n                day: blockNumber++\n            })\n        }\n    }\n\n    const handleClick = (day, idx, bookDate) => {\n        const d = new Date(year, month, day)\n        const options = { weekday: 'long', month: 'long', day: 'numeric' };\n        setActiveIndex(idx)\n        setSelectedDate({\n            name: d.toLocaleDateString(\"sk-SK\", options),\n            value: bookDate\n        })\n    }\n\n    console.log(arr)\n\n    return (\n        <Container>\n            {\n                blocks.map(({ name }, idx) => (\n                    <HeaderBlock key={idx}>\n                        {name}\n                    </HeaderBlock>\n                ))\n            }\n            {\n                arr.map(({ day, booked, bookDate }, idx) => (\n                    <Dayblock key={idx} onClick={booked ? () => handleClick(day, idx, bookDate) : null}>\n                        {!(day === 0) && (\n                            <DayRowContainer>\n                                {booked && <BookingContainer active={idx === activeIndex}>{booked}</BookingContainer>}\n                                <DayNumber>{day}</DayNumber>\n                            </DayRowContainer>\n                        )}\n                    </Dayblock>\n                ))\n            }\n        </Container>\n    )\n}\n\nexport default Calendar\n","/imooptik-frontend/src/components/user-form/user-form.component.jsx",["582","583"],"/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx",["584","585"],"import React, { useEffect } from 'react'\n\nimport CustomFormSwitch from '../custom-form-switch/custom-form-switch.component'\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    CustomSelect,\n    Container,\n    GridRow,\n    ZeroMargin\n} from './new-user-form.styles'\n\n\nconst NewUserForm = ({ formToShow, switchFormButtons, toggleUserForm, user, handleChange, isAdmin, handleParameterChange }) => {\n\n\n    return (\n        <div>\n            {/* Akého uživatela chcete vytvoriť? */}\n            {isAdmin && <CustomFormSwitch\n                items={switchFormButtons}\n                title=\"Akého uživatela chcete vytvoriť?\"\n                activeIndex={formToShow}\n                handleClick={toggleUserForm}\n            />}\n\n            {\n                formToShow === 0 ? (\n                    <div>\n                        <div>\n                            <h2>Informácie</h2>\n                            <InputRow\n                                label=\"\"\n                                example='napr: John'\n                            >\n                                <CustomInput\n                                    label=\"Meno*\"\n                                    type='text'\n                                    name='fName'\n                                    value={user.fName}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: Doe'\n                            >\n                                <CustomInput\n                                    label=\"Priezvisko*\"\n                                    type='text'\n                                    name='lName'\n                                    value={user.lName}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: priklad@email.com'\n                            >\n                                <CustomInput\n                                    label=\"E-mail*\"\n                                    type='email'\n                                    name='email'\n                                    value={user.email}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: 091234567'\n                            >\n                                <CustomInput\n                                    label=\"Telefónne číslo\"\n                                    type='text'\n                                    name='phone'\n                                    value={user.phone}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                        </div>\n\n                        <Container>\n                            <h2>Fakturačné údaje</h2>\n                            <GridRow>\n                                <ZeroMargin>\n                                    <CustomInput\n                                        label=\"Ulica a čislo domu\"\n                                        type='text'\n                                        name='address'\n                                        value={user.address}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </ZeroMargin>\n                                <ZeroMargin>\n                                    <CustomInput\n                                        label=\"PSČ\"\n                                        type='text'\n                                        name='psc'\n                                        value={user.psc}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </ZeroMargin>\n                            </GridRow>\n                            <GridRow>\n                                <div>\n                                    <CustomInput\n                                        label=\"Mesto\"\n                                        type='text'\n                                        name='city'\n                                        value={user.city}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </div>\n                                <div>\n                                    <CustomInput\n                                        label=\"Krajina\"\n                                        type='text'\n                                        name='country'\n                                        value={user.country}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </div>\n                            </GridRow>\n                        </Container>\n\n                        <Container>\n                            <h2>Parametre</h2>\n\n                            <ParametersTable\n                                parameters={user.lenses}\n                                handleChange={handleParameterChange}\n                            />\n                        </Container>\n                    </div>\n                ) : (\n                        <div>\n                            <div>\n                                <h2>Admin panel</h2>\n                                <InputRow\n                                    label=\"Predajňa na ktorej uživatel pracuje\"\n                                    example=''\n                                >\n\n                                    <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Nezadané</option>\n\n                                        {\n                                            retailNames.map((name, idx) => {\n                                                if (idx === 4) return\n                                                return (\n                                                    <option key={idx} value={idx + 1}>{name}</option>\n\n                                                )\n                                            })\n                                        }\n                                    </CustomSelect>\n\n                                </InputRow>\n                                <InputRow\n                                    label=\"Výška administrativných práv\"\n                                    example=\"\"\n                                >\n                                    <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Zákaznik</option>\n                                        <option value={1}>Predavač</option>\n                                        <option value={2}>Vedúci</option>\n                                    </CustomSelect>\n\n                                </InputRow>\n                            </div>\n                            <div>\n                                <h2>Informácie</h2>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: John'\n                                >\n                                    <CustomInput\n                                        label=\"Meno*\"\n                                        type='text'\n                                        name='fName'\n                                        value={user.fName}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: Doe'\n                                >\n                                    <CustomInput\n                                        label=\"Priezvisko*\"\n                                        type='text'\n                                        name='lName'\n                                        value={user.lName}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: priklad@email.com'\n                                >\n                                    <CustomInput\n                                        label=\"E-mail*\"\n                                        type='email'\n                                        name='email'\n                                        value={user.email}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"Heslo použivatela, aspoň 1 velké pismeno, 1 malé pismeno a 1 číslo*\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Heslo*\"\n                                        type='password'\n                                        name='password'\n                                        value={user.password}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Potvrď heslo*\"\n                                        type='password'\n                                        name='confirmPassword'\n                                        value={user.confirmPassword}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n\n\n                            </div>\n                        </div>\n                    )\n            }\n        </div>\n    )\n}\n\nexport default NewUserForm\n","/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.component.jsx",["586","587"],"import React, { useEffect, useContext, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\n// import { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\n// import CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    // const {\n    //     getMessage,\n    //     setIsLoading,\n    //     setShowModal,\n    //     closeModal\n    // } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    // const getCropData = async (e) => {\n    //     e.preventDefault()\n    //     setShowModal(true)\n    //     setIsLoading(true)\n\n    //     try {\n    //         // if (typeof cropper !== 'undefined') {\n    //         toDataUrl(imgUrl, async (imgData) => {\n    //             const data = await handleImage(imgData, imageName, imageAlt)\n\n    //             if (data.image) {\n    //                 setImage(data.image._id)\n    //                 setSelectedImage(data.image)\n    //                 getImages()\n    //                 close()\n    //             }\n    //         })\n\n    //         // }\n    //         setShowModal(false)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    //     closeModal()\n    // };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Vybrať obrázok</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx",[],"/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx",[],"/imooptik-frontend/src/components/order-address-form/order-address-form.component.jsx",[],"/imooptik-frontend/src/components/combined-product-overview/combined-product-overview.component.jsx",[],"/imooptik-frontend/src/sections/order/sub-sections/summary/summary.sub-section.jsx",[],"/imooptik-frontend/src/sections/order/sub-sections/lenses/lenses.sub-section.jsx",[],"/imooptik-frontend/src/sections/order/sub-sections/eshop/eshop.sub-section.jsx",[],"/imooptik-frontend/src/sections/order/sub-sections/diopters/diopters.seb-section.jsx",["588"],"import React from 'react'\n\nimport CustomBackButton from '../../../../components/custom-back-button/custom-back-button.component'\nimport ParametersTable from '../../../../components/parameters-table/parameters-table.component'\n\nimport {\n    Title,\n    ParametersContainer,\n    NextButton\n} from '../../order.styles'\n\nconst DioptersSubSection = ({ handleChangeStep, combinedProduct, handleParameterChange }) => {\n    return (\n        <React.Fragment>\n            <CustomBackButton onClick={() => handleChangeStep(1)} />\n            <Title>Parametre</Title>\n\n            <ParametersTable\n                parameters={combinedProduct.lenses}\n                handleChange={handleParameterChange}\n            />\n\n            <NextButton onClick={() => handleChangeStep(3)}>Next</NextButton>\n        </React.Fragment>\n    )\n}\n\nexport default DioptersSubSection\n","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx",[],"/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx",[],"/imooptik-frontend/src/components/pagination/pagination.styles.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.styles.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx",[],"/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx",[],"/imooptik-frontend/src/components/user-form/user.form-styles.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx",[],"/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx",[],"/imooptik-frontend/src/components/combined-product-overview/combined-product-overview.styles.jsx",[],"/imooptik-frontend/src/components/order-address-form/order-address-form.styles.jsx",[],"/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx",[],"/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx",[],"/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx",[],"/imooptik-frontend/src/components/modal-info-container/modal-info-container.component.jsx",["589"],"import React from 'react'\n\n\nimport { useFetch } from '../../hooks/useFetch'\n\nimport OrderLensesOverview from '../order-lenses-overview/order-lenses-overview.component'\nimport OrderProductOverview from '../order-product-overview/order-product-overview.component'\n\nimport {\n    AiOutlineClose\n} from 'react-icons/ai'\n\nimport {\n    ModalContainer,\n    CloseButton\n} from './modal-info-container.styles'\n\nconst ModalInfoContaier = ({ product, productType, closeModal }) => {\n    const type = productType === 'lens' ? 'lenses' : 'products'\n    const { response, isLoading, error } = useFetch(`api/store/${type}/${product[productType]}`)\n\n    if (isLoading) return <ModalContainer><h1>Loading...</h1></ModalContainer>\n\n    if (response.lenses) {\n        return (\n            <ModalContainer>\n                <CloseButton onClick={closeModal}>Zatvoriť <div><AiOutlineClose /></div></CloseButton>\n                <OrderLensesOverview product={response.lenses} />\n            </ModalContainer>\n        )\n    }\n\n    return (\n        <ModalContainer>\n            <CloseButton onClick={closeModal}>Zatvoriť <div><AiOutlineClose /></div></CloseButton>\n            <OrderProductOverview product={response.product} />\n        </ModalContainer>\n    )\n}\n\nexport default ModalInfoContaier\n","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx",[],"/imooptik-frontend/src/components/order-product-overview/order-product-overview.component.jsx",[],"/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx",[],"/imooptik-frontend/src/components/order-lenses-overview/order-lenses-overview.component.jsx",[],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx",[],"/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx",[],"/imooptik-frontend/src/components/modal-info-container/modal-info-container.styles.jsx",[],"/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx",[],"/imooptik-frontend/src/components/order-lenses-overview/order-lenses-overview.styles.jsx",[],"/imooptik-frontend/src/components/order-product-overview/order-product-overview.styles.jsx",[],{"ruleId":"590","replacedBy":"591"},{"ruleId":"592","replacedBy":"593"},{"ruleId":"594","severity":1,"message":"595","line":7,"column":5,"nodeType":"596","messageId":"597","endLine":7,"endColumn":15},{"ruleId":"594","severity":1,"message":"598","line":54,"column":24,"nodeType":"596","messageId":"597","endLine":54,"endColumn":37},{"ruleId":"599","severity":1,"message":"600","line":146,"column":8,"nodeType":"601","endLine":146,"endColumn":32,"suggestions":"602"},{"ruleId":"594","severity":1,"message":"603","line":4,"column":23,"nodeType":"596","messageId":"597","endLine":4,"endColumn":34},{"ruleId":"594","severity":1,"message":"604","line":31,"column":19,"nodeType":"596","messageId":"597","endLine":31,"endColumn":27},{"ruleId":"594","severity":1,"message":"605","line":10,"column":5,"nodeType":"596","messageId":"597","endLine":10,"endColumn":13},{"ruleId":"599","severity":1,"message":"606","line":433,"column":8,"nodeType":"601","endLine":433,"endColumn":22,"suggestions":"607"},{"ruleId":"594","severity":1,"message":"608","line":29,"column":9,"nodeType":"596","messageId":"597","endLine":29,"endColumn":19},{"ruleId":"599","severity":1,"message":"609","line":89,"column":8,"nodeType":"601","endLine":89,"endColumn":36,"suggestions":"610"},{"ruleId":"599","severity":1,"message":"611","line":95,"column":8,"nodeType":"601","endLine":95,"endColumn":10,"suggestions":"612"},{"ruleId":"599","severity":1,"message":"613","line":129,"column":8,"nodeType":"601","endLine":129,"endColumn":21,"suggestions":"614"},{"ruleId":"599","severity":1,"message":"615","line":78,"column":8,"nodeType":"601","endLine":78,"endColumn":16,"suggestions":"616"},{"ruleId":"599","severity":1,"message":"617","line":88,"column":8,"nodeType":"601","endLine":88,"endColumn":21,"suggestions":"618"},{"ruleId":"599","severity":1,"message":"619","line":112,"column":8,"nodeType":"601","endLine":112,"endColumn":21,"suggestions":"620"},{"ruleId":"599","severity":1,"message":"621","line":64,"column":8,"nodeType":"601","endLine":64,"endColumn":15,"suggestions":"622"},{"ruleId":"599","severity":1,"message":"623","line":75,"column":8,"nodeType":"601","endLine":75,"endColumn":21,"suggestions":"624"},{"ruleId":"599","severity":1,"message":"625","line":88,"column":8,"nodeType":"601","endLine":88,"endColumn":21,"suggestions":"626"},{"ruleId":"599","severity":1,"message":"627","line":47,"column":8,"nodeType":"601","endLine":47,"endColumn":15,"suggestions":"628"},{"ruleId":"594","severity":1,"message":"629","line":21,"column":13,"nodeType":"596","messageId":"597","endLine":21,"endColumn":18},{"ruleId":"599","severity":1,"message":"630","line":56,"column":8,"nodeType":"601","endLine":56,"endColumn":21,"suggestions":"631"},{"ruleId":"599","severity":1,"message":"632","line":66,"column":8,"nodeType":"601","endLine":66,"endColumn":19,"suggestions":"633"},{"ruleId":"599","severity":1,"message":"634","line":72,"column":8,"nodeType":"601","endLine":72,"endColumn":19,"suggestions":"635"},{"ruleId":"599","severity":1,"message":"636","line":78,"column":8,"nodeType":"601","endLine":78,"endColumn":10,"suggestions":"637"},{"ruleId":"599","severity":1,"message":"638","line":131,"column":8,"nodeType":"601","endLine":131,"endColumn":12,"suggestions":"639"},{"ruleId":"599","severity":1,"message":"640","line":138,"column":8,"nodeType":"601","endLine":138,"endColumn":10,"suggestions":"641"},{"ruleId":"599","severity":1,"message":"642","line":146,"column":8,"nodeType":"601","endLine":146,"endColumn":18,"suggestions":"643"},{"ruleId":"594","severity":1,"message":"644","line":1,"column":17,"nodeType":"596","messageId":"597","endLine":1,"endColumn":25},{"ruleId":"599","severity":1,"message":"645","line":54,"column":8,"nodeType":"601","endLine":54,"endColumn":20,"suggestions":"646"},{"ruleId":"599","severity":1,"message":"636","line":60,"column":8,"nodeType":"601","endLine":60,"endColumn":10,"suggestions":"647"},{"ruleId":"594","severity":1,"message":"648","line":38,"column":13,"nodeType":"596","messageId":"597","endLine":38,"endColumn":19},{"ruleId":"594","severity":1,"message":"649","line":38,"column":21,"nodeType":"596","messageId":"597","endLine":38,"endColumn":28},{"ruleId":"599","severity":1,"message":"650","line":70,"column":8,"nodeType":"601","endLine":70,"endColumn":12,"suggestions":"651"},{"ruleId":"599","severity":1,"message":"652","line":85,"column":8,"nodeType":"601","endLine":85,"endColumn":14,"suggestions":"653"},{"ruleId":"599","severity":1,"message":"654","line":98,"column":8,"nodeType":"601","endLine":98,"endColumn":10,"suggestions":"655"},{"ruleId":"599","severity":1,"message":"656","line":40,"column":8,"nodeType":"601","endLine":40,"endColumn":18,"suggestions":"657"},{"ruleId":"599","severity":1,"message":"658","line":46,"column":8,"nodeType":"601","endLine":46,"endColumn":10,"suggestions":"659"},{"ruleId":"594","severity":1,"message":"660","line":12,"column":5,"nodeType":"596","messageId":"597","endLine":12,"endColumn":28},{"ruleId":"599","severity":1,"message":"661","line":42,"column":8,"nodeType":"601","endLine":42,"endColumn":17,"suggestions":"662"},{"ruleId":"599","severity":1,"message":"663","line":83,"column":8,"nodeType":"601","endLine":83,"endColumn":38,"suggestions":"664"},{"ruleId":"599","severity":1,"message":"665","line":89,"column":8,"nodeType":"601","endLine":89,"endColumn":12,"suggestions":"666"},{"ruleId":"599","severity":1,"message":"667","line":96,"column":8,"nodeType":"601","endLine":96,"endColumn":10,"suggestions":"668"},{"ruleId":"594","severity":1,"message":"669","line":5,"column":8,"nodeType":"596","messageId":"597","endLine":5,"endColumn":22},{"ruleId":"599","severity":1,"message":"670","line":22,"column":8,"nodeType":"601","endLine":22,"endColumn":10,"suggestions":"671"},{"ruleId":"672","severity":1,"message":"673","line":85,"column":40,"nodeType":"674","messageId":"675","endLine":85,"endColumn":46},{"ruleId":"599","severity":1,"message":"676","line":15,"column":8,"nodeType":"601","endLine":15,"endColumn":13,"suggestions":"677"},{"ruleId":"678","severity":1,"message":"679","line":83,"column":32,"nodeType":"680","messageId":"681","endLine":91,"endColumn":14},{"ruleId":"594","severity":1,"message":"682","line":19,"column":5,"nodeType":"596","messageId":"597","endLine":19,"endColumn":16},{"ruleId":"672","severity":1,"message":"673","line":57,"column":52,"nodeType":"674","messageId":"675","endLine":57,"endColumn":58},{"ruleId":"594","severity":1,"message":"683","line":1,"column":17,"nodeType":"596","messageId":"597","endLine":1,"endColumn":26},{"ruleId":"672","severity":1,"message":"673","line":155,"column":64,"nodeType":"674","messageId":"675","endLine":155,"endColumn":70},{"ruleId":"684","severity":1,"message":"685","line":148,"column":41,"nodeType":"686","endLine":148,"endColumn":61},{"ruleId":"684","severity":1,"message":"685","line":189,"column":45,"nodeType":"686","endLine":189,"endColumn":160},{"ruleId":"594","severity":1,"message":"687","line":8,"column":5,"nodeType":"596","messageId":"597","endLine":8,"endColumn":24},{"ruleId":"594","severity":1,"message":"688","line":20,"column":34,"nodeType":"596","messageId":"597","endLine":20,"endColumn":39},"no-native-reassign",["689"],"no-negated-in-lhs",["690"],"no-unused-vars","'fetchUsers' is defined but never used.","Identifier","unusedVar","'setTotalCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.","ArrayExpression",["691"],"'fetchImages' is defined but never used.","'setLimit' is assigned a value but never used.","'tabItems' is defined but never used.","React Hook useEffect has a missing dependency: 'combinedProduct'. Either include it or remove the dependency array. You can also do a functional update 'setCombinedProduct(c => ...)' if you only need 'combinedProduct' in the 'setCombinedProduct' call.",["692"],"'closeModal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'closeModal', 'getLenses', 'getProducts', and 'message'. Either include them or remove the dependency array.",["693"],"React Hook useEffect has a missing dependency: 'filteredItems'. Either include it or remove the dependency array.",["694"],"React Hook useEffect has missing dependencies: 'fuse', 'lensesArr', and 'products'. Either include them or remove the dependency array.",["695"],"React Hook useEffect has missing dependencies: 'activeIndex' and 'getOrders'. Either include them or remove the dependency array.",["696"],"React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array.",["697"],"React Hook useEffect has missing dependencies: 'activeIndex' and 'orders'. Either include them or remove the dependency array.",["698"],"React Hook useEffect has missing dependencies: 'activeIndex' and 'getFilteredUsers'. Either include them or remove the dependency array.",["699"],"React Hook useEffect has missing dependencies: 'getFilteredUsers' and 'users'. Either include them or remove the dependency array.",["700"],"React Hook useEffect has missing dependencies: 'activeIndex', 'getFilteredUsers', and 'users'. Either include them or remove the dependency array.",["701"],"React Hook useEffect has missing dependencies: 'activeIndex', 'getPosts', and 'items'. Either include them or remove the dependency array.",["702"],"'stats' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAnalytics' and 'items'. Either include them or remove the dependency array.",["703"],"React Hook useEffect has missing dependencies: 'getCalendars' and 'getUserBookings'. Either include them or remove the dependency array.",["704"],"React Hook useEffect has missing dependencies: 'bookings' and 'getBookings'. Either include them or remove the dependency array.",["705"],"React Hook useEffect has a missing dependency: 'resetBooking'. Either include it or remove the dependency array.",["706"],"React Hook useEffect has missing dependencies: 'formToShow', 'getSigleLenses', and 'getSingleProduct'. Either include them or remove the dependency array.",["707"],"React Hook useEffect has a missing dependency: 'resetProduct'. Either include it or remove the dependency array.",["708"],"React Hook useEffect has missing dependencies: 'getEanCode' and 'product.eanCode'. Either include them or remove the dependency array.",["709"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getCalendar'. Either include it or remove the dependency array.",["710"],["711"],"'userId' is assigned a value but never used.","'orderId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPost' and 'setSelectedImage'. Either include them or remove the dependency array.",["712"],"React Hook useEffect has a missing dependency: 'setSelectedImage'. Either include it or remove the dependency array.",["713"],"React Hook useEffect has a missing dependency: 'resetBlog'. Either include it or remove the dependency array.",["714"],"React Hook useEffect has a missing dependency: 'getCoupon'. Either include it or remove the dependency array.",["715"],"React Hook useEffect has a missing dependency: 'resetCoupons'. Either include it or remove the dependency array.",["716"],"'CouponOverviewContainer' is defined but never used.","React Hook useEffect has a missing dependency: 'getCoupons'. Either include it or remove the dependency array.",["717"],"React Hook useEffect has missing dependencies: 'user.fName', 'user.lName', and 'userObj'. Either include them or remove the dependency array. You can also do a functional update 'setUserObj(u => ...)' if you only need 'userObj' in the 'setUserObj' call.",["718"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["719"],"React Hook useEffect has a missing dependency: 'resetUser'. Either include it or remove the dependency array.",["720"],"'CustomCheckBox' is defined but never used.","React Hook useEffect has missing dependencies: 'options' and 'path'. Either include them or remove the dependency array.",["721"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has a missing dependency: 'action'. Either include it or remove the dependency array. If 'action' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["722"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'blockNumber'.","ArrowFunctionExpression","unsafeRefs","'ThreeColRow' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ParametersContainer' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"723","fix":"724"},{"desc":"725","fix":"726"},{"desc":"727","fix":"728"},{"desc":"729","fix":"730"},{"desc":"731","fix":"732"},{"desc":"733","fix":"734"},{"desc":"735","fix":"736"},{"desc":"737","fix":"738"},{"desc":"739","fix":"740"},{"desc":"739","fix":"741"},{"desc":"742","fix":"743"},{"desc":"744","fix":"745"},{"desc":"746","fix":"747"},{"desc":"748","fix":"749"},{"desc":"750","fix":"751"},{"desc":"752","fix":"753"},{"desc":"754","fix":"755"},{"desc":"756","fix":"757"},{"desc":"758","fix":"759"},{"desc":"760","fix":"761"},{"desc":"752","fix":"762"},{"desc":"763","fix":"764"},{"desc":"765","fix":"766"},{"desc":"767","fix":"768"},{"desc":"769","fix":"770"},{"desc":"771","fix":"772"},{"desc":"773","fix":"774"},{"desc":"775","fix":"776"},{"desc":"777","fix":"778"},{"desc":"779","fix":"780"},{"desc":"781","fix":"782"},{"desc":"783","fix":"784"},"Update the dependencies array to be: [user, user.fName, user.lName]",{"range":"785","text":"786"},"Update the dependencies array to be: [combinedProduct, selectedUser]",{"range":"787","text":"788"},"Update the dependencies array to be: [products, lensesArr, token, message, getProducts, getLenses, closeModal]",{"range":"789","text":"790"},"Update the dependencies array to be: [filteredItems]",{"range":"791","text":"792"},"Update the dependencies array to be: [fuse, lensesArr, products, searchQuery]",{"range":"793","text":"794"},"Update the dependencies array to be: [activeIndex, getOrders, orders]",{"range":"795","text":"796"},"Update the dependencies array to be: [activeIndex, orders]",{"range":"797","text":"798"},"Update the dependencies array to be: [activeIndex, orders, searchQuery]",{"range":"799","text":"800"},"Update the dependencies array to be: [activeIndex, getFilteredUsers, users]",{"range":"801","text":"802"},{"range":"803","text":"802"},"Update the dependencies array to be: [activeIndex, getFilteredUsers, searchQuery, users]",{"range":"804","text":"805"},"Update the dependencies array to be: [activeIndex, getPosts, items, posts]",{"range":"806","text":"807"},"Update the dependencies array to be: [activeIndex, getAnalytics, items]",{"range":"808","text":"809"},"Update the dependencies array to be: [calendars, getCalendars, getUserBookings]",{"range":"810","text":"811"},"Update the dependencies array to be: [bookings, calendars, getBookings]",{"range":"812","text":"813"},"Update the dependencies array to be: [resetBooking]",{"range":"814","text":"815"},"Update the dependencies array to be: [formToShow, getSigleLenses, getSingleProduct, id]",{"range":"816","text":"817"},"Update the dependencies array to be: [resetProduct]",{"range":"818","text":"819"},"Update the dependencies array to be: [getEanCode, product.eanCode, response]",{"range":"820","text":"821"},"Update the dependencies array to be: [calendarId, getCalendar]",{"range":"822","text":"823"},{"range":"824","text":"815"},"Update the dependencies array to be: [getPost, id, setSelectedImage]",{"range":"825","text":"826"},"Update the dependencies array to be: [post, setSelectedImage]",{"range":"827","text":"828"},"Update the dependencies array to be: [resetBlog]",{"range":"829","text":"830"},"Update the dependencies array to be: [couponId, getCoupon]",{"range":"831","text":"832"},"Update the dependencies array to be: [resetCoupons]",{"range":"833","text":"834"},"Update the dependencies array to be: [coupons, getCoupons]",{"range":"835","text":"836"},"Update the dependencies array to be: [user.fName, user.lName, userObj, userObj.fName, userObj.lName]",{"range":"837","text":"838"},"Update the dependencies array to be: [getUser, id]",{"range":"839","text":"840"},"Update the dependencies array to be: [resetUser]",{"range":"841","text":"842"},"Update the dependencies array to be: [options, path]",{"range":"843","text":"844"},"Update the dependencies array to be: [action, ref]",{"range":"845","text":"846"},[3272,3296],"[user, user.fName, user.lName]",[11638,11652],"[combinedProduct, selectedUser]",[2438,2466],"[products, lensesArr, token, message, getProducts, getLenses, closeModal]",[2592,2594],"[filteredItems]",[3404,3417],"[fuse, lensesArr, products, searchQuery]",[2132,2140],"[activeIndex, getOrders, orders]",[2442,2455],"[activeIndex, orders]",[3189,3202],"[activeIndex, orders, searchQuery]",[1726,1733],"[activeIndex, getFilteredUsers, users]",[1958,1971],[2272,2285],"[activeIndex, getFilteredUsers, searchQuery, users]",[1376,1383],"[activeIndex, getPosts, items, posts]",[1386,1399],"[activeIndex, getAnalytics, items]",[1736,1747],"[calendars, getCalendars, getUserBookings]",[1840,1851],"[bookings, calendars, getBookings]",[1943,1945],"[resetBooking]",[3586,3590],"[formToShow, getSigleLenses, getSingleProduct, id]",[3717,3719],"[resetProduct]",[3880,3890],"[getEanCode, product.eanCode, response]",[1564,1576],"[calendarId, getCalendar]",[1668,1670],[2204,2208],"[getPost, id, setSelectedImage]",[2603,2609],"[post, setSelectedImage]",[2903,2905],"[resetBlog]",[1171,1181],"[couponId, getCoupon]",[1273,1275],"[resetCoupons]",[1111,1120],"[coupons, getCoupons]",[2317,2347],"[user.fName, user.lName, userObj, userObj.fName, userObj.lName]",[2451,2455],"[getUser, id]",[2579,2581],"[resetUser]",[684,686],"[options, path]",[467,472],"[action, ref]"]
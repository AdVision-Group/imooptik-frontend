[{"/home/darken141/work/imooptik/imooptik-frontend/src/index.js":"1","/home/darken141/work/imooptik/imooptik-frontend/src/reportWebVitals.js":"2","/home/darken141/work/imooptik/imooptik-frontend/src/App.jsx":"3","/home/darken141/work/imooptik/imooptik-frontend/src/context/auth/auth.context.jsx":"4","/home/darken141/work/imooptik/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx":"5","/home/darken141/work/imooptik/imooptik-frontend/src/global.styles.jsx":"6","/home/darken141/work/imooptik/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx":"7","/home/darken141/work/imooptik/imooptik-frontend/src/pages/reset-password/reset-password.jsx":"8","/home/darken141/work/imooptik/imooptik-frontend/src/pages/dashboard/dashboard.jsx":"9","/home/darken141/work/imooptik/imooptik-frontend/src/components/popup/pop-up.component.jsx":"10","/home/darken141/work/imooptik/imooptik-frontend/src/context/auth/auth.queries.jsx":"11","/home/darken141/work/imooptik/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx":"12","/home/darken141/work/imooptik/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx":"13","/home/darken141/work/imooptik/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx":"14","/home/darken141/work/imooptik/imooptik-frontend/src/components/popup/pop.up.styles.jsx":"15","/home/darken141/work/imooptik/imooptik-frontend/src/components/sign-in/sign-in.component.jsx":"16","/home/darken141/work/imooptik/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx":"17","/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-input/custom-input.component.jsx":"18","/home/darken141/work/imooptik/imooptik-frontend/src/components/sidenav/sidenav.component.jsx":"19","/home/darken141/work/imooptik/imooptik-frontend/src/context/image/image.context.jsx":"20","/home/darken141/work/imooptik/imooptik-frontend/src/context/warehouse/warehouse.context.jsx":"21","/home/darken141/work/imooptik/imooptik-frontend/src/context/user/user.context.jsx":"22","/home/darken141/work/imooptik/imooptik-frontend/src/context/orders/orders.context.jsx":"23","/home/darken141/work/imooptik/imooptik-frontend/src/context/examination/examination.context.jsx":"24","/home/darken141/work/imooptik/imooptik-frontend/src/context/booking/booking.context.jsx":"25","/home/darken141/work/imooptik/imooptik-frontend/src/context/coupons/coupons.context.jsx":"26","/home/darken141/work/imooptik/imooptik-frontend/src/context/analytics/analytics.context.jsx":"27","/home/darken141/work/imooptik/imooptik-frontend/src/context/blog/blog.context.jsx":"28","/home/darken141/work/imooptik/imooptik-frontend/src/context/order/order.context.jsx":"29","/home/darken141/work/imooptik/imooptik-frontend/src/components/spinner/spinner.component.jsx":"30","/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-button/custom-button.component.jsx":"31","/home/darken141/work/imooptik/imooptik-frontend/src/sections/customers/customers.section.jsx":"32","/home/darken141/work/imooptik/imooptik-frontend/src/sections/analytics/analytics.section.jsx":"33","/home/darken141/work/imooptik/imooptik-frontend/src/sections/orders/orders.section.jsx":"34","/home/darken141/work/imooptik/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx":"35","/home/darken141/work/imooptik/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx":"36","/home/darken141/work/imooptik/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx":"37","/home/darken141/work/imooptik/imooptik-frontend/src/sections/post/post.section.jsx":"38","/home/darken141/work/imooptik/imooptik-frontend/src/sections/booking/booking.section.jsx":"39","/home/darken141/work/imooptik/imooptik-frontend/src/sections/product/product.section.jsx":"40","/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/order.section.jsx":"41","/home/darken141/work/imooptik/imooptik-frontend/src/sections/calendar/calendar.section.jsx":"42","/home/darken141/work/imooptik/imooptik-frontend/src/sections/coupons/coupons.section.jsx":"43","/home/darken141/work/imooptik/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx":"44","/home/darken141/work/imooptik/imooptik-frontend/src/sections/coupon/coupon.section.jsx":"45","/home/darken141/work/imooptik/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx":"46","/home/darken141/work/imooptik/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx":"47","/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx":"48","/home/darken141/work/imooptik/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx":"49","/home/darken141/work/imooptik/imooptik-frontend/src/context/image/image.queries.jsx":"50","/home/darken141/work/imooptik/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx":"51","/home/darken141/work/imooptik/imooptik-frontend/src/context/user/user.utils.jsx":"52","/home/darken141/work/imooptik/imooptik-frontend/src/context/user/user.queries.jsx":"53","/home/darken141/work/imooptik/imooptik-frontend/src/components/spinner/spinner.styles.jsx":"54","/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx":"55","/home/darken141/work/imooptik/imooptik-frontend/src/context/blog/blog.queries.jsx":"56","/home/darken141/work/imooptik/imooptik-frontend/src/utils/user.utils.jsx":"57","/home/darken141/work/imooptik/imooptik-frontend/src/utils/warehouse.utils.jsx":"58","/home/darken141/work/imooptik/imooptik-frontend/src/sections/analytics/analytics.styles.jsx":"59","/home/darken141/work/imooptik/imooptik-frontend/src/sections/customers/customers.styles.jsx":"60","/home/darken141/work/imooptik/imooptik-frontend/src/utils/analytics.utils.jsx":"61","/home/darken141/work/imooptik/imooptik-frontend/src/sections/orders/orders.styles.jsx":"62","/home/darken141/work/imooptik/imooptik-frontend/src/context/orders/orders.utils.jsx":"63","/home/darken141/work/imooptik/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx":"64","/home/darken141/work/imooptik/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx":"65","/home/darken141/work/imooptik/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx":"66","/home/darken141/work/imooptik/imooptik-frontend/src/sections/post/post.styles.jsx":"67","/home/darken141/work/imooptik/imooptik-frontend/src/sections/coupon/coupon.styles.jsx":"68","/home/darken141/work/imooptik/imooptik-frontend/src/sections/e-shop/e-shop.styles.jsx":"69","/home/darken141/work/imooptik/imooptik-frontend/src/sections/coupons/coupons.styles.jsx":"70","/home/darken141/work/imooptik/imooptik-frontend/src/sections/calendar/calendar.styles.jsx":"71","/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/order.styles.jsx":"72","/home/darken141/work/imooptik/imooptik-frontend/src/utils/calendar.utils.jsx":"73","/home/darken141/work/imooptik/imooptik-frontend/src/sections/product/product.styles.jsx":"74","/home/darken141/work/imooptik/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx":"75","/home/darken141/work/imooptik/imooptik-frontend/src/components/section-header/section-header.component.jsx":"76","/home/darken141/work/imooptik/imooptik-frontend/src/components/list-arrows/list-arrows.component.jsx":"77","/home/darken141/work/imooptik/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx":"78","/home/darken141/work/imooptik/imooptik-frontend/src/hooks/useFetch.jsx":"79","/home/darken141/work/imooptik/imooptik-frontend/src/components/user-form/user-form.component.jsx":"80","/home/darken141/work/imooptik/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx":"81","/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx":"82","/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx":"83","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-images/modal-images.component.jsx":"84","/home/darken141/work/imooptik/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx":"85","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.component.jsx":"86","/home/darken141/work/imooptik/imooptik-frontend/src/components/product-overview/product-overview.component.jsx":"87","/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-select/custom-select.component.jsx":"88","/home/darken141/work/imooptik/imooptik-frontend/src/components/product-service-form/product-service-form.component.jsx":"89","/home/darken141/work/imooptik/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.component.jsx":"90","/home/darken141/work/imooptik/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx":"91","/home/darken141/work/imooptik/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.component.jsx":"92","/home/darken141/work/imooptik/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx":"93","/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.component.jsx":"94","/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.component.jsx":"95","/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.component.jsx":"96","/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/steps/4-summary/summary.component.jsx":"97","/home/darken141/work/imooptik/imooptik-frontend/src/sections/booking/booking.styles.jsx":"98","/home/darken141/work/imooptik/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx":"99","/home/darken141/work/imooptik/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx":"100","/home/darken141/work/imooptik/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.component.jsx":"101","/home/darken141/work/imooptik/imooptik-frontend/src/context/week-calendar/week-calendar.context.jsx":"102","/home/darken141/work/imooptik/imooptik-frontend/src/components/calendar/calendar.component.jsx":"103","/home/darken141/work/imooptik/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.component.jsx":"104","/home/darken141/work/imooptik/imooptik-frontend/src/components/list-arrows/list-arrows.styles.jsx":"105","/home/darken141/work/imooptik/imooptik-frontend/src/components/user-form/user.form-styles.jsx":"106","/home/darken141/work/imooptik/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx":"107","/home/darken141/work/imooptik/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx":"108","/home/darken141/work/imooptik/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx":"109","/home/darken141/work/imooptik/imooptik-frontend/src/components/section-header/section-header.styles.jsx":"110","/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx":"111","/home/darken141/work/imooptik/imooptik-frontend/src/components/order-overview/order-overview.component.jsx":"112","/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx":"113","/home/darken141/work/imooptik/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx":"114","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx":"115","/home/darken141/work/imooptik/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx":"116","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.styles.jsx":"117","/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-select/custom-select.styles.jsx":"118","/home/darken141/work/imooptik/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx":"119","/home/darken141/work/imooptik/imooptik-frontend/src/components/product-service-form/product-service-form.styles.jsx":"120","/home/darken141/work/imooptik/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx":"121","/home/darken141/work/imooptik/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx":"122","/home/darken141/work/imooptik/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.styles.jsx":"123","/home/darken141/work/imooptik/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx":"124","/home/darken141/work/imooptik/imooptik-frontend/src/components/examinations-overview/examinations-overview.component.jsx":"125","/home/darken141/work/imooptik/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx":"126","/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx":"127","/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.styles.jsx":"128","/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.styles.jsx":"129","/home/darken141/work/imooptik/imooptik-frontend/src/utils/orders.utils.jsx":"130","/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.styles.jsx":"131","/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/steps/4-summary/summary.styles.jsx":"132","/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx":"133","/home/darken141/work/imooptik/imooptik-frontend/src/components/order-cart-row/order-cart-row.component.jsx":"134","/home/darken141/work/imooptik/imooptik-frontend/src/components/order-cart-lenses-row/order-cart-lenses-row.component.jsx":"135","/home/darken141/work/imooptik/imooptik-frontend/src/components/order-summary-product-name/order-summary-product-name.component.jsx":"136","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-order-update-user/modal-order-update-user.component.jsx":"137","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.component.jsx":"138","/home/darken141/work/imooptik/imooptik-frontend/src/components/order-summary-lenses-name/order-summary-lenses-name.component.jsx":"139","/home/darken141/work/imooptik/imooptik-frontend/src/components/calendar/calendar.styles.jsx":"140","/home/darken141/work/imooptik/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx":"141","/home/darken141/work/imooptik/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.styles.jsx":"142","/home/darken141/work/imooptik/imooptik-frontend/src/utils/week-calendar.utils.jsx":"143","/home/darken141/work/imooptik/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.styles.jsx":"144","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-userbookings-details/modal-userbookings-details.component.jsx":"145","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.component.jsx":"146","/home/darken141/work/imooptik/imooptik-frontend/src/components/calendar-booked-day/calendar-booked-day.component.jsx":"147","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-booking/modal-booking.component.jsx":"148","/home/darken141/work/imooptik/imooptik-frontend/src/hooks/useOutsideAlerter.jsx":"149","/home/darken141/work/imooptik/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx":"150","/home/darken141/work/imooptik/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx":"151","/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx":"152","/home/darken141/work/imooptik/imooptik-frontend/src/components/examinations-overview/examinations-overview.styles.jsx":"153","/home/darken141/work/imooptik/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx":"154","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-finish-deposited-order/modal-finish-deposited-order.component.jsx":"155","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.component.jsx":"156","/home/darken141/work/imooptik/imooptik-frontend/src/components/examination-user/examination-user.component.jsx":"157","/home/darken141/work/imooptik/imooptik-frontend/src/components/order-cart-row/order-cart-row.styles.jsx":"158","/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx":"159","/home/darken141/work/imooptik/imooptik-frontend/src/components/order-cart-lenses-row/order-cart-lenses-row.styles.jsx":"160","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.styles.jsx":"161","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-order-update-user/modal-order-update-user.styles.jsx":"162","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-userbookings-details/modal-userbookings-details.styles.jsx":"163","/home/darken141/work/imooptik/imooptik-frontend/src/components/calendar-booked-day/calendar-booked-day.styles.jsx":"164","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-booking/modal-booking.styles.jsx":"165","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.styles.jsx":"166","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-finish-deposited-order/modal-finish-deposited-order.styles.jsx":"167","/home/darken141/work/imooptik/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx":"168","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx":"169","/home/darken141/work/imooptik/imooptik-frontend/src/utils/parameters.utils.jsx":"170","/home/darken141/work/imooptik/imooptik-frontend/src/components/examination-user/examination-user.styles.jsx":"171","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-get-product-data/modal-get-product-data.component.jsx":"172","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-get-product-data/modal-get-product-data.styles.jsx":"173","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-get-lenses-data/modal-get-lenses-data.component.jsx":"174","/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-get-lenses-data/modal-get-lenses-data.styles.jsx":"175"},{"size":717,"mtime":1608670306490,"results":"176","hashOfConfig":"177"},{"size":362,"mtime":1608191294784,"results":"178","hashOfConfig":"177"},{"size":1799,"mtime":1614335619759,"results":"179","hashOfConfig":"177"},{"size":6979,"mtime":1615145205300,"results":"180","hashOfConfig":"177"},{"size":1076,"mtime":1610126635393,"results":"181","hashOfConfig":"177"},{"size":4820,"mtime":1614888552660,"results":"182","hashOfConfig":"177"},{"size":840,"mtime":1609978179243,"results":"183","hashOfConfig":"177"},{"size":1667,"mtime":1608613259561,"results":"184","hashOfConfig":"177"},{"size":9175,"mtime":1614598869716,"results":"185","hashOfConfig":"177"},{"size":714,"mtime":1609965412857,"results":"186","hashOfConfig":"177"},{"size":2292,"mtime":1610635788267,"results":"187","hashOfConfig":"177"},{"size":772,"mtime":1610476886850,"results":"188","hashOfConfig":"177"},{"size":545,"mtime":1612808589467,"results":"189","hashOfConfig":"177"},{"size":658,"mtime":1616022204450,"results":"190","hashOfConfig":"177"},{"size":721,"mtime":1612808901067,"results":"191","hashOfConfig":"177"},{"size":1925,"mtime":1609978226453,"results":"192","hashOfConfig":"177"},{"size":1466,"mtime":1609978281513,"results":"193","hashOfConfig":"177"},{"size":639,"mtime":1608689089980,"results":"194","hashOfConfig":"177"},{"size":2543,"mtime":1614988936648,"results":"195","hashOfConfig":"177"},{"size":4391,"mtime":1614335020409,"results":"196","hashOfConfig":"177"},{"size":26463,"mtime":1616159187050,"results":"197","hashOfConfig":"177"},{"size":12184,"mtime":1614335015009,"results":"198","hashOfConfig":"177"},{"size":7198,"mtime":1615234022855,"results":"199","hashOfConfig":"177"},{"size":3402,"mtime":1614335021629,"results":"200","hashOfConfig":"177"},{"size":7143,"mtime":1614335024459,"results":"201","hashOfConfig":"177"},{"size":6964,"mtime":1615644590950,"results":"202","hashOfConfig":"177"},{"size":2796,"mtime":1614335027909,"results":"203","hashOfConfig":"177"},{"size":4016,"mtime":1614335025529,"results":"204","hashOfConfig":"177"},{"size":9583,"mtime":1614336734559,"results":"205","hashOfConfig":"177"},{"size":178,"mtime":1608409397640,"results":"206","hashOfConfig":"177"},{"size":283,"mtime":1608325857586,"results":"207","hashOfConfig":"177"},{"size":5709,"mtime":1615644963250,"results":"208","hashOfConfig":"177"},{"size":12080,"mtime":1615643049650,"results":"209","hashOfConfig":"177"},{"size":7977,"mtime":1614889410870,"results":"210","hashOfConfig":"177"},{"size":6996,"mtime":1614335852519,"results":"211","hashOfConfig":"177"},{"size":5376,"mtime":1614275577027,"results":"212","hashOfConfig":"177"},{"size":810,"mtime":1610132345623,"results":"213","hashOfConfig":"177"},{"size":10042,"mtime":1614337519409,"results":"214","hashOfConfig":"177"},{"size":13855,"mtime":1614335007529,"results":"215","hashOfConfig":"177"},{"size":22620,"mtime":1616159218220,"results":"216","hashOfConfig":"177"},{"size":5356,"mtime":1614017510220,"results":"217","hashOfConfig":"177"},{"size":12222,"mtime":1614335005599,"results":"218","hashOfConfig":"177"},{"size":3073,"mtime":1615644856550,"results":"219","hashOfConfig":"177"},{"size":7163,"mtime":1614353019059,"results":"220","hashOfConfig":"177"},{"size":5729,"mtime":1615644639370,"results":"221","hashOfConfig":"177"},{"size":975,"mtime":1612808569627,"results":"222","hashOfConfig":"177"},{"size":898,"mtime":1609978275513,"results":"223","hashOfConfig":"177"},{"size":1331,"mtime":1612803190107,"results":"224","hashOfConfig":"177"},{"size":5222,"mtime":1614873801940,"results":"225","hashOfConfig":"177"},{"size":1560,"mtime":1610106635382,"results":"226","hashOfConfig":"177"},{"size":6852,"mtime":1616107698490,"results":"227","hashOfConfig":"177"},{"size":897,"mtime":1611960472114,"results":"228","hashOfConfig":"177"},{"size":3508,"mtime":1614335013909,"results":"229","hashOfConfig":"177"},{"size":377,"mtime":1608409635720,"results":"230","hashOfConfig":"177"},{"size":440,"mtime":1609635534260,"results":"231","hashOfConfig":"177"},{"size":1793,"mtime":1608678905090,"results":"232","hashOfConfig":"177"},{"size":431,"mtime":1613172969079,"results":"233","hashOfConfig":"177"},{"size":3134,"mtime":1616090803610,"results":"234","hashOfConfig":"177"},{"size":2644,"mtime":1614354246379,"results":"235","hashOfConfig":"177"},{"size":1737,"mtime":1614887788080,"results":"236","hashOfConfig":"177"},{"size":403,"mtime":1612912179069,"results":"237","hashOfConfig":"177"},{"size":2261,"mtime":1615235417795,"results":"238","hashOfConfig":"177"},{"size":889,"mtime":1614212868650,"results":"239","hashOfConfig":"177"},{"size":632,"mtime":1614275950637,"results":"240","hashOfConfig":"177"},{"size":1728,"mtime":1613609903180,"results":"241","hashOfConfig":"177"},{"size":728,"mtime":1610132354653,"results":"242","hashOfConfig":"177"},{"size":1888,"mtime":1614275708117,"results":"243","hashOfConfig":"177"},{"size":1170,"mtime":1614275830067,"results":"244","hashOfConfig":"177"},{"size":709,"mtime":1614352978139,"results":"245","hashOfConfig":"177"},{"size":1785,"mtime":1614889858300,"results":"246","hashOfConfig":"177"},{"size":3151,"mtime":1614275760737,"results":"247","hashOfConfig":"177"},{"size":454,"mtime":1612803607557,"results":"248","hashOfConfig":"177"},{"size":8244,"mtime":1614211537610,"results":"249","hashOfConfig":"177"},{"size":952,"mtime":1614275887497,"results":"250","hashOfConfig":"177"},{"size":655,"mtime":1613076713220,"results":"251","hashOfConfig":"177"},{"size":1521,"mtime":1614274612207,"results":"252","hashOfConfig":"177"},{"size":1810,"mtime":1613830248251,"results":"253","hashOfConfig":"177"},{"size":320,"mtime":1611163718930,"results":"254","hashOfConfig":"177"},{"size":3835,"mtime":1614269466837,"results":"255","hashOfConfig":"177"},{"size":11677,"mtime":1616178380010,"results":"256","hashOfConfig":"177"},{"size":13757,"mtime":1615233327625,"results":"257","hashOfConfig":"177"},{"size":651,"mtime":1608506295620,"results":"258","hashOfConfig":"177"},{"size":354,"mtime":1610748624680,"results":"259","hashOfConfig":"177"},{"size":8347,"mtime":1614335038309,"results":"260","hashOfConfig":"177"},{"size":425,"mtime":1609365301650,"results":"261","hashOfConfig":"177"},{"size":8076,"mtime":1615643247210,"results":"262","hashOfConfig":"177"},{"size":2188,"mtime":1614891396760,"results":"263","hashOfConfig":"177"},{"size":693,"mtime":1612972806200,"results":"264","hashOfConfig":"177"},{"size":2208,"mtime":1616083302660,"results":"265","hashOfConfig":"177"},{"size":8709,"mtime":1616109034470,"results":"266","hashOfConfig":"177"},{"size":6266,"mtime":1616111591280,"results":"267","hashOfConfig":"177"},{"size":5114,"mtime":1615300814521,"results":"268","hashOfConfig":"177"},{"size":11058,"mtime":1616100201750,"results":"269","hashOfConfig":"177"},{"size":5364,"mtime":1614335003019,"results":"270","hashOfConfig":"177"},{"size":6769,"mtime":1616090685370,"results":"271","hashOfConfig":"177"},{"size":3313,"mtime":1616090296200,"results":"272","hashOfConfig":"177"},{"size":10579,"mtime":1616177829090,"results":"273","hashOfConfig":"177"},{"size":2199,"mtime":1614275485717,"results":"274","hashOfConfig":"177"},{"size":2029,"mtime":1616100217530,"results":"275","hashOfConfig":"177"},{"size":999,"mtime":1612984003740,"results":"276","hashOfConfig":"177"},{"size":7467,"mtime":1615648643500,"results":"277","hashOfConfig":"177"},{"size":4381,"mtime":1616020836010,"results":"278","hashOfConfig":"177"},{"size":3274,"mtime":1614335044719,"results":"279","hashOfConfig":"177"},{"size":3418,"mtime":1613610106850,"results":"280","hashOfConfig":"177"},{"size":624,"mtime":1613416674392,"results":"281","hashOfConfig":"177"},{"size":2294,"mtime":1614205641940,"results":"282","hashOfConfig":"177"},{"size":1039,"mtime":1616082198410,"results":"283","hashOfConfig":"177"},{"size":1096,"mtime":1613574911250,"results":"284","hashOfConfig":"177"},{"size":854,"mtime":1614275040427,"results":"285","hashOfConfig":"177"},{"size":1186,"mtime":1614274639547,"results":"286","hashOfConfig":"177"},{"size":1124,"mtime":1612806552957,"results":"287","hashOfConfig":"177"},{"size":5535,"mtime":1616159482460,"results":"288","hashOfConfig":"177"},{"size":698,"mtime":1612898195179,"results":"289","hashOfConfig":"177"},{"size":2933,"mtime":1614889391600,"results":"290","hashOfConfig":"177"},{"size":4564,"mtime":1613054876220,"results":"291","hashOfConfig":"177"},{"size":447,"mtime":1609638204590,"results":"292","hashOfConfig":"177"},{"size":1934,"mtime":1613059142660,"results":"293","hashOfConfig":"177"},{"size":364,"mtime":1612973498140,"results":"294","hashOfConfig":"177"},{"size":2391,"mtime":1614891552200,"results":"295","hashOfConfig":"177"},{"size":918,"mtime":1614176766280,"results":"296","hashOfConfig":"177"},{"size":2158,"mtime":1616109779180,"results":"297","hashOfConfig":"177"},{"size":1743,"mtime":1616108713880,"results":"298","hashOfConfig":"177"},{"size":1115,"mtime":1612828420327,"results":"299","hashOfConfig":"177"},{"size":1533,"mtime":1614334298159,"results":"300","hashOfConfig":"177"},{"size":3862,"mtime":1614333797349,"results":"301","hashOfConfig":"177"},{"size":7827,"mtime":1615293307121,"results":"302","hashOfConfig":"177"},{"size":681,"mtime":1610146980773,"results":"303","hashOfConfig":"177"},{"size":3393,"mtime":1616090565700,"results":"304","hashOfConfig":"177"},{"size":4313,"mtime":1616090645040,"results":"305","hashOfConfig":"177"},{"size":1195,"mtime":1615294536561,"results":"306","hashOfConfig":"177"},{"size":1458,"mtime":1612888993149,"results":"307","hashOfConfig":"177"},{"size":4000,"mtime":1614021336030,"results":"308","hashOfConfig":"177"},{"size":341,"mtime":1610810143010,"results":"309","hashOfConfig":"177"},{"size":6880,"mtime":1614255879827,"results":"310","hashOfConfig":"177"},{"size":2272,"mtime":1614336737929,"results":"311","hashOfConfig":"177"},{"size":1274,"mtime":1614175269010,"results":"312","hashOfConfig":"177"},{"size":3595,"mtime":1614335035509,"results":"313","hashOfConfig":"177"},{"size":9098,"mtime":1614454401190,"results":"314","hashOfConfig":"177"},{"size":776,"mtime":1614175139190,"results":"315","hashOfConfig":"177"},{"size":1274,"mtime":1613074426100,"results":"316","hashOfConfig":"177"},{"size":1060,"mtime":1612969996230,"results":"317","hashOfConfig":"177"},{"size":2985,"mtime":1615648387580,"results":"318","hashOfConfig":"177"},{"size":2714,"mtime":1615646108690,"results":"319","hashOfConfig":"177"},{"size":1867,"mtime":1613151668320,"results":"320","hashOfConfig":"177"},{"size":3259,"mtime":1614335032869,"results":"321","hashOfConfig":"177"},{"size":10486,"mtime":1614335034419,"results":"322","hashOfConfig":"177"},{"size":2827,"mtime":1614335043069,"results":"323","hashOfConfig":"177"},{"size":5209,"mtime":1614335040719,"results":"324","hashOfConfig":"177"},{"size":1400,"mtime":1611365536654,"results":"325","hashOfConfig":"177"},{"size":1414,"mtime":1614205611820,"results":"326","hashOfConfig":"177"},{"size":2165,"mtime":1612803915567,"results":"327","hashOfConfig":"177"},{"size":486,"mtime":1610505703940,"results":"328","hashOfConfig":"177"},{"size":1997,"mtime":1614294905117,"results":"329","hashOfConfig":"177"},{"size":3006,"mtime":1616158971740,"results":"330","hashOfConfig":"177"},{"size":3387,"mtime":1616099675260,"results":"331","hashOfConfig":"177"},{"size":77096,"mtime":1616096546860,"results":"332","hashOfConfig":"177"},{"size":492,"mtime":1612389141090,"results":"333","hashOfConfig":"177"},{"size":2271,"mtime":1614334216279,"results":"334","hashOfConfig":"177"},{"size":349,"mtime":1612803624657,"results":"335","hashOfConfig":"177"},{"size":2470,"mtime":1614020404360,"results":"336","hashOfConfig":"177"},{"size":1643,"mtime":1614021440690,"results":"337","hashOfConfig":"177"},{"size":1679,"mtime":1613833041551,"results":"338","hashOfConfig":"177"},{"size":2236,"mtime":1613939348071,"results":"339","hashOfConfig":"177"},{"size":668,"mtime":1614109851303,"results":"340","hashOfConfig":"177"},{"size":2041,"mtime":1614111903193,"results":"341","hashOfConfig":"177"},{"size":3058,"mtime":1613236507011,"results":"342","hashOfConfig":"177"},{"size":2399,"mtime":1615294734611,"results":"343","hashOfConfig":"177"},{"size":1432,"mtime":1612827268487,"results":"344","hashOfConfig":"177"},{"size":4027,"mtime":1614985722558,"results":"345","hashOfConfig":"177"},{"size":831,"mtime":1616095268850,"results":"346","hashOfConfig":"177"},{"size":162,"mtime":1612389165420,"results":"347","hashOfConfig":"177"},{"size":5666,"mtime":1616109069090,"results":"348","hashOfConfig":"177"},{"size":3044,"mtime":1616102014260,"results":"349","hashOfConfig":"177"},{"size":4195,"mtime":1616114357420,"results":"350","hashOfConfig":"177"},{"size":3044,"mtime":1616109948850,"results":"351","hashOfConfig":"177"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wh2nsz",{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"416","messages":"417","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"420","messages":"421","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"422","messages":"423","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"428","messages":"429","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"430","messages":"431","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"432","messages":"433","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"436","messages":"437","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"438","messages":"439","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"440","messages":"441","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"526","messages":"527","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"528","messages":"529","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"534","messages":"535","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"536","messages":"537","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"538","messages":"539","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"540","messages":"541","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"542","messages":"543","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"554","messages":"555","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"556","messages":"557","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"600"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"620","messages":"621","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"626","messages":"627","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"628","messages":"629","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"642","messages":"643","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"644","messages":"645","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"646","messages":"647","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"648","messages":"649","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"650","messages":"651","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"664","messages":"665","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"600"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"701","messages":"702","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/darken141/work/imooptik/imooptik-frontend/src/index.js",[],"/home/darken141/work/imooptik/imooptik-frontend/src/reportWebVitals.js",[],"/home/darken141/work/imooptik/imooptik-frontend/src/App.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/context/auth/auth.context.jsx",["705"],"/home/darken141/work/imooptik/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/global.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/pages/reset-password/reset-password.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/pages/dashboard/dashboard.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/popup/pop-up.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/context/auth/auth.queries.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/popup/pop.up.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/sign-in/sign-in.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-input/custom-input.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/sidenav/sidenav.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/context/image/image.context.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/context/warehouse/warehouse.context.jsx",["706","707"],"/home/darken141/work/imooptik/imooptik-frontend/src/context/user/user.context.jsx",["708"],"/home/darken141/work/imooptik/imooptik-frontend/src/context/orders/orders.context.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/context/examination/examination.context.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/context/booking/booking.context.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/context/coupons/coupons.context.jsx",["709"],"/home/darken141/work/imooptik/imooptik-frontend/src/context/analytics/analytics.context.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/context/blog/blog.context.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/context/order/order.context.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/spinner/spinner.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-button/custom-button.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/customers/customers.section.jsx",["710","711","712"],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/analytics/analytics.section.jsx",["713","714"],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/orders/orders.section.jsx",["715","716"],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx",["717","718","719"],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx",["720","721","722","723"],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/post/post.section.jsx",["724","725","726"],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/booking/booking.section.jsx",["727","728"],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/product/product.section.jsx",["729","730","731","732","733","734","735","736"],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/order.section.jsx",["737","738","739"],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/calendar/calendar.section.jsx",["740"],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/coupons/coupons.section.jsx",["741","742"],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx",["743","744"],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/coupon/coupon.section.jsx",["745","746"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/context/image/image.queries.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/context/user/user.utils.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/context/user/user.queries.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/spinner/spinner.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/context/blog/blog.queries.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/utils/user.utils.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/utils/warehouse.utils.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/analytics/analytics.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/customers/customers.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/utils/analytics.utils.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/orders/orders.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/context/orders/orders.utils.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/post/post.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/coupon/coupon.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/e-shop/e-shop.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/coupons/coupons.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/calendar/calendar.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/order.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/utils/calendar.utils.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/product/product.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/section-header/section-header.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/list-arrows/list-arrows.component.jsx",["747","748"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/hooks/useFetch.jsx",["749","750","751"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/user-form/user-form.component.jsx",["752"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx",["753"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-images/modal-images.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.component.jsx",["754","755"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/product-overview/product-overview.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-select/custom-select.component.jsx",["756"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/product-service-form/product-service-form.component.jsx",["757","758"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.component.jsx",["759"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.component.jsx",["760"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx",["761","762"],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.component.jsx",["763"],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.component.jsx",["764"],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.component.jsx",["765","766"],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/steps/4-summary/summary.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/booking/booking.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.component.jsx",["767","768"],"/home/darken141/work/imooptik/imooptik-frontend/src/context/week-calendar/week-calendar.context.jsx",["769","770","771","772","773"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/calendar/calendar.component.jsx",["774","775","776"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/list-arrows/list-arrows.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/user-form/user.form-styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/section-header/section-header.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/order-overview/order-overview.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-select/custom-select.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/product-service-form/product-service-form.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx",[],["777","778"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/examinations-overview/examinations-overview.component.jsx",["779"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useFetchById } from '../../hooks/useFetch'\nimport { ExaminationContext } from '../../context/examination/examination.context'\n\nimport ExaminationUser from '../examination-user/examination-user.component'\nimport OptometristExaminationModal from '../modal-optometrist-examination/modal-optometrist-examination.component'\n\n// import {\n//     checkParameterValue\n// } from '../../utils/parameters.utils'\n\nimport {\n    ExaminationsOverviewContainer,\n    Header,\n    ExaminationContainer,\n    ExamHead,\n    // ExamTableContainer,\n    // HeadTableCol,\n    // TableCol,\n    ExaminationOptions,\n    AddButton,\n    UpdateButton,\n    DeleteButton\n} from './examinations-overview.styles'\n\nconst ExaminationsOverview = () => {\n    const params = useParams()\n    const examinationData = useFetchById(\"api/admin/exams/user\", params.id)\n    const { deleteExamination } = useContext(ExaminationContext)\n    const [showOptometristModal, setShowOptometristModal] = useState(false)\n    const [examinations, setExaminations] = useState([])\n    const [examinationToUpdate, setExaminationToUpdate] = useState(null)\n\n    const handleUpdateClick = (e, id) => {\n        e.preventDefault()\n        setExaminationToUpdate(id)\n        setShowOptometristModal(true)\n    }\n\n    const handleDelete = (e, id) => {\n        e.preventDefault()\n        deleteExamination(id)\n        examinationData.refetch()\n    }\n\n    const handleCloseModal = () => {\n        setShowOptometristModal(false)\n        setExaminationToUpdate(null)\n    }\n\n    useEffect(() => {\n        if (!examinationData.isLoading) {\n            if (examinationData.response) {\n                setExaminations(examinationData.response.exams)\n            }\n        }\n    }, [examinationData.isLoading])\n\n    return (\n        <ExaminationsOverviewContainer>\n            {showOptometristModal && <OptometristExaminationModal\n                userId={params.id}\n                examinationToUpdate={examinationToUpdate}\n                refetch={examinationData.refetch}\n                close={handleCloseModal}\n            />}\n            <Header>\n                <h2>Vyšetrenia</h2>\n                <div>\n                    <AddButton type='button' onClick={() => setShowOptometristModal(true)}>Pridať prehliadku</AddButton>\n                </div>\n            </Header>\n\n\n            <div>\n                {examinations && examinations.map((examination, idx) => (\n                    <ExaminationContainer key={idx}>\n                        <ExamHead>\n                            <h3>Dátum:</h3>\n                            <p>{new Date(examination?.date).toLocaleDateString(\"sk-SK\", { weekday: 'long', month: 'long', day: 'numeric' })}</p>\n                        </ExamHead>\n                        <ExamHead>\n                            <h3>Typ vyšetrenia:</h3>\n                            <p>{examTypes[examination?.type - 1].name}</p>\n                        </ExamHead>\n\n                        <ExaminationOptions>\n                            <ExaminationUser userId={examination.doneBy} />\n                            <div>\n                                <UpdateButton onClick={e => handleUpdateClick(e, examination._id)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={e => handleDelete(e, examination._id)}>Vymazať</DeleteButton>\n                            </div>\n                        </ExaminationOptions>\n                    </ExaminationContainer>\n                ))}\n            </div>\n        </ExaminationsOverviewContainer>\n    )\n}\n\nexport default ExaminationsOverview\n\nconst examTypes = [\n    {\n        name: \"Refrakcia\",\n        value: 1\n    },\n    {\n        name: \"Anamnéza\",\n        value: 2\n    },\n    {\n        name: \"Kontrola\",\n        value: 3\n    },\n]","/home/darken141/work/imooptik/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx",["780","781","782","783","784"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/utils/orders.utils.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/sections/order/steps/4-summary/summary.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/order-cart-row/order-cart-row.component.jsx",["785"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/order-cart-lenses-row/order-cart-lenses-row.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/order-summary-product-name/order-summary-product-name.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-order-update-user/modal-order-update-user.component.jsx",["786","787"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.component.jsx",["788"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/order-summary-lenses-name/order-summary-lenses-name.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/calendar/calendar.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/utils/week-calendar.utils.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-userbookings-details/modal-userbookings-details.component.jsx",["789"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.component.jsx",["790","791"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/calendar-booked-day/calendar-booked-day.component.jsx",["792","793"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-booking/modal-booking.component.jsx",["794"],"/home/darken141/work/imooptik/imooptik-frontend/src/hooks/useOutsideAlerter.jsx",["795"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/examinations-overview/examinations-overview.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx",["796"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-finish-deposited-order/modal-finish-deposited-order.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.component.jsx",["797","798"],"import React, { useState, useContext, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { ExaminationContext } from '../../context/examination/examination.context'\nimport { useFetchById } from '../../hooks/useFetch'\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    checkParameter,\n    formatParameter,\n    checkParameterValue\n} from '../../utils/parameters.utils'\n\nimport {\n    CloseButton,\n    Modal,\n    ModalContainer,\n    SubmitButton,\n    Container,\n    ExamTypeCheckbox,\n    TwoColContainer,\n    InputContainer,\n    IsSuitableCheckbox,\n    Col,\n    Table,\n    TableTitleCol,\n    TableCol,\n    // TableBlock,\n    ObjectiveRefTable,\n    SubjectiveRefTable,\n    ExamTable,\n    RefractTable,\n    KerathTable,\n    SubjectiveRefATable,\n    ContactLensesTable,\n    ContactLensesTypeTable\n} from './modal-optometrist-examination.styles'\n\nconst OptometristExaminationModal = ({ close, refetch, userId, examinationToUpdate }) => {\n    const examinationData = useFetchById('api/admin/exams', examinationToUpdate, !examinationToUpdate)\n\n    const { createExamination, updateExamination } = useContext(ExaminationContext)\n    const [examinationObj, setExaminationObj] = useState({})\n    const [recomendation, setRecomendation] = useState('')\n\n    //REFRAKCIA\n    const [vlastne_okuliare, setVlastne_okuliare] = useState({})\n    const [objektivna_refrakcia, setObjektivna_refrakcia] = useState({})\n    const [subjektivna_refrakcia, setSubjektivna_refrakcia] = useState({})\n\n\n    //ANAMNEZA\n    const [refraktometer, setRefraktometer] = useState({})\n    const [keratometer, setKeratometer] = useState({})\n    const [subjektivna_refrakciaA, setSubjektivna_refrakciaA] = useState({})\n    const [kontaktne_sosovky, setKontaktne_sosovky] = useState({})\n    const [typ_kontaktnych_sosoviek, setTyp_kontaktnych_sosoviek] = useState({})\n\n    //KONTROLA\n    const [tabulka, setTabulka] = useState({})\n\n    const [activeExamType, setActiveExamType] = useState(1)\n\n    const handleParameterChange = (e, idx, parameterObj, updateParameter) => {\n        const { name, value } = e.target\n        let arr = parameterObj[name] || [1001, 1001]\n        arr[idx] = value === '' ? 1001 : value\n\n        updateParameter({\n            ...parameterObj,\n            [name]: arr\n        })\n    }\n\n    const handleDomEye = (num, paramObj, handleChange) => {\n        if (paramObj?.domoko === num) {\n            handleChange(prevValue => ({\n                ...prevValue,\n                domoko: 0,\n            }))\n        } else {\n            handleChange(prevValue => ({\n                ...prevValue,\n                domoko: num,\n            }))\n        }\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete examinationObj[name]\n            setExaminationObj({\n                ...examinationObj,\n            })\n            return\n        }\n\n        setExaminationObj({\n            ...examinationObj,\n            [name]: value\n        })\n    }\n\n    const formatParameters = (e, newParameters, parameterObj, updateParameter) => {\n        if (newParameters) {\n            const { name } = e.target\n            updateParameter({\n                ...parameterObj,\n                [name]: newParameters.map(value => formatParameter(value))\n            })\n        }\n    }\n\n    const formatStringParameters = (e, newParameters, parameterObj, updateParameter) => {\n        if (newParameters) {\n            const { name } = e.target\n            updateParameter({\n                ...parameterObj,\n                [name]: newParameters.map(value => value)\n            })\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        let examObj = {\n            doneTo: userId,\n            type: activeExamType,\n            ...(recomendation !== \"\") && { doporucenia: recomendation }\n            // parameters: {\n            //     ...parameters\n            // }\n        }\n\n        if (activeExamType === 1) {\n            examObj = {\n                ...examObj,\n                refrakcia: {\n                    ...examinationObj,\n                    vlastne_okuliare: {\n                        ...vlastne_okuliare\n                    },\n                    objektivna_refrakcia: {\n                        ...objektivna_refrakcia\n                    },\n                    subjektivna_refrakcia: {\n                        ...subjektivna_refrakcia\n                    }\n                },\n            }\n        }\n\n        if (activeExamType === 2) {\n            examObj = {\n                ...examObj,\n                anamneza: {\n                    ...examinationObj,\n                    vlastne_okuliare: {\n                        ...vlastne_okuliare\n                    },\n                    refraktometer: {\n                        ...refraktometer\n                    },\n                    keratometer: {\n                        ...keratometer\n                    },\n                    subjektivna_refrakcia: {\n                        ...subjektivna_refrakciaA\n                    },\n                    kontaktne_sosovky: {\n                        ...kontaktne_sosovky\n                    },\n                    typ_kontaktnych_sosoviek: {\n                        ...typ_kontaktnych_sosoviek\n                    }\n                },\n            }\n        }\n\n        if (activeExamType === 3) {\n            examObj = {\n                ...examObj,\n                kontrola: {\n                    ...examinationObj,\n                    tabulka: {\n                        ...tabulka\n                    },\n                },\n            }\n        }\n\n        // console.log(\"EXAMINATION OBJECT BEFORE SEND\")\n        // console.log(examObj)\n\n        if (examinationToUpdate) {\n            delete examObj[\"doneTo\"]\n\n            updateExamination(examObj, examinationToUpdate)\n\n        } else {\n            createExamination(examObj)\n        }\n        refetch()\n        close()\n    }\n\n    useEffect(() => {\n        if (!!examinationToUpdate) return\n        setExaminationObj({})\n        setVlastne_okuliare({})\n        setObjektivna_refrakcia({})\n        setSubjektivna_refrakcia({})\n        setRefraktometer({})\n        setKeratometer({})\n        setSubjektivna_refrakciaA({})\n        setKontaktne_sosovky({})\n        setTyp_kontaktnych_sosoviek({})\n        setTabulka({})\n        setRecomendation('')\n    }, [activeExamType])\n\n    useEffect(() => {\n        if (!examinationData.isLoading) {\n            if (examinationData.response) {\n\n                if (examinationData.response?.exam?.type === 1) {\n                    let examObj = examinationData.response?.exam\n                    setVlastne_okuliare({\n                        ...examObj?.refrakcia?.vlastne_okuliare\n                    })\n                    setObjektivna_refrakcia({\n                        ...examObj?.refrakcia?.objektivna_refrakcia\n                    })\n                    setSubjektivna_refrakcia({\n                        ...examObj?.refrakcia?.subjektivna_refrakcia\n                    })\n\n                    setRecomendation(examObj?.doporucenia || \"\")\n                    setActiveExamType(examObj?.type)\n\n                    // delete examObj[\"refrakcia\"]\n                    delete examObj.refrakcia[\"vlastne_okuliare\"]\n                    delete examObj.refrakcia[\"objektivna_refrakcia\"]\n                    delete examObj.refrakcia[\"subjektivna_refrakcia\"]\n                    delete examObj[\"kontrola\"]\n                    delete examObj[\"anamneza\"]\n                    delete examObj[\"doneTo\"]\n                    delete examObj[\"doneBy\"]\n                    delete examObj[\"date\"]\n                    delete examObj[\"_id\"]\n                    delete examObj[\"__v\"]\n                    delete examObj[\"doporucenia\"]\n                    delete examObj[\"type\"]\n\n                    setExaminationObj({\n                        ...examObj?.refrakcia\n                    })\n                }\n\n                if (examinationData.response?.exam?.type === 2) {\n                    let examObj = examinationData.response?.exam\n                    setActiveExamType(examObj?.type)\n\n\n                    setVlastne_okuliare({\n                        ...examObj?.anamneza?.vlastne_okuliare\n                    })\n                    setRefraktometer({\n                        ...examObj?.anamneza?.refraktometer\n                    })\n                    setKeratometer({\n                        ...examObj?.anamneza?.keratometer\n                    })\n                    setSubjektivna_refrakciaA({\n                        ...examObj?.anamneza?.subjektivna_refrakcia\n                    })\n                    setKontaktne_sosovky({\n                        ...examObj?.anamneza?.kontaktne_sosovky\n                    })\n                    setTyp_kontaktnych_sosoviek({\n                        ...examObj?.anamneza?.typ_kontaktnych_sosoviek\n                    })\n\n                    setRecomendation(examObj?.doporucenia || \"\")\n\n                    delete examObj.anamneza[\"vlastne_okuliare\"]\n                    delete examObj.anamneza[\"refraktometer\"]\n                    delete examObj.anamneza[\"keratometer\"]\n                    delete examObj.anamneza[\"subjektivna_refrakcia\"]\n                    delete examObj.anamneza[\"kontaktne_sosovky\"]\n                    delete examObj.anamneza[\"typ_kontaktnych_sosoviek\"]\n                    delete examObj[\"kontrola\"]\n                    delete examObj[\"refrakcia\"]\n                    delete examObj[\"doneTo\"]\n                    delete examObj[\"doneBy\"]\n                    delete examObj[\"date\"]\n                    delete examObj[\"_id\"]\n                    delete examObj[\"__v\"]\n                    delete examObj[\"doporucenia\"]\n                    delete examObj[\"type\"]\n\n                    setExaminationObj({\n                        ...examObj?.anamneza\n                    })\n\n\n                }\n\n                if (examinationData.response?.exam?.type === 3) {\n                    let examObj = examinationData.response?.exam\n\n\n                    setActiveExamType(examObj?.type)\n\n                    setTabulka({\n                        ...examObj?.kontrola?.tabulka\n                    })\n\n                    setRecomendation(examObj?.doporucenia || \"\")\n\n                    delete examObj.kontrola[\"tabulka\"]\n                    delete examObj[\"anamneza\"]\n                    delete examObj[\"refrakcia\"]\n                    delete examObj[\"doneTo\"]\n                    delete examObj[\"doneBy\"]\n                    delete examObj[\"date\"]\n                    delete examObj[\"_id\"]\n                    delete examObj[\"__v\"]\n                    delete examObj[\"doporucenia\"]\n                    delete examObj[\"type\"]\n\n                    setExaminationObj({\n                        ...examObj?.kontrola\n                    })\n                }\n\n\n                // setParameters(examinationData.response?.exam?.parameters)\n                // setExaminationObj(examinationData.response?.exam)\n            }\n        }\n    }, [examinationToUpdate, examinationData.isLoading])\n\n    useEffect(() => {\n        return () => {\n            setExaminationObj({})\n            setExaminationObj({})\n            setVlastne_okuliare({})\n            setObjektivna_refrakcia({})\n            setSubjektivna_refrakcia({})\n            setRefraktometer({})\n            setKeratometer({})\n            setSubjektivna_refrakciaA({})\n            setKontaktne_sosovky({})\n            setTyp_kontaktnych_sosoviek({})\n            setTabulka({})\n            setRecomendation('')\n        }\n    }, [])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Vyšetrenie</h3>\n                {!examinationToUpdate && <Container>\n                    <h4>Typ prehliadky</h4>\n                    <div>\n                        {examTypes.map((type, idx) => (\n                            <ExamTypeCheckbox\n                                key={idx}\n                                label={type.name}\n                                isActive={activeExamType === type.value}\n                                handleClick={() => setActiveExamType(type.value)}\n                            />\n                        ))}\n                    </div>\n                </Container>}\n\n                {activeExamType === 1 && (\n                    <Container>\n                        <h4>Refrakcia</h4>\n                        <TwoColContainer>\n                            <div>\n                                <h5>Nosi od:</h5>\n                                <CustomInput\n                                    label={''}\n                                    value={examinationObj?.nosi_od || \"\"}\n                                    type=\"date\"\n                                    name=\"nosi_od\"\n                                    handleChange={handleChange}\n                                />\n                            </div>\n                            <div>\n                                <h5>Posledná korekcia:</h5>\n                                <CustomInput\n                                    label={''}\n                                    value={examinationObj?.posledna_korekcia || \"\"}\n                                    type=\"date\"\n                                    name=\"posledna_korekcia\"\n                                    handleChange={handleChange}\n                                />\n                            </div>\n                        </TwoColContainer>\n                        <TwoColContainer>\n                            <InputContainer>\n                                <CustomInput\n                                    label={'Typ, spôsob'}\n                                    value={examinationObj?.typ_sposob || \"\"}\n                                    type=\"text\"\n                                    name=\"typ_sposob\"\n                                    handleChange={handleChange}\n                                />\n                            </InputContainer>\n                            <InputContainer>\n                                <IsSuitableCheckbox\n                                    label={\"Vyhovuje\"}\n                                    isActive={examinationObj?.vyhovuje || false}\n                                    handleClick={() => handleChange({\n                                        target: {\n                                            name: \"vyhovuje\",\n                                            value: examinationObj?.vyhovuje ? !examinationObj.vyhovuje : true\n                                        }\n                                    })}\n                                />\n                            </InputContainer>\n                        </TwoColContainer>\n                        <InputContainer>\n                            <CustomTextarea\n                                label='Anamnéza'\n                                name=\"anamneza\"\n                                value={examinationObj?.anamneza || ''}\n                                rows=\"5\"\n                                handleChange={handleChange}\n                            />\n                        </InputContainer>\n                        <InputContainer>\n                            <CustomTextarea\n                                label='Doplňujúce informácie'\n                                name=\"dopl_info\"\n                                value={examinationObj?.dopl_info || \"\"}\n                                rows=\"3\"\n                                handleChange={handleChange}\n                            />\n                        </InputContainer>\n\n                        <h4>Vlastné okuliare</h4>\n\n                        <Table>\n                            <TableTitleCol>\n                                <Col>{\"-\"}</Col>\n                                <Col>P.</Col>\n                                <Col>L.</Col>\n                            </TableTitleCol>\n\n                            <TableCol>\n                                <Col>V.NATUR</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='vnatur'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.vnatur, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.vnatur, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>SPH</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='sph'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.sph, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.sph, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>CYL</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='cyl'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.cyl, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.cyl, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n\n                            </TableCol>\n                            <TableCol>\n                                <Col>AX</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='ax'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.ax, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.ax, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n\n                            </TableCol>\n                            <TableCol>\n                                <Col>ADICIA</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='add'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.add, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.add, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n\n                            </TableCol>\n                            <TableCol>\n                                <Col>V.ISUS</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='visus'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.visus, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.visus, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n\n                            </TableCol>\n                            <TableCol>\n                                <Col>V.BINO</Col>\n                                <Col>\n                                    <input\n                                        name='vbino'\n                                        type='text'\n                                        value={checkParameterValue(vlastne_okuliare?.vbino)}\n                                        onChange={e => setVlastne_okuliare(prevValue => ({\n                                            ...prevValue,\n                                            [e.target.name]: e.target.value\n                                        }))}\n                                        onBlur={(e) => setVlastne_okuliare(prevValue => ({\n                                            ...prevValue,\n                                            [e.target.name]: Number(e.target.value)\n                                        }))}\n                                    />\n                                </Col>\n                            </TableCol>\n                        </Table>\n\n                        <h4>Objektivná refrakcia</h4>\n\n                        <ObjectiveRefTable>\n                            <TableTitleCol>\n                                <Col>{\"-\"}</Col>\n                                <Col>P.</Col>\n                                <Col>L.</Col>\n                            </TableTitleCol>\n\n                            <TableCol>\n                                <Col>SPH</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='sph'\n                                            type='text'\n                                            value={checkParameter(objektivna_refrakcia?.sph, idx)}\n                                            onChange={e => handleParameterChange(e, idx, objektivna_refrakcia, setObjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, objektivna_refrakcia?.sph, objektivna_refrakcia, setObjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>CYL</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='cyl'\n                                            type='text'\n                                            value={checkParameter(objektivna_refrakcia?.cyl, idx)}\n                                            onChange={e => handleParameterChange(e, idx, objektivna_refrakcia, setObjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, objektivna_refrakcia?.cyl, objektivna_refrakcia, setObjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>AX</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='ax'\n                                            type='text'\n                                            value={checkParameter(objektivna_refrakcia?.ax, idx)}\n                                            onChange={e => handleParameterChange(e, idx, objektivna_refrakcia, setObjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, objektivna_refrakcia?.ax, objektivna_refrakcia, setObjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>SE</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='se'\n                                            type='text'\n                                            value={checkParameter(objektivna_refrakcia?.se, idx)}\n                                            onChange={e => handleParameterChange(e, idx, objektivna_refrakcia, setObjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, objektivna_refrakcia?.se, objektivna_refrakcia, setObjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                        </ObjectiveRefTable>\n\n                        <h4>Subjektivná refrakcia</h4>\n\n                        <SubjectiveRefTable>\n                            <TableTitleCol>\n                                <Col>{\"-\"}</Col>\n                                <Col isActive={subjektivna_refrakcia?.domoko === 1} clickable onClick={() => handleDomEye(1, subjektivna_refrakcia, setSubjektivna_refrakcia)}>P.</Col>\n                                <Col isActive={subjektivna_refrakcia?.domoko === 2} clickable onClick={() => handleDomEye(2, subjektivna_refrakcia, setSubjektivna_refrakcia)}>L.</Col>\n                            </TableTitleCol>\n\n                            <TableCol>\n                                <Col>SPH</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='sph'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.sph, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.sph, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>CYL</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='cyl'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.cyl, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.cyl, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>AX</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='ax'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.ax, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.ax, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>ADICIA</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='add'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.add, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.add, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>V.ISUS</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='visus'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.visus, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.visus, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>V.BINO</Col>\n                                <Col>\n                                    <input\n                                        name='vbino'\n                                        type='text'\n                                        value={checkParameterValue(subjektivna_refrakcia?.vbino)}\n                                        onChange={e => setSubjektivna_refrakcia(prevValue => ({\n                                            ...prevValue,\n                                            [e.target.name]: e.target.value\n                                        }))}\n                                        onBlur={(e) => setSubjektivna_refrakcia(prevValue => ({\n                                            ...prevValue,\n                                            [e.target.name]: Number(e.target.value)\n                                        }))}\n                                    />\n                                </Col>\n                            </TableCol>\n                            <TableCol>\n                                <Col>PRIZMA</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='prizma'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.prizma, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.prizma, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>BÁZA</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='basis'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.basis, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.basis, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>OS</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='os'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.os, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.os, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n\n                        </SubjectiveRefTable>\n                    </Container>\n                )}\n\n                {activeExamType === 2 && (\n                    <Container>\n                        <h4>Anamnéza</h4>\n\n                        <TwoColContainer>\n                            <div>\n                                <h5>Nosi od:</h5>\n                                <CustomInput\n                                    label={''}\n                                    value={examinationObj?.nosi_od || \"\"}\n                                    type=\"date\"\n                                    name=\"nosi_od\"\n                                    handleChange={handleChange}\n                                />\n                            </div>\n                            <div>\n                                <h5>Posledná korekcia:</h5>\n                                <CustomInput\n                                    label={''}\n                                    value={examinationObj?.posledna_korekcia || \"\"}\n                                    type=\"date\"\n                                    name=\"posledna_korekcia\"\n                                    handleChange={handleChange}\n                                />\n                            </div>\n                        </TwoColContainer>\n                        <TwoColContainer>\n                            <InputContainer>\n                                <CustomInput\n                                    label={'Typ, spôsob'}\n                                    value={examinationObj?.typ_sposob || \"\"}\n                                    type=\"text\"\n                                    name=\"typ_sposob\"\n                                    handleChange={handleChange}\n                                />\n                            </InputContainer>\n                            <InputContainer>\n                                <IsSuitableCheckbox\n                                    label={\"Vyhovuje\"}\n                                    isActive={examinationObj?.vyhovuje || false}\n                                    handleClick={() => handleChange({\n                                        target: {\n                                            name: \"vyhovuje\",\n                                            value: examinationObj?.vyhovuje ? !examinationObj.vyhovuje : true\n                                        }\n                                    })}\n                                />\n                            </InputContainer>\n                        </TwoColContainer>\n                        <InputContainer>\n                            <CustomInput\n                                label='Stav a povolanie'\n                                name=\"stav_a_povolanie\"\n                                value={examinationObj?.stav_a_povolanie || ''}\n                                handleChange={handleChange}\n                            />\n                        </InputContainer>\n                        <InputContainer>\n                            <CustomTextarea\n                                label='Doplňujúce informácie'\n                                name=\"dopl_info\"\n                                value={examinationObj?.dopl_info || \"\"}\n                                rows=\"3\"\n                                handleChange={handleChange}\n                            />\n                        </InputContainer>\n                        <InputContainer>\n                            <CustomInput\n                                label='Obj. nález'\n                                name=\"obj_nalez\"\n                                value={examinationObj?.obj_nalez || ''}\n                                handleChange={handleChange}\n                            />\n                        </InputContainer>\n\n                        <h4>Vlastné okuliare</h4>\n\n                        <Table>\n                            <TableTitleCol>\n                                <Col>{\"-\"}</Col>\n                                <Col>P.</Col>\n                                <Col>L.</Col>\n                            </TableTitleCol>\n\n                            <TableCol>\n                                <Col>V.NATUR</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='vnatur'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.vnatur, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.vnatur, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>SPH</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='sph'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.sph, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.sph, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>CYL</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='cyl'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.cyl, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.cyl, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n\n                            </TableCol>\n                            <TableCol>\n                                <Col>AX</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='ax'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.ax, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.ax, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n\n                            </TableCol>\n                            <TableCol>\n                                <Col>ADICIA</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='add'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.add, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.add, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n\n                            </TableCol>\n                            <TableCol>\n                                <Col>V.ISUS</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='visus'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.visus, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.visus, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n\n                            </TableCol>\n                            <TableCol>\n                                <Col>V.BINO</Col>\n                                <Col>\n                                    <input\n                                        name='vbino'\n                                        type='text'\n                                        value={checkParameterValue(vlastne_okuliare?.vbino)}\n                                        onChange={e => setVlastne_okuliare(prevValue => ({\n                                            ...prevValue,\n                                            [e.target.name]: e.target.value\n                                        }))}\n                                        onBlur={(e) => setVlastne_okuliare(prevValue => ({\n                                            ...prevValue,\n                                            [e.target.name]: Number(e.target.value)\n                                        }))}\n                                    />\n                                </Col>\n                            </TableCol>\n                        </Table>\n\n                        <h4>Refraktometer</h4>\n\n                        <RefractTable>\n                            <TableTitleCol>\n                                <Col>{\"-\"}</Col>\n                                <Col>P.</Col>\n                                <Col>L.</Col>\n                            </TableTitleCol>\n\n                            <TableCol>\n                                <Col>SPH</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='sph'\n                                            type='text'\n                                            value={checkParameter(refraktometer?.sph, idx)}\n                                            onChange={e => handleParameterChange(e, idx, refraktometer, setRefraktometer)}\n                                            onBlur={(e) => formatParameters(e, refraktometer?.sph, refraktometer, setRefraktometer)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>CYL</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='cyl'\n                                            type='text'\n                                            value={checkParameter(refraktometer?.cyl, idx)}\n                                            onChange={e => handleParameterChange(e, idx, refraktometer, setRefraktometer)}\n                                            onBlur={(e) => formatParameters(e, refraktometer?.cyl, refraktometer, setRefraktometer)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>AX</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='ax'\n                                            type='text'\n                                            value={checkParameter(refraktometer?.ax, idx)}\n                                            onChange={e => handleParameterChange(e, idx, refraktometer, setRefraktometer)}\n                                            onBlur={(e) => formatParameters(e, refraktometer?.ax, refraktometer, setRefraktometer)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>SE</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='se'\n                                            type='text'\n                                            value={checkParameter(refraktometer?.se, idx)}\n                                            onChange={e => handleParameterChange(e, idx, refraktometer, setRefraktometer)}\n                                            onBlur={(e) => formatParameters(e, refraktometer?.se, refraktometer, setRefraktometer)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n\n                        </RefractTable>\n\n                        <h4>Keratometer</h4>\n\n                        <KerathTable>\n                            <TableTitleCol>\n                                <Col>{\"-\"}</Col>\n                                <Col>P.</Col>\n                                <Col>L.</Col>\n                            </TableTitleCol>\n\n                            <TableCol>\n                                <Col>HOR</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='hor'\n                                            type='text'\n                                            value={checkParameter(keratometer?.hor, idx)}\n                                            onChange={e => handleParameterChange(e, idx, keratometer, setKeratometer)}\n                                            onBlur={(e) => formatParameters(e, keratometer?.hor, keratometer, setKeratometer)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>VER</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='ver'\n                                            type='text'\n                                            value={checkParameter(keratometer?.ver, idx)}\n                                            onChange={e => handleParameterChange(e, idx, keratometer, setKeratometer)}\n                                            onBlur={(e) => formatParameters(e, keratometer?.ver, keratometer, setKeratometer)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n\n                        </KerathTable>\n\n                        <h4>Subjektivná refrakcia</h4>\n\n                        <SubjectiveRefATable>\n                            <TableTitleCol>\n                                <Col>{\"-\"}</Col>\n                                <Col>P.</Col>\n                                <Col>L.</Col>\n                            </TableTitleCol>\n\n                            <TableCol>\n                                <Col>SPH</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='sph'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakciaA?.sph, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakciaA?.sph, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>CYL</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='cyl'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakciaA?.cyl, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakciaA?.cyl, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>AX</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='ax'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakciaA?.ax, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakciaA?.ax, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>ADICIA</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='add'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakciaA?.add, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakciaA?.add, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>VISUS</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='visus'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakciaA?.visus, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakciaA?.visus, subjektivna_refrakciaA, setSubjektivna_refrakciaA)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>BINO</Col>\n                                <Col>\n                                    <input\n                                        name='bino'\n                                        type='text'\n                                        value={checkParameterValue(subjektivna_refrakciaA?.bino)}\n                                        onChange={e => setSubjektivna_refrakciaA(prevValue => ({\n                                            ...prevValue,\n                                            [e.target.name]: e.target.value\n                                        }))}\n                                        onBlur={(e) => setSubjektivna_refrakciaA(prevValue => ({\n                                            ...prevValue,\n                                            [e.target.name]: Number(e.target.value)\n                                        }))}\n                                    />\n                                </Col>\n                            </TableCol>\n\n                        </SubjectiveRefATable>\n\n                        <h4>Kontaktné šošovky</h4>\n\n                        <ContactLensesTable>\n                            <TableTitleCol>\n                                <Col>{\"-\"}</Col>\n                                <Col>P.</Col>\n                                <Col>L.</Col>\n                            </TableTitleCol>\n\n                            <TableCol>\n                                <Col>SPH</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='sph'\n                                            type='text'\n                                            value={checkParameter(kontaktne_sosovky?.sph, idx)}\n                                            onChange={e => handleParameterChange(e, idx, kontaktne_sosovky, setKontaktne_sosovky)}\n                                            onBlur={(e) => formatParameters(e, kontaktne_sosovky?.sph, kontaktne_sosovky, setKontaktne_sosovky)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>CYL</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='cyl'\n                                            type='text'\n                                            value={checkParameter(kontaktne_sosovky?.cyl, idx)}\n                                            onChange={e => handleParameterChange(e, idx, kontaktne_sosovky, setKontaktne_sosovky)}\n                                            onBlur={(e) => formatParameters(e, kontaktne_sosovky?.cyl, kontaktne_sosovky, setKontaktne_sosovky)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>AX</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='ax'\n                                            type='text'\n                                            value={checkParameter(kontaktne_sosovky?.ax, idx)}\n                                            onChange={e => handleParameterChange(e, idx, kontaktne_sosovky, setKontaktne_sosovky)}\n                                            onBlur={(e) => formatParameters(e, kontaktne_sosovky?.ax, kontaktne_sosovky, setKontaktne_sosovky)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>ADICIA</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='add'\n                                            type='text'\n                                            value={checkParameter(kontaktne_sosovky?.add, idx)}\n                                            onChange={e => handleParameterChange(e, idx, kontaktne_sosovky, setKontaktne_sosovky)}\n                                            onBlur={(e) => formatParameters(e, kontaktne_sosovky?.add, kontaktne_sosovky, setKontaktne_sosovky)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>VISD</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='visd'\n                                            type='text'\n                                            value={checkParameter(kontaktne_sosovky?.visd, idx)}\n                                            onChange={e => handleParameterChange(e, idx, kontaktne_sosovky, setKontaktne_sosovky)}\n                                            onBlur={(e) => formatParameters(e, kontaktne_sosovky?.visd, kontaktne_sosovky, setKontaktne_sosovky)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>BINO1</Col>\n                                {[...Array(1)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='bino1'\n                                            type='text'\n                                            value={checkParameter(kontaktne_sosovky?.bino1, idx)}\n                                            onChange={e => handleParameterChange(e, idx, kontaktne_sosovky, setKontaktne_sosovky)}\n                                            onBlur={(e) => formatParameters(e, kontaktne_sosovky?.bino1, kontaktne_sosovky, setKontaktne_sosovky)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>VISB</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='visb'\n                                            type='text'\n                                            value={checkParameter(kontaktne_sosovky?.visb, idx)}\n                                            onChange={e => handleParameterChange(e, idx, kontaktne_sosovky, setKontaktne_sosovky)}\n                                            onBlur={(e) => formatParameters(e, kontaktne_sosovky?.visb, kontaktne_sosovky, setKontaktne_sosovky)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>BINO2</Col>\n                                {[...Array(1)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='bino2'\n                                            type='text'\n                                            value={checkParameter(kontaktne_sosovky?.bino2, idx)}\n                                            onChange={e => handleParameterChange(e, idx, kontaktne_sosovky, setKontaktne_sosovky)}\n                                            onBlur={(e) => formatParameters(e, kontaktne_sosovky?.bino2, kontaktne_sosovky, setKontaktne_sosovky)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                        </ContactLensesTable>\n\n\n                        <h4>Typ Kontaktných šošoviek</h4>\n\n                        <ContactLensesTypeTable>\n                            <TableTitleCol>\n                                <Col>{\"-\"}</Col>\n                                <Col>P.</Col>\n                                <Col>L.</Col>\n                            </TableTitleCol>\n\n                            <TableCol>\n                                <Col>PRVÝ</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='prvy'\n                                            type='text'\n                                            value={checkParameter(typ_kontaktnych_sosoviek?.prvy, idx)}\n                                            onChange={e => handleParameterChange(e, idx, typ_kontaktnych_sosoviek, setTyp_kontaktnych_sosoviek)}\n                                            onBlur={(e) => formatStringParameters(e, typ_kontaktnych_sosoviek?.prvy, typ_kontaktnych_sosoviek, setTyp_kontaktnych_sosoviek)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>DRUHÝ</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='druhy'\n                                            type='text'\n                                            value={checkParameter(typ_kontaktnych_sosoviek?.druhy, idx)}\n                                            onChange={e => handleParameterChange(e, idx, typ_kontaktnych_sosoviek, setTyp_kontaktnych_sosoviek)}\n                                            onBlur={(e) => formatStringParameters(e, typ_kontaktnych_sosoviek?.druhy, typ_kontaktnych_sosoviek, setTyp_kontaktnych_sosoviek)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>L.KONTROLA</Col>\n                                <Col>\n                                    <input\n                                        name='lkontrola'\n                                        type='text'\n                                        value={typ_kontaktnych_sosoviek?.lkontrola || \"\"}\n                                        onChange={e => setTyp_kontaktnych_sosoviek(prevValue => ({\n                                            ...prevValue,\n                                            [e.target.name]: e.target.value\n                                        }))}\n                                    // onBlur={(e) => setTyp_kontaktnych_sosoviek(prevValue => ({\n                                    //     ...prevValue,\n                                    //     [e.target.name]: Number(e.target.value)\n                                    // }))}\n                                    />\n                                </Col>\n                            </TableCol>\n                            <TableCol>\n                                <Col>DOP.ROZTOK</Col>\n                                <Col>\n                                    <input\n                                        name='dop_roztok'\n                                        type='text'\n                                        value={typ_kontaktnych_sosoviek?.dop_roztok || \"\"}\n                                        onChange={e => setTyp_kontaktnych_sosoviek(prevValue => ({\n                                            ...prevValue,\n                                            [e.target.name]: e.target.value\n                                        }))}\n                                    // onBlur={(e) => setTyp_kontaktnych_sosoviek(prevValue => ({\n                                    //     ...prevValue,\n                                    //     [e.target.name]: Number(e.target.value)\n                                    // }))}\n                                    />\n                                </Col>\n                            </TableCol>\n                        </ContactLensesTypeTable>\n                    </Container>\n                )}\n\n                {activeExamType === 3 && (\n                    <Container>\n                        <h4>Kontrola</h4>\n                        <InputContainer>\n                            <CustomInput\n                                label={'Typ kontaktných šošoviek'}\n                                value={examinationObj?.typ_kontaktnych_sosoviek || \"\"}\n                                type=\"text\"\n                                name=\"typ_kontaktnych_sosoviek\"\n                                handleChange={handleChange}\n                            />\n                        </InputContainer>\n\n                        <ExamTable>\n                            <TableTitleCol>\n                                <Col>{\"-\"}</Col>\n                                <Col>P.</Col>\n                                <Col>L.</Col>\n                            </TableTitleCol>\n\n                            <TableCol>\n                                <Col>SPH</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='sph'\n                                            type='text'\n                                            value={checkParameter(tabulka?.sph, idx)}\n                                            onChange={e => handleParameterChange(e, idx, tabulka, setTabulka)}\n                                            onBlur={(e) => formatParameters(e, tabulka?.sph, tabulka, setTabulka)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>CYL</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='cyl'\n                                            type='text'\n                                            value={checkParameter(tabulka?.cyl, idx)}\n                                            onChange={e => handleParameterChange(e, idx, tabulka, setTabulka)}\n                                            onBlur={(e) => formatParameters(e, tabulka?.cyl, tabulka, setTabulka)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>AX</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='ax'\n                                            type='text'\n                                            value={checkParameter(tabulka?.ax, idx)}\n                                            onChange={e => handleParameterChange(e, idx, tabulka, setTabulka)}\n                                            onBlur={(e) => formatParameters(e, tabulka?.ax, tabulka, setTabulka)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>ADD</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='add'\n                                            type='text'\n                                            value={checkParameter(tabulka?.add, idx)}\n                                            onChange={e => handleParameterChange(e, idx, tabulka, setTabulka)}\n                                            onBlur={(e) => formatParameters(e, tabulka?.add, tabulka, setTabulka)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>VIS</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='vis'\n                                            type='text'\n                                            value={checkParameter(tabulka?.vis, idx)}\n                                            onChange={e => handleParameterChange(e, idx, tabulka, setTabulka)}\n                                            onBlur={(e) => formatParameters(e, tabulka?.vis, tabulka, setTabulka)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                        </ExamTable>\n\n                        <InputContainer>\n                            <CustomInput\n                                label={'Subj.'}\n                                value={examinationObj?.subj || \"\"}\n                                type=\"text\"\n                                name=\"subj\"\n                                handleChange={handleChange}\n                            />\n                        </InputContainer>\n\n                        <InputContainer>\n                            <CustomInput\n                                label={'Obj.'}\n                                value={examinationObj?.obj || \"\"}\n                                type=\"text\"\n                                name=\"obj\"\n                                handleChange={handleChange}\n                            />\n                        </InputContainer>\n                    </Container>\n                )}\n\n                <InputContainer>\n                    <CustomTextarea\n                        label='Doporučenia'\n                        name=\"doporucenia\"\n                        value={recomendation}\n                        rows=\"5\"\n                        handleChange={(e) => setRecomendation(e.target.value)}\n                    />\n                </InputContainer>\n                {/* doporucenia */}\n\n                <SubmitButton onClick={handleSubmit}>{examinationToUpdate ? \"Uložiť\" : \"Odoslať prehliadku\"}</SubmitButton>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default OptometristExaminationModal\n\nconst examTypes = [\n    {\n        name: \"Refrakcia\",\n        value: 1\n    },\n    {\n        name: \"apl. KŠ\",\n        value: 2\n    },\n    {\n        name: \"Kontrola\",\n        value: 3\n    },\n]","/home/darken141/work/imooptik/imooptik-frontend/src/components/examination-user/examination-user.component.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/order-cart-row/order-cart-row.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/order-cart-lenses-row/order-cart-lenses-row.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-order-update-user/modal-order-update-user.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-userbookings-details/modal-userbookings-details.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/calendar-booked-day/calendar-booked-day.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-booking/modal-booking.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-finish-deposited-order/modal-finish-deposited-order.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/utils/parameters.utils.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/examination-user/examination-user.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-get-product-data/modal-get-product-data.component.jsx",["799"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-get-product-data/modal-get-product-data.styles.jsx",[],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-get-lenses-data/modal-get-lenses-data.component.jsx",["800","801"],"/home/darken141/work/imooptik/imooptik-frontend/src/components/modal-get-lenses-data/modal-get-lenses-data.styles.jsx",[],{"ruleId":"802","severity":1,"message":"803","line":237,"column":8,"nodeType":"804","endLine":237,"endColumn":15,"suggestions":"805"},{"ruleId":"802","severity":1,"message":"806","line":817,"column":8,"nodeType":"804","endLine":817,"endColumn":31,"suggestions":"807"},{"ruleId":"802","severity":1,"message":"808","line":845,"column":8,"nodeType":"804","endLine":845,"endColumn":22,"suggestions":"809"},{"ruleId":"802","severity":1,"message":"810","line":152,"column":8,"nodeType":"804","endLine":152,"endColumn":34,"suggestions":"811"},{"ruleId":"812","severity":1,"message":"813","line":205,"column":19,"nodeType":"814","messageId":"815","endLine":205,"endColumn":23},{"ruleId":"812","severity":1,"message":"816","line":27,"column":5,"nodeType":"814","messageId":"815","endLine":27,"endColumn":17},{"ruleId":"802","severity":1,"message":"817","line":114,"column":8,"nodeType":"804","endLine":114,"endColumn":19,"suggestions":"818"},{"ruleId":"802","severity":1,"message":"819","line":130,"column":8,"nodeType":"804","endLine":130,"endColumn":21,"suggestions":"820"},{"ruleId":"802","severity":1,"message":"821","line":130,"column":8,"nodeType":"804","endLine":130,"endColumn":22,"suggestions":"822"},{"ruleId":"802","severity":1,"message":"821","line":138,"column":8,"nodeType":"804","endLine":138,"endColumn":21,"suggestions":"823"},{"ruleId":"802","severity":1,"message":"824","line":176,"column":8,"nodeType":"804","endLine":176,"endColumn":21,"suggestions":"825"},{"ruleId":"802","severity":1,"message":"826","line":189,"column":8,"nodeType":"804","endLine":189,"endColumn":43,"suggestions":"827"},{"ruleId":"802","severity":1,"message":"828","line":140,"column":8,"nodeType":"804","endLine":140,"endColumn":38,"suggestions":"829"},{"ruleId":"802","severity":1,"message":"830","line":146,"column":8,"nodeType":"804","endLine":146,"endColumn":12,"suggestions":"831"},{"ruleId":"802","severity":1,"message":"832","line":167,"column":8,"nodeType":"804","endLine":167,"endColumn":10,"suggestions":"833"},{"ruleId":"802","severity":1,"message":"834","line":93,"column":8,"nodeType":"804","endLine":93,"endColumn":21,"suggestions":"835"},{"ruleId":"802","severity":1,"message":"834","line":115,"column":8,"nodeType":"804","endLine":115,"endColumn":21,"suggestions":"836"},{"ruleId":"802","severity":1,"message":"837","line":121,"column":8,"nodeType":"804","endLine":121,"endColumn":29,"suggestions":"838"},{"ruleId":"802","severity":1,"message":"826","line":136,"column":8,"nodeType":"804","endLine":136,"endColumn":10,"suggestions":"839"},{"ruleId":"802","severity":1,"message":"840","line":78,"column":8,"nodeType":"804","endLine":78,"endColumn":12,"suggestions":"841"},{"ruleId":"802","severity":1,"message":"842","line":93,"column":8,"nodeType":"804","endLine":93,"endColumn":14,"suggestions":"843"},{"ruleId":"802","severity":1,"message":"844","line":107,"column":8,"nodeType":"804","endLine":107,"endColumn":10,"suggestions":"845"},{"ruleId":"802","severity":1,"message":"846","line":166,"column":8,"nodeType":"804","endLine":166,"endColumn":19,"suggestions":"847"},{"ruleId":"802","severity":1,"message":"848","line":181,"column":8,"nodeType":"804","endLine":181,"endColumn":10,"suggestions":"849"},{"ruleId":"812","severity":1,"message":"850","line":434,"column":12,"nodeType":"814","messageId":"815","endLine":434,"endColumn":19},{"ruleId":"802","severity":1,"message":"851","line":456,"column":8,"nodeType":"804","endLine":456,"endColumn":26,"suggestions":"852"},{"ruleId":"802","severity":1,"message":"853","line":470,"column":8,"nodeType":"804","endLine":470,"endColumn":25,"suggestions":"854"},{"ruleId":"802","severity":1,"message":"855","line":477,"column":8,"nodeType":"804","endLine":477,"endColumn":26,"suggestions":"856"},{"ruleId":"802","severity":1,"message":"857","line":494,"column":8,"nodeType":"804","endLine":494,"endColumn":72,"suggestions":"858"},{"ruleId":"802","severity":1,"message":"859","line":510,"column":8,"nodeType":"804","endLine":510,"endColumn":26,"suggestions":"860"},{"ruleId":"802","severity":1,"message":"861","line":521,"column":8,"nodeType":"804","endLine":521,"endColumn":37,"suggestions":"862"},{"ruleId":"802","severity":1,"message":"863","line":533,"column":8,"nodeType":"804","endLine":533,"endColumn":10,"suggestions":"864"},{"ruleId":"802","severity":1,"message":"865","line":95,"column":8,"nodeType":"804","endLine":95,"endColumn":64,"suggestions":"866"},{"ruleId":"802","severity":1,"message":"867","line":101,"column":8,"nodeType":"804","endLine":101,"endColumn":28,"suggestions":"868"},{"ruleId":"802","severity":1,"message":"869","line":110,"column":8,"nodeType":"804","endLine":110,"endColumn":10,"suggestions":"870"},{"ruleId":"802","severity":1,"message":"871","line":161,"column":8,"nodeType":"804","endLine":161,"endColumn":20,"suggestions":"872"},{"ruleId":"812","severity":1,"message":"873","line":12,"column":10,"nodeType":"814","messageId":"815","endLine":12,"endColumn":21},{"ruleId":"802","severity":1,"message":"874","line":45,"column":8,"nodeType":"804","endLine":45,"endColumn":17,"suggestions":"875"},{"ruleId":"802","severity":1,"message":"876","line":119,"column":8,"nodeType":"804","endLine":119,"endColumn":18,"suggestions":"877"},{"ruleId":"802","severity":1,"message":"878","line":129,"column":8,"nodeType":"804","endLine":129,"endColumn":21,"suggestions":"879"},{"ruleId":"802","severity":1,"message":"880","line":46,"column":8,"nodeType":"804","endLine":46,"endColumn":18,"suggestions":"881"},{"ruleId":"802","severity":1,"message":"882","line":52,"column":8,"nodeType":"804","endLine":52,"endColumn":10,"suggestions":"883"},{"ruleId":"802","severity":1,"message":"884","line":29,"column":8,"nodeType":"804","endLine":29,"endColumn":19,"suggestions":"885"},{"ruleId":"802","severity":1,"message":"884","line":42,"column":8,"nodeType":"804","endLine":42,"endColumn":25,"suggestions":"886"},{"ruleId":"802","severity":1,"message":"887","line":37,"column":8,"nodeType":"804","endLine":37,"endColumn":22,"suggestions":"888"},{"ruleId":"802","severity":1,"message":"889","line":79,"column":8,"nodeType":"804","endLine":79,"endColumn":28,"suggestions":"890"},{"ruleId":"802","severity":1,"message":"889","line":118,"column":8,"nodeType":"804","endLine":118,"endColumn":32,"suggestions":"891"},{"ruleId":"892","severity":1,"message":"893","line":60,"column":52,"nodeType":"894","messageId":"895","endLine":60,"endColumn":58},{"ruleId":"892","severity":1,"message":"893","line":261,"column":56,"nodeType":"894","messageId":"895","endLine":261,"endColumn":62},{"ruleId":"802","severity":1,"message":"851","line":75,"column":8,"nodeType":"804","endLine":75,"endColumn":31,"suggestions":"896"},{"ruleId":"802","severity":1,"message":"855","line":82,"column":8,"nodeType":"804","endLine":82,"endColumn":19,"suggestions":"897"},{"ruleId":"892","severity":1,"message":"893","line":10,"column":32,"nodeType":"894","messageId":"895","endLine":10,"endColumn":38},{"ruleId":"812","severity":1,"message":"898","line":10,"column":5,"nodeType":"814","messageId":"815","endLine":10,"endColumn":19},{"ruleId":"812","severity":1,"message":"899","line":11,"column":5,"nodeType":"814","messageId":"815","endLine":11,"endColumn":17},{"ruleId":"892","severity":1,"message":"893","line":187,"column":44,"nodeType":"894","messageId":"895","endLine":187,"endColumn":50},{"ruleId":"892","severity":1,"message":"893","line":113,"column":40,"nodeType":"894","messageId":"895","endLine":113,"endColumn":46},{"ruleId":"802","severity":1,"message":"900","line":66,"column":8,"nodeType":"804","endLine":66,"endColumn":19,"suggestions":"901"},{"ruleId":"892","severity":1,"message":"893","line":252,"column":44,"nodeType":"894","messageId":"895","endLine":252,"endColumn":50},{"ruleId":"802","severity":1,"message":"902","line":72,"column":8,"nodeType":"804","endLine":72,"endColumn":19,"suggestions":"903"},{"ruleId":"802","severity":1,"message":"904","line":72,"column":8,"nodeType":"804","endLine":72,"endColumn":19,"suggestions":"905"},{"ruleId":"802","severity":1,"message":"906","line":69,"column":8,"nodeType":"804","endLine":69,"endColumn":15,"suggestions":"907"},{"ruleId":"802","severity":1,"message":"908","line":83,"column":8,"nodeType":"804","endLine":83,"endColumn":21,"suggestions":"909"},{"ruleId":"802","severity":1,"message":"910","line":88,"column":8,"nodeType":"804","endLine":88,"endColumn":19,"suggestions":"911"},{"ruleId":"802","severity":1,"message":"851","line":92,"column":8,"nodeType":"804","endLine":92,"endColumn":15,"suggestions":"912"},{"ruleId":"892","severity":1,"message":"893","line":37,"column":45,"nodeType":"894","messageId":"895","endLine":37,"endColumn":51},{"ruleId":"892","severity":1,"message":"893","line":41,"column":53,"nodeType":"894","messageId":"895","endLine":41,"endColumn":59},{"ruleId":"892","severity":1,"message":"893","line":42,"column":54,"nodeType":"894","messageId":"895","endLine":42,"endColumn":60},{"ruleId":"892","severity":1,"message":"893","line":43,"column":123,"nodeType":"894","messageId":"895","endLine":43,"endColumn":129},{"ruleId":"802","severity":1,"message":"913","line":97,"column":8,"nodeType":"804","endLine":97,"endColumn":19,"suggestions":"914"},{"ruleId":"802","severity":1,"message":"851","line":44,"column":8,"nodeType":"804","endLine":44,"endColumn":15,"suggestions":"915"},{"ruleId":"802","severity":1,"message":"851","line":50,"column":8,"nodeType":"804","endLine":50,"endColumn":18,"suggestions":"916"},{"ruleId":"802","severity":1,"message":"910","line":65,"column":8,"nodeType":"804","endLine":65,"endColumn":19,"suggestions":"917"},{"ruleId":"918","replacedBy":"919"},{"ruleId":"920","replacedBy":"921"},{"ruleId":"802","severity":1,"message":"922","line":58,"column":8,"nodeType":"804","endLine":58,"endColumn":35,"suggestions":"923"},{"ruleId":"802","severity":1,"message":"924","line":74,"column":8,"nodeType":"804","endLine":74,"endColumn":104,"suggestions":"925"},{"ruleId":"802","severity":1,"message":"926","line":74,"column":9,"nodeType":"927","endLine":74,"endColumn":31},{"ruleId":"802","severity":1,"message":"926","line":74,"column":33,"nodeType":"927","endLine":74,"endColumn":55},{"ruleId":"802","severity":1,"message":"926","line":74,"column":57,"nodeType":"927","endLine":74,"endColumn":79},{"ruleId":"802","severity":1,"message":"926","line":74,"column":81,"nodeType":"927","endLine":74,"endColumn":103},{"ruleId":"802","severity":1,"message":"928","line":44,"column":8,"nodeType":"804","endLine":44,"endColumn":23,"suggestions":"929"},{"ruleId":"802","severity":1,"message":"828","line":110,"column":8,"nodeType":"804","endLine":110,"endColumn":38,"suggestions":"930"},{"ruleId":"802","severity":1,"message":"830","line":116,"column":8,"nodeType":"804","endLine":116,"endColumn":16,"suggestions":"931"},{"ruleId":"802","severity":1,"message":"932","line":147,"column":8,"nodeType":"804","endLine":147,"endColumn":27,"suggestions":"933"},{"ruleId":"802","severity":1,"message":"934","line":34,"column":8,"nodeType":"804","endLine":34,"endColumn":19,"suggestions":"935"},{"ruleId":"802","severity":1,"message":"936","line":122,"column":8,"nodeType":"804","endLine":122,"endColumn":13,"suggestions":"937"},{"ruleId":"892","severity":1,"message":"893","line":261,"column":71,"nodeType":"894","messageId":"895","endLine":261,"endColumn":77},{"ruleId":"802","severity":1,"message":"938","line":42,"column":8,"nodeType":"804","endLine":42,"endColumn":19,"suggestions":"939"},{"ruleId":"802","severity":1,"message":"851","line":47,"column":8,"nodeType":"804","endLine":47,"endColumn":30,"suggestions":"940"},{"ruleId":"802","severity":1,"message":"941","line":73,"column":8,"nodeType":"804","endLine":73,"endColumn":36,"suggestions":"942"},{"ruleId":"802","severity":1,"message":"943","line":15,"column":8,"nodeType":"804","endLine":15,"endColumn":13,"suggestions":"944"},{"ruleId":"892","severity":1,"message":"893","line":82,"column":40,"nodeType":"894","messageId":"895","endLine":82,"endColumn":46},{"ruleId":"802","severity":1,"message":"945","line":224,"column":8,"nodeType":"804","endLine":224,"endColumn":24,"suggestions":"946"},{"ruleId":"802","severity":1,"message":"922","line":346,"column":8,"nodeType":"804","endLine":346,"endColumn":56,"suggestions":"947"},{"ruleId":"802","severity":1,"message":"902","line":112,"column":8,"nodeType":"804","endLine":112,"endColumn":19,"suggestions":"948"},{"ruleId":"812","severity":1,"message":"949","line":7,"column":10,"nodeType":"814","messageId":"815","endLine":7,"endColumn":25},{"ruleId":"802","severity":1,"message":"904","line":85,"column":8,"nodeType":"804","endLine":85,"endColumn":19,"suggestions":"950"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStats'. Either include it or remove the dependency array.","ArrayExpression",["951"],"React Hook useEffect has missing dependencies: 'getLenses', 'getProductsByQuery', and 'products'. Either include them or remove the dependency array.",["952"],"React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array. You can also do a functional update 'setProduct(p => ...)' if you only need 'product' in the 'setProduct' call.",["953"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["954"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'DeleteButton' is defined but never used.","React Hook useEffect has missing dependencies: 'closeModal' and 'response'. Either include them or remove the dependency array.",["955"],"React Hook useEffect has missing dependencies: 'activeIndex' and 'refetch'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilterQuery' needs the current value of 'activeIndex'.",["956"],"React Hook useEffect has a missing dependency: 'getAnalytics'. Either include it or remove the dependency array.",["957"],["958"],"React Hook useEffect has missing dependencies: 'activeIndex' and 'handleRefetch'. Either include them or remove the dependency array.",["959"],"React Hook useEffect has a missing dependency: 'closeModal'. Either include it or remove the dependency array.",["960"],"React Hook useEffect has missing dependencies: 'user.fName', 'user.lName', and 'userObj'. Either include them or remove the dependency array. You can also do a functional update 'setUserObj(u => ...)' if you only need 'userObj' in the 'setUserObj' call.",["961"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["962"],"React Hook useEffect has missing dependencies: 'handleChange' and 'resetUser'. Either include them or remove the dependency array.",["963"],"React Hook useEffect has a missing dependency: 'blogsData'. Either include it or remove the dependency array.",["964"],["965"],"React Hook useEffect has a missing dependency: 'blogsData.response?.blogs'. Either include it or remove the dependency array.",["966"],["967"],"React Hook useEffect has missing dependencies: 'getPost' and 'setSelectedImage'. Either include them or remove the dependency array.",["968"],"React Hook useEffect has missing dependencies: 'id' and 'setSelectedImage'. Either include them or remove the dependency array.",["969"],"React Hook useEffect has missing dependencies: 'closeModal' and 'resetBlog'. Either include them or remove the dependency array.",["970"],"React Hook useEffect has missing dependencies: 'closeModal', 'currentUser.premises', 'handleShowCalendarClick', 'isAdmin', 'response', and 'setShowModal'. Either include them or remove the dependency array.",["971"],"React Hook useEffect has missing dependencies: 'closeModal' and 'setShowModal'. Either include them or remove the dependency array.",["972"],"'lensObj' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["973"],"React Hook useEffect has missing dependencies: 'handleChange', 'lenses', 'productObj.lensType', and 'productObj.type'. Either include them or remove the dependency array.",["974"],"React Hook useEffect has a missing dependency: 'response?.filters'. Either include it or remove the dependency array.",["975"],"React Hook useEffect has missing dependencies: 'getEanCode' and 'handleChange'. Either include them or remove the dependency array.",["976"],"React Hook useEffect has missing dependencies: 'getSingleProduct', 'handleChangeType', and 'productObj.type'. Either include them or remove the dependency array.",["977"],"React Hook useEffect has a missing dependency: 'setSelectedImage'. Either include it or remove the dependency array.",["978"],"React Hook useEffect has missing dependencies: 'resetContactLenses', 'resetGlassesParameters', 'resetLenses', 'resetProduct', and 'setSelectedImage'. Either include them or remove the dependency array.",["979"],"React Hook useEffect has missing dependencies: 'addUser', 'changeStep', 'order', and 'setOrder'. Either include them or remove the dependency array.",["980"],"React Hook useEffect has missing dependencies: 'addUser' and 'userData.response.user'. Either include them or remove the dependency array.",["981"],"React Hook useEffect has missing dependencies: 'changeStep' and 'resetOrder'. Either include them or remove the dependency array.",["982"],"React Hook useEffect has missing dependencies: 'closeModal' and 'response.calendar'. Either include them or remove the dependency array.",["983"],"'formatPrice' is defined but never used.","React Hook useEffect has a missing dependency: 'getCoupons'. Either include it or remove the dependency array.",["984"],"React Hook useEffect has a missing dependency: 'getProductsByQuery'. Either include it or remove the dependency array.",["985"],"React Hook useEffect has missing dependencies: 'activeCategoryTypeTab', 'getProductsByQuery', and 'products'. Either include them or remove the dependency array.",["986"],"React Hook useEffect has a missing dependency: 'getCoupon'. Either include it or remove the dependency array.",["987"],"React Hook useEffect has a missing dependency: 'resetCoupons'. Either include it or remove the dependency array.",["988"],"React Hook useEffect has a missing dependency: 'currentPage'. Either include it or remove the dependency array.",["989"],["990"],"React Hook useEffect has missing dependencies: 'path', 'requestOptions', and 'skip'. Either include them or remove the dependency array.",["991"],"React Hook useEffect has missing dependencies: 'requestOptions' and 'skip'. Either include them or remove the dependency array.",["992"],["993"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["994"],["995"],"'ImageContainer' is defined but never used.","'ProductImage' is defined but never used.","React Hook useEffect has a missing dependency: 'product.brand'. Either include it or remove the dependency array.",["996"],"React Hook useEffect has a missing dependency: 'response.products'. Either include it or remove the dependency array.",["997"],"React Hook useEffect has a missing dependency: 'response.lenses'. Either include it or remove the dependency array.",["998"],"React Hook useEffect has a missing dependency: 'getFilteredUsers'. Either include it or remove the dependency array.",["999"],"React Hook useEffect has missing dependencies: 'getFilteredUsers' and 'users'. Either include them or remove the dependency array.",["1000"],"React Hook useEffect has missing dependencies: 'firstDayIndex', 'lastDay', 'month', 'nextDays', 'response.calendar', and 'year'. Either include them or remove the dependency array.",["1001"],["1002"],"React Hook useEffect has missing dependencies: 'response.calendar.endTimes', 'response.calendar.interval', and 'response.calendar.startTimes'. Either include them or remove the dependency array.",["1003"],["1004"],["1005"],["1006"],"no-native-reassign",["1007"],"no-negated-in-lhs",["1008"],"React Hook useEffect has a missing dependency: 'examinationData.response'. Either include it or remove the dependency array.",["1009"],"React Hook useEffect has missing dependencies: 'handleChange', 'parameters.addition', and 'parameters.diopters'. Either include them or remove the dependency array. If 'handleChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1010"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook useEffect has missing dependencies: 'addLensesParameters' and 'idx'. Either include them or remove the dependency array.",["1011"],["1012"],["1013"],"React Hook useEffect has a missing dependency: 'handleOrderDetailChange'. Either include it or remove the dependency array.",["1014"],"React Hook useEffect has missing dependencies: 'response' and 'userBooking.userBookings.dueDate'. Either include them or remove the dependency array.",["1015"],"React Hook useEffect has a missing dependency: 'calendar'. Either include it or remove the dependency array. If 'setStartTime' needs the current value of 'calendar', you can also switch to useReducer instead of useState and read 'calendar' in the reducer.",["1016"],"React Hook useEffect has missing dependencies: 'response?.userBookings' and 'userBookings?.dueDate'. Either include them or remove the dependency array.",["1017"],["1018"],"React Hook useEffect has a missing dependency: 'response?.booking'. Either include it or remove the dependency array.",["1019"],"React Hook useEffect has a missing dependency: 'action'. Either include it or remove the dependency array. If 'action' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1020"],"React Hook useEffect has a missing dependency: 'examinationToUpdate'. Either include it or remove the dependency array.",["1021"],["1022"],["1023"],"'formatAvailable' is defined but never used.",["1024"],{"desc":"1025","fix":"1026"},{"desc":"1027","fix":"1028"},{"desc":"1029","fix":"1030"},{"desc":"1031","fix":"1032"},{"desc":"1033","fix":"1034"},{"desc":"1035","fix":"1036"},{"desc":"1037","fix":"1038"},{"desc":"1039","fix":"1040"},{"desc":"1041","fix":"1042"},{"desc":"1043","fix":"1044"},{"desc":"1045","fix":"1046"},{"desc":"1047","fix":"1048"},{"desc":"1049","fix":"1050"},{"desc":"1051","fix":"1052"},{"desc":"1053","fix":"1054"},{"desc":"1055","fix":"1056"},{"desc":"1057","fix":"1058"},{"desc":"1059","fix":"1060"},{"desc":"1061","fix":"1062"},{"desc":"1063","fix":"1064"},{"desc":"1065","fix":"1066"},{"desc":"1067","fix":"1068"},{"desc":"1069","fix":"1070"},{"desc":"1071","fix":"1072"},{"desc":"1073","fix":"1074"},{"desc":"1075","fix":"1076"},{"desc":"1077","fix":"1078"},{"desc":"1079","fix":"1080"},{"desc":"1081","fix":"1082"},{"desc":"1083","fix":"1084"},{"desc":"1085","fix":"1086"},{"desc":"1087","fix":"1088"},{"desc":"1089","fix":"1090"},{"desc":"1091","fix":"1092"},{"desc":"1093","fix":"1094"},{"desc":"1095","fix":"1096"},{"desc":"1097","fix":"1098"},{"desc":"1099","fix":"1100"},{"desc":"1101","fix":"1102"},{"desc":"1103","fix":"1104"},{"desc":"1105","fix":"1106"},{"desc":"1107","fix":"1108"},{"desc":"1109","fix":"1110"},{"desc":"1111","fix":"1112"},{"desc":"1113","fix":"1114"},{"desc":"1115","fix":"1116"},{"desc":"1117","fix":"1118"},{"desc":"1119","fix":"1120"},{"desc":"1121","fix":"1122"},{"desc":"1123","fix":"1124"},{"desc":"1125","fix":"1126"},{"desc":"1127","fix":"1128"},{"desc":"1129","fix":"1130"},{"desc":"1127","fix":"1131"},{"desc":"1132","fix":"1133"},{"desc":"1125","fix":"1134"},"no-global-assign","no-unsafe-negation",{"desc":"1135","fix":"1136"},{"desc":"1137","fix":"1138"},{"desc":"1139","fix":"1140"},{"desc":"1045","fix":"1141"},{"desc":"1142","fix":"1143"},{"desc":"1144","fix":"1145"},{"desc":"1146","fix":"1147"},{"desc":"1148","fix":"1149"},{"desc":"1150","fix":"1151"},{"desc":"1152","fix":"1153"},{"desc":"1154","fix":"1155"},{"desc":"1156","fix":"1157"},{"desc":"1158","fix":"1159"},{"desc":"1160","fix":"1161"},{"desc":"1117","fix":"1162"},{"desc":"1119","fix":"1163"},"Update the dependencies array to be: [getStats, token]",{"range":"1164","text":"1165"},"Update the dependencies array to be: [activeCategoryTypeTab, getLenses, getProductsByQuery, products]",{"range":"1166","text":"1167"},"Update the dependencies array to be: [product, product.name]",{"range":"1168","text":"1169"},"Update the dependencies array to be: [user, user?.fName, user?.lName]",{"range":"1170","text":"1171"},"Update the dependencies array to be: [closeModal, isLoading, response]",{"range":"1172","text":"1173"},"Update the dependencies array to be: [activeIndex, refetch, searchQuery]",{"range":"1174","text":"1175"},"Update the dependencies array to be: [fitlterQuery, getAnalytics]",{"range":"1176","text":"1177"},"Update the dependencies array to be: [activeIndex, getAnalytics]",{"range":"1178","text":"1179"},"Update the dependencies array to be: [activeIndex, handleRefetch, searchQuery]",{"range":"1180","text":"1181"},"Update the dependencies array to be: [isFetching, response, activeIndex, closeModal]",{"range":"1182","text":"1183"},"Update the dependencies array to be: [user.fName, user.lName, userObj, userObj.fName, userObj.lName]",{"range":"1184","text":"1185"},"Update the dependencies array to be: [getUser, id]",{"range":"1186","text":"1187"},"Update the dependencies array to be: [handleChange, resetUser]",{"range":"1188","text":"1189"},"Update the dependencies array to be: [blogsData, searchQuery]",{"range":"1190","text":"1191"},"Update the dependencies array to be: [activeIndex, blogsData]",{"range":"1192","text":"1193"},"Update the dependencies array to be: [blogsData.isLoading, blogsData.response?.blogs]",{"range":"1194","text":"1195"},"Update the dependencies array to be: [closeModal]",{"range":"1196","text":"1197"},"Update the dependencies array to be: [getPost, id, setSelectedImage]",{"range":"1198","text":"1199"},"Update the dependencies array to be: [id, post, setSelectedImage]",{"range":"1200","text":"1201"},"Update the dependencies array to be: [closeModal, resetBlog]",{"range":"1202","text":"1203"},"Update the dependencies array to be: [closeModal, currentUser.premises, handleShowCalendarClick, isAdmin, isLoading, response, setShowModal]",{"range":"1204","text":"1205"},"Update the dependencies array to be: [closeModal, setShowModal]",{"range":"1206","text":"1207"},"Update the dependencies array to be: [productObj?.type, refetch]",{"range":"1208","text":"1209"},"Update the dependencies array to be: [handleChange, lenses, lenses.lensType, productObj.lensType, productObj.type]",{"range":"1210","text":"1211"},"Update the dependencies array to be: [isLoadingFilters, response?.filters]",{"range":"1212","text":"1213"},"Update the dependencies array to be: [id, eanCode, productObj.type, productObj.eanCode, product.type, getEanCode, handleChange]",{"range":"1214","text":"1215"},"Update the dependencies array to be: [getSingleProduct, handleChangeType, id, product.type, productObj.type]",{"range":"1216","text":"1217"},"Update the dependencies array to be: [product.image, lenses.image, setSelectedImage]",{"range":"1218","text":"1219"},"Update the dependencies array to be: [resetContactLenses, resetGlassesParameters, resetLenses, resetProduct, setSelectedImage]",{"range":"1220","text":"1221"},"Update the dependencies array to be: [userId, orderId, userData.response, orderData.response, changeStep, addUser, setOrder, order]",{"range":"1222","text":"1223"},"Update the dependencies array to be: [addUser, userData.isLoading, userData.response.user]",{"range":"1224","text":"1225"},"Update the dependencies array to be: [changeStep, resetOrder]",{"range":"1226","text":"1227"},"Update the dependencies array to be: [closeModal, isFetching, response.calendar]",{"range":"1228","text":"1229"},"Update the dependencies array to be: [coupons, getCoupons]",{"range":"1230","text":"1231"},"Update the dependencies array to be: [getProductsByQuery, products]",{"range":"1232","text":"1233"},"Update the dependencies array to be: [activeCategoryTypeTab, getProductsByQuery, products, searchQuery]",{"range":"1234","text":"1235"},"Update the dependencies array to be: [couponId, getCoupon]",{"range":"1236","text":"1237"},"Update the dependencies array to be: [resetCoupons]",{"range":"1238","text":"1239"},"Update the dependencies array to be: [currentPage, listItems]",{"range":"1240","text":"1241"},"Update the dependencies array to be: [currentPage, handleClickPrev]",{"range":"1242","text":"1243"},"Update the dependencies array to be: [path, refetchIndex, requestOptions, skip]",{"range":"1244","text":"1245"},"Update the dependencies array to be: [refetchIndex, path, skip, requestOptions]",{"range":"1246","text":"1247"},"Update the dependencies array to be: [refetchIndex, path, id, skip, requestOptions]",{"range":"1248","text":"1249"},"Update the dependencies array to be: [filter?.filters?.type, refetch]",{"range":"1250","text":"1251"},"Update the dependencies array to be: [isLoading, response?.filters]",{"range":"1252","text":"1253"},"Update the dependencies array to be: [isBranded, product.brand]",{"range":"1254","text":"1255"},"Update the dependencies array to be: [isLoading, response.products]",{"range":"1256","text":"1257"},"Update the dependencies array to be: [isLoading, response.lenses]",{"range":"1258","text":"1259"},"Update the dependencies array to be: [getFilteredUsers, users]",{"range":"1260","text":"1261"},"Update the dependencies array to be: [getFilteredUsers, searchQuery, users]",{"range":"1262","text":"1263"},"Update the dependencies array to be: [firstDayIndex, isLoading, lastDay, month, nextDays, response.calendar, year]",{"range":"1264","text":"1265"},"Update the dependencies array to be: [month, refetch]",{"range":"1266","text":"1267"},"Update the dependencies array to be: [isLoading, response.calendar.endTimes, response.calendar.interval, response.calendar.startTimes]",{"range":"1268","text":"1269"},{"range":"1270","text":"1267"},"Update the dependencies array to be: [calendar, refetch]",{"range":"1271","text":"1272"},{"range":"1273","text":"1265"},"Update the dependencies array to be: [examinationData.isLoading, examinationData.response]",{"range":"1274","text":"1275"},"Update the dependencies array to be: [handleChange, parameters.addition, parameters.diopters]",{"range":"1276","text":"1277"},"Update the dependencies array to be: [addLensesParameters, contactLenses, idx]",{"range":"1278","text":"1279"},{"range":"1280","text":"1185"},"Update the dependencies array to be: [getUser, userId]",{"range":"1281","text":"1282"},"Update the dependencies array to be: [handleOrderDetailChange, isUpdating, order]",{"range":"1283","text":"1284"},"Update the dependencies array to be: [isLoading, response, userBooking.userBookings.dueDate]",{"range":"1285","text":"1286"},"Update the dependencies array to be: [calendar, day]",{"range":"1287","text":"1288"},"Update the dependencies array to be: [isLoading, response?.userBookings, userBookings?.dueDate]",{"range":"1289","text":"1290"},"Update the dependencies array to be: [dayData?.bookingDate, refetch]",{"range":"1291","text":"1292"},"Update the dependencies array to be: [selectedBooking, isLoading, response?.booking]",{"range":"1293","text":"1294"},"Update the dependencies array to be: [action, ref]",{"range":"1295","text":"1296"},"Update the dependencies array to be: [activeExamType, examinationToUpdate]",{"range":"1297","text":"1298"},"Update the dependencies array to be: [examinationToUpdate, examinationData.isLoading, examinationData.response]",{"range":"1299","text":"1300"},{"range":"1301","text":"1257"},{"range":"1302","text":"1259"},[6506,6513],"[getStats, token]",[24077,24100],"[activeCategoryTypeTab, getLenses, getProductsByQuery, products]",[24844,24858],"[product, product.name]",[3454,3480],"[user, user?.fName, user?.lName]",[2982,2993],"[closeModal, isLoading, response]",[3345,3358],"[activeIndex, refetch, searchQuery]",[4093,4107],"[fitlterQuery, getAnalytics]",[4302,4315],"[activeIndex, getAnalytics]",[4718,4731],"[activeIndex, handleRefetch, searchQuery]",[5051,5086],"[isFetching, response, activeIndex, closeModal]",[3555,3585],"[user.fName, user.lName, userObj, userObj.fName, userObj.lName]",[3689,3693],"[getUser, id]",[4388,4390],"[handleChange, resetUser]",[2392,2405],"[blogsData, searchQuery]",[2908,2921],"[activeIndex, blogsData]",[3047,3068],"[blogsData.isLoading, blogsData.response?.blogs]",[3389,3391],"[closeModal]",[2426,2430],"[getPost, id, setSelectedImage]",[2858,2864],"[id, post, setSelectedImage]",[3183,3185],"[closeModal, resetBlog]",[6046,6057],"[closeModal, currentUser.premises, handleShowCalendarClick, isAdmin, isLoading, response, setShowModal]",[6500,6502],"[closeModal, setShowModal]",[14185,14203],"[productObj?.type, refetch]",[14563,14580],"[handleChange, lenses, lenses.lensType, productObj.lensType, productObj.type]",[14734,14752],"[isLoadingFilters, response?.filters]",[15200,15264],"[id, eanCode, productObj.type, productObj.eanCode, product.type, getEanCode, handleChange]",[15658,15676],"[getSingleProduct, handleChangeType, id, product.type, productObj.type]",[15904,15933],"[product.image, lenses.image, setSelectedImage]",[16219,16221],"[resetContactLenses, resetGlassesParameters, resetLenses, resetProduct, setSelectedImage]",[2926,2982],"[userId, orderId, userData.response, orderData.response, changeStep, addUser, setOrder, order]",[3094,3114],"[addUser, userData.isLoading, userData.response.user]",[3310,3312],"[changeStep, resetOrder]",[4700,4712],"[closeModal, isFetching, response.calendar]",[1242,1251],"[coupons, getCoupons]",[3427,3437],"[getProductsByQuery, products]",[3666,3679],"[activeCategoryTypeTab, getProductsByQuery, products, searchQuery]",[1255,1265],"[couponId, getCoupon]",[1357,1359],"[resetCoupons]",[694,705],"[currentPage, listItems]",[1003,1020],"[currentPage, handleClickPrev]",[1192,1206],"[path, refetchIndex, requestOptions, skip]",[2507,2527],"[refetchIndex, path, skip, requestOptions]",[3754,3778],"[refetchIndex, path, id, skip, requestOptions]",[1921,1944],"[filter?.filters?.type, refetch]",[2091,2102],"[isLoading, response?.filters]",[1577,1588],"[isBranded, product.brand]",[1911,1922],"[isLoading, response.products]",[1919,1930],"[isLoading, response.lenses]",[1580,1587],"[getFilteredUsers, users]",[1908,1921],"[getFilteredUsers, searchQuery, users]",[2959,2970],"[firstDayIndex, isLoading, lastDay, month, nextDays, response.calendar, year]",[3020,3027],"[month, refetch]",[3996,4007],"[isLoading, response.calendar.endTimes, response.calendar.interval, response.calendar.startTimes]",[1086,1093],[1181,1191],"[calendar, refetch]",[1722,1733],[1819,1846],"[examinationData.isLoading, examinationData.response]",[2294,2390],"[handleChange, parameters.addition, parameters.diopters]",[1141,1156],"[addLensesParameters, contactLenses, idx]",[2694,2724],[2816,2824],"[getUser, userId]",[3670,3689],"[handleOrderDetailChange, isUpdating, order]",[1007,1018],"[isLoading, response, userBooking.userBookings.dueDate]",[3254,3259],"[calendar, day]",[1662,1673],"[isLoading, response?.userBookings, userBookings?.dueDate]",[1765,1787],"[dayData?.bookingDate, refetch]",[1978,2006],"[selectedBooking, isLoading, response?.booking]",[467,472],"[action, ref]",[6481,6497],"[activeExamType, examinationToUpdate]",[11142,11190],"[examinationToUpdate, examinationData.isLoading, examinationData.response]",[3560,3571],[2153,2164]]
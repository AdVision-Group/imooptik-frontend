[{"/imooptik-frontend/src/index.js":"1","/imooptik-frontend/src/reportWebVitals.js":"2","/imooptik-frontend/src/App.jsx":"3","/imooptik-frontend/src/context/auth/auth.context.jsx":"4","/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx":"5","/imooptik-frontend/src/global.styles.jsx":"6","/imooptik-frontend/src/pages/dashboard/dashboard.jsx":"7","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx":"8","/imooptik-frontend/src/pages/reset-password/reset-password.jsx":"9","/imooptik-frontend/src/context/auth/auth.queries.jsx":"10","/imooptik-frontend/src/components/popup/pop-up.component.jsx":"11","/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx":"12","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx":"13","/imooptik-frontend/src/components/popup/pop.up.styles.jsx":"14","/imooptik-frontend/src/context/image/image.context.jsx":"15","/imooptik-frontend/src/components/sidenav/sidenav.component.jsx":"16","/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx":"17","/imooptik-frontend/src/context/user/user.context.jsx":"18","/imooptik-frontend/src/context/warehouse/warehouse.context.jsx":"19","/imooptik-frontend/src/context/booking/booking.context.jsx":"20","/imooptik-frontend/src/context/coupons/coupons.context.jsx":"21","/imooptik-frontend/src/context/analytics/analytics.context.jsx":"22","/imooptik-frontend/src/context/blog/blog.context.jsx":"23","/imooptik-frontend/src/context/orders/orders.context.jsx":"24","/imooptik-frontend/src/components/sign-in/sign-in.component.jsx":"25","/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx":"26","/imooptik-frontend/src/components/custom-input/custom-input.component.jsx":"27","/imooptik-frontend/src/components/custom-button/custom-button.component.jsx":"28","/imooptik-frontend/src/components/spinner/spinner.component.jsx":"29","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx":"30","/imooptik-frontend/src/sections/customers/customers.section.jsx":"31","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx":"32","/imooptik-frontend/src/sections/product/product.section.jsx":"33","/imooptik-frontend/src/sections/analytics/analytics.section.jsx":"34","/imooptik-frontend/src/sections/orders/orders.section.jsx":"35","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx":"36","/imooptik-frontend/src/sections/post/post.section.jsx":"37","/imooptik-frontend/src/sections/booking/booking.section.jsx":"38","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx":"39","/imooptik-frontend/src/sections/order/order.section.jsx":"40","/imooptik-frontend/src/sections/coupons/coupons.section.jsx":"41","/imooptik-frontend/src/sections/coupon/coupon.section.jsx":"42","/imooptik-frontend/src/sections/calendar/calendar.section.jsx":"43","/imooptik-frontend/src/context/user/user.queries.jsx":"44","/imooptik-frontend/src/context/user/user.utils.jsx":"45","/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx":"46","/imooptik-frontend/src/context/booking/booking.queries.jsx":"47","/imooptik-frontend/src/context/booking/booking.utils.jsx":"48","/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx":"49","/imooptik-frontend/src/context/image/image.queries.jsx":"50","/imooptik-frontend/src/context/orders/orders.utils.jsx":"51","/imooptik-frontend/src/context/orders/orders.queries.jsx":"52","/imooptik-frontend/src/context/blog/blog.queries.jsx":"53","/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx":"54","/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx":"55","/imooptik-frontend/src/components/spinner/spinner.styles.jsx":"56","/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx":"57","/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx":"58","/imooptik-frontend/src/sections/customers/customers.styles.jsx":"59","/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx":"60","/imooptik-frontend/src/sections/product/product.styles.jsx":"61","/imooptik-frontend/src/sections/analytics/analytics.styles.jsx":"62","/imooptik-frontend/src/sections/orders/orders.styles.jsx":"63","/imooptik-frontend/src/sections/order/order.styles.jsx":"64","/imooptik-frontend/src/sections/coupon/coupon.styles.jsx":"65","/imooptik-frontend/src/sections/booking/booking.styles.jsx":"66","/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx":"67","/imooptik-frontend/src/sections/coupons/coupons.styles.jsx":"68","/imooptik-frontend/src/sections/post/post.styles.jsx":"69","/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx":"70","/imooptik-frontend/src/sections/calendar/calendar.styles.jsx":"71","/imooptik-frontend/src/components/section-header/section-header.component.jsx":"72","/imooptik-frontend/src/components/product-overview/product-overview.component.jsx":"73","/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx":"74","/imooptik-frontend/src/components/pagination/pagination.component.jsx":"75","/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx":"76","/imooptik-frontend/src/components/user-form/user-form.component.jsx":"77","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx":"78","/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx":"79","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx":"80","/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.component.jsx":"81","/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.component.jsx":"82","/imooptik-frontend/src/components/modal-images/modal-images.component.jsx":"83","/imooptik-frontend/src/sections/order/steps/select-lenses.component.jsx":"84","/imooptik-frontend/src/sections/order/steps/summary.component.jsx":"85","/imooptik-frontend/src/sections/order/steps/find-product.component.jsx":"86","/imooptik-frontend/src/sections/order/steps/select-user.component.jsx":"87","/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx":"88","/imooptik-frontend/src/components/calendar/calendar.component.jsx":"89","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx":"90","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx":"91","/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx":"92","/imooptik-frontend/src/components/order-overview/order-overview.component.jsx":"93","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx":"94","/imooptik-frontend/src/components/section-header/section-header.styles.jsx":"95","/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx":"96","/imooptik-frontend/src/components/pagination/pagination.styles.jsx":"97","/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx":"98","/imooptik-frontend/src/components/user-form/user.form-styles.jsx":"99","/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx":"100","/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx":"101","/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.styles.jsx":"102","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx":"103","/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx":"104","/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx":"105","/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx":"106","/imooptik-frontend/src/components/calendar/calendar.styles.jsx":"107","/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx":"108","/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx":"109","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx":"110","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx":"111","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx":"112","/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx":"113","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx":"114","/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx":"115","/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx":"116","/imooptik-frontend/src/hooks/useOutsideAlerter.jsx":"117","/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx":"118","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx":"119","/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx":"120","/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx":"121","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx":"122","/imooptik-frontend/src/components/modal-finish-combined-product/modal-finish-combined-product.component.jsx":"123","/imooptik-frontend/src/components/modal-finish-combined-product/modal-finish-combined-product.styles.jsx":"124","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.component.jsx":"125","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.styles.jsx":"126"},{"size":717,"mtime":1608670306490,"results":"127","hashOfConfig":"128"},{"size":362,"mtime":1608191294784,"results":"129","hashOfConfig":"128"},{"size":1338,"mtime":1611164952090,"results":"130","hashOfConfig":"128"},{"size":6584,"mtime":1611960472114,"results":"131","hashOfConfig":"128"},{"size":1076,"mtime":1610126635393,"results":"132","hashOfConfig":"128"},{"size":888,"mtime":1611365536654,"results":"133","hashOfConfig":"128"},{"size":8556,"mtime":1611793524374,"results":"134","hashOfConfig":"128"},{"size":840,"mtime":1609978179243,"results":"135","hashOfConfig":"128"},{"size":1667,"mtime":1608613259561,"results":"136","hashOfConfig":"128"},{"size":2292,"mtime":1610635788267,"results":"137","hashOfConfig":"128"},{"size":714,"mtime":1609965412857,"results":"138","hashOfConfig":"128"},{"size":548,"mtime":1610227196940,"results":"139","hashOfConfig":"128"},{"size":506,"mtime":1608208021900,"results":"140","hashOfConfig":"128"},{"size":677,"mtime":1610074517686,"results":"141","hashOfConfig":"128"},{"size":4422,"mtime":1611960472114,"results":"142","hashOfConfig":"128"},{"size":2301,"mtime":1610505203270,"results":"143","hashOfConfig":"128"},{"size":772,"mtime":1610476886850,"results":"144","hashOfConfig":"128"},{"size":11941,"mtime":1611960472114,"results":"145","hashOfConfig":"128"},{"size":25589,"mtime":1612301699040,"results":"146","hashOfConfig":"128"},{"size":8166,"mtime":1611021415104,"results":"147","hashOfConfig":"128"},{"size":7011,"mtime":1611198583300,"results":"148","hashOfConfig":"128"},{"size":1778,"mtime":1611793524374,"results":"149","hashOfConfig":"128"},{"size":4067,"mtime":1611078874170,"results":"150","hashOfConfig":"128"},{"size":2680,"mtime":1612301699040,"results":"151","hashOfConfig":"128"},{"size":1925,"mtime":1609978226453,"results":"152","hashOfConfig":"128"},{"size":1466,"mtime":1609978281513,"results":"153","hashOfConfig":"128"},{"size":639,"mtime":1608689089980,"results":"154","hashOfConfig":"128"},{"size":283,"mtime":1608325857586,"results":"155","hashOfConfig":"128"},{"size":178,"mtime":1608409397640,"results":"156","hashOfConfig":"128"},{"size":4268,"mtime":1611960472124,"results":"157","hashOfConfig":"128"},{"size":4834,"mtime":1611960472114,"results":"158","hashOfConfig":"128"},{"size":6581,"mtime":1611960472114,"results":"159","hashOfConfig":"128"},{"size":17310,"mtime":1611960472124,"results":"160","hashOfConfig":"128"},{"size":2145,"mtime":1611793524374,"results":"161","hashOfConfig":"128"},{"size":4829,"mtime":1611960472124,"results":"162","hashOfConfig":"128"},{"size":3179,"mtime":1609802280536,"results":"163","hashOfConfig":"128"},{"size":9601,"mtime":1611079105190,"results":"164","hashOfConfig":"128"},{"size":6047,"mtime":1611015904774,"results":"165","hashOfConfig":"128"},{"size":810,"mtime":1610132345623,"results":"166","hashOfConfig":"128"},{"size":5136,"mtime":1612301699040,"results":"167","hashOfConfig":"128"},{"size":2802,"mtime":1611960472114,"results":"168","hashOfConfig":"128"},{"size":5575,"mtime":1611960472114,"results":"169","hashOfConfig":"128"},{"size":7353,"mtime":1611020836214,"results":"170","hashOfConfig":"128"},{"size":3530,"mtime":1611960472114,"results":"171","hashOfConfig":"128"},{"size":897,"mtime":1611960472114,"results":"172","hashOfConfig":"128"},{"size":5227,"mtime":1611960472114,"results":"173","hashOfConfig":"128"},{"size":2775,"mtime":1611021490654,"results":"174","hashOfConfig":"128"},{"size":328,"mtime":1611016532294,"results":"175","hashOfConfig":"128"},{"size":4920,"mtime":1611193699560,"results":"176","hashOfConfig":"128"},{"size":1560,"mtime":1610106635382,"results":"177","hashOfConfig":"128"},{"size":886,"mtime":1611365536654,"results":"178","hashOfConfig":"128"},{"size":3567,"mtime":1611103862750,"results":"179","hashOfConfig":"128"},{"size":1793,"mtime":1608678905090,"results":"180","hashOfConfig":"128"},{"size":880,"mtime":1609978233033,"results":"181","hashOfConfig":"128"},{"size":898,"mtime":1609978275513,"results":"182","hashOfConfig":"128"},{"size":377,"mtime":1608409635720,"results":"183","hashOfConfig":"128"},{"size":1263,"mtime":1609635810480,"results":"184","hashOfConfig":"128"},{"size":440,"mtime":1609635534260,"results":"185","hashOfConfig":"128"},{"size":944,"mtime":1611960472124,"results":"186","hashOfConfig":"128"},{"size":614,"mtime":1611960472114,"results":"187","hashOfConfig":"128"},{"size":920,"mtime":1611960472124,"results":"188","hashOfConfig":"128"},{"size":753,"mtime":1608501615800,"results":"189","hashOfConfig":"128"},{"size":784,"mtime":1611960472124,"results":"190","hashOfConfig":"128"},{"size":6192,"mtime":1612301699040,"results":"191","hashOfConfig":"128"},{"size":1007,"mtime":1611960472114,"results":"192","hashOfConfig":"128"},{"size":2027,"mtime":1610998962674,"results":"193","hashOfConfig":"128"},{"size":728,"mtime":1610132354653,"results":"194","hashOfConfig":"128"},{"size":1219,"mtime":1611781803964,"results":"195","hashOfConfig":"128"},{"size":1711,"mtime":1609802520286,"results":"196","hashOfConfig":"128"},{"size":1658,"mtime":1609636415920,"results":"197","hashOfConfig":"128"},{"size":976,"mtime":1611019811904,"results":"198","hashOfConfig":"128"},{"size":1370,"mtime":1611960472114,"results":"199","hashOfConfig":"128"},{"size":1416,"mtime":1611960472114,"results":"200","hashOfConfig":"128"},{"size":624,"mtime":1609280754422,"results":"201","hashOfConfig":"128"},{"size":834,"mtime":1609973813373,"results":"202","hashOfConfig":"128"},{"size":320,"mtime":1611163718930,"results":"203","hashOfConfig":"128"},{"size":11230,"mtime":1611960472114,"results":"204","hashOfConfig":"128"},{"size":7495,"mtime":1611960472114,"results":"205","hashOfConfig":"128"},{"size":16547,"mtime":1611960472104,"results":"206","hashOfConfig":"128"},{"size":3741,"mtime":1611960472114,"results":"207","hashOfConfig":"128"},{"size":3942,"mtime":1611960472114,"results":"208","hashOfConfig":"128"},{"size":7224,"mtime":1611960472114,"results":"209","hashOfConfig":"128"},{"size":8363,"mtime":1611078296630,"results":"210","hashOfConfig":"128"},{"size":3121,"mtime":1612301699040,"results":"211","hashOfConfig":"128"},{"size":4325,"mtime":1612301699040,"results":"212","hashOfConfig":"128"},{"size":3919,"mtime":1612301699040,"results":"213","hashOfConfig":"128"},{"size":2988,"mtime":1611764475848,"results":"214","hashOfConfig":"128"},{"size":425,"mtime":1609365301650,"results":"215","hashOfConfig":"128"},{"size":4040,"mtime":1611351882774,"results":"216","hashOfConfig":"128"},{"size":745,"mtime":1611011495664,"results":"217","hashOfConfig":"128"},{"size":354,"mtime":1610748624680,"results":"218","hashOfConfig":"128"},{"size":651,"mtime":1608506295620,"results":"219","hashOfConfig":"128"},{"size":3356,"mtime":1611960472104,"results":"220","hashOfConfig":"128"},{"size":1467,"mtime":1611960472114,"results":"221","hashOfConfig":"128"},{"size":1016,"mtime":1611960472114,"results":"222","hashOfConfig":"128"},{"size":718,"mtime":1608401951890,"results":"223","hashOfConfig":"128"},{"size":646,"mtime":1609973838353,"results":"224","hashOfConfig":"128"},{"size":2089,"mtime":1610753900350,"results":"225","hashOfConfig":"128"},{"size":2117,"mtime":1611960472114,"results":"226","hashOfConfig":"128"},{"size":487,"mtime":1611163742900,"results":"227","hashOfConfig":"128"},{"size":896,"mtime":1611960472104,"results":"228","hashOfConfig":"128"},{"size":990,"mtime":1611960472114,"results":"229","hashOfConfig":"128"},{"size":1175,"mtime":1611960472114,"results":"230","hashOfConfig":"128"},{"size":1387,"mtime":1611960472114,"results":"231","hashOfConfig":"128"},{"size":3851,"mtime":1610125616673,"results":"232","hashOfConfig":"128"},{"size":447,"mtime":1609638204590,"results":"233","hashOfConfig":"128"},{"size":1158,"mtime":1610914847120,"results":"234","hashOfConfig":"128"},{"size":1062,"mtime":1608505999020,"results":"235","hashOfConfig":"128"},{"size":2323,"mtime":1611960472104,"results":"236","hashOfConfig":"128"},{"size":878,"mtime":1610911669420,"results":"237","hashOfConfig":"128"},{"size":554,"mtime":1609636648760,"results":"238","hashOfConfig":"128"},{"size":743,"mtime":1610846076230,"results":"239","hashOfConfig":"128"},{"size":6069,"mtime":1612302689450,"results":"240","hashOfConfig":"128"},{"size":681,"mtime":1610146980773,"results":"241","hashOfConfig":"128"},{"size":341,"mtime":1610810143010,"results":"242","hashOfConfig":"128"},{"size":3152,"mtime":1611179300330,"results":"243","hashOfConfig":"128"},{"size":1400,"mtime":1611365536654,"results":"244","hashOfConfig":"128"},{"size":2043,"mtime":1611960472114,"results":"245","hashOfConfig":"128"},{"size":989,"mtime":1610837219950,"results":"246","hashOfConfig":"128"},{"size":294,"mtime":1610810084190,"results":"247","hashOfConfig":"128"},{"size":1315,"mtime":1611192415580,"results":"248","hashOfConfig":"128"},{"size":486,"mtime":1610505703940,"results":"249","hashOfConfig":"128"},{"size":13014,"mtime":1612301699040,"results":"250","hashOfConfig":"128"},{"size":2472,"mtime":1612301699040,"results":"251","hashOfConfig":"128"},{"size":7276,"mtime":1612301699040,"results":"252","hashOfConfig":"128"},{"size":1961,"mtime":1612301699040,"results":"253","hashOfConfig":"128"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},"1lk1amn",{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"256"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"256"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"256"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"256"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"256"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"256"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"256"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"256"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"256"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"256"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"256"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"256"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"256"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"256"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"256"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"256"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"256"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"256"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"256"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"256"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"256"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"256"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"256"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"256"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"256"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"256"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"256"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"256"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"256"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"256"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"256"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"256"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},"/imooptik-frontend/src/index.js",[],["539","540"],"/imooptik-frontend/src/reportWebVitals.js",[],"/imooptik-frontend/src/App.jsx",[],"/imooptik-frontend/src/context/auth/auth.context.jsx",["541"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { getUser, createNewUser, resetPassword, setNewPassword, fetchUser } from './auth.queries'\n\nexport const AuthContext = createContext({\n    currentUser: null,\n    isAdmin: false,\n    token: null,\n    stats: null,\n    logIn: () => { },\n    logOut: () => { },\n    register: () => { },\n    handleResetPassword: () => { },\n    handleCreatingNewPassword: () => { }\n})\n\nconst AuthProvider = ({ children }) => {\n    const { setShowModal, setIsLoading, getMessage, closeModal } = useContext(LoadingModalContext)\n    const [currentUser, setCurrentUser] = useState(null)\n    const [token, setToken] = useState(null)\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [stats, setStats] = useState(null)\n\n    const checkIfAdmin = (user) => {\n        if (user.admin > 1) {\n            setIsAdmin(true)\n        } else {\n            setIsAdmin(false)\n        }\n    }\n\n    const logIn = async (email, password) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await getUser({ email, password })\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n            if (user.user) {\n                setCurrentUser(user.user)\n                setToken(user.authToken)\n                localStorage.setItem(process.env.REACT_APP_ADMIN_TOKEN, user.authToken)\n                checkIfAdmin(user.user)\n\n                closeModal()\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const logOut = () => {\n        localStorage.removeItem(process.env.REACT_APP_ADMIN_TOKEN)\n        setCurrentUser(null)\n        setToken(null)\n    }\n\n    const register = async (name, email, password, confirmPassword) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!name) {\n            console.log(\"Ziadne meno\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n\n        if (password !== confirmPassword) {\n            console.log(\"hesla sa nezhoduju\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await createNewUser({ name, email, password })\n            const data = await response.json()\n\n            setIsLoading(false)\n            getMessage(data.message)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleResetPassword = async (email) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await resetPassword(email)\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleCreatingNewPassword = async (resetSecret, password) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        console.log(resetSecret)\n\n        if (!resetSecret) {\n            console.log(\"Ziadny reset token\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await setNewPassword(resetSecret, password)\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const getStats = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/stats/collectionCounts`, requestOptions)\n            const data = await response.json()\n\n            setStats(data)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN)) {\n            setToken(localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (token) {\n            const getUserProfile = async () => {\n                const response = await fetchUser(token)\n                const data = await response.json()\n                if (data.user) {\n                    setCurrentUser(data.user)\n                    checkIfAdmin(data.user)\n                }\n            }\n            getUserProfile()\n            getStats()\n        }\n    }, [token])\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token,\n                currentUser,\n                isAdmin,\n                stats,\n                logIn,\n                logOut,\n                register,\n                handleResetPassword,\n                handleCreatingNewPassword\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthProvider","/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx",[],"/imooptik-frontend/src/global.styles.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset-password.jsx",[],"/imooptik-frontend/src/context/auth/auth.queries.jsx",[],"/imooptik-frontend/src/components/popup/pop-up.component.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx",[],"/imooptik-frontend/src/components/popup/pop.up.styles.jsx",[],"/imooptik-frontend/src/context/image/image.context.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.component.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx",[],"/imooptik-frontend/src/context/user/user.context.jsx",["542","543","544"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\n\nimport {\n    fetchUsers,\n    fetchUser,\n    patchUser,\n    postAdmin,\n    postUser,\n} from './user.queries'\n\nimport {\n    initUserObj\n} from './user.utils'\n\nexport const UserContext = createContext({\n    isUpdating: false,\n    activeIndex: 0,\n    handleChangeFilterItem: () => { },\n    filterItems: [],\n    totalCount: 0,\n    users: null,\n    user: null,\n    // getUsers: () => { },\n    getUser: () => { },\n    handleChange: () => { },\n    handleParameterChange: () => { },\n    handleCompanyChange: () => { },\n    updateUser: () => { },\n    resetUser: () => { },\n    formToShow: 0,\n    switchFormButtons: [],\n    toggleUserForm: () => { },\n    createUser: () => { },\n    getFilteredUsers: () => { },\n    getUserByQuery: () => { }\n})\n\nconst UserProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token } = useContext(AuthContext)\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    // ------------------------\n\n    const [user, setUser] = useState(initUserObj)\n    const [users, setUsers] = useState(null)\n    const [totalCount, setTotalCount] = useState(0)\n\n    // ------------------------\n\n    const [isUpdating, setIsUpdating] = useState(false)\n    const [activeIndex, setActiveIndex] = useState(0)\n    const filterItems = [\n        {\n            id: 0,\n            name: \"Zákaznici\",\n            filter: 0,\n        },\n        {\n            id: 1,\n            name: \"Zamestnanci\",\n            filter: 1,\n        },\n        {\n            id: 2,\n            name: \"Vedúci\",\n            filter: 2,\n        },\n        // {\n        //     id: 3,\n        //     name: \"Velký brat\",\n        //     filter: 3,\n        // }\n    ]\n\n    // ------------------------\n\n    const [formToShow, setFormToShow] = useState(0)\n    const switchFormButtons = [\n        {\n            name: \"Zákazník\"\n        },\n        {\n            name: \"Zamestnanec\"\n        }\n    ]\n\n    const toggleUserForm = (e, idx) => {\n        e.preventDefault()\n        setFormToShow(idx)\n    }\n\n    // ------------------------\n\n\n    const handleChangeFilterItem = (itemIndex) => {\n        setActiveIndex(itemIndex)\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n\n        console.log(name, value)\n        setUser({\n            ...user,\n            [name]: value\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = user.lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleCompanyChange = (e) => {\n        const { name, value } = e.target\n        setUser({\n            ...user,\n            company: {\n                ...user.company,\n                [name]: value\n            }\n        })\n    }\n\n    useEffect(() => {\n        setUser({\n            ...user,\n            name: user.fName + \" \" + user.lName\n        })\n    }, [user.fName, user.lName])\n\n    const resetUser = () => {\n        setUser(initUserObj)\n        setIsUpdating(false)\n        setFormToShow(0)\n    }\n\n    // ------------------------\n    // USER ACTIONS\n    // ------------------------\n\n    // Get all users\n    // const getUsers = async () => {\n    //     setIsLoading(true)\n    //     setShowModal(true)\n\n    //     try {\n    //         const response = await fetchUsers(token)\n    //         const data = await response.json()\n\n    //         console.log(data)\n    //         if (data.users) {\n    //             setUsers(data.users)\n    //             setTotalCount(data.count)\n    //             setIsLoading(false)\n    //             closeModal()\n\n    //         } else {\n    //             getMessage(data.message)\n    //             setIsLoading(false)\n    //         }\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n    // }\n\n    // Get single user\n    const getUser = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n        setIsUpdating(true)\n\n        try {\n            const response = await fetchUser(token, id)\n            const data = await response.json()\n\n            if (data.user) {\n                setUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n                setIsLoading(false)\n                closeModal()\n\n            } else {\n                getMessage(data.message)\n                setIsLoading(false)\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Update user\n    const updateUser = async (user, id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(user)\n\n        try {\n            const response = await patchUser(token, user, id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.message)\n                if (data.error === 'low-privileges') {\n                    getMessage(\"Nemôžeš upravovať užívateľov s väčšími alebo rovnakými právami ako máš ty\")\n\n                }\n                if (data.error === 'format') {\n                    getMessage(\"Chyba formátovania: \" + data.message)\n                }\n                if (data.error === 'format' && data.message.includes('lenses.cylinderAxes')) {\n                    getMessage(\"Osa musí byt väčšia alebo rovná 0\")\n                }\n                if (data.error === 'phone-exists') {\n                    getMessage(\"Telefónne číslo už v databázy existuje\")\n                }\n                setIsLoading(false)\n                return\n            }\n\n\n            setIsLoading(false)\n            closeModal()\n            push('/dashboard/zakaznici')\n            getFilteredUsers({\n                filters: {\n                    admin: activeIndex\n                }\n            })\n            // http://localhost:1000/#/dashboard/zakaznici\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createUser = async (user) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            if (formToShow === 0) {\n                let data = {}\n                if (!user._id) {\n                    console.log('creating new user')\n                    const response = await postUser(token, user)\n                    data = await response.json()\n\n                    if (data.error) {\n                        getMessage(data.message)\n\n                        if (data.type === 'email') {\n                            getMessage(\"Email existuje\")\n                        }\n                        if (data.error === 'format' && data.message.includes('email')) {\n                            getMessage(\"Email musi byt platny email\")\n                        }\n                        setIsLoading(false)\n                        return\n                    }\n\n                    setUser({\n                        ...data.user,\n                        _id: data.user._id\n                    })\n                }\n\n                const userId = data.user ? data.user._id : user._id\n\n                updateUser({\n                    ...user\n                }, userId)\n\n                // setIsLoading(false)\n                // getUsers()\n                // push('/dashboard/zakaznici')\n                // closeModal()\n\n            } else {\n                if (user.password !== user.confirmPassword) {\n                    getMessage(\"Heslá sa nezhodujú\")\n                    setIsLoading(false)\n                    return\n                }\n\n                const response = await postAdmin(token, user)\n                const data = await response.json()\n\n                console.log(data)\n\n                if (data.error) {\n                    getMessage(data.message)\n                    setIsLoading(false)\n                    return\n                }\n\n                setIsLoading(false)\n                getFilteredUsers({\n                    filters: {\n                        admin: activeIndex\n                    }\n                })\n                push('/dashboard/zakaznici')\n                closeModal()\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // ----------------------------------------------\n    // ----------------------------------------------\n    // ----------------------------------------------\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const getFilteredUsers = async (filter) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(filter)\n        const raw = JSON.stringify(filter)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getUserByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(query)\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <UserContext.Provider\n            value={{\n                isUpdating,\n                activeIndex,\n                handleChangeFilterItem,\n                filterItems,\n                users,\n                user,\n                totalCount,\n                // getUsers,\n                getUser,\n                handleChange,\n                handleParameterChange,\n                handleCompanyChange,\n                updateUser,\n                resetUser,\n                formToShow,\n                switchFormButtons,\n                toggleUserForm,\n                createUser,\n                getFilteredUsers,\n                getUserByQuery\n            }}\n        >\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserProvider","/imooptik-frontend/src/context/warehouse/warehouse.context.jsx",["545","546","547"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../auth/auth.context'\n\nimport {\n    premisesTabs,\n    categoryTabs,\n    initLensesObj,\n    initProductObj,\n    formatPrice,\n    diaConvert,\n    initContactLensesObj,\n    initGlassesObj,\n    formatfloatNumber,\n    formatLink\n} from './warehouse.utils'\n\nexport const WarehouseContext = createContext({\n    eanCode: null,\n    product: {},\n    lenses: {},\n    contactLensesParameters: {},\n    glassesParameters: {},\n    totalProducts: 0,\n    totalLenses: 0,\n    activePremisesTab: 0,\n    activeCategoryTypeTab: 0,\n    retailPremisesTabs: [],\n    productCategoryTypeTabs: [],\n    products: null,\n    lensesProducts: null,\n    handleChangeCategoryTypeTab: () => { },\n    handleChangePremisesTab: () => { },\n    getProductsByQuery: () => { },\n    handleProductChange: () => { },\n    handleProductAvailableChange: () => { },\n    getSingleProduct: () => { },\n    createProduct: () => { },\n    updateProduct: () => { },\n    deleteProduct: () => { },\n    getSingleLenses: () => { },\n    getLenses: () => { },\n    createLenses: () => { },\n    updateLenses: () => { },\n    deleteLenses: () => { },\n    handleLensesChange: () => { },\n    handleLensesParameterChange: () => { },\n    resetProduct: () => { },\n    resetLenses: () => { },\n    resetContactLenses: () => { },\n    resetGlassesParameters: () => { },\n    getEanCode: () => { },\n    handleAddNewParameter: () => { },\n    handleContactLensesParameterChange: () => { },\n    handleGlassesParameterChange: () => { },\n    handleGlassesParameterSpecsChange: () => { },\n    handleGlassesSizeChange: () => { },\n})\n\nconst WarehouseProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token, isAdmin, currentUser, stats } = useContext(AuthContext)\n    const { closeModal, setIsLoading, setShowModal, getMessage } = useContext(LoadingModalContext)\n\n    const [totalProducts, setTotalProducts] = useState(0)\n    const [totalLenses, setTotalLenses] = useState(0)\n    const [eanCode, setEanCode] = useState(null)\n\n    const [product, setProduct] = useState({ ...initProductObj })\n    const [lenses, setLenses] = useState({ ...initLensesObj })\n    const [contactLensesParameters, setContactLensesParameters] = useState({ ...initContactLensesObj })\n    const [glassesParameters, setGlassesParameters] = useState({ ...initGlassesObj })\n\n    const [products, setProducts] = useState(null)\n    const [lensesProducts, setLensesProducts] = useState(null)\n    const [activePremisesTab, setActivePremisesTab] = useState(0)\n    const [retailPremisesTabs, setRetailPremisesTabs] = useState([])\n\n    const [productCategoryTypeTabs, setProductCategoryTypeTabs] = useState(categoryTabs)\n    const [activeCategoryTypeTab, setActiveCategoryTypeTab] = useState(0)\n\n    const handleGlassesParameterChange = e => {\n        const { name, value } = e.target\n        setGlassesParameters({\n            ...glassesParameters,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParameterSpecsChange = e => {\n        const { name, value } = e.target\n        setGlassesParameters({\n            ...glassesParameters,\n            specs: {\n                ...glassesParameters.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n        setGlassesParameters({\n            ...glassesParameters,\n            specs: {\n                ...glassesParameters.specs,\n                [name]: arr\n            }\n        })\n\n    }\n\n    const handleAddNewParameter = e => {\n        const { name } = e.target\n        setContactLensesParameters({\n            ...contactLensesParameters,\n            [name]: [...contactLensesParameters[name], 1001]\n        })\n    }\n\n    const handleContactLensesParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n        setContactLensesParameters({\n            ...contactLensesParameters,\n            [name]: arr\n        })\n    }\n\n    const handleProductChange = e => {\n        const { name, value } = e.target\n\n        setProduct({\n            ...product,\n            [name]: value\n        })\n    }\n\n    const handleProductAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setProduct({\n            ...product,\n            [name]: arr\n        })\n    }\n\n    const handleLensesChange = e => {\n        const { name, value } = e.target\n\n        setLenses({\n            ...lenses,\n            [name]: value\n        })\n    }\n\n    const handleLensesParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n        setLenses({\n            ...lenses,\n            [name]: arr\n        })\n    }\n\n    const resetProduct = () => {\n        setProduct({\n            ...initProductObj,\n            available: [1001, 1001, 1001, 1001, 0],\n        })\n        setEanCode(null)\n    }\n\n    const resetLenses = () => {\n        // setLenses({ ...initLensesObj })\n        setLenses({\n            ...initLensesObj,\n            dioptersRange: [1001, 1001],\n            cylinderRange: [1001, 1001],\n        })\n    }\n\n    const resetContactLenses = () => {\n        setContactLensesParameters({\n            ...initContactLensesObj,\n            allowedCurves: [1001],\n            allowedDiameters: [1001],\n            dioptersRange: [1001, 1001]\n        })\n    }\n\n    const resetGlassesParameters = () => {\n        setGlassesParameters({\n            ...initGlassesObj,\n            specs: {\n                ...initGlassesObj.specs,\n                size: [1001, 1001, 1001]\n            }\n        })\n    }\n\n    const handleChangePremisesTab = (idx) => {\n        setActivePremisesTab(idx)\n    }\n\n    const handleChangeCategoryTypeTab = (idx) => {\n        setActiveCategoryTypeTab(idx)\n    }\n\n\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const getEanCode = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/nextEanCode`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.eanCode) {\n                setEanCode(data.eanCode)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getProductsByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(query)\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.products) {\n                setProducts(data.products)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getLenses = async () => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.lenses) {\n                setProducts(data.lenses)\n                setLensesProducts(data.lenses)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getSingleProduct = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/products/${id}`)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error === 'not-found') {\n                getSingleLenses(id)\n            }\n\n            if (data.product) {\n                setProduct({\n                    ...data.product,\n                    price: (data.product.price / 100).toFixed(2)\n                })\n                if (data.product.type === 3) {\n                    setContactLensesParameters({\n                        ...data.product.contactLenses\n                    })\n                } else {\n                    setGlassesParameters({\n                        colorCode: data.product.colorCode ?? \"\",\n                        specs: {\n                            ...data.product.specs,\n                            size: [...Array(3)].map((value, idx) => data.product.specs.size[idx] ? data.product.specs.size[idx] : 0)\n                        }\n                    })\n                }\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createProduct = async (productToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const slug = diaConvert(productToAdd.name).replaceAll(\" \", \"-\").toLowerCase().trim()\n\n        let modifiedProduct = {\n            ...productToAdd,\n            price: formatPrice(productToAdd.price.toString()),\n            link: slug,\n            available: productToAdd.available ? productToAdd.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0]\n        }\n\n        if (productToAdd.specs) {\n            if (productToAdd.specs.size) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    specs: {\n                        ...modifiedProduct.specs,\n                        size: productToAdd.specs.size.map(value => value === 1001 ? 0 : formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        if (productToAdd.contactLenses) {\n            if (productToAdd.contactLenses.allowedCurves) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: productToAdd.contactLenses.allowedCurves.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n            if (productToAdd.contactLenses.allowedDiameters) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: productToAdd.contactLenses.allowedDiameters.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n            if (productToAdd.contactLenses.dioptersRange) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: productToAdd.contactLenses.dioptersRange.map(value => formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        console.log(\"modifiedProduct\")\n        console.log(modifiedProduct)\n\n\n        const raw = JSON.stringify({\n            ...modifiedProduct,\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.product) {\n                push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10\n                })\n                setEanCode(null)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateProduct = async (productToUpdate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let modifiedProduct = {\n            ...productToUpdate,\n        }\n\n        if (modifiedProduct.price) {\n            modifiedProduct = {\n                ...modifiedProduct,\n                price: formatPrice(productToUpdate.price.toString()),\n            }\n        }\n\n        if (modifiedProduct.available) {\n            modifiedProduct = {\n                ...modifiedProduct,\n                available: productToUpdate.available ? productToUpdate.available.map(value => value === 1001 ? 0 : value) : [0, 0, 0, 0, 0]\n            }\n        }\n\n        if (productToUpdate.link) {\n            const slug = diaConvert(productToUpdate.link).replaceAll(\" \", \"-\").toLowerCase().trim()\n            modifiedProduct = {\n                ...modifiedProduct,\n                link: slug\n            }\n        }\n\n        if (productToUpdate.specs) {\n            if (productToUpdate.specs.size) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    specs: {\n                        ...modifiedProduct.specs,\n                        size: productToUpdate.specs.size.map(value => value === 1001 ? 0 : formatfloatNumber(value))\n                    }\n                }\n            }\n        }\n\n        if (productToUpdate.contactLenses) {\n            if (productToUpdate.contactLenses.allowedCurves) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: productToUpdate.contactLenses.allowedCurves.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedCurves: contactLensesParameters.allowedCurves\n                    }\n                }\n            }\n\n            if (productToUpdate.contactLenses.allowedDiameters) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: productToUpdate.contactLenses.allowedDiameters.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        allowedDiameters: contactLensesParameters.allowedDiameters\n                    }\n                }\n            }\n            if (productToUpdate.contactLenses.dioptersRange) {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: productToUpdate.contactLenses.dioptersRange.map(value => formatfloatNumber(value))\n                    }\n                }\n            } else {\n                modifiedProduct = {\n                    ...modifiedProduct,\n                    contactLenses: {\n                        ...modifiedProduct.contactLenses,\n                        dioptersRange: contactLensesParameters.dioptersRange\n                    }\n                }\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedProduct,\n        })\n\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/${product._id}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.message)\n                setIsLoading(false)\n                return\n\n            }\n\n            if (data.product) {\n                push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteProduct = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/products/${id}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.product) {\n                // push('/dashboard/obchod')\n                getProductsByQuery({\n                    limit: 10\n                })\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getSingleLenses = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/lenses/${id}`)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                setLenses(data.lenses)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createLenses = async (lensesToAdd) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const raw = JSON.stringify({\n            ...lensesToAdd,\n            price: formatPrice(lensesToAdd.price.toString())\n        });\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                push('/dashboard/obchod')\n                getLenses()\n                closeModal()\n                return\n            }\n\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const updateLenses = async (lensesToUpdate) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        let modifiedLenses = {\n            ...lensesToUpdate\n        }\n\n        if (modifiedLenses.price) {\n            modifiedLenses = {\n                ...modifiedLenses,\n                price: formatPrice(lensesToUpdate.price.toString()),\n            }\n        }\n\n        const raw = JSON.stringify({\n            ...modifiedLenses,\n        });\n\n        const requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/${lenses._id}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                push('/dashboard/obchod')\n                getLenses()\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const deleteLenses = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        const requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/lenses/${id}`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.lenses) {\n                getLenses()\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (products) {\n            console.log(`GET ${productCategoryTypeTabs[activeCategoryTypeTab].name} DATA`)\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    limit: 10\n                })\n            } else {\n                getLenses()\n            }\n        }\n    }, [activeCategoryTypeTab])\n\n    useEffect(() => {\n        console.log(\"SET PREMISES\")\n        if (currentUser) {\n            if (isAdmin) {\n                setRetailPremisesTabs(premisesTabs)\n                setActivePremisesTab(0)\n            } else {\n                setRetailPremisesTabs(premisesTabs.filter(tab => tab.premises === currentUser.premises))\n                setActivePremisesTab(0)\n            }\n        }\n    }, [currentUser, isAdmin])\n\n    useEffect(() => {\n        if (stats) {\n            console.log(\"SET STATS\")\n            setTotalProducts(stats.products)\n            setTotalLenses(stats.lenses)\n        }\n    }, [stats])\n\n    useEffect(() => {\n        if (product.name !== '') {\n            setProduct({\n                ...product,\n                link: formatLink(product.name)\n            })\n        }\n    }, [product.name])\n\n    return (\n        <WarehouseContext.Provider\n            value={{\n                eanCode,\n                product,\n                lenses,\n                contactLensesParameters,\n                glassesParameters,\n                totalProducts,\n                totalLenses,\n                activePremisesTab,\n                activeCategoryTypeTab,\n                retailPremisesTabs,\n                productCategoryTypeTabs,\n                products,\n                lensesProducts,\n                handleChangeCategoryTypeTab,\n                handleChangePremisesTab,\n                getProductsByQuery,\n                handleProductChange,\n                handleProductAvailableChange,\n                getLenses,\n                getSingleProduct,\n                createProduct,\n                updateProduct,\n                deleteProduct,\n                getSingleLenses,\n                createLenses,\n                updateLenses,\n                deleteLenses,\n                handleLensesChange,\n                handleLensesParameterChange,\n                resetProduct,\n                resetLenses,\n                resetContactLenses,\n                resetGlassesParameters,\n                getEanCode,\n                handleAddNewParameter,\n                handleContactLensesParameterChange,\n                handleGlassesParameterChange,\n                handleGlassesParameterSpecsChange,\n                handleGlassesSizeChange,\n            }}\n        >\n            {children}\n        </WarehouseContext.Provider>\n    )\n}\n\nexport default WarehouseProvider","/imooptik-frontend/src/context/booking/booking.context.jsx",[],"/imooptik-frontend/src/context/coupons/coupons.context.jsx",[],"/imooptik-frontend/src/context/analytics/analytics.context.jsx",[],"/imooptik-frontend/src/context/blog/blog.context.jsx",["548"],"import React, { createContext, useState, useContext } from 'react'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport {\n    fetchPosts,\n    createNewPost,\n    fetchSinglePost,\n    updatePost,\n    deletePost,\n} from './blog.queries'\n\n\nexport const BlogContext = createContext({\n    posts: null,\n    post: null,\n    postsCount: 0,\n    getPosts: () => { },\n    createPost: () => { },\n    getPost: () => { },\n    handlePostUpdate: () => { },\n    handlePostDelete: () => { },\n    resetBlog: () => { }\n})\n\nconst BlogProvider = ({ children }) => {\n    const { token } = useContext(AuthContext)\n\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    const [posts, setPosts] = useState(null)\n    const [post, setPost] = useState(null)\n    const [postsCount, setPostsCount] = useState(0)\n\n    const getPosts = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const response = await fetchPosts()\n        const data = await response.json()\n\n        setPosts(data.blogs)\n        setPostsCount(data.count)\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const getPost = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n\n            const response = await fetchSinglePost(id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.blog) {\n                setPost(data.blog)\n                setIsLoading(false)\n                getMessage(data.message)\n                return\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n            // setPosts(data.blogs)\n            // setPostsCount(data.count)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n\n        setShowModal(false)\n        setIsLoading(false)\n    }\n\n    const createPost = async (img, name, description, draft, html) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await createNewPost(token, name, description, draft, html, img)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostUpdate = async (name, description, draft, html, img, id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await updatePost(token, name, description, draft, html, img, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handlePostDelete = async (id) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        try {\n            const postResponse = await deletePost(token, id)\n            const postData = await postResponse.json()\n\n            getMessage(postData.message)\n            setIsLoading(false)\n            getPosts()\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const resetBlog = () => {\n        setPost(null)\n    }\n\n    return (\n        <BlogContext.Provider\n            value={{\n                posts,\n                post,\n                postsCount,\n                getPosts,\n                createPost,\n                getPost,\n                handlePostUpdate,\n                handlePostDelete,\n                resetBlog,\n            }}\n        >\n            {children}\n        </BlogContext.Provider>\n    )\n}\n\nexport default BlogProvider","/imooptik-frontend/src/context/orders/orders.context.jsx",["549","550"],"/imooptik-frontend/src/components/sign-in/sign-in.component.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.component.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.component.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.component.jsx",[],"/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx",["551","552"],"import React, { useState, useContext, useEffect } from 'react'\n// import { AuthContext } from '../..//context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useHistory } from 'react-router-dom'\n\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ProductOverview from '../../components/product-overview/product-overview.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport Pagination from '../../components/pagination/pagination.component'\n\n\n\nconst EshopSection = () => {\n    const { push } = useHistory()\n    const { closeModal, showModal, isLoading, message } = useContext(LoadingModalContext)\n    const [searchQuery, setSearchQuery] = useState('')\n    const [productItems, setProductItems] = useState([])\n\n    const {\n        totalProducts,\n        // totalLenses,\n        activePremisesTab,\n        products,\n        retailPremisesTabs,\n        getProductsByQuery,\n        handleChangePremisesTab,\n        productCategoryTypeTabs,\n        activeCategoryTypeTab,\n        handleChangeCategoryTypeTab,\n        deleteProduct,\n        deleteLenses,\n    } = useContext(WarehouseContext)\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    query: searchQuery\n                })\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (!products) {\n            getProductsByQuery({\n                limit: 10\n            })\n        }\n        if (products) {\n            setProductItems(products)\n        }\n    }, [products])\n\n    useEffect(() => {\n        if (!searchQuery && products) {\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    limit: 10\n                })\n            }\n        }\n    }, [searchQuery])\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [productsPerPage] = useState(10)\n\n    const paginate = (pageNumber) => {\n        getProductsByQuery({\n            limit: 10,\n            skip: (pageNumber - 1) * productsPerPage\n        })\n        setCurrentPage(pageNumber)\n    }\n\n    const handleDeleteProduct = (id) => {\n        setCurrentPage(1)\n        deleteProduct(id)\n    }\n\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                title=\"Sklad\"\n                searchQuery={searchQuery}\n                handleSearch={handleSearch}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('sklad/novy-produkt')}\n\n            />\n\n            <SectionNavbar\n                items={retailPremisesTabs}\n                activeIndex={activePremisesTab}\n                setActiveIndex={handleChangePremisesTab}\n            />\n\n            <SectionNavbar\n                items={productCategoryTypeTabs}\n                activeIndex={activeCategoryTypeTab}\n                setActiveIndex={handleChangeCategoryTypeTab}\n            />\n\n            <ScrollContainer>\n                {productItems.map((product, idx) => (\n                    <ProductOverview\n                        key={idx}\n                        product={product}\n                        activePremisesTab={activePremisesTab}\n                        handleUpdateButton={() => push(`sklad/${product._id}`)}\n                        handleDeleteButton={activeCategoryTypeTab === 0 ? () => handleDeleteProduct(product._id) : () => deleteLenses((product._id))}\n                    />\n                ))}\n\n                {activeCategoryTypeTab === 0 && <Pagination\n                    productsPerPage={10}\n                    totalProducts={totalProducts}\n                    paginate={paginate}\n                    activePage={currentPage}\n                />}\n            </ScrollContainer>\n        </section >\n    )\n}\n\nexport default EshopSection\n","/imooptik-frontend/src/sections/customers/customers.section.jsx",["553","554","555","556"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { useHistory } from 'react-router-dom'\nimport { UserContext } from '../../context/user/user.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from \"../../components/section-navbar/section-navbar.component\"\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport Pagination from '../../components/pagination/pagination.component'\n\nimport {\n    TableCol,\n    TableContainer,\n    TableHead,\n    TableRow,\n    UpdateButton,\n    DeleteButton\n} from './customers.styles'\n\nconst CustomersSection = () => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n    const { isAdmin } = useContext(AuthContext)\n    const [userItems, setUserItems] = useState([])\n\n    const {\n        isLoading,\n        showModal,\n        message,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        user,\n        activeIndex,\n        handleChangeFilterItem,\n        filterItems,\n        users,\n        totalCount,\n        getFilteredUsers,\n        getUserByQuery\n    } = useContext(UserContext)\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            getUserByQuery({\n                query: searchQuery\n            })\n        }\n    }\n\n    useEffect(() => {\n        if (!users) {\n            getFilteredUsers({\n                filters: {\n                    admin: activeIndex\n                }\n            })\n        }\n        if (users) {\n            setUserItems(users)\n        }\n    }, [users])\n\n    useEffect(() => {\n        if (users) {\n            getFilteredUsers({\n                filters: {\n                    admin: activeIndex\n                }\n            })\n            setUserItems(users)\n        }\n    }, [activeIndex])\n\n    useEffect(() => {\n        if (users) {\n            if (searchQuery === '') {\n                getFilteredUsers({\n                    filters: {\n                        admin: activeIndex\n                    }\n                })\n                setUserItems(users)\n            }\n        }\n    }, [searchQuery])\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [usersPerPage] = useState(10)\n    const indexOfLastUser = currentPage * usersPerPage\n    const indexOfFirstUser = indexOfLastUser - usersPerPage\n    const currentUsers = userItems.slice(indexOfFirstUser, indexOfLastUser)\n    const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleSearch={handleSearch}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('zakaznici/novy-zakaznik')}\n                count={totalCount}\n                title=\"Zákazníci\"\n            />\n\n            <SectionNavbar\n                items={isAdmin ? filterItems : [\n                    {\n                        id: 0,\n                        name: \"Zákazníci\",\n                        filter: 0,\n                    },]}\n                activeIndex={activeIndex}\n                setActiveIndex={handleChangeFilterItem}\n            />\n\n            <ScrollContainer>\n                <TableContainer>\n                    <TableHead>\n                        <TableCol>Meno a priezvisko</TableCol>\n                        <TableCol>Email</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {currentUsers.map((user, idx) => (\n                        <TableRow key={idx}>\n                            <TableCol>{user.name}</TableCol>\n                            <TableCol>{user.email}</TableCol>\n                            <TableCol>\n                                <UpdateButton onClick={() => push(`zakaznici/${user._id}`)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={() => alert(\"Pekný pokus! Tu velím zatiaľ ja :)\")}>Odstrániť</DeleteButton>\n                            </TableCol>\n                        </TableRow>\n                    ))}\n                </TableContainer>\n\n                <Pagination\n                    productsPerPage={usersPerPage}\n                    totalProducts={userItems.length}\n                    paginate={paginate}\n                    activePage={currentPage}\n                />\n            </ScrollContainer>\n\n        </section>\n    )\n}\n\nexport default CustomersSection\n","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx",["557","558","559"],"import React, { useContext, useEffect, useState } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { UserContext } from '../../context/user/user.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport UserForm from '../../components/user-form/user-form.component'\nimport NewUserForm from '../../components/new-user-form/new-user-form.component'\n\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    DeleteProfileButton,\n    // Name,\n    SaveButton,\n} from './customer-profile.styles'\n\nconst CustomerProfile = () => {\n    const { id } = useParams()\n    const { isAdmin } = useContext(AuthContext)\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal,\n    } = useContext(LoadingModalContext)\n\n    const {\n        isUpdating,\n        user,\n        getUser,\n        handleChange,\n        handleParameterChange,\n        handleCompanyChange,\n        updateUser,\n        resetUser,\n        formToShow,\n        switchFormButtons,\n        toggleUserForm,\n        createUser,\n    } = useContext(UserContext)\n\n    const [userObj, setUserObj] = useState({})\n    const [hasChanges, setHasChanges] = useState(false)\n\n    const handleUserChange = (e) => {\n        setHasChanges(true)\n        const { name, value } = e.target\n\n        handleChange(e)\n\n\n        if (value === '') {\n            delete userObj[name]\n            // delete userObj.company[]\n            return\n        }\n\n        setUserObj({\n            ...userObj,\n            [name]: value\n        })\n    }\n\n    const handleLensesParameterChange = (e, idx) => {\n        setHasChanges(true)\n\n        const { name, value } = e.target\n        let arr = user.lenses[name]\n        arr[idx] = Number(value)\n\n        handleParameterChange(e, idx)\n        setUserObj({\n            ...userObj,\n            lenses: {\n                ...user.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleCompanyAddressChange = (e) => {\n        setHasChanges(true)\n\n        const { name, value } = e.target\n        handleCompanyChange(e)\n\n        console.log(value)\n\n        if (value === '') {\n            delete userObj.company[name]\n            if (Object.keys(userObj.company).length === 0) {\n                delete userObj[\"company\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setUserObj({\n            ...userObj,\n            company: {\n                ...userObj.company,\n                [name]: value\n            }\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setHasChanges(false)\n\n        if (id === 'novy-zakaznik') {\n            console.log(\"Create new user\")\n            if (userObj.fName || userObj.lName) {\n                delete userObj[\"fName\"]\n                delete userObj[\"lName\"]\n            }\n            createUser(userObj)\n        } else {\n            console.log(\"Update existing user\")\n            if (userObj.fName || userObj.lName) {\n                delete userObj[\"fName\"]\n                delete userObj[\"lName\"]\n            } else if (!userObj.fName || !userObj.lName) {\n                delete userObj[\"name\"]\n            }\n            updateUser(userObj, user._id)\n        }\n    }\n\n    useEffect(() => {\n        setUserObj({\n            ...userObj,\n            name: user.fName + \" \" + user.lName\n        })\n    }, [userObj.fName, userObj.lName])\n\n    useEffect(() => {\n        if (id !== 'novy-zakaznik') {\n            getUser(id)\n        }\n    }, [id])\n\n    useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            resetUser()\n            handleChange({\n                target: {\n                    name: 'lenses',\n                    value: {\n                        cylinder: [1001, 1001, 1001, 1001],\n                        cylinderAxes: [1001, 1001, 1001, 1001],\n                        diopters: [1001, 1001, 1001, 1001],\n                        distance: [1001, 1001, 1001, 1001],\n                        addition: [1001, 1001, 1001, 1001],\n                        basis: [1001, 1001, 1001, 1001],\n                        prism: [1001, 1001, 1001, 1001],\n                    },\n                }\n            })\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <Prompt\n                when={hasChanges}\n                message={\"Máte neuložené zmeny, chcete aj tak odísť ?\"}\n            />\n            <form onSubmit={handleSubmit}>\n                <Header>\n                    <h1>Profil</h1>\n                    <div>\n                        {isUpdating && <DeleteProfileButton>Vymazať</DeleteProfileButton>}\n                        <SaveButton type=\"submit\">\n                            {isUpdating ? \"Uložiť zmeny\" : \"Vytvoriť\"}\n                        </SaveButton>\n                    </div>\n                </Header>\n\n                <ScrollContainer>\n                    {\n                        isUpdating ? (\n                            <UserForm\n                                isAdmin={isAdmin}\n                                isUpdating={isUpdating}\n                                user={user}\n                                handleChange={handleUserChange}\n                                handleParameterChange={handleLensesParameterChange}\n                                handleCompanyChange={handleCompanyAddressChange}\n                            />\n                        ) : (\n                                <NewUserForm\n                                    isAdmin={isAdmin}\n                                    handleParameterChange={handleLensesParameterChange}\n                                    formToShow={formToShow}\n                                    switchFormButtons={switchFormButtons}\n                                    toggleUserForm={toggleUserForm}\n                                    user={user}\n                                    handleChange={handleUserChange}\n                                    handleCompanyChange={handleCompanyAddressChange}\n                                    resetUser={resetUser}\n\n                                />\n                            )\n                    }\n\n\n                </ScrollContainer>\n\n            </form>\n        </section>\n    )\n}\n\nexport default CustomerProfile\n","/imooptik-frontend/src/sections/product/product.section.jsx",["560","561","562","563"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport Popup from '../../components/popup/pop-up.component'\n\n// import CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\n// import CustomFormSwitch from '../../components/custom-form-switch/custom-form-switch.component'\nimport ProductGlassesForm from '../../components/product-glasses-form/product-glasses-form.component'\nimport ProductLensesForm from '../../components/product-lenses-form/product-lenses-form.component'\nimport ProductAccessoriesForm from '../../components/product-accessories-form/product-accessories-form.component'\nimport ProductContactLensesForm from '../../components/product-contact-lenses-form/product-contact-lenses-form.component'\n\n// import { useFetch } from '../../hooks/useFetch'\n\nimport { productCategories, checkParameter, retailNames, formatLink } from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Header,\n    CategoryContainer,\n    CategoryCheckbox,\n    SubmitButton,\n    IsPublicCheckbox,\n\n} from './product.styles'\n\nconst ProductSection = () => {\n    const { id } = useParams()\n    const { currentUser } = useContext(AuthContext)\n    const { closeModal, message, isLoading, showModal, getMessage, setShowModal } = useContext(LoadingModalContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const {\n        eanCode,\n        product,\n        lenses,\n        contactLensesParameters,\n        glassesParameters,\n        handleLensesChange,\n        handleLensesParameterChange,\n        createProduct,\n        updateProduct,\n        resetProduct,\n        resetLenses,\n        resetContactLenses,\n        resetGlassesParameters,\n        createLenses,\n        updateLenses,\n        handleProductChange,\n        handleProductAvailableChange,\n        getEanCode,\n        handleAddNewParameter,\n        handleContactLensesParameterChange,\n        handleGlassesParameterChange,\n        handleGlassesParameterSpecsChange,\n        handleGlassesSizeChange,\n        getSingleProduct\n    } = useContext(WarehouseContext)\n\n    const [hasChanged, setHasChanged] = useState(false)\n    const [productObj, setProductObj] = useState({})\n\n\n\n    const handleChangeType = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (!isUpdating) {\n            if (productObj.type === 0) {\n                if (Object.keys(productObj).length > 1) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetLenses()\n                    } else {\n                        return\n                    }\n                }\n            } else {\n                if (Object.keys(productObj).length > 2) {\n                    const confirm = window.confirm(\"Rozpisane polia budú vymazane\")\n                    if (confirm) {\n                        resetProduct()\n                        resetContactLenses()\n                        resetGlassesParameters()\n                    } else {\n                        return\n                    }\n                }\n            }\n        }\n        setProductObj({\n            [name]: value\n        })\n\n    }\n\n    const handleChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        if (productObj.type === 0) {\n            handleLensesChange(e)\n        }\n\n        if (productObj.type === 5) {\n            handleProductChange(e)\n        }\n\n        if (productObj.type === 4) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 3) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 2) {\n            handleProductChange(e)\n        }\n        if (productObj.type === 1) {\n            handleProductChange(e)\n        }\n\n\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        if (isUpdating) {\n            if (name === 'name') {\n                setProductObj({\n                    ...productObj,\n                    [name]: value,\n                    link: formatLink(value)\n                })\n                return\n            }\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleGlassesParametersChange = e => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterChange(e)\n\n        if (value === '') {\n            delete productObj[name]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            [name]: value\n        })\n    }\n\n    const handleSpecsChange = (e) => {\n        setHasChanged(true)\n        const { name, value } = e.target\n\n        handleGlassesParameterSpecsChange(e)\n\n        if (value === '') {\n            delete productObj.specs[name]\n\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: value\n            }\n        })\n    }\n\n    const handleGlassesSpecsSizeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = glassesParameters.specs[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleGlassesSizeChange(e, idx)\n\n        if (value === '') {\n            if (productObj.specs[name].length > 1) {\n                arr[idx] = 1001\n\n                const firstIndex = arr[0]\n                const canDeleteSpecs = arr.map(value => {\n                    if (firstIndex !== value) {\n                        return false\n                    } else {\n                        return true\n                    }\n                })\n\n                const verdict = canDeleteSpecs.find(value => value === false)\n\n                if (verdict === false) {\n                    setProductObj({\n                        ...productObj,\n                        specs: {\n                            ...productObj.specs,\n                            [name]: arr\n                        }\n                    })\n                } else {\n                    delete productObj.specs[name]\n                }\n\n            }\n            if (Object.keys(productObj.specs).length === 0) {\n                delete productObj[\"specs\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            specs: {\n                ...productObj.specs,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleAvailableChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = product[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleProductAvailableChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleContactLensesChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = contactLensesParameters[name]\n        arr[idx] = value === '' ? 1001 : value\n\n        handleContactLensesParameterChange(e, idx)\n\n        if (value === '') {\n            if (productObj.contactLenses[name].length > 1) {\n                arr.splice(idx, 1)\n                setProductObj({\n                    ...productObj,\n                    contactLenses: {\n                        ...productObj.contactLenses,\n                        [name]: arr\n                    }\n                })\n            } else {\n                delete productObj.contactLenses[name]\n            }\n            if (Object.keys(productObj.contactLenses).length === 0) {\n                delete productObj[\"contactLenses\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setProductObj({\n            ...productObj,\n            contactLenses: {\n                ...productObj.contactLenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = lenses[name]\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        handleLensesParameterChange(e, idx)\n        setProductObj({\n            ...productObj,\n            [name]: arr\n        })\n    }\n\n    const handleSelectImage = (imgId) => {\n        setHasChanged(true)\n        setProductObj({\n            ...productObj,\n            image: imgId\n        })\n    }\n\n    console.log(\"PRODUCT OBJECT\")\n    console.log(productObj)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (isUpdating) {\n            if (productObj.type === 0) {\n                setHasChanged(false)\n                delete productObj['link']\n                delete productObj['type']\n                updateLenses(productObj)\n                return\n            } else if (productObj.type === 3) {\n                setHasChanged(false)\n                delete productObj['type']\n                updateProduct({ ...productObj, contactLenses: {} })\n                return\n            } else {\n                setHasChanged(false)\n                delete productObj['type']\n                updateProduct(productObj)\n                return\n            }\n        } else {\n            if (productObj.type === 0) {\n                if (!productObj.name || !productObj.brand || !productObj.description || !productObj.price || !productObj.image || !productObj.dioptersRange || !productObj.cylinderRange) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    delete productObj['type']\n                    createLenses(productObj)\n                }\n            }\n            if (productObj.type === 5 || productObj.type === 4 || productObj.type === 3 || productObj.type === 2 || productObj.type === 1) {\n                if (!productObj.name || !productObj.price || !productObj.image) {\n                    setShowModal(true)\n                    getMessage(\"Povinné údaje sú prázdne\")\n                    return\n                } else {\n                    setHasChanged(false)\n                    createProduct(productObj)\n                }\n            }\n        }\n\n\n    }\n\n    useEffect(() => {\n        if (id === \"novy-produkt\") {\n            if (!eanCode) {\n                getEanCode()\n            } else {\n                if (productObj.type) {\n                    handleChange({\n                        target: {\n                            name: \"eanCode\",\n                            value: eanCode\n                        }\n                    })\n                }\n            }\n        }\n    }, [id, eanCode, productObj.type, productObj.eanCode, product.type])\n\n    useEffect(() => {\n        if (id !== 'novy-produkt') {\n            getSingleProduct(id)\n            setIsUpdating(true)\n            if (!productObj.type) {\n                handleChangeType({\n                    target: {\n                        name: \"type\",\n                        value: product.type\n                    }\n                })\n\n            }\n        }\n    }, [id, product.type])\n\n    useEffect(() => {\n        if (product.image) {\n            setSelectedImage(product.image)\n        }\n        if (lenses.image) {\n            setSelectedImage(lenses.image)\n        }\n    }, [product.image, lenses.image])\n\n    useEffect(() => {\n        return () => {\n            resetProduct()\n            resetLenses()\n            resetContactLenses()\n            resetGlassesParameters()\n            setProductObj({})\n            setSelectedImage(null)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <section>\n            <Prompt\n                when={hasChanged}\n                message=\"Chcete opustiť formulár?\"\n            />\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={handleSelectImage} />}\n            <Header>\n                <div>\n                    <h1>Nový Produkt</h1>\n                </div>\n                <div>\n                    <IsPublicCheckbox\n                        label=\"Verejné\"\n                        // value={product.ehop}\n                        name='eshop'\n                        isActive={product.eshop}\n                        handleClick={() => handleChange({\n                            target: {\n                                name: \"eshop\",\n                                value: !product.eshop\n                            }\n                        })}\n                    />\n                    <SubmitButton onClick={handleSubmit}>Vytvoriť</SubmitButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n                {!isUpdating && <CategoryContainer>\n                    <h3>Aký produkt chcete pridať?</h3>\n                    {productCategories.map((category, idx) => (\n                        <CategoryCheckbox\n                            key={idx}\n                            label={category.name}\n                            value={category.value}\n                            name='type'\n                            isActive={category.value === productObj.type}\n                            handleClick={() => handleChangeType({\n                                target: {\n                                    name: \"type\",\n                                    value: category.value\n                                }\n                            })}\n                        />\n                    ))}\n                </CategoryContainer>}\n\n                {productObj.type === 0 && (\n                    <ProductLensesForm\n                        lenses={lenses}\n                        selectedImage={selectedImage}\n                        setImageModal={setImageModal}\n                        handleChange={handleChange}\n                        handleParameterChange={handleParameterChange}\n                        checkParameter={checkParameter}\n                    />\n                )}\n\n                {productObj.type === 5 && (\n                    <ProductAccessoriesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        currentUser={currentUser}\n                        retailNames={retailNames}\n                        selectedImage={selectedImage}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAvailableChange={handleAvailableChange}\n                    />\n                )}\n\n                {productObj.type === 3 && (\n                    <ProductContactLensesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        contactLensesParameters={contactLensesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleAddNewParameter={handleAddNewParameter}\n                        handleAvailableChange={handleAvailableChange}\n                        handleContactLensesChange={handleContactLensesChange}\n                    />\n                )}\n\n                {(productObj.type === 1 || productObj.type === 2 || productObj.type === 4) && (\n                    <ProductGlassesForm\n                        product={product}\n                        isUpdating={isUpdating}\n                        retailNames={retailNames}\n                        currentUser={currentUser}\n                        selectedImage={selectedImage}\n                        glassesParameters={glassesParameters}\n                        handleChange={handleChange}\n                        setImageModal={setImageModal}\n                        checkParameter={checkParameter}\n                        handleSpecsChange={handleSpecsChange}\n                        handleAvailableChange={handleAvailableChange}\n                        handleGlassesSpecsSizeChange={handleGlassesSpecsSizeChange}\n                        handleGlassesParametersChange={handleGlassesParametersChange}\n                    />\n                )}\n\n            </ScrollContainer>\n\n        </section >\n    )\n}\n\nexport default ProductSection\n","/imooptik-frontend/src/sections/analytics/analytics.section.jsx",["564","565"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AnalyticsContext } from '../../context/analytics/analytics.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    GridContainer\n} from './analytics.styles'\n\nconst AnalyticsSection = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { stats, getAnalytics } = useContext(AnalyticsContext)\n\n\n    const items = [\n        {\n            id: 1,\n            name: \"Všetko\",\n            value: \"all\"\n        },\n        {\n            id: 2,\n            name: \"Deň\",\n            value: \"day\"\n        },\n        {\n            id: 3,\n            name: \"Týžden\",\n            value: \"week\"\n        },\n        {\n            id: 4,\n            name: \"Mesiac\",\n            value: \"month\"\n        },\n        {\n            id: 5,\n            name: \"Rok\",\n            value: \"year\"\n        },\n    ]\n\n    const [activeIndex, setActiveIndex] = useState(2)\n\n    useEffect(() => {\n        getAnalytics(items[activeIndex - 1].value)\n    }, [activeIndex])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <Header>\n                <h1>Analytiká</h1>\n            </Header>\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                <GridContainer>\n                    <div className='first' />\n                    <div className='second' />\n                    <div className='third' />\n                    <div className='fourth' />\n                </GridContainer>\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default AnalyticsSection\n","/imooptik-frontend/src/sections/orders/orders.section.jsx",["566","567","568"],"import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Fuse from 'fuse.js'\n\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { OrdersContext } from '../../context/orders/orders.context'\n\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport OrderOverview from '../../components/order-overview/order-overview.component'\n// import OrderDeligateModal from '../../components/order-deligate-modal/order-deligate-modal.component'\nimport Pagination from '../../components/pagination/pagination.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    tabItems\n} from '../../context/orders/orders.utils'\n\nimport {\n    TableHead,\n    OrdersTable,\n    TableCol,\n} from './orders.styles'\n\nconst OrdersSection = () => {\n    const { push } = useHistory()\n    const [searchQuery, setSearchQuery] = useState('')\n    const [activeIndex, setActiveIndex] = useState(1)\n    const [orderItems, setOrderItems] = useState([])\n\n\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        getOrders,\n        orders\n    } = useContext(OrdersContext)\n\n    const handleSearch = () => {\n        if (orders) {\n            const fuse = new Fuse(orders, {\n                keys: [\n                    'customId',\n                    'status',\n                    'date'\n                ]\n            })\n            if (searchQuery !== '') {\n                const results = fuse.search(searchQuery)\n                setOrderItems(results.map(result => result.item))\n            }\n\n        }\n    }\n\n    useEffect(() => {\n        if (!orders) {\n            getOrders()\n        }\n        if (orders) {\n            if (activeIndex === 2) {\n                setOrderItems(orders.filter(order => order.status === 'finished'))\n            } else {\n                setOrderItems(orders.filter(order => order.status !== 'finished'))\n            }\n        }\n    }, [orders])\n\n    useEffect(() => {\n        if (orders) {\n            if (activeIndex === 2) {\n                setOrderItems(orders.filter(order => order.status === 'finished'))\n            } else {\n                setOrderItems(orders.filter(order => order.status !== 'finished'))\n            }\n        }\n    }, [activeIndex])\n\n    useEffect(() => {\n        if (orders) {\n            if (!searchQuery) {\n                if (activeIndex === 2) {\n                    setOrderItems(orders.filter(order => order.status === 'finished'))\n                } else {\n                    setOrderItems(orders.filter(order => order.status !== 'finished'))\n                }\n            }\n        }\n    }, [searchQuery])\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [ordersPerPage] = useState(10)\n    const indexOfLastOrder = currentPage * ordersPerPage\n    const indexOfFirstOrder = indexOfLastOrder - ordersPerPage\n    const currentOrders = orderItems.slice(indexOfFirstOrder, indexOfLastOrder)\n    const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleSearch={handleSearch}\n\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push(\"/dashboard/objednavky/nova-objednavka\")}\n                title=\"Objednávky\"\n            />\n\n            <SectionNavbar\n                items={tabItems}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                <OrdersTable>\n                    <TableHead>\n                        <TableCol>ID</TableCol>\n                        <TableCol>Dátum</TableCol>\n                        <TableCol>Prevádzka</TableCol>\n                        <TableCol>Status</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {currentOrders.map((order, idx) => (\n                        <OrderOverview key={idx} order={order} />\n                    ))}\n                </OrdersTable>\n\n                <Pagination\n                    productsPerPage={ordersPerPage}\n                    totalProducts={orderItems.length}\n                    paginate={paginate}\n                    activePage={currentPage}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\n\n\nexport default OrdersSection\n","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx",["569"],"import React, { useState, useEffect, useContext } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    PostContainer,\n    PostImage,\n    PostContent,\n    Options,\n    UpdateButton,\n    DeleteButton\n} from './blog-posts.styles'\n\nconst BlogPosts = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { getPosts, posts, postsCount, handlePostDelete } = useContext(BlogContext)\n    const { push } = useHistory()\n    const [searchQuery, setSearchQuery] = useState('')\n    const items = [\n        {\n            id: 0,\n            name: \"Dátum pridania\"\n        },\n        {\n            id: 1,\n            name: \"Abecedne\"\n        },\n    ]\n\n    const [activeIndex, setActiveIndex] = useState(0)\n\n    useEffect(() => {\n        if (!posts) {\n            getPosts(items[activeIndex])\n        }\n    }, [posts])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('blog/novy-prispevok')}\n                count={postsCount}\n                title=\"Blog\"\n            />\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                {\n                    posts && posts.length ? posts.map(post => (\n                        <PostContainer key={post._id}>\n                            <PostImage>\n                                {post.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${post.image.imagePath}`} alt={post.image.alt} />}\n                            </PostImage>\n                            <PostContent>\n                                <h2>{post.name}</h2>\n                                <p>{post.description}</p>\n                            </PostContent>\n                            <Options>\n                                <UpdateButton onClick={() => push(`blog/${post._id}`)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={() => handlePostDelete(post._id)}>Vymazať</DeleteButton>\n                            </Options>\n                        </PostContainer>\n                    )) : (\n                            <div>\n                                Žiadne príspevky\n                            </div>\n                        )\n                }\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BlogPosts\n","/imooptik-frontend/src/sections/post/post.section.jsx",["570","571","572"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport CustomTextarea from '../../components/custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport { Quill } from 'react-quill'\n\nimport {\n    Header,\n    GridContainer,\n    PostImage,\n    DeleteButton,\n    AddButton,\n    Title,\n    ContentTextare,\n} from './post.styles'\n\nconst PostSection = () => {\n    const { id } = useParams()\n    const { push } = useHistory()\n    const {\n        createPost,\n        isLoading,\n        message,\n        showLoading,\n        setIsLoading,\n        getPost,\n        post,\n        handlePostUpdate,\n        resetBlog\n    } = useContext(BlogContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [content, setContent] = useState('')\n    const [image, setImage] = useState('')\n    const [draft, toggleDraft] = useState(false)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (image.length <= 0) return\n        if (content.length <= 0) return\n\n        if (id === 'novy-prispevok') {\n            createPost(image, title, description, draft, content)\n        } else {\n            handlePostUpdate(title, description, draft, content, image, id)\n        }\n\n        push('/dashboard/blog')\n\n    }\n\n    useEffect(() => {\n        setSelectedImage(null)\n\n        if (id !== 'novy-prispevok') {\n            getPost(id)\n            setIsUpdating(true)\n        }\n    }, [id])\n\n    useEffect(() => {\n        console.log(post)\n        if (post) {\n            console.log(post)\n            setTitle(post.name)\n            setDescription(post.description)\n            setContent(post.html)\n            toggleDraft(post.draft)\n            if (post.image) {\n                setImage(post.image._id)\n                setSelectedImage(post.image)\n            }\n        }\n    }, [post])\n\n    useEffect(() => {\n        return () => {\n            resetBlog()\n            setTitle('')\n            setDescription('')\n            setContent('')\n            setImage('')\n            toggleDraft(false)\n            setImageModal(false)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {isLoading && <Popup loading={showLoading} title={message} close={() => setIsLoading(false)} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={setImage} />}\n\n            <Header>\n                <div>\n                    <h1>Post</h1>\n                </div>\n                <div>\n                    <CustomCheckbox\n                        label='Draft'\n                        checked={draft}\n                        onChange={() => toggleDraft(!draft)}\n                    />\n                    <DeleteButton>Vymazať</DeleteButton>\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť príspevok\" : \"Pridať príspevok\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n\n                <GridContainer>\n                    <div>\n                        <h2>Informácia</h2>\n                        <CustomInput\n                            label=\"Nadpis\"\n                            type='text'\n                            name='title'\n                            value={title}\n                            handleChange={(e) => setTitle(e.target.value)}\n                            required\n                        />\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={description}\n                            handleChange={(e) => setDescription(e.target.value)}\n                            required\n                        />\n                        <h2>Titulná fotka</h2>\n                        <PostImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </PostImage>\n                    </div>\n                    <div>\n                        <Title>Obsah</Title>\n                        <QuillToolbar />\n                        <ContentTextare\n                            value={content}\n                            onChange={setContent}\n                            modules={modules}\n                            formats={formats}\n                        />\n                    </div>\n\n                </GridContainer>\n\n            </ScrollContainer>\n        </form>\n    )\n}\n\n\nconst CustomUndo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n        />\n    </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n        />\n    </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n    this.quill.history.undo();\n}\nfunction redoChange() {\n    this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n    \"arial\",\n    \"comic-sans\",\n    \"courier-new\",\n    \"georgia\",\n    \"helvetica\",\n    \"lucida\"\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nconst modules = {\n    toolbar: {\n        container: \"#toolbar\",\n        handlers: {\n            undo: undoChange,\n            redo: redoChange\n        }\n    },\n    history: {\n        delay: 500,\n        maxStack: 100,\n        userOnly: true\n    }\n};\n\n// Formats objects for setting up the Quill editor\nconst formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"align\",\n    \"strike\",\n    \"script\",\n    \"blockquote\",\n    \"background\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"color\",\n    \"code-block\"\n];\n\n// Quill Toolbar component\nconst QuillToolbar = () => (\n    <div id=\"toolbar\" className=\"toolbar\">\n        <span className=\"ql-formats\">\n            <select className=\"ql-size\" defaultValue=\"medium\">\n                <option value=\"extra-small\">Size 1</option>\n                <option value=\"small\">Size 2</option>\n                <option value=\"medium\">Size 3</option>\n                <option value=\"large\">Size 4</option>\n            </select>\n            <select className=\"ql-header\" defaultValue=\"3\">\n                <option value=\"1\">Heading</option>\n                <option value=\"2\">Subheading</option>\n                <option value=\"3\">Normal</option>\n            </select>\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n        </span>\n        <span className=\"ql-formats\">\n            <select className=\"ql-align\" />\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n                <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n                <CustomRedo />\n            </button>\n        </span>\n    </div>\n);\n\n\nexport default PostSection\n","/imooptik-frontend/src/sections/booking/booking.section.jsx",["573","574","575"],"import React, { useState, useEffect, useContext } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { BookingContext } from '../../context/booking/booking.context'\nimport { useHistory } from 'react-router-dom'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport BookingCalendarOverview from \"../../components/booking-calendar-overview/booking-calendar-overview.component\"\n\nimport Calendar from '../../components/calendar/calendar.component'\n\nimport {\n    Title,\n    GridRow,\n    CalendarGridContainer,\n    AppoimentOverview,\n    Time,\n    Line,\n    // TwoRowGrid,\n    Name,\n    Desc,\n    Options,\n    ConfirmButton,\n    DeclineButton,\n    AppoimentContainer,\n    AppoimentCol,\n    NoteContainer\n} from './booking.styles'\n\nconst BookingSection = () => {\n    const { push } = useHistory()\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const bookingData = useContext(BookingContext)\n\n    const {\n        calendar,\n        calendars,\n        bookings,\n        // bookingRows,\n        getCalendars,\n        getCalendar,\n        userBookings,\n        getUserBookings,\n        getBookings,\n        // getBookingRows\n        activeCalendar,\n        selectedDate,\n        setSelectedDate,\n        resetBooking\n    } = bookingData\n\n    const [searchQuery, setSearchQuery] = useState('')\n\n    useEffect(() => {\n        if (!calendars) {\n            getCalendars()\n            getUserBookings()\n        }\n    }, [calendars])\n\n    useEffect(() => {\n        if (!bookings) {\n            getBookings()\n        }\n    }, [calendars])\n\n    useEffect(() => {\n        return () => {\n            resetBooking()\n        }\n    }, [])\n\n    if (!calendars) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('rezervacie/novy-kalendar')}\n                title=\"Kalendar objednávok\"\n            />\n\n            <ScrollContainer>\n                <Title>Pobočky</Title>\n                <GridRow>\n                    {calendars.map((calendar, idx) => (\n                        <BookingCalendarOverview key={idx} calendar={calendar} handleClick={() => getCalendar(calendar._id, idx + 1)} handleUpdateClick={() => push(`rezervacie/${calendar._id}`)} isActive={activeCalendar === idx + 1} />\n                    ))}\n                </GridRow>\n\n                {calendar.name && (\n                    <React.Fragment>\n                        <Title>Kalendár</Title>\n                        <CalendarGridContainer>\n                            <Calendar calendar={calendar} setSelectedDate={setSelectedDate} />\n\n                            {calendar.name && selectedDate.name && <AppoimentOverview>\n                                <Title>{selectedDate.name.charAt(0).toUpperCase() + selectedDate.name.slice(1)}</Title>\n\n                                {\n                                    calendar.booked[selectedDate.value].map((date, idx) => {\n                                        const filteredUserBookings = userBookings.filter(booking => booking.dueDate === selectedDate.value && booking.dueTime.split(\":\")[0] === date)\n                                        const time = date.split('/')[0] + \":\" + date.split('/')[1]\n\n                                        return (\n                                            <AppoimentContainer key={idx}>\n                                                <Time>{time}</Time>\n                                                <Line />\n                                                {\n                                                    filteredUserBookings.map((user, idx) => {\n                                                        const bookingType = bookings.find(booking => booking._id === user.booking)\n\n                                                        return (\n                                                            <AppoimentCol key={idx}>\n                                                                <div>\n                                                                    <Name>{user.name}</Name>\n                                                                    <Desc>{bookingType.name}</Desc>\n                                                                </div>\n                                                                <Options>\n                                                                    <ConfirmButton>Vybavený</ConfirmButton>\n                                                                    <DeclineButton>Neprišiel</DeclineButton>\n                                                                </Options>\n                                                                <NoteContainer>\n                                                                    <p>{user.note}</p>\n                                                                </NoteContainer>\n                                                            </AppoimentCol>\n                                                        )\n                                                    })\n                                                }\n                                            </AppoimentContainer>\n                                        )\n                                    })\n                                }\n                            </AppoimentOverview>}\n                        </CalendarGridContainer>\n                    </React.Fragment>\n                )}\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BookingSection\n","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx",[],"/imooptik-frontend/src/sections/order/order.section.jsx",["576","577"],"import React, { useContext, useState, useEffect } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\n// import InputRow from '../../components/product-input-row/product-input-row.component'\n// import CustomInput from '../../components/custom-input/custom-input.component'\n// import CustomFormSwitch from '../../components/custom-form-switch/custom-form-switch.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n// import OrderProductOverview from '../../components/order-product-overview/order-product-overview.component'\n// import CustomCheckBox from '../../components/custom-checkbox/custom-checkbox.component'\n// import CombinedProductOverview from '../../components/combined-product-overview/combined-product-overview.component'\n// import OrderAddressForm from '../../components/order-address-form/order-address-form.component'\n\nimport Popup from \"../../components/popup/pop-up.component\"\n\nimport SelectUserComponent from './steps/select-user.component'\nimport FindProductComponent from \"./steps/find-product.component\"\nimport SelectLensesComponent from './steps/select-lenses.component'\nimport SummaryComponent from './steps/summary.component'\n\nimport {\n    Header,\n} from './order.styles'\n\nconst OrderSection = () => {\n    const { userId, orderId } = useParams()\n    const [step, setStep] = useState('selectUser')\n    const [order, setOrder] = useState({\n\n    })\n\n    const handleOrderChange = valueToAdd => {\n        const { name, value } = valueToAdd\n        setOrder({\n            ...order,\n            [name]: value\n        })\n    }\n\n    console.log(\"order\")\n    console.log(order)\n    console.log(\"order\")\n\n    const {\n        closeModal,\n        isLoading,\n        showModal,\n        message\n    } = useContext(LoadingModalContext)\n\n\n    useEffect(() => {\n        return () => {\n            setStep('selectUser')\n        }\n    }, [])\n\n    return (\n\n        <section>\n            <Prompt\n                when={order.user}\n                message={\"Máte nedokončenú objednávku, skutočne chcete odísť?\"}\n            />\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <Header>\n                <div>\n                    <h1>Nová objednávka</h1>\n                </div>\n            </Header>\n            <ScrollContainer>\n                <div>\n                    {step === 'selectUser' && (\n                        <SelectUserComponent\n                            next={() => setStep('findProduct')}\n                            addToOrder={handleOrderChange}\n                        />\n                    )}\n                    {step === 'findProduct' && (\n                        <FindProductComponent\n                            back={() => setStep(\"selectUser\")}\n                            next={setStep}\n                            addToOrder={handleOrderChange}\n                        />\n                    )}\n                    {step === 'selectLenses' && (\n                        <SelectLensesComponent\n                            back={() => setStep(\"findProduct\")}\n                            next={() => setStep('summary')}\n                            addToOrder={handleOrderChange}\n                            order={order}\n                        />\n                    )}\n                    {step === 'summary' && (\n                        <SummaryComponent\n                            back={() => setStep(\"selectLenses\")}\n                            order={order}\n                        />\n                    )}\n                </div>\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default OrderSection\n","/imooptik-frontend/src/sections/coupons/coupons.section.jsx",["578","579","580","581"],"import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { CouponsContext } from '../../context/coupons/coupons.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    CouponOverviewContainer,\n    DeleteButton,\n    OpenButton,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TableCol\n} from './coupons.styles'\n\nconst CouponsSection = () => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        coupons,\n        getCoupons,\n        deleteCoupon\n    } = useContext(CouponsContext)\n\n    useEffect(() => {\n        if (!coupons) {\n            getCoupons()\n        }\n    }, [coupons])\n\n    console.log(coupons)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                title='Kupóny'\n                // searchQuery={searchQuery}\n                // handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('kupony/novy-kupon')}\n            />\n            <ScrollContainer>\n\n                <TableContainer>\n                    <TableHead>\n                        <TableCol>#</TableCol>\n                        <TableCol>Kód</TableCol>\n                        <TableCol>Typ</TableCol>\n                        <TableCol>Hodnota</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {coupons && coupons.map((coupon, idx) => (\n                        <TableRow key={idx}>\n                            <TableCol>{idx + 1}</TableCol>\n                            <TableCol>{coupon.code}</TableCol>\n                            <TableCol>{coupon.type === \"percentage\" ? \"Percentá\" : \"Fixná suma\"}</TableCol>\n                            <TableCol>{coupon.value}</TableCol>\n                            <TableCol>\n                                <OpenButton onClick={() => push(`kupony/${coupon._id}`)}>Zobraziť</OpenButton>\n                                <DeleteButton onClick={() => deleteCoupon(coupon._id)}>Ostrániť</DeleteButton>\n                            </TableCol>\n                        </TableRow>\n                    ))}\n                </TableContainer>\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CouponsSection\n","/imooptik-frontend/src/sections/coupon/coupon.section.jsx",["582","583"],"import React, { useContext, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { CouponsContext } from '../../context/coupons/coupons.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport InputRow from '../../components/product-input-row/product-input-row.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport Popup from \"../../components/popup/pop-up.component\"\n\nimport {\n    Header,\n    CustomSelect,\n    SubmitButton,\n    DeleteButton,\n    GridRow,\n    GridCol\n} from './coupon.styles'\n\nconst CouponSection = () => {\n    const { couponId } = useParams()\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const {\n        coupon,\n        getCoupon,\n        handleChange,\n        createCoupon,\n        isUpdating,\n        deleteCoupon,\n        resetCoupons\n    } = useContext(CouponsContext)\n\n    useEffect(() => {\n        if (couponId !== 'novy-kupon') {\n            getCoupon(couponId)\n        }\n    }, [couponId])\n\n    useEffect(() => {\n        return () => {\n            resetCoupons()\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <Header>\n                <div>\n                    <h1>Nový kupón</h1>\n                </div>\n\n                <div>\n                    {isUpdating && <DeleteButton onClick={() => deleteCoupon(couponId)}>Odstrániť</DeleteButton>}\n                    {!isUpdating && <SubmitButton onClick={() => createCoupon(coupon)}>Vytvoriť</SubmitButton>}\n                </div>\n            </Header>\n            <ScrollContainer>\n                <GridRow>\n                    <GridCol>\n                        <h3>Základné informácie</h3>\n                        <InputRow\n                            label=\"Kód kupónu\"\n                            example=\"napr: 50off\"\n                        >\n                            <CustomInput\n                                label=\"Kód\"\n                                type='text'\n                                name='code'\n                                value={coupon.code}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Typ kupónu\"\n                            example=\"\"\n                        >\n                            <CustomSelect name='type' value={coupon.type} onChange={(e) => handleChange(e)}>\n                                <option value={\"percentage\"}>Percentá</option>\n                                <option value={\"flat\"}>Fixná suma</option>\n                            </CustomSelect>\n                        </InputRow>\n                    </GridCol>\n                    <GridCol>\n                        <h3>Parametre</h3>\n\n                        <InputRow\n                            label=\"Hodnota\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='value'\n                                value={coupon.value.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Koľko maximálne krát môže tento kupón byt použitý jedným človek.\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='maxUses'\n                                value={coupon.maxUses.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Minimálna hodnota objednávky v centoch, aby bol tento kupón aplikovateľný.\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='minValue'\n                                value={coupon.minValue.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Koľko maximálne krát môže tento kupón byt použitý dohromady všetkými užívateľmi.\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='maxUsesTotal'\n                                value={coupon.maxUsesTotal.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                    </GridCol>\n                </GridRow>\n\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CouponSection\n","/imooptik-frontend/src/sections/calendar/calendar.section.jsx",["584","585","586"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BookingContext } from '../../context/booking/booking.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport InputRow from '../../components/product-input-row/product-input-row.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    DayTimesContainer,\n    CreateCalendarButton,\n    DayNames,\n    DeleteCalendarButton\n} from './calendar.styles'\n\nconst CalendarSection = () => {\n    const { calendarId } = useParams()\n    const {\n        isUpdatingCalendar,\n        handleCalendarChange,\n        handleDayTimeChange,\n        getCalendar,\n        createCalendar,\n        updateCalendar,\n        delCalendar,\n        calendar,\n        resetBooking\n    } = useContext(BookingContext)\n\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (calendarId === 'novy-kalendar') {\n            createCalendar(calendar)\n        } else {\n            console.log('update calendar')\n            updateCalendar(calendar)\n        }\n    }\n\n    useEffect(() => {\n        if (calendarId !== 'novy-kalendar') {\n            getCalendar(calendarId)\n        }\n    }, [calendarId])\n\n    useEffect(() => {\n        return () => {\n            resetBooking()\n        }\n    }, [])\n\n    if (!calendar || showModal) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n\n    console.log(isUpdatingCalendar)\n    console.log(calendar)\n\n    return (\n        <section>\n            <form onSubmit={handleSubmit}>\n                <Header>\n                    <div>\n                        <h1>{isUpdatingCalendar ? `Kalendár: ${calendar.name}` : \"Nový kalendár\"}</h1>\n                    </div>\n                    <div>\n                        {isUpdatingCalendar && <DeleteCalendarButton onClick={() => delCalendar(calendarId)}>Odstrániť</DeleteCalendarButton>}\n                        <CreateCalendarButton>{isUpdatingCalendar ? \"Upraviť kalendár\" : \"Vytvoriť kalendár\"}</CreateCalendarButton>\n                    </div>\n                </Header>\n                <ScrollContainer>\n                    <InputRow\n                        label=\"Meno kalendáru\"\n                        example=''\n                    >\n                        <CustomInput\n                            label=\"Pobočka*\"\n                            type='text'\n                            name='name'\n                            value={calendar.name}\n                            handleChange={(e) => handleCalendarChange(e)}\n                            required\n                        />\n                    </InputRow>\n                    <InputRow\n                        label=\"Koľko dní dopredu sa da objednať\"\n                        example=''\n                    >\n                        <CustomInput\n                            label=\"Počet dní\"\n                            type='number'\n                            name='daysIntoFuture'\n                            value={calendar.daysIntoFuture.toString()}\n                            handleChange={(e) => handleCalendarChange(e)}\n                            required\n                        />\n                    </InputRow>\n                    <InputRow\n                        label=\"Minimalný čas k odoslaní rezervácie\"\n                        example=''\n                    >\n                        <CustomInput\n                            label=\"Min\"\n                            type='number'\n                            name='allowMinutesBefore'\n                            value={calendar.allowMinutesBefore.toString()}\n                            handleChange={(e) => handleCalendarChange(e)}\n                            required\n                        />\n                    </InputRow>\n                    <InputRow\n                        label=\"Čas medzi rezerváciami\"\n                        example=''\n                    >\n                        <CustomInput\n                            label=\"Min*\"\n                            type='number'\n                            name='interval'\n                            value={calendar.interval.toString()}\n                            handleChange={(e) => handleCalendarChange(e)}\n                            required\n                        />\n                    </InputRow>\n\n                    <DayTimesContainer>\n                        <DayNames>\n                            <h3>Den</h3>\n                            <div>\n                                <h4>Pondelok</h4>\n                            </div>\n                            <div>\n                                <h4>Utorok</h4>\n                            </div>\n                            <div>\n                                <h4>Streda</h4>\n                            </div>\n                            <div>\n                                <h4>Štvrtok</h4>\n                            </div>\n                            <div>\n                                <h4>Piatok</h4>\n                            </div>\n                            <div>\n                                <h4>Sobota</h4>\n                            </div>\n                            <div>\n                                <h4>Nedeľa</h4>\n                            </div>\n                        </DayNames>\n                        <div>\n                            <h3>Začiatok prehliadok</h3>\n                            {calendar.startTimes.map((value, idx) => (\n                                <div key={idx}>\n                                    <CustomInput\n                                        label=\"Čas: HH/MM*\"\n                                        type='text'\n                                        name='startTimes'\n                                        value={value}\n                                        handleChange={(e) => handleDayTimeChange(e, idx)}\n                                        required\n                                    />\n                                </div>\n                            ))}\n                        </div>\n                        <div>\n                            <h3>Koniec prehliadok</h3>\n                            {calendar.endTimes.map((value, idx) => (\n                                <div key={idx}>\n                                    <CustomInput\n                                        label=\"Čas: HH/MM*\"\n                                        type='text'\n                                        name='endTimes'\n                                        value={value}\n                                        handleChange={(e) => handleDayTimeChange(e, idx)}\n                                        required\n                                    />\n                                </div>\n                            ))}\n                        </div>\n                    </DayTimesContainer>\n                </ScrollContainer>\n            </form>\n        </section>\n    )\n}\n\nexport default CalendarSection\n","/imooptik-frontend/src/context/user/user.queries.jsx",[],"/imooptik-frontend/src/context/user/user.utils.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx",["587"],"export const initProductObj = {\n    name: \"\",\n    description: \"\",\n    price: 0,\n    type: 0,\n    brand: \"\",\n    soldAmount: 0,\n    available: [1001, 1001, 1001, 1001, 0],\n    eanCode: \"\",\n    image: \"\",\n    eshop: true,\n    link: '',\n    category: ''\n}\n\nexport const initGlassesObj = {\n    colorCode: \"\",\n    specs: {\n        frameColor: \"\",\n        frameMaterial: \"\",\n        frameStyle: \"\",\n        lensColor: \"\",\n        sex: \"M\",\n        size: [1001, 1001, 1001],\n    }\n}\n\nexport const initContactLensesObj = {\n    allowedCurves: [1001],\n    allowedDiameters: [1001],\n    dioptersRange: [1001, 1001]\n}\n\nexport const initLensesObj = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    dioptersRange: [1001, 1001],\n    cylinderRange: [1001, 1001],\n    price: 0,\n    brand: \"\",\n    image: ''\n}\n\nexport const retailNames = [\n    \"Obchodná 57, Bratislava\",\n    \"Miletičova 38, Bratislava\",\n    \"Vajnory, Bratislava\",\n    \"Senica, OC Branč\",\n    \"Trnava, City Aréna\"\n]\n\n// Category variables\nexport const productCategories = [\n    {\n        name: \"Dioptrické\",\n        value: 1\n    },\n    {\n        name: \"Slnečné\",\n        value: 2\n    },\n    {\n        name: \"Kontaktné Šošovky\",\n        value: 3\n    },\n    {\n        name: \"Športové\",\n        value: 4\n    },\n    {\n        name: \"Doplnky\",\n        value: 5\n    },\n    {\n        name: \"Šošovky\",\n        value: 0\n    },\n]\n\nexport const premisesTabs = [\n    {\n        id: 0,\n        name: \"Všetko\",\n        premises: 0,\n\n    },\n    {\n        id: 1,\n        name: \"Obchodná 57, Bratislava\",\n        premises: 1,\n    },\n    {\n        id: 2,\n        name: \"Miletičova 38, Bratislava\",\n        premises: 2,\n    },\n    {\n        id: 3,\n        name: \"Senica, OC Branč\",\n        premises: 3,\n    },\n    {\n        id: 4,\n        name: \"Vajnory, Bratislava\",\n        premises: 4,\n    },\n    // {\n    //     id: 5,\n    //     name: \"Trnava, City Aréna\",\n    //     permission: 5,\n    // },\n]\n\nexport const categoryTabs = [\n    {\n        id: 0,\n        name: \"Okuliare\",\n    },\n    {\n        id: 1,\n        name: \"Šosovky\",\n    },\n]\n\nexport const lensesBrands = [\n    \"Acuvue\",\n    \"Adore\",\n    \"Air Optix\",\n    \"Biofinity\",\n    \"Biomedics\",\n    \"Clariti\",\n    \"ColourVue\",\n    \"Comfilcon A\",\n    \"Dailies\",\n    \"Freshlook\",\n    \"Lenjoy\",\n    \"Proclear\",\n    \"Purevision\",\n    \"Soflens\",\n]\n\nexport const brands = [\n    \"Adidas\",\n    \"Armani Exchange\",\n    \"Arnette\",\n    \"Blackfin\",\n    \"Blumarine\",\n    \"Burberry\",\n    \"Bvlgari\",\n    \"Calvin Klein\",\n    \"Carolina Herrera\",\n    \"Carrera\",\n    \"David Beckham\",\n    \"Dior\",\n    \"Dolce & Gabbana\",\n    \"Elle\",\n    \"Emporio Armani\",\n    \"Esprit\",\n    \"Etnia Barcelona\",\n    \"Fendi\",\n    \"Fossil\",\n    \"Furla\",\n    \"Giorgio Armani\",\n    \"Givenchy\",\n    \"Gucci\",\n    \"Guess\",\n    \"H.I.S\",\n    \"Hawkers\",\n    \"Hugo Boss\",\n    \"Jaguar\",\n    \"Jimmy Choo\",\n    \"Lacoste\",\n    \"Liu Jo\",\n    \"Marc Jacobs\",\n    \"Max Mara\",\n    \"Max&Co\",\n    \"Meller\",\n    \"Mexx\",\n    \"Michael Kors\",\n    \"Moschino\",\n    \"Oakley\",\n    \"Persol\",\n    \"Polaroid\",\n    \"Police\",\n    \"Polo Ralph Lauren\",\n    \"Prada\",\n    \"Prada Linea Rossa\",\n    \"Ralph\",\n    \"Ralph Lauren\",\n    \"Ray-Ban\",\n    \"Salvatore Ferragamo\",\n    \"Smith\",\n    \"Strellson\",\n    \"Tiffany&Co.\",\n    \"Tom Ford\",\n    \"Tommy Hilfiger\",\n    \"Versace\",\n    \"Vogue\"\n]\n\nexport const formatPrice = price => {\n    let value = 0\n    if (price.includes(',')) {\n        if (price.split(',')[1].length === 1) {\n            value = price.split(',')[0] + price.split(',')[1] + \"0\"\n            return Number(value)\n        } else {\n            value = price.split(',')[0] + price.split(',')[1]\n            return Number(value)\n        }\n    } else {\n        return Number(price * 100)\n    }\n}\n\nexport const formatfloatNumber = number => {\n    let value = 0\n    if (number.includes(',')) {\n        value = number.split(',')[0] + '.' + number.split(',')[1]\n        return Number(value)\n    } else {\n        return Number(number)\n\n    }\n}\n\nexport const formatAvailable = (available, activePremisesTab) => {\n    if (available === undefined) return \"Šosovka\"\n\n    if (typeof available === \"number\") {\n        return `Na sklade ${available} kusov`\n    } else {\n        if (activePremisesTab === 0) {\n            return `Vo všetkých skladoch je ${available.reduce((acc, currValue) => acc + currValue)} kusov`\n        } else {\n            return `Na sklade ${available[activePremisesTab]} kusov`\n        }\n    }\n}\n\nexport const checkParameter = (parameter, idx) => {\n    if (parameter.length === 0) {\n        return \"\"\n    }\n    if (parameter[idx] === 1001) {\n        return \"\"\n    }\n\n    return parameter[idx].toString()\n}\n\nconst dia = \"áäčďéíľĺňóôŕšťúýžÁČĎÉÍĽĹŇÓŠŤÚÝŽ\";\nconst nodia = \"aacdeillnoorstuyzACDEILLNOSTUYZ\";\n\nexport const diaConvert = (text) => {\n    let convertText = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (dia.indexOf(text.charAt(i)) != -1) {\n            convertText += nodia.charAt(dia.indexOf(text.charAt(i)));\n        }\n        else {\n            convertText += text.charAt(i);\n        }\n    }\n    return convertText;\n}\n\nexport const formatLink = (text) => {\n    return diaConvert(text).replaceAll(\" \", \"-\").toLowerCase().trim()\n}","/imooptik-frontend/src/context/booking/booking.queries.jsx",[],"/imooptik-frontend/src/context/booking/booking.utils.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx",[],"/imooptik-frontend/src/context/image/image.queries.jsx",[],"/imooptik-frontend/src/context/orders/orders.utils.jsx",[],"/imooptik-frontend/src/context/orders/orders.queries.jsx",[],"/imooptik-frontend/src/context/blog/blog.queries.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.styles.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx",[],"/imooptik-frontend/src/sections/customers/customers.styles.jsx",[],"/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx",[],"/imooptik-frontend/src/sections/product/product.styles.jsx",[],"/imooptik-frontend/src/sections/analytics/analytics.styles.jsx",[],"/imooptik-frontend/src/sections/orders/orders.styles.jsx",[],"/imooptik-frontend/src/sections/order/order.styles.jsx",["588"],"import styled from \"styled-components\"\nimport { paddingStyles } from '../../global.styles'\n\nimport CustomButton from \"../../components/custom-button/custom-button.component\"\nimport CustomCheckBox from '../../components/custom-checkbox/custom-checkbox.component'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    ${paddingStyles}\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n\n    @media all and (max-width: 800px) {\n        flex-wrap: wrap;\n\n        div:nth-child(2) {\n            margin-bottom: 2rem;\n        }\n    }\n`\n\nexport const SearchContainer = styled.div`\n    max-width: 40rem;\n    padding: 2rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    margin: 0 auto;\n    border-radius: .5rem;\n\n    h3 {\n        text-align: center;\n        font-size: 3rem;\n    }\n\n    div {\n\n        &:not(:last-child) {\n            margin-bottom: 3rem;\n\n        }\n    }\n`\n\nexport const TableContainer = styled.div`\n    margin: 5rem 0;\n`\nexport const TableCol = styled.div`\n    padding: 2rem;\n    text-align: center;\n\n    img {\n        width: 5rem;\n    }\n`\n\n// SELECT USER STEP\n// SELECT USER STEP\n// SELECT USER STEP\n\nexport const UserTableHead = styled.div`\n    display: grid;\n    align-content: center;\n    grid-template-columns: 1fr 2fr 25rem;\n    border-bottom: 1px solid #000;\n    font-weight: bolder;\n`\nexport const UserTableRow = styled.div`\n    cursor: pointer;\n    display: grid;\n    align-content: center;\n    grid-template-columns: 1fr 2fr 25rem;\n    margin-bottom: 1rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    transition: all .3s ease-out;\n\n    &:hover {\n        background-color: rgb(235, 172, 1); \n        font-weight: bolder;\n        color: #fff;\n    }\n`\n\nexport const SearchButton = styled(CustomButton)`\n    display: block;\n    margin: 0 auto;\n`\n// SELECT USER STEP END\n// SELECT USER STEP END\n// SELECT USER STEP END\n\n// PRODUCT STEP\n// PRODUCT STEP\n// PRODUCT STEP\nexport const ProductTableHead = styled.div`\n    display: grid;\n    align-content: center;\n    grid-template-columns: 10rem 15rem 1fr 1fr 10rem 1fr;\n    border-bottom: 1px solid #000;\n    font-weight: bolder;\n`\nexport const ProductTableRow = styled.div`\n    cursor: pointer;\n    display: grid;\n    align-content: center;\n    grid-template-columns: 10rem 15rem 1fr 1fr 10rem 1fr;\n    margin-bottom: 1rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    transition: all .3s ease-out;\n\n    &:hover {\n        background-color: rgb(235, 172, 1); \n        font-weight: bolder;\n        color: #fff;\n    }\n`\n// PRODUCT STEP\n// PRODUCT STEP\n// PRODUCT STEP\n\n// LENSES STEP\n// LENSES STEP\n// LENSES STEP\nexport const ParametersContainer = styled.div`\n    h3 {\n        font-size: 3rem;\n        margin-bottom: 1rem;\n    }\n`\nexport const SelectLensesContainer = styled.div`\n    margin: 5rem 0;\n\n    h3 {\n        font-size: 3rem;\n        margin-bottom: 3rem;\n    }\n`\nexport const LensesContainer = styled.div`\n    cursor: pointer;\n    max-width: 32rem;\n    padding: 2rem;\n    border-radius: .5rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    text-align: center;\n    transition: transform .3s ease-out,\n                box-shadow .3s ease-out;\n\n    h4 {\n        font-size: 2.5rem;\n        margin-bottom: 1.5rem\n    }\n\n    img {\n        /* background-color:#000; */\n        width: 15rem;\n        height: 15rem;\n        margin-bottom: 1rem; \n        object-fit: contain;\n        object-position: center;\n    }\n\n    p {\n        opacity: .65;\n        &:not(:last-child){\n            margin-bottom: .5rem;\n        }\n    }\n\n    h5 {\n        font-size: 2.5rem;\n    }\n\n    &:hover {\n        transform: scale(1.03);\n        box-shadow: 0 0 2.5rem 0 rgba(0,0,0, 0.08);\n    }\n`\n\nexport const LensesImg = styled.div`\n    background-color: lightgray;\n    border-radius: 50%;\n    width: 10rem;\n    height: 10rem;\n    margin: 0 auto;\n    margin-bottom: 1.5rem;\n`\n// LENSES STEP\n// LENSES STEP\n// LENSES STEP\n\n// SUMMARY STEP\n// SUMMARY STEP\n// SUMMARY STEP\nexport const ProductsOverviewContainer = styled.div`\n    padding: 2rem;\n    border-radius: .5rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n    margin-bottom: 3rem;\n`\n\nexport const SummaryTableTitle = styled.h3`\n    margin-bottom: 3rem;\n`\n\nexport const SummaryTableHead = styled.div`\n    display: grid;\n    align-content: center;\n    grid-template-columns: 5rem 1fr 2fr 2fr 10rem 15rem;\n    font-weight: bolder;\n    border-bottom: 1px solid #000;\n`\n\nexport const SummaryTableRow = styled.div`\n    display: grid;\n    align-content: center;\n    grid-template-columns: 5rem 1fr 2fr 2fr 10rem 15rem;\n    /* box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08); */\n    /* margin-bottom: 1rem; */\n`\n\nexport const TotalContainer = styled.div`\n    margin-top: 2rem;\n    display:flex;\n    justify-content: flex-end;\n    align-items: center;\n\n    span {\n        display: block;\n        margin-right: .5rem;\n        \n    }\n\n    p {\n        font-weight: bolder;\n        font-size: 2.5rem;\n    }\n`\nexport const SummaryGridLayout = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    align-items: start;\n`\n\nexport const UserOverviewContainer = styled.div`\n    padding: 2rem;\n    border-radius: .5rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n\n    h3 {\n        margin-bottom: .5rem;\n    }\n\n    h4 {\n        margin-top: 1rem;\n\n    }\n\n`\n\nexport const StyledParagraph = styled.p`\n    opacity: .83;\n    font-size: 1.4rem;\n    margin-left: 1.5rem;\n\n    &:not(:last-child) {\n        margin-bottom: .5rem;\n    }\n`\n\nexport const OptionsContainer = styled.div`\n    padding: 2rem;\n    border-radius: .5rem;\n    box-shadow: 0 0 1.5rem 0 rgba(0,0,0, 0.08);\n\n    h3 {\n        margin-bottom: 1rem;\n    }\n`\n\nexport const OptionButton = styled(CustomButton)`\n    &:not(:last-child) {\n        margin-right: .5rem;\n    }\n\n    &:last-child {\n        background-color: rgb(235, 172, 1);\n        font-weight: bolder;\n    }\n`\n// SUMMARY STEP\n// SUMMARY STEP\n// SUMMARY STEP","/imooptik-frontend/src/sections/coupon/coupon.styles.jsx",[],"/imooptik-frontend/src/sections/booking/booking.styles.jsx",[],"/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx",[],"/imooptik-frontend/src/sections/coupons/coupons.styles.jsx",[],"/imooptik-frontend/src/sections/post/post.styles.jsx",[],"/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx",[],"/imooptik-frontend/src/sections/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.component.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.component.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx",[],"/imooptik-frontend/src/components/pagination/pagination.component.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx",[],"/imooptik-frontend/src/components/user-form/user-form.component.jsx",["589","590"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ProfileOrderOverview from '../profile-order-overview/profile-order-overview.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Profile,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    Title,\n    Container,\n    OrderHeader,\n    OrderButton,\n    CustomSelect,\n    AdminPanelContainer\n} from './user.form-styles'\n\nconst UserForm = ({\n    isAdmin,\n    isUpdating,\n    user,\n    handleChange,\n    handleParameterChange,\n    handleCompanyChange\n}) => {\n    const { push } = useHistory()\n\n    const handleAddOrderButtonClick = e => {\n        e.preventDefault()\n        push(`/dashboard/objednavky/${user._id}`)\n    }\n\n    return (\n        <GridContainer>\n            <Profile>\n                {isAdmin && <AdminPanelContainer>\n                    <h2>Admin panel</h2>\n                    <InputRow\n                        label=\"Predajňa na ktorej uživatel pracuje\"\n                        example=''\n                    >\n                        <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Nezadané</option>\n                            {\n                                retailNames.map((name, idx) => {\n                                    if (idx === 4) return\n                                    return (\n                                        <option key={idx} value={idx + 1}>{name}</option>\n                                    )\n                                })\n                            }\n                        </CustomSelect>\n                    </InputRow>\n                    <InputRow\n                        label=\"Výška administrativných práv\"\n                        example=\"\"\n                    >\n                        <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Zákaznik</option>\n                            <option value={1}>Predavač</option>\n                            <option value={2}>Vedúci</option>\n                        </CustomSelect>\n                    </InputRow>\n\n                    <Container>\n                        <CustomCheckbox\n                            label='Optometrista'\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"optometrist\",\n                                    value: !user.optometrist\n                                }\n                            })}\n                            isActive={user.optometrist}\n                        />\n                    </Container>\n                </AdminPanelContainer>}\n                <div>\n                    <h2>Informácie</h2>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                // label=\"Priezvisko*\"\n                                type='date'\n                                name='birthDate'\n                                value={user.birthDate}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </div>\n\n                <Container>\n                    <h2>Kontaktné údaje</h2>\n                    <Row>\n                        <div>\n                            <CustomInput\n                                label=\"E-mail*\"\n                                type='email'\n                                name='email'\n                                value={user.email ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Telefónne číslo\"\n                                type='text'\n                                name='phone'\n                                value={user.phone ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <h2>Fakturačné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.address ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.psc ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.city ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.country ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n                <Container>\n                    <h2>Firemné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"IČO\"\n                                type='text'\n                                name='ico'\n                                value={user.company.ico ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"DIČ\"\n                                type='text'\n                                name='dic'\n                                value={user.company.dic ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.company.address ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.company.psc ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.company.city ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.company.country ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n\n                <Container>\n                    <h2>Parametre</h2>\n\n                    <ParametersTable\n                        parameters={user.lenses}\n                        handleChange={handleParameterChange}\n                    />\n                </Container>\n\n\n            </Profile>\n\n            {isUpdating && <div>\n                <OrderHeader>\n                    <Title>\n                        Objednávky\n                    </Title>\n                    <OrderButton onClick={e => handleAddOrderButtonClick(e)}>Pridať objednávku</OrderButton>\n                </OrderHeader>\n\n                <div>\n                    {user.orders.length > 0 ? user.orders.map((order, idx) => (\n                        <ProfileOrderOverview\n                            key={idx}\n                            id={order}\n                            handleUpdateClick={() => push(`/dashboard/objednavky/${user._id}/${order}`)}\n                        />\n                    )) : (\n                            <p>Žiadné objednávky</p>\n                        )}\n\n\n                </div>\n            </div>}\n        </GridContainer>\n    )\n}\n\nexport default UserForm\n","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx",["591","592"],"import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport ProductInputRow from '../product-input-row/product-input-row.component'\n\nimport {\n    ImageContainer,\n    ProductImage,\n    GlassesContainerForm,\n    GlassesContainer,\n    GlassesParameterContainer,\n    StockContainer,\n    CustomSelect\n} from './product-glasses-form.styles.jsx'\n\nconst ProductGlassesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    retailNames,\n    currentUser,\n    checkParameter,\n    handleAvailableChange,\n    handleGlassesParametersChange,\n    handleGlassesSpecsSizeChange,\n    handleSpecsChange,\n    glassesParameters,\n    setImageModal,\n    isUpdating,\n}) => {\n\n    return (\n        <GlassesContainerForm>\n            <GlassesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </GlassesContainer>\n            <div>\n                <GlassesParameterContainer>\n                    <h3>Parametre</h3>\n                    <CustomInput\n                        label=\"Farebný kód\"\n                        type='text'\n                        name='colorCode'\n                        value={glassesParameters.colorCode ?? \"\"}\n                        handleChange={(e) => handleGlassesParametersChange(e)}\n                    />\n                    <div>\n                        <CustomInput\n                            label=\"Farba rámu\"\n                            type='text'\n                            name='frameColor'\n                            value={glassesParameters.specs.frameColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Materiál rámu\"\n                            type='text'\n                            name='frameMaterial'\n                            value={glassesParameters.specs.frameMaterial ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Tvar rámu\"\n                            type='text'\n                            name='frameStyle'\n                            value={glassesParameters.specs.frameStyle ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomInput\n                            label=\"Farba šošovky\"\n                            type='text'\n                            name='lensColor'\n                            value={glassesParameters.specs.lensColor ?? \"\"}\n                            handleChange={(e) => handleSpecsChange(e)}\n                        />\n                        <CustomSelect\n                            label=\"Pohlavie\"\n                            type='text'\n                            name='sex'\n                            value={glassesParameters.specs.sex ?? \"\"}\n                            onChange={(e) => handleSpecsChange(e)}\n                        >\n                            <option value='M'>Pánske</option>\n                            <option value='W'>Dámske</option>\n                            <option value='D'>Detské</option>\n                            <option value='U'>Nezáleží</option>\n                        </CustomSelect>\n                    </div>\n                    <div>\n                        <h4>Velkosť</h4>\n                        {glassesParameters.specs.size.map((value, idx) => (\n                            <CustomInput\n                                key={idx}\n                                label={idx === 0 ? \"Veľkosť očnice\" : idx === 1 ? \"Veľkosť mostika\" : \"Veľkosť stranice\"}\n                                type='text'\n                                name='size'\n                                value={checkParameter(glassesParameters.specs.size, idx)}\n                                handleChange={(e) => handleGlassesSpecsSizeChange(e, idx)}\n                            />\n                        ))}\n                    </div>\n                </GlassesParameterContainer>\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    {\n                        product.available.map((value, idx) => {\n                            if (idx === 4) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })\n                    }\n                </StockContainer>\n\n            </div>\n        </GlassesContainerForm>\n    )\n}\n\nexport default ProductGlassesForm\n","/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx",["593"],"import React from 'react'\n\nimport CustomFormSwitch from '../custom-form-switch/custom-form-switch.component'\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from \"../custom-checkbox/custom-checkbox.component\"\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    CustomSelect,\n    Container,\n    GridRow,\n    ZeroMargin,\n    ColContainer,\n    CustomerForm\n} from './new-user-form.styles'\n\n\nconst NewUserForm = ({\n    formToShow,\n    switchFormButtons,\n    toggleUserForm,\n    user,\n    handleChange,\n    isAdmin,\n    handleParameterChange,\n    handleCompanyChange\n}) => {\n\n    return (\n        <div>\n            {/* Akého uživatela chcete vytvoriť? */}\n            {isAdmin && <CustomFormSwitch\n                items={switchFormButtons}\n                title=\"Akého uživatela chcete vytvoriť?\"\n                activeIndex={formToShow}\n                handleClick={toggleUserForm}\n            />}\n\n            {\n                formToShow === 0 ? (\n                    <CustomerForm>\n                        <ColContainer>\n                            <h2>Informácie</h2>\n                            <InputRow\n                                label=\"\"\n                                example='napr: John'\n                            >\n                                <CustomInput\n                                    label=\"Meno*\"\n                                    type='text'\n                                    name='fName'\n                                    value={user.fName ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: Doe'\n                            >\n                                <CustomInput\n                                    label=\"Priezvisko*\"\n                                    type='text'\n                                    name='lName'\n                                    value={user.lName ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: priklad@email.com'\n                            >\n                                <CustomInput\n                                    label=\"E-mail*\"\n                                    type='email'\n                                    name='email'\n                                    value={user.email ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"\"\n                                example='napr: 091234567'\n                            >\n                                <CustomInput\n                                    label=\"Telefónne číslo\"\n                                    type='text'\n                                    name='phone'\n                                    value={user.phone ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n                            <InputRow\n                                label=\"Dátum narodenia\"\n                                example=''\n                            >\n                                <CustomInput\n                                    // label=\"Priezvisko*\"\n                                    type='date'\n                                    name='birthDate'\n                                    value={user.birthDate}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n\n                            <Container>\n                                <h2>Parametre</h2>\n\n                                <ParametersTable\n                                    parameters={user.lenses}\n                                    handleChange={handleParameterChange}\n                                />\n                            </Container>\n                        </ColContainer>\n\n                        <ColContainer>\n                            <div>\n                                <h2>Fakturačné údaje</h2>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"Ulica a čislo domu\"\n                                            type='text'\n                                            name='address'\n                                            value={user.address ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"PSČ\"\n                                            type='text'\n                                            name='psc'\n                                            value={user.psc ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Mesto\"\n                                            type='text'\n                                            name='city'\n                                            value={user.city ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Krajina\"\n                                            type='text'\n                                            name='country'\n                                            value={user.country ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                </GridRow>\n                            </div>\n\n                            <Container>\n                                <h2>Firemné údaje</h2>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"IČO\"\n                                            type='text'\n                                            name='ico'\n                                            value={user.company.ico ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"DIČ\"\n                                            type='text'\n                                            name='dic'\n                                            value={user.company.dic ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"Ulica a čislo domu\"\n                                            type='text'\n                                            name='address'\n                                            value={user.company.address ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"PSČ\"\n                                            type='text'\n                                            name='psc'\n                                            value={user.company.psc ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Mesto\"\n                                            type='text'\n                                            name='city'\n                                            value={user.company.city ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Krajina\"\n                                            type='text'\n                                            name='country'\n                                            value={user.company.country ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </div>\n                                </GridRow>\n                            </Container>\n                        </ColContainer>\n\n                    </CustomerForm>\n                ) : (\n                        <CustomerForm>\n\n                            <ColContainer>\n                                <h2>Informácie</h2>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: John'\n                                >\n                                    <CustomInput\n                                        label=\"Meno*\"\n                                        type='text'\n                                        name='fName'\n                                        value={user.fName ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: Doe'\n                                >\n                                    <CustomInput\n                                        label=\"Priezvisko*\"\n                                        type='text'\n                                        name='lName'\n                                        value={user.lName ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example='napr: priklad@email.com'\n                                >\n                                    <CustomInput\n                                        label=\"E-mail*\"\n                                        type='email'\n                                        name='email'\n                                        value={user.email ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"Aspoň 1 velké pismeno, 1 malé pismeno a 1 číslo*\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Heslo*\"\n                                        type='password'\n                                        name='password'\n                                        value={user.password ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n                                <InputRow\n                                    label=\"\"\n                                    example=''\n                                >\n                                    <CustomInput\n                                        label=\"Potvrď heslo*\"\n                                        type='password'\n                                        name='confirmPassword'\n                                        value={user.confirmPassword ?? \"\"}\n                                        handleChange={(e) => handleChange(e)}\n                                    />\n                                </InputRow>\n\n\n                            </ColContainer>\n\n                            <ColContainer>\n                                <h2>Admin privilégia</h2>\n                                <InputRow\n                                    label=\"Predajňa na ktorej uživatel pracuje\"\n                                    example=''\n                                >\n\n                                    <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Nezadané</option>\n\n                                        {\n                                            retailNames.map((name, idx) => {\n                                                if (idx === 4) return\n                                                return (\n                                                    <option key={idx} value={idx + 1}>{name}</option>\n\n                                                )\n                                            })\n                                        }\n                                    </CustomSelect>\n\n                                </InputRow>\n                                <InputRow\n                                    label=\"Výška administrativných práv\"\n                                    example=\"\"\n                                >\n                                    <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Zákaznik</option>\n                                        <option value={1}>Predavač</option>\n                                        <option value={2}>Vedúci</option>\n                                    </CustomSelect>\n\n                                </InputRow>\n                                <Container>\n                                    <CustomCheckbox\n                                        label='Optometrista'\n                                        handleClick={() => handleChange({\n                                            target: {\n                                                name: \"optometrist\",\n                                                value: !user.optometrist\n                                            }\n                                        })}\n                                        isActive={user.optometrist}\n                                    />\n                                </Container>\n                            </ColContainer>\n                        </CustomerForm>\n                    )\n            }\n        </div>\n    )\n}\n\nexport default NewUserForm\n","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx",[],"/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.component.jsx",["594"],"import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    AccessoriesFormContainer,\n    AccessoriesContainer,\n    StockContainer,\n    ImageContainer,\n    ProductImage,\n} from './product-accessories-form.styles'\n\nconst ProductAccessoriesForm = ({\n    product,\n    handleChange,\n    selectedImage,\n    setImageModal,\n    handleAvailableChange,\n    checkParameter,\n    retailNames,\n    currentUser,\n    isUpdating\n}) => {\n    return (\n        <AccessoriesFormContainer>\n            <AccessoriesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </AccessoriesContainer>\n            <StockContainer>\n                <h3>Skladové zásoby</h3>\n                {\n                    product.available.map((value, idx) => {\n                        if (idx === 4) return\n                        return (\n                            <CustomInput\n                                key={idx}\n                                label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                type='number'\n                                name={\"available\"}\n                                value={checkParameter(product.available, idx)}\n                                handleChange={e => handleAvailableChange(e, idx)}\n                            />\n                        )\n                    })\n                }\n            </StockContainer>\n\n        </AccessoriesFormContainer>\n    )\n}\n\nexport default ProductAccessoriesForm\n","/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.component.jsx",["595"],"import React from 'react'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    ContactLensesContainer,\n    ContactLensesFormContainer,\n    StockContainer,\n    ContactLensesParametersContainer,\n    IncreaseButton,\n    ImageContainer,\n    ProductImage,\n} from './product-contact-lenses-form.styles'\n\nconst ProductContactLensesForm = ({\n    product,\n    handleChange,\n    setImageModal,\n    selectedImage,\n    checkParameter,\n    handleContactLensesChange,\n    handleAddNewParameter,\n    contactLensesParameters,\n    retailNames,\n    currentUser,\n    handleAvailableChange,\n    isUpdating\n}) => {\n    return (\n        <ContactLensesFormContainer>\n            <ContactLensesContainer>\n                <h3>Základné informácie</h3>\n                <CustomInput\n                    label=\"eanCode*\"\n                    type='text'\n                    name='name'\n                    value={product.eanCode.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n                <CustomInput\n                    label=\"Názov doplnku*\"\n                    type='text'\n                    name='name'\n                    value={product.name ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Značka\"\n                    type='text'\n                    name='brand'\n                    value={product.brand ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                <CustomInput\n                    label=\"Kategória\"\n                    type='text'\n                    name='category'\n                    value={product.category ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />\n\n                {isUpdating && <CustomInput\n                    label=\"Link\"\n                    type='text'\n                    name='link'\n                    value={product.link ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                />}\n\n                <CustomTextarea\n                    label=\"Popis\"\n                    name='description'\n                    rows='5'\n                    value={product.description ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <CustomInput\n                    label=\"Cena*\"\n                    type='text'\n                    name='price'\n                    value={product.price.toString() ?? \"\"}\n                    handleChange={(e) => handleChange(e)}\n                    required\n                />\n\n                <ImageContainer>\n                    <ProductImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                        {!selectedImage && \"Vybrať obrázok\"}\n                        {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                    </ProductImage>\n                </ImageContainer>\n            </ContactLensesContainer>\n            <div>\n                <ContactLensesParametersContainer>\n                    <h3>Parametre</h3>\n                    <div>\n                        <h4>Zakrivenie</h4>\n                        {contactLensesParameters.allowedCurves.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedCurves\"}\n                                    value={checkParameter(contactLensesParameters.allowedCurves, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedCurves'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n                    <div>\n                        <h4>Priemery</h4>\n                        {contactLensesParameters.allowedDiameters.map((value, idx) => {\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={idx + 1}\n                                    type='text'\n                                    name={\"allowedDiameters\"}\n                                    value={checkParameter(contactLensesParameters.allowedDiameters, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                        <IncreaseButton onClick={() => handleAddNewParameter({\n                            target: {\n                                name: 'allowedDiameters'\n                            }\n                        })}>Pridať</IncreaseButton>\n                    </div>\n\n                    <div>\n                        <h4>Dioptrie</h4>\n                        {contactLensesParameters.dioptersRange.map((value, idx) => {\n                            const inputLabel = idx === 0 ? \"minimum\" : \"maximum\"\n\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={inputLabel}\n                                    type='text'\n                                    name={\"dioptersRange\"}\n                                    value={checkParameter(contactLensesParameters.dioptersRange, idx)}\n                                    handleChange={e => handleContactLensesChange(e, idx)}\n                                />\n                            )\n                        })}\n                    </div>\n                </ContactLensesParametersContainer>\n\n                <StockContainer>\n                    <h3>Skladové zásoby</h3>\n                    {\n                        product.available.map((value, idx) => {\n                            if (idx === 4) return\n                            return (\n                                <CustomInput\n                                    key={idx}\n                                    label={currentUser.admin === 1 ? retailNames[currentUser.premises - 1] : retailNames[idx]}\n                                    type='number'\n                                    name={\"available\"}\n                                    value={checkParameter(product.available, idx)}\n                                    handleChange={e => handleAvailableChange(e, idx)}\n                                />\n                            )\n                        })\n                    }\n                </StockContainer>\n            </div>\n        </ContactLensesFormContainer>\n    )\n}\n\nexport default ProductContactLensesForm\n","/imooptik-frontend/src/components/modal-images/modal-images.component.jsx",["596","597"],"import React, { useEffect, useContext, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\n// import { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\n// import CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    // const {\n    //     getMessage,\n    //     setIsLoading,\n    //     setShowModal,\n    //     closeModal\n    // } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    // const getCropData = async (e) => {\n    //     e.preventDefault()\n    //     setShowModal(true)\n    //     setIsLoading(true)\n\n    //     try {\n    //         // if (typeof cropper !== 'undefined') {\n    //         toDataUrl(imgUrl, async (imgData) => {\n    //             const data = await handleImage(imgData, imageName, imageAlt)\n\n    //             if (data.image) {\n    //                 setImage(data.image._id)\n    //                 setSelectedImage(data.image)\n    //                 getImages()\n    //                 close()\n    //             }\n    //         })\n\n    //         // }\n    //         setShowModal(false)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    //     closeModal()\n    // };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Vybrať obrázok</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n","/imooptik-frontend/src/sections/order/steps/select-lenses.component.jsx",["598"],"import React, { useState, useEffect, useContext } from 'react'\nimport { WarehouseContext } from '../../../context/warehouse/warehouse.context'\n\nimport BackButton from '../../../components/custom-back-button/custom-back-button.component'\nimport ParametersTable from '../../../components/parameters-table/parameters-table.component'\n\nimport {\n    ParametersContainer,\n    LensesContainer,\n    LensesImg,\n    SelectLensesContainer\n} from '../order.styles'\n\nconst SelectLensesComponent = ({ back, next, addToOrder, order }) => {\n    const [lensesItems, setLensesItems] = useState([])\n    const {\n        lensesArr,\n        getLenses\n    } = useContext(WarehouseContext)\n\n    const handleClick = (lenses) => {\n        addToOrder({\n            name: \"lenses\",\n            value: lenses\n        })\n        next()\n    }\n\n    useEffect(() => {\n        if (!lensesArr) {\n            getLenses()\n        }\n        if (lensesArr) {\n            setLensesItems(lensesArr)\n        }\n    }, [lensesArr])\n\n    console.log(order)\n\n    return (\n        <div>\n            <BackButton onClick={back} />\n            <div>\n                <ParametersContainer>\n                    <h3>Parametre zákaznika</h3>\n                    <ParametersTable\n                        parameters={order.user.lenses}\n                        disabledInputs={true}\n                    />\n                </ParametersContainer>\n\n            </div>\n            <SelectLensesContainer>\n                <h3>Výber Šošoviek</h3>\n                <div>\n                    {lensesItems.map((lenses, idx) => (\n                        <LensesContainer key={idx} onClick={() => handleClick(lenses)}>\n                            <h4>{lenses.name}</h4>\n                            <LensesImg>\n                                {/* <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${lenses.image.imagePath}`} alt={lenses.image.alt} /> */}\n                            </LensesImg>\n                            <p>{lenses.description}</p>\n                            <p>{`Dioptrie od ${lenses.dioptersRange[0]} do ${lenses.dioptersRange[1]}`}</p>\n                            <p>{`Cylinder  od ${lenses.cylinderRange[0]} do ${lenses.cylinderRange[1]}`}</p>\n                            <h5>{(lenses.price / 100).toFixed(2)}€</h5>\n                        </LensesContainer>\n                    ))}\n                </div>\n            </SelectLensesContainer>\n        </div>\n    )\n}\n\nexport default SelectLensesComponent\n","/imooptik-frontend/src/sections/order/steps/summary.component.jsx",[],"/imooptik-frontend/src/sections/order/steps/find-product.component.jsx",["599","600"],"import React, { useState, useEffect, useContext } from 'react'\nimport { WarehouseContext } from '../../../context/warehouse/warehouse.context'\n\nimport CustomInput from '../../../components/custom-input/custom-input.component'\nimport BackButton from '../../../components/custom-back-button/custom-back-button.component'\n\n\nimport {\n    SearchContainer,\n    SearchButton,\n    TableContainer,\n    ProductTableHead,\n    ProductTableRow,\n    TableCol\n} from '../order.styles'\n\nconst FindProductComponent = ({ back, next, addToOrder }) => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const [productItems, setProductItems] = useState([])\n\n    const {\n        products,\n        getProductsByQuery\n    } = useContext(WarehouseContext)\n\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        getProductsByQuery({\n            query: searchQuery\n        })\n    }\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== \"\") {\n            if (e.key === 'Enter') {\n                getProductsByQuery({\n                    query: searchQuery\n                })\n            }\n        }\n    }\n\n    const handleClick = (product) => {\n        addToOrder({\n            name: \"product\",\n            value: product\n        })\n        if (product.type === 5) {\n            next(\"summary\")\n        } else {\n            next(\"selectLenses\")\n        }\n    }\n\n    useEffect(() => {\n        if (!products) {\n            getProductsByQuery({\n                limit: 5\n            })\n        }\n        if (products) {\n            setProductItems(products)\n        }\n    }, [products])\n\n    useEffect(() => {\n        if (products) {\n            if (searchQuery === '') {\n                getProductsByQuery({\n                    limit: 5\n                })\n            }\n        }\n    }, [searchQuery])\n\n    return (\n        <div>\n            <BackButton onClick={back} />\n            <SearchContainer>\n                <h3>Vyhľadať produkt</h3>\n                <div>\n                    <CustomInput\n                        label='Názov produktu, eanCode alebo popis'\n                        value={searchQuery}\n                        handleChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n            </SearchContainer>\n\n            <TableContainer>\n                <ProductTableHead>\n                    <TableCol>eanCode</TableCol>\n                    <TableCol>Obrázok</TableCol>\n                    <TableCol>Názov</TableCol>\n                    <TableCol>Značka</TableCol>\n                    <TableCol>Cena</TableCol>\n                    <TableCol>Dostupnosť</TableCol>\n                </ProductTableHead>\n                {productItems.map((product, idx) => (\n                    <ProductTableRow key={idx} onClick={() => handleClick(product)}>\n                        <TableCol>{product.eanCode}</TableCol>\n                        <TableCol>\n                            <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${product.image.imagePath}`} alt={product.image.alt} />\n                        </TableCol>\n                        <TableCol>{product.name}</TableCol>\n                        <TableCol>{product.brand}</TableCol>\n                        <TableCol>{(product.price / 100).toFixed(2)}€</TableCol>\n                        <TableCol>{product.available.reduce((acc, currValue) => acc + currValue) > 0 ? \"Na sklade\" : \"Nedostupné\"}</TableCol>\n                    </ProductTableRow>\n                ))}\n            </TableContainer>\n        </div>\n    )\n}\n\nexport default FindProductComponent\n","/imooptik-frontend/src/sections/order/steps/select-user.component.jsx",["601","602"],"import React, { useState, useEffect, useContext } from 'react'\nimport { UserContext } from '../../../context/user/user.context'\n\nimport CustomInput from '../../../components/custom-input/custom-input.component'\n\nimport {\n    SearchContainer,\n    TableContainer,\n    UserTableHead,\n    UserTableRow,\n    TableCol,\n    SearchButton\n} from '../order.styles'\n\nconst SelectUserComponent = ({ next, addToOrder }) => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const [userItems, setUserItems] = useState([])\n\n    const {\n        users,\n        getFilteredUsers,\n        getUserByQuery\n    } = useContext(UserContext)\n\n    const handleClick = (user) => {\n        addToOrder({\n            name: \"user\",\n            value: user\n        })\n        next()\n    }\n\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== '') {\n            if (e.key === 'Enter') {\n                getUserByQuery({\n                    query: searchQuery\n                })\n            }\n        }\n    }\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        getUserByQuery({\n            query: searchQuery\n        })\n    }\n\n    useEffect(() => {\n        if (!users) {\n            getFilteredUsers({\n                limit: 5\n            })\n        }\n        if (users) {\n            setUserItems(users)\n        }\n    }, [users])\n\n    useEffect(() => {\n        if (users) {\n            if (searchQuery === '') {\n                getFilteredUsers({\n                    limit: 5\n                })\n                setUserItems(users)\n            }\n        }\n    }, [searchQuery])\n\n    useEffect(() => {\n        return () => {\n            setSearchQuery('')\n            setUserItems([])\n        }\n    }, [])\n\n    return (\n        <div>\n            <SearchContainer>\n                <h3>Vyhľadať zákaznika</h3>\n                <div>\n                    <CustomInput\n                        label={\"Meno, priezvisko, email alebo tel. číslo\"}\n                        value={searchQuery}\n                        onChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n            </SearchContainer>\n\n            <TableContainer>\n                <UserTableHead>\n                    <TableCol>Meno a priezvisko</TableCol>\n                    <TableCol>Email</TableCol>\n                    <TableCol>Možnosti</TableCol>\n                </UserTableHead>\n                {userItems.map((user, idx) => (\n                    <UserTableRow key={idx} onClick={() => handleClick(user)}>\n                        <TableCol>{user.name}</TableCol>\n                        <TableCol>{user.email}</TableCol>\n                        <TableCol>{user.phone}</TableCol>\n                    </UserTableRow>\n                ))}\n            </TableContainer>\n\n        </div>\n    )\n}\n\nexport default SelectUserComponent\n","/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.component.jsx",["603"],"import React, { useState } from 'react'\n\nimport {\n    Container,\n    HeaderBlock,\n    Dayblock,\n    BookingContainer,\n    DayRowContainer,\n    DayNumber\n} from './calendar.styles'\n\nconst Calendar = ({ calendar, setSelectedDate }) => {\n    const blocks = [\n        {\n            name: 'Pondelok'\n        },\n        {\n            name: 'Utorok'\n        },\n        {\n            name: 'Streda'\n        },\n        {\n            name: 'Štvrtok'\n        },\n        {\n            name: 'Piatok'\n        },\n        {\n            name: 'Sobota'\n        },\n        {\n            name: 'Nedeľa'\n        },\n    ]\n\n    const [activeIndex, setActiveIndex] = useState(null)\n\n    // v prvom rade si zistim datumy ktore treba\n    const date = new Date()\n    //rok v ktoorm sa nachadzame\n    const year = date.getFullYear()\n    // mesiac aky ma kalendar pouzit\n    const month = date.getMonth()\n    // zistime aky den je prveho v nami zvoleneho mesiaca\n    let firstDayOfCurrentMonth = new Date(year, month).getDay()\n    // a celkovy pocet dni v mesiaci\n    const daysInMonth = new Date(year, month + 1, 0).getDate()\n\n    // ak je prvy den neela tak jej zmenit hodnotu na 7 pretoze nula robi bordel \n    if (firstDayOfCurrentMonth === 0) {\n        firstDayOfCurrentMonth = 7\n    }\n\n    // arr je pole kazdeho block v kalendary\n    let arr = []\n    // ocislovanie dni\n    let blockNumber = 1\n\n    let bookedDays = []\n\n    // sluzi na premenu {obj} s bookingmai na [arr] pre jednoduchsi for loop\n    if (calendar.booked) {\n        bookedDays = Object.keys(calendar.booked)\n    }\n\n    // a tu sa nam deje cele magia.. 42 je konstanta maximalnych dni \n    // ktore sa mozu v kalendari nachadzat aj s pradnimy blokmi na zaciatku\n    for (let i = 0; i < 42; i++) {\n        // pushneme do [arr] block s nulovym dnom(prazdne policko v kalendari) \n        // ak i este nedociahne na prvy den v kalendary (preto je nedela 7)\n        if (i < firstDayOfCurrentMonth - 1) {\n            arr.push({\n                day: 0\n            })\n            // ak uz prazdne dni (z minuleho mesiaca) mame zasebou \n        } else if (i < daysInMonth + firstDayOfCurrentMonth - 1) {\n            // pushneme do [arr] data ktore nam treba, cislo dna, pripadne bookingy atd\n            let obj = {}\n\n            // skontroluje ci v dany den je nejaky booking ak ano, \n            //doplni informacie o tom do {obj}\n            bookedDays.forEach((day, idx) => {\n                if (blockNumber === Number(day.split('/')[0])) {\n                    obj = {\n                        bookDate: day,\n                        booked: calendar.booked[day].length,\n                    }\n                    return\n                }\n            })\n\n\n            arr.push({\n                ...obj,\n                day: blockNumber++\n            })\n        }\n    }\n\n    const handleClick = (day, idx, bookDate) => {\n        const d = new Date(year, month, day)\n        const options = { weekday: 'long', month: 'long', day: 'numeric' };\n        setActiveIndex(idx)\n        setSelectedDate({\n            name: d.toLocaleDateString(\"sk-SK\", options),\n            value: bookDate\n        })\n    }\n\n    console.log(arr)\n\n    return (\n        <Container>\n            {\n                blocks.map(({ name }, idx) => (\n                    <HeaderBlock key={idx}>\n                        {name}\n                    </HeaderBlock>\n                ))\n            }\n            {\n                arr.map(({ day, booked, bookDate }, idx) => (\n                    <Dayblock key={idx} onClick={booked ? () => handleClick(day, idx, bookDate) : null}>\n                        {!(day === 0) && (\n                            <DayRowContainer>\n                                {booked && <BookingContainer active={idx === activeIndex}>{booked}</BookingContainer>}\n                                <DayNumber>{day}</DayNumber>\n                            </DayRowContainer>\n                        )}\n                    </Dayblock>\n                ))\n            }\n        </Container>\n    )\n}\n\nexport default Calendar\n","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.component.jsx",[],"/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.styles.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx",[],"/imooptik-frontend/src/components/pagination/pagination.styles.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx",[],"/imooptik-frontend/src/components/user-form/user.form-styles.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx",[],"/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx",[],"/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.styles.jsx",[],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx",[],"/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx",[],"/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx",[],"/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx",["604","605","606","607","608"],"/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx",[],"/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx",[],"/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx",["609"],"import React, { useState, useContext } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { OrdersContext } from '../../context/orders/orders.context'\nimport ReactDOM from 'react-dom'\n\nimport Popup from '../popup/pop-up.component'\n\nimport { retailNames } from '../../context/warehouse/warehouse.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    CustomSelect,\n    SubmitButton\n} from './order-deligate-modal.styles'\n\n\nconst OrderDeligateModal = ({ close, premise, id }) => {\n    const [value, setValue] = useState(premise)\n    const { token } = useContext(AuthContext)\n    const { getOrders } = useContext(OrdersContext)\n    const {\n        getMessage,\n        message,\n        isLoading,\n        setIsLoading,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const handleClick = async () => {\n        setIsLoading(true)\n        const myHeaders = new Headers();\n        myHeaders.append(\"auth-token\", token);\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const raw = JSON.stringify({\n            premises: Number(value),\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders/${id}/delegate`, requestOptions)\n            console.log(response)\n            if (response.status === 400) {\n                getMessage(\"Faktúra musí byt zaplatená, aby mohla byť priradená prevádzke\")\n            }\n            if (response.status === 401) {\n                getMessage(\"Musíš byt vedúci, aby si mohol manipulovať s priradovanim\")\n            }\n            const data = await response.json()\n\n            if (data.order) {\n                getOrders()\n                setIsLoading(false)\n                close()\n                return\n            }\n\n            // getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            setIsLoading(false)\n        }\n    }\n\n    if (isLoading || message) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Priradiť k prevádzke</h3>\n                <CustomSelect value={value} onChange={(e) => setValue(e.target.value)}>\n                    <option value={0}>Nezadané</option>\n                    {retailNames.map((name, idx) => {\n                        if (idx === 4) return\n                        return (\n                            <option key={idx} value={idx + 1}>{name}</option>\n                        )\n                    })}\n                </CustomSelect>\n                <SubmitButton onClick={handleClick}>Priradiť</SubmitButton>\n            </Modal>\n        </ModalContainer >\n    ), document.getElementById('portal'))\n}\n\nexport default OrderDeligateModal\n","/imooptik-frontend/src/hooks/useOutsideAlerter.jsx",["610"],"import React, { useRef, useEffect } from \"react\";\n\nexport const useOutsideHandler = (ref, action) => {\n    useEffect(() => {\n        const handleClickOutside = e => {\n            if (ref.current && !ref.current.contains(e.target)) {\n                action()\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n\n    }, [ref])\n}\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(ref) {\n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                alert(\"You clicked outside of me!\");\n            }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [ref]);\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nfunction OutsideAlerter(props) {\n    const wrapperRef = useRef(null);\n    useOutsideAlerter(wrapperRef);\n\n    return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport default OutsideAlerter;\n","/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx",[],"/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx",[],"/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx",[],"/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx",[],"/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx",[],"/imooptik-frontend/src/components/modal-finish-combined-product/modal-finish-combined-product.component.jsx",["611"],"import React, { useState, useContext, useEffect } from 'react'\nimport { Prompt } from 'react-router-dom'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    ProductContainer,\n    AddButton,\n    DiscountCheckboxContainer,\n    DiscountCheckbox,\n    CustomSelect,\n    ContactLensesParameterContainer\n} from './modal-finish-combined-product.styles'\n\nconst FinishCombinedProductModal = ({ close, order, addCombineProduct, next }) => {\n    const { setIsLoading, getMessage, setShowModal } = useContext(LoadingModalContext)\n    const { isAdmin, token } = useContext(AuthContext)\n    const { product } = order\n    const { contactLenses } = product\n\n    const [combinedProductDetails, setCombinedProductDetails] = useState({})\n    const [productDiscount, setProductDiscount] = useState({})\n\n    const [discountType, setDiscountType] = useState(\"flat\")\n    const [includeDiscount, setIncludeDiscount] = useState(false)\n    const [hasChanged, setHasChanged] = useState(false)\n\n    console.log(order)\n    console.log(productDiscount)\n    console.log(combinedProductDetails)\n\n    const handleChangeDiscount = (type) => {\n        setProductDiscount({})\n        setDiscountType(type)\n    }\n\n    const handleDiscountChange = (e, type) => {\n        const { name, value } = e.target\n\n\n        if (value === '') {\n            delete productDiscount[name]\n\n            setProductDiscount({\n                ...productDiscount,\n            })\n            return\n        }\n\n        if (type) {\n            setProductDiscount({\n                ...productDiscount,\n                [name]: value\n            })\n        } else {\n            setProductDiscount({\n                ...productDiscount,\n                [name]: value\n            })\n        }\n    }\n\n    const handleContactLensesParameterChange = (e, idx, originalArr) => {\n        const { name, value } = e.target\n        let arr = originalArr\n        arr[idx] = value === '' ? 1001 : Number(value)\n\n        setCombinedProductDetails({\n            ...combinedProductDetails,\n            contactLenses: {\n                ...combinedProductDetails.contactLenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        let combinedProduct = {}\n\n        if (product.type) {\n            if (product.type === 5) {\n                combinedProduct = {\n                    product: order.product._id,\n                }\n            }\n\n            if (product.type === 3) {\n                combinedProduct = {\n                    product: order.product._id,\n                    contactLenses: combinedProductDetails.contactLenses\n                }\n            }\n\n            else {\n                combinedProduct = {\n                    product: order.product._id,\n                }\n            }\n            if (includeDiscount) {\n                if (discountType === 'flat') {\n                    combinedProduct = {\n                        ...combinedProduct,\n                        discount: {\n                            product: {\n                                ...productDiscount\n                            }\n                        }\n                    }\n                } else {\n                    if (discountType === 'percent') {\n                        combinedProduct = {\n                            ...combinedProduct,\n                            discount: {\n                                product: {\n                                    ...productDiscount\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        console.log(\"COMBINED PRODUCT BEFORE SEND\")\n        console.log(combinedProduct)\n\n\n        const raw = JSON.stringify(combinedProduct)\n\n        const myHeaders = new Headers();\n        myHeaders.append(\"auth-token\", token);\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            // /api/store/combinedProducts\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/store/combinedProducts`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.combinedProduct) {\n                addCombineProduct({\n                    product: order.product,\n                    combinedProduct: data.combinedProduct\n                })\n                next()\n            }\n\n            setIsLoading(false)\n            getMessage(data.message)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n\n    }\n\n    useEffect(() => {\n        if (product.type) {\n            if (product.type === 3) {\n                setCombinedProductDetails({\n                    contactLenses: {\n                        curve: [product.contactLenses.allowedCurves[0], product.contactLenses.allowedCurves[0]],\n                        diameter: [product.contactLenses.allowedDiameters[0], product.contactLenses.allowedDiameters[0]],\n                        diopters: [0, 0]\n                    }\n                })\n            }\n        }\n    }, [product])\n\n    // unmout reset\n    useEffect(() => {\n        return () => {\n            setCombinedProductDetails({})\n            setProductDiscount({})\n            // setLensesDiscount({})\n\n            setDiscountType(\"flat\")\n            setIncludeDiscount(false)\n            setHasChanged(false)\n        }\n    }, [])\n\n\n    return (\n        <ModalContainer>\n            <Prompt\n                when={hasChanged}\n                message={\"Chcete opustiť túto stránku?\"}\n            />\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Produkt ktory chcete pridať</h3>\n                <ProductContainer>\n                    <div>\n                        {product.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${product.image.imagePath}`} alt={product.image.alt} />}\n                    </div>\n\n                    <div>\n                        <h4>{product.name}</h4>\n                        <span>{product.eanCode}</span>\n                    </div>\n\n                    <div>\n                        <p>{(product.price / 100).toFixed(2)}€</p>\n                    </div>\n                </ProductContainer>\n\n\n\n                {/* CONTACT LENSES FORM */}\n                {combinedProductDetails.contactLenses && product.type === 3 && (\n                    <ContactLensesParameterContainer>\n                        <div>\n                            <h4>Ľave oko</h4>\n                            <CustomSelect\n                                name='curve'\n                                value={combinedProductDetails.contactLenses.curve[0]}\n                                onChange={(e) => handleContactLensesParameterChange(e, 0, combinedProductDetails.contactLenses.curve)}\n                            >\n                                {product.contactLenses.allowedCurves.map((value, idx) => (\n                                    <option key={idx} value={value}>{value}</option>\n                                ))}\n                            </CustomSelect>\n                            <CustomSelect\n                                name='diameter'\n                                value={combinedProductDetails.contactLenses.diameter[0]}\n                                onChange={(e) => handleContactLensesParameterChange(e, 0, combinedProductDetails.contactLenses.diameter)}\n                            >\n                                {product.contactLenses.allowedDiameters.map((value, idx) => (\n                                    <option key={idx} value={value}>{value}</option>\n                                ))}\n                            </CustomSelect>\n\n                            <CustomInput\n                                name='diopters'\n\n                                type='number'\n                                value={combinedProductDetails.contactLenses.diopters[0]}\n                                min={contactLenses.dioptersRange[0]}\n                                max={contactLenses.dioptersRange[1]}\n                                step={.25}\n                                onChange={(e) => handleContactLensesParameterChange(e, 0, combinedProductDetails.contactLenses.diopters)}\n                            />\n                        </div>\n                        <div>\n                            <h4>Pravé oko</h4>\n                            <CustomSelect\n                                name='curve'\n                                value={combinedProductDetails.contactLenses.curve[1]}\n                                onChange={(e) => handleContactLensesParameterChange(e, 1, combinedProductDetails.contactLenses.curve)}\n                            >\n                                {product.contactLenses.allowedCurves.map((value, idx) => (\n                                    <option key={idx} value={value}>{value}</option>\n                                ))}\n                            </CustomSelect>\n                            <CustomSelect\n                                name='diameter'\n                                value={combinedProductDetails.contactLenses.diameter[1]}\n                                onChange={(e) => handleContactLensesParameterChange(e, 1, combinedProductDetails.contactLenses.diameter)}\n                            >\n                                {product.contactLenses.allowedDiameters.map((value, idx) => (\n                                    <option key={idx} value={value}>{value}</option>\n                                ))}\n                            </CustomSelect>\n                            <CustomInput\n                                type='number'\n                                value={combinedProductDetails.contactLenses.diopters[1]}\n                                min={contactLenses.dioptersRange[0]}\n                                max={contactLenses.dioptersRange[1]}\n                                step={.25}\n                                name='diopters'\n                                onChange={(e) => handleContactLensesParameterChange(e, 1, combinedProductDetails.contactLenses.diopters)}\n                            />\n                        </div>\n                    </ContactLensesParameterContainer>\n                )}\n\n                {/* DISCOUNT FORM */}\n                {isAdmin && <div>\n                    <DiscountCheckboxContainer>\n                        <input id=\"discount\" name='discount' type='checkbox' value={includeDiscount} onChange={() => setIncludeDiscount(!includeDiscount)} />\n                        <label htmlFor='discount'>Pridať zlavu</label>\n                    </DiscountCheckboxContainer>\n                    {includeDiscount && <div>\n                        <h4>Zlava pre produkt</h4>\n                        <div>\n                            <DiscountCheckbox\n                                label={\"Fixná suma\"}\n                                value={\"flat\"}\n                                name='flat'\n                                isActive={discountType === 'flat'}\n                                handleClick={() => handleChangeDiscount('flat')}\n                            />\n                            <DiscountCheckbox\n                                label={\"Percertá\"}\n                                value={\"percent\"}\n                                name='percent'\n                                isActive={discountType === 'percent'}\n                                handleClick={() => handleChangeDiscount('percent')}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label='Hodnota'\n                                value={discountType === 'flat' ? productDiscount.flat ?? \"\" : productDiscount.percent ?? \"\"}\n                                onChange={(e) => {\n                                    handleDiscountChange({\n                                        target: {\n                                            name: discountType,\n                                            value: e.target.value\n                                        }\n                                    }, product.type)\n                                }}\n                            />\n                        </div>\n                    </div>}\n                </div>}\n\n                <AddButton onClick={handleSubmit}>Pridať do objednávky</AddButton>\n            </Modal>\n        </ModalContainer>\n    )\n}\n\nexport default FinishCombinedProductModal\n","/imooptik-frontend/src/components/modal-finish-combined-product/modal-finish-combined-product.styles.jsx",[],"/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.component.jsx",[],"/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.styles.jsx",[],{"ruleId":"612","replacedBy":"613"},{"ruleId":"614","replacedBy":"615"},{"ruleId":"616","severity":1,"message":"617","line":226,"column":8,"nodeType":"618","endLine":226,"endColumn":15,"suggestions":"619"},{"ruleId":"620","severity":1,"message":"621","line":7,"column":5,"nodeType":"622","messageId":"623","endLine":7,"endColumn":15},{"ruleId":"620","severity":1,"message":"624","line":55,"column":24,"nodeType":"622","messageId":"623","endLine":55,"endColumn":37},{"ruleId":"616","severity":1,"message":"625","line":147,"column":8,"nodeType":"618","endLine":147,"endColumn":32,"suggestions":"626"},{"ruleId":"620","severity":1,"message":"627","line":78,"column":37,"nodeType":"622","messageId":"623","endLine":78,"endColumn":63},{"ruleId":"616","severity":1,"message":"628","line":786,"column":8,"nodeType":"618","endLine":786,"endColumn":31,"suggestions":"629"},{"ruleId":"616","severity":1,"message":"630","line":816,"column":8,"nodeType":"618","endLine":816,"endColumn":22,"suggestions":"631"},{"ruleId":"620","severity":1,"message":"632","line":29,"column":9,"nodeType":"622","messageId":"623","endLine":29,"endColumn":19},{"ruleId":"620","severity":1,"message":"633","line":1,"column":54,"nodeType":"622","messageId":"623","endLine":1,"endColumn":63},{"ruleId":"620","severity":1,"message":"634","line":2,"column":10,"nodeType":"622","messageId":"623","endLine":2,"endColumn":20},{"ruleId":"616","severity":1,"message":"635","line":58,"column":8,"nodeType":"618","endLine":58,"endColumn":18,"suggestions":"636"},{"ruleId":"616","severity":1,"message":"637","line":68,"column":8,"nodeType":"618","endLine":68,"endColumn":21,"suggestions":"638"},{"ruleId":"620","severity":1,"message":"639","line":36,"column":9,"nodeType":"622","messageId":"623","endLine":36,"endColumn":13},{"ruleId":"616","severity":1,"message":"640","line":65,"column":8,"nodeType":"618","endLine":65,"endColumn":15,"suggestions":"641"},{"ruleId":"616","severity":1,"message":"642","line":76,"column":8,"nodeType":"618","endLine":76,"endColumn":21,"suggestions":"643"},{"ruleId":"616","severity":1,"message":"644","line":89,"column":8,"nodeType":"618","endLine":89,"endColumn":21,"suggestions":"645"},{"ruleId":"616","severity":1,"message":"646","line":138,"column":8,"nodeType":"618","endLine":138,"endColumn":38,"suggestions":"647"},{"ruleId":"616","severity":1,"message":"648","line":144,"column":8,"nodeType":"618","endLine":144,"endColumn":12,"suggestions":"649"},{"ruleId":"616","severity":1,"message":"650","line":165,"column":8,"nodeType":"618","endLine":165,"endColumn":10,"suggestions":"651"},{"ruleId":"616","severity":1,"message":"652","line":380,"column":8,"nodeType":"618","endLine":380,"endColumn":72,"suggestions":"653"},{"ruleId":"616","severity":1,"message":"654","line":396,"column":8,"nodeType":"618","endLine":396,"endColumn":26,"suggestions":"655"},{"ruleId":"616","severity":1,"message":"656","line":405,"column":8,"nodeType":"618","endLine":405,"endColumn":37,"suggestions":"657"},{"ruleId":"616","severity":1,"message":"658","line":417,"column":8,"nodeType":"618","endLine":417,"endColumn":10,"suggestions":"659"},{"ruleId":"620","severity":1,"message":"660","line":21,"column":13,"nodeType":"622","messageId":"623","endLine":21,"endColumn":18},{"ruleId":"616","severity":1,"message":"661","line":56,"column":8,"nodeType":"618","endLine":56,"endColumn":21,"suggestions":"662"},{"ruleId":"616","severity":1,"message":"663","line":74,"column":8,"nodeType":"618","endLine":74,"endColumn":16,"suggestions":"664"},{"ruleId":"616","severity":1,"message":"665","line":84,"column":8,"nodeType":"618","endLine":84,"endColumn":21,"suggestions":"666"},{"ruleId":"616","severity":1,"message":"667","line":96,"column":8,"nodeType":"618","endLine":96,"endColumn":21,"suggestions":"668"},{"ruleId":"616","severity":1,"message":"669","line":47,"column":8,"nodeType":"618","endLine":47,"endColumn":15,"suggestions":"670"},{"ruleId":"616","severity":1,"message":"671","line":70,"column":8,"nodeType":"618","endLine":70,"endColumn":12,"suggestions":"672"},{"ruleId":"616","severity":1,"message":"656","line":85,"column":8,"nodeType":"618","endLine":85,"endColumn":14,"suggestions":"673"},{"ruleId":"616","severity":1,"message":"674","line":98,"column":8,"nodeType":"618","endLine":98,"endColumn":10,"suggestions":"675"},{"ruleId":"616","severity":1,"message":"676","line":66,"column":8,"nodeType":"618","endLine":66,"endColumn":19,"suggestions":"677"},{"ruleId":"616","severity":1,"message":"678","line":72,"column":8,"nodeType":"618","endLine":72,"endColumn":19,"suggestions":"679"},{"ruleId":"616","severity":1,"message":"680","line":78,"column":8,"nodeType":"618","endLine":78,"endColumn":10,"suggestions":"681"},{"ruleId":"620","severity":1,"message":"682","line":27,"column":13,"nodeType":"622","messageId":"623","endLine":27,"endColumn":19},{"ruleId":"620","severity":1,"message":"683","line":27,"column":21,"nodeType":"622","messageId":"623","endLine":27,"endColumn":28},{"ruleId":"620","severity":1,"message":"684","line":12,"column":5,"nodeType":"622","messageId":"623","endLine":12,"endColumn":28},{"ruleId":"620","severity":1,"message":"685","line":22,"column":12,"nodeType":"622","messageId":"623","endLine":22,"endColumn":23},{"ruleId":"620","severity":1,"message":"686","line":22,"column":25,"nodeType":"622","messageId":"623","endLine":22,"endColumn":39},{"ruleId":"616","severity":1,"message":"687","line":42,"column":8,"nodeType":"618","endLine":42,"endColumn":17,"suggestions":"688"},{"ruleId":"616","severity":1,"message":"689","line":42,"column":8,"nodeType":"618","endLine":42,"endColumn":18,"suggestions":"690"},{"ruleId":"616","severity":1,"message":"691","line":48,"column":8,"nodeType":"618","endLine":48,"endColumn":10,"suggestions":"692"},{"ruleId":"620","severity":1,"message":"693","line":1,"column":17,"nodeType":"622","messageId":"623","endLine":1,"endColumn":25},{"ruleId":"616","severity":1,"message":"694","line":54,"column":8,"nodeType":"618","endLine":54,"endColumn":20,"suggestions":"695"},{"ruleId":"616","severity":1,"message":"680","line":60,"column":8,"nodeType":"618","endLine":60,"endColumn":10,"suggestions":"696"},{"ruleId":"697","severity":1,"message":"698","line":259,"column":41,"nodeType":"699","messageId":"700","endLine":259,"endColumn":43},{"ruleId":"620","severity":1,"message":"701","line":5,"column":8,"nodeType":"622","messageId":"623","endLine":5,"endColumn":22},{"ruleId":"620","severity":1,"message":"702","line":19,"column":5,"nodeType":"622","messageId":"623","endLine":19,"endColumn":16},{"ruleId":"703","severity":1,"message":"704","line":57,"column":52,"nodeType":"705","messageId":"706","endLine":57,"endColumn":58},{"ruleId":"620","severity":1,"message":"707","line":5,"column":8,"nodeType":"622","messageId":"623","endLine":5,"endColumn":23},{"ruleId":"703","severity":1,"message":"704","line":171,"column":44,"nodeType":"705","messageId":"706","endLine":171,"endColumn":50},{"ruleId":"703","severity":1,"message":"704","line":312,"column":64,"nodeType":"705","messageId":"706","endLine":312,"endColumn":70},{"ruleId":"703","severity":1,"message":"704","line":97,"column":40,"nodeType":"705","messageId":"706","endLine":97,"endColumn":46},{"ruleId":"703","severity":1,"message":"704","line":165,"column":44,"nodeType":"705","messageId":"706","endLine":165,"endColumn":50},{"ruleId":"708","severity":1,"message":"709","line":148,"column":41,"nodeType":"710","endLine":148,"endColumn":61},{"ruleId":"708","severity":1,"message":"709","line":189,"column":45,"nodeType":"710","endLine":189,"endColumn":160},{"ruleId":"616","severity":1,"message":"711","line":38,"column":8,"nodeType":"618","endLine":38,"endColumn":24,"suggestions":"712"},{"ruleId":"616","severity":1,"message":"713","line":64,"column":8,"nodeType":"618","endLine":64,"endColumn":18,"suggestions":"714"},{"ruleId":"616","severity":1,"message":"715","line":74,"column":8,"nodeType":"618","endLine":74,"endColumn":21,"suggestions":"716"},{"ruleId":"616","severity":1,"message":"717","line":58,"column":8,"nodeType":"618","endLine":58,"endColumn":15,"suggestions":"718"},{"ruleId":"616","severity":1,"message":"642","line":69,"column":8,"nodeType":"618","endLine":69,"endColumn":21,"suggestions":"719"},{"ruleId":"720","severity":1,"message":"721","line":83,"column":32,"nodeType":"722","messageId":"723","endLine":91,"endColumn":14},{"ruleId":"616","severity":1,"message":"724","line":37,"column":8,"nodeType":"618","endLine":37,"endColumn":104,"suggestions":"725"},{"ruleId":"616","severity":1,"message":"726","line":37,"column":9,"nodeType":"727","endLine":37,"endColumn":31},{"ruleId":"616","severity":1,"message":"726","line":37,"column":33,"nodeType":"727","endLine":37,"endColumn":55},{"ruleId":"616","severity":1,"message":"726","line":37,"column":57,"nodeType":"727","endLine":37,"endColumn":79},{"ruleId":"616","severity":1,"message":"726","line":37,"column":81,"nodeType":"727","endLine":37,"endColumn":103},{"ruleId":"703","severity":1,"message":"704","line":85,"column":40,"nodeType":"705","messageId":"706","endLine":85,"endColumn":46},{"ruleId":"616","severity":1,"message":"728","line":15,"column":8,"nodeType":"618","endLine":15,"endColumn":13,"suggestions":"729"},{"ruleId":"620","severity":1,"message":"730","line":21,"column":39,"nodeType":"622","messageId":"623","endLine":21,"endColumn":51},"no-native-reassign",["731"],"no-negated-in-lhs",["732"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStats'. Either include it or remove the dependency array.","ArrayExpression",["733"],"no-unused-vars","'fetchUsers' is defined but never used.","Identifier","unusedVar","'setTotalCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["734"],"'setProductCategoryTypeTabs' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getLenses', 'getProductsByQuery', 'productCategoryTypeTabs', and 'products'. Either include them or remove the dependency array.",["735"],"React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array. You can also do a functional update 'setProduct(p => ...)' if you only need 'product' in the 'setProduct' call.",["736"],"'closeModal' is assigned a value but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'getProductsByQuery'. Either include it or remove the dependency array.",["737"],"React Hook useEffect has missing dependencies: 'activeCategoryTypeTab', 'getProductsByQuery', and 'products'. Either include them or remove the dependency array.",["738"],"'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'activeIndex' and 'getFilteredUsers'. Either include them or remove the dependency array.",["739"],"React Hook useEffect has missing dependencies: 'getFilteredUsers' and 'users'. Either include them or remove the dependency array.",["740"],"React Hook useEffect has missing dependencies: 'activeIndex', 'getFilteredUsers', and 'users'. Either include them or remove the dependency array.",["741"],"React Hook useEffect has missing dependencies: 'user.fName', 'user.lName', and 'userObj'. Either include them or remove the dependency array. You can also do a functional update 'setUserObj(u => ...)' if you only need 'userObj' in the 'setUserObj' call.",["742"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["743"],"React Hook useEffect has missing dependencies: 'handleChange' and 'resetUser'. Either include them or remove the dependency array.",["744"],"React Hook useEffect has missing dependencies: 'getEanCode' and 'handleChange'. Either include them or remove the dependency array.",["745"],"React Hook useEffect has missing dependencies: 'getSingleProduct', 'handleChangeType', and 'productObj.type'. Either include them or remove the dependency array.",["746"],"React Hook useEffect has a missing dependency: 'setSelectedImage'. Either include it or remove the dependency array.",["747"],"React Hook useEffect has missing dependencies: 'resetContactLenses', 'resetGlassesParameters', 'resetLenses', 'resetProduct', and 'setSelectedImage'. Either include them or remove the dependency array.",["748"],"'stats' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAnalytics' and 'items'. Either include them or remove the dependency array.",["749"],"React Hook useEffect has missing dependencies: 'activeIndex' and 'getOrders'. Either include them or remove the dependency array.",["750"],"React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array.",["751"],"React Hook useEffect has missing dependencies: 'activeIndex' and 'orders'. Either include them or remove the dependency array.",["752"],"React Hook useEffect has missing dependencies: 'activeIndex', 'getPosts', and 'items'. Either include them or remove the dependency array.",["753"],"React Hook useEffect has missing dependencies: 'getPost' and 'setSelectedImage'. Either include them or remove the dependency array.",["754"],["755"],"React Hook useEffect has a missing dependency: 'resetBlog'. Either include it or remove the dependency array.",["756"],"React Hook useEffect has missing dependencies: 'getCalendars' and 'getUserBookings'. Either include them or remove the dependency array.",["757"],"React Hook useEffect has missing dependencies: 'bookings' and 'getBookings'. Either include them or remove the dependency array.",["758"],"React Hook useEffect has a missing dependency: 'resetBooking'. Either include it or remove the dependency array.",["759"],"'userId' is assigned a value but never used.","'orderId' is assigned a value but never used.","'CouponOverviewContainer' is defined but never used.","'searchQuery' is assigned a value but never used.","'setSearchQuery' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCoupons'. Either include it or remove the dependency array.",["760"],"React Hook useEffect has a missing dependency: 'getCoupon'. Either include it or remove the dependency array.",["761"],"React Hook useEffect has a missing dependency: 'resetCoupons'. Either include it or remove the dependency array.",["762"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getCalendar'. Either include it or remove the dependency array.",["763"],["764"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'CustomCheckBox' is defined but never used.","'ThreeColRow' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'ProductInputRow' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getLenses'. Either include it or remove the dependency array.",["765"],"React Hook useEffect has missing dependencies: 'getProductsByQuery' and 'productItems.length'. Either include them or remove the dependency array.",["766"],"React Hook useEffect has missing dependencies: 'getProductsByQuery' and 'products'. Either include them or remove the dependency array.",["767"],"React Hook useEffect has a missing dependency: 'getFilteredUsers'. Either include it or remove the dependency array.",["768"],["769"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'blockNumber'.","ArrowFunctionExpression","unsafeRefs","React Hook useEffect has missing dependencies: 'handleChange', 'parameters.addition', and 'parameters.diopters'. Either include them or remove the dependency array. If 'handleChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["770"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook useEffect has a missing dependency: 'action'. Either include it or remove the dependency array. If 'action' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["771"],"'setShowModal' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"772","fix":"773"},{"desc":"774","fix":"775"},{"desc":"776","fix":"777"},{"desc":"778","fix":"779"},{"desc":"780","fix":"781"},{"desc":"782","fix":"783"},{"desc":"784","fix":"785"},{"desc":"784","fix":"786"},{"desc":"787","fix":"788"},{"desc":"789","fix":"790"},{"desc":"791","fix":"792"},{"desc":"793","fix":"794"},{"desc":"795","fix":"796"},{"desc":"797","fix":"798"},{"desc":"799","fix":"800"},{"desc":"801","fix":"802"},{"desc":"803","fix":"804"},{"desc":"805","fix":"806"},{"desc":"807","fix":"808"},{"desc":"809","fix":"810"},{"desc":"811","fix":"812"},{"desc":"813","fix":"814"},{"desc":"815","fix":"816"},{"desc":"817","fix":"818"},{"desc":"819","fix":"820"},{"desc":"821","fix":"822"},{"desc":"823","fix":"824"},{"desc":"825","fix":"826"},{"desc":"827","fix":"828"},{"desc":"829","fix":"830"},{"desc":"831","fix":"832"},{"desc":"823","fix":"833"},{"desc":"834","fix":"835"},{"desc":"836","fix":"837"},{"desc":"838","fix":"839"},{"desc":"840","fix":"841"},{"desc":"842","fix":"843"},{"desc":"844","fix":"845"},{"desc":"846","fix":"847"},"Update the dependencies array to be: [getStats, token]",{"range":"848","text":"849"},"Update the dependencies array to be: [user, user.fName, user.lName]",{"range":"850","text":"851"},"Update the dependencies array to be: [activeCategoryTypeTab, getLenses, getProductsByQuery, productCategoryTypeTabs, products]",{"range":"852","text":"853"},"Update the dependencies array to be: [product, product.name]",{"range":"854","text":"855"},"Update the dependencies array to be: [getProductsByQuery, products]",{"range":"856","text":"857"},"Update the dependencies array to be: [activeCategoryTypeTab, getProductsByQuery, products, searchQuery]",{"range":"858","text":"859"},"Update the dependencies array to be: [activeIndex, getFilteredUsers, users]",{"range":"860","text":"861"},{"range":"862","text":"861"},"Update the dependencies array to be: [activeIndex, getFilteredUsers, searchQuery, users]",{"range":"863","text":"864"},"Update the dependencies array to be: [user.fName, user.lName, userObj, userObj.fName, userObj.lName]",{"range":"865","text":"866"},"Update the dependencies array to be: [getUser, id]",{"range":"867","text":"868"},"Update the dependencies array to be: [handleChange, resetUser]",{"range":"869","text":"870"},"Update the dependencies array to be: [id, eanCode, productObj.type, productObj.eanCode, product.type, getEanCode, handleChange]",{"range":"871","text":"872"},"Update the dependencies array to be: [getSingleProduct, handleChangeType, id, product.type, productObj.type]",{"range":"873","text":"874"},"Update the dependencies array to be: [product.image, lenses.image, setSelectedImage]",{"range":"875","text":"876"},"Update the dependencies array to be: [resetContactLenses, resetGlassesParameters, resetLenses, resetProduct, setSelectedImage]",{"range":"877","text":"878"},"Update the dependencies array to be: [activeIndex, getAnalytics, items]",{"range":"879","text":"880"},"Update the dependencies array to be: [activeIndex, getOrders, orders]",{"range":"881","text":"882"},"Update the dependencies array to be: [activeIndex, orders]",{"range":"883","text":"884"},"Update the dependencies array to be: [activeIndex, orders, searchQuery]",{"range":"885","text":"886"},"Update the dependencies array to be: [activeIndex, getPosts, items, posts]",{"range":"887","text":"888"},"Update the dependencies array to be: [getPost, id, setSelectedImage]",{"range":"889","text":"890"},"Update the dependencies array to be: [post, setSelectedImage]",{"range":"891","text":"892"},"Update the dependencies array to be: [resetBlog]",{"range":"893","text":"894"},"Update the dependencies array to be: [calendars, getCalendars, getUserBookings]",{"range":"895","text":"896"},"Update the dependencies array to be: [bookings, calendars, getBookings]",{"range":"897","text":"898"},"Update the dependencies array to be: [resetBooking]",{"range":"899","text":"900"},"Update the dependencies array to be: [coupons, getCoupons]",{"range":"901","text":"902"},"Update the dependencies array to be: [couponId, getCoupon]",{"range":"903","text":"904"},"Update the dependencies array to be: [resetCoupons]",{"range":"905","text":"906"},"Update the dependencies array to be: [calendarId, getCalendar]",{"range":"907","text":"908"},{"range":"909","text":"900"},"Update the dependencies array to be: [getLenses, lensesProducts]",{"range":"910","text":"911"},"Update the dependencies array to be: [getProductsByQuery, productItems.length, products]",{"range":"912","text":"913"},"Update the dependencies array to be: [getProductsByQuery, products, searchQuery]",{"range":"914","text":"915"},"Update the dependencies array to be: [getFilteredUsers, users]",{"range":"916","text":"917"},"Update the dependencies array to be: [getFilteredUsers, searchQuery, users]",{"range":"918","text":"919"},"Update the dependencies array to be: [handleChange, parameters.addition, parameters.diopters]",{"range":"920","text":"921"},"Update the dependencies array to be: [action, ref]",{"range":"922","text":"923"},[6142,6149],"[getStats, token]",[3338,3362],"[user, user.fName, user.lName]",[23033,23056],"[activeCategoryTypeTab, getLenses, getProductsByQuery, productCategoryTypeTabs, products]",[23867,23881],"[product, product.name]",[1926,1936],"[getProductsByQuery, products]",[2165,2178],"[activeCategoryTypeTab, getProductsByQuery, products, searchQuery]",[1838,1845],"[activeIndex, getFilteredUsers, users]",[2070,2083],[2384,2397],"[activeIndex, getFilteredUsers, searchQuery, users]",[3588,3618],"[user.fName, user.lName, userObj, userObj.fName, userObj.lName]",[3722,3726],"[getUser, id]",[4442,4444],"[handleChange, resetUser]",[11412,11476],"[id, eanCode, productObj.type, productObj.eanCode, product.type, getEanCode, handleChange]",[11859,11877],"[getSingleProduct, handleChangeType, id, product.type, productObj.type]",[12073,12102],"[product.image, lenses.image, setSelectedImage]",[12388,12390],"[resetContactLenses, resetGlassesParameters, resetLenses, resetProduct, setSelectedImage]",[1386,1399],"[activeIndex, getAnalytics, items]",[2259,2267],"[activeIndex, getOrders, orders]",[2569,2582],"[activeIndex, orders]",[2950,2963],"[activeIndex, orders, searchQuery]",[1376,1383],"[activeIndex, getPosts, items, posts]",[2204,2208],"[getPost, id, setSelectedImage]",[2603,2609],"[post, setSelectedImage]",[2903,2905],"[resetBlog]",[1736,1747],"[calendars, getCalendars, getUserBookings]",[1840,1851],"[bookings, calendars, getBookings]",[1943,1945],"[resetBooking]",[1111,1120],"[coupons, getCoupons]",[1197,1207],"[couponId, getCoupon]",[1299,1301],"[resetCoupons]",[1564,1576],"[calendarId, getCalendar]",[1668,1670],[1079,1095],"[getLenses, lensesProducts]",[1660,1670],"[getProductsByQuery, productItems.length, products]",[1874,1887],"[getProductsByQuery, products, searchQuery]",[1342,1349],"[getFilteredUsers, users]",[1583,1596],"[getFilteredUsers, searchQuery, users]",[1028,1124],"[handleChange, parameters.addition, parameters.diopters]",[467,472],"[action, ref]"]
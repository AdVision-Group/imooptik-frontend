[{"/imooptik-frontend/src/index.js":"1","/imooptik-frontend/src/reportWebVitals.js":"2","/imooptik-frontend/src/App.jsx":"3","/imooptik-frontend/src/context/auth/auth.context.jsx":"4","/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx":"5","/imooptik-frontend/src/global.styles.jsx":"6","/imooptik-frontend/src/context/auth/auth.queries.jsx":"7","/imooptik-frontend/src/pages/dashboard/dashboard.jsx":"8","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx":"9","/imooptik-frontend/src/pages/reset-password/reset-password.jsx":"10","/imooptik-frontend/src/components/popup/pop-up.component.jsx":"11","/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx":"12","/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx":"13","/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx":"14","/imooptik-frontend/src/components/sidenav/sidenav.component.jsx":"15","/imooptik-frontend/src/context/image/image.context.jsx":"16","/imooptik-frontend/src/context/blog/blog.context.jsx":"17","/imooptik-frontend/src/context/booking/booking.context.jsx":"18","/imooptik-frontend/src/context/orders/orders.context.jsx":"19","/imooptik-frontend/src/context/warehouse/warehouse.context.jsx":"20","/imooptik-frontend/src/context/coupons/coupons.context.jsx":"21","/imooptik-frontend/src/context/examination/examination.context.jsx":"22","/imooptik-frontend/src/context/order/order.context.jsx":"23","/imooptik-frontend/src/context/user/user.context.jsx":"24","/imooptik-frontend/src/context/analytics/analytics.context.jsx":"25","/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx":"26","/imooptik-frontend/src/components/popup/pop.up.styles.jsx":"27","/imooptik-frontend/src/components/custom-input/custom-input.component.jsx":"28","/imooptik-frontend/src/components/sign-in/sign-in.component.jsx":"29","/imooptik-frontend/src/components/spinner/spinner.component.jsx":"30","/imooptik-frontend/src/sections/customers/customers.section.jsx":"31","/imooptik-frontend/src/sections/orders/orders.section.jsx":"32","/imooptik-frontend/src/sections/product/product.section.jsx":"33","/imooptik-frontend/src/sections/analytics/analytics.section.jsx":"34","/imooptik-frontend/src/components/custom-button/custom-button.component.jsx":"35","/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx":"36","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx":"37","/imooptik-frontend/src/sections/post/post.section.jsx":"38","/imooptik-frontend/src/sections/booking/booking.section.jsx":"39","/imooptik-frontend/src/sections/order/order.section.jsx":"40","/imooptik-frontend/src/sections/coupons/coupons.section.jsx":"41","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx":"42","/imooptik-frontend/src/sections/calendar/calendar.section.jsx":"43","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx":"44","/imooptik-frontend/src/sections/coupon/coupon.section.jsx":"45","/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx":"46","/imooptik-frontend/src/context/image/image.queries.jsx":"47","/imooptik-frontend/src/context/blog/blog.queries.jsx":"48","/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx":"49","/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx":"50","/imooptik-frontend/src/context/user/user.utils.jsx":"51","/imooptik-frontend/src/context/user/user.queries.jsx":"52","/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx":"53","/imooptik-frontend/src/components/spinner/spinner.styles.jsx":"54","/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx":"55","/imooptik-frontend/src/sections/customers/customers.styles.jsx":"56","/imooptik-frontend/src/context/orders/orders.utils.jsx":"57","/imooptik-frontend/src/sections/product/product.styles.jsx":"58","/imooptik-frontend/src/sections/orders/orders.styles.jsx":"59","/imooptik-frontend/src/sections/analytics/analytics.styles.jsx":"60","/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx":"61","/imooptik-frontend/src/sections/booking/booking.styles.jsx":"62","/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx":"63","/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx":"64","/imooptik-frontend/src/sections/calendar/calendar.styles.jsx":"65","/imooptik-frontend/src/sections/e-shop/e-shop.styles.jsx":"66","/imooptik-frontend/src/sections/coupons/coupons.styles.jsx":"67","/imooptik-frontend/src/sections/coupon/coupon.styles.jsx":"68","/imooptik-frontend/src/sections/order/order.styles.jsx":"69","/imooptik-frontend/src/components/section-header/section-header.component.jsx":"70","/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx":"71","/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx":"72","/imooptik-frontend/src/components/list-arrows/list-arrows.component.jsx":"73","/imooptik-frontend/src/utils/warehouse.utils.jsx":"74","/imooptik-frontend/src/utils/user.utils.jsx":"75","/imooptik-frontend/src/hooks/useFetch.jsx":"76","/imooptik-frontend/src/utils/analytics.utils.jsx":"77","/imooptik-frontend/src/components/modal-images/modal-images.component.jsx":"78","/imooptik-frontend/src/utils/calendar.utils.jsx":"79","/imooptik-frontend/src/components/order-overview/order-overview.component.jsx":"80","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx":"81","/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.component.jsx":"82","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx":"83","/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.component.jsx":"84","/imooptik-frontend/src/components/product-service-form/product-service-form.component.jsx":"85","/imooptik-frontend/src/components/booking-appoinments/booking-appoinment.component.jsx":"86","/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.component.jsx":"87","/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx":"88","/imooptik-frontend/src/components/custom-select/custom-select.component.jsx":"89","/imooptik-frontend/src/components/user-form/user-form.component.jsx":"90","/imooptik-frontend/src/components/product-overview/product-overview.component.jsx":"91","/imooptik-frontend/src/sections/post/post.styles.jsx":"92","/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.component.jsx":"93","/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx":"94","/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.component.jsx":"95","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx":"96","/imooptik-frontend/src/components/calendar/calendar.component.jsx":"97","/imooptik-frontend/src/context/week-calendar/week-calendar.context.jsx":"98","/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.component.jsx":"99","/imooptik-frontend/src/sections/order/steps/4-summary/summary.component.jsx":"100","/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.component.jsx":"101","/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.component.jsx":"102","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx":"103","/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx":"104","/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx":"105","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx":"106","/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx":"107","/imooptik-frontend/src/components/section-header/section-header.styles.jsx":"108","/imooptik-frontend/src/hooks/useOutsideAlerter.jsx":"109","/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx":"110","/imooptik-frontend/src/components/list-arrows/list-arrows.styles.jsx":"111","/imooptik-frontend/src/components/product-service-form/product-service-form.styles.jsx":"112","/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx":"113","/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.styles.jsx":"114","/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx":"115","/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx":"116","/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx":"117","/imooptik-frontend/src/components/booking-appoinments/booking-appoinment.styles.jsx":"118","/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.styles.jsx":"119","/imooptik-frontend/src/components/user-form/user.form-styles.jsx":"120","/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx":"121","/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx":"122","/imooptik-frontend/src/components/custom-select/custom-select.styles.jsx":"123","/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.styles.jsx":"124","/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx":"125","/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx":"126","/imooptik-frontend/src/utils/week-calendar.utils.jsx":"127","/imooptik-frontend/src/components/calendar/calendar.styles.jsx":"128","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx":"129","/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.styles.jsx":"130","/imooptik-frontend/src/components/booking-appoinment/booking-appoinment.component.jsx":"131","/imooptik-frontend/src/components/modal-booking/modal-booking.component.jsx":"132","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx":"133","/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx":"134","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx":"135","/imooptik-frontend/src/components/examinations-overview/examinations-overview.component.jsx":"136","/imooptik-frontend/src/sections/order/steps/4-summary/summary.styles.jsx":"137","/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.styles.jsx":"138","/imooptik-frontend/src/utils/orders.utils.jsx":"139","/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.styles.jsx":"140","/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.component.jsx":"141","/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.styles.jsx":"142","/imooptik-frontend/src/components/calendar-booked-day/calendar-booked-day.component.jsx":"143","/imooptik-frontend/src/components/modal-userbookings-details/modal-userbookings-details.component.jsx":"144","/imooptik-frontend/src/components/order-summary-lenses-name/order-summary-lenses-name.component.jsx":"145","/imooptik-frontend/src/components/order-summary-product-name/order-summary-product-name.component.jsx":"146","/imooptik-frontend/src/components/order-cart-lenses-row/order-cart-lenses-row.component.jsx":"147","/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx":"148","/imooptik-frontend/src/components/modal-order-update-user/modal-order-update-user.component.jsx":"149","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.component.jsx":"150","/imooptik-frontend/src/components/order-cart-row/order-cart-row.component.jsx":"151","/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx":"152","/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx":"153","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx":"154","/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx":"155","/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx":"156","/imooptik-frontend/src/components/modal-booking/modal-booking.styles.jsx":"157","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx":"158","/imooptik-frontend/src/components/examinations-overview/examinations-overview.styles.jsx":"159","/imooptik-frontend/src/utils/parameters.utils.jsx":"160","/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.styles.jsx":"161","/imooptik-frontend/src/components/calendar-booked-day/calendar-booked-day.styles.jsx":"162","/imooptik-frontend/src/components/modal-order-update-user/modal-order-update-user.styles.jsx":"163","/imooptik-frontend/src/components/order-cart-lenses-row/order-cart-lenses-row.styles.jsx":"164","/imooptik-frontend/src/components/examination-user/examination-user.component.jsx":"165","/imooptik-frontend/src/components/modal-userbookings-details/modal-userbookings-details.styles.jsx":"166","/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx":"167","/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.component.jsx":"168","/imooptik-frontend/src/components/order-cart-row/order-cart-row.styles.jsx":"169","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.styles.jsx":"170","/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx":"171","/imooptik-frontend/src/components/examination-user/examination-user.styles.jsx":"172"},{"size":717,"mtime":1608670306490,"results":"173","hashOfConfig":"174"},{"size":362,"mtime":1608191294784,"results":"175","hashOfConfig":"174"},{"size":1826,"mtime":1614083683213,"results":"176","hashOfConfig":"174"},{"size":6937,"mtime":1614193605680,"results":"177","hashOfConfig":"174"},{"size":1076,"mtime":1610126635393,"results":"178","hashOfConfig":"174"},{"size":4157,"mtime":1614210617000,"results":"179","hashOfConfig":"174"},{"size":2292,"mtime":1610635788267,"results":"180","hashOfConfig":"174"},{"size":9175,"mtime":1614083678413,"results":"181","hashOfConfig":"174"},{"size":840,"mtime":1609978179243,"results":"182","hashOfConfig":"174"},{"size":1667,"mtime":1608613259561,"results":"183","hashOfConfig":"174"},{"size":714,"mtime":1609965412857,"results":"184","hashOfConfig":"174"},{"size":652,"mtime":1612801843627,"results":"185","hashOfConfig":"174"},{"size":545,"mtime":1612808589467,"results":"186","hashOfConfig":"174"},{"size":772,"mtime":1610476886850,"results":"187","hashOfConfig":"174"},{"size":2443,"mtime":1614084307393,"results":"188","hashOfConfig":"174"},{"size":4422,"mtime":1611960472114,"results":"189","hashOfConfig":"174"},{"size":4047,"mtime":1612461301680,"results":"190","hashOfConfig":"174"},{"size":7376,"mtime":1613874003571,"results":"191","hashOfConfig":"174"},{"size":7377,"mtime":1614271470917,"results":"192","hashOfConfig":"174"},{"size":25726,"mtime":1614257603817,"results":"193","hashOfConfig":"174"},{"size":7011,"mtime":1611198583300,"results":"194","hashOfConfig":"174"},{"size":3493,"mtime":1612458174320,"results":"195","hashOfConfig":"174"},{"size":9795,"mtime":1614258347247,"results":"196","hashOfConfig":"174"},{"size":12478,"mtime":1614118394483,"results":"197","hashOfConfig":"174"},{"size":2856,"mtime":1614199007560,"results":"198","hashOfConfig":"174"},{"size":1466,"mtime":1609978281513,"results":"199","hashOfConfig":"174"},{"size":721,"mtime":1612808901067,"results":"200","hashOfConfig":"174"},{"size":639,"mtime":1608689089980,"results":"201","hashOfConfig":"174"},{"size":1925,"mtime":1609978226453,"results":"202","hashOfConfig":"174"},{"size":178,"mtime":1608409397640,"results":"203","hashOfConfig":"174"},{"size":4934,"mtime":1613416245002,"results":"204","hashOfConfig":"174"},{"size":6441,"mtime":1614212984680,"results":"205","hashOfConfig":"174"},{"size":19440,"mtime":1614269870527,"results":"206","hashOfConfig":"174"},{"size":9183,"mtime":1614270966937,"results":"207","hashOfConfig":"174"},{"size":283,"mtime":1608325857586,"results":"208","hashOfConfig":"174"},{"size":5133,"mtime":1614213251940,"results":"209","hashOfConfig":"174"},{"size":810,"mtime":1610132345623,"results":"210","hashOfConfig":"174"},{"size":9758,"mtime":1612970796630,"results":"211","hashOfConfig":"174"},{"size":13703,"mtime":1614213168620,"results":"212","hashOfConfig":"174"},{"size":5356,"mtime":1614017510220,"results":"213","hashOfConfig":"174"},{"size":2971,"mtime":1614118042043,"results":"214","hashOfConfig":"174"},{"size":5640,"mtime":1613165485770,"results":"215","hashOfConfig":"174"},{"size":12238,"mtime":1613842139351,"results":"216","hashOfConfig":"174"},{"size":6973,"mtime":1613575015710,"results":"217","hashOfConfig":"174"},{"size":5575,"mtime":1612745901696,"results":"218","hashOfConfig":"174"},{"size":4993,"mtime":1612832549277,"results":"219","hashOfConfig":"174"},{"size":1560,"mtime":1610106635382,"results":"220","hashOfConfig":"174"},{"size":1793,"mtime":1608678905090,"results":"221","hashOfConfig":"174"},{"size":6525,"mtime":1614261837697,"results":"222","hashOfConfig":"174"},{"size":898,"mtime":1609978275513,"results":"223","hashOfConfig":"174"},{"size":897,"mtime":1611960472114,"results":"224","hashOfConfig":"174"},{"size":3530,"mtime":1611960472114,"results":"225","hashOfConfig":"174"},{"size":1331,"mtime":1612803190107,"results":"226","hashOfConfig":"174"},{"size":377,"mtime":1608409635720,"results":"227","hashOfConfig":"174"},{"size":975,"mtime":1612808569627,"results":"228","hashOfConfig":"174"},{"size":1027,"mtime":1612890733849,"results":"229","hashOfConfig":"174"},{"size":889,"mtime":1614212868650,"results":"230","hashOfConfig":"174"},{"size":1008,"mtime":1612827031697,"results":"231","hashOfConfig":"174"},{"size":1115,"mtime":1612827087027,"results":"232","hashOfConfig":"174"},{"size":2535,"mtime":1614196944170,"results":"233","hashOfConfig":"174"},{"size":440,"mtime":1609635534260,"results":"234","hashOfConfig":"174"},{"size":2278,"mtime":1614083550283,"results":"235","hashOfConfig":"174"},{"size":1728,"mtime":1613609903180,"results":"236","hashOfConfig":"174"},{"size":688,"mtime":1612805274117,"results":"237","hashOfConfig":"174"},{"size":3206,"mtime":1612979284800,"results":"238","hashOfConfig":"174"},{"size":546,"mtime":1613058970630,"results":"239","hashOfConfig":"174"},{"size":1294,"mtime":1612826862757,"results":"240","hashOfConfig":"174"},{"size":1157,"mtime":1612828486397,"results":"241","hashOfConfig":"174"},{"size":454,"mtime":1612803607557,"results":"242","hashOfConfig":"174"},{"size":1370,"mtime":1611960472114,"results":"243","hashOfConfig":"174"},{"size":320,"mtime":1611163718930,"results":"244","hashOfConfig":"174"},{"size":655,"mtime":1613076713220,"results":"245","hashOfConfig":"174"},{"size":1810,"mtime":1613830248251,"results":"246","hashOfConfig":"174"},{"size":2227,"mtime":1614096810123,"results":"247","hashOfConfig":"174"},{"size":431,"mtime":1613172969079,"results":"248","hashOfConfig":"174"},{"size":3835,"mtime":1614269466837,"results":"249","hashOfConfig":"174"},{"size":403,"mtime":1612912179069,"results":"250","hashOfConfig":"174"},{"size":8363,"mtime":1611078296630,"results":"251","hashOfConfig":"174"},{"size":8244,"mtime":1614211537610,"results":"252","hashOfConfig":"174"},{"size":4873,"mtime":1614271114997,"results":"253","hashOfConfig":"174"},{"size":9998,"mtime":1614269703057,"results":"254","hashOfConfig":"174"},{"size":5150,"mtime":1614270046047,"results":"255","hashOfConfig":"174"},{"size":4289,"mtime":1614270020437,"results":"256","hashOfConfig":"174"},{"size":8535,"mtime":1614270056297,"results":"257","hashOfConfig":"174"},{"size":1928,"mtime":1614269985167,"results":"258","hashOfConfig":"174"},{"size":1559,"mtime":1613150212680,"results":"259","hashOfConfig":"174"},{"size":3418,"mtime":1613610106850,"results":"260","hashOfConfig":"174"},{"size":14172,"mtime":1613574844140,"results":"261","hashOfConfig":"174"},{"size":693,"mtime":1612972806200,"results":"262","hashOfConfig":"174"},{"size":11477,"mtime":1613701190609,"results":"263","hashOfConfig":"174"},{"size":1447,"mtime":1614177255770,"results":"264","hashOfConfig":"174"},{"size":2024,"mtime":1612970501200,"results":"265","hashOfConfig":"174"},{"size":6693,"mtime":1614269203417,"results":"266","hashOfConfig":"174"},{"size":425,"mtime":1609365301650,"results":"267","hashOfConfig":"174"},{"size":7098,"mtime":1614212142380,"results":"268","hashOfConfig":"174"},{"size":999,"mtime":1612984003740,"results":"269","hashOfConfig":"174"},{"size":3320,"mtime":1614122175663,"results":"270","hashOfConfig":"174"},{"size":4076,"mtime":1614212181850,"results":"271","hashOfConfig":"174"},{"size":6827,"mtime":1614212468910,"results":"272","hashOfConfig":"174"},{"size":10422,"mtime":1614260659767,"results":"273","hashOfConfig":"174"},{"size":5387,"mtime":1614258243397,"results":"274","hashOfConfig":"174"},{"size":2999,"mtime":1612400717780,"results":"275","hashOfConfig":"174"},{"size":1851,"mtime":1614098317943,"results":"276","hashOfConfig":"174"},{"size":728,"mtime":1610132354653,"results":"277","hashOfConfig":"174"},{"size":651,"mtime":1608506295620,"results":"278","hashOfConfig":"174"},{"size":354,"mtime":1610748624680,"results":"279","hashOfConfig":"174"},{"size":908,"mtime":1612832700117,"results":"280","hashOfConfig":"174"},{"size":1088,"mtime":1612802413197,"results":"281","hashOfConfig":"174"},{"size":1400,"mtime":1611365536654,"results":"282","hashOfConfig":"174"},{"size":4564,"mtime":1613054876220,"results":"283","hashOfConfig":"174"},{"size":624,"mtime":1613416674392,"results":"284","hashOfConfig":"174"},{"size":918,"mtime":1614176766280,"results":"285","hashOfConfig":"174"},{"size":2707,"mtime":1614119736023,"results":"286","hashOfConfig":"174"},{"size":1115,"mtime":1612828420327,"results":"287","hashOfConfig":"174"},{"size":1564,"mtime":1612828401497,"results":"288","hashOfConfig":"174"},{"size":1301,"mtime":1612828444267,"results":"289","hashOfConfig":"174"},{"size":1096,"mtime":1613574911250,"results":"290","hashOfConfig":"174"},{"size":613,"mtime":1612906653229,"results":"291","hashOfConfig":"174"},{"size":1867,"mtime":1613151668320,"results":"292","hashOfConfig":"174"},{"size":2294,"mtime":1614205641940,"results":"293","hashOfConfig":"174"},{"size":848,"mtime":1613397686572,"results":"294","hashOfConfig":"174"},{"size":2193,"mtime":1612808323487,"results":"295","hashOfConfig":"174"},{"size":364,"mtime":1612973498140,"results":"296","hashOfConfig":"174"},{"size":1934,"mtime":1613059142660,"results":"297","hashOfConfig":"174"},{"size":447,"mtime":1609638204590,"results":"298","hashOfConfig":"174"},{"size":3039,"mtime":1613420226862,"results":"299","hashOfConfig":"174"},{"size":2738,"mtime":1614206891810,"results":"300","hashOfConfig":"174"},{"size":1274,"mtime":1613074426100,"results":"301","hashOfConfig":"174"},{"size":1060,"mtime":1612969996230,"results":"302","hashOfConfig":"174"},{"size":2885,"mtime":1614106236373,"results":"303","hashOfConfig":"174"},{"size":408,"mtime":1612906966259,"results":"304","hashOfConfig":"174"},{"size":5415,"mtime":1614112026683,"results":"305","hashOfConfig":"174"},{"size":681,"mtime":1610146980773,"results":"306","hashOfConfig":"174"},{"size":6582,"mtime":1613155269070,"results":"307","hashOfConfig":"174"},{"size":1558,"mtime":1614205572220,"results":"308","hashOfConfig":"174"},{"size":8143,"mtime":1613701083699,"results":"309","hashOfConfig":"174"},{"size":4000,"mtime":1614021336030,"results":"310","hashOfConfig":"174"},{"size":4130,"mtime":1614019731940,"results":"311","hashOfConfig":"174"},{"size":636,"mtime":1614009954980,"results":"312","hashOfConfig":"174"},{"size":3237,"mtime":1614258277017,"results":"313","hashOfConfig":"174"},{"size":10637,"mtime":1614024037180,"results":"314","hashOfConfig":"174"},{"size":1458,"mtime":1612888993149,"results":"315","hashOfConfig":"174"},{"size":2861,"mtime":1614210669900,"results":"316","hashOfConfig":"174"},{"size":3318,"mtime":1614211171940,"results":"317","hashOfConfig":"174"},{"size":776,"mtime":1614175139190,"results":"318","hashOfConfig":"174"},{"size":1274,"mtime":1614175269010,"results":"319","hashOfConfig":"174"},{"size":2251,"mtime":1614120394783,"results":"320","hashOfConfig":"174"},{"size":341,"mtime":1610810143010,"results":"321","hashOfConfig":"174"},{"size":3741,"mtime":1613829661181,"results":"322","hashOfConfig":"174"},{"size":9132,"mtime":1614021524520,"results":"323","hashOfConfig":"174"},{"size":6880,"mtime":1614255879827,"results":"324","hashOfConfig":"174"},{"size":1124,"mtime":1612806552957,"results":"325","hashOfConfig":"174"},{"size":698,"mtime":1612898195179,"results":"326","hashOfConfig":"174"},{"size":486,"mtime":1610505703940,"results":"327","hashOfConfig":"174"},{"size":1432,"mtime":1612827268487,"results":"328","hashOfConfig":"174"},{"size":2165,"mtime":1612803915567,"results":"329","hashOfConfig":"174"},{"size":2041,"mtime":1614111903193,"results":"330","hashOfConfig":"174"},{"size":1414,"mtime":1614205611820,"results":"331","hashOfConfig":"174"},{"size":1972,"mtime":1614205680740,"results":"332","hashOfConfig":"174"},{"size":806,"mtime":1614201284060,"results":"333","hashOfConfig":"174"},{"size":3058,"mtime":1613236507011,"results":"334","hashOfConfig":"174"},{"size":668,"mtime":1614109851303,"results":"335","hashOfConfig":"174"},{"size":1679,"mtime":1613833041551,"results":"336","hashOfConfig":"174"},{"size":2470,"mtime":1614020404360,"results":"337","hashOfConfig":"174"},{"size":492,"mtime":1612389141090,"results":"338","hashOfConfig":"174"},{"size":2236,"mtime":1613939348071,"results":"339","hashOfConfig":"174"},{"size":349,"mtime":1612803624657,"results":"340","hashOfConfig":"174"},{"size":29005,"mtime":1614205541860,"results":"341","hashOfConfig":"174"},{"size":2268,"mtime":1613826826921,"results":"342","hashOfConfig":"174"},{"size":1643,"mtime":1614021440690,"results":"343","hashOfConfig":"174"},{"size":3089,"mtime":1614204881320,"results":"344","hashOfConfig":"174"},{"size":162,"mtime":1612389165420,"results":"345","hashOfConfig":"174"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},"1lk1amn",{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"348"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"348"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"348"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"348"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"348"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"348"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"348"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"348"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"348"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"348"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"348"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"348"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"348"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"348"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"348"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"524","messages":"525","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"348"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"348"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"348"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"348"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"348"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"348"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"348"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"348"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"570","messages":"571","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"572","messages":"573","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"348"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"348"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"348"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637","usedDeprecatedRules":"348"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"348"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"348"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"348"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"657","messages":"658","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"348"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"664","usedDeprecatedRules":"348"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"667","usedDeprecatedRules":"348"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"348"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"681","usedDeprecatedRules":"348"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"348"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"348"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},"/imooptik-frontend/src/index.js",[],["728","729"],"/imooptik-frontend/src/reportWebVitals.js",[],"/imooptik-frontend/src/App.jsx",[],"/imooptik-frontend/src/context/auth/auth.context.jsx",["730"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { getUser, createNewUser, resetPassword, setNewPassword, fetchUser } from './auth.queries'\n\nexport const AuthContext = createContext({\n    currentUser: null,\n    isAdmin: false,\n    isOptometrist: false,\n    token: null,\n    stats: null,\n    logIn: () => { },\n    logOut: () => { },\n    register: () => { },\n    handleResetPassword: () => { },\n    handleCreatingNewPassword: () => { }\n})\n\nconst AuthProvider = ({ children }) => {\n    const { setShowModal, setIsLoading, getMessage, closeModal } = useContext(LoadingModalContext)\n    const [currentUser, setCurrentUser] = useState(null)\n    const [token, setToken] = useState(null)\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [isOptometrist, setIsOptometrist] = useState(false)\n    const [stats, setStats] = useState(null)\n\n    const checkIfOptometrist = user => {\n        if (user.optometrist) {\n            setIsOptometrist(true)\n        } else {\n            setIsOptometrist(false)\n        }\n    }\n\n    const checkIfAdmin = (user) => {\n        if (user.admin > 1) {\n            setIsAdmin(true)\n        } else {\n            setIsAdmin(false)\n        }\n    }\n\n    const logIn = async (email, password) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await getUser({ email, password })\n            const user = await response.json()\n\n            getMessage(user.message)\n            setIsLoading(false)\n            if (user.user) {\n                setCurrentUser(user.user)\n                setToken(user.authToken)\n                localStorage.setItem(process.env.REACT_APP_ADMIN_TOKEN, user.authToken)\n                checkIfAdmin(user.user)\n\n                closeModal()\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const logOut = () => {\n        localStorage.removeItem(process.env.REACT_APP_ADMIN_TOKEN)\n        setCurrentUser(null)\n        setToken(null)\n    }\n\n    const register = async (name, email, password, confirmPassword) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!name) {\n            console.log(\"Ziadne meno\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n\n        if (password !== confirmPassword) {\n            console.log(\"hesla sa nezhoduju\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await createNewUser({ name, email, password })\n            const data = await response.json()\n\n            setIsLoading(false)\n            getMessage(data.messageSK)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleResetPassword = async (email) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        if (!email) {\n            console.log(\"Ziadny e-mail\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await resetPassword(email)\n            const user = await response.json()\n\n            getMessage(user.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const handleCreatingNewPassword = async (resetSecret, password) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        console.log(resetSecret)\n\n        if (!resetSecret) {\n            console.log(\"Ziadny reset token\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n        if (!password) {\n            console.log(\"Ziadne heslo\")\n            setShowModal(false)\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            const response = await setNewPassword(resetSecret, password)\n            const user = await response.json()\n\n            getMessage(user.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n    const getStats = async () => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/stats/collectionCounts`, requestOptions)\n            const data = await response.json()\n\n            setStats(data)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN)) {\n            setToken(localStorage.getItem(process.env.REACT_APP_ADMIN_TOKEN))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (token) {\n            const getUserProfile = async () => {\n                const response = await fetchUser(token)\n                const data = await response.json()\n                if (data.user) {\n                    setCurrentUser(data.user)\n                    checkIfAdmin(data.user)\n                    checkIfOptometrist(data.user)\n                }\n            }\n            getUserProfile()\n            getStats()\n        }\n    }, [token])\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token,\n                currentUser,\n                isAdmin,\n                isOptometrist,\n                stats,\n                logIn,\n                logOut,\n                register,\n                handleResetPassword,\n                handleCreatingNewPassword\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthProvider","/imooptik-frontend/src/context/loading-modal/loading-modal.contenxt.jsx",[],"/imooptik-frontend/src/global.styles.jsx",[],"/imooptik-frontend/src/context/auth/auth.queries.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset-password.jsx",[],"/imooptik-frontend/src/components/popup/pop-up.component.jsx",[],"/imooptik-frontend/src/pages/dashboard/dashboard.styles.jsx",[],"/imooptik-frontend/src/pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx",[],"/imooptik-frontend/src/pages/reset-password/reset.password.styles.jsx",[],"/imooptik-frontend/src/components/sidenav/sidenav.component.jsx",[],"/imooptik-frontend/src/context/image/image.context.jsx",[],"/imooptik-frontend/src/context/blog/blog.context.jsx",[],"/imooptik-frontend/src/context/booking/booking.context.jsx",[],"/imooptik-frontend/src/context/orders/orders.context.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.context.jsx",["731","732"],"/imooptik-frontend/src/context/coupons/coupons.context.jsx",[],"/imooptik-frontend/src/context/examination/examination.context.jsx",[],"/imooptik-frontend/src/context/order/order.context.jsx",[],"/imooptik-frontend/src/context/user/user.context.jsx",["733"],"import React, { createContext, useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\n// import { OrderContext } from '../order/order.context'\n\nimport {\n    // fetchUsers,\n    fetchUser,\n    patchUser,\n    postAdmin,\n    postUser,\n} from './user.queries'\n\nimport {\n    initUserObj\n} from './user.utils'\n\nexport const UserContext = createContext({\n    isUpdating: false,\n    activeIndex: 0,\n    handleChangeFilterItem: () => { },\n    filterItems: [],\n    totalCount: 0,\n    users: null,\n    user: null,\n    // getUsers: () => { },\n    getUser: () => { },\n    handleChange: () => { },\n    handleParameterChange: () => { },\n    handleCompanyChange: () => { },\n    updateUser: () => { },\n    resetUser: () => { },\n    formToShow: 0,\n    switchFormButtons: [],\n    toggleUserForm: () => { },\n    createUser: () => { },\n    getFilteredUsers: () => { },\n    getUserByQuery: () => { },\n})\n\nconst UserProvider = ({ children }) => {\n    const { push } = useHistory()\n    const { token } = useContext(AuthContext)\n    const {\n        closeModal,\n        getMessage,\n        setIsLoading,\n        setShowModal\n    } = useContext(LoadingModalContext)\n\n    // ------------------------\n\n    const [user, setUser] = useState(initUserObj)\n    const [users, setUsers] = useState(null)\n    const [totalCount] = useState(0)\n\n    // ------------------------\n\n    const [isUpdating, setIsUpdating] = useState(false)\n    const [activeIndex, setActiveIndex] = useState(0)\n    const filterItems = [\n        {\n            id: 0,\n            name: \"Zákaznici\",\n            filter: 0,\n        },\n        {\n            id: 1,\n            name: \"Zamestnanci\",\n            filter: 1,\n        },\n        {\n            id: 2,\n            name: \"Vedúci\",\n            filter: 2,\n        },\n        // {\n        //     id: 3,\n        //     name: \"Velký brat\",\n        //     filter: 3,\n        // },\n        // {\n        //     id: 4,\n        //     name: \"Odstránené\",\n        //     filter: 3\n        // }\n    ]\n\n    // ------------------------\n\n    const [formToShow, setFormToShow] = useState(0)\n    const switchFormButtons = [\n        {\n            name: \"Zákazník\"\n        },\n        {\n            name: \"Zamestnanec\"\n        }\n    ]\n\n    const toggleUserForm = (e, idx) => {\n        e.preventDefault()\n        setFormToShow(idx)\n    }\n\n    // ------------------------\n\n\n    const handleChangeFilterItem = (itemIndex) => {\n        setActiveIndex(itemIndex)\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n\n        console.log(name, value)\n        setUser({\n            ...user,\n            [name]: value\n        })\n    }\n\n    const handleParameterChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = user.lenses[name]\n        arr[idx] = value === '' ? 1001 : value\n        setUser({\n            ...user,\n            lenses: {\n                ...user.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleCompanyChange = (e) => {\n        const { name, value } = e.target\n        setUser({\n            ...user,\n            company: {\n                ...user.company,\n                [name]: value\n            }\n        })\n    }\n\n    useEffect(() => {\n        setUser({\n            ...user,\n            name: user?.fName + \" \" + user?.lName\n        })\n    }, [user?.fName, user?.lName])\n\n    const resetUser = () => {\n        setUser(initUserObj)\n        setIsUpdating(false)\n        setFormToShow(0)\n    }\n\n    // ------------------------\n    // USER ACTIONS\n    // ------------------------\n\n    // Get all users\n    // const getUsers = async () => {\n    //     setIsLoading(true)\n    //     setShowModal(true)\n\n    //     try {\n    //         const response = await fetchUsers(token)\n    //         const data = await response.json()\n\n    //         console.log(data)\n    //         if (data.users) {\n    //             setUsers(data.users)\n    //             setTotalCount(data.count)\n    //             setIsLoading(false)\n    //             closeModal()\n\n    //         } else {\n    //             getMessage(data.message)\n    //             setIsLoading(false)\n    //         }\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n    // }\n\n    // Get single user\n    const getUser = async (id) => {\n        setIsLoading(true)\n        setShowModal(true)\n        setIsUpdating(true)\n\n        try {\n            const response = await fetchUser(token, id)\n            const data = await response.json()\n\n            if (data.user) {\n                setUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n                setIsLoading(false)\n                closeModal()\n\n            } else {\n                getMessage(data.message)\n                setIsLoading(false)\n            }\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // Update user\n    const updateUser = async (user, id, path, refetchUser, close, addUser) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(user)\n\n        try {\n            const response = await patchUser(token, user, id)\n            const data = await response.json()\n\n            console.log(data)\n\n            if (data.error) {\n                getMessage(data.messageSK)\n                setIsLoading(false)\n                return\n            }\n\n\n            setIsLoading(false)\n            closeModal()\n\n            if (path === 'order') {\n                push(`/dashboard/objednavky/${id}`)\n            } else if (path === 'profile') {\n                push(`/dashboard/zakaznici/${id}`)\n            } else if (path === 'isOrder') {\n                setUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n\n                addUser({\n                    ...user,\n                    ...data.user,\n                    fName: data.user.name ? data.user.name.split(\" \")[0] : \"\",\n                    lName: data.user.name ? data.user.name.split(\" \")[1] : \"\"\n                })\n                // console.log(\"REFETCH USER\")\n                // console.log(\"REFETCH USER\")\n                // console.log(\"REFETCH USER\")\n                // refetchUser()\n                close()\n            } else {\n                push(\"/dashboard/zakaznici\")\n            }\n\n            getFilteredUsers({\n                filters: {\n                    admin: activeIndex\n                }\n            })\n            // http://localhost:1000/#/dashboard/zakaznici\n\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const createUser = async (user, path) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        try {\n            if (formToShow === 0) {\n                let data = {}\n                if (!user._id) {\n                    console.log('creating new user')\n                    const response = await postUser(token, user)\n                    data = await response.json()\n\n                    if (data.error) {\n                        getMessage(data.message)\n\n                        if (data.type === 'email') {\n                            getMessage(\"Email existuje\")\n                        }\n                        if (data.error === 'format' && data.message.includes('email')) {\n                            getMessage(\"Email musi byt platny email\")\n                        }\n                        setIsLoading(false)\n                        return\n                    }\n\n                    setUser({\n                        ...data.user,\n                        _id: data.user._id\n                    })\n                }\n\n                const userId = data.user ? data.user._id : user._id\n\n                updateUser({\n                    ...user\n                }, userId, path)\n\n                // setIsLoading(false)\n                // getUsers()\n                // push('/dashboard/zakaznici')\n                // closeModal()\n\n            } else {\n                if (user.password !== user.confirmPassword) {\n                    getMessage(\"Heslá sa nezhodujú\")\n                    setIsLoading(false)\n                    return\n                }\n\n                const response = await postAdmin(token, user)\n                const data = await response.json()\n\n                console.log(data)\n\n                if (data.error) {\n                    getMessage(data.message)\n                    setIsLoading(false)\n                    return\n                }\n\n                setIsLoading(false)\n                getFilteredUsers({\n                    filters: {\n                        admin: activeIndex\n                    }\n                })\n\n                push(\"/dashboard/zakaznici\")\n                closeModal()\n            }\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    // ----------------------------------------------\n    // ----------------------------------------------\n    // ----------------------------------------------\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n\n\n    const getFilteredUsers = async (filter) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(filter)\n        const raw = JSON.stringify(filter)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    const getUserByQuery = async (query) => {\n        setIsLoading(true)\n        setShowModal(true)\n\n        console.log(query)\n        const raw = JSON.stringify(query)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/users/filter`, requestOptions)\n            const data = await response.json()\n\n            console.log(data)\n            if (data.users) {\n                setUsers(data.users)\n                closeModal()\n                return\n            }\n\n            getMessage(data.message)\n            setIsLoading(false)\n\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Nieco sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    return (\n        <UserContext.Provider\n            value={{\n                isUpdating,\n                activeIndex,\n                handleChangeFilterItem,\n                filterItems,\n                users,\n                user,\n                totalCount,\n                // getUsers,\n                getUser,\n                handleChange,\n                handleParameterChange,\n                handleCompanyChange,\n                updateUser,\n                resetUser,\n                formToShow,\n                switchFormButtons,\n                toggleUserForm,\n                createUser,\n                getFilteredUsers,\n                getUserByQuery,\n            }}\n        >\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserProvider","/imooptik-frontend/src/context/analytics/analytics.context.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.component.jsx",[],"/imooptik-frontend/src/components/popup/pop.up.styles.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.component.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.component.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.component.jsx",[],"/imooptik-frontend/src/sections/customers/customers.section.jsx",["734","735"],"import React, { useState, useContext, useEffect } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from \"../../components/section-navbar/section-navbar.component\"\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\nimport { userTabs } from '../../utils/user.utils'\n\nimport {\n    TableCol,\n    TableContainer,\n    TableHead,\n    TableRow,\n    UpdateButton,\n    DeleteButton\n} from './customers.styles'\n\nconst CustomersSection = () => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n    const { isAdmin } = useContext(AuthContext)\n    const [userItems, setUserItems] = useState([])\n    const [activeIndex, setActiveIndex] = useState(0)\n    const [filterQuery, setFilterQuery] = useState({\n        limit: 10,\n        skip: 0,\n        filters: {\n            admin: activeIndex\n        }\n    })\n\n    const { response, isLoading, refetch } = useFetchByQuery('api/admin/users/filter', filterQuery)\n\n    const {\n        // isLoading,\n        showModal,\n        message,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            setFilterQuery({\n                limit: 10,\n                skip: 0,\n                query: searchQuery\n            })\n            refetch()\n        }\n    }\n\n    const handleActiveIndexChange = (index) => {\n        setActiveIndex(index)\n        setFilterQuery({\n            limit: 10,\n            skip: 0,\n            filters: {\n                admin: index\n            }\n        })\n        refetch()\n    }\n\n    const getNextPage = () => {\n        if (userItems.length < 10) return\n        setFilterQuery({\n            ...filterQuery,\n            skip: filterQuery.skip + 10\n        })\n        refetch()\n\n    }\n\n    const getPrevPage = () => {\n        if (filterQuery.skip === 0) return\n        setFilterQuery({\n            ...filterQuery,\n            skip: filterQuery.skip - 10\n        })\n        refetch()\n\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n        if (response) {\n            setUserItems(response.users)\n            closeModal()\n        }\n    }, [isLoading])\n\n    useEffect(() => {\n        if (searchQuery === '') {\n            setFilterQuery({\n                limit: 10,\n                skip: 0,\n                filters: {\n                    admin: activeIndex\n                }\n            })\n            refetch()\n        }\n    }, [searchQuery])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleSearch={handleSearch}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('zakaznici/novy-zakaznik')}\n                title=\"Zákazníci\"\n            />\n\n            <SectionNavbar\n                items={isAdmin ? userTabs : [\n                    {\n                        id: 0,\n                        name: \"Zákazníci\",\n                        filter: 0,\n                    },]}\n                activeIndex={activeIndex}\n                setActiveIndex={handleActiveIndexChange}\n            />\n\n            <ScrollContainer>\n                <TableContainer>\n                    <TableHead>\n                        <TableCol>Meno a priezvisko</TableCol>\n                        <TableCol>Email</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {userItems && userItems.map((user, idx) => (\n                        <TableRow key={idx}>\n                            <TableCol>{user.name}</TableCol>\n                            <TableCol>{user.email}</TableCol>\n                            <TableCol>\n                                <UpdateButton onClick={() => push(`zakaznici/${user._id}`)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={() => alert(\"Pekný pokus! Tu velím zatiaľ ja :)\")}>Odstrániť</DeleteButton>\n                            </TableCol>\n                        </TableRow>\n                    ))}\n                </TableContainer>\n\n                <ListArrows\n                    listItems={userItems}\n                    handleClickPrev={getPrevPage}\n                    handleClickNext={getNextPage}\n                />\n            </ScrollContainer>\n\n        </section>\n    )\n}\n\nexport default CustomersSection\n","/imooptik-frontend/src/sections/orders/orders.section.jsx",["736"],"import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport OrderOverview from '../../components/order-overview/order-overview.component'\n// import OrderDeligateModal from '../../components/order-deligate-modal/order-deligate-modal.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport {\n    GoArrowSmallDown,\n    GoArrowSmallUp\n} from 'react-icons/go'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    tabItems\n} from '../../context/orders/orders.utils'\n\nimport {\n    TableHead,\n    OrdersTable,\n    TableCol,\n    IconContainer\n} from './orders.styles'\n\nconst OrdersSection = () => {\n    const { push } = useHistory()\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const [searchQuery, setSearchQuery] = useState('')\n    const [activeIndex, setActiveIndex] = useState(1)\n    const [orders, setOrders] = useState([])\n    const [fetchQueryObj, setFetchQueryObj] = useState({\n        limit: 10,\n        skip: 0,\n        sortBy: {\n            date: -1\n        },\n        filters: {\n            finished: false\n        }\n    })\n\n    const { isLoading: isFetching, response, refetch } = useFetchByQuery('api/admin/orders/filter', fetchQueryObj)\n\n    const handleRefetch = () => {\n        refetch()\n    }\n\n    const handleIndexChange = (idx) => {\n        setActiveIndex(idx)\n        if (idx === 1) {\n            setFetchQueryObj({\n                limit: 10,\n                skip: 0,\n                sortBy: {\n                    date: -1\n                },\n                filters: {\n                    finished: false\n                }\n            })\n        } else if (idx === 2) {\n            setFetchQueryObj({\n                limit: 10,\n                skip: 0,\n                sortBy: {\n                    date: -1\n                },\n                filters: {\n                    finished: true\n                }\n            })\n        } else if (idx === 3) {\n            setFetchQueryObj({\n                limit: 10,\n                skip: 0,\n                sortBy: {\n                    date: -1\n                },\n                filters: {\n                    status: \"cancelled\"\n                }\n            })\n        }\n        handleRefetch()\n    }\n\n    // const handleSearch = () => {\n    //     if (searchQuery !== '') {\n    //         setFetchQueryObj(prevValue => ({\n    //             ...prevValue,\n    //             eanCo\n    //         }))\n    //     }\n    // }\n\n    const getNextPage = () => {\n        if (orders.length < 10) return\n        setFetchQueryObj(prevValue => ({\n            ...prevValue,\n            skip: prevValue.skip + 10,\n        }))\n        refetch()\n    }\n\n    const getPrevPage = () => {\n        if (fetchQueryObj.skip === 0) return\n        setFetchQueryObj(prevValue => ({\n            ...prevValue,\n            skip: prevValue.skip - 10,\n        }))\n        refetch()\n    }\n\n    useEffect(() => {\n        if (!isFetching) {\n            if (response) {\n                if (activeIndex === 1) {\n                    setOrders(response?.orders)\n                } else {\n                    setOrders(response?.orders)\n                }\n                closeModal()\n            }\n        }\n    }, [isFetching, response, activeIndex])\n\n    console.log(response)\n\n\n    useEffect(() => {\n        return () => {\n            setActiveIndex(1)\n            setSearchQuery('')\n            setOrders([])\n            setFetchQueryObj({\n                limit: 10,\n                skip: 0,\n                sortBy: {\n                    date: -1\n                },\n                filters: {\n                    finished: false\n                }\n            })\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <SectionHeader\n                searchQuery={searchQuery}\n                // handleSearch={handleSearch}\n\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push(\"/dashboard/objednavky/nova-objednavka\")}\n                title=\"Objednávky\"\n            />\n\n            <SectionNavbar\n                items={tabItems}\n                activeIndex={activeIndex}\n                setActiveIndex={handleIndexChange}\n            />\n\n            <ScrollContainer>\n                <OrdersTable>\n                    <TableHead>\n                        <TableCol>ID</TableCol>\n                        <TableCol clickable onClick={() => {\n                            setFetchQueryObj((prevObj) => ({\n                                ...fetchQueryObj,\n                                sortBy: {\n                                    date: prevObj.sortBy.date === 1 ? -1 : 1\n                                }\n                            }))\n                            handleRefetch()\n                        }}>\n                            Dátum {fetchQueryObj.sortBy.date === 1 ? <IconContainer>\n                                <GoArrowSmallDown />\n                            </IconContainer> : <IconContainer>\n                                    <GoArrowSmallUp />\n                                </IconContainer>\n                            }\n                        </TableCol>\n                        <TableCol>Prevádzka</TableCol>\n                        <TableCol>Status</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {orders.map((order, idx) => (\n                        <OrderOverview key={idx} order={order} refetch={handleRefetch} />\n                    ))}\n                </OrdersTable>\n\n                <ListArrows\n                    listItems={orders}\n                    handleClickNext={getNextPage}\n                    handleClickPrev={getPrevPage}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\n\n\nexport default OrdersSection\n","/imooptik-frontend/src/sections/product/product.section.jsx",["737","738","739","740","741","742"],"/imooptik-frontend/src/sections/analytics/analytics.section.jsx",["743"],"/imooptik-frontend/src/components/custom-button/custom-button.component.jsx",[],"/imooptik-frontend/src/sections/blog-posts/blog-posts.section.jsx",["744","745","746","747"],"import React, { useState, useEffect, useContext } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from \"../../components/scroll-container/scroll-container.component\"\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    PostContainer,\n    PostImage,\n    PostContent,\n    Options,\n    UpdateButton,\n    DeleteButton\n} from './blog-posts.styles'\n\nconst BlogPosts = () => {\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const { postsCount, handlePostDelete } = useContext(BlogContext)\n    const { push } = useHistory()\n\n    const [posts, setPosts] = useState([])\n\n    const [filterQuery, setFilterQuery] = useState({\n        limit: 10,\n        sortBy: {\n            date: -1\n        },\n        // query: \"\"\n    })\n    const [searchQuery, setSearchQuery] = useState('')\n\n\n\n    const [activeIndex, setActiveIndex] = useState(0)\n    const items = [\n        {\n            id: 0,\n            name: \"Zostupne\"\n        },\n        {\n            id: 1,\n            name: \"Vzostupne\"\n        },\n    ]\n\n    const blogsData = useFetchByQuery('api/blogs/filter', filterQuery)\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n                query: searchQuery\n            })\n            blogsData.refetch()\n        }\n    }\n\n    const handlePostDeleteClick = (postID) => {\n        handlePostDelete(postID)\n        blogsData.refetch()\n    }\n\n    useEffect(() => {\n        if (searchQuery === '') {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n            })\n            blogsData.refetch()\n        }\n    }, [searchQuery])\n\n    useEffect(() => {\n        if (activeIndex === 0) {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n                // query: \"\"\n            })\n            blogsData.refetch()\n        } else {\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: 1\n                },\n                // query: \"\"\n            })\n            blogsData.refetch()\n        }\n    }, [activeIndex])\n\n    useEffect(() => {\n        if (!blogsData.isLoading) {\n            setPosts(blogsData.response?.blogs)\n        }\n    }, [blogsData.isLoading])\n\n    useEffect(() => {\n        return () => {\n            closeModal()\n            setSearchQuery('')\n            setActiveIndex(0)\n            setPosts([])\n            setFilterQuery({\n                limit: 10,\n                sortBy: {\n                    date: -1\n                },\n            })\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                searchQuery={searchQuery}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleSearch={handleSearch}\n                handleAddButton={() => push('blog/novy-prispevok')}\n                count={postsCount}\n                title=\"Blog\"\n            />\n\n            <SectionNavbar\n                items={items}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n            />\n\n            <ScrollContainer>\n                {posts && posts.length ? posts.map(post => (\n                    <PostContainer key={post._id}>\n                        <PostImage>\n                            {post.image && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${post.image.imagePath}`} alt={post.image.alt} />}\n                        </PostImage>\n                        <PostContent>\n                            <h2>{post.name}</h2>\n                            <p>{post.description}</p>\n                        </PostContent>\n                        <Options>\n                            <UpdateButton onClick={() => push(`blog/${post._id}`)}>Upraviť</UpdateButton>\n                            <DeleteButton onClick={() => handlePostDeleteClick(post._id)}>Vymazať</DeleteButton>\n                        </Options>\n                    </PostContainer>\n                )) : (\n                        <div>\n                            Žiadne príspevky\n                        </div>\n                    )}\n\n                <ListArrows\n                    listItems={posts}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BlogPosts\n","/imooptik-frontend/src/sections/no-permission/no-permission.section.jsx",[],"/imooptik-frontend/src/sections/post/post.section.jsx",["748","749","750"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BlogContext } from '../../context/blog/blog.context'\nimport { ImageContext } from '../../context/image/image.context'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport CustomTextarea from '../../components/custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../../components/custom-checkbox/custom-checkbox.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport ModalImage from '../../components/modal-images/modal-images.component'\nimport { Quill } from 'react-quill'\n\nimport {\n    Header,\n    GridContainer,\n    PostImage,\n    DeleteButton,\n    AddButton,\n    Title,\n    ContentTextare,\n    Container,\n} from './post.styles'\n\nconst PostSection = () => {\n    const { id } = useParams()\n    const { push } = useHistory()\n    const {\n        createPost,\n        isLoading,\n        message,\n        showLoading,\n        setIsLoading,\n        getPost,\n        post,\n        handlePostUpdate,\n        resetBlog\n    } = useContext(BlogContext)\n    const { selectedImage, setSelectedImage } = useContext(ImageContext)\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [content, setContent] = useState('')\n    const [image, setImage] = useState('')\n    const [draft, toggleDraft] = useState(false)\n    const [showImageModal, setImageModal] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (image.length <= 0) return\n        if (content.length <= 0) return\n\n        if (id === 'novy-prispevok') {\n            createPost(image, title, description, draft, content)\n        } else {\n            handlePostUpdate(title, description, draft, content, image, id)\n        }\n\n        push('/dashboard/blog')\n\n    }\n\n    useEffect(() => {\n        setSelectedImage(null)\n\n        if (id !== 'novy-prispevok') {\n            getPost(id)\n            setIsUpdating(true)\n        }\n    }, [id])\n\n    useEffect(() => {\n        if (id !== 'novy-prispevok') {\n            console.log(post)\n            if (post) {\n                console.log(post)\n                setTitle(post.name)\n                setDescription(post.description)\n                setContent(post.html)\n                toggleDraft(post.draft)\n                if (post.image) {\n                    setImage(post.image._id)\n                    setSelectedImage(post.image)\n                }\n            }\n        }\n    }, [post])\n\n    useEffect(() => {\n        return () => {\n            resetBlog()\n            setTitle('')\n            setDescription('')\n            setContent('')\n            setImage('')\n            toggleDraft(false)\n            setImageModal(false)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {isLoading && <Popup loading={showLoading} title={message} close={() => setIsLoading(false)} />}\n            {showImageModal && <ModalImage close={() => setImageModal(false)} setImage={setImage} />}\n\n            <Header>\n                <div>\n                    <h1>Post</h1>\n                </div>\n                <div>\n                    <CustomCheckbox\n                        label='Draft'\n                        isActive={draft}\n                        handleClick={() => toggleDraft(prevValue => !prevValue)}\n                    />\n                    <DeleteButton>Vymazať</DeleteButton>\n                    <AddButton type='submit'>{isUpdating ? \"Upraviť príspevok\" : \"Pridať príspevok\"}</AddButton>\n                </div>\n            </Header>\n\n            <ScrollContainer>\n\n                <GridContainer>\n                    <Container>\n                        <h2>Informácia</h2>\n                        <CustomInput\n                            label=\"Nadpis\"\n                            type='text'\n                            name='title'\n                            value={title}\n                            handleChange={(e) => setTitle(e.target.value)}\n                            required\n                        />\n                        <CustomTextarea\n                            label=\"Popis\"\n                            name='description'\n                            rows='5'\n                            value={description}\n                            handleChange={(e) => setDescription(e.target.value)}\n                            required\n                        />\n                        <h2>Titulná fotka</h2>\n                        <PostImage onClick={() => setImageModal(true)} hasImage={selectedImage}>\n                            {!selectedImage && \"Vybrať obrázok\"}\n                            {selectedImage && <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${selectedImage.imagePath}`} alt={selectedImage.alt} />}\n                        </PostImage>\n                    </Container>\n                    <Container>\n                        <Title>Obsah</Title>\n                        <QuillToolbar />\n                        <ContentTextare\n                            value={content}\n                            onChange={setContent}\n                            modules={modules}\n                            formats={formats}\n                        />\n                    </Container>\n\n                </GridContainer>\n\n            </ScrollContainer>\n        </form>\n    )\n}\n\n\nconst CustomUndo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n        />\n    </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n        />\n    </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n    this.quill.history.undo();\n}\nfunction redoChange() {\n    this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n    \"arial\",\n    \"comic-sans\",\n    \"courier-new\",\n    \"georgia\",\n    \"helvetica\",\n    \"lucida\"\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nconst modules = {\n    toolbar: {\n        container: \"#toolbar\",\n        handlers: {\n            undo: undoChange,\n            redo: redoChange\n        }\n    },\n    history: {\n        delay: 500,\n        maxStack: 100,\n        userOnly: true\n    }\n};\n\n// Formats objects for setting up the Quill editor\nconst formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"align\",\n    \"strike\",\n    \"script\",\n    \"blockquote\",\n    \"background\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"color\",\n    \"code-block\"\n];\n\n// Quill Toolbar component\nconst QuillToolbar = () => (\n    <div id=\"toolbar\" className=\"toolbar\">\n        <span className=\"ql-formats\">\n            <select className=\"ql-size\" defaultValue=\"medium\">\n                <option value=\"extra-small\">Size 1</option>\n                <option value=\"small\">Size 2</option>\n                <option value=\"medium\">Size 3</option>\n                <option value=\"large\">Size 4</option>\n            </select>\n            <select className=\"ql-header\" defaultValue=\"3\">\n                <option value=\"1\">Heading</option>\n                <option value=\"2\">Subheading</option>\n                <option value=\"3\">Normal</option>\n            </select>\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n        </span>\n        <span className=\"ql-formats\">\n            <select className=\"ql-align\" />\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n                <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n                <CustomRedo />\n            </button>\n        </span>\n    </div>\n);\n\n\nexport default PostSection\n","/imooptik-frontend/src/sections/booking/booking.section.jsx",["751","752","753","754"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../../context/auth/auth.context'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport BookingCalendarOverview from \"../../components/booking-calendar-overview/booking-calendar-overview.component\"\nimport WeekCalendarProvider from '../../context/week-calendar/week-calendar.context'\n\nimport Calendar from '../../components/calendar/calendar.component'\nimport WeekDays from '../../components/calendar-weekdays/calendar-weekdays.component'\nimport BookingAppoinments from '../../components/booking-appoinments/booking-appoinment.component'\nimport BookingCalendarBookings from '../../components/booking-calendar-bookings/booking-calendar-bookings.component'\n\nimport { useFetch } from '../../hooks/useFetch'\nimport { calendarFormat, months } from '../../utils/calendar.utils'\n\nimport {\n    AiOutlineLeft,\n    AiOutlineRight,\n    AiOutlineDownCircle,\n    AiOutlineUpCircle\n} from 'react-icons/ai'\n\nimport {\n    Header,\n    Title,\n    GridRow,\n    CalendarGridContainer,\n    CalendarHeading,\n    CalendarHeader,\n    CalendarFormat,\n    CalendarMonthContainer,\n    IconContainer,\n    UpdateButton\n} from './booking.styles'\n\nconst BookingSection = () => {\n    const { isAdmin, currentUser, isOptometrist } = useContext(AuthContext)\n    const { showModal, setShowModal, message, closeModal } = useContext(LoadingModalContext)\n    const { push } = useHistory()\n    // const [showModal, setShowModal] = useState(true)\n    const [showPremisesSection, setShowPremisesSection] = useState(true)\n    const [activeCalendarFormat, setActiveCalendarFormat] = useState(1)\n    const [calendars, setCalendars] = useState([])\n    const [selectedCalendar, setSelectedCalendar] = useState(null)\n    const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth())\n    const [selectedYear, setSelectedYear] = useState(new Date().getFullYear())\n    const [calendarWeekIndex, setCalendarWeekIndex] = useState(0)\n    const [selectedDay, setSelectedDay] = useState(null)\n\n    const [showUserBooking, setShowUserBooking] = useState(false)\n\n\n    const handleOpenUserBookingModal = (dayData) => {\n        console.log(\"dayData\")\n        console.log(\"dayData\")\n        console.log(dayData)\n        if (dayData !== null) {\n            setSelectedDay({\n                ...dayData,\n            })\n        }\n        setShowUserBooking(true)\n    }\n\n    const { isLoading, response } = useFetch('api/booking/calendars')\n\n    const handleShowCalendarClick = (calendarId) => {\n        if (!calendarId) return\n        setSelectedCalendar(calendarId)\n        setShowPremisesSection(false)\n        resetCalendarToDefault()\n    }\n\n    const getPrevWeek = () => {\n        if (calendarWeekIndex - 1 < 0) {\n            if (selectedMonth === 0) {\n                setSelectedYear(prevValue => prevValue - 1)\n                setSelectedMonth(11)\n                setCalendarWeekIndex(Math.ceil(new Date(selectedYear, selectedMonth, 0).getDate() / 7) - 1)\n\n            } else {\n                setSelectedMonth(prevValue => prevValue - 1)\n                setCalendarWeekIndex(Math.ceil(new Date(selectedYear, selectedMonth, 0).getDate() / 7) - 1)\n            }\n        } else {\n            setCalendarWeekIndex(prevValue => prevValue - 1)\n        }\n    }\n\n    const getNextWeek = () => {\n        const lastDayIndex = new Date(selectedYear, selectedMonth, 0).getDate()\n\n        if (((calendarWeekIndex) * 7) >= lastDayIndex - 7) {\n            setCalendarWeekIndex(0)\n            setSelectedMonth(prevValue => prevValue + 1)\n\n            if (selectedMonth === 11) {\n                setSelectedYear(prevValue => prevValue + 1)\n                setSelectedMonth(0)\n                setCalendarWeekIndex(0)\n\n            }\n        } else {\n            setCalendarWeekIndex(prevValue => prevValue + 1)\n        }\n    }\n\n    const getPrevMonth = () => {\n        if (selectedMonth === 0) {\n            setSelectedYear(prevValue => prevValue - 1)\n            setSelectedMonth(11)\n        } else {\n            setSelectedMonth(prevValue => prevValue - 1)\n        }\n    }\n\n    const getNextMonth = () => {\n        if (selectedMonth === 11) {\n            setSelectedYear(prevValue => prevValue + 1)\n            setSelectedMonth(0)\n        } else {\n            setSelectedMonth(prevValue => prevValue + 1)\n        }\n\n    }\n\n    const resetCalendarToDefault = () => {\n        setSelectedMonth(new Date().getMonth())\n        setSelectedYear(new Date().getFullYear())\n        setCalendarWeekIndex(Math.ceil(new Date().getDate() / 7) - 1)\n        // setSelectedDay(null)\n    }\n\n    const handleCalendarBlockClick = (dayData) => {\n        // if (!dayData.bookings) return\n        // if (!dayData.bookingDate) return\n\n        // setSelectedCalendar(null)\n        // setSelectedDay(dayData)\n        console.log(dayData)\n        setCalendarWeekIndex(Math.ceil(dayData.dayNumber / 7) - 1)\n        setActiveCalendarFormat(1)\n    }\n\n    useEffect(() => {\n        if (!isLoading) {\n            if (response) {\n                if (isAdmin) {\n                    setCalendars(response.calendars)\n                    const userCalendar = response.calendars.find(calendar => calendar.premises === currentUser.premises)\n                    handleShowCalendarClick(userCalendar?._id)\n                    setShowModal(false)\n                } else {\n                    setCalendars(response.calendars.filter(calendar => calendar.premises === currentUser.premises))\n                    const userCalendar = response.calendars.find(calendar => calendar.premises === currentUser.premises)\n                    handleShowCalendarClick(userCalendar?._id)\n                    setShowModal(false)\n                }\n                closeModal()\n            }\n        }\n    }, [isLoading])\n\n    useEffect(() => {\n        console.log(\"unmount\")\n        return () => {\n            setShowModal(true)\n            setShowPremisesSection(true)\n            setActiveCalendarFormat(0)\n            setCalendars([])\n            setSelectedCalendar(null)\n            setSelectedMonth(new Date().getMonth())\n            setSelectedYear(new Date().getFullYear())\n            setCalendarWeekIndex(0)\n            setSelectedDay(null)\n            closeModal()\n        }\n    }, [])\n\n    console.log(calendars)\n    console.log(selectedCalendar)\n    console.log(showUserBooking)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={() => setShowModal(false)} />}\n            {isAdmin && <Header>\n                <div>\n                    <h1>Rezervácie</h1>\n                </div>\n                <div>\n                    <UpdateButton onClick={() => handleOpenUserBookingModal(null)}>Pridať rezerváciu</UpdateButton>\n                    <UpdateButton onClick={() => push('rezervacie/novy-kalendar')}>Pridať kalendár</UpdateButton>\n                </div>\n            </Header>}\n\n            {(!isOptometrist && !isAdmin) && (\n                <Header>\n                    <div>\n                        <h1>Rezervácie</h1>\n                    </div>\n                    {selectedCalendar ? <div>\n                        <UpdateButton onClick={() => handleOpenUserBookingModal(null)}>Pridať rezerváciu</UpdateButton>\n                    </div> : (\n                            <div>\n                                <p>K vašemu účtu nieje priradená prevádzka</p>\n                            </div>\n                        )}\n                </Header>\n            )}\n\n            {(isOptometrist && !isAdmin) && (\n                <Header>\n                    <div>\n                        <h1>Rezervácie</h1>\n                    </div>\n                    {selectedCalendar ? <div>\n                        <UpdateButton onClick={() => handleOpenUserBookingModal(null)}>Pridať rezerváciu</UpdateButton>\n                        <UpdateButton onClick={() => push(`rezervacie/${selectedCalendar}`)}>Upraviť kalendár</UpdateButton>\n                    </div> : (\n                            <div>\n                                <p>K vašemu účtu nieje priradená prevádzka</p>\n                            </div>\n                        )}\n                </Header>\n            )}\n\n            <ScrollContainer>\n                {isAdmin && <CalendarHeading>\n                    <Title>Pobočky</Title>\n                    <div onClick={() => setShowPremisesSection(prevValue => !prevValue)}>\n                        <p>\n                            {calendars.find(calendar => calendar._id === selectedCalendar)?.name}\n                        </p>\n                        <IconContainer>\n                            {showPremisesSection ? <AiOutlineUpCircle /> : <AiOutlineDownCircle />}\n                        </IconContainer>\n                    </div>\n                </CalendarHeading>}\n\n                {showPremisesSection && <GridRow>\n                    {calendars && calendars.map((calendar, idx) => (\n                        <BookingCalendarOverview\n                            key={idx}\n                            calendar={calendar}\n                            selectedCalendar={selectedCalendar}\n                            handleShowUpClick={() => handleShowCalendarClick(calendar._id)}\n                            handleUpdateClick={() => push(`rezervacie/${calendar._id}`)}\n                        />\n                    ))}\n                </GridRow>}\n\n                {selectedCalendar && (\n                    <React.Fragment>\n\n                        <CalendarHeader>\n                            <Title>Kalendár</Title>\n\n                            {activeCalendarFormat === 0 ? (\n                                <CalendarMonthContainer>\n                                    <button onClick={getPrevMonth}><AiOutlineLeft /></button>\n                                    <p>{months[selectedMonth]}</p>\n                                    <button onClick={getNextMonth}><AiOutlineRight /></button>\n                                </CalendarMonthContainer>\n                            ) : (\n                                    <CalendarMonthContainer>\n                                        <button onClick={getPrevWeek}><AiOutlineLeft /></button>\n                                        <div>\n                                            <p>{calendarWeekIndex + 1}</p>\n                                            <p>{months[selectedMonth]}</p>\n                                        </div>\n                                        <button onClick={getNextWeek}><AiOutlineRight /></button>\n                                    </CalendarMonthContainer>\n                                )}\n\n                            <ul>\n                                {calendarFormat.map((name, idx) => (\n                                    <CalendarFormat key={idx} isActive={activeCalendarFormat === idx} onClick={() => setActiveCalendarFormat(idx)}>{name}</CalendarFormat>\n                                ))}\n                            </ul>\n                        </CalendarHeader>\n                        <CalendarGridContainer>\n                            {activeCalendarFormat === 0 ? (\n                                <Calendar\n                                    calendar={selectedCalendar}\n                                    month={selectedMonth}\n                                    year={selectedYear}\n                                    handleCalendarBlockClick={handleCalendarBlockClick}\n                                />\n                            ) : (\n                                    <WeekCalendarProvider\n                                        calendar={selectedCalendar}\n                                        month={selectedMonth}\n                                        year={selectedYear}\n                                        weekIndex={calendarWeekIndex}\n                                        handleCalendarBlockClick={handleCalendarBlockClick}\n                                    >\n                                        <WeekDays\n                                            calendar={selectedCalendar}\n                                            month={selectedMonth}\n                                            year={selectedYear}\n                                            weekIndex={calendarWeekIndex}\n                                            handleCalendarBlockClick={handleCalendarBlockClick}\n                                            showUserBooking={showUserBooking}\n                                            setShowUserBooking={setShowUserBooking}\n                                            handleOpenUserBookingModal={handleOpenUserBookingModal}\n                                            selectedDay={selectedDay}\n                                            getNextWeek={getNextWeek}\n                                        />\n\n                                    </WeekCalendarProvider>\n                                )}\n                        </CalendarGridContainer>\n\n                        <BookingCalendarBookings calendarId={selectedCalendar} />\n                    </React.Fragment>\n                )}\n\n                {/* {selectedDay && (\n                    <BookingAppoinments\n                        day={selectedDay}\n                    />\n                )} */}\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default BookingSection\n","/imooptik-frontend/src/sections/order/order.section.jsx",["755","756","757"],"import React, { useContext, useState, useEffect } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { OrderContext } from '../../context/order/order.context'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from \"../../components/popup/pop-up.component\"\n\nimport SelectUserComponent from './steps/1-select-user/select-user.component'\nimport SelectProductComponent from \"./steps/2-select-product/select-product.component\"\nimport SelectLensesComponent from './steps/3-select-lenses/select-lenses.component'\nimport SummaryComponent from './steps/4-summary/summary.component'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport {\n    Header,\n} from './order.styles'\n\nconst OrderSection = () => {\n    const {\n        step,\n        order,\n        setOrder,\n        addUser,\n        resetOrder,\n        changeStep\n    } = useContext(OrderContext)\n\n    const { userId, orderId } = useParams()\n\n    const [hasChanged, setHasChanged] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleOrderChange = valueToAdd => {\n        setHasChanged(true)\n        const { name, value } = valueToAdd\n        setOrder({\n            ...order,\n            [name]: value\n        })\n    }\n\n    const {\n        getMessage,\n        setShowModal,\n        closeModal,\n        isLoading,\n        showModal,\n        message\n    } = useContext(LoadingModalContext)\n\n    const showErrorMessage = (message) => {\n        getMessage(message)\n        setShowModal(true)\n    }\n\n    const userData = useFetchById(\"api/admin/users\", userId, !(userId !== 'nova-objednavka'))\n    const orderData = useFetchById(\"api/admin/orders\", orderId, !orderId)\n\n    const handleAddNextProduct = () => {\n        changeStep('findProduct')\n        if (order?.product) {\n            if (order?.lenses) {\n                delete order[\"lenses\"]\n                delete order[\"product\"]\n            } else {\n                delete order[\"product\"]\n            }\n            setOrder({ ...order })\n        }\n    }\n\n    useEffect(() => {\n        if (userId !== 'nova-objednavka' && orderId) {\n            setIsUpdating(true)\n            changeStep('summary')\n            if (orderData.response) {\n                addUser(orderData.response.order.orderedBy)\n                setOrder({\n                    ...order,\n                    order: orderData.response.order,\n                    user: orderData.response.order.orderedBy,\n                    combinedProducts: orderData.response.order.combinedProducts\n                })\n            }\n        } else if (userId !== 'nova-objednavka' && orderId === undefined) {\n            changeStep('select-product')\n            if (userData.response) {\n                addUser(userData.response.user)\n            }\n        }\n\n    }, [userId, orderId, userData.response, orderData.response])\n\n    useEffect(() => {\n        if (userData.isLoading) return\n        addUser(userData.response.user)\n\n    }, [userData.isLoading])\n\n    useEffect(() => {\n        return () => {\n            changeStep('select-user')\n            resetOrder({})\n            setHasChanged(false)\n            setIsUpdating(false)\n        }\n    }, [])\n\n    // console.log(\"ORDER OBJECT\")\n    // console.log(userData.isLoading)\n\n    return (\n\n        <section>\n            <Prompt\n                when={hasChanged}\n                message={\"Máte nedokončenú objednávku, skutočne chcete odísť?\"}\n            />\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <Header>\n                <div>\n                    <h1>{isUpdating ? `Objednavka číslo ${order?.order?.customId}` : \"Nová objednávka\"}</h1>\n                </div>\n            </Header>\n            <ScrollContainer>\n                <div>\n                    {step === 'select-user' && (\n                        <SelectUserComponent\n                            next={() => changeStep('select-product')}\n                            addToOrder={handleOrderChange}\n                        />\n                    )}\n                    {step === 'select-product' && (\n                        <SelectProductComponent\n                            back={() => changeStep(\"select-user\")}\n                            next={changeStep}\n                            showErrorMessage={showErrorMessage}\n                        />\n                    )}\n                    {step === 'select-lenses' && (\n                        <SelectLensesComponent\n                            back={() => changeStep(\"select-product\")}\n                            next={() => changeStep('summary')}\n                        />\n                    )}\n                    {step === 'summary' && (\n                        <SummaryComponent\n                            isUpdating={isUpdating}\n                            back={() => changeStep(\"select-lenses\")}\n                            addNextProduct={handleAddNextProduct}\n                            setHasChanged={setHasChanged}\n                            refetchUser={userData.refetch}\n                        />\n                    )}\n                </div>\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default OrderSection\n","/imooptik-frontend/src/sections/coupons/coupons.section.jsx",["758","759"],"import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { CouponsContext } from '../../context/coupons/coupons.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\n\nimport Popup from '../../components/popup/pop-up.component'\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport {\n    // CouponOverviewContainer,\n    DeleteButton,\n    OpenButton,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TableCol\n} from './coupons.styles'\n\nconst CouponsSection = () => {\n    // const [searchQuery, setSearchQuery] = useState('')\n    const { push } = useHistory()\n\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n\n    const {\n        coupons,\n        getCoupons,\n        deleteCoupon\n    } = useContext(CouponsContext)\n\n    useEffect(() => {\n        if (!coupons) {\n            getCoupons()\n        }\n    }, [coupons])\n\n    console.log(coupons)\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <SectionHeader\n                title='Kupóny'\n                // searchQuery={searchQuery}\n                // handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('kupony/novy-kupon')}\n            />\n            <ScrollContainer>\n\n                <TableContainer>\n                    <TableHead>\n                        <TableCol>#</TableCol>\n                        <TableCol>Kód</TableCol>\n                        <TableCol>Typ</TableCol>\n                        <TableCol>Hodnota</TableCol>\n                        <TableCol>Možnosti</TableCol>\n                    </TableHead>\n                    {coupons && coupons.map((coupon, idx) => (\n                        <TableRow key={idx}>\n                            <TableCol>{idx + 1}</TableCol>\n                            <TableCol>{coupon.code}</TableCol>\n                            <TableCol>{coupon.type === \"percentage\" ? \"Percentá\" : \"Fixná suma\"}</TableCol>\n                            <TableCol>{coupon.value}</TableCol>\n                            <TableCol>\n                                <OpenButton onClick={() => push(`kupony/${coupon._id}`)}>Zobraziť</OpenButton>\n                                <DeleteButton onClick={() => deleteCoupon(coupon._id)}>Ostrániť</DeleteButton>\n                            </TableCol>\n                        </TableRow>\n                    ))}\n                </TableContainer>\n                <ListArrows\n                    listItems={coupons}\n                />\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CouponsSection\n","/imooptik-frontend/src/sections/e-shop/e-shop.section.jsx",["760","761"],"import React, { useState, useContext, useEffect } from 'react'\n// import { AuthContext } from '../..//context/auth/auth.context'\nimport { WarehouseContext } from '../../context/warehouse/warehouse.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useHistory } from 'react-router-dom'\n\n\nimport SectionHeader from '../../components/section-header/section-header.component'\nimport SectionNavbar from '../../components/section-navbar/section-navbar.component'\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport ProductOverview from '../../components/product-overview/product-overview.component'\nimport Popup from '../../components/popup/pop-up.component'\nimport EshopFilterModal from '../../components/modal-eshop-filter/modal-eshop-filter.component'\n\nimport ListArrows from '../../components/list-arrows/list-arrows.component'\n\nimport {\n    FlexContainer,\n    Filterbutton,\n    ResetButton\n} from './e-shop.styles'\n\nconst EshopSection = () => {\n    const { push } = useHistory()\n    const { closeModal, showModal, isLoading, message } = useContext(LoadingModalContext)\n    const [searchQuery, setSearchQuery] = useState('')\n    const [productItems, setProductItems] = useState([])\n    const [queryFilter, setQueryFilter] = useState({\n        limit: 10,\n        skip: 0,\n    })\n\n    const [showFilterModal, setShowFilterModal] = useState(false)\n    const [hasFilter, setHasFilter] = useState(false)\n\n\n    const {\n        activePremisesTab,\n        products,\n        retailPremisesTabs,\n        getProductsByQuery,\n        handleChangePremisesTab,\n        productCategoryTypeTabs,\n        activeCategoryTypeTab,\n        handleChangeCategoryTypeTab,\n        deleteProduct,\n        deleteLenses,\n    } = useContext(WarehouseContext)\n\n    const applyFilter = filter => {\n        getProductsByQuery(filter)\n        setShowFilterModal(false)\n        setHasFilter(true)\n    }\n\n    const resetFilter = () => {\n        getProductsByQuery({\n            limit: 10,\n            skip: 0,\n        })\n        setShowFilterModal(false)\n        setHasFilter(false)\n    }\n\n    const handleSearch = () => {\n        if (searchQuery !== '') {\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    query: searchQuery\n                })\n            }\n        }\n    }\n\n    const handleDeleteProduct = (id) => {\n        deleteProduct(id)\n    }\n\n    useEffect(() => {\n        if (!products) {\n            getProductsByQuery({\n                limit: 10\n            })\n        }\n        if (products) {\n            setProductItems(products)\n        }\n    }, [products])\n\n    useEffect(() => {\n        if (!searchQuery && products) {\n            if (activeCategoryTypeTab === 0) {\n                getProductsByQuery({\n                    limit: 10\n                })\n            }\n        }\n    }, [searchQuery])\n\n\n    const getNextPage = () => {\n        if (productItems.length < 10) return\n        getProductsByQuery({\n            ...queryFilter,\n            skip: queryFilter.skip + 10\n        })\n        setQueryFilter({\n            ...queryFilter,\n            skip: queryFilter.skip + 10\n        })\n    }\n\n    const getPrevPage = () => {\n        if (queryFilter.skip === 0) return\n        getProductsByQuery({\n            ...queryFilter,\n            skip: queryFilter.skip - 10\n        })\n        setQueryFilter({\n            ...queryFilter,\n            skip: queryFilter.skip - 10\n        })\n    }\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {showFilterModal && <EshopFilterModal applyFilter={applyFilter} resetFilter={resetFilter} close={() => setShowFilterModal(false)} />}\n\n            <SectionHeader\n                title=\"Sklad\"\n                searchQuery={searchQuery}\n                handleSearch={handleSearch}\n                handleChange={e => setSearchQuery(e.target.value)}\n                handleAddButton={() => push('sklad/novy-produkt')}\n\n            />\n\n            <SectionNavbar\n                items={retailPremisesTabs}\n                activeIndex={activePremisesTab}\n                setActiveIndex={handleChangePremisesTab}\n            />\n\n            <FlexContainer>\n                <SectionNavbar\n                    items={productCategoryTypeTabs}\n                    activeIndex={activeCategoryTypeTab}\n                    setActiveIndex={handleChangeCategoryTypeTab}\n                />\n                {activeCategoryTypeTab === 0 && <div>\n                    {hasFilter && <ResetButton onClick={resetFilter}>reset</ResetButton>}\n                    <Filterbutton onClick={() => setShowFilterModal(true)}>Filter</Filterbutton>\n                </div>}\n            </FlexContainer>\n\n            <ScrollContainer>\n                {productItems.map((product, idx) => (\n                    <ProductOverview\n                        key={idx}\n                        product={product}\n                        activePremisesTab={activePremisesTab}\n                        handleUpdateButton={() => push(`sklad/${product._id}`)}\n                        handleDeleteButton={activeCategoryTypeTab === 0 ? () => handleDeleteProduct(product._id) : () => deleteLenses((product._id))}\n                    />\n                ))}\n\n                <ListArrows\n                    listItems={productItems}\n                    handleClickPrev={getPrevPage}\n                    handleClickNext={getNextPage}\n                />\n            </ScrollContainer>\n        </section >\n    )\n}\n\nexport default EshopSection\n","/imooptik-frontend/src/sections/calendar/calendar.section.jsx",["762"],"import React, { useState, useContext, useEffect } from 'react'\nimport { BookingContext } from '../../context/booking/booking.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { useParams } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport CustomRetailSelect from '../../components/custom-select/custom-select.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport Popup from '../../components/popup/pop-up.component'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport { retailNames } from '../../utils/warehouse.utils'\nimport {\n    dayNames,\n    calendarTimes,\n    formatCalendarObj,\n    formatExceptDays,\n    formatExceptDaysToObj\n} from '../../utils/calendar.utils'\n\nimport {\n    Header,\n    CreateCalendarButton,\n    Container,\n    GridContainer,\n    ContainerRow,\n    TableHead,\n    TableCol,\n    TableRow,\n    AddDayButton,\n    DeleteCalendarButton\n} from './calendar.styles'\n\nconst CalendarSection = () => {\n    const {\n        closeModal,\n        getMessage,\n        setShowModal,\n        isLoading,\n        message,\n        showModal,\n    } = useContext(LoadingModalContext)\n    const { isAdmin } = useContext(AuthContext)\n    const { createCalendar, updateCalendar, deleteCalendar } = useContext(BookingContext)\n    const { calendarId } = useParams()\n    const { response, isLoading: isFetching } = useFetchById(\"api/booking/calendars\", calendarId, calendarId === 'novy-kalendar')\n    const [calendar, setCalendar] = useState({})\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleCalendarValueChange = (e) => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete calendar[name]\n            setCalendar({\n                ...calendar\n            })\n            return\n        }\n\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const handleCalendarTimeChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = calendar[name] ? calendar[name] : ['X', 'X', 'X', 'X', 'X', 'X', 'X']\n        arr[idx] = value\n\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: arr\n        }))\n    }\n\n    const handleCalendarExceptDaysChange = (e, idx) => {\n        const { name, value } = e.target\n        let arr = calendar[name]\n        arr[idx] = value\n\n        setCalendar(prevValue => ({\n            ...prevValue,\n            [name]: arr\n        }))\n    }\n\n    const handleAddNewDay = () => {\n        setCalendar(prevValue => ({\n            ...prevValue,\n            exceptDays: prevValue.exceptDays ? [...prevValue.exceptDays, \"\"] : [\"\"]\n        }))\n    }\n\n    const handleSubmit = () => {\n        if (!calendar.name) {\n            getMessage(\"Meno Kalendára je povinné\")\n            setShowModal(true)\n            return\n        }\n        if (!calendar.premises) {\n            getMessage(\"Nie je zvolená prevádzka ku ktorej patrí kalendár\")\n            setShowModal(true)\n            return\n        }\n        if (!calendar.endTimes && !calendar.startTimes) {\n            getMessage(\"Nie sú vyplnené časy na prehliadky\")\n            setShowModal(true)\n            return\n        }\n        if (!calendar.interval) {\n            getMessage(\"Nie je zvolený interval\")\n            setShowModal(true)\n            return\n        }\n\n        if (isUpdating) {\n            const calendarToUpdate = formatCalendarObj(calendar)\n\n            console.log(\"CALENDAR BEFORE UPDATE\")\n            console.log(calendarToUpdate)\n\n\n            updateCalendar(calendarToUpdate, calendar._id)\n        } else {\n            let calendarToCreate = {}\n            if (calendar.exceptDays) {\n                calendarToCreate = {\n                    ...calendar,\n                    exceptDays: formatExceptDaysToObj(calendar.exceptDays)\n                }\n            } else {\n                calendarToCreate = { ...calendar }\n            }\n\n\n            console.log(\"CALENDAR BEFORE CREATE\")\n            console.log(calendarToCreate)\n            createCalendar(calendarToCreate)\n        }\n    }\n\n    useEffect(() => {\n        if (isFetching) return\n        if (response.calendar) {\n            setIsUpdating(true)\n            if (response.calendar.exceptDays) {\n                const exceptDaysArr = formatExceptDays(response.calendar.exceptDays)\n\n                setCalendar({\n                    ...response.calendar,\n                    exceptDays: exceptDaysArr\n                })\n                closeModal()\n            } else {\n                setCalendar(response.calendar)\n                closeModal()\n            }\n        }\n    }, [isFetching])\n\n    useEffect(() => {\n        return () => {\n            setIsUpdating(false)\n            setCalendar({})\n        }\n    }, [])\n\n    return (\n        <section>\n            {(showModal) && <Popup loading={isLoading} title={message} close={closeModal} />}\n            <Header>\n                <div>\n                    {isUpdating ? (\n                        <h1>Kalendár: {calendar?.name}</h1>\n                    ) : (\n                            <h1>Nový kalendár</h1>\n                        )}\n                </div>\n                <div>\n                    {isUpdating && <DeleteCalendarButton onClick={() => deleteCalendar(calendar?._id)}>Vymazať</DeleteCalendarButton>}\n                    <CreateCalendarButton onClick={handleSubmit}>{isUpdating ? \"Upraviť\" : \"Vytvoriť\"}</CreateCalendarButton>\n                </div>\n            </Header>\n            <ScrollContainer>\n                <GridContainer>\n                    <div>\n                        {isAdmin && <Container>\n                            <h3>Základné informácie</h3>\n                            <div>\n                                <h4>Kalendar je pre prevádzku</h4>\n                                <CustomRetailSelect\n                                    name='premises'\n                                    value={calendar?.premises || \"0\"}\n                                    listItems={retailNames}\n                                    defaultOption\n                                    defaultValue={0}\n                                    defaultLabel=\"Nezadané\"\n                                    handleChange={handleCalendarValueChange}\n                                />\n                            </div>\n                            <div>\n                                <h4>Meno kalendára</h4>\n                                <CustomInput\n                                    type=\"text\"\n                                    label='Meno*'\n                                    name=\"name\"\n                                    value={calendar?.name || \"\"}\n                                    handleChange={handleCalendarValueChange}\n                                />\n                            </div>\n                        </Container>}\n                        <Container>\n                            <h3>Dni kedy sa nerobia prehliadky</h3>\n                            {calendar?.exceptDays && calendar?.exceptDays?.map((value, idx) => (\n                                <div key={idx}>\n                                    <CustomInput\n                                        type=\"date\"\n                                        // label='Dátum'\n                                        name=\"exceptDays\"\n                                        value={value || \"\"}\n                                        handleChange={(e) => handleCalendarExceptDaysChange(e, idx)}\n                                    />\n                                </div>\n                            ))}\n                            <AddDayButton onClick={handleAddNewDay}>Pridať</AddDayButton>\n                        </Container>\n                    </div>\n\n                    <Container>\n                        <h3>Nastavenie kalendára</h3>\n\n                        <div>\n                            <h4>Interval medzi prehliadkami</h4>\n                            <select\n                                name='interval'\n                                value={calendar?.interval || \"\"}\n                                onChange={handleCalendarValueChange}\n                            >\n                                <option value={\"\"}>Nezadané</option>\n                                <option value={30}>30min</option>\n                                <option value={60}>60min</option>\n                            </select>\n                        </div>\n                        <div>\n                            <h4>Čas pred objednaním</h4>\n                            <CustomInput\n                                type=\"text\"\n                                label='Počet minút'\n                                name=\"allowMinutesBefore\"\n                                value={calendar?.allowMinutesBefore?.toString() || \"\"}\n                                handleChange={handleCalendarValueChange}\n                            />\n                        </div>\n                        <div>\n                            <h4>Koľko dní dopredu sa dá objednať</h4>\n                            <CustomInput\n                                type=\"text\"\n                                label='Počet dní'\n                                name=\"daysIntoFuture\"\n                                value={calendar?.daysIntoFuture?.toString() || \"\"}\n                                handleChange={handleCalendarValueChange}\n                            />\n                        </div>\n                    </Container>\n\n                    <ContainerRow>\n                        <h3>Ordinačné hodiny</h3>\n                        <TableHead>\n                            <TableCol isFirst>\n                                Čas \\ Den\n                            </TableCol>\n                            {dayNames.map((name, idx) => (\n                                <TableCol key={idx}>\n                                    {name}\n                                </TableCol>\n                            ))}\n                        </TableHead>\n                        <TableRow>\n                            <TableCol isFirst>\n                                Začiatok\n                            </TableCol>\n                            {[...Array(7)].map((value, idx) => (\n                                <TableCol key={idx}>\n                                    <select name='startTimes' value={calendar?.startTimes ? calendar?.startTimes[idx] : \"x\"} onChange={(e) => handleCalendarTimeChange(e, idx)}>\n                                        <option value={\"X\"}>Žiadný</option>\n                                        {calendarTimes.map(({ name, value }, idx) => (\n                                            <option key={idx} value={value}>{name}</option>\n                                        ))}\n                                    </select>\n                                </TableCol>\n                            ))}\n                        </TableRow>\n                        <TableRow>\n                            <TableCol isFirst>\n                                Koniec\n                            </TableCol>\n                            {[...Array(7)].map((value, idx) => (\n                                <TableCol key={idx}>\n                                    <select name='endTimes' value={calendar?.endTimes ? calendar?.endTimes[idx] : \"x\"} onChange={(e) => handleCalendarTimeChange(e, idx)}>\n                                        <option value={\"X\"}>Žiadný</option>\n                                        {calendarTimes.map(({ name, value }, idx) => (\n                                            <option key={idx} value={value}>{name}</option>\n                                        ))}\n                                    </select>\n                                </TableCol>\n                            ))}\n                        </TableRow>\n                    </ContainerRow>\n                </GridContainer>\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CalendarSection\n","/imooptik-frontend/src/sections/customer-profile/customer-profile.section.jsx",["763","764","765","766","767"],"import React, { useContext, useEffect, useState } from 'react'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { UserContext } from '../../context/user/user.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { useParams, Prompt } from 'react-router-dom'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport UserForm from '../../components/user-form/user-form.component'\nimport NewUserForm from '../../components/new-user-form/new-user-form.component'\n\nimport Popup from '../../components/popup/pop-up.component'\n\nimport {\n    Header,\n    DeleteProfileButton,\n    // Name,\n    SaveButton,\n} from './customer-profile.styles'\n\nconst CustomerProfile = () => {\n    const { id } = useParams()\n    const { isAdmin, isOptometrist } = useContext(AuthContext)\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal,\n    } = useContext(LoadingModalContext)\n\n    const {\n        isUpdating,\n        user,\n        getUser,\n        handleChange,\n        handleParameterChange,\n        handleCompanyChange,\n        updateUser,\n        resetUser,\n        formToShow,\n        switchFormButtons,\n        toggleUserForm,\n        createUser,\n    } = useContext(UserContext)\n\n    const [userObj, setUserObj] = useState({})\n    const [hasChanges, setHasChanges] = useState(false)\n\n    const handleUserChange = (e) => {\n        setHasChanges(true)\n        const { name, value } = e.target\n\n        handleChange(e)\n\n\n        if (value === '') {\n            delete userObj[name]\n            // delete userObj.company[]\n            return\n        }\n\n        setUserObj({\n            ...userObj,\n            [name]: value\n        })\n    }\n\n    const handleLensesParameterChange = (e, idx) => {\n        setHasChanges(true)\n\n        const { name, value } = e.target\n        let arr = user.lenses[name]\n        arr[idx] = value\n\n\n        handleParameterChange(e, idx)\n        setUserObj({\n            ...userObj,\n            lenses: {\n                ...user.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n\n    const handleCompanyAddressChange = (e) => {\n        setHasChanges(true)\n\n        const { name, value } = e.target\n        handleCompanyChange(e)\n\n        console.log(value)\n\n        if (value === '') {\n            delete userObj.company[name]\n            if (Object.keys(userObj.company).length === 0) {\n                delete userObj[\"company\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setUserObj({\n            ...userObj,\n            company: {\n                ...userObj.company,\n                [name]: value\n            }\n        })\n    }\n\n    const handleSubmit = (e, path) => {\n        e.preventDefault()\n        setHasChanges(false)\n\n        if (id === 'novy-zakaznik') {\n            console.log(\"Create new user\")\n            if (userObj.fName || userObj.lName) {\n                delete userObj[\"fName\"]\n                delete userObj[\"lName\"]\n            }\n            createUser(userObj, path)\n        } else {\n            console.log(\"Update existing user\")\n            if (userObj.fName || userObj.lName) {\n                delete userObj[\"fName\"]\n                delete userObj[\"lName\"]\n            } else if (!userObj.fName || !userObj.lName) {\n                delete userObj[\"name\"]\n            }\n            updateUser(userObj, user._id)\n        }\n    }\n\n    useEffect(() => {\n        setUserObj({\n            ...userObj,\n            name: user.fName + \" \" + user.lName\n        })\n    }, [userObj.fName, userObj.lName])\n\n    useEffect(() => {\n        if (id !== 'novy-zakaznik') {\n            getUser(id)\n        }\n    }, [id])\n\n    //unmount\n    useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            resetUser()\n            handleChange({\n                target: {\n                    name: 'lenses',\n                    value: {\n                        cylinder: [1001, 1001, 1001, 1001],\n                        cylinderAxes: [1001, 1001, 1001, 1001],\n                        diopters: [1001, 1001, 1001, 1001],\n                        distance: [1001, 1001, 1001, 1001],\n                        addition: [1001, 1001, 1001, 1001],\n                        basis: [1001, 1001, 1001, 1001],\n                        prism: [1001, 1001, 1001, 1001],\n                    },\n                }\n            })\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n            {/* <Prompt\n                when={hasChanges}\n                message={\"Chcete opustiť tuto stránku?\"}\n            /> */}\n            <form>\n                <Header>\n                    <h1>Profil</h1>\n                    <div>\n                        {isUpdating && <DeleteProfileButton type='button'>Vymazať</DeleteProfileButton>}\n                        {!isUpdating && <SaveButton onClick={(e) => handleSubmit(e, 'profile')}>Vytvoriť a preisť na profil</SaveButton>}\n                        {!isUpdating && <SaveButton onClick={(e) => handleSubmit(e, 'order')}>Vytvoriť a preisť na objednávku</SaveButton>}\n                        <SaveButton onClick={(e) => handleSubmit(e, 'customers')}>\n                            {isUpdating ? \"Uložiť zmeny\" : \"Vytvoriť\"}\n                        </SaveButton>\n                    </div>\n                </Header>\n\n                <ScrollContainer>\n                    {\n                        isUpdating ? (\n                            <UserForm\n                                user={user}\n                                isAdmin={isAdmin}\n                                isUpdating={isUpdating}\n                                isOptometrist={isOptometrist}\n                                handleChange={handleUserChange}\n                                handleParameterChange={handleLensesParameterChange}\n                                handleCompanyChange={handleCompanyAddressChange}\n                            />\n                        ) : (\n                                <NewUserForm\n                                    isAdmin={isAdmin}\n                                    handleParameterChange={handleLensesParameterChange}\n                                    formToShow={formToShow}\n                                    switchFormButtons={switchFormButtons}\n                                    toggleUserForm={toggleUserForm}\n                                    user={user}\n                                    handleChange={handleUserChange}\n                                    handleCompanyChange={handleCompanyAddressChange}\n                                    resetUser={resetUser}\n\n                                />\n                            )\n                    }\n\n\n                </ScrollContainer>\n\n            </form>\n        </section>\n    )\n}\n\nexport default CustomerProfile\n","/imooptik-frontend/src/sections/coupon/coupon.section.jsx",["768","769"],"import React, { useContext, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { CouponsContext } from '../../context/coupons/coupons.context'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n\nimport ScrollContainer from '../../components/scroll-container/scroll-container.component'\nimport InputRow from '../../components/product-input-row/product-input-row.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport Popup from \"../../components/popup/pop-up.component\"\n\nimport {\n    Header,\n    CustomSelect,\n    SubmitButton,\n    DeleteButton,\n    GridRow,\n    GridCol\n} from './coupon.styles'\n\nconst CouponSection = () => {\n    const { couponId } = useParams()\n    const {\n        closeModal,\n        isLoading,\n        message,\n        showModal\n    } = useContext(LoadingModalContext)\n    const {\n        coupon,\n        getCoupon,\n        handleChange,\n        createCoupon,\n        isUpdating,\n        deleteCoupon,\n        resetCoupons\n    } = useContext(CouponsContext)\n\n    useEffect(() => {\n        if (couponId !== 'novy-kupon') {\n            getCoupon(couponId)\n        }\n    }, [couponId])\n\n    useEffect(() => {\n        return () => {\n            resetCoupons()\n        }\n    }, [])\n\n    return (\n        <section>\n            {showModal && <Popup loading={isLoading} title={message} close={closeModal} />}\n\n            <Header>\n                <div>\n                    <h1>Nový kupón</h1>\n                </div>\n\n                <div>\n                    {isUpdating && <DeleteButton onClick={() => deleteCoupon(couponId)}>Odstrániť</DeleteButton>}\n                    {!isUpdating && <SubmitButton onClick={() => createCoupon(coupon)}>Vytvoriť</SubmitButton>}\n                </div>\n            </Header>\n            <ScrollContainer>\n                <GridRow>\n                    <GridCol>\n                        <h3>Základné informácie</h3>\n                        <InputRow\n                            label=\"Kód kupónu\"\n                            example=\"napr: 50off\"\n                        >\n                            <CustomInput\n                                label=\"Kód\"\n                                type='text'\n                                name='code'\n                                value={coupon.code}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Typ kupónu\"\n                            example=\"\"\n                        >\n                            <CustomSelect name='type' value={coupon.type} onChange={(e) => handleChange(e)}>\n                                <option value={\"percentage\"}>Percentá</option>\n                                <option value={\"flat\"}>Fixná suma</option>\n                            </CustomSelect>\n                        </InputRow>\n                    </GridCol>\n                    <GridCol>\n                        <h3>Parametre</h3>\n\n                        <InputRow\n                            label=\"Hodnota\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='value'\n                                value={coupon.value.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Koľko maximálne krát môže tento kupón byt použitý jedným človek.\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='maxUses'\n                                value={coupon.maxUses.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Minimálna hodnota objednávky v centoch, aby bol tento kupón aplikovateľný.\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='minValue'\n                                value={coupon.minValue.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                        <InputRow\n                            label=\"Koľko maximálne krát môže tento kupón byt použitý dohromady všetkými užívateľmi.\"\n                            example=\"\"\n                        >\n                            <CustomInput\n                                label=\"Suma\"\n                                type='number'\n                                name='maxUsesTotal'\n                                value={coupon.maxUsesTotal.toString()}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </InputRow>\n                    </GridCol>\n                </GridRow>\n\n\n            </ScrollContainer>\n        </section>\n    )\n}\n\nexport default CouponSection\n","/imooptik-frontend/src/components/sidenav/sidenav.styles.jsx",[],"/imooptik-frontend/src/context/image/image.queries.jsx",[],"/imooptik-frontend/src/context/blog/blog.queries.jsx",[],"/imooptik-frontend/src/context/warehouse/warehouse.utils.jsx",[],"/imooptik-frontend/src/components/forgot-password/forgot-password.styles.jsx",[],"/imooptik-frontend/src/context/user/user.utils.jsx",[],"/imooptik-frontend/src/context/user/user.queries.jsx",[],"/imooptik-frontend/src/components/custom-input/custom-input.styles.jsx",[],"/imooptik-frontend/src/components/spinner/spinner.styles.jsx",[],"/imooptik-frontend/src/components/sign-in/sign-in.styles.jsx",[],"/imooptik-frontend/src/sections/customers/customers.styles.jsx",[],"/imooptik-frontend/src/context/orders/orders.utils.jsx",[],"/imooptik-frontend/src/sections/product/product.styles.jsx",[],"/imooptik-frontend/src/sections/orders/orders.styles.jsx",[],"/imooptik-frontend/src/sections/analytics/analytics.styles.jsx",[],"/imooptik-frontend/src/components/custom-button/custom-button.styles.jsx",[],"/imooptik-frontend/src/sections/booking/booking.styles.jsx",[],"/imooptik-frontend/src/sections/blog-posts/blog-posts.styles.jsx",[],"/imooptik-frontend/src/sections/customer-profile/customer-profile.styles.jsx",[],"/imooptik-frontend/src/sections/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/sections/e-shop/e-shop.styles.jsx",[],"/imooptik-frontend/src/sections/coupons/coupons.styles.jsx",[],"/imooptik-frontend/src/sections/coupon/coupon.styles.jsx",[],"/imooptik-frontend/src/sections/order/order.styles.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.component.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.component.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.component.jsx",[],"/imooptik-frontend/src/components/list-arrows/list-arrows.component.jsx",["770","771"],"import React, { useState, useEffect } from 'react'\n\nimport {\n    AiFillLeftCircle,\n    AiFillRightCircle\n} from 'react-icons/ai'\n\nimport {\n    ArrowsContainer,\n    IconContainer\n} from './list-arrows.styles'\n\nconst ListArrows = ({\n    listItems = [],\n    handleClickPrev = () => { },\n    handleClickNext = () => { }\n}) => {\n    const [isDisablePrev, setIsDisablePrev] = useState(true)\n    const [isDisableNext, setIsDisableNext] = useState(true)\n    const [currentPage, setCurrentPage] = useState(0)\n\n    useEffect(() => {\n        if (currentPage === 0) {\n            setIsDisablePrev(true)\n        } else {\n            setIsDisablePrev(false)\n            // setCurrentPage(0)\n        }\n    }, [listItems])\n\n    useEffect(() => {\n        if (listItems?.length < 10) {\n            setIsDisableNext(true)\n        } else {\n            setIsDisableNext(false)\n        }\n    }, [listItems])\n\n    useEffect(() => {\n        if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue--)\n    }, [handleClickPrev])\n    useEffect(() => {\n        // if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue++)\n    }, [handleClickNext])\n\n    const handlePrev = () => {\n        handleClickPrev()\n        if (currentPage === 0) return\n        setCurrentPage(prevValue => prevValue - 1)\n    }\n    const handleNext = () => {\n        handleClickNext()\n        setCurrentPage(prevValue => prevValue + 1)\n    }\n\n    return (\n        <ArrowsContainer>\n            <IconContainer disabled={isDisablePrev} onClick={handlePrev}>\n                <AiFillLeftCircle />\n            </IconContainer>\n            <IconContainer disabled={isDisableNext} onClick={handleNext}>\n                <AiFillRightCircle />\n            </IconContainer>\n        </ArrowsContainer>\n    )\n}\n\nexport default ListArrows\n","/imooptik-frontend/src/utils/warehouse.utils.jsx",[],"/imooptik-frontend/src/utils/user.utils.jsx",[],"/imooptik-frontend/src/hooks/useFetch.jsx",["772","773","774"],"/imooptik-frontend/src/utils/analytics.utils.jsx",[],"/imooptik-frontend/src/components/modal-images/modal-images.component.jsx",["775","776"],"import React, { useEffect, useContext, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ImageContext } from '../../context/image/image.context'\n// import { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'\n\n// import CustomButton from '../../components/custom-button/custom-button.component'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    ModalContainer,\n    UploadButton,\n    Modal,\n    CloseButton,\n    FlexContainer,\n    ImageContainer,\n    DeleteButton,\n    ImagePreviewContainer,\n    TabButton,\n    TabOptions,\n    CropButton,\n    ButtonOptions,\n    FetchButtons\n} from './modal-images.styles'\n\nconst ModalImages = ({ close, setImage }) => {\n    const {\n        isDisabled,\n        getImages,\n        handleDeleteImage,\n        handleImage,\n        images,\n        setSelectedImage,\n        getNextImages,\n        getPrevImage\n    } = useContext(ImageContext)\n\n    // const {\n    //     getMessage,\n    //     setIsLoading,\n    //     setShowModal,\n    //     closeModal\n    // } = useContext(LoadingModalContext)\n\n    const selectImage = (img) => {\n        setImage(img._id)\n        setSelectedImage(img)\n        close()\n    }\n\n    // const handleUploadImage = (e) => {\n    //     handleImage(e.target.files[0])\n    //     close()\n    // }\n\n    const [showTab, setShowTab] = useState(\"upload\")\n    const [imageToUpload, setImageToUpload] = useState(null)\n    const [imgUrl, setImgUrl] = useState('')\n    // const [cropper, setCropper] = useState(null)\n    // const [cropData, setCropData] = useState('');\n\n    const [imageName, setImageName] = useState('')\n    const [imageAlt, setImageAlt] = useState('')\n\n\n    const handleClick = (e, tab) => {\n        e.preventDefault()\n        setShowTab(tab)\n\n        if (tab === 'images') {\n            if (!images) {\n                console.log('API IMAGE CALL')\n                getImages()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (imageToUpload) {\n            setImgUrl(URL.createObjectURL(imageToUpload))\n        }\n    }, [imageToUpload])\n\n    // const getCropData = async (e) => {\n    //     e.preventDefault()\n    //     setShowModal(true)\n    //     setIsLoading(true)\n\n    //     try {\n    //         // if (typeof cropper !== 'undefined') {\n    //         toDataUrl(imgUrl, async (imgData) => {\n    //             const data = await handleImage(imgData, imageName, imageAlt)\n\n    //             if (data.image) {\n    //                 setImage(data.image._id)\n    //                 setSelectedImage(data.image)\n    //                 getImages()\n    //                 close()\n    //             }\n    //         })\n\n    //         // }\n    //         setShowModal(false)\n    //         setIsLoading(false)\n    //     } catch (err) {\n    //         console.log(err)\n    //         getMessage(\"Nieco sa pokazilo\")\n    //         setIsLoading(false)\n    //     }\n\n    //     closeModal()\n    // };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        toDataUrl(imgUrl, (imgData) => {\n            handleImage(imgData, imageName, imageAlt, setImage, close)\n        })\n    }\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <TabOptions>\n                    <TabButton isActive={showTab === 'upload'} onClick={(e) => handleClick(e, \"upload\")}>Nový obrazok</TabButton>\n                    <TabButton isActive={showTab === 'images'} onClick={(e) => handleClick(e, \"images\")}>Obrázky</TabButton>\n                </TabOptions>\n                {\n                    showTab === 'upload' ? (\n                        <div>\n                            <UploadButton htmlFor='image'>\n                                <input\n                                    id='image'\n                                    type='file'\n                                    name='image'\n                                    accept=\"image/png, image/jpeg\"\n                                    onChange={e => setImageToUpload(e.target.files[0])}\n                                />\n                                    Vybrať obrázok\n                            </UploadButton>\n                            {imgUrl && (\n                                <React.Fragment>\n                                    <ImagePreviewContainer>\n                                        <img src={imgUrl} />\n                                        {/* <Cropper\n                                            src={imgUrl}\n                                            style={{ height: 400, width: '100%' }}\n                                            initialAspectRatio={1}\n                                            aspectRatio={1}\n                                            scalable={true}\n                                            zoomable={false}\n                                            guides={false}\n                                            cropBoxResizable={true}\n                                            onInitialized={instance => {\n                                                setCropper(instance)\n                                            }}\n                                        /> */}\n                                    </ImagePreviewContainer>\n                                    <CustomInput\n                                        label=\"Názov\"\n                                        type='text'\n                                        name='imageName'\n                                        value={imageName}\n                                        handleChange={(e) => setImageName(e.target.value)}\n                                    />\n                                    <CustomInput\n                                        label=\"Alt\"\n                                        type='text'\n                                        name='imageAlt'\n                                        value={imageAlt}\n                                        handleChange={(e) => setImageAlt(e.target.value)}\n                                    />\n\n                                    <CropButton onClick={(e) => handleSubmit(e)} disabled={isDisabled} >Vybrať obrázok</CropButton>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    ) : (\n                            <div>\n                                <h2>Nahrane obrazky</h2>\n                                <FlexContainer>\n                                    {images && images.map(img => (\n                                        <ImageContainer key={img._id}>\n                                            <DeleteButton onClick={(e) => handleDeleteImage(img._id, e)}>&#10005;</DeleteButton>\n                                            <img onClick={() => selectImage(img)} src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${img.imagePath}`} />\n                                        </ImageContainer>\n                                    ))}\n\n                                </FlexContainer>\n                                <ButtonOptions>\n                                    <FetchButtons onClick={() => getPrevImage(2)}>\n                                        {\"<\"}\n                                    </FetchButtons>\n                                    <FetchButtons onClick={() => getNextImages(2)}>\n                                        {\">\"}\n                                    </FetchButtons>\n                                </ButtonOptions>\n                            </div>\n                        )\n                }\n\n\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport const toDataUrl = (url, callback) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const str = reader.result\n            const lastPos = str.indexOf(';')\n            const cuttedstr = str.slice(lastPos, str.length)\n            const newStr = \"data:image/png\" + cuttedstr\n            callback(newStr);\n        };\n        reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n\nexport default ModalImages\n","/imooptik-frontend/src/utils/calendar.utils.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.component.jsx",[],"/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.component.jsx",["777","778","779"],"/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.component.jsx",["780"],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.component.jsx",[],"/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.component.jsx",["781","782"],"/imooptik-frontend/src/components/product-service-form/product-service-form.component.jsx",[],"/imooptik-frontend/src/components/booking-appoinments/booking-appoinment.component.jsx",["783"],"import React, { useEffect } from 'react'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\nimport Spinner from '../spinner/spinner.component'\nimport BookingAppoinment from '../booking-appoinment/booking-appoinment.component'\n\nimport {\n    TableHead,\n    TableRow,\n    TableCol\n} from './booking-appoinment.styles'\n\nconst BookingAppoinments = ({ day }) => {\n    console.log(day)\n\n    const { response, isLoading, refetch } = useFetchByQuery('api/admin/booking/userBookings/filter', {\n        filters: {\n            dueDate: day.bookingDate\n        }\n    })\n\n    useEffect(() => {\n        refetch()\n    }, [day])\n\n    if (isLoading) return <Spinner />\n\n    return (\n        <div>\n            <TableHead>\n                <TableCol>#</TableCol>\n                <TableCol>Vyšetrenie</TableCol>\n                <TableCol>Meno</TableCol>\n                <TableCol>Dátum</TableCol>\n                <TableCol>Poznámka</TableCol>\n                <TableCol>Možnosti</TableCol>\n            </TableHead>\n\n            {response?.userBookings?.map(({ booking, name, dueDate, note }, idx) => (\n                <TableRow key={idx}>\n                    <TableCol>{idx + 1}</TableCol>\n                    <TableCol><BookingAppoinment bookingId={booking} /></TableCol>\n                    <TableCol>{name}</TableCol>\n                    <TableCol>{dueDate}</TableCol>\n                    <TableCol>{note}</TableCol>\n                    <TableCol>Možnosti</TableCol>\n                </TableRow>\n            ))}\n        </div>\n    )\n}\n\nexport default BookingAppoinments\n","/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.component.jsx",[],"/imooptik-frontend/src/components/new-user-form/new-user-form.component.jsx",["784"],"import React from 'react'\n\nimport CustomFormSwitch from '../custom-form-switch/custom-form-switch.component'\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from \"../custom-checkbox/custom-checkbox.component\"\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    CustomSelect,\n    Container,\n    GridRow,\n    ZeroMargin,\n    ColContainer,\n    CustomerForm,\n    SectionTitle\n} from './new-user-form.styles'\n\n\nconst NewUserForm = ({\n    formToShow,\n    switchFormButtons,\n    toggleUserForm,\n    user,\n    handleChange,\n    isAdmin,\n    handleParameterChange,\n    handleCompanyChange\n}) => {\n\n    return (\n        <div>\n            {/* Akého uživatela chcete vytvoriť? */}\n            {isAdmin && <CustomFormSwitch\n                items={switchFormButtons}\n                title=\"Akého uživatela chcete vytvoriť?\"\n                activeIndex={formToShow}\n                handleClick={toggleUserForm}\n            />}\n\n            {\n                formToShow === 0 ? (\n                    <CustomerForm>\n                        <ColContainer>\n                            <h2>Informácie</h2>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                            <CustomInput\n                                label=\"E-mail*\"\n                                type='email'\n                                name='email'\n                                value={user.email ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                            <CustomInput\n                                label=\"Telefónne číslo\"\n                                type='text'\n                                name='phone'\n                                value={user.phone ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                            <InputRow\n                                label=\"Dátum narodenia\"\n                                example=''\n                            >\n                                <CustomInput\n                                    // label=\"Priezvisko*\"\n                                    type='date'\n                                    name='birthDate'\n                                    value={user.birthDate}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </InputRow>\n\n                            <Container>\n                                <h2>Parametre</h2>\n\n                                <ParametersTable\n                                    parameters={user.lenses}\n                                    handleChange={handleParameterChange}\n                                />\n                            </Container>\n                        </ColContainer>\n\n                        <ColContainer>\n                            <div>\n                                <h2>Fakturačné údaje</h2>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"Ulica a čislo domu\"\n                                            type='text'\n                                            name='address'\n                                            value={user.address ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"PSČ\"\n                                            type='text'\n                                            name='psc'\n                                            value={user.psc ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Mesto\"\n                                            type='text'\n                                            name='city'\n                                            value={user.city ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Krajina\"\n                                            type='text'\n                                            name='country'\n                                            value={user.country ?? \"\"}\n                                            handleChange={(e) => handleChange(e)}\n                                        />\n                                    </div>\n                                </GridRow>\n                            </div>\n\n                            <Container>\n                                <h2>Firemné údaje</h2>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"IČO\"\n                                            type='text'\n                                            name='ico'\n                                            value={user.company.ico ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"DIČ\"\n                                            type='text'\n                                            name='dic'\n                                            value={user.company.dic ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"Ulica a čislo domu\"\n                                            type='text'\n                                            name='address'\n                                            value={user.company.address ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                    <ZeroMargin>\n                                        <CustomInput\n                                            label=\"PSČ\"\n                                            type='text'\n                                            name='psc'\n                                            value={user.company.psc ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </ZeroMargin>\n                                </GridRow>\n                                <GridRow>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Mesto\"\n                                            type='text'\n                                            name='city'\n                                            value={user.company.city ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <CustomInput\n                                            label=\"Krajina\"\n                                            type='text'\n                                            name='country'\n                                            value={user.company.country ?? \"\"}\n                                            handleChange={(e) => handleCompanyChange(e)}\n                                        />\n                                    </div>\n                                </GridRow>\n                            </Container>\n                        </ColContainer>\n\n                    </CustomerForm>\n                ) : (\n                        <CustomerForm>\n\n                            <ColContainer>\n                                <h2>Informácie</h2>\n                                <CustomInput\n                                    label=\"Meno*\"\n                                    type='text'\n                                    name='fName'\n                                    value={user.fName ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                                <CustomInput\n                                    label=\"Priezvisko*\"\n                                    type='text'\n                                    name='lName'\n                                    value={user.lName ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                                <CustomInput\n                                    label=\"E-mail*\"\n                                    type='email'\n                                    name='email'\n                                    value={user.email ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                                <CustomInput\n                                    label=\"Heslo*\"\n                                    type='password'\n                                    name='password'\n                                    value={user.password ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                                <CustomInput\n                                    label=\"Potvrď heslo*\"\n                                    type='password'\n                                    name='confirmPassword'\n                                    value={user.confirmPassword ?? \"\"}\n                                    handleChange={(e) => handleChange(e)}\n                                />\n                            </ColContainer>\n\n                            <ColContainer>\n                                <SectionTitle>Admin privilégia</SectionTitle>\n                                <div>\n                                    <h4>Predajňa na ktorej uživatel pracuje</h4>\n                                    <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Nezadané</option>\n\n                                        {\n                                            retailNames.map((name, idx) => {\n                                                if (idx === 4) return\n                                                return (\n                                                    <option key={idx} value={idx + 1}>{name}</option>\n\n                                                )\n                                            })\n                                        }\n                                    </CustomSelect>\n\n                                </div>\n                                <div>\n                                    <h4>Výška administrativných práv</h4>\n                                    <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                                        <option value={0}>Zákaznik</option>\n                                        <option value={1}>Predavač</option>\n                                        <option value={2}>Vedúci</option>\n                                    </CustomSelect>\n\n                                </div>\n                                <Container>\n                                    <CustomCheckbox\n                                        label='Optometrista'\n                                        handleClick={() => handleChange({\n                                            target: {\n                                                name: \"optometrist\",\n                                                value: !user.optometrist\n                                            }\n                                        })}\n                                        isActive={user.optometrist}\n                                    />\n                                </Container>\n                            </ColContainer>\n                        </CustomerForm>\n                    )\n            }\n        </div>\n    )\n}\n\nexport default NewUserForm\n","/imooptik-frontend/src/components/custom-select/custom-select.component.jsx",["785"],"import React from 'react'\n\nimport { CustomSelectContainer } from './custom-select.styles'\n\nconst CustomRetailSelect = ({ name, value, handleChange, listItems, defaultOption = false, defaultValue, defaultLabel }) => {\n    return (\n        <CustomSelectContainer name={name} value={value} onChange={(e) => handleChange(e)}>\n            {defaultOption && <option value={defaultValue}>{defaultLabel}</option>}\n            {listItems.map((name, idx) => {\n                if (idx === 4) return\n                return (\n                    <option key={idx} value={idx + 1}>{name}</option>\n                )\n            })}\n        </CustomSelectContainer>\n    )\n}\n\nexport default CustomRetailSelect\n","/imooptik-frontend/src/components/user-form/user-form.component.jsx",["786","787"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport InputRow from '../product-input-row/product-input-row.component'\nimport CustomInput from '../custom-input/custom-input.component'\nimport ProfileOrderOverview from '../profile-order-overview/profile-order-overview.component'\nimport ParametersTable from '../parameters-table/parameters-table.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\nimport ExaminationsOverview from '../examinations-overview/examinations-overview.component'\n\nimport {\n    retailNames\n} from '../../context/warehouse/warehouse.utils'\n\nimport {\n    Profile,\n    GridContainer,\n    GridRow,\n    Row,\n    ThreeColRow,\n    ZeroMargin,\n    Title,\n    Container,\n    OrderHeader,\n    OrderButton,\n    CustomSelect,\n    AdminPanelContainer\n} from './user.form-styles'\n\nconst UserForm = ({\n    isAdmin,\n    isUpdating,\n    user,\n    handleChange,\n    handleParameterChange,\n    handleCompanyChange,\n    isOptometrist,\n    isOrder = false\n}) => {\n    const { push } = useHistory()\n\n    const handleAddOrderButtonClick = e => {\n        e.preventDefault()\n        push(`/dashboard/objednavky/${user._id}`)\n    }\n\n    console.log(user)\n\n\n    return (\n        <GridContainer>\n            <Profile>\n                {isAdmin && <AdminPanelContainer>\n                    <h2>Admin panel</h2>\n                    <InputRow\n                        label=\"Predajňa na ktorej uživatel pracuje\"\n                        example=''\n                    >\n                        <CustomSelect name='premises' value={user.premises} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Nezadané</option>\n                            {\n                                retailNames.map((name, idx) => {\n                                    if (idx === 4) return\n                                    return (\n                                        <option key={idx} value={idx + 1}>{name}</option>\n                                    )\n                                })\n                            }\n                        </CustomSelect>\n                    </InputRow>\n                    <InputRow\n                        label=\"Výška administrativných práv\"\n                        example=\"\"\n                    >\n                        <CustomSelect name='admin' value={user.admin} onChange={(e) => handleChange(e)}>\n                            <option value={0}>Zákaznik</option>\n                            <option value={1}>Predavač</option>\n                            <option value={2}>Vedúci</option>\n                        </CustomSelect>\n                    </InputRow>\n\n                    <Container>\n                        <CustomCheckbox\n                            label='Optometrista'\n                            handleClick={() => handleChange({\n                                target: {\n                                    name: \"optometrist\",\n                                    value: !user.optometrist\n                                }\n                            })}\n                            isActive={user.optometrist}\n                        />\n                    </Container>\n                </AdminPanelContainer>}\n                <div>\n                    <h2>Informácie</h2>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Meno*\"\n                                type='text'\n                                name='fName'\n                                value={user.fName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Priezvisko*\"\n                                type='text'\n                                name='lName'\n                                value={user.lName ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                // label=\"Priezvisko*\"\n                                type='date'\n                                name='birthDate'\n                                value={user.birthDate}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </div>\n\n                <Container>\n                    <h2>Kontaktné údaje</h2>\n                    <Row>\n                        <div>\n                            <CustomInput\n                                label=\"E-mail*\"\n                                type='email'\n                                name='email'\n                                value={user.email ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Telefónne číslo\"\n                                type='text'\n                                name='phone'\n                                value={user.phone ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <h2>Fakturačné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.address ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.psc ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.city ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.country ?? \"\"}\n                                handleChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n                <Container>\n                    <h2>Firemné údaje</h2>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"IČO\"\n                                type='text'\n                                name='ico'\n                                value={user.company.ico ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"DIČ\"\n                                type='text'\n                                name='dic'\n                                value={user.company.dic ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"Ulica a čislo domu\"\n                                type='text'\n                                name='address'\n                                value={user.company.address ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                        <ZeroMargin>\n                            <CustomInput\n                                label=\"PSČ\"\n                                type='text'\n                                name='psc'\n                                value={user.company.psc ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </ZeroMargin>\n                    </GridRow>\n                    <GridRow>\n                        <div>\n                            <CustomInput\n                                label=\"Mesto\"\n                                type='text'\n                                name='city'\n                                value={user.company.city ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                        <div>\n                            <CustomInput\n                                label=\"Krajina\"\n                                type='text'\n                                name='country'\n                                value={user.company.country ?? \"\"}\n                                handleChange={(e) => handleCompanyChange(e)}\n                            />\n                        </div>\n                    </GridRow>\n                </Container>\n\n                <Container>\n                    <h2>Parametre</h2>\n\n                    <ParametersTable\n                        parameters={user.lenses}\n                        handleChange={handleParameterChange}\n                    />\n                </Container>\n\n\n            </Profile>\n\n            {!isOrder && isUpdating && <div>\n                <OrderHeader>\n                    <Title>\n                        Objednávky\n                    </Title>\n                    <OrderButton onClick={e => handleAddOrderButtonClick(e)}>Pridať objednávku</OrderButton>\n                </OrderHeader>\n                <div>\n                    {user.orders.length > 0 ? user.orders.map((order, idx) => (\n                        <ProfileOrderOverview\n                            key={idx}\n                            id={order}\n                            handleUpdateClick={() => push(`/dashboard/objednavky/${user._id}/${order}`)}\n                        />\n                    )).reverse().slice(0, 5) : (\n                            <p>Žiadné objednávky</p>\n                        )}\n                </div>\n                {isOptometrist && <ExaminationsOverview />}\n            </div>}\n        </GridContainer>\n    )\n}\n\nexport default UserForm\n","/imooptik-frontend/src/components/product-overview/product-overview.component.jsx",[],"/imooptik-frontend/src/sections/post/post.styles.jsx",[],"/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.component.jsx",["788","789","790"],"/imooptik-frontend/src/components/product-input-row/product-input-row.component.jsx",[],"/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.component.jsx",["791","792"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useFetchById } from '../../hooks/useFetch'\nimport { BookingContext } from '../../context/booking/booking.context'\nimport { WeekCalendarContext } from '../../context/week-calendar/week-calendar.context'\n\nimport UserbookingDetailsModal from '../modal-userbookings-details/modal-userbookings-details.component'\nimport UserBookingModal from '../modal-user-bookings/modal-user-booking.component'\nimport CalendarBookedDay from '../calendar-booked-day/calendar-booked-day.component'\n\nimport {\n    dayNames,\n    getPreviousMonthDays,\n    getNextMonthDays,\n    getCurrentMonthDays,\n    getBooking,\n} from '../../utils/calendar.utils'\n\nimport { changeSlash } from '../../utils/week-calendar.utils'\n\nimport {\n    Container,\n    HeaderBlock,\n    HourBlock,\n    HourGrid,\n    TableHead,\n    HourBlockContainer,\n    EmptyContainer,\n    HourTime\n} from './calendar-weekdays.styles'\n\nconst WeekDays = ({\n    calendar,\n    year,\n    month,\n    weekIndex,\n    showUserBooking,\n    setShowUserBooking,\n    handleOpenUserBookingModal,\n    selectedDay,\n}) => {\n    const { timeline, getDayData, refetchWeekCalendar, cancelUserBooking } = useContext(WeekCalendarContext)\n    const { createUserBooking } = useContext(BookingContext)\n    const { response, isLoading, refetch } = useFetchById('api/booking/calendars', calendar, !calendar)\n    const lastDay = new Date(year, month + 1, 0).getDate()\n    const firstDayIndex = new Date(year, month, 0).getDay();\n    const lastDayIndex = new Date(year, month + 1, 0).getDay()\n    const prevLastDay = new Date(year, month, 0).getDate()\n\n    const nextDays = 7 - lastDayIndex\n\n    const [calendarDays, setCalendarDays] = useState([])\n    // const [selectedDay, setSelectedDay] = useState(null)\n    const [showBookingDetails, setShowBookingDetails] = useState(false)\n\n    const [selectedUserBooking, setSelectedUserBooking] = useState(null)\n\n    const handleOpenDetailsModal = (userBooking) => {\n        setSelectedUserBooking(userBooking)\n        setShowBookingDetails(true)\n    }\n\n    const handleCancelUserBooking = (userBookingId) => {\n        cancelUserBooking(userBookingId, refetch, setShowBookingDetails)\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n\n        if (response.calendar) {\n            const prevMonthDays = getPreviousMonthDays(firstDayIndex)\n            const monthDays = getCurrentMonthDays(lastDay)\n            const nextMonthDays = getNextMonthDays(nextDays)\n            const monthDaysWithBookings = getBooking(monthDays, response.calendar, month, year)\n\n            setCalendarDays([\n                ...prevMonthDays,\n                ...monthDaysWithBookings,\n                ...nextMonthDays\n            ])\n\n            // fillDayData([\n            //     ...prevMonthDays,\n            //     ...monthDaysWithBookings,\n            //     ...nextMonthDays\n            // ], response.calendar)\n        }\n    }, [isLoading])\n\n    useEffect(() => {\n        refetch()\n    }, [month])\n\n\n    return (\n        <div>\n            {showBookingDetails && <UserbookingDetailsModal cancelUserBooking={handleCancelUserBooking} refetchCalendar={refetch} calendarId={calendar} userBooking={selectedUserBooking} close={() => setShowBookingDetails(false)} />}\n            {showUserBooking && <UserBookingModal refetchWeekCalendar={refetchWeekCalendar} createUserBooking={createUserBooking} refetchCalendar={refetch} calendar={response?.calendar} day={selectedDay} close={() => setShowUserBooking(false)} />}\n            <Container>\n                <TableHead>\n                    <HeaderBlock>{\" \"}</HeaderBlock>\n                    {calendarDays.slice(weekIndex * 7, (weekIndex * 7) + 7).map(({ dayNumber, isDisable, isPrevDay, isNextDay }, idx) => (\n                        <HeaderBlock isDisabled={isDisable} key={idx}>\n                            {isPrevDay ? (\n                                <React.Fragment>\n                                    <p>{dayNames[new Date(year, month - 1, prevLastDay - (dayNumber)).getDay()]}</p>\n                                    <p>{prevLastDay - (dayNumber - 1)}</p>\n                                </React.Fragment>\n                            ) : isNextDay ? (\n                                <React.Fragment>\n                                    <p>{dayNames[new Date(year, month + 1, dayNumber - 1).getDay()]}</p>\n                                    <p>{dayNumber} </p>\n                                </React.Fragment>\n                            ) : (\n                                        <React.Fragment>\n                                            <p>{dayNames[new Date(year, month, dayNumber - 1).getDay()]}</p>\n                                            <p>{dayNumber} </p>\n                                        </React.Fragment>\n                                    )}\n                        </HeaderBlock>\n                    ))}\n                </TableHead>\n\n                <HourGrid>\n                    <HourBlock>\n                        {timeline && timeline.map((time, idx) => (\n                            <HourBlockContainer key={idx} style={response?.calendar?.interval === 60 ? ({ height: \"10rem\" }) : ({ height: \"5rem\" })}>\n                                <HourTime >\n                                    <p>{changeSlash(time) ?? \"\"}</p>\n                                </HourTime>\n                            </HourBlockContainer>\n\n                        ))}\n                    </HourBlock>\n                    {calendarDays.length > 0 && calendarDays.slice(weekIndex * 7, (weekIndex * 7) + 7).map((dayData, idx) => {\n                        const day = getDayData(dayData?.dayNumber, idx, response.calendar)\n                        return (\n                            < HourBlock key={idx} >\n                                { day && day.map((interval, idx) => (\n                                    <HourBlockContainer style={response?.calendar?.interval === 60 ? ({ height: \"10rem\" }) : ({ height: \"5rem\" })} key={idx}>\n                                        {interval?.userBookings && <CalendarBookedDay\n                                            dayData={dayData}\n                                            calendarId={calendar}\n                                            time={interval.time}\n                                            userBookings={interval.userBookings}\n                                            open={() => handleOpenDetailsModal(interval)}\n                                        />}\n                                        <EmptyContainer onClick={dayData.isDisable ? () => { } : () => handleOpenUserBookingModal({\n                                            ...dayData, time: interval.time, year,\n                                            month,\n                                        })} />\n                                    </HourBlockContainer>\n                                ))}\n                            </HourBlock >\n                        )\n                    })}\n                </HourGrid>\n            </Container>\n        </div>\n    )\n}\n\nexport default WeekDays\n","/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.component.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.component.jsx",["793","794","795"],"import React, { useState, useEffect } from 'react'\n\nimport {\n    dayNames,\n    getPreviousMonthDays,\n    getNextMonthDays,\n    getCurrentMonthDays,\n    getBooking\n} from '../../utils/calendar.utils'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport {\n    Container,\n    HeaderBlock,\n    Dayblock,\n\n} from './calendar.styles'\n\nconst Calendar = ({\n    calendar,\n    month,\n    year,\n    handleCalendarBlockClick\n}) => {\n    const date = new Date()\n\n    date.setDate(1)\n    const lastDay = new Date(year, month + 1, 0).getDate()\n    const prevLastDay = new Date(year, month, 0).getDate()\n\n    const firstDayIndex = new Date(year, month, 0).getDay();\n    const lastDayIndex = new Date(year, month + 1, 0).getDay()\n\n    const nextDays = 7 - lastDayIndex\n\n    const { response, isLoading, refetch } = useFetchById('api/booking/calendars', calendar, !calendar)\n    const [prevDays, setPrevDays] = useState([])\n    const [currentMonthDays, setCurrentMonthDays] = useState([])\n    const [nextMonthDays, setMonthNextDays] = useState([])\n\n    useEffect(() => {\n        refetch()\n    }, [month])\n\n    useEffect(() => {\n        if (calendar) {\n            refetch()\n        }\n    }, [calendar])\n\n    useEffect(() => {\n        if (!isLoading) {\n            if (response?.calendar) {\n                const prevDaysArr = getPreviousMonthDays(firstDayIndex)\n                const arr = getCurrentMonthDays(lastDay)\n                const nextDaysArr = getNextMonthDays(nextDays)\n                const checkedArr = getBooking(arr, response.calendar, month, year)\n\n                setPrevDays(prevDaysArr)\n                setCurrentMonthDays(checkedArr)\n                setMonthNextDays(nextDaysArr)\n            }\n        }\n    }, [isLoading])\n\n    useEffect(() => {\n        console.log(\"UNMOUNT WEEK CALENDAR\")\n\n        return () => {\n            setPrevDays([])\n            setCurrentMonthDays([])\n            setMonthNextDays([])\n        }\n    }, [])\n\n    return (\n        <Container>\n\n            {dayNames.map((name, idx) => (\n                <HeaderBlock key={idx}>\n                    {name}\n                </HeaderBlock>\n            ))}\n\n            {prevDays.map((value, idx) => (\n                <Dayblock faded={true} key={idx}>\n                    <p>\n                    </p>\n                    <p>\n                        {prevLastDay - idx}\n                    </p>\n                </Dayblock>\n            ))}\n\n            {currentMonthDays.map((data, idx) => {\n                const { dayNumber, bookings } = data\n                return (\n                    <Dayblock key={idx} onClick={() => handleCalendarBlockClick(data)}>\n                        <p>\n                            {bookings && <span>\n                                {bookings.length}\n                            </span>}\n                        </p>\n                        <p>\n                            {dayNumber}\n                        </p>\n                    </Dayblock>\n                )\n            })}\n            {nextMonthDays.map((value, idx) => (\n                <Dayblock faded={true} key={idx}>\n                    <p>\n                    </p>\n                    <p>\n                        {idx + 1}\n                    </p>\n                </Dayblock>\n            ))}\n        </Container>\n    )\n}\n\nexport default Calendar\n","/imooptik-frontend/src/context/week-calendar/week-calendar.context.jsx",["796","797","798","799","800"],"import React, { createContext, useState, useEffect, useContext } from 'react'\nimport { AuthContext } from '../auth/auth.context'\nimport { LoadingModalContext } from '../loading-modal/loading-modal.contenxt'\nimport { useFetchById } from '../../hooks/useFetch'\nimport {\n    getHourTime,\n    checkBookings,\n    getTimeline\n} from '../../utils/week-calendar.utils'\n\nexport const WeekCalendarContext = createContext({\n    timeline: null,\n    getDayData: () => { },\n    refetchWeekCalendar: () => { },\n    cancelUserBooking: () => { },\n    fillDayData: () => { }\n})\n\nconst WeekCalendarProvider = ({ children, calendar, month, year }) => {\n    const { response, isLoading, refetch } = useFetchById('api/booking/calendars', calendar, !calendar)\n    const { closeModal, setIsLoading, setShowModal, getMessage } = useContext(LoadingModalContext)\n    const { token } = useContext(AuthContext)\n    const [numberOfHours, setNumberOfHours] = useState(0)\n    const [timeline, setTimeline] = useState(null)\n\n    const fillDayData = (calendarDaysArr, calendarObj) => {\n        console.log(calendarObj)\n        console.log(calendarDaysArr)\n\n    }\n\n    const getDayData = (dayNumber, dayIdx, calendar) => {\n        if (!calendar) return\n        const hourblock = [...Array(numberOfHours)].map((value, idx) => {\n            const splitedStartTime = calendar.startTimes[dayIdx]?.split(\"/\").map(value => Number(value))\n            const splitedEndTime = calendar.endTimes[dayIdx]?.split(\"/\").map(value => Number(value))\n            const time = getHourTime(idx, calendar.interval)\n            const splitedTime = time.split('/').map(value => Number(value))\n            if (splitedStartTime[0] > splitedTime[0]) return\n            if (splitedEndTime[0] < splitedTime[0]) return\n            if (calendar.startTimes[dayIdx] === 'X') return\n            if (splitedEndTime[0] === splitedTime[0] && !(splitedEndTime[1] === splitedTime[1]) && splitedTime[1] === 30) return\n\n            return ({\n                id: idx,\n                time: time,\n                userBookings: checkBookings(calendar, idx, dayNumber, month, year)\n            })\n        }).filter(item => item !== undefined)\n\n        return hourblock\n    }\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"auth-token\", token);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const cancelUserBooking = async (userBookingId, refetchCalendar, setShowBookingDetails) => {\n        setShowModal(true)\n        setIsLoading(true)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            // body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/booking/userBookings/${userBookingId}/cancel`, requestOptions)\n            const data = await response.json()\n\n            console.log(refetchCalendar)\n\n            if (data.userBooking) {\n                closeModal()\n                setShowBookingDetails()\n                setTimeout(() => {\n                    refetchCalendar()\n                }, 200);\n            }\n\n            getMessage(data.messageSK)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            getMessage(\"Niečo sa pokazilo\")\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n        if (response.calendar.interval === 30) setNumberOfHours(48)\n        if (response.calendar.interval === 60) setNumberOfHours(24)\n        const timelineArr = getTimeline(response.calendar.startTimes, response.calendar.endTimes, response.calendar.interval)\n        setTimeline(timelineArr)\n    }, [isLoading])\n\n    return (\n        <WeekCalendarContext.Provider\n            value={{\n                timeline,\n                getDayData,\n                refetchWeekCalendar: refetch,\n                cancelUserBooking,\n                fillDayData\n            }}\n        >\n            {children}\n        </WeekCalendarContext.Provider>\n    )\n}\n\nexport default WeekCalendarProvider","/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.component.jsx",["801"],"import React, { useState, useEffect, useContext } from 'react'\nimport { OrderContext } from '../../../../context/order/order.context'\n\nimport { useFetchByQuery } from '../../../../hooks/useFetch'\n\nimport BackButton from '../../../../components/custom-back-button/custom-back-button.component'\nimport CartLensesRow from '../../../../components/order-cart-lenses-row/order-cart-lenses-row.component'\nimport CustomInput from '../../../../components/custom-input/custom-input.component'\n\nimport {\n    LensesTableContainer,\n    LensesTableHead,\n    LensesTableRow,\n    LensesImg,\n    SelectLensesContainer,\n    CartContainer,\n    CartParagraph,\n    CartTable,\n    CartTableHead,\n    NextButton,\n    TableCol,\n    ButtonOptions,\n    HeaderContainer,\n    SearchButton,\n    SearchContainer,\n    HeadingContainer,\n    UnselectButton\n} from './select-lenses.styles'\n\nconst SelectLensesComponent = ({ back, next }) => {\n    const {\n        cart,\n        addLenses,\n        createCombinedProducts,\n        selectedProduct,\n        selectProduct\n    } = useContext(OrderContext)\n\n    const [searchQuery, setSearchQuery] = useState(\"\")\n\n    const [lensesItems, setLensesItems] = useState([])\n    const [query, setQuery] = useState({\n        limit: 9,\n        skip: 0\n    })\n    const { response, isLoading, refetch } = useFetchByQuery(\"api/admin/lenses/filter\", query)\n\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        setQuery({\n            ...query,\n            query: searchQuery\n        })\n        refetch()\n    }\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== \"\") {\n            if (e.key === 'Enter') {\n                setQuery({\n                    ...query,\n                    query: searchQuery\n                })\n                refetch()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n        console.log(\"UPDATE LENSES\")\n\n        setLensesItems(response.lenses)\n    }, [isLoading])\n\n    console.log(cart)\n\n    return (\n        <div>\n            <BackButton onClick={back} />\n            <HeaderContainer>\n                <SearchContainer>\n                    <h3>Vyhľadať produkt</h3>\n                    <div>\n                        <CustomInput\n                            label='Vyhladať šošovky'\n                            value={searchQuery}\n                            handleChange={(e) => setSearchQuery(e.target.value)}\n                            onKeyPress={handleSearchOnEnter}\n                        />\n                    </div>\n                    <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n                </SearchContainer>\n                <CartContainer>\n                    <HeadingContainer>\n                        <h3>Vybraté položky</h3>\n                        {selectedProduct !== null && <UnselectButton onClick={() => selectProduct(null)}>Odznačiť</UnselectButton>}\n                    </HeadingContainer>\n                    <CartTableHead>\n                        <TableCol>#</TableCol>\n                        <TableCol>Produkt</TableCol>\n                        <TableCol>Šosovky</TableCol>\n                        <TableCol>Cena</TableCol>\n                        <TableCol>Ks</TableCol>\n                        <TableCol>Zľava v %</TableCol>\n                        {/* <TableCol>Možnosti</TableCol> */}\n                    </CartTableHead>\n                    <CartTable>\n                        {cart.map((item, idx) => {\n                            if (item.product.type === 3 || item.product.type === 4 || item.product.type === 5 || item.product.type === 6) return false\n                            return (\n                                <CartLensesRow\n                                    key={idx}\n                                    idx={idx}\n                                    item={item}\n                                />\n                            )\n                        })}\n\n                        {cart.length === 0 && <CartParagraph>Nie sú vybrané žiadné produkty</CartParagraph>}\n                    </CartTable>\n                    <ButtonOptions>\n                        <NextButton onClick={createCombinedProducts}>\n                            Dokončiť objednávku\n                        </NextButton>\n                    </ButtonOptions>\n                </CartContainer>\n            </HeaderContainer>\n\n            <SelectLensesContainer>\n                <LensesTableContainer>\n                    <LensesTableHead>\n                        <TableCol>eanKód</TableCol>\n                        <TableCol>Obrázok</TableCol>\n                        <TableCol>Názov</TableCol>\n                        <TableCol>Dioptrie</TableCol>\n                        <TableCol>Cylinder</TableCol>\n                        <TableCol>Cena</TableCol>\n                    </LensesTableHead>\n\n                    {lensesItems.map((lenses, idx) => (\n                        <LensesTableRow key={idx} onClick={() => addLenses(lenses)}>\n                            <TableCol>{lenses.eanCode}</TableCol>\n                            <TableCol>\n                                <LensesImg>\n                                    {/* <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${lenses.image.imagePath}`} alt={lenses.image.alt} /> */}\n                                </LensesImg>\n                            </TableCol>\n                            <TableCol>{lenses.name}</TableCol>\n                            <TableCol>\n                                {lenses.dioptersRange && <p>{`od ${lenses.dioptersRange[0]} do ${lenses.dioptersRange[1]}`}</p>}\n                            </TableCol>\n                            <TableCol>\n                                {lenses.cylinderRange && <p>{`od ${lenses.cylinderRange[0]} do ${lenses.cylinderRange[1]}`}</p>}\n                            </TableCol>\n                            <TableCol>{(lenses.price / 100).toFixed(2)}€</TableCol>\n                        </LensesTableRow>\n                    ))}\n                    <LensesTableRow onClick={() => addLenses(null)}>\n                        <TableCol>-</TableCol>\n                        <TableCol>\n                            <LensesImg>\n                                {/* <img src={`${process.env.REACT_APP_BACKEND_ENDPOINT}/uploads/${lenses.image.imagePath}`} alt={lenses.image.alt} /> */}\n                            </LensesImg>\n                        </TableCol>\n                        <TableCol>Žiadné sklá</TableCol>\n                        <TableCol>-</TableCol>\n                        <TableCol>-</TableCol>\n                        <TableCol>0€</TableCol>\n                    </LensesTableRow>\n                </LensesTableContainer>\n            </SelectLensesContainer>\n        </div >\n    )\n}\n\nexport default SelectLensesComponent\n","/imooptik-frontend/src/sections/order/steps/4-summary/summary.component.jsx",[],"/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.component.jsx",["802"],"/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.component.jsx",["803","804"],"import React, { useState, useEffect, useContext } from 'react'\nimport { UserContext } from '../../../../context/user/user.context'\n\nimport CustomInput from '../../../../components/custom-input/custom-input.component'\n\nimport {\n    SearchContainer,\n    TableContainer,\n    UserTableHead,\n    UserTableRow,\n    TableCol,\n    SearchButton\n} from './select-user.styles'\n\nconst SelectUserComponent = ({ next, addToOrder }) => {\n    const [searchQuery, setSearchQuery] = useState('')\n    const [userItems, setUserItems] = useState([])\n\n    const {\n        users,\n        getFilteredUsers,\n        getUserByQuery\n    } = useContext(UserContext)\n\n    const handleClick = (user) => {\n        addToOrder({\n            name: \"user\",\n            value: user\n        })\n        next()\n    }\n\n    const handleSearchOnEnter = (e) => {\n        if (searchQuery !== '') {\n            if (e.key === 'Enter') {\n                getUserByQuery({\n                    query: searchQuery\n                })\n            }\n        }\n    }\n    const handleSearch = () => {\n        if (searchQuery === '') return\n        getUserByQuery({\n            query: searchQuery\n        })\n    }\n\n    useEffect(() => {\n        if (!users) {\n            getFilteredUsers({\n                limit: 5\n            })\n        }\n        if (users) {\n            setUserItems(users)\n        }\n    }, [users])\n\n    useEffect(() => {\n        if (users) {\n            if (searchQuery === '') {\n                getFilteredUsers({\n                    limit: 5\n                })\n                setUserItems(users)\n            }\n        }\n    }, [searchQuery])\n\n    useEffect(() => {\n        return () => {\n            setSearchQuery('')\n            setUserItems([])\n        }\n    }, [])\n\n    return (\n        <div>\n            <SearchContainer>\n                <h3>Vyhľadať zákaznika</h3>\n                <div>\n                    <CustomInput\n                        label={\"Meno, priezvisko, email alebo tel. číslo\"}\n                        value={searchQuery}\n                        onChange={(e) => setSearchQuery(e.target.value)}\n                        onKeyPress={handleSearchOnEnter}\n                    />\n                </div>\n                <SearchButton onClick={handleSearch}>Hľadať</SearchButton>\n            </SearchContainer>\n\n            <TableContainer>\n                <UserTableHead>\n                    <TableCol>Meno a priezvisko</TableCol>\n                    <TableCol>Email</TableCol>\n                    <TableCol>Možnosti</TableCol>\n                </UserTableHead>\n                {userItems.map((user, idx) => (\n                    <UserTableRow key={idx} onClick={() => handleClick(user)}>\n                        <TableCol>{user.name}</TableCol>\n                        <TableCol>{user.email}</TableCol>\n                        <TableCol>{user.phone}</TableCol>\n                    </UserTableRow>\n                ))}\n            </TableContainer>\n\n        </div>\n    )\n}\n\nexport default SelectUserComponent\n","/imooptik-frontend/src/components/product-glasses-form/product-glasses-form.styles.jsx",[],"/imooptik-frontend/src/sections/no-permission/no-permission.styles.jsx",[],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.component.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.component.jsx",[],"/imooptik-frontend/src/components/scroll-container/scroll-container.styles.jsx",[],"/imooptik-frontend/src/components/section-header/section-header.styles.jsx",[],"/imooptik-frontend/src/hooks/useOutsideAlerter.jsx",["805"],"import React, { useRef, useEffect } from \"react\";\n\nexport const useOutsideHandler = (ref, action) => {\n    useEffect(() => {\n        const handleClickOutside = e => {\n            if (ref.current && !ref.current.contains(e.target)) {\n                action()\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n\n    }, [ref])\n}\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(ref) {\n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                alert(\"You clicked outside of me!\");\n            }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [ref]);\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nfunction OutsideAlerter(props) {\n    const wrapperRef = useRef(null);\n    useOutsideAlerter(wrapperRef);\n\n    return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport default OutsideAlerter;\n","/imooptik-frontend/src/components/modal-images/modal-images.styles.jsx",[],"/imooptik-frontend/src/components/list-arrows/list-arrows.styles.jsx",[],"/imooptik-frontend/src/components/product-service-form/product-service-form.styles.jsx",[],"/imooptik-frontend/src/components/order-overview/order-overview.styles.jsx",[],"/imooptik-frontend/src/components/product-accessories-form/product-accessories-form.styles.jsx",[],"/imooptik-frontend/src/components/product-contact-lenses-form/product-contact-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/product-lenses-form/product-lenses-form.styles.jsx",[],"/imooptik-frontend/src/components/new-user-form/new-user-form.styles.jsx",[],"/imooptik-frontend/src/components/booking-appoinments/booking-appoinment.styles.jsx",[],"/imooptik-frontend/src/components/booking-calendar-bookings/booking-calendar-bookings.styles.jsx",[],"/imooptik-frontend/src/components/user-form/user.form-styles.jsx",[],"/imooptik-frontend/src/components/section-navbar/section-navbar.styles.jsx",[],"/imooptik-frontend/src/components/product-overview/product-overview.styles.jsx",[],"/imooptik-frontend/src/components/custom-select/custom-select.styles.jsx",[],"/imooptik-frontend/src/components/modal-eshop-filter/modal-eshop-filter.styles.jsx",[],"/imooptik-frontend/src/components/product-input-row/product-input-row.styles.jsx",[],"/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.component.jsx",["806"],"import React, { useState, useContext } from 'react'\nimport { LoadingModalContext } from '../../context/loading-modal/loading-modal.contenxt'\nimport { AuthContext } from '../../context/auth/auth.context'\nimport ReactDOM from 'react-dom'\n\nimport Popup from '../popup/pop-up.component'\n\nimport { retailNames } from '../../context/warehouse/warehouse.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    CustomSelect,\n    SubmitButton\n} from './order-deligate-modal.styles'\n\n\nconst OrderDeligateModal = ({ close, premise, id, refetch }) => {\n    const [value, setValue] = useState(premise)\n    const { token } = useContext(AuthContext)\n    const {\n        getMessage,\n        message,\n        isLoading,\n        setIsLoading,\n        closeModal\n    } = useContext(LoadingModalContext)\n\n    const handleClick = async () => {\n        setIsLoading(true)\n        const myHeaders = new Headers();\n        myHeaders.append(\"auth-token\", token);\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const raw = JSON.stringify({\n            premises: Number(value),\n        })\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/api/admin/orders/${id}/delegate`, requestOptions)\n            console.log(response)\n            if (response.status === 400) {\n                getMessage(\"Faktúra musí byt zaplatená, aby mohla byť priradená prevádzke\")\n            }\n            if (response.status === 401) {\n                getMessage(\"Musíš byt vedúci, aby si mohol manipulovať s priradovanim\")\n            }\n            const data = await response.json()\n\n            if (data.order) {\n                refetch()\n                setIsLoading(false)\n                close()\n                return\n            }\n\n            // getMessage(data.message)\n            setIsLoading(false)\n        } catch (err) {\n            console.log(err)\n            setIsLoading(false)\n        }\n    }\n\n    if (isLoading || message) return <Popup loading={isLoading} title={message} close={closeModal} />\n\n    return ReactDOM.createPortal((\n        <ModalContainer >\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Priradiť k prevádzke</h3>\n                <CustomSelect value={value} onChange={(e) => setValue(e.target.value)}>\n                    <option value={0}>Nezadané</option>\n                    {retailNames.map((name, idx) => {\n                        if (idx === 4) return\n                        return (\n                            <option key={idx} value={idx + 1}>{name}</option>\n                        )\n                    })}\n                </CustomSelect>\n                <SubmitButton onClick={handleClick}>Priradiť</SubmitButton>\n            </Modal>\n        </ModalContainer >\n    ), document.getElementById('portal'))\n}\n\nexport default OrderDeligateModal\n","/imooptik-frontend/src/utils/week-calendar.utils.jsx",[],"/imooptik-frontend/src/components/calendar/calendar.styles.jsx",[],"/imooptik-frontend/src/components/booking-calendar-overview/booking-calendar-overview.styles.jsx",[],"/imooptik-frontend/src/components/calendar-weekdays/calendar-weekdays.styles.jsx",[],"/imooptik-frontend/src/components/booking-appoinment/booking-appoinment.component.jsx",[],"/imooptik-frontend/src/components/modal-booking/modal-booking.component.jsx",["807"],"import React, { useState, useContext, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { BookingContext } from '../../context/booking/booking.context'\n\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\nimport { useFetchById } from '../../hooks/useFetch'\nimport {\n    formatBookingObj\n} from '../../utils/calendar.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SubmitButton,\n    InputContainer,\n    ModalHeader,\n    CustomSelect\n} from './modal-booking.styles'\n\nconst BookingModal = ({ close, calendarId, refetch, selectedBooking }) => {\n    const { createBooking, updateBooking } = useContext(BookingContext)\n    const { response, isLoading } = useFetchById(\"api/booking/bookings\", selectedBooking, !selectedBooking)\n\n    const [booking, setBooking] = useState({})\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleBookingChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete booking[name]\n            setBooking({\n                ...booking\n            })\n            return\n        }\n\n        setBooking(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const handleSubmit = () => {\n        if (!booking?.name) return\n\n        if (isUpdating) {\n            let bookingToUpdate = formatBookingObj(booking)\n\n            console.log(\"BOOKING BEFORE UPDATE\")\n            console.log(bookingToUpdate)\n\n            updateBooking(bookingToUpdate, booking._id)\n        } else {\n            let bookingToAdd = {\n                ...booking,\n                calendar: calendarId\n            }\n\n            console.log(\"BOOKING BEFORE CREATE\")\n            console.log(bookingToAdd)\n            createBooking(bookingToAdd)\n        }\n\n        refetch()\n        close()\n    }\n\n    useEffect(() => {\n        if (isLoading) return\n        if (response?.booking) {\n            setIsUpdating(true)\n            setBooking(response?.booking)\n        }\n    }, [selectedBooking, isLoading])\n\n    useEffect(() => {\n        return () => {\n            setIsUpdating(false)\n            setBooking({})\n        }\n    }, [])\n\n    console.log(booking)\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <ModalHeader>\n                    {!isUpdating && <h2>Nové vyšetrenie</h2>}\n                    {isUpdating && <h2>Upraviť vyšetrenie</h2>}\n                    <div>\n                        <CustomCheckbox\n                            label=\"Aktivné\"\n                            isActive={booking?.active || false}\n                            name='active'\n                            handleClick={() => handleBookingChange({\n                                target: {\n                                    name: 'active',\n                                    value: booking?.active ? !booking?.active : true\n                                }\n                            })}\n                        />\n                    </div>\n                </ModalHeader>\n                <InputContainer>\n                    <CustomInput\n                        label=\"Názov vyšetrenia*\"\n                        name=\"name\"\n                        value={booking?.name || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                <InputContainer>\n                    <CustomInput\n                        label=\"Cena\"\n                        name=\"price\"\n                        value={booking?.price || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                <InputContainer>\n                    <CustomInput\n                        label=\"Čas\"\n                        name=\"time\"\n                        value={booking?.time || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                <InputContainer>\n                    <CustomSelect\n                        label=\"Farba\"\n                        type='text'\n                        name='color'\n                        value={booking?.color || \"\"}\n                        onChange={handleBookingChange}\n                    >\n                        <option value='DD4C4C'>Červená</option>\n                        <option value='ebac01'>Žltá</option>\n                        <option value='32AA5F'>Zelená</option>\n                    </CustomSelect>\n                </InputContainer>\n                <InputContainer>\n                    <CustomTextarea\n                        label=\"Popis\"\n                        rows='5'\n                        name=\"description\"\n                        value={booking?.description || \"\"}\n                        handleChange={handleBookingChange}\n                    />\n                </InputContainer>\n                {!isUpdating && <SubmitButton onClick={handleSubmit}>Pridať</SubmitButton>}\n                {isUpdating && <SubmitButton onClick={handleSubmit}>Uložiť</SubmitButton>}\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById(\"portal\"))\n}\n\nexport default BookingModal\n","/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.component.jsx",[],"/imooptik-frontend/src/components/parameters-table/parameters-table.component.jsx",["808","809","810","811","812"],"import React, { useEffect } from 'react'\n\nimport {\n    TableContainer,\n    TitleCol,\n    Col,\n    OsContainer\n} from './parameters-table.styles'\n\nconst ParametersTable = ({ parameters, handleChange, disabledInputs = false }) => {\n    const checkParameters = (parameter, idx) => {\n        if (parameter.length === 0) {\n            return \"\"\n        }\n        if (parameter[idx] === 1001) {\n            return \"\"\n        }\n\n        return parameter[idx]\n    }\n\n    console.log((Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))).toFixed(2) === 0)\n\n    useEffect(() => {\n        if (handleChange) {\n            if (parameters.diopters && parameters.addition) {\n                handleChange({\n                    target: {\n                        name: \"diopters\",\n                        value: (Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))) === 0 ? \"\" : (Number(checkParameters(parameters.diopters, 0)) + Number(checkParameters(parameters.addition, 0))).toFixed(2)\n                    }\n                }, 2)\n                handleChange({\n                    target: {\n                        name: \"diopters\",\n                        value: (Number(checkParameters(parameters.diopters, 1)) + Number(checkParameters(parameters.addition, 1))) === 0 ? \"\" : (Number(checkParameters(parameters.diopters, 1)) + Number(checkParameters(parameters.addition, 1))).toFixed(2)\n                    }\n                }, 3)\n            }\n        }\n    }, [parameters.diopters[0], parameters.addition[0], parameters.diopters[1], parameters.addition[1]])\n\n    return (\n        <TableContainer>\n            <TitleCol>\n                <div>{\" \"}</div>\n                <div>\n                    <p>P</p>\n                </div>\n                <div>\n                    <p>Ľ</p>\n                </div>\n                <div>\n                    <p>P</p>\n                </div>\n                <div>\n                    <p>Ľ</p>\n                </div>\n            </TitleCol>\n\n\n            <Col>\n                <div>sph</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.diopters, idx)}\n                                name=\"diopters\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>cyl</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.cylinder, idx)}\n                                name=\"cylinder\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>ax</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <OsContainer key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.cylinderAxes, idx)}\n                                name=\"cylinderAxes\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </OsContainer>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>PD</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.distance, idx)}\n                                name=\"distance\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>prizma</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.prism, idx)}\n                                name=\"prism\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>basis</div>\n\n                {[...Array(4)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.basis, idx)}\n                                name=\"basis\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n            <Col>\n                <div>addicia</div>\n\n                {[...Array(2)].map((value, idx) => {\n                    return (\n                        <div key={idx}>\n                            <input\n                                type='text'\n                                value={checkParameters(parameters.addition, idx)}\n                                name=\"addition\"\n                                onChange={(e) => handleChange(e, idx)}\n                                disabled={disabledInputs}\n\n                            />\n                        </div>\n                    )\n                })}\n            </Col>\n\n\n        </TableContainer>\n    )\n}\n\nexport default ParametersTable\n","/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.component.jsx",["813"],"import React from 'react'\n\nimport { useFetchById } from '../../hooks/useFetch'\n\nimport {\n    DeleteButton,\n    Options,\n    OrderContainer,\n    OrderContent,\n    UpdateButton,\n    OrderId\n} from './profile-order-overview.styles'\n\nconst ProfileOrderOverview = ({ id, handleUpdateClick }) => {\n    const orderData = useFetchById('api/admin/orders', id, !id)\n\n    console.log(orderData)\n\n    if (orderData.isLoading) return <OrderContainer>\n        <h3>Načítavam</h3>\n    </OrderContainer>\n\n    const { order } = orderData.response\n\n    const dateData = new Date(order?.date)\n\n    return (\n        <OrderContainer>\n            {orderData.response?.error === 'invalid-branch' ? <OrderContent>\n                <h2>Táto objednávka patri inej prevadzke</h2>\n            </OrderContent> : <OrderContent>\n                    <div>\n                        <h2>ID Objednávky</h2>\n                        <OrderId>{order?.customId}</OrderId>\n                    </div>\n                    <div>\n                        <p>{dateData.toLocaleDateString(\"sk-SK\", { weekday: 'long', month: 'long', day: 'numeric', year: \"numeric\" })}</p>\n                    </div>\n                </OrderContent>}\n\n            {!orderData.response?.error && <Options>\n                <UpdateButton onClick={handleUpdateClick}>\n                    Zobraziť\n                </UpdateButton>\n                {/* <DeleteButton>\n                    Vymazať\n                </DeleteButton> */}\n            </Options>}\n\n        </OrderContainer>\n    )\n}\n\nexport default ProfileOrderOverview\n","/imooptik-frontend/src/components/examinations-overview/examinations-overview.component.jsx",["814","815"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useFetchById } from '../../hooks/useFetch'\nimport { ExaminationContext } from '../../context/examination/examination.context'\n\nimport ExaminationUser from '../examination-user/examination-user.component'\nimport OptometristExaminationModal from '../modal-optometrist-examination/modal-optometrist-examination.component'\n\nimport {\n    checkParameterValue\n} from '../../utils/parameters.utils'\n\nimport {\n    ExaminationsOverviewContainer,\n    Header,\n    ExaminationContainer,\n    ExamHead,\n    ExamTableContainer,\n    HeadTableCol,\n    TableCol,\n    ExaminationOptions,\n    AddButton,\n    UpdateButton,\n    DeleteButton\n} from './examinations-overview.styles'\n\nconst ExaminationsOverview = () => {\n    const params = useParams()\n    const examinationData = useFetchById(\"api/admin/exams/user\", params.id)\n    const { deleteExamination } = useContext(ExaminationContext)\n    const [showOptometristModal, setShowOptometristModal] = useState(false)\n    const [examinations, setExaminations] = useState([])\n    const [examinationToUpdate, setExaminationToUpdate] = useState(null)\n\n    const handleUpdateClick = (e, id) => {\n        e.preventDefault()\n        setExaminationToUpdate(id)\n        setShowOptometristModal(true)\n    }\n\n    const handleDelete = (e, id) => {\n        e.preventDefault()\n        deleteExamination(id)\n        examinationData.refetch()\n    }\n\n    const handleCloseModal = () => {\n        setShowOptometristModal(false)\n        setExaminationToUpdate(null)\n    }\n\n    useEffect(() => {\n        if (!examinationData.isLoading) {\n            if (examinationData.response) {\n                setExaminations(examinationData.response.exams)\n            }\n        }\n    }, [examinationData.isLoading])\n\n    return (\n        <ExaminationsOverviewContainer>\n            {showOptometristModal && <OptometristExaminationModal\n                userId={params.id}\n                examinationToUpdate={examinationToUpdate}\n                refetch={examinationData.refetch}\n                close={handleCloseModal}\n            />}\n            <Header>\n                <h2>Vyšetrenia</h2>\n                <div>\n                    <AddButton type='button' onClick={() => setShowOptometristModal(true)}>Pridať prehliadku</AddButton>\n                </div>\n            </Header>\n\n\n            <div>\n                {examinations && examinations.map((examination, idx) => (\n                    <ExaminationContainer key={idx}>\n                        <ExamHead>\n                            <h3>Dátum</h3>\n                            <p>{new Date(examination?.date).toLocaleDateString(\"sk-SK\", { weekday: 'long', month: 'long', day: 'numeric' })}</p>\n                        </ExamHead>\n                        <ExamTableContainer>\n                            <HeadTableCol>\n                                <div>-</div>\n                                <div>PO</div>\n                                <div>ĽO</div>\n                                <div>PO</div>\n                                <div>ĽO</div>\n                            </HeadTableCol>\n                            <TableCol>\n                                <div>sph</div>\n                                {examination?.parameters?.sph.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>cyl</div>\n                                {examination?.parameters?.cyl.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>ax</div>\n                                {examination?.parameters?.ax.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus D</div>\n                                {examination?.parameters?.vizusD.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus bino</div>\n                                {examination?.parameters?.vizusBino.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>vizus B</div>\n                                {examination?.parameters?.vizusB.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>prizma</div>\n                                {examination?.parameters?.prizma.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>basis</div>\n                                {examination?.parameters?.basis.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>PD</div>\n                                {examination?.parameters?.pd.map((value, idx) => (\n                                    <div key={idx}>\n                                        {checkParameterValue(value)}\n                                    </div>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <div>ADD</div>\n                                {examination?.parameters?.add.map((value, idx) => {\n                                    if (idx > 1) return\n                                    return (\n                                        <div key={idx}>\n                                            {checkParameterValue(value)}\n                                        </div>\n                                    )\n                                })}\n                            </TableCol>\n                        </ExamTableContainer>\n                        <ExaminationOptions>\n                            <ExaminationUser userId={examination.doneBy} />\n                            <div>\n                                <UpdateButton onClick={e => handleUpdateClick(e, examination._id)}>Upraviť</UpdateButton>\n                                <DeleteButton onClick={e => handleDelete(e, examination._id)}>Vymazať</DeleteButton>\n                            </div>\n                        </ExaminationOptions>\n                    </ExaminationContainer>\n                ))}\n            </div>\n        </ExaminationsOverviewContainer>\n    )\n}\n\nexport default ExaminationsOverview\n","/imooptik-frontend/src/sections/order/steps/4-summary/summary.styles.jsx",[],"/imooptik-frontend/src/sections/order/steps/3-select-lenses/select-lenses.styles.jsx",[],"/imooptik-frontend/src/utils/orders.utils.jsx",[],"/imooptik-frontend/src/sections/order/steps/2-select-product/select-product.styles.jsx",[],"/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.component.jsx",["816","817"],"import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    formatDate,\n    formatCalendarStartTime,\n    formatCalendarEndTime\n} from '../../utils/calendar.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    SubmitButton,\n    Navbar,\n    UserTable,\n    TableHead,\n    Tablebody,\n    TableCol,\n    SearchTab,\n    CustomSelect,\n    DateContainer\n} from './modal-user-booking.styles'\n\nconst UserBookingModal = ({ refetchWeekCalendar, close, day, calendar, refetchCalendar, createUserBooking }) => {\n\n    const [query, setQuery] = useState(null)\n    const [activeTab, setActiveTab] = useState(0)\n    const [userBooking, setUserBooking] = useState({})\n    const [bookingDate, setBookingDate] = useState({\n        date: \"\",\n        hour: \"\",\n        min: 0\n    })\n\n    const [startTime, setStartTime] = useState(null)\n    const [endTime, setEndTime] = useState(null)\n\n\n\n    const { refetch, response } = useFetchByQuery('api/admin/users/filter', query, !query)\n\n    const handleSearch = () => {\n        if (!query) return\n        refetch()\n    }\n\n    const handleSearchOnEnter = (e) => {\n        if (query !== null) {\n            if (e.key === 'Enter') {\n                refetch()\n            }\n        }\n    }\n\n    const handleUserBookingChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete userBooking[name]\n            setUserBooking({ ...userBooking })\n            return\n        }\n\n        setUserBooking(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const selectUser = (userObj) => {\n        setUserBooking(prevValue => ({\n            ...prevValue,\n            ...userObj\n        }))\n        setActiveTab(0)\n        setQuery(null)\n    }\n\n    const handleChangeDate = e => {\n        const { name, value } = e.target\n\n        setBookingDate(prevValue => ({\n            ...prevValue,\n            [name]: value\n        }))\n    }\n\n    const handleSubmit = () => {\n        // if (!userBooking?.name) return\n        // if (!userBooking?.email) return\n        // if (!userBooking?.phone) return\n        // if (!userBooking?.booking) return\n\n        let bookingToAdd = {\n            ...userBooking,\n            dueTime: formatDate(bookingDate),\n            values: {}\n        }\n\n        console.log(\"USER BOOKING BEFORE SEND\")\n        console.log(bookingToAdd)\n\n\n        createUserBooking(bookingToAdd, refetchCalendar, close, refetchWeekCalendar)\n        // refetchCalendar()\n        // close()\n    }\n\n    useEffect(() => {\n        if (day) {\n            const { time, dayNumber, month, year } = day\n            console.log(\"DAY DATA\")\n            console.log(day)\n\n            setStartTime(formatCalendarStartTime(calendar, day))\n            setEndTime(formatCalendarEndTime(calendar, day))\n            // const formatedDate = formatDate(`${dayNumber}-${month}-${year}`, time)\n            setBookingDate({\n                date: `${year}-${month < 9 ? `0${month + 1}` : (month + 1)}-${dayNumber < 10 ? `0${dayNumber}` : dayNumber}`,\n                hour: Number(time?.split(\"/\")[0]),\n                min: Number(time?.split(\"/\")[1])\n            })\n        }\n    }, [day])\n\n    useEffect(() => {\n        return () => {\n            setUserBooking({})\n            setQuery(null)\n            setActiveTab(0)\n        }\n    }, [])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h2>Objednať zákazníka</h2>\n\n                <Navbar\n                    items={optionTabs}\n                    activeIndex={activeTab}\n                    setActiveIndex={setActiveTab}\n                />\n\n                {activeTab === 1 ? (\n                    <SearchTab>\n                        <CustomInput\n                            label='Meno, priezvisko, e-mail alebo tel. číslo'\n                            name='query'\n                            value={query ? query?.query : \"\"}\n                            handleChange={e => setQuery({\n                                limit: 10,\n                                query: e.target.value\n                            })}\n                            onKeyPress={handleSearchOnEnter}\n                        />\n\n                        <SubmitButton onClick={handleSearch}>Hľadať</SubmitButton>\n\n\n                        <UserTable>\n                            <TableHead>\n                                <TableCol>Meno</TableCol>\n                                <TableCol>E-mail</TableCol>\n                                <TableCol>Tel. číslo</TableCol>\n                            </TableHead>\n                            {response?.users ? response?.users?.map(({ name, email, phone }, idx) => (\n                                <Tablebody key={idx} onClick={() => selectUser({ name, email, phone })}>\n                                    <TableCol>{name}</TableCol>\n                                    <TableCol>{email}</TableCol>\n                                    <TableCol>{phone}</TableCol>\n                                </Tablebody>\n                            )) : (\n                                    <div>\n                                        <p>Žiaden výsledok</p>\n                                    </div>\n                                )}\n                        </UserTable>\n                    </SearchTab>\n                ) : (\n                        <React.Fragment>\n                            <div>\n                                <h3>Dátum vyšetrenia</h3>\n                                <DateContainer>\n                                    <CustomInput\n                                        label=''\n                                        type='date'\n                                        name='date'\n                                        handleChange={handleChangeDate}\n                                        value={bookingDate?.date}\n\n                                    />\n                                    <div>\n                                        <CustomInput\n                                            label='Čas'\n                                            type='number'\n                                            name='hour'\n                                            value={bookingDate?.hour?.toString()}\n                                            min={startTime?.split(\":\")[0]}\n                                            max={endTime?.split(\":\")[0]}\n                                            handleChange={handleChangeDate}\n                                            step=\"1\"\n                                        />\n                                    </div>\n                                    <p>:</p>\n                                    <div>\n                                        <CustomSelect\n                                            name='min'\n                                            value={bookingDate?.min?.toString()}\n                                            onChange={handleChangeDate}\n                                        >\n                                            <option value={0}>00</option>\n                                            {calendar?.interval === 30 && <option value={30}>30</option>}\n                                        </CustomSelect>\n                                    </div>\n                                </DateContainer>\n                            </div>\n                            <div>\n                                <CustomInput\n                                    label='Meno*'\n                                    name='name'\n                                    value={userBooking?.name || \"\"}\n                                    handleChange={handleUserBookingChange}\n                                />\n                            </div>\n                            <div>\n                                <CustomInput\n                                    label='E-mail*'\n                                    name='email'\n                                    value={userBooking?.email || \"\"}\n                                    handleChange={handleUserBookingChange}\n                                />\n                            </div>\n                            <div>\n                                <CustomInput\n                                    label='Tel. číslo*'\n                                    name='phone'\n                                    value={userBooking?.phone || \"\"}\n                                    handleChange={handleUserBookingChange}\n                                />\n                            </div>\n\n                            <div>\n                                <CustomTextarea\n                                    label='Poznámka'\n                                    name='note'\n                                    rows=\"5\"\n                                    value={userBooking?.note || \"\"}\n                                    handleChange={handleUserBookingChange}\n                                />\n                            </div>\n\n                            <div>\n                                <h3>Vyšetrenie</h3>\n                                <CustomSelect\n                                    name='booking'\n                                    value={userBooking?.booking || \"\"}\n                                    onChange={handleUserBookingChange}\n                                >\n                                    <option value={''}>Nezvolené</option>\n                                    {calendar?.bookings.map((booking, idx) => {\n                                        if (booking.active === false) return\n                                        return (\n                                            <option key={idx} value={booking._id}>{booking.name}</option>\n                                        )\n                                    })}\n                                </CustomSelect>\n                            </div>\n                        </React.Fragment>\n                    )}\n\n                {activeTab === 0 && <SubmitButton onClick={handleSubmit}>Vytvoriť</SubmitButton>}\n            </Modal>\n        </ModalContainer >\n    ), document.getElementById('portal'))\n}\n\nexport default UserBookingModal\n\nconst optionTabs = [\n    {\n        id: 0,\n        name: \"Nový zákazník\",\n    },\n    {\n        id: 1,\n        name: \"Vyhladať zákazníka\",\n    },\n]","/imooptik-frontend/src/sections/order/steps/1-select-user/select-user.styles.jsx",[],"/imooptik-frontend/src/components/calendar-booked-day/calendar-booked-day.component.jsx",["818","819","820"],"import React, { useState, useEffect } from 'react'\nimport stringSimilarity from \"string-similarity\"\n\n\n// import Spinner from '../spinner/spinner.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\n\nimport {\n    BookedDayContainer\n} from './calendar-booked-day.styles'\n\nconst CalendarBookedDay = ({ dayData, calendarId, time, userBookings, open }) => {\n    const [isHalfHour, setIsHalfHour] = useState(false)\n    const { response, isLoading, refetch } = useFetchByQuery(`api/booking/calendars/${calendarId}/dayInfo`, {\n        date: dayData.bookingDate\n    }, !dayData?.bookingDate)\n    const [appointment, setAppointment] = useState(null)\n    const [isValidDueTime, setIsValiDueTime] = useState(false)\n    const [isBelongToAnother, setIsBelongToAnother] = useState(false)\n\n    useEffect(() => {\n        if (isLoading) return\n        const bookingsDueTime = response?.userBookings?.filter(booking => !booking?.cancelled).map(booking => booking?.dueTime)\n\n        // console.log(bookingsDueTime)\n        if (bookingsDueTime?.length > 0) {\n            const matches = stringSimilarity.findBestMatch(userBookings?.dueDate, bookingsDueTime);\n\n            const exactBooking = response?.userBookings?.find(booking => booking?.dueTime === userBookings?.dueDate)\n            const todayBooking = response?.userBookings?.find(booking => booking?.dueTime === matches?.bestMatch?.target)\n\n            if (userBookings?.dueDate === exactBooking?.dueTime) {\n                setIsValiDueTime(true)\n            } else if (matches?.bestMatch?.target === todayBooking?.dueTime) {\n                setIsBelongToAnother(true)\n            }\n\n            setAppointment(exactBooking)\n\n        }\n\n    }, [isLoading])\n\n    useEffect(() => {\n        if (!dayData?.bookingDate) return\n        refetch()\n    }, [dayData?.bookingDate])\n\n    useEffect(() => {\n        return () => {\n            setIsHalfHour(false)\n            setIsValiDueTime(false)\n        }\n    }, [])\n\n    return (\n        <React.Fragment>\n            <BookedDayContainer onClick={isValidDueTime ? open : () => { }} color={appointment?.booking?.color ? `#${appointment?.booking?.color}` : `var(--appointment-container-background-color)`} isHalfHour={isHalfHour}>\n                {/* <BookedDayContainer onClick={() => console.log(appointment)} color={appointment?.booking?.color ? `#${appointment?.booking?.color}` : `#${response?.userBookings[0]?.booking?.color}`} isHalfHour={isHalfHour}> */}\n                {isValidDueTime && <div>\n                    <h4>{appointment && appointment?.booking?.name}</h4>\n                    <h5>{time}</h5>\n                </div>}\n                {/* {(isBelongToAnother && !isValidDueTime) && <div>\n                    <h4>Test</h4>\n                </div>} */}\n\n            </BookedDayContainer>\n        </React.Fragment>\n    )\n}\n\nexport default CalendarBookedDay\n","/imooptik-frontend/src/components/modal-userbookings-details/modal-userbookings-details.component.jsx",["821"],"import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Spinner from '../spinner/spinner.component'\n\nimport { useFetchByQuery } from '../../hooks/useFetch'\nimport { retailNames } from '../../utils/warehouse.utils'\n\nimport {\n    ModalContainer,\n    Modal,\n    CloseButton,\n    GridContainer,\n    BlockContainer,\n    Header,\n    CancelButton,\n    Container\n} from './modal-userbookings-details.styles'\n\nconst UserbookingDetailsModal = ({ close, userBooking, calendarId, cancelUserBooking }) => {\n    const { response, isLoading } = useFetchByQuery(`api/booking/calendars/${calendarId}/dayInfo`, {\n        date: userBooking?.userBookings?.dueDate.split(\":\")[1]\n    }, !userBooking)\n\n    const [booking, setBooking] = useState(null)\n\n    useEffect(() => {\n        if (isLoading) return\n        if (!response) return\n\n        const newBooking = response.userBookings.find(booking => booking.dueTime === userBooking.userBookings.dueDate)\n        console.log(newBooking)\n        setBooking(newBooking)\n\n    }, [isLoading])\n\n    console.log(booking)\n\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                {!booking && <Spinner />}\n                <h2>{booking?.booking?.name}</h2>\n\n                <Header>\n                    <h3>Informácie:</h3>\n                    <CancelButton onClick={() => cancelUserBooking(booking._id)}>Zrušiť rezerváciu</CancelButton>\n                </Header>\n                <GridContainer>\n                    <BlockContainer>\n                        <h3>Meno a priezvisko</h3>\n                        <p>{booking?.name}</p>\n                    </BlockContainer>\n                    <BlockContainer>\n                        <h3>Prevadzka</h3>\n                        <p>{retailNames[booking?.booking?.premises]}</p>\n                    </BlockContainer>\n                    <BlockContainer>\n                        <h3>Tel. číslo</h3>\n                        <p>{booking?.phone}</p>\n                    </BlockContainer>\n                    <BlockContainer>\n                        <h3>E-mail</h3>\n                        <p>{booking?.email}</p>\n                    </BlockContainer>\n                    <BlockContainer>\n                        <h3>Dátum</h3>\n                        <p>{booking?.dueTime}</p>\n                    </BlockContainer>\n                    <BlockContainer>\n                        <h3>Zrušené</h3>\n                        <p>{booking?.cancelled ? \"Ano\" : \"Nie\"}</p>\n                    </BlockContainer>\n                </GridContainer>\n\n                <Container>\n                    <BlockContainer>\n                        <h3>Poznámka</h3>\n                        {booking?.note ? (\n                            <p>{booking?.note}</p>\n                        ) : (\n                                <p>Žiadná poznámka</p>\n                            )}\n                    </BlockContainer>\n\n                    <BlockContainer>\n                        <h3>Popis</h3>\n                        <p>{booking?.booking?.description}</p>\n                    </BlockContainer>\n\n                </Container>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default UserbookingDetailsModal\n","/imooptik-frontend/src/components/order-summary-lenses-name/order-summary-lenses-name.component.jsx",[],"/imooptik-frontend/src/components/order-summary-product-name/order-summary-product-name.component.jsx",[],"/imooptik-frontend/src/components/order-cart-lenses-row/order-cart-lenses-row.component.jsx",[],"/imooptik-frontend/src/components/custom-back-button/custom-back-button.component.jsx",[],"/imooptik-frontend/src/components/modal-order-update-user/modal-order-update-user.component.jsx",["822","823","824"],"import React, { useContext, useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { AuthContext } from '../../context/auth/auth.context'\nimport { UserContext } from '../../context/user/user.context'\n\nimport UserForm from '../user-form/user-form.component'\n\nimport {\n    CloseButton,\n    Modal,\n    ModalContainer,\n    UpdateButton\n} from './modal-order-update-user.styles'\n\nconst OrderUpdateUserModal = ({ close, userId, refetchUser, addUser }) => {\n    const { isAdmin, isOptometrist } = useContext(AuthContext)\n    const {\n        user,\n        isUpdating,\n        handleChange,\n        handleParameterChange,\n        handleCompanyChange,\n        getUser,\n        updateUser\n    } = useContext(UserContext)\n\n    const [userObj, setUserObj] = useState({})\n    const [hasChanges, setHasChanges] = useState(false)\n\n    const handleUserChange = (e) => {\n        setHasChanges(true)\n        const { name, value } = e.target\n\n        handleChange(e)\n\n\n        if (value === '') {\n            delete userObj[name]\n            // delete userObj.company[]\n            return\n        }\n\n        setUserObj({\n            ...userObj,\n            [name]: value\n        })\n    }\n\n    const handleLensesParameterChange = (e, idx) => {\n        setHasChanges(true)\n\n        const { name, value } = e.target\n        let arr = user.lenses[name]\n        arr[idx] = value\n\n\n        handleParameterChange(e, idx)\n        setUserObj({\n            ...userObj,\n            lenses: {\n                ...user.lenses,\n                [name]: arr\n            }\n        })\n    }\n\n    const handleCompanyAddressChange = (e) => {\n        setHasChanges(true)\n\n        const { name, value } = e.target\n        handleCompanyChange(e)\n\n        if (value === '') {\n            delete userObj.company[name]\n            if (Object.keys(userObj.company).length === 0) {\n                delete userObj[\"company\"]\n            }\n            // delete userObj.company[]\n            return\n        }\n\n        setUserObj({\n            ...userObj,\n            company: {\n                ...userObj.company,\n                [name]: value\n            }\n        })\n    }\n\n    const handleSubmit = (e, path) => {\n        e.preventDefault()\n        setHasChanges(false)\n\n        console.log(\"Update existing user\")\n        console.log(\"Update existing user\")\n        console.log(\"Update existing user\")\n        console.log(userObj)\n        if (userObj.fName || userObj.lName) {\n            delete userObj[\"fName\"]\n            delete userObj[\"lName\"]\n        } else if (!userObj.fName || !userObj.lName) {\n            delete userObj[\"name\"]\n        }\n        updateUser(userObj, user._id, \"isOrder\", refetchUser, close, addUser)\n    }\n\n    useEffect(() => {\n        setUserObj({\n            ...userObj,\n            name: user.fName + \" \" + user.lName\n        })\n    }, [userObj.fName, userObj.lName])\n\n    useEffect(() => {\n        if (userId) {\n            getUser(userId)\n        }\n    }, [userId])\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <UserForm\n                    user={user}\n                    isAdmin={isAdmin}\n                    isUpdating={isUpdating}\n                    isOptometrist={isOptometrist}\n                    handleChange={handleUserChange}\n                    handleParameterChange={handleLensesParameterChange}\n                    handleCompanyChange={handleCompanyAddressChange}\n                    isOrder={true}\n                />\n\n                <UpdateButton onClick={handleSubmit}>Uložiť</UpdateButton>\n            </Modal>\n        </ModalContainer >\n    ), document.getElementById('portal'))\n}\n\nexport default OrderUpdateUserModal\n","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.component.jsx",["825"],"import React, { useState, useEffect } from 'react'\n\nimport {\n    formatPrice\n} from '../../utils/warehouse.utils'\n\nimport CustomInput from '../custom-input/custom-input.component'\n\nimport {\n    Modal,\n    AddButton,\n    CustomSelect,\n    OptionsCheckbox,\n    OverwriteAddressCheckbox,\n    DiscountCheckboxContainer\n} from './modal-finish-order.styles'\n\nconst FinishOrderModal = ({\n    order,\n    combinedProducts,\n    createOrder,\n    setHasChanged,\n    isUpdating,\n    updateOrder\n}) => {\n    const [orderDetail, setOrderDetails] = useState({\n        paymentType: \"cash\"\n    })\n    const [hasDeposit, setHasDeposit] = useState(false)\n    const [overwrite, setOverwrite] = useState(false)\n\n    const toggleDeposit = prevValue => {\n        if (prevValue) {\n            setHasDeposit(false)\n            if (orderDetail.paidAlready) {\n                delete orderDetail[\"paidAlready\"]\n                setOrderDetails({\n                    ...orderDetail\n                })\n            }\n        } else {\n            setHasDeposit(true)\n        }\n    }\n\n    const toggleOverwriteAddress = prevValue => {\n        if (prevValue) {\n            setOverwrite(false)\n            if (orderDetail.overwrite) {\n                delete orderDetail[\"overwrite\"]\n                setOrderDetails({\n                    ...orderDetail\n                })\n            }\n        } else {\n            setOverwrite(true)\n        }\n    }\n\n    const handleOrderDetailChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete orderDetail[name]\n            setOrderDetails({\n                ...orderDetail\n            })\n            return\n        }\n\n        setOrderDetails({\n            ...orderDetail,\n            [name]: value\n        })\n    }\n\n    const handleAddressOverwriteChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete orderDetail.overwrite[name]\n            setOrderDetails({\n                ...orderDetail\n            })\n            return\n        }\n\n        setOrderDetails({\n            ...orderDetail,\n            overwrite: {\n                ...orderDetail.overwrite,\n                [name]: value\n            }\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (isUpdating) {\n            let orderObj = {\n                ...orderDetail,\n            }\n            delete orderObj['paymentType']\n            delete orderObj['shouldDeliver']\n\n            setHasChanged(false)\n            updateOrder(orderObj, order.order._id)\n\n        } else {\n            let orderObj = {\n                ...orderDetail,\n                user: order.user._id,\n                combinedProducts: combinedProducts.map(product => product._id),\n                status: hasDeposit ? \"half-paid\" : \"paid\"\n            }\n\n            if (orderDetail.paidAlready) {\n                orderObj = {\n                    ...orderObj,\n                    paidAlready: formatPrice(orderDetail.paidAlready)\n                }\n            }\n\n            console.log(orderObj)\n            setHasChanged(false)\n            createOrder(orderObj)\n        }\n    }\n\n    useEffect(() => {\n        if (isUpdating) {\n            if (order?.order) {\n                handleOrderDetailChange({\n                    target: {\n                        name: 'shouldDeliver',\n                        value: order?.order?.shouldDeliver\n                    }\n                })\n                handleOrderDetailChange({\n                    target: {\n                        name: 'buyingAsCompany',\n                        value: order?.order?.buyingAsCompany\n                    }\n                })\n            }\n        }\n    }, [isUpdating, order])\n\n    useEffect(() => {\n        return () => {\n            setOrderDetails({\n                paymentType: \"cash\"\n            })\n            setHasDeposit(false)\n            setOverwrite(false)\n        }\n    }, [])\n\n    return (\n        <Modal>\n            <h2>{isUpdating ? \"Upraviť objednávku\" : 'Dokončeniť objednávky'}</h2>\n\n            {!isUpdating && <div>\n                <h4>Spôsob platby</h4>\n\n                <CustomSelect\n                    name='paymentType'\n                    value={orderDetail?.paymentType ?? \"cash\"}\n                    onChange={(e) => handleOrderDetailChange(e)}\n                >\n                    <option value={\"cash\"}>Hotovosť</option>\n                    <option value={\"card\"}>Karta</option>\n                    <option value={\"coupon\"}>Kupón</option>\n                </CustomSelect>\n\n                <DiscountCheckboxContainer>\n                    <input id=\"hasDeposit\" name='hasDeposit' type='checkbox' value={hasDeposit} onChange={() => toggleDeposit(hasDeposit)} />\n                    <label htmlFor='hasDeposit'>Pridať zálohu</label>\n                </DiscountCheckboxContainer>\n\n                {hasDeposit && (\n                    <CustomInput\n                        label=\"Zaplatená záloha\"\n                        name=\"paidAlready\"\n                        type='text'\n                        value={orderDetail?.paidAlready ?? \"\"}\n                        onChange={e => handleOrderDetailChange(e)}\n                    />\n                )}\n            </div>\n            }\n            <div>\n                <h4>Informácie o doručení</h4>\n                <OptionsCheckbox\n                    label={\"Doručiť na adresu\"}\n                    isActive={orderDetail?.shouldDeliver}\n                    handleClick={() => handleOrderDetailChange({\n                        target: {\n                            name: 'shouldDeliver',\n                            value: orderDetail?.shouldDeliver ? !orderDetail?.shouldDeliver : true\n                        }\n                    })}\n                />\n                <OptionsCheckbox\n                    label={\"Nákup na firmu\"}\n                    isActive={orderDetail?.buyingAsCompany}\n                    handleClick={() => handleOrderDetailChange({\n                        target: {\n                            name: 'buyingAsCompany',\n                            value: orderDetail?.buyingAsCompany ? !orderDetail?.buyingAsCompany : true\n                        }\n                    })}\n                />\n\n                {orderDetail?.shouldDeliver && (\n                    <div>\n                        <h4>Adresa</h4>\n                        <p>{order.user.psc}</p>\n                        <p>{order.user.address}</p>\n                        <p>{order.user.city}</p>\n                        <p>{order.user.country}</p>\n\n                        <div>\n                            <OverwriteAddressCheckbox>\n                                <input id=\"overwrite\" name='overwrite' type='checkbox' value={overwrite} onChange={() => toggleOverwriteAddress(overwrite)} />\n                                <label htmlFor='overwrite'>Iná adresa</label>\n                            </OverwriteAddressCheckbox>\n\n                            {overwrite && (\n                                <div>\n                                    <CustomInput\n                                        label=\"Adresa\"\n                                        name=\"address\"\n                                        type='text'\n                                        value={orderDetail?.overwrite?.address ?? \"\"}\n                                        onChange={e => handleAddressOverwriteChange(e)}\n                                    />\n                                    <CustomInput\n                                        label=\"PSČ\"\n                                        name=\"psc\"\n                                        type='text'\n                                        value={orderDetail?.overwrite?.psc ?? \"\"}\n                                        onChange={e => handleAddressOverwriteChange(e)}\n                                    />\n                                    <CustomInput\n                                        label=\"Mesto\"\n                                        name=\"city\"\n                                        type='text'\n                                        value={orderDetail?.overwrite?.city ?? \"\"}\n                                        onChange={e => handleAddressOverwriteChange(e)}\n                                    />\n                                    <CustomInput\n                                        label=\"Štát\"\n                                        name=\"country\"\n                                        type='text'\n                                        value={orderDetail?.overwrite?.country ?? \"\"}\n                                        onChange={e => handleAddressOverwriteChange(e)}\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                )}\n            </div>\n\n            {isUpdating && <AddButton onClick={handleSubmit}>Upraviť objednávku</AddButton>}\n            {!isUpdating && <AddButton onClick={handleSubmit}>Vytvoriť objednávku</AddButton>}\n        </Modal>\n    )\n}\n\nexport default FinishOrderModal\n","/imooptik-frontend/src/components/order-cart-row/order-cart-row.component.jsx",["826"],"/imooptik-frontend/src/components/custom-textarea/custom-textarea.styles.jsx",[],"/imooptik-frontend/src/components/custom-checkbox/custom-checkbox.styles.jsx",[],"/imooptik-frontend/src/components/custom-form-switch/custom-form-switch.styles.jsx",[],"/imooptik-frontend/src/components/order-deligate-modal/order-deligate-modal.styles.jsx",[],"/imooptik-frontend/src/components/parameters-table/parameters-table.styles.jsx",[],"/imooptik-frontend/src/components/modal-booking/modal-booking.styles.jsx",[],"/imooptik-frontend/src/components/profile-order-overview/profile-order-overview.styles.jsx",[],"/imooptik-frontend/src/components/examinations-overview/examinations-overview.styles.jsx",[],"/imooptik-frontend/src/utils/parameters.utils.jsx",[],"/imooptik-frontend/src/components/modal-user-bookings/modal-user-booking.styles.jsx",[],"/imooptik-frontend/src/components/calendar-booked-day/calendar-booked-day.styles.jsx",[],"/imooptik-frontend/src/components/modal-order-update-user/modal-order-update-user.styles.jsx",[],"/imooptik-frontend/src/components/order-cart-lenses-row/order-cart-lenses-row.styles.jsx",[],"/imooptik-frontend/src/components/examination-user/examination-user.component.jsx",[],"/imooptik-frontend/src/components/modal-userbookings-details/modal-userbookings-details.styles.jsx",[],"/imooptik-frontend/src/components/custom-back-button/custom-back-button.styles.jsx",[],"/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.component.jsx",["827","828","829","830"],"import React, { useState, useContext, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { ExaminationContext } from '../../context/examination/examination.context'\nimport { useFetchById } from '../../hooks/useFetch'\nimport CustomInput from '../custom-input/custom-input.component'\nimport CustomTextarea from '../custom-textarea/custom-textarea.component'\n\nimport {\n    checkParameter,\n    formatParameter,\n    checkParameterValue\n} from '../../utils/parameters.utils'\n\nimport {\n    CloseButton,\n    Modal,\n    ModalContainer,\n    SubmitButton,\n    Container,\n    ExamTypeCheckbox,\n    TwoColContainer,\n    InputContainer,\n    IsSuitableCheckbox,\n    Col,\n    Table,\n    TableTitleCol,\n    TableCol,\n    TableBlock,\n    ObjectiveRefTable,\n    SubjectiveRefTable\n} from './modal-optometrist-examination.styles'\n\nconst OptometristExaminationModal = ({ close, refetch, userId, examinationToUpdate }) => {\n    const examinationData = useFetchById('api/admin/exams', examinationToUpdate, !examinationToUpdate)\n\n    const { createExamination, updateExamination } = useContext(ExaminationContext)\n    const [examinationObj, setExaminationObj] = useState({})\n\n    //REFRAKCIA\n    const [vlastne_okuliare, setVlastne_okuliare] = useState({})\n    const [objektivna_refrakcia, setObjektivna_refrakcia] = useState({})\n    const [subjektivna_refrakcia, setSubjektivna_refrakcia] = useState({})\n\n    const [activeExamType, setActiveExamType] = useState(1)\n\n    const handleParameterChange = (e, idx, parameterObj, updateParameter) => {\n        const { name, value } = e.target\n        let arr = parameterObj[name] || [1001, 1001]\n        arr[idx] = value === '' ? 1001 : value\n\n        updateParameter({\n            ...parameterObj,\n            [name]: arr\n        })\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target\n\n        if (value === '') {\n            delete examinationObj[name]\n            setExaminationObj({\n                ...examinationObj,\n            })\n            return\n        }\n\n        setExaminationObj({\n            ...examinationObj,\n            [name]: value\n        })\n    }\n\n    const formatParameters = (e, newParameters, parameterObj, updateParameter) => {\n        if (newParameters) {\n            const { name } = e.target\n            updateParameter({\n                ...parameterObj,\n                [name]: newParameters.map(value => formatParameter(value))\n            })\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        // let examObj = {\n        //     ...examinationObj,\n        //     doneTo: userId,\n        //     parameters: {\n        //         ...parameters\n        //     }\n        // }\n\n        // console.log(\"EXAMINATION OBJECT BEFORE SEND\")\n        // console.log(examObj)\n\n        // if (examinationToUpdate) {\n        //     console.log(\"UPDATE EXAMINATION\")\n        //     delete examObj[\"doneTo\"]\n        //     delete examObj[\"doneBy\"]\n        //     delete examObj[\"date\"]\n        //     delete examObj[\"_id\"]\n        //     delete examObj[\"__v\"]\n\n        //     console.log(examObj)\n        //     updateExamination(examObj, examinationToUpdate)\n\n        // } else {\n        //     console.log(\"CREATE EXAMINATION\")\n\n        //     createExamination(examObj)\n        // }\n        // refetch()\n        // close()\n    }\n\n    console.log(examinationObj)\n    console.log(vlastne_okuliare)\n\n    useEffect(() => {\n        if (!examinationData.isLoading) {\n            if (examinationData.response) {\n                // setParameters(examinationData.response?.exam?.parameters)\n                setExaminationObj(examinationData.response?.exam)\n            }\n        }\n    }, [examinationToUpdate, examinationData.isLoading])\n\n    useEffect(() => {\n        return () => {\n            setExaminationObj({})\n            // setParameters({})\n        }\n    }, [])\n\n    // if (true) return (\n    //     <ModalContainer>\n    //         <CloseButton onClick={close} />\n    //         <Modal>\n    //             <h1>Tu sa práve pracuje.</h1>\n    //         </Modal>\n    //     </ModalContainer>\n    // )\n\n    return ReactDOM.createPortal((\n        <ModalContainer>\n            <CloseButton onClick={close} />\n            <Modal>\n                <h3>Vyšetrenie</h3>\n                <Container>\n                    <h4>Typ prehliadky</h4>\n                    <div>\n                        {examTypes.map((type, idx) => (\n                            <ExamTypeCheckbox\n                                key={idx}\n                                label={type.name}\n                                isActive={activeExamType === type.value}\n                                handleClick={() => setActiveExamType(type.value)}\n                            />\n                        ))}\n                    </div>\n                </Container>\n\n                {activeExamType === 1 && (\n                    <Container>\n                        <h4>Refrakcia</h4>\n                        <TwoColContainer>\n                            <div>\n                                <h5>Nosi od:</h5>\n                                <CustomInput\n                                    label={''}\n                                    value={examinationObj?.nosi_od || \"\"}\n                                    type=\"date\"\n                                    name=\"nosi_od\"\n                                    handleChange={handleChange}\n                                />\n                            </div>\n                            <div>\n                                <h5>Posledná korekcia:</h5>\n                                <CustomInput\n                                    label={''}\n                                    value={examinationObj?.posledna_korekcia || \"\"}\n                                    type=\"date\"\n                                    name=\"posledna_korekcia\"\n                                    handleChange={handleChange}\n                                />\n                            </div>\n                        </TwoColContainer>\n                        <TwoColContainer>\n                            <InputContainer>\n                                <CustomInput\n                                    label={'Typ, spôsob'}\n                                    value={examinationObj?.typ_sposob || \"\"}\n                                    type=\"text\"\n                                    name=\"typ_sposob\"\n                                    handleChange={handleChange}\n                                />\n                            </InputContainer>\n                            <InputContainer>\n                                <IsSuitableCheckbox\n                                    label={\"Vyhovuje\"}\n                                    isActive={examinationObj?.vyhovuje || false}\n                                    handleClick={() => handleChange({\n                                        target: {\n                                            name: \"vyhovuje\",\n                                            value: examinationObj?.vyhovuje ? !examinationObj.vyhovuje : true\n                                        }\n                                    })}\n                                />\n                            </InputContainer>\n                        </TwoColContainer>\n                        <InputContainer>\n                            <CustomTextarea\n                                label='Anamnéza'\n                                name=\"anamneza\"\n                                value={examinationObj?.anamneza || ''}\n                                rows=\"5\"\n                                handleChange={handleChange}\n                            />\n                        </InputContainer>\n                        <InputContainer>\n                            <CustomTextarea\n                                label='Doplňujúce informácie'\n                                name=\"dopl_info\"\n                                value={examinationObj?.dopl_info || \"\"}\n                                rows=\"3\"\n                                handleChange={handleChange}\n                            />\n                        </InputContainer>\n\n                        <h4>Vlastné okuliare</h4>\n\n                        <Table>\n                            <TableTitleCol>\n                                <Col>{\"-\"}</Col>\n                                <Col>P.</Col>\n                                <Col>L.</Col>\n                            </TableTitleCol>\n\n                            <TableCol>\n                                <Col>V.NATUR</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='vnatur'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.vnatur, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.vnatur, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>SPH</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='sph'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.sph, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.sph, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>CYL</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='cyl'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.cyl, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.cyl, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n\n                            </TableCol>\n                            <TableCol>\n                                <Col>AX</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='ax'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.ax, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.ax, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n\n                            </TableCol>\n                            <TableCol>\n                                <Col>ADD</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='add'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.add, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.add, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n\n                            </TableCol>\n                            <TableCol>\n                                <Col>V.ISUS</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='visus'\n                                            type='text'\n                                            value={checkParameter(vlastne_okuliare?.visus, idx)}\n                                            onChange={e => handleParameterChange(e, idx, vlastne_okuliare, setVlastne_okuliare)}\n                                            onBlur={(e) => formatParameters(e, vlastne_okuliare?.visus, vlastne_okuliare, setVlastne_okuliare)}\n                                        />\n                                    </Col>\n                                ))}\n\n                            </TableCol>\n                            <TableCol>\n                                <Col>V.BINO</Col>\n                                <Col>\n                                    <input\n                                        name='vbino'\n                                        type='text'\n                                        value={checkParameterValue(vlastne_okuliare?.vbino)}\n                                        onChange={e => setVlastne_okuliare(prevValue => ({\n                                            ...prevValue,\n                                            [e.target.name]: e.target.value\n                                        }))}\n                                        onBlur={(e) => setVlastne_okuliare(prevValue => ({\n                                            ...prevValue,\n                                            [e.target.name]: Number(e.target.value)\n                                        }))}\n                                    />\n                                </Col>\n                            </TableCol>\n                        </Table>\n\n                        <h4>Objektivná refrakcia</h4>\n\n                        <ObjectiveRefTable>\n                            <TableTitleCol>\n                                <Col>{\"-\"}</Col>\n                                <Col>P.</Col>\n                                <Col>L.</Col>\n                            </TableTitleCol>\n\n                            <TableCol>\n                                <Col>SPH</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='sph'\n                                            type='text'\n                                            value={checkParameter(objektivna_refrakcia?.sph, idx)}\n                                            onChange={e => handleParameterChange(e, idx, objektivna_refrakcia, setObjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, objektivna_refrakcia?.sph, objektivna_refrakcia, setObjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>CYL</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='cyl'\n                                            type='text'\n                                            value={checkParameter(objektivna_refrakcia?.cyl, idx)}\n                                            onChange={e => handleParameterChange(e, idx, objektivna_refrakcia, setObjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, objektivna_refrakcia?.cyl, objektivna_refrakcia, setObjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>AX</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='ax'\n                                            type='text'\n                                            value={checkParameter(objektivna_refrakcia?.ax, idx)}\n                                            onChange={e => handleParameterChange(e, idx, objektivna_refrakcia, setObjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, objektivna_refrakcia?.ax, objektivna_refrakcia, setObjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>SE</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='se'\n                                            type='text'\n                                            value={checkParameter(objektivna_refrakcia?.se, idx)}\n                                            onChange={e => handleParameterChange(e, idx, objektivna_refrakcia, setObjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, objektivna_refrakcia?.se, objektivna_refrakcia, setObjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                        </ObjectiveRefTable>\n\n                        <h4>Subjektivná refrakcia</h4>\n\n                        <SubjectiveRefTable>\n                            <TableTitleCol>\n                                <Col>{\"-\"}</Col>\n                                <Col>P.</Col>\n                                <Col>L.</Col>\n                            </TableTitleCol>\n\n                            <TableCol>\n                                <Col>SPH</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='sph'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.sph, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.sph, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>CYL</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='cyl'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.cyl, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.cyl, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>AX</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='ax'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.ax, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.ax, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>ADD</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='add'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.add, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.add, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>V.ISUS</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='visus'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.visus, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.visus, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>V.BINO</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='vbino'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.vbino, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.vbino, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>PRIZMA</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='prizma'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.prizma, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.prizma, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>BASIS</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='basis'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.basis, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.basis, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n                            <TableCol>\n                                <Col>OS</Col>\n                                {[...Array(2)].map((value, idx) => (\n                                    <Col key={idx}>\n                                        <input\n                                            name='os'\n                                            type='text'\n                                            value={checkParameter(subjektivna_refrakcia?.os, idx)}\n                                            onChange={e => handleParameterChange(e, idx, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                            onBlur={(e) => formatParameters(e, subjektivna_refrakcia?.os, subjektivna_refrakcia, setSubjektivna_refrakcia)}\n                                        />\n                                    </Col>\n                                ))}\n                            </TableCol>\n\n                        </SubjectiveRefTable>\n\n                        <InputContainer>\n                            <CustomTextarea\n                                label='Doporučenia'\n                                name=\"doporucenia\"\n                                value={examinationObj?.doporucenia || \"\"}\n                                rows=\"5\"\n                                handleChange={handleChange}\n                            />\n                        </InputContainer>\n                        {/* doporucenia */}\n                    </Container>\n                )}\n\n                {activeExamType === 2 && (\n                    <Container>\n                        <h4>Anamnéza</h4>\n                    </Container>\n                )}\n\n                {activeExamType === 3 && (\n                    <Container>\n                        <h4>Kontrola</h4>\n                    </Container>\n                )}\n\n                <SubmitButton onClick={handleSubmit}>{examinationToUpdate ? \"Uložiť\" : \"Odoslať prehliadku\"}</SubmitButton>\n            </Modal>\n        </ModalContainer>\n    ), document.getElementById('portal'))\n}\n\nexport default OptometristExaminationModal\n\nconst examTypes = [\n    {\n        name: \"Refrakcia\",\n        value: 1\n    },\n    {\n        name: \"Anamnéza\",\n        value: 2\n    },\n    {\n        name: \"Kontrola\",\n        value: 3\n    },\n]","/imooptik-frontend/src/components/order-cart-row/order-cart-row.styles.jsx",["831"],"import styled from 'styled-components'\nimport CustomCheckbox from '../custom-checkbox/custom-checkbox.component'\n\n\n\nexport const TableCol = styled.div`\n    padding: 2rem;\n    text-align: center;\n\n    input {\n        text-align: end;\n        background-color: var(--input-background-color);\n        color: var(--input-color);\n        font-size: 1.5rem;\n        padding: 1rem 1rem 1rem 2rem;\n        display: block;\n        width: 100%;\n        border: none;\n        border-radius: .5rem;\n        /* border-bottom: 1px solid #000; */\n        font-family: inherit;\n    }\n\n`\n\nexport const CartTableRow = styled.div`\n    display:grid; \n    align-items: center;\n    grid-template-columns: 5rem 2fr 2fr 2fr 1fr;\n    background-color: var(--background-primary-color);\n    /* border: .05rem solid var(--secondary-text-color); */\n\n    &:hover  ${TableCol}{\n        position: relative;\n        :nth-of-type(1) {\n            cursor: pointer;\n            ::after {\n                content: \"X\";\n                position: absolute;\n                padding: .5rem 1rem;\n                border-radius: 50%;\n                left: 50%;\n                top: 50%;\n                transform: translate(-50%, -50%);\n                background-color: var(--color-red);\n                color: var(--button-font-color);\n                font-size: 1.2rem;\n            }\n        }\n    }\n`\n\nexport const IconContainer = styled.div`\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--primary-color);\n    font-size: 2rem;\n`\n\nexport const OptionsContainer = styled.div`\n    grid-column: 1/6;\n\n`\n\nexport const CustomSelect = styled.select`\n    margin-top: 1.5rem;\n    min-width: 16.5rem;\n    width: 100%;\n    background-color: var(--input-background-color);\n    color: var(--input-color);\n    border: none;\n    padding: .5rem .5rem .5rem 1rem;\n    font-size: inherit;\n    font-family: inherit;\n    display: block;\n    outline: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const ContactLensesParameterContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 2rem;\n    margin: 0 1rem 2rem;\n    padding: 0 1rem;\n`\n\nexport const EmptyTittle = styled.h4`\n    padding: 0 2rem;\n    opacity: .6;\n`","/imooptik-frontend/src/components/modal-finish-order/modal-finish-order.styles.jsx",[],"/imooptik-frontend/src/components/modal-optometrist-examination/modal-optometrist-examination.styles.jsx",[],"/imooptik-frontend/src/components/examination-user/examination-user.styles.jsx",[],{"ruleId":"832","replacedBy":"833"},{"ruleId":"834","replacedBy":"835"},{"ruleId":"836","severity":1,"message":"837","line":237,"column":8,"nodeType":"838","endLine":237,"endColumn":15,"suggestions":"839"},{"ruleId":"836","severity":1,"message":"840","line":795,"column":8,"nodeType":"838","endLine":795,"endColumn":31,"suggestions":"841"},{"ruleId":"836","severity":1,"message":"842","line":825,"column":8,"nodeType":"838","endLine":825,"endColumn":22,"suggestions":"843"},{"ruleId":"836","severity":1,"message":"844","line":153,"column":8,"nodeType":"838","endLine":153,"endColumn":34,"suggestions":"845"},{"ruleId":"836","severity":1,"message":"846","line":96,"column":8,"nodeType":"838","endLine":96,"endColumn":19,"suggestions":"847"},{"ruleId":"836","severity":1,"message":"848","line":109,"column":8,"nodeType":"838","endLine":109,"endColumn":21,"suggestions":"849"},{"ruleId":"836","severity":1,"message":"850","line":138,"column":8,"nodeType":"838","endLine":138,"endColumn":43,"suggestions":"851"},{"ruleId":"836","severity":1,"message":"852","line":395,"column":8,"nodeType":"838","endLine":395,"endColumn":26,"suggestions":"853"},{"ruleId":"836","severity":1,"message":"854","line":402,"column":8,"nodeType":"838","endLine":402,"endColumn":26,"suggestions":"855"},{"ruleId":"836","severity":1,"message":"856","line":419,"column":8,"nodeType":"838","endLine":419,"endColumn":72,"suggestions":"857"},{"ruleId":"836","severity":1,"message":"858","line":435,"column":8,"nodeType":"838","endLine":435,"endColumn":26,"suggestions":"859"},{"ruleId":"836","severity":1,"message":"860","line":444,"column":8,"nodeType":"838","endLine":444,"endColumn":37,"suggestions":"861"},{"ruleId":"836","severity":1,"message":"862","line":456,"column":8,"nodeType":"838","endLine":456,"endColumn":10,"suggestions":"863"},{"ruleId":"836","severity":1,"message":"864","line":87,"column":8,"nodeType":"838","endLine":87,"endColumn":21,"suggestions":"865"},{"ruleId":"836","severity":1,"message":"866","line":88,"column":8,"nodeType":"838","endLine":88,"endColumn":21,"suggestions":"867"},{"ruleId":"836","severity":1,"message":"866","line":110,"column":8,"nodeType":"838","endLine":110,"endColumn":21,"suggestions":"868"},{"ruleId":"836","severity":1,"message":"869","line":116,"column":8,"nodeType":"838","endLine":116,"endColumn":29,"suggestions":"870"},{"ruleId":"836","severity":1,"message":"850","line":131,"column":8,"nodeType":"838","endLine":131,"endColumn":10,"suggestions":"871"},{"ruleId":"836","severity":1,"message":"872","line":71,"column":8,"nodeType":"838","endLine":71,"endColumn":12,"suggestions":"873"},{"ruleId":"836","severity":1,"message":"874","line":88,"column":8,"nodeType":"838","endLine":88,"endColumn":14,"suggestions":"875"},{"ruleId":"836","severity":1,"message":"876","line":101,"column":8,"nodeType":"838","endLine":101,"endColumn":10,"suggestions":"877"},{"ruleId":"878","severity":1,"message":"879","line":6,"column":8,"nodeType":"880","messageId":"881","endLine":6,"endColumn":21},{"ruleId":"878","severity":1,"message":"882","line":14,"column":8,"nodeType":"880","messageId":"881","endLine":14,"endColumn":26},{"ruleId":"836","severity":1,"message":"883","line":166,"column":8,"nodeType":"838","endLine":166,"endColumn":19,"suggestions":"884"},{"ruleId":"836","severity":1,"message":"885","line":182,"column":8,"nodeType":"838","endLine":182,"endColumn":10,"suggestions":"886"},{"ruleId":"836","severity":1,"message":"887","line":95,"column":8,"nodeType":"838","endLine":95,"endColumn":64,"suggestions":"888"},{"ruleId":"836","severity":1,"message":"889","line":101,"column":8,"nodeType":"838","endLine":101,"endColumn":28,"suggestions":"890"},{"ruleId":"836","severity":1,"message":"891","line":110,"column":8,"nodeType":"838","endLine":110,"endColumn":10,"suggestions":"892"},{"ruleId":"878","severity":1,"message":"893","line":1,"column":17,"nodeType":"880","messageId":"881","endLine":1,"endColumn":25},{"ruleId":"836","severity":1,"message":"894","line":43,"column":8,"nodeType":"838","endLine":43,"endColumn":17,"suggestions":"895"},{"ruleId":"836","severity":1,"message":"896","line":88,"column":8,"nodeType":"838","endLine":88,"endColumn":18,"suggestions":"897"},{"ruleId":"836","severity":1,"message":"898","line":98,"column":8,"nodeType":"838","endLine":98,"endColumn":21,"suggestions":"899"},{"ruleId":"836","severity":1,"message":"900","line":163,"column":8,"nodeType":"838","endLine":163,"endColumn":20,"suggestions":"901"},{"ruleId":"878","severity":1,"message":"902","line":5,"column":21,"nodeType":"880","messageId":"881","endLine":5,"endColumn":27},{"ruleId":"878","severity":1,"message":"903","line":46,"column":12,"nodeType":"880","messageId":"881","endLine":46,"endColumn":22},{"ruleId":"836","severity":1,"message":"904","line":140,"column":8,"nodeType":"838","endLine":140,"endColumn":38,"suggestions":"905"},{"ruleId":"836","severity":1,"message":"906","line":146,"column":8,"nodeType":"838","endLine":146,"endColumn":12,"suggestions":"907"},{"ruleId":"836","severity":1,"message":"908","line":168,"column":8,"nodeType":"838","endLine":168,"endColumn":10,"suggestions":"909"},{"ruleId":"836","severity":1,"message":"910","line":42,"column":8,"nodeType":"838","endLine":42,"endColumn":18,"suggestions":"911"},{"ruleId":"836","severity":1,"message":"912","line":48,"column":8,"nodeType":"838","endLine":48,"endColumn":10,"suggestions":"913"},{"ruleId":"836","severity":1,"message":"914","line":29,"column":8,"nodeType":"838","endLine":29,"endColumn":19,"suggestions":"915"},{"ruleId":"836","severity":1,"message":"914","line":42,"column":8,"nodeType":"838","endLine":42,"endColumn":25,"suggestions":"916"},{"ruleId":"836","severity":1,"message":"917","line":37,"column":8,"nodeType":"838","endLine":37,"endColumn":22,"suggestions":"918"},{"ruleId":"836","severity":1,"message":"919","line":79,"column":8,"nodeType":"838","endLine":79,"endColumn":28,"suggestions":"920"},{"ruleId":"836","severity":1,"message":"919","line":118,"column":8,"nodeType":"838","endLine":118,"endColumn":32,"suggestions":"921"},{"ruleId":"922","severity":1,"message":"923","line":148,"column":41,"nodeType":"924","endLine":148,"endColumn":61},{"ruleId":"922","severity":1,"message":"923","line":189,"column":45,"nodeType":"924","endLine":189,"endColumn":160},{"ruleId":"878","severity":1,"message":"925","line":6,"column":10,"nodeType":"880","messageId":"881","endLine":6,"endColumn":16},{"ruleId":"836","severity":1,"message":"926","line":64,"column":8,"nodeType":"838","endLine":64,"endColumn":19,"suggestions":"927"},{"ruleId":"928","severity":1,"message":"929","line":229,"column":44,"nodeType":"930","messageId":"931","endLine":229,"endColumn":50},{"ruleId":"928","severity":1,"message":"929","line":113,"column":40,"nodeType":"930","messageId":"931","endLine":113,"endColumn":46},{"ruleId":"878","severity":1,"message":"932","line":6,"column":10,"nodeType":"880","messageId":"881","endLine":6,"endColumn":22},{"ruleId":"928","severity":1,"message":"929","line":181,"column":44,"nodeType":"930","messageId":"931","endLine":181,"endColumn":50},{"ruleId":"836","severity":1,"message":"852","line":24,"column":8,"nodeType":"838","endLine":24,"endColumn":13,"suggestions":"933"},{"ruleId":"928","severity":1,"message":"929","line":263,"column":64,"nodeType":"930","messageId":"931","endLine":263,"endColumn":70},{"ruleId":"928","severity":1,"message":"929","line":10,"column":32,"nodeType":"930","messageId":"931","endLine":10,"endColumn":38},{"ruleId":"878","severity":1,"message":"934","line":20,"column":5,"nodeType":"880","messageId":"881","endLine":20,"endColumn":16},{"ruleId":"928","severity":1,"message":"929","line":63,"column":52,"nodeType":"930","messageId":"931","endLine":63,"endColumn":58},{"ruleId":"878","severity":1,"message":"925","line":7,"column":10,"nodeType":"880","messageId":"881","endLine":7,"endColumn":16},{"ruleId":"836","severity":1,"message":"852","line":57,"column":8,"nodeType":"838","endLine":57,"endColumn":31,"suggestions":"935"},{"ruleId":"836","severity":1,"message":"854","line":64,"column":8,"nodeType":"838","endLine":64,"endColumn":19,"suggestions":"936"},{"ruleId":"836","severity":1,"message":"937","line":87,"column":8,"nodeType":"838","endLine":87,"endColumn":19,"suggestions":"938"},{"ruleId":"836","severity":1,"message":"852","line":91,"column":8,"nodeType":"838","endLine":91,"endColumn":15,"suggestions":"939"},{"ruleId":"836","severity":1,"message":"852","line":44,"column":8,"nodeType":"838","endLine":44,"endColumn":15,"suggestions":"940"},{"ruleId":"836","severity":1,"message":"852","line":50,"column":8,"nodeType":"838","endLine":50,"endColumn":18,"suggestions":"941"},{"ruleId":"836","severity":1,"message":"937","line":65,"column":8,"nodeType":"838","endLine":65,"endColumn":19,"suggestions":"942"},{"ruleId":"928","severity":1,"message":"929","line":39,"column":55,"nodeType":"930","messageId":"931","endLine":39,"endColumn":61},{"ruleId":"928","severity":1,"message":"929","line":40,"column":53,"nodeType":"930","messageId":"931","endLine":40,"endColumn":59},{"ruleId":"928","severity":1,"message":"929","line":41,"column":54,"nodeType":"930","messageId":"931","endLine":41,"endColumn":60},{"ruleId":"928","severity":1,"message":"929","line":42,"column":123,"nodeType":"930","messageId":"931","endLine":42,"endColumn":129},{"ruleId":"836","severity":1,"message":"943","line":98,"column":8,"nodeType":"838","endLine":98,"endColumn":19,"suggestions":"944"},{"ruleId":"836","severity":1,"message":"945","line":73,"column":8,"nodeType":"838","endLine":73,"endColumn":19,"suggestions":"946"},{"ruleId":"836","severity":1,"message":"947","line":72,"column":8,"nodeType":"838","endLine":72,"endColumn":19,"suggestions":"948"},{"ruleId":"836","severity":1,"message":"949","line":58,"column":8,"nodeType":"838","endLine":58,"endColumn":15,"suggestions":"950"},{"ruleId":"836","severity":1,"message":"951","line":69,"column":8,"nodeType":"838","endLine":69,"endColumn":21,"suggestions":"952"},{"ruleId":"836","severity":1,"message":"953","line":15,"column":8,"nodeType":"838","endLine":15,"endColumn":13,"suggestions":"954"},{"ruleId":"928","severity":1,"message":"929","line":83,"column":40,"nodeType":"930","messageId":"931","endLine":83,"endColumn":46},{"ruleId":"836","severity":1,"message":"955","line":80,"column":8,"nodeType":"838","endLine":80,"endColumn":36,"suggestions":"956"},{"ruleId":"836","severity":1,"message":"957","line":41,"column":8,"nodeType":"838","endLine":41,"endColumn":104,"suggestions":"958"},{"ruleId":"836","severity":1,"message":"959","line":41,"column":9,"nodeType":"960","endLine":41,"endColumn":31},{"ruleId":"836","severity":1,"message":"959","line":41,"column":33,"nodeType":"960","endLine":41,"endColumn":55},{"ruleId":"836","severity":1,"message":"959","line":41,"column":57,"nodeType":"960","endLine":41,"endColumn":79},{"ruleId":"836","severity":1,"message":"959","line":41,"column":81,"nodeType":"960","endLine":41,"endColumn":103},{"ruleId":"878","severity":1,"message":"961","line":6,"column":5,"nodeType":"880","messageId":"881","endLine":6,"endColumn":17},{"ruleId":"836","severity":1,"message":"962","line":58,"column":8,"nodeType":"838","endLine":58,"endColumn":35,"suggestions":"963"},{"ruleId":"928","severity":1,"message":"929","line":166,"column":50,"nodeType":"930","messageId":"931","endLine":166,"endColumn":56},{"ruleId":"836","severity":1,"message":"964","line":130,"column":8,"nodeType":"838","endLine":130,"endColumn":13,"suggestions":"965"},{"ruleId":"928","severity":1,"message":"929","line":269,"column":71,"nodeType":"930","messageId":"931","endLine":269,"endColumn":77},{"ruleId":"878","severity":1,"message":"966","line":20,"column":12,"nodeType":"880","messageId":"881","endLine":20,"endColumn":29},{"ruleId":"836","severity":1,"message":"967","line":43,"column":8,"nodeType":"838","endLine":43,"endColumn":19,"suggestions":"968"},{"ruleId":"836","severity":1,"message":"852","line":48,"column":8,"nodeType":"838","endLine":48,"endColumn":30,"suggestions":"969"},{"ruleId":"836","severity":1,"message":"970","line":35,"column":8,"nodeType":"838","endLine":35,"endColumn":19,"suggestions":"971"},{"ruleId":"878","severity":1,"message":"903","line":29,"column":12,"nodeType":"880","messageId":"881","endLine":29,"endColumn":22},{"ruleId":"836","severity":1,"message":"904","line":114,"column":8,"nodeType":"838","endLine":114,"endColumn":38,"suggestions":"972"},{"ruleId":"836","severity":1,"message":"906","line":120,"column":8,"nodeType":"838","endLine":120,"endColumn":16,"suggestions":"973"},{"ruleId":"836","severity":1,"message":"974","line":148,"column":8,"nodeType":"838","endLine":148,"endColumn":27,"suggestions":"975"},{"ruleId":"836","severity":1,"message":"976","line":44,"column":8,"nodeType":"838","endLine":44,"endColumn":23,"suggestions":"977"},{"ruleId":"878","severity":1,"message":"978","line":29,"column":5,"nodeType":"880","messageId":"881","endLine":29,"endColumn":15},{"ruleId":"878","severity":1,"message":"979","line":37,"column":13,"nodeType":"880","messageId":"881","endLine":37,"endColumn":30},{"ruleId":"878","severity":1,"message":"980","line":37,"column":32,"nodeType":"880","messageId":"881","endLine":37,"endColumn":49},{"ruleId":"836","severity":1,"message":"962","line":129,"column":8,"nodeType":"838","endLine":129,"endColumn":56,"suggestions":"981"},{"ruleId":"878","severity":1,"message":"982","line":2,"column":8,"nodeType":"880","messageId":"881","endLine":2,"endColumn":22},"no-native-reassign",["983"],"no-negated-in-lhs",["984"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStats'. Either include it or remove the dependency array.","ArrayExpression",["985"],"React Hook useEffect has missing dependencies: 'getLenses', 'getProductsByQuery', 'productCategoryTypeTabs', and 'products'. Either include them or remove the dependency array.",["986"],"React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array. You can also do a functional update 'setProduct(p => ...)' if you only need 'product' in the 'setProduct' call.",["987"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["988"],"React Hook useEffect has missing dependencies: 'closeModal' and 'response'. Either include them or remove the dependency array.",["989"],"React Hook useEffect has missing dependencies: 'activeIndex' and 'refetch'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilterQuery' needs the current value of 'activeIndex'.",["990"],"React Hook useEffect has a missing dependency: 'closeModal'. Either include it or remove the dependency array.",["991"],"React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["992"],"React Hook useEffect has a missing dependency: 'response?.filters'. Either include it or remove the dependency array.",["993"],"React Hook useEffect has missing dependencies: 'getEanCode' and 'handleChange'. Either include them or remove the dependency array.",["994"],"React Hook useEffect has missing dependencies: 'getSingleProduct', 'handleChangeType', and 'productObj.type'. Either include them or remove the dependency array.",["995"],"React Hook useEffect has a missing dependency: 'setSelectedImage'. Either include it or remove the dependency array.",["996"],"React Hook useEffect has missing dependencies: 'resetContactLenses', 'resetGlassesParameters', 'resetLenses', 'resetProduct', and 'setSelectedImage'. Either include them or remove the dependency array.",["997"],"React Hook useEffect has a missing dependency: 'getAnalytics'. Either include it or remove the dependency array.",["998"],"React Hook useEffect has a missing dependency: 'blogsData'. Either include it or remove the dependency array.",["999"],["1000"],"React Hook useEffect has a missing dependency: 'blogsData.response?.blogs'. Either include it or remove the dependency array.",["1001"],["1002"],"React Hook useEffect has missing dependencies: 'getPost' and 'setSelectedImage'. Either include them or remove the dependency array.",["1003"],"React Hook useEffect has missing dependencies: 'id' and 'setSelectedImage'. Either include them or remove the dependency array.",["1004"],"React Hook useEffect has a missing dependency: 'resetBlog'. Either include it or remove the dependency array.",["1005"],"no-unused-vars","'SectionHeader' is defined but never used.","Identifier","unusedVar","'BookingAppoinments' is defined but never used.","React Hook useEffect has missing dependencies: 'closeModal', 'currentUser.premises', 'handleShowCalendarClick', 'isAdmin', 'response', and 'setShowModal'. Either include them or remove the dependency array.",["1006"],"React Hook useEffect has missing dependencies: 'closeModal' and 'setShowModal'. Either include them or remove the dependency array.",["1007"],"React Hook useEffect has missing dependencies: 'addUser', 'changeStep', 'order', and 'setOrder'. Either include them or remove the dependency array.",["1008"],"React Hook useEffect has missing dependencies: 'addUser' and 'userData.response.user'. Either include them or remove the dependency array.",["1009"],"React Hook useEffect has missing dependencies: 'changeStep' and 'resetOrder'. Either include them or remove the dependency array.",["1010"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getCoupons'. Either include it or remove the dependency array.",["1011"],"React Hook useEffect has a missing dependency: 'getProductsByQuery'. Either include it or remove the dependency array.",["1012"],"React Hook useEffect has missing dependencies: 'activeCategoryTypeTab', 'getProductsByQuery', and 'products'. Either include them or remove the dependency array.",["1013"],"React Hook useEffect has missing dependencies: 'closeModal' and 'response.calendar'. Either include them or remove the dependency array.",["1014"],"'Prompt' is defined but never used.","'hasChanges' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'user.fName', 'user.lName', and 'userObj'. Either include them or remove the dependency array. You can also do a functional update 'setUserObj(u => ...)' if you only need 'userObj' in the 'setUserObj' call.",["1015"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["1016"],"React Hook useEffect has missing dependencies: 'handleChange' and 'resetUser'. Either include them or remove the dependency array.",["1017"],"React Hook useEffect has a missing dependency: 'getCoupon'. Either include it or remove the dependency array.",["1018"],"React Hook useEffect has a missing dependency: 'resetCoupons'. Either include it or remove the dependency array.",["1019"],"React Hook useEffect has a missing dependency: 'currentPage'. Either include it or remove the dependency array.",["1020"],["1021"],"React Hook useEffect has missing dependencies: 'path', 'requestOptions', and 'skip'. Either include them or remove the dependency array.",["1022"],"React Hook useEffect has missing dependencies: 'requestOptions' and 'skip'. Either include them or remove the dependency array.",["1023"],["1024"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'brands' is defined but never used.","React Hook useEffect has a missing dependency: 'product.brand'. Either include it or remove the dependency array.",["1025"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'lensesBrands' is defined but never used.",["1026"],"'ThreeColRow' is defined but never used.",["1027"],["1028"],"React Hook useEffect has missing dependencies: 'firstDayIndex', 'lastDay', 'month', 'nextDays', 'response.calendar', and 'year'. Either include them or remove the dependency array.",["1029"],["1030"],["1031"],["1032"],["1033"],"React Hook useEffect has missing dependencies: 'response.calendar.endTimes', 'response.calendar.interval', and 'response.calendar.startTimes'. Either include them or remove the dependency array.",["1034"],"React Hook useEffect has a missing dependency: 'response.lenses'. Either include it or remove the dependency array.",["1035"],"React Hook useEffect has a missing dependency: 'response.products'. Either include it or remove the dependency array.",["1036"],"React Hook useEffect has a missing dependency: 'getFilteredUsers'. Either include it or remove the dependency array.",["1037"],"React Hook useEffect has missing dependencies: 'getFilteredUsers' and 'users'. Either include them or remove the dependency array.",["1038"],"React Hook useEffect has a missing dependency: 'action'. Either include it or remove the dependency array. If 'action' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1039"],"React Hook useEffect has a missing dependency: 'response?.booking'. Either include it or remove the dependency array.",["1040"],"React Hook useEffect has missing dependencies: 'handleChange', 'parameters.addition', and 'parameters.diopters'. Either include them or remove the dependency array. If 'handleChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1041"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'DeleteButton' is defined but never used.","React Hook useEffect has a missing dependency: 'examinationData.response'. Either include it or remove the dependency array.",["1042"],"React Hook useEffect has a missing dependency: 'calendar'. Either include it or remove the dependency array. If 'setStartTime' needs the current value of 'calendar', you can also switch to useReducer instead of useState and read 'calendar' in the reducer.",["1043"],"'isBelongToAnother' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'response?.userBookings' and 'userBookings?.dueDate'. Either include them or remove the dependency array.",["1044"],["1045"],"React Hook useEffect has missing dependencies: 'response' and 'userBooking.userBookings.dueDate'. Either include them or remove the dependency array.",["1046"],["1047"],["1048"],"React Hook useEffect has a missing dependency: 'handleOrderDetailChange'. Either include it or remove the dependency array.",["1049"],"React Hook useEffect has missing dependencies: 'addLensesParameters' and 'idx'. Either include them or remove the dependency array.",["1050"],"'TableBlock' is defined but never used.","'createExamination' is assigned a value but never used.","'updateExamination' is assigned a value but never used.",["1051"],"'CustomCheckbox' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1052","fix":"1053"},{"desc":"1054","fix":"1055"},{"desc":"1056","fix":"1057"},{"desc":"1058","fix":"1059"},{"desc":"1060","fix":"1061"},{"desc":"1062","fix":"1063"},{"desc":"1064","fix":"1065"},{"desc":"1066","fix":"1067"},{"desc":"1068","fix":"1069"},{"desc":"1070","fix":"1071"},{"desc":"1072","fix":"1073"},{"desc":"1074","fix":"1075"},{"desc":"1076","fix":"1077"},{"desc":"1078","fix":"1079"},{"desc":"1080","fix":"1081"},{"desc":"1082","fix":"1083"},{"desc":"1084","fix":"1085"},{"desc":"1086","fix":"1087"},{"desc":"1088","fix":"1089"},{"desc":"1090","fix":"1091"},{"desc":"1092","fix":"1093"},{"desc":"1094","fix":"1095"},{"desc":"1096","fix":"1097"},{"desc":"1098","fix":"1099"},{"desc":"1100","fix":"1101"},{"desc":"1102","fix":"1103"},{"desc":"1104","fix":"1105"},{"desc":"1106","fix":"1107"},{"desc":"1108","fix":"1109"},{"desc":"1110","fix":"1111"},{"desc":"1112","fix":"1113"},{"desc":"1114","fix":"1115"},{"desc":"1116","fix":"1117"},{"desc":"1118","fix":"1119"},{"desc":"1120","fix":"1121"},{"desc":"1122","fix":"1123"},{"desc":"1124","fix":"1125"},{"desc":"1126","fix":"1127"},{"desc":"1128","fix":"1129"},{"desc":"1130","fix":"1131"},{"desc":"1132","fix":"1133"},{"desc":"1134","fix":"1135"},{"desc":"1136","fix":"1137"},{"desc":"1138","fix":"1139"},{"desc":"1140","fix":"1141"},{"desc":"1142","fix":"1143"},{"desc":"1142","fix":"1144"},{"desc":"1145","fix":"1146"},{"desc":"1140","fix":"1147"},{"desc":"1148","fix":"1149"},{"desc":"1150","fix":"1151"},{"desc":"1152","fix":"1153"},{"desc":"1154","fix":"1155"},{"desc":"1156","fix":"1157"},{"desc":"1158","fix":"1159"},{"desc":"1160","fix":"1161"},{"desc":"1162","fix":"1163"},{"desc":"1164","fix":"1165"},{"desc":"1166","fix":"1167"},{"desc":"1168","fix":"1169"},{"desc":"1170","fix":"1171"},{"desc":"1172","fix":"1173"},{"desc":"1112","fix":"1174"},{"desc":"1175","fix":"1176"},{"desc":"1177","fix":"1178"},{"desc":"1179","fix":"1180"},{"desc":"1181","fix":"1182"},"Update the dependencies array to be: [getStats, token]",{"range":"1183","text":"1184"},"Update the dependencies array to be: [activeCategoryTypeTab, getLenses, getProductsByQuery, productCategoryTypeTabs, products]",{"range":"1185","text":"1186"},"Update the dependencies array to be: [product, product.name]",{"range":"1187","text":"1188"},"Update the dependencies array to be: [user, user?.fName, user?.lName]",{"range":"1189","text":"1190"},"Update the dependencies array to be: [closeModal, isLoading, response]",{"range":"1191","text":"1192"},"Update the dependencies array to be: [activeIndex, refetch, searchQuery]",{"range":"1193","text":"1194"},"Update the dependencies array to be: [isFetching, response, activeIndex, closeModal]",{"range":"1195","text":"1196"},"Update the dependencies array to be: [productObj?.type, refetch]",{"range":"1197","text":"1198"},"Update the dependencies array to be: [isLoadingFilters, response?.filters]",{"range":"1199","text":"1200"},"Update the dependencies array to be: [id, eanCode, productObj.type, productObj.eanCode, product.type, getEanCode, handleChange]",{"range":"1201","text":"1202"},"Update the dependencies array to be: [getSingleProduct, handleChangeType, id, product.type, productObj.type]",{"range":"1203","text":"1204"},"Update the dependencies array to be: [product.image, lenses.image, setSelectedImage]",{"range":"1205","text":"1206"},"Update the dependencies array to be: [resetContactLenses, resetGlassesParameters, resetLenses, resetProduct, setSelectedImage]",{"range":"1207","text":"1208"},"Update the dependencies array to be: [activeIndex, getAnalytics]",{"range":"1209","text":"1210"},"Update the dependencies array to be: [blogsData, searchQuery]",{"range":"1211","text":"1212"},"Update the dependencies array to be: [activeIndex, blogsData]",{"range":"1213","text":"1214"},"Update the dependencies array to be: [blogsData.isLoading, blogsData.response?.blogs]",{"range":"1215","text":"1216"},"Update the dependencies array to be: [closeModal]",{"range":"1217","text":"1218"},"Update the dependencies array to be: [getPost, id, setSelectedImage]",{"range":"1219","text":"1220"},"Update the dependencies array to be: [id, post, setSelectedImage]",{"range":"1221","text":"1222"},"Update the dependencies array to be: [resetBlog]",{"range":"1223","text":"1224"},"Update the dependencies array to be: [closeModal, currentUser.premises, handleShowCalendarClick, isAdmin, isLoading, response, setShowModal]",{"range":"1225","text":"1226"},"Update the dependencies array to be: [closeModal, setShowModal]",{"range":"1227","text":"1228"},"Update the dependencies array to be: [userId, orderId, userData.response, orderData.response, changeStep, addUser, setOrder, order]",{"range":"1229","text":"1230"},"Update the dependencies array to be: [addUser, userData.isLoading, userData.response.user]",{"range":"1231","text":"1232"},"Update the dependencies array to be: [changeStep, resetOrder]",{"range":"1233","text":"1234"},"Update the dependencies array to be: [coupons, getCoupons]",{"range":"1235","text":"1236"},"Update the dependencies array to be: [getProductsByQuery, products]",{"range":"1237","text":"1238"},"Update the dependencies array to be: [activeCategoryTypeTab, getProductsByQuery, products, searchQuery]",{"range":"1239","text":"1240"},"Update the dependencies array to be: [closeModal, isFetching, response.calendar]",{"range":"1241","text":"1242"},"Update the dependencies array to be: [user.fName, user.lName, userObj, userObj.fName, userObj.lName]",{"range":"1243","text":"1244"},"Update the dependencies array to be: [getUser, id]",{"range":"1245","text":"1246"},"Update the dependencies array to be: [handleChange, resetUser]",{"range":"1247","text":"1248"},"Update the dependencies array to be: [couponId, getCoupon]",{"range":"1249","text":"1250"},"Update the dependencies array to be: [resetCoupons]",{"range":"1251","text":"1252"},"Update the dependencies array to be: [currentPage, listItems]",{"range":"1253","text":"1254"},"Update the dependencies array to be: [currentPage, handleClickPrev]",{"range":"1255","text":"1256"},"Update the dependencies array to be: [path, refetchIndex, requestOptions, skip]",{"range":"1257","text":"1258"},"Update the dependencies array to be: [refetchIndex, path, skip, requestOptions]",{"range":"1259","text":"1260"},"Update the dependencies array to be: [refetchIndex, path, id, skip, requestOptions]",{"range":"1261","text":"1262"},"Update the dependencies array to be: [isBranded, product.brand]",{"range":"1263","text":"1264"},"Update the dependencies array to be: [day, refetch]",{"range":"1265","text":"1266"},"Update the dependencies array to be: [filter?.filters?.type, refetch]",{"range":"1267","text":"1268"},"Update the dependencies array to be: [isLoading, response?.filters]",{"range":"1269","text":"1270"},"Update the dependencies array to be: [firstDayIndex, isLoading, lastDay, month, nextDays, response.calendar, year]",{"range":"1271","text":"1272"},"Update the dependencies array to be: [month, refetch]",{"range":"1273","text":"1274"},{"range":"1275","text":"1274"},"Update the dependencies array to be: [calendar, refetch]",{"range":"1276","text":"1277"},{"range":"1278","text":"1272"},"Update the dependencies array to be: [isLoading, response.calendar.endTimes, response.calendar.interval, response.calendar.startTimes]",{"range":"1279","text":"1280"},"Update the dependencies array to be: [isLoading, response.lenses]",{"range":"1281","text":"1282"},"Update the dependencies array to be: [isLoading, response.products]",{"range":"1283","text":"1284"},"Update the dependencies array to be: [getFilteredUsers, users]",{"range":"1285","text":"1286"},"Update the dependencies array to be: [getFilteredUsers, searchQuery, users]",{"range":"1287","text":"1288"},"Update the dependencies array to be: [action, ref]",{"range":"1289","text":"1290"},"Update the dependencies array to be: [selectedBooking, isLoading, response?.booking]",{"range":"1291","text":"1292"},"Update the dependencies array to be: [handleChange, parameters.addition, parameters.diopters]",{"range":"1293","text":"1294"},"Update the dependencies array to be: [examinationData.isLoading, examinationData.response]",{"range":"1295","text":"1296"},"Update the dependencies array to be: [calendar, day]",{"range":"1297","text":"1298"},"Update the dependencies array to be: [isLoading, response?.userBookings, userBookings?.dueDate]",{"range":"1299","text":"1300"},"Update the dependencies array to be: [dayData?.bookingDate, refetch]",{"range":"1301","text":"1302"},"Update the dependencies array to be: [isLoading, response, userBooking.userBookings.dueDate]",{"range":"1303","text":"1304"},{"range":"1305","text":"1244"},"Update the dependencies array to be: [getUser, userId]",{"range":"1306","text":"1307"},"Update the dependencies array to be: [handleOrderDetailChange, isUpdating, order]",{"range":"1308","text":"1309"},"Update the dependencies array to be: [addLensesParameters, contactLenses, idx]",{"range":"1310","text":"1311"},"Update the dependencies array to be: [examinationToUpdate, examinationData.isLoading, examinationData.response]",{"range":"1312","text":"1313"},[6464,6471],"[getStats, token]",[23306,23329],"[activeCategoryTypeTab, getLenses, getProductsByQuery, productCategoryTypeTabs, products]",[24140,24154],"[product, product.name]",[3487,3513],"[user, user?.fName, user?.lName]",[2619,2630],"[closeModal, isLoading, response]",[2908,2921],"[activeIndex, refetch, searchQuery]",[3745,3780],"[isFetching, response, activeIndex, closeModal]",[12249,12267],"[productObj?.type, refetch]",[12421,12439],"[isLoadingFilters, response?.filters]",[12887,12951],"[id, eanCode, productObj.type, productObj.eanCode, product.type, getEanCode, handleChange]",[13334,13352],"[getSingleProduct, handleChangeType, id, product.type, productObj.type]",[13548,13577],"[product.image, lenses.image, setSelectedImage]",[13863,13865],"[resetContactLenses, resetGlassesParameters, resetLenses, resetProduct, setSelectedImage]",[2898,2911],"[activeIndex, getAnalytics]",[2315,2328],"[blogsData, searchQuery]",[2831,2844],"[activeIndex, blogsData]",[2970,2991],"[blogsData.isLoading, blogsData.response?.blogs]",[3312,3314],"[closeModal]",[2219,2223],"[getPost, id, setSelectedImage]",[2715,2721],"[id, post, setSelectedImage]",[3015,3017],"[resetBlog]",[6101,6112],"[closeModal, currentUser.premises, handleShowCalendarClick, isAdmin, isLoading, response, setShowModal]",[6586,6588],"[closeModal, setShowModal]",[2926,2982],"[userId, orderId, userData.response, orderData.response, changeStep, addUser, setOrder, order]",[3094,3114],"[addUser, userData.isLoading, userData.response.user]",[3310,3312],"[changeStep, resetOrder]",[1193,1202],"[coupons, getCoupons]",[2680,2690],"[getProductsByQuery, products]",[2919,2932],"[activeCategoryTypeTab, getProductsByQuery, products, searchQuery]",[4828,4840],"[closeModal, isFetching, response.calendar]",[3609,3639],"[user.fName, user.lName, userObj, userObj.fName, userObj.lName]",[3743,3747],"[getUser, id]",[4477,4479],"[handleChange, resetUser]",[1197,1207],"[couponId, getCoupon]",[1299,1301],"[resetCoupons]",[694,705],"[currentPage, listItems]",[1003,1020],"[currentPage, handleClickPrev]",[1192,1206],"[path, refetchIndex, requestOptions, skip]",[2507,2527],"[refetchIndex, path, skip, requestOptions]",[3754,3778],"[refetchIndex, path, id, skip, requestOptions]",[1473,1484],"[isBranded, product.brand]",[610,615],"[day, refetch]",[1569,1592],"[filter?.filters?.type, refetch]",[1739,1750],"[isLoading, response?.filters]",[2939,2950],"[firstDayIndex, isLoading, lastDay, month, nextDays, response.calendar, year]",[3000,3007],"[month, refetch]",[1086,1093],[1181,1191],"[calendar, refetch]",[1722,1733],[3694,3705],"[isLoading, response.calendar.endTimes, response.calendar.interval, response.calendar.startTimes]",[1956,1967],"[isLoading, response.lenses]",[1911,1922],"[isLoading, response.products]",[1353,1360],"[getFilteredUsers, users]",[1594,1607],"[getFilteredUsers, searchQuery, users]",[467,472],"[action, ref]",[2158,2186],"[selectedBooking, isLoading, response?.booking]",[1541,1637],"[handleChange, parameters.addition, parameters.diopters]",[1801,1828],"[examinationData.isLoading, examinationData.response]",[3405,3410],"[calendar, day]",[1696,1707],"[isLoading, response?.userBookings, userBookings?.dueDate]",[1799,1821],"[dayData?.bookingDate, refetch]",[1039,1050],"[isLoading, response, userBooking.userBookings.dueDate]",[2840,2870],[2962,2970],"[getUser, userId]",[3704,3723],"[handleOrderDetailChange, isUpdating, order]",[1141,1156],"[addLensesParameters, contactLenses, idx]",[3692,3740],"[examinationToUpdate, examinationData.isLoading, examinationData.response]"]